uint64_t sub_249E1B958()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_249E1B9B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  os_signpost_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  const char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(_QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  int *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint8_t *v98;
  os_signpost_id_t v99;
  void *v100;
  uint64_t v101;
  id v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t *v108;
  id v109;
  uint64_t *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  _BOOL4 v124;
  _QWORD *v125;
  void *v126;
  uint64_t inited;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  void *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t);
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t (*v142)(void);
  uint64_t v143;
  uint64_t v144;
  void *v145;
  void *v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  uint64_t v153;
  size_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v160;
  os_log_type_t v161;
  _BOOL4 v162;
  uint8_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  void *v173;
  uint64_t v174;
  size_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint8_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint8_t *v195;
  NSObject *v196;
  os_signpost_id_t v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  id v201;
  id v202;
  void *v203;
  id v204;
  void *v205;
  os_signpost_id_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t *v218;
  id v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t *v224;
  NSObject *v225;
  os_log_type_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  id v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  NSObject *v248;
  os_signpost_type_t v249;
  void (*v250)(uint64_t, uint64_t, uint64_t);
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint8_t *v254;
  os_signpost_id_t v255;
  uint8_t *v256;
  void *v257;
  uint64_t v258;
  uint64_t v259;
  id v260;
  uint64_t *v261;
  uint64_t v262;
  id v263;
  _QWORD *v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void (*v275)(uint64_t, uint64_t);
  uint64_t v276;
  void *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  void (*v281)(void);
  uint64_t (*v282)(uint64_t, uint64_t, uint64_t);
  void *v283;
  uint64_t *v284;
  char v285;
  id v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  char v292;
  void (*v293)(size_t);
  void (*v294)(uint64_t, uint64_t, uint64_t);
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint8_t *v298;
  NSObject *v299;
  os_signpost_type_t v300;
  os_signpost_id_t v301;
  uint64_t v302;
  size_t v303;
  os_signpost_id_t v304;
  os_signpost_type_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  size_t v309;
  uint64_t v310;
  uint64_t v311;
  void *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  char v319;
  uint64_t v320;
  void *v321;
  void *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  void (*v329)(uint64_t *);
  void *v330;
  uint64_t v331;
  void (*v332)(uint64_t, uint64_t);
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t (*v336)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v337)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v338;
  unint64_t v339;
  uint64_t *v340;
  uint64_t v341;
  _QWORD *v342;
  uint8_t *buf;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t v349;
  os_log_type_t v350;
  os_log_type_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t *v355;
  os_log_type_t v356;
  uint64_t v357;
  _QWORD *v358;
  const void *v359;
  uint64_t v360;
  uint64_t v361;
  void (*v362)(uint64_t, uint64_t);
  NSObject *v363;
  void (*v364)(uint64_t, uint64_t);
  const void *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t (*v368)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v369[2];
  _QWORD v370[3];

  v1 = v0;
  v2 = v0[133];
  v347 = v0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[149] + 48))(v2, 1, v0[148]) == 1)
  {
    sub_249DC0A2C(v0[122]);
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_249DCC2FC(v2, &qword_2578D9730);
    goto LABEL_13;
  }
  v3 = v0[151];
  v4 = v0[150];
  sub_249D9E308(v2, v3, type metadata accessor for Concept);
  sub_249DC091C(v3, v4, type metadata accessor for Concept);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = v0[150];
  if (EnumCaseMultiPayload == 4)
  {
    v7 = v0[141];
    v8 = v0[140];
    v9 = v0[138];
    sub_249D9E308(v6, v1[141], type metadata accessor for NamedEntityData);
    sub_249DC091C(v7 + *(int *)(v8 + 20), v9, type metadata accessor for NamedEntityData.NamedEntityType);
    v10 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10) != 1)
    {
      v26 = v1[177];
      v27 = v1[176];
      v17 = v1[151];
      v28 = v347[141];
      v29 = v347[138];
      v30 = v347[122];
      swift_bridgeObjectRelease();
      sub_249DC05A8(v29, type metadata accessor for NamedEntityData.NamedEntityType);
      sub_249E17EE8(v17, v27, v26);
      sub_249DC0A2C(v30);
      swift_release_n();
      v31 = v28;
      v1 = v347;
      sub_249DC05A8(v31, type metadata accessor for NamedEntityData);
      goto LABEL_11;
    }
    v11 = v1[138];
    sub_249DC05A8(v1[141], type metadata accessor for NamedEntityData);
    v12 = type metadata accessor for NamedEntityData.NamedEntityType;
    v6 = v11;
  }
  else
  {
    v12 = type metadata accessor for Concept;
  }
  sub_249DC05A8(v6, v12);
  v13 = *((unsigned __int8 *)v1 + 1577);
  v14 = v1[180];
  if (v13 == 3)
  {
    v15 = v1[177];
    v16 = v1[176];
    v17 = v1[151];
    v18 = v347[122];
    swift_bridgeObjectRelease();
    sub_249E17EE8(v17, v16, v15);
    v1 = v347;
    sub_249DC0A2C(v18);
    swift_release_n();
LABEL_11:
    v25 = v17;
    goto LABEL_12;
  }
  v19 = v1[179];
  v20 = v1[177];
  v21 = v1[176];
  v22 = v1[152];
  v23 = v347[151];
  v24 = v347[122];
  *(_QWORD *)v22 = v19;
  *(_QWORD *)(v22 + 8) = v14;
  *(_BYTE *)(v22 + 16) = v13;
  swift_storeEnumTagMultiPayload();
  sub_249E17EE8(v22, v21, v20);
  sub_249DC0A2C(v24);
  swift_release_n();
  sub_249DC05A8(v22, type metadata accessor for Concept);
  v25 = v23;
  v1 = v347;
LABEL_12:
  sub_249DC05A8(v25, type metadata accessor for Concept);
LABEL_13:
  v341 = v1[181];
  v32 = v1[175] + 1;
  if (v32 != v1[174])
  {
    v339 = (unint64_t)(v1 + 110);
    v340 = v1 + 111;
    v338 = 1;
    while (1)
    {
      v1[175] = v32;
      v42 = (_QWORD *)(v1[173] + 24 * v32);
      v43 = v42[4];
      v1[176] = v43;
      v44 = v42[5];
      v1[177] = v44;
      v45 = v42[6];
      v1[178] = v45;
      swift_retain();
      result = sub_249F1F79C();
      if ((v47 & 1) != 0)
        goto LABEL_138;
      v48 = sub_249F1F4D8();
      v49 = MEMORY[0x24BD04FE0](v48);
      v51 = v50;
      swift_bridgeObjectRelease();
      v1[179] = v49;
      v1[180] = v51;
      v52 = *(_BYTE *)(v45 + 32);
      *((_BYTE *)v1 + 1577) = v52;
      type metadata accessor for EntityExtractor.NamedEntity();
      v53 = swift_dynamicCastClass();
      if (!v53)
        break;
      v366 = v51;
      if ((v1[126] & 1) == 0)
      {
        v54 = v1[152];
        v55 = v54 + *(int *)(v1[140] + 20);
        v56 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
        v57 = v55;
        v1 = v347;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v57, 1, 1, v56);
        *(_QWORD *)v54 = v49;
        *(_QWORD *)(v54 + 8) = v51;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        sub_249E17EE8(v54, v43, v44);
        swift_release_n();
LABEL_24:
        v58 = v54;
        v59 = type metadata accessor for Concept;
        goto LABEL_28;
      }
      v60 = v53;
      v61 = *(_QWORD *)(v53 + 40);
      v62 = *(_QWORD *)(v61 + 16);
      if (v62 != 1)
      {
        swift_retain();
        v76 = v341;
        if (!v62)
          goto LABEL_34;
        goto LABEL_32;
      }
      v63 = v1[147];
      v64 = v1[144];
      v65 = *(unsigned __int8 *)(v1[145] + 80);
      sub_249DC091C(v61 + ((v65 + 32) & ~v65), v63, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      if ((*(_BYTE *)(v63 + *(int *)(v64 + 20)) & 1) != 0)
      {
        v80 = v1[147];
        swift_retain();
        sub_249DC05A8(v80, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
        v81 = *(_QWORD *)(*(_QWORD *)(v60 + 40) + 16);
        v76 = v341;
        if (!v81)
        {
LABEL_34:
          v82 = (uint64_t *)v1[152];
          v83 = v1[149];
          v84 = (char *)v82 + *(int *)(v1[140] + 20);
          v85 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
          v86 = v84;
          v76 = v341;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v86, 1, 1, v85);
          *v82 = v49;
          v82[1] = v366;
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D88);
          v87 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
          v78 = v1;
          v79 = swift_allocObject();
          *(_OWORD *)(v79 + 16) = xmmword_249F21770;
          sub_249D9E308((uint64_t)v82, v79 + v87, type metadata accessor for Concept);
          swift_bridgeObjectRetain();
LABEL_35:
          v78[182] = v79;
          v78[181] = v76;
          if (v78[120] != 1)
          {
            v88 = (int *)v78[122];
            if (v88)
            {
              v78[112] = v79;
              v368 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)v88 + *v88);
              swift_retain();
              v317 = (_QWORD *)swift_task_alloc();
              v78[183] = (uint64_t)v317;
              *v317 = v78;
              v317[1] = sub_249E1B958;
              return v368(v78[133], v78[116], v78[117], v43, v44, v78 + 112);
            }
          }
          v341 = v76;
          swift_bridgeObjectRelease();
          if (qword_2578D5D30 != -1)
            swift_once();
          v89 = (void *)v347[172];
          v90 = qword_2578FF358;
          v347[111] = v79;
          v1 = v347;
          objc_msgSend(v89, sel_addAttribute_value_range_, v90, sub_249F1FEF8(), v43, v44);
          swift_release_n();
          swift_unknownObjectRelease();
          goto LABEL_29;
        }
LABEL_32:
        swift_bridgeObjectRetain();
        v77 = swift_bridgeObjectRetain();
        v78 = v1;
        v79 = sub_249E218C0(v77, v49, v366);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      v355 = (uint64_t *)v1[172];
      v345 = v1[152];
      v66 = v1[147];
      v360 = v66;
      v67 = v1[146];
      v344 = v1[143];
      v68 = (uint64_t *)v1[142];
      v342 = (_QWORD *)v1[144];
      buf = (uint8_t *)v1[140];
      v69 = v1[139];
      v70 = v347[137];
      v71 = v347[135];
      v72 = v347[134];
      sub_249DC091C(v66, v67, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      *v68 = v49;
      v68[1] = v366;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v70, v67, v72);
      v73 = *(_BYTE *)(v67 + *((int *)v342 + 5));
      swift_retain();
      sub_249DC05A8(v67, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      v74 = v70;
      v1 = v347;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v69, v74, v72);
      v75 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
      *(_BYTE *)(v69 + *(int *)(v75 + 20)) = v73;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v69, 0, 1, v75);
      sub_249D9E308(v69, (uint64_t)v68 + *((int *)buf + 5), type metadata accessor for NamedEntityData.NamedEntityType);
      sub_249D9E308((uint64_t)v68, v344, type metadata accessor for NamedEntityData);
      sub_249DC091C(v344, v345, type metadata accessor for NamedEntityData);
      swift_storeEnumTagMultiPayload();
      sub_249E17EE8(v345, v43, v44);
      swift_release_n();
      sub_249DC05A8(v345, type metadata accessor for Concept);
      sub_249DC05A8(v344, type metadata accessor for NamedEntityData);
      v58 = v360;
      v59 = (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData;
LABEL_28:
      sub_249DC05A8(v58, v59);
LABEL_29:
      v32 = v1[175] + 1;
      if (v32 == v1[174])
        goto LABEL_14;
    }
    v54 = v1[152];
    *(_QWORD *)v54 = v49;
    *(_QWORD *)(v54 + 8) = v51;
    *(_BYTE *)(v54 + 16) = v52;
    swift_storeEnumTagMultiPayload();
    sub_249E17EE8(v54, v43, v44);
    swift_release();
    goto LABEL_24;
  }
LABEL_14:
  v33 = (uint64_t)(v1 + 109);
  swift_bridgeObjectRelease();
  v34 = sub_249F1EEC0();
  v35 = swift_task_alloc();
  sub_249F1EEF0();
  v36 = sub_249F1F898();
  v359 = v1 + 18;
  v365 = v1 + 109;
  if ((sub_249F1F958() & 1) != 0)
  {
    v37 = sub_249F1EEE4();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v39, v37);
    if (MEMORY[0x24BEE7808] && v40 == *MEMORY[0x24BEE7808])
    {
      v41 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
      v41 = "";
    }
    v1 = v347;
    v94 = (void (*)(uint64_t, uint64_t, uint64_t))v347[164];
    v95 = v347[159];
    v96 = v347[158];
    swift_task_dealloc();
    v97 = swift_task_alloc();
    v94(v97, v35, v96);
    v98 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v98 = 0;
    v99 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v34, v36, v99, "buildEntityConcepts", v41, v98, 2u);
    MEMORY[0x24BD06618](v98, -1, -1);

    v93 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
    v93(v35, v96);
    v93(v97, v96);
    swift_task_dealloc();
    v33 = (uint64_t)v365;
  }
  else
  {
    v91 = v1[159];
    v92 = v1[158];

    v93 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    v93(v35, v92);
  }
  v1[184] = (uint64_t)v93;
  swift_task_dealloc();
  v1[109] = MEMORY[0x24BEE4AF8];
  if (qword_2578D5D30 != -1)
    swift_once();
  v100 = (void *)v1[172];
  v101 = qword_2578FF358;
  v102 = objc_msgSend(v100, sel_length);
  v103 = v1;
  v104 = swift_allocObject();
  v103[185] = v104;
  *(_QWORD *)(v104 + 16) = v33;
  *(_QWORD *)(v104 + 24) = v100;
  v105 = swift_allocObject();
  *(_QWORD *)(v105 + 16) = sub_249E21754;
  *(_QWORD *)(v105 + 24) = v104;
  v103[22] = (uint64_t)sub_249E0E908;
  v103[23] = v105;
  v106 = MEMORY[0x24BDAC760];
  v103[18] = MEMORY[0x24BDAC760];
  v103[19] = 1107296256;
  v103[20] = (uint64_t)sub_249E1F944;
  v103[21] = (uint64_t)&block_descriptor_2;
  v107 = _Block_copy(v359);
  v108 = (uint64_t *)v103[23];
  v109 = v100;
  swift_retain();
  swift_release();
  objc_msgSend(v109, sel_enumerateAttribute_inRange_options_usingBlock_, v101, 0, v102, 0, v107);
  _Block_release(v107);
  LOBYTE(v101) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v101 & 1) != 0)
  {
    __break(1u);
    goto LABEL_133;
  }
  if (*(_QWORD *)(*(_QWORD *)v33 + 16))
  {
    v110 = v347;
    v111 = sub_249F1EF20();
    v112 = sub_249F1F820();
    if (os_log_type_enabled(v111, v112))
    {
      v356 = v112;
      v113 = (uint8_t *)swift_slowAlloc();
      v348 = swift_slowAlloc();
      v369[0] = v348;
      *(_DWORD *)v113 = 136380675;
      swift_beginAccess();
      v114 = v347[109];
      v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9738);
      v347[39] = v115;
      v116 = sub_249DDFC68(&qword_2578D9740, &qword_2578D9738, MEMORY[0x24BEE12C8]);
      v347[40] = v116;
      v347[36] = v114;
      __swift_project_boxed_opaque_existential_1(v347 + 36, v115);
      v117 = (_QWORD *)swift_task_alloc();
      v117[2] = v115;
      v117[3] = v116;
      v117[4] = sub_249E72DE8;
      v117[5] = 0;
      swift_bridgeObjectRetain_n();
      v119 = sub_249E2262C((void (*)(char *, char *))sub_249E21784, (uint64_t)v117, v115, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v116, MEMORY[0x24BEE40A8], v118);
      swift_task_dealloc();
      v347[106] = v119;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
      sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
      v120 = sub_249F1F280();
      v122 = v121;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v347 + 36));
      swift_bridgeObjectRelease();
      v347[105] = sub_249E68CA8(v120, v122, v369);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249D98000, v111, v356, "Unresolved ambiguities: %{private}s", v113, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v348, -1, -1);
      MEMORY[0x24BD06618](v113, -1, -1);

    }
    else
    {

    }
    v135 = (void *)v347[172];
    swift_beginAccess();
    v136 = v347[109];
    sub_249E11A64();
    swift_allocError();
    *(_QWORD *)v137 = v136;
    *(_BYTE *)(v137 + 8) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
LABEL_54:
    swift_release();
    v335 = 0;
    v336 = 0;
    v337 = 0;
LABEL_55:
    v138 = (void (*)(uint64_t, uint64_t))v110[184];
    v139 = v110[161];
    v140 = v110;
    v141 = v110[158];
    sub_249DDDF68("validateText", 12, 2);
    swift_release();
    v138(v139, v141);
    swift_release();
    sub_249DC0A2C(v335);
    sub_249DC0A2C((uint64_t)v336);
    sub_249DC0A2C((uint64_t)v337);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v142 = (uint64_t (*)(void))v140[1];
    return v142();
  }
  v110 = v347;
  v123 = v347[124];
  v33 = v347[126] & 2;
  v124 = (v33 | v123) != 0;
  v125 = (_QWORD *)swift_allocObject();
  v347[186] = (uint64_t)v125;
  v125[2] = 0;
  v125[3] = 0;
  LODWORD(buf) = v124;
  if (v123)
  {
    v126 = (void *)v347[172];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79D0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249F21770;
    *(_QWORD *)(inited + 32) = 0x74706D6F7270;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v128 = objc_msgSend(v126, sel_string);
    v129 = sub_249F1F328();
    v131 = v130;

    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v129;
    *(_QWORD *)(inited + 56) = v131;
    v132 = sub_249DAE8D4(inited);
    v133 = sub_249EA69C0(v132);
    if (v341)
    {
      v134 = (void *)v347[172];
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
    v144 = v133;
    swift_bridgeObjectRelease();
    v125[2] = 0;
    v125[3] = v144;
    swift_bridgeObjectRelease();
    v143 = 0;
    v124 = (v33 | v123) != 0;
  }
  else
  {
    v143 = v341;
  }
  v355 = v347 + 104;
  v341 = v143;
  v342 = v125;
  v338 = (uint64_t)v93;
  v340 = (uint64_t *)v123;
  if (!v124)
  {
    v339 = v33;
    v156 = 0;
    v157 = 0;
    goto LABEL_80;
  }
  v145 = v347 + 24;
  v146 = v347 + 99;
  v347[99] = MEMORY[0x24BEE4B08];
  if (qword_2578D5D38 != -1)
    goto LABEL_135;
  while (1)
  {
    v147 = (void *)v110[172];
    v349 = qword_2578FF360;
    v148 = objc_msgSend(v147, sel_length);
    v149 = swift_allocObject();
    *(_QWORD *)(v149 + 16) = v146;
    *(_QWORD *)(v149 + 24) = v147;
    v150 = swift_allocObject();
    *(_QWORD *)(v150 + 16) = sub_249E218A8;
    *(_QWORD *)(v150 + 24) = v149;
    v361 = v149;
    v110[28] = (uint64_t)sub_249E21DAC;
    v110[29] = v150;
    v110[24] = v106;
    v110[25] = 1107296256;
    v110[26] = (uint64_t)sub_249E1F944;
    v110[27] = (uint64_t)&block_descriptor_41;
    v151 = _Block_copy(v145);
    v152 = v147;
    swift_retain();
    swift_release();
    objc_msgSend(v152, sel_enumerateAttribute_inRange_options_usingBlock_, v349, 0, v148, 0, v151);
    _Block_release(v151);
    LOBYTE(v148) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v148 & 1) != 0)
    {
      __break(1u);
      goto LABEL_137;
    }
    if (*(_QWORD *)(*(_QWORD *)v146 + 16))
    {
      v110 = v347;
      if (v125[3])
      {
        v153 = swift_bridgeObjectRetain();
        v154 = sub_249DBE258(v153);
        swift_bridgeObjectRelease();
        v347[70] = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
        v347[67] = v154;
        sub_249DCA7E4((uint64_t)(v347 + 67), (uint64_t)(v347 + 59));
        v155 = v341;
        JSONValue.init(_:)(v347 + 59, v370);
        if (v341)
        {

          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v347 + 67));
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_74:
          swift_release();
          v336 = 0;
          v337 = 0;
          v177 = sub_249E218A8;
LABEL_117:
          v335 = (uint64_t)v177;
          goto LABEL_55;
        }
        v158 = v370[0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v369[0] = v125[3];
        v125[3] = 0x8000000000000000;
        sub_249DD1B3C(v158, 0xD000000000000010, 0x8000000249F35CB0, isUniquelyReferenced_nonNull_native);
        v125[3] = v369[0];
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v347 + 67));
      }
      else
      {
        v155 = v341;
      }
      v160 = sub_249F1EF20();
      v161 = sub_249F1F820();
      v162 = os_log_type_enabled(v160, v161);
      if (v33)
      {
        if (v162)
        {
          v350 = v161;
          v163 = (uint8_t *)swift_slowAlloc();
          v346 = swift_slowAlloc();
          v369[0] = v346;
          *(_DWORD *)v163 = 136380675;
          swift_beginAccess();
          v164 = v347[99];
          v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9750);
          v347[44] = v165;
          v166 = sub_249DDFC68(&qword_2578D9758, &qword_2578D9750, MEMORY[0x24BEE1718]);
          v347[45] = v166;
          v347[41] = v164;
          __swift_project_boxed_opaque_existential_1(v347 + 41, v165);
          v167 = (_QWORD *)swift_task_alloc();
          v167[2] = v165;
          v167[3] = v166;
          v167[4] = sub_249E72DE8;
          v167[5] = 0;
          swift_bridgeObjectRetain_n();
          v169 = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)v167, v165, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v166, MEMORY[0x24BEE40A8], v168);
          swift_task_dealloc();
          v347[107] = v169;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
          sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
          v170 = sub_249F1F280();
          v172 = v171;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v347 + 41));
          v110 = v347;
          swift_bridgeObjectRelease();
          v347[108] = sub_249E68CA8(v170, v172, v369);
          sub_249F1F9AC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_249D98000, v160, v350, "Disallowed concepts: %{private}s", v163, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24BD06618](v346, -1, -1);
          MEMORY[0x24BD06618](v163, -1, -1);
        }

        v173 = (void *)v110[172];
        swift_beginAccess();
        v174 = swift_bridgeObjectRetain();
        v175 = sub_249DBE258(v174);
        swift_bridgeObjectRelease();
        sub_249E11A64();
        swift_allocError();
        *(_QWORD *)v176 = v175;
        *(_BYTE *)(v176 + 8) = 3;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();

        swift_release();
        goto LABEL_74;
      }
      if (v162)
      {
        v351 = v161;
        v178 = (uint8_t *)swift_slowAlloc();
        v367 = swift_slowAlloc();
        v369[0] = v367;
        *(_DWORD *)v178 = 136380675;
        swift_beginAccess();
        v179 = v347[99];
        v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9750);
        v347[49] = v180;
        v181 = sub_249DDFC68(&qword_2578D9758, &qword_2578D9750, MEMORY[0x24BEE1718]);
        v347[50] = v181;
        v347[46] = v179;
        __swift_project_boxed_opaque_existential_1(v347 + 46, v180);
        v182 = (_QWORD *)swift_task_alloc();
        v182[2] = v180;
        v182[3] = v181;
        v182[4] = sub_249E72DE8;
        v182[5] = 0;
        swift_bridgeObjectRetain_n();
        v184 = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)v182, v180, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v181, MEMORY[0x24BEE40A8], v183);
        v341 = v155;
        swift_task_dealloc();
        v347[102] = v184;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
        sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
        v185 = sub_249F1F280();
        v187 = v186;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v347 + 46));
        v110 = v347;
        swift_bridgeObjectRelease();
        v347[103] = sub_249E68CA8(v185, v187, v369);
        sub_249F1F9AC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_249D98000, v160, v351, "Disallowed concepts: %{private}s", v178, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v367, -1, -1);
        MEMORY[0x24BD06618](v178, -1, -1);
      }
      else
      {
        v341 = v155;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v110 = v347;
    }
    v339 = v33;
    v156 = sub_249E218A8;
    v157 = v361;
LABEL_80:
    v365 = v110 + 30;
    v110[188] = v157;
    v110[187] = (uint64_t)v156;
    v188 = v347[172];
    v362 = (void (*)(uint64_t, uint64_t))v347[170];
    v189 = (void (*)(uint64_t, uint64_t, uint64_t))v347[169];
    v190 = v347[163];
    v191 = v347[162];
    v352 = v191;
    v192 = v347[117];
    v193 = v347[116];
    v194 = swift_task_alloc();
    v189(v194, v190, v191);
    v195 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v195 = 0;
    v196 = sub_249F1EEC0();
    LOBYTE(v189) = sub_249F1F8A4();
    v197 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v196, (os_signpost_type_t)v189, v197, "buildNounEmojiConcepts", "", v195, 2u);
    v198 = swift_task_alloc();
    *(_QWORD *)(v198 + 16) = v188;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9748);
    v199 = swift_allocObject();
    *(_OWORD *)(v199 + 16) = xmmword_249F21770;
    v200 = (void *)*MEMORY[0x24BDDFD00];
    *(_QWORD *)(v199 + 32) = *MEMORY[0x24BDDFD00];
    v201 = objc_allocWithZone(MEMORY[0x24BDDFD68]);
    type metadata accessor for NLTagScheme(0);
    v202 = v200;
    v203 = (void *)sub_249F1F538();
    swift_bridgeObjectRelease();
    v204 = objc_msgSend(v201, sel_initWithTagSchemes_, v203);

    v205 = (void *)sub_249F1F304();
    objc_msgSend(v204, sel_setString_, v205);

    v33 = swift_task_alloc();
    *(_QWORD *)(v33 + 16) = v193;
    *(_QWORD *)(v33 + 24) = v192;
    *(_QWORD *)(v33 + 32) = sub_249E217C8;
    *(_QWORD *)(v33 + 40) = v198;
    v108 = v347;
    sub_249F1F928();

    swift_task_dealloc();
    swift_task_dealloc();
    LOBYTE(v204) = sub_249F1F898();
    v206 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v196, (os_signpost_type_t)v204, v206, "buildNounEmojiConcepts", "", v195, 2u);

    MEMORY[0x24BD06618](v195, -1, -1);
    v362(v194, v352);
    swift_task_dealloc();
    v347[104] = MEMORY[0x24BEE4AF8];
    if (qword_2578D5D38 != -1)
LABEL_133:
      swift_once();
    v145 = (void *)v108[172];
    v207 = qword_2578FF360;
    v208 = objc_msgSend(v145, sel_length);
    v209 = swift_allocObject();
    v108[189] = v209;
    *(_QWORD *)(v209 + 16) = v355;
    v210 = swift_allocObject();
    *(_QWORD *)(v210 + 16) = sub_249E21804;
    *(_QWORD *)(v210 + 24) = v209;
    v108[34] = (uint64_t)sub_249E21DAC;
    v108[35] = v210;
    v106 = MEMORY[0x24BDAC760];
    v108[30] = MEMORY[0x24BDAC760];
    v108[31] = 1107296256;
    v108[32] = (uint64_t)sub_249E1F944;
    v108[33] = (uint64_t)&block_descriptor_19;
    v146 = _Block_copy(v365);
    v125 = v108;
    v110 = (uint64_t *)v108[35];
    swift_retain();
    swift_release();
    objc_msgSend(v145, sel_enumerateAttribute_inRange_options_usingBlock_, v207, 0, v208, 0, v146);
    _Block_release(v146);
    LOBYTE(v207) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v207 & 1) == 0)
      break;
    __break(1u);
LABEL_135:
    swift_once();
  }
  v211 = (void *)v125[172];
  v212 = swift_bridgeObjectRetain();
  v213 = sub_249E72A58(v212);
  swift_bridgeObjectRelease();
  v125[104] = v213;
  swift_bridgeObjectRelease();
  v214 = objc_msgSend(v211, sel_string);
  sub_249F1F328();

  v215 = v125[104];
  v216 = *(_QWORD *)(v215 + 16);
  v217 = v125;
  if (v216)
  {
    swift_bridgeObjectRetain();
    v218 = (uint64_t *)(v215 + 16 * v216 + 24);
    v357 = v215;
    while (v216 <= *(_QWORD *)(v215 + 16))
    {
      v221 = *(v218 - 1);
      v222 = *v218;
      sub_249F1F79C();
      if ((v223 & 1) == 0)
      {
        v224 = v217;
        swift_bridgeObjectRetain_n();
        v225 = sub_249F1EF20();
        v226 = sub_249F1F808();
        v363 = v225;
        if (os_log_type_enabled(v225, v226))
        {
          v227 = swift_slowAlloc();
          v353 = swift_slowAlloc();
          v369[0] = v353;
          *(_DWORD *)v227 = 136380931;
          v228 = sub_249F1F4D8();
          v229 = MEMORY[0x24BD04FE0](v228);
          v231 = v230;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v227 + 4) = sub_249E68CA8(v229, v231, v369);
          v217 = v347;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v227 + 12) = 2080;
          *(_QWORD *)(v227 + 14) = sub_249E68CA8(0x6E6F73726570, 0xE600000000000000, v369);
          _os_log_impl(&dword_249D98000, v363, v226, "Replacing unknown named entity string \"%{private}s\" with \"%s\"", (uint8_t *)v227, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24BD06618](v353, -1, -1);
          MEMORY[0x24BD06618](v227, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n();

          v217 = v224;
        }
        v219 = objc_msgSend((id)v217[172], sel_mutableString);
        v220 = (void *)sub_249F1F304();
        objc_msgSend(v219, sel_replaceCharactersInRange_withString_, v221, v222, v220);

        v215 = v357;
      }
      v218 -= 2;
      if (!--v216)
        goto LABEL_92;
    }
    __break(1u);
LABEL_92:
    swift_bridgeObjectRelease();
    v106 = MEMORY[0x24BDAC760];
  }
  swift_bridgeObjectRelease();
  v232 = v217[154];
  v233 = v217[135];
  v234 = v217[134];
  sub_249DCC274(v217[119], v232, &qword_2578D6288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))(v232, 1, v234) == 1)
  {
    sub_249DCC2FC(v217[154], &qword_2578D6288);
  }
  else
  {
    v235 = (void *)v217[172];
    v236 = v217[154];
    v237 = (_QWORD *)v217[152];
    v238 = v347[140];
    v239 = v347[136];
    v240 = v347[135];
    v241 = v347[134];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v240 + 32))(v239, v236, v241);
    v242 = (char *)v237 + *(int *)(v238 + 20);
    (*(void (**)(char *, uint64_t, uint64_t))(v240 + 16))(v242, v239, v241);
    v243 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
    v242[*(int *)(v243 + 20)] = 0;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v243 - 8) + 56))(v242, 0, 1, v243);
    *v237 = 0x6E6F73726570;
    v237[1] = 0xE600000000000000;
    swift_storeEnumTagMultiPayload();
    v244 = objc_msgSend(v235, sel_mutableString);
    v245 = (void *)sub_249F1F304();
    objc_msgSend(v244, sel_insertString_atIndex_, v245, 0);

    v217 = v347;
    v246 = sub_249F1F424();
    sub_249E17EE8((uint64_t)v237, 0, v246);
    sub_249DC05A8((uint64_t)v237, type metadata accessor for Concept);
    (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v239, v241);
  }
  v247 = (uint64_t)v342;
  if (!(_DWORD)buf)
  {
    v257 = (void *)v217[172];
    v258 = v217[132];
    v259 = MEMORY[0x24BEE4B08];
    v217[101] = MEMORY[0x24BEE4B08];
    v217[100] = v259;
    v260 = objc_msgSend(v257, sel_string);
    sub_249F1F328();
    v261 = v217;

    sub_249F1E6A4();
    sub_249F1E65C();
    v262 = qword_2578FF360;
    v263 = objc_msgSend(v257, sel_length);
    v264 = (_QWORD *)swift_allocObject();
    v358 = v217 + 100;
    v264[2] = v217 + 100;
    v264[3] = v258;
    v264[4] = v217 + 101;
    v265 = swift_allocObject();
    *(_QWORD *)(v265 + 16) = sub_249E2182C;
    *(_QWORD *)(v265 + 24) = v264;
    v217[16] = (uint64_t)sub_249E21DAC;
    v217[17] = v265;
    v217[12] = v106;
    v217[13] = 1107296256;
    v217[14] = (uint64_t)sub_249E1F944;
    v217[15] = (uint64_t)&block_descriptor_29;
    v266 = _Block_copy(v217 + 12);
    swift_retain();
    swift_release();
    objc_msgSend(v257, sel_enumerateAttribute_inRange_options_usingBlock_, v262, 0, v263, 0, v266);
    _Block_release(v266);
    LOBYTE(v257) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v257 & 1) == 0)
    {
      v267 = v217[186];
      swift_beginAccess();
      if (*(_QWORD *)(v267 + 24))
      {
        v268 = (uint64_t)(v217 + 71);
        v269 = v217[131];
        v270 = v217[130];
        v271 = v217[129];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v270 + 16))(v269, v217[132], v271);
        sub_249E21848();
        v272 = sub_249F1E74C();
        v274 = v273;
        v275 = *(void (**)(uint64_t, uint64_t))(v270 + 8);
        v275(v269, v271);
        v347[74] = MEMORY[0x24BEE0D00];
        v347[71] = v272;
        v217 = v347;
        v347[72] = v274;
        sub_249DCA7E4((uint64_t)(v261 + 71), (uint64_t)(v261 + 63));
        JSONValue.init(_:)(v261 + 63, v370);
        v276 = v347[186];
        if (v341)
        {
          v277 = (void *)v347[172];
          v278 = v347[132];
          v279 = v347[129];
          __swift_destroy_boxed_opaque_existential_1(v268);
          swift_endAccess();

          swift_release();
          v280 = v278;
          v110 = v347;
          v275(v280, v279);
LABEL_115:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_116:
          swift_release();
          v336 = sub_249E21804;
          v337 = sub_249E2182C;
          v177 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v110[187];
          goto LABEL_117;
        }
        v291 = v370[0];
        v292 = swift_isUniquelyReferenced_nonNull_native();
        v369[0] = *(_QWORD *)(v276 + 24);
        *(_QWORD *)(v276 + 24) = 0x8000000000000000;
        sub_249DD1B3C(v291, 0x65746E656D677561, 0xEF74706D6F725064, v292);
        *(_QWORD *)(v276 + 24) = v369[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v261 + 71));
        v341 = 0;
      }
      else
      {
        swift_endAccess();
      }
      v293 = (void (*)(size_t))v217[120];
      if ((unint64_t)v293 >= 2)
      {
        v364 = (void (*)(uint64_t, uint64_t))v217[170];
        v294 = (void (*)(uint64_t, uint64_t, uint64_t))v217[169];
        v295 = v217[163];
        v296 = v217[162];
        v354 = v296;
        v297 = swift_task_alloc();
        v294(v297, v295, v296);
        swift_retain();
        v298 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v298 = 0;
        v299 = sub_249F1EEC0();
        v300 = sub_249F1F8A4();
        v301 = sub_249F1EE84();
        _os_signpost_emit_with_name_impl(&dword_249D98000, v299, v300, v301, "reportConcepts", "", v298, 2u);
        v302 = swift_bridgeObjectRetain();
        v303 = sub_249DBE258(v302);
        swift_bridgeObjectRelease();
        v293(v303);
        swift_release();
        LOBYTE(v303) = sub_249F1F898();
        v304 = sub_249F1EE84();
        v305 = v303;
        v217 = v347;
        _os_signpost_emit_with_name_impl(&dword_249D98000, v299, v305, v304, "reportConcepts", "", v298, 2u);

        MEMORY[0x24BD06618](v298, -1, -1);
        sub_249DC0A2C((uint64_t)v293);
        v364(v297, v354);
        swift_task_dealloc();
      }
      v306 = v217[186];
      swift_beginAccess();
      if (*(_QWORD *)(v306 + 24))
      {
        v307 = (uint64_t)(v217 + 51);
        v308 = swift_bridgeObjectRetain();
        v309 = sub_249DBE258(v308);
        swift_bridgeObjectRelease();
        v217[54] = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
        v217[51] = v309;
        sub_249DCA7E4((uint64_t)(v217 + 51), (uint64_t)(v217 + 55));
        v310 = v341;
        JSONValue.init(_:)(v217 + 55, v370);
        v311 = v217[186];
        if (v341)
        {
          v312 = (void *)v217[172];
          v313 = v347[132];
          v314 = v347[130];
          v315 = v347[129];
          __swift_destroy_boxed_opaque_existential_1(v307);
          swift_endAccess();

          swift_release();
          v316 = v313;
          v110 = v347;
          (*(void (**)(uint64_t, uint64_t))(v314 + 8))(v316, v315);
          goto LABEL_115;
        }
        v318 = v370[0];
        v319 = swift_isUniquelyReferenced_nonNull_native();
        v369[0] = *(_QWORD *)(v311 + 24);
        *(_QWORD *)(v311 + 24) = 0x8000000000000000;
        sub_249DD1B3C(v318, 0xD000000000000012, 0x8000000249F33B90, v319);
        *(_QWORD *)(v311 + 24) = v369[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v217 + 51));
      }
      else
      {
        swift_endAccess();
        v310 = v341;
      }
      if (*(_QWORD *)(*v358 + 16))
      {
        v320 = swift_bridgeObjectRetain();
        v321 = (void *)sub_249DBE160(v320);
        swift_bridgeObjectRelease();
        sub_249E20788(v321);
        if (v310)
        {
          v322 = (void *)v217[172];
          v323 = v217[132];
          v324 = v217[130];
          v325 = v347[129];

          swift_release();
          swift_release();
          v326 = v325;
          v110 = v347;
          (*(void (**)(uint64_t, uint64_t))(v324 + 8))(v323, v326);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_116;
        }
        swift_release();
      }
      v327 = v217[186];
      v328 = *(_QWORD *)(v327 + 24);
      if (v328)
      {
        v329 = (void (*)(uint64_t *))v217[124];
        v330 = (void *)v217[172];
        if (v329)
        {
          LOBYTE(v369[0]) = *(_QWORD *)(v327 + 16);
          v369[1] = v328;
          swift_bridgeObjectRetain();
          v329(v369);

          swift_release();
          swift_bridgeObjectRelease();
LABEL_131:
          v331 = v217[187];
          v332 = (void (*)(uint64_t, uint64_t))v217[184];
          v333 = v217[161];
          v334 = v217[158];
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v217[130] + 32))(v217[115], v217[132], v217[129]);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249DDDF68("validateText", 12, 2);
          swift_release();
          v332(v333, v334);
          swift_release();
          sub_249DC0A2C(v331);
          swift_release();
          swift_release();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v142 = (uint64_t (*)(void))v217[1];
          return v142();
        }

      }
      else
      {

      }
      swift_release();
      goto LABEL_131;
    }
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    return result;
  }
  v248 = sub_249F1EEC0();
  v249 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v250 = (void (*)(uint64_t, uint64_t, uint64_t))v347[164];
    v251 = v347[161];
    v252 = v347[158];
    v253 = swift_task_alloc();
    v250(v253, v251, v252);
    v254 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v254 = 0;
    v255 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v248, v249, v255, "sanitizeText", "", v254, 2u);
    v256 = v254;
    v217 = v347;
    MEMORY[0x24BD06618](v256, -1, -1);

    ((void (*)(uint64_t, uint64_t))v338)(v253, v252);
    swift_task_dealloc();
  }
  else
  {

  }
  v281 = (void (*)(void))v217[164];
  swift_task_alloc();
  v281();
  swift_allocObject();
  v217[190] = sub_249F1EEFC();
  swift_task_dealloc();
  if (v342[3])
  {
    swift_retain();
    v282 = sub_249E21890;
  }
  else
  {
    v282 = 0;
    v247 = 0;
  }
  v217[192] = v247;
  v217[191] = (uint64_t)v282;
  v283 = (void *)v217[172];
  v284 = v217;
  v285 = *((_BYTE *)v217 + 1576);
  v286 = objc_msgSend(v283, sel_string);
  v287 = sub_249F1F328();
  v289 = v288;

  v284[193] = v289;
  v290 = (_QWORD *)swift_task_alloc();
  v284[194] = (uint64_t)v290;
  *v290 = v284;
  v290[1] = sub_249E1E7E0;
  return sub_249E6F00C(v287, v289, (v339 >> 1) | (2 * (v340 != 0)), (uint64_t)v282, v247, v285 & 1, v284[118]);
}

uint64_t sub_249E1E7E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 1560) = a1;
  *(_QWORD *)(v3 + 1568) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_249E1E858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  void (*v34)(size_t);
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  NSObject *v40;
  os_signpost_id_t v41;
  uint64_t v42;
  size_t v43;
  os_signpost_id_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  size_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_QWORD *);
  void *v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[4];

  v1 = v0[195];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 56;
    while (1)
    {
      v5 = *(_QWORD *)(v3 - 24);
      v4 = *(_QWORD *)(v3 - 16);
      v6 = v4 - v5;
      if (__OFSUB__(v4, v5))
        break;
      v7 = (void *)v0[172];
      swift_bridgeObjectRetain();
      v8 = (void *)sub_249F1F304();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_replaceCharactersInRange_withString_, v5, v6, v8);

      v3 += 32;
      if (!--v2)
        goto LABEL_5;
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_5:
  v9 = v0 + 100;
  v10 = v0[191];
  swift_bridgeObjectRelease();
  sub_249DC0A2C(v10);
  sub_249DDDF68("sanitizeText", 12, 2);
  swift_release();
  v77 = v0[196];
  v11 = (void *)v0[172];
  v12 = v0[132];
  v13 = MEMORY[0x24BEE4B08];
  v0[101] = MEMORY[0x24BEE4B08];
  v0[100] = v13;
  v14 = objc_msgSend(v11, sel_string);
  sub_249F1F328();

  sub_249F1E6A4();
  sub_249F1E65C();
  v15 = qword_2578FF360;
  v16 = objc_msgSend(v11, sel_length);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v0 + 100;
  v17[3] = v12;
  v17[4] = v0 + 101;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_249E2182C;
  *(_QWORD *)(v18 + 24) = v17;
  v0[16] = sub_249E21DAC;
  v0[17] = v18;
  v0[12] = MEMORY[0x24BDAC760];
  v0[13] = 1107296256;
  v0[14] = sub_249E1F944;
  v0[15] = &block_descriptor_29;
  v19 = _Block_copy(v0 + 12);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_enumerateAttribute_inRange_options_usingBlock_, v15, 0, v16, 0, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v19 & 1) == 0)
  {
    v20 = v0[186];
    swift_beginAccess();
    if (*(_QWORD *)(v20 + 24))
    {
      v21 = v0[131];
      v22 = v0[130];
      v23 = v0[129];
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 16))(v21, v0[132], v23);
      sub_249E21848();
      v24 = sub_249F1E74C();
      v26 = v25;
      v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v27(v21, v23);
      v0[74] = MEMORY[0x24BEE0D00];
      v0[71] = v24;
      v0[72] = v26;
      sub_249DCA7E4((uint64_t)(v0 + 71), (uint64_t)(v0 + 63));
      JSONValue.init(_:)(v0 + 63, &v78);
      v28 = v0[186];
      if (v77)
      {
        v29 = (void *)v0[172];
        v30 = v0[132];
        v31 = v0[129];
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 71));
        swift_endAccess();

        swift_release();
        v27(v30, v31);
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v62 = v0[187];
        v63 = (void (*)(uint64_t, uint64_t))v0[184];
        v64 = v0[161];
        v65 = v0[158];
        sub_249DDDF68("validateText", 12, 2);
        swift_release();
        v63(v64, v65);
        swift_release();
        sub_249DC0A2C(v62);
        sub_249DC0A2C((uint64_t)sub_249E21804);
        sub_249DC0A2C((uint64_t)sub_249E2182C);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v66 = (void (*)(void))v0[1];
LABEL_30:
        v66();
        return;
      }
      v32 = v78;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79[0] = *(_QWORD *)(v28 + 24);
      *(_QWORD *)(v28 + 24) = 0x8000000000000000;
      sub_249DD1B3C(v32, 0x65746E656D677561, 0xEF74706D6F725064, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v28 + 24) = v79[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 71));
      v77 = 0;
    }
    else
    {
      swift_endAccess();
    }
    v34 = (void (*)(size_t))v0[120];
    if ((unint64_t)v34 >= 2)
    {
      v35 = (void (*)(uint64_t, uint64_t, uint64_t))v0[169];
      v36 = v0[163];
      v37 = v0[162];
      v75 = v37;
      v76 = (void (*)(uint64_t, uint64_t))v0[170];
      v38 = swift_task_alloc();
      v35(v38, v36, v37);
      swift_retain();
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      v40 = sub_249F1EEC0();
      LOBYTE(v35) = sub_249F1F8A4();
      v41 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v40, (os_signpost_type_t)v35, v41, "reportConcepts", "", v39, 2u);
      v42 = swift_bridgeObjectRetain();
      v43 = sub_249DBE258(v42);
      swift_bridgeObjectRelease();
      v34(v43);
      swift_release();
      LOBYTE(v43) = sub_249F1F898();
      v44 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v40, (os_signpost_type_t)v43, v44, "reportConcepts", "", v39, 2u);

      v45 = v39;
      v9 = v0 + 100;
      MEMORY[0x24BD06618](v45, -1, -1);
      sub_249DC0A2C((uint64_t)v34);
      v76(v38, v75);
      swift_task_dealloc();
    }
    v46 = v0[186];
    swift_beginAccess();
    if (*(_QWORD *)(v46 + 24))
    {
      v47 = swift_bridgeObjectRetain();
      v48 = sub_249DBE258(v47);
      swift_bridgeObjectRelease();
      v0[54] = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
      v0[51] = v48;
      sub_249DCA7E4((uint64_t)(v0 + 51), (uint64_t)(v0 + 55));
      JSONValue.init(_:)(v0 + 55, &v78);
      v49 = v0[186];
      if (v77)
      {
        v50 = (void *)v0[172];
        v51 = v0[132];
        v52 = v0[130];
        v53 = v0[129];
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 51));
        swift_endAccess();

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
        goto LABEL_21;
      }
      v55 = v78;
      v56 = swift_isUniquelyReferenced_nonNull_native();
      v79[0] = *(_QWORD *)(v49 + 24);
      *(_QWORD *)(v49 + 24) = 0x8000000000000000;
      sub_249DD1B3C(v55, 0xD000000000000012, 0x8000000249F33B90, v56);
      *(_QWORD *)(v49 + 24) = v79[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 51));
      v54 = 0;
    }
    else
    {
      swift_endAccess();
      v54 = v77;
    }
    if (*(_QWORD *)(*v9 + 16))
    {
      v57 = swift_bridgeObjectRetain();
      v58 = (void *)sub_249DBE160(v57);
      swift_bridgeObjectRelease();
      sub_249E20788(v58);
      if (v54)
      {
        v59 = v0[132];
        v60 = v0[130];
        v61 = v0[129];

        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
        goto LABEL_21;
      }
      swift_release();
    }
    v67 = v0[186];
    v68 = *(_QWORD *)(v67 + 24);
    if (v68)
    {
      v69 = (void (*)(_QWORD *))v0[124];
      v70 = (void *)v0[172];
      if (v69)
      {
        LOBYTE(v79[0]) = *(_QWORD *)(v67 + 16);
        v79[1] = v68;
        swift_bridgeObjectRetain();
        v69(v79);

        swift_release();
        swift_bridgeObjectRelease();
LABEL_29:
        v71 = v0[187];
        v72 = (void (*)(uint64_t, uint64_t))v0[184];
        v73 = v0[161];
        v74 = v0[158];
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[130] + 32))(v0[115], v0[132], v0[129]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        sub_249DDDF68("validateText", 12, 2);
        swift_release();
        v72(v73, v74);
        swift_release();
        sub_249DC0A2C(v71);
        swift_release();
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v66 = (void (*)(void))v0[1];
        goto LABEL_30;
      }

    }
    else
    {

    }
    swift_release();
    goto LABEL_29;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_249E1F390()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 1376);
  sub_249DC0A2C(*(_QWORD *)(v0 + 1528));
  sub_249DDDF68("sanitizeText", 12, 2);

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v2 = *(_QWORD *)(v0 + 1496);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 1472);
  v4 = *(_QWORD *)(v0 + 1288);
  v5 = *(_QWORD *)(v0 + 1264);
  sub_249DDDF68("validateText", 12, 2);
  swift_release();
  v3(v4, v5);
  swift_release();
  sub_249DC0A2C(v2);
  sub_249DC0A2C((uint64_t)sub_249E21804);
  sub_249DC0A2C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E1F5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v8 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD **)(a4 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_249DB30FC(0, v9[2] + 1, 1, v9);
    *v8 = v9;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    v9 = sub_249DB30FC((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    *v8 = v9;
  }
  v9[2] = v12 + 1;
  v13 = &v9[3 * v12];
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  return swift_endAccess();
}

void sub_249E1F6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD **a5, void *a6)
{
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  _QWORD v21[4];

  sub_249DCC274(a1, (uint64_t)v21, (uint64_t *)&unk_2578DD090);
  if (v21[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = *a5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a5 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_249DB3220(0, v9[2] + 1, 1, v9);
        *a5 = v9;
      }
      v12 = v9[2];
      v11 = v9[3];
      if (v12 >= v11 >> 1)
      {
        v9 = sub_249DB3220((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
        *a5 = v9;
      }
      v9[2] = v12 + 1;
      v9[v12 + 4] = v20;
      return;
    }
  }
  else
  {
    sub_249DCC2FC((uint64_t)v21, (uint64_t *)&unk_2578DD090);
  }
  if (*(_QWORD *)(a1 + 24))
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v13 = sub_249F1EF38();
    __swift_project_value_buffer(v13, (uint64_t)qword_2578FF3F0);
    v14 = a6;
    v15 = sub_249F1EF20();
    v16 = sub_249F1F820();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138477827;
      v21[0] = v14;
      v19 = v14;
      sub_249F1F9AC();
      *v18 = v14;

      _os_log_impl(&dword_249D98000, v15, v16, "There should not be a non-Ambiguity type object associated with an Ambiguity Key in the NSAttributedString: %{private}@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v18, -1, -1);
      MEMORY[0x24BD06618](v17, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_249E1F944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_249DCC2FC((uint64_t)&v11, (uint64_t *)&unk_2578DD090);
}

void sub_249E1F9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];

  v8 = type metadata accessor for Concept(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v38 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)&v36 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - v17;
  sub_249DCC274(a1, (uint64_t)v40, (uint64_t *)&unk_2578DD090);
  if (!v40[3])
  {
    sub_249DCC2FC((uint64_t)v40, (uint64_t *)&unk_2578DD090);
LABEL_11:
    if (*(_QWORD *)(a1 + 24))
    {
      if (qword_2578D5D78 != -1)
        swift_once();
      v29 = sub_249F1EF38();
      __swift_project_value_buffer(v29, (uint64_t)qword_2578FF3F0);
      v30 = a6;
      v31 = sub_249F1EF20();
      v32 = sub_249F1F820();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v33 = 138477827;
        v40[0] = v30;
        v35 = v30;
        sub_249F1F9AC();
        *v34 = v30;

        _os_log_impl(&dword_249D98000, v31, v32, "There should not be a non-[Concept] type object associated with a Concepts Key in the NSAttributedString: %{private}@", v33, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v34, -1, -1);
        MEMORY[0x24BD06618](v33, -1, -1);

      }
      else
      {

      }
    }
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_11;
  v19 = *(_QWORD *)(v39 + 16);
  if (v19)
  {
    v20 = *(unsigned __int8 *)(v9 + 80);
    v36 = v39;
    v21 = v39 + ((v20 + 32) & ~v20);
    v22 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_249DC091C(v21, (uint64_t)v18, type metadata accessor for Concept);
      sub_249DC091C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Concept);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v24 = (uint64_t)v18;
      v25 = (uint64_t)v16;
      if (EnumCaseMultiPayload == 3)
      {
        v26 = v16[16];
        swift_bridgeObjectRelease();
        v25 = (uint64_t)v18;
        if (v26 == 3)
          goto LABEL_6;
        v27 = v38;
        sub_249DC091C((uint64_t)v18, v38, type metadata accessor for Concept);
        v28 = v37;
        sub_249DB3994(v37, v27);
        v24 = v28;
        v25 = (uint64_t)v18;
      }
      sub_249DC05A8(v24, type metadata accessor for Concept);
LABEL_6:
      sub_249DC05A8(v25, type metadata accessor for Concept);
      v21 += v22;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_249E1FD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  v9 = type metadata accessor for Concept(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DCC274(a1, (uint64_t)v23, (uint64_t *)&unk_2578DD090);
  if (!v24)
    return sub_249DCC2FC((uint64_t)v23, (uint64_t *)&unk_2578DD090);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v14 = *(_QWORD *)(v22 + 16);
    if (v14)
    {
      v15 = v22 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      v16 = *(_QWORD *)(v10 + 72);
      while (1)
      {
        sub_249DC091C(v15, (uint64_t)v12, type metadata accessor for Concept);
        if (swift_getEnumCaseMultiPayload() == 4)
          break;
        sub_249DC05A8((uint64_t)v12, type metadata accessor for Concept);
        v15 += v16;
        if (!--v14)
          return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_249DC05A8((uint64_t)v12, type metadata accessor for Concept);
      v17 = (_QWORD *)*a5;
      result = swift_isUniquelyReferenced_nonNull_native();
      *a5 = (uint64_t)v17;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_249DB2FE8(0, v17[2] + 1, 1, v17);
        v17 = (_QWORD *)result;
        *a5 = result;
      }
      v19 = v17[2];
      v18 = v17[3];
      if (v19 >= v18 >> 1)
      {
        result = (uint64_t)sub_249DB2FE8((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
        v17 = (_QWORD *)result;
      }
      v17[2] = v19 + 1;
      v20 = &v17[2 * v19];
      v20[4] = a2;
      v20[5] = a3;
      *a5 = (uint64_t)v17;
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_249E1FF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v12[4];
  uint64_t v13;
  _QWORD v14[4];

  swift_beginAccess();
  if (!*(_QWORD *)(a4 + 24))
    return swift_endAccess();
  v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7068);
  v14[0] = a3;
  sub_249DCA7E4((uint64_t)v14, (uint64_t)v12);
  swift_bridgeObjectRetain();
  JSONValue.init(_:)(v12, &v13);
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return swift_endAccess();
  }
  v10 = v13;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12[0] = *(_QWORD *)(a4 + 24);
  *(_QWORD *)(a4 + 24) = 0x8000000000000000;
  sub_249DD1B3C(v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a4 + 24) = v12[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_249E20050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD);
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(uint64_t, uint64_t);
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94[8];
  uint64_t v95;

  v72 = a6;
  v77 = a3;
  v78 = a5;
  v76 = a2;
  v75 = sub_249F1E650();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v73 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E50);
  MEMORY[0x24BDAC7A8](v10);
  v83 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_249F1E6B0();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v67 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_249F1E8D8();
  v70 = *(_QWORD *)(v66 - 8);
  v15 = MEMORY[0x24BDAC7A8](v66);
  v69 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v68 = (uint64_t)v63 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)v63 - v19;
  v20 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v20);
  v79 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v85 = *(_QWORD *)(v22 - 8);
  v86 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v84);
  v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Concept(0);
  v27 = *(_QWORD *)(v92 - 8);
  v28 = MEMORY[0x24BDAC7A8](v92);
  v91 = (uint64_t)v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v90 = (uint64_t)v63 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v63 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)v63 - v35;
  sub_249DCC274(a1, (uint64_t)v94, (uint64_t *)&unk_2578DD090);
  if (!v95)
    return sub_249DCC2FC((uint64_t)v94, (uint64_t *)&unk_2578DD090);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v87 = v26;
    v38 = *(_QWORD *)(v93 + 16);
    if (v38)
    {
      v81 = v24;
      v39 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v63[1] = v93;
      v40 = v93 + v39;
      v88 = *(_QWORD *)(v27 + 72);
      v41 = (uint64_t)v79;
      v89 = v34;
      v63[2] = a7;
      while (1)
      {
        sub_249DC091C(v40, (uint64_t)v36, type metadata accessor for Concept);
        sub_249DC091C((uint64_t)v36, (uint64_t)v34, type metadata accessor for Concept);
        if (swift_getEnumCaseMultiPayload() != 4)
          break;
        v46 = (uint64_t)v87;
        sub_249D9E308((uint64_t)v34, (uint64_t)v87, type metadata accessor for NamedEntityData);
        sub_249DC091C(v46 + *(int *)(v84 + 20), v41, type metadata accessor for NamedEntityData.NamedEntityType);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v41, 1, v86) == 1)
        {
          sub_249DC05A8(v46, type metadata accessor for NamedEntityData);
          v42 = v41;
          v43 = type metadata accessor for NamedEntityData.NamedEntityType;
          goto LABEL_6;
        }
        v47 = (uint64_t)v81;
        sub_249D9E308(v41, (uint64_t)v81, type metadata accessor for NamedEntityData.PhotosPersonData);
        v48 = v70;
        v49 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
        v50 = v82;
        v51 = v66;
        v49(v82, v47, v66);
        v52 = v69;
        v49(v69, (uint64_t)v50, v51);
        v53 = v68;
        sub_249DB3B90(v68, v52);
        v80 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v80(v53, v51);
        v54 = v67;
        sub_249F1E6A4();
        v55 = v71;
        v49(v71, (uint64_t)v50, v51);
        v56 = v72;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v55, 0, 1, v51);
        sub_249E0B50C();
        sub_249F1E6C8();
        v57 = v51;
        v58 = v54;
        v59 = v83;
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v56, v75);
        sub_249E21848();
        sub_249F1F790();
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v59, 1, v60);
        if ((_DWORD)result == 1)
        {
          __break(1u);
          return result;
        }
        sub_249DDFC68((unint64_t *)&qword_2578D8E58, &qword_2578D6C30, MEMORY[0x24BEE1BC0]);
        v61 = (uint64_t)v83;
        v62 = (void (*)(char *, _QWORD))sub_249F1E674();
        sub_249F1E6F8();
        v62(v94, 0);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v65);
        v80((uint64_t)v82, v57);
        sub_249DC05A8((uint64_t)v81, type metadata accessor for NamedEntityData.PhotosPersonData);
        sub_249DC05A8((uint64_t)v87, type metadata accessor for NamedEntityData);
        sub_249DCC2FC(v61, &qword_2578D6C30);
        v41 = (uint64_t)v79;
LABEL_7:
        v44 = v91;
        sub_249DC091C((uint64_t)v36, v91, type metadata accessor for Concept);
        v45 = v90;
        sub_249DB3994(v90, v44);
        sub_249DC05A8(v45, type metadata accessor for Concept);
        sub_249DC05A8((uint64_t)v36, type metadata accessor for Concept);
        v34 = v89;
        v40 += v88;
        if (!--v38)
          return swift_bridgeObjectRelease();
      }
      v42 = (uint64_t)v34;
      v43 = type metadata accessor for Concept;
LABEL_6:
      sub_249DC05A8(v42, v43);
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249E20788(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint8_t *v10;
  NSObject *v11;
  os_signpost_type_t v12;
  os_signpost_id_t v13;
  uint64_t v14;
  os_signpost_type_t v15;
  os_signpost_id_t v16;
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  v20 = sub_249F1EE9C();
  v19 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D80 != -1)
    swift_once();
  v4 = sub_249F1EED8();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  v6 = sub_249F1EE78();
  v18[2] = (uint64_t)v18;
  v7 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v5, v4);
  v10 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v10 = 0;
  v11 = sub_249F1EEC0();
  v12 = sub_249F1F8A4();
  v13 = sub_249F1EE84();
  _os_signpost_emit_with_name_impl(&dword_249D98000, v11, v12, v13, "checkPersonIDs", "", v10, 2u);
  v14 = v18[1];
  sub_249E209A4(a1, v18[0]);
  if (v14)
  {

  }
  else
  {
    v15 = sub_249F1F898();
    v16 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v11, v15, v16, "checkPersonIDs", "", v10, 2u);

    MEMORY[0x24BD06618](v10, -1, -1);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v3, v20);
}

uint64_t sub_249E209A4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  _BOOL4 v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint8_t *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v61;
  _QWORD *v62;
  uint8_t *v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  char *v65;
  _QWORD *v66;
  void (*v67)(char *, char *, uint64_t);
  _QWORD *v68;
  char *v69;
  uint8_t *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  void *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[2];
  uint8_t *v93;
  unint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD *v100;
  os_log_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(_QWORD, _QWORD, _QWORD);
  uint8_t *v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  id v114[3];
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118[2];

  v108 = a2;
  v118[1] = *MEMORY[0x24BDAC8D0];
  v3 = sub_249F1E8D8();
  v100 = *(_QWORD **)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v105 = (char *)v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v99 = (char *)v92 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint8_t *)sub_249F1EC74();
  v110 = (uint8_t *)*((_QWORD *)v10 - 1);
  v111 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v107 = (char *)v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v106 = (char *)v92 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v14);
  v104 = (char *)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_249F1E7F4();
  v98 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v19 = sub_249F1EF38();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v21 = sub_249F1EF20();
  v22 = sub_249F1F82C();
  v23 = v22;
  v24 = os_log_type_enabled(v21, v22);
  v112 = v3;
  if (v24)
  {
    v101 = v21;
    v25 = (uint8_t *)swift_slowAlloc();
    v96 = swift_slowAlloc();
    v118[0] = v96;
    v95 = v25;
    *(_DWORD *)v25 = 136315138;
    v93 = v25 + 12;
    v92[1] = v25 + 4;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9760);
    LODWORD(v94) = v23;
    v27 = v26;
    v115 = v26;
    v28 = sub_249DDFC68(&qword_2578D9768, &qword_2578D9760, MEMORY[0x24BEE12C8]);
    v116 = v28;
    v114[0] = a1;
    v29 = __swift_project_boxed_opaque_existential_1(v114, v27);
    v97 = v16;
    MEMORY[0x24BDAC7A8](v29);
    v92[-4] = v27;
    v92[-3] = v28;
    v92[-2] = sub_249E72DE8;
    v92[-1] = 0;
    swift_bridgeObjectRetain_n();
    v30 = v109;
    v32 = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)&v92[-6], v27, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v28, MEMORY[0x24BEE40A8], v31);
    v109 = v30;
    v117 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
    sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
    v33 = sub_249F1F280();
    v35 = v34;
    v16 = v97;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
    swift_bridgeObjectRelease();
    v114[0] = (id)sub_249E68CA8(v33, v35, v118);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    v3 = v112;
    swift_bridgeObjectRelease();
    v36 = v101;
    v37 = v95;
    _os_log_impl(&dword_249D98000, v101, (os_log_type_t)v94, "Checking personalization validity of %s", v95, 0xCu);
    v38 = v96;
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v38, -1, -1);
    MEMORY[0x24BD06618](v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v118[0] = MEMORY[0x24BEE4AF8];
  v39 = *(void **)(v108 + 16);
  v114[0] = 0;
  v40 = objc_msgSend(v39, sel_requestVUIndexURLForSystemPhotosLibraryWithError_, v114);
  v41 = v114[0];
  if (!v40)
  {
    v49 = v114[0];
    v48 = (void *)sub_249F1E710();

    swift_willThrow();
    goto LABEL_10;
  }
  v42 = v40;
  v95 = (uint8_t *)a1;
  v96 = v20;
  sub_249F1E7A0();
  v43 = v41;

  v44 = v98;
  v45 = v104;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v104, v18, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v16);
  v46 = (char *)*((_QWORD *)v110 + 13);
  ((void (*)(char *, _QWORD, uint8_t *))v46)(v106, *MEMORY[0x24BEC0BC0], v111);
  sub_249F1EC80();
  swift_allocObject();
  v47 = v109;
  v106 = (char *)sub_249F1EC5C();
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v16);
    swift_bridgeObjectRelease();
    v48 = v47;
LABEL_10:
    v50 = v48;
    v51 = v48;
    v52 = sub_249F1EF20();
    v53 = sub_249F1F820();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = (void *)swift_slowAlloc();
      v114[0] = v55;
      *(_DWORD *)v54 = 136380675;
      swift_getErrorValue();
      v56 = sub_249F1FF1C();
      v117 = sub_249E68CA8(v56, v57, (uint64_t *)v114);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_249D98000, v52, v53, "Personalization unavailable: %{private}s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v55, -1, -1);
      MEMORY[0x24BD06618](v54, -1, -1);
    }
    else
    {

    }
    sub_249E11A64();
    swift_allocError();
    *(_QWORD *)v58 = v48;
    v59 = 1;
LABEL_14:
    *(_BYTE *)(v58 + 8) = v59;
    return swift_willThrow();
  }
  v104 = v46;
  v93 = 0;
  v97 = v16;
  v61 = *((_QWORD *)v95 + 2);
  if (v61)
  {
    v62 = v100;
    v94 = (*((unsigned __int8 *)v62 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v62 + 80);
    v63 = &v95[v94];
    v64 = (void (*)(_QWORD, _QWORD, _QWORD))v100[2];
    v108 = v100[9];
    v109 = v64;
    LODWORD(v101) = *MEMORY[0x24BEC0BB8];
    swift_bridgeObjectRetain();
    v65 = v99;
    v103 = v9;
    v102 = v18;
    while (1)
    {
      v109(v9, v63, v3);
      v66 = (_QWORD *)v62[7];
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v66)(v9, 0, 1, v3);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v62[6])(v9, 1, v3) == 1)
        break;
      v100 = v66;
      v67 = (void (*)(char *, char *, uint64_t))v62[4];
      v67(v65, v9, v3);
      v68 = v62;
      v69 = v107;
      v70 = v111;
      ((void (*)(char *, _QWORD, uint8_t *))v104)(v107, v101, v111);
      v71 = sub_249F1EC68();
      v72 = v69;
      v62 = v68;
      (*((void (**)(char *, uint8_t *))v110 + 1))(v72, v70);
      v73 = *(_QWORD *)(v71 + 16);
      v3 = v112;
      swift_bridgeObjectRelease();
      if (!v73)
      {
        v109(v105, v65, v3);
        v74 = v118[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v74 = sub_249DB23E4(0, *(_QWORD *)(v74 + 16) + 1, 1, v74);
        v76 = *(_QWORD *)(v74 + 16);
        v75 = *(_QWORD *)(v74 + 24);
        if (v76 >= v75 >> 1)
          v74 = sub_249DB23E4(v75 > 1, v76 + 1, 1, v74);
        *(_QWORD *)(v74 + 16) = v76 + 1;
        v3 = v112;
        v67((char *)(v74 + v94 + v76 * v108), v105, v112);
        v118[0] = v74;
        v65 = v99;
      }
      ((void (*)(char *, uint64_t))v68[1])(v65, v3);
      v63 += v108;
      --v61;
      v9 = v103;
      v18 = v102;
      if (!v61)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v100)(v103, 1, 1, v3);
        break;
      }
    }
  }
  else
  {
    v77 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v100[7];
    swift_bridgeObjectRetain();
    v77(v9, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v18, v97);
  v78 = (void *)v118[0];
  if (*(_QWORD *)(v118[0] + 16))
  {
    swift_bridgeObjectRetain_n();
    v79 = sub_249F1EF20();
    v80 = sub_249F1F820();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      v112 = swift_slowAlloc();
      v117 = v112;
      *(_DWORD *)v81 = 136315138;
      v110 = v81 + 4;
      v111 = v81;
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9760);
      v115 = v82;
      v83 = sub_249DDFC68(&qword_2578D9768, &qword_2578D9760, MEMORY[0x24BEE12C8]);
      v116 = v83;
      v114[0] = v78;
      v84 = __swift_project_boxed_opaque_existential_1(v114, v82);
      MEMORY[0x24BDAC7A8](v84);
      v92[-4] = v82;
      v92[-3] = v83;
      v92[-2] = sub_249E72DE8;
      v92[-1] = 0;
      swift_bridgeObjectRetain_n();
      v113 = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)&v92[-6], v82, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v83, MEMORY[0x24BEE40A8], v85);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
      sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
      v86 = sub_249F1F280();
      v88 = v87;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      swift_bridgeObjectRelease();
      v114[0] = (id)sub_249E68CA8(v86, v88, &v117);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v89 = v111;
      _os_log_impl(&dword_249D98000, v79, v80, "No personalization available for %s", v111, 0xCu);
      v90 = v112;
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v90, -1, -1);
      MEMORY[0x24BD06618](v89, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v91 = v118[0];
    sub_249E11A64();
    swift_allocError();
    *(_QWORD *)v58 = v91;
    v59 = 2;
    goto LABEL_14;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E216B8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GoalValidator()
{
  return objc_opt_self();
}

uint64_t sub_249E21704()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249E21728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_249E1F5E0(a1, a2, a3, v3);
}

uint64_t sub_249E21730()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_249E21754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_249E1F6D0(a1, a2, a3, a4, *(_QWORD ***)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_249E2175C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_249E21784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_249E22584(a1, *(uint64_t (**)(uint64_t *))(v2 + 32), a2);
}

uint64_t sub_249E217A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_249E217C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_249E17EE8(a1, a2, a3);
}

uint64_t sub_249E217E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_249D9E350(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_249E217F4()
{
  return swift_deallocObject();
}

uint64_t sub_249E21804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_249E1FD48(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_249E2180C()
{
  return swift_deallocObject();
}

uint64_t sub_249E2181C()
{
  return swift_deallocObject();
}

uint64_t sub_249E2182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_249E20050(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_249E21838()
{
  return swift_deallocObject();
}

unint64_t sub_249E21848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D73D0;
  if (!qword_2578D73D0)
  {
    v1 = sub_249F1E650();
    result = MEMORY[0x24BD06528](MEMORY[0x24BDCC588], v1);
    atomic_store(result, (unint64_t *)&qword_2578D73D0);
  }
  return result;
}

uint64_t sub_249E21890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_249E1FF30(a1, a2, a3, v3);
}

void sub_249E218A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_249E1F9D4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_249E218B0()
{
  return swift_deallocObject();
}

uint64_t sub_249E218C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = a3;
  v4 = sub_249F1E8D8();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v41);
  v37 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = type metadata accessor for EntityExtractor.NamedEntity.EntityData();
  v9 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Concept(0);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v49 = MEMORY[0x24BEE4AF8];
    sub_249DB6884(0, v14, 0);
    v16 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v34 = *(_QWORD *)(v9 + 72);
    v35 = v13;
    v17 = (uint64_t)v36;
    v18 = v43;
    do
    {
      v48 = v14;
      sub_249DC091C(v16, v17, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      v19 = v47;
      v20 = (uint64_t)v37;
      *v37 = v46;
      *(_QWORD *)(v20 + 8) = v19;
      v21 = v44;
      v22 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v18, v17, v45);
      v23 = *(_BYTE *)(v17 + *(int *)(v40 + 20));
      swift_bridgeObjectRetain();
      sub_249DC05A8(v17, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v25 = v42;
      v24(v42, v18, v22);
      v26 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
      v25[*(int *)(v26 + 20)] = v23;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
      v27 = (uint64_t)v25;
      v28 = (uint64_t)v35;
      sub_249D9E308(v27, v20 + *(int *)(v41 + 20), type metadata accessor for NamedEntityData.NamedEntityType);
      sub_249D9E308(v20, v28, type metadata accessor for NamedEntityData);
      swift_storeEnumTagMultiPayload();
      v15 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB6884(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v49;
      }
      v30 = *(_QWORD *)(v15 + 16);
      v29 = *(_QWORD *)(v15 + 24);
      v31 = v48;
      if (v30 >= v29 >> 1)
      {
        sub_249DB6884(v29 > 1, v30 + 1, 1);
        v15 = v49;
      }
      *(_QWORD *)(v15 + 16) = v30 + 1;
      sub_249D9E308(v28, v15+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v30, type metadata accessor for Concept);
      v16 += v34;
      v14 = v31 - 1;
    }
    while (v14);
  }
  return v15;
}

uint64_t initializeBufferWithCopyOfBuffer for GoalValidator.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249E119FC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for GoalValidator.Error(uint64_t a1)
{
  sub_249E11A30(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for GoalValidator.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249E119FC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_249E11A30(v5, v6);
  return a1;
}

uint64_t assignWithTake for GoalValidator.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_249E11A30(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GoalValidator.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GoalValidator.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_249E21D78(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GoalValidator.Error()
{
  return &type metadata for GoalValidator.Error;
}

uint64_t sub_249E21D98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_249E21784(a1, a2);
}

void sub_249E21DCC(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v5 = v7;
    v6 = v8;
  }
  else
  {
    if ((swift_dynamicCast() & 1) != 0)
      __asm { BR              X12 }
    v5 = 0;
    v6 = -1;
  }
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v6;
}

void PromptError.errorDescription.getter()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_249F1E734();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v5);
  __asm { BR              X10 }
}

uint64_t sub_249E21FE8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v7[18];

  swift_bridgeObjectRetain();
  sub_249F1F2D4();
  sub_249F1F2C8();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9738);
  *(_QWORD *)(v1 - 96) = v2;
  v3 = sub_249DDFC68(&qword_2578D9740, &qword_2578D9738, MEMORY[0x24BEE12C8]);
  *(_QWORD *)(v1 - 88) = v3;
  *(_QWORD *)(v1 - 120) = v0;
  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 120), v2);
  MEMORY[0x24BDAC7A8](v4);
  v7[2] = v2;
  v7[3] = v3;
  v7[4] = sub_249E72DE8;
  v7[5] = 0;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v1 - 152) = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
  sub_249F1F280();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v1 - 120);
  sub_249E22B38(v0, 0);
  sub_249F1F2BC();
  swift_bridgeObjectRelease();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  return sub_249F1F388();
}

uint64_t sub_249E22584@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t *)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v10[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10[3] = AssociatedTypeWitness;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1, a1, AssociatedTypeWitness);
  *a3 = a2(v10);
  a3[1] = v8;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_249E2262C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_249F1F970();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_249F1F4F0();
  v57 = sub_249F1FB74();
  v53 = sub_249F1FB80();
  sub_249F1FB38();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_249F1F4E4();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_249F1F9A0();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_249F1FB68();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_249F1F9A0();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_249F1FB68();
      sub_249F1F9A0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

void sub_249E22B38(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    default:
      return;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PromptError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249E22BB4(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_249E22BB4(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 3:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for PromptError(uint64_t a1)
{
  sub_249E22B38(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for PromptError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249E22BB4(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_249E22B38(v5, v6);
  return a1;
}

uint64_t assignWithTake for PromptError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_249E22B38(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for PromptError()
{
  return &type metadata for PromptError;
}

uint64_t sub_249E22C98(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v2;
  v5 = sub_249F1E8D8();
  *(_QWORD *)(v3 + 128) = v5;
  *(_QWORD *)(v3 + 136) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  *(_QWORD *)(v3 + 152) = swift_task_alloc();
  v6 = a2[1];
  *(_OWORD *)(v3 + 160) = *a2;
  *(_OWORD *)(v3 + 176) = v6;
  return swift_task_switch();
}

uint64_t sub_249E22D14()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t *);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_signpost_type_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  os_signpost_id_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  os_signpost_type_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;

  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[17] + 16);
  v48(v0[19], v0[15] + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask_id, v0[16]);
  v51 = 0x206B736154;
  v52 = 0xE500000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v0[24] = 0x206B736154;
  v0[25] = 0xE500000000000000;
  if (qword_2578D5CE8 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[15];
  if (v4)
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v51 = v7;
    *(_DWORD *)v6 = 136315395;
    swift_bridgeObjectRetain();
    v0[12] = sub_249E68CA8(0x206B736154, 0xE500000000000000, &v51);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2081;
    v8 = *(_QWORD *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    v0[13] = sub_249E68CA8(v8, v9, &v51);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_249D98000, v2, v3, "%s assigning prompt \"%{private}s\"", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v7, -1, -1);
    MEMORY[0x24BD06618](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  v10 = (void (*)(uint64_t, uint64_t *))v0[20];
  if ((unint64_t)v10 >= 2)
  {
    v11 = v0[15];
    v12 = *(_QWORD *)(v11 + 24);
    v51 = *(_QWORD *)(v11 + 16);
    v52 = v12;
    v53 = 0;
    swift_bridgeObjectRetain();
    v10(v11, &v51);
    swift_bridgeObjectRelease();
  }
  v13 = sub_249F1EE9C();
  v0[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v0[28] = v14;
  v49 = v14;
  v50 = v13;
  v15 = swift_task_alloc();
  v0[29] = v15;
  if (qword_2578D5D80 != -1)
    swift_once();
  v17 = v0[18];
  v16 = v0[19];
  v18 = v0[16];
  v19 = sub_249F1EED8();
  __swift_project_value_buffer(v19, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v48(v17, v16, v18);
  swift_retain_n();
  v20 = sub_249F1EEC0();
  v21 = sub_249F1F8A4();
  v22 = sub_249F1F958();
  v23 = v15;
  v25 = v0[17];
  v24 = v0[18];
  v26 = v0[15];
  v27 = v0[16];
  if ((v22 & 1) != 0)
  {
    v47 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v47, v23, v50);
    v45 = v21;
    v28 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v51 = v46;
    *(_DWORD *)v28 = 136446467;
    v29 = sub_249F1FE08();
    v0[10] = sub_249E68CA8(v29, v30, &v51);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v32 = v49;
    v31(v24, v27);
    *(_WORD *)(v28 + 12) = 2081;
    v33 = *(_QWORD *)(v26 + 16);
    v34 = *(_QWORD *)(v26 + 24);
    swift_bridgeObjectRetain();
    v0[11] = sub_249E68CA8(v33, v34, &v51);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    v35 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v20, v45, v35, "promptAssignmentTask", "%{public}s %{private}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v46, -1, -1);
    MEMORY[0x24BD06618](v28, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v50);
    swift_task_dealloc();
  }
  else
  {

    v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v31(v24, v27);
    swift_release_n();
    v32 = v49;
  }
  v0[30] = v31;
  v37 = v0[22];
  v36 = v0[23];
  v39 = v0[20];
  v38 = v0[21];
  v40 = v0[15];
  swift_task_alloc();
  (*(void (**)(void))(v32 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[31] = sub_249F1EEFC();
  swift_task_dealloc();
  v41 = (_QWORD *)swift_task_alloc();
  v0[32] = v41;
  v41[2] = v40;
  v41[3] = v39;
  v41[4] = v38;
  v41[5] = v37;
  v41[6] = v36;
  v41[7] = 0x206B736154;
  v41[8] = 0xE500000000000000;
  v42 = swift_task_alloc();
  v0[33] = v42;
  *(_QWORD *)(v42 + 16) = 0x206B736154;
  *(_QWORD *)(v42 + 24) = 0xE500000000000000;
  v43 = (_QWORD *)swift_task_alloc();
  v0[34] = v43;
  type metadata accessor for DefinitionSession();
  *v43 = v0;
  v43[1] = sub_249E2339C;
  return sub_249F1FE38();
}

uint64_t sub_249E2339C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249E23424()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  sub_249DDDF68("promptAssignmentTask", 20, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E234D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  int v6;
  void *v7;
  void *v8;
  int v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t *);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t *);
  void *v37;
  uint64_t v38;
  id v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v1 = *(void **)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DDDF68("promptAssignmentTask", 20, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 32) = v1;
  v5 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  v6 = swift_dynamicCast();
  v7 = *(void **)(v0 + 280);
  if (v6)
  {

    v8 = *(void **)(v0 + 16);
    v9 = *(unsigned __int8 *)(v0 + 24);
    sub_249E119FC(v8, *(_BYTE *)(v0 + 24));
    swift_bridgeObjectRetain();
    sub_249E119FC(v8, v9);
    v10 = sub_249F1EF20();
    v11 = sub_249F1F820();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 200);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 192);
      v15 = swift_slowAlloc();
      v48 = (_QWORD *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v52 = v50;
      *(_DWORD *)v15 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 64) = sub_249E68CA8(v14, v13, &v52);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2112;
      sub_249E11A64();
      swift_allocError();
      *(_QWORD *)v16 = v8;
      *(_BYTE *)(v16 + 8) = v9;
      sub_249E119FC(v8, v9);
      v17 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 72) = v17;
      sub_249F1F9AC();
      *v48 = v17;
      sub_249E11A30(v8, v9);
      sub_249E11A30(v8, v9);
      _os_log_impl(&dword_249D98000, v10, v11, "%s prompt rejected - %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v48, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v50, -1, -1);
      MEMORY[0x24BD06618](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_249E11A30(v8, v9);
      sub_249E11A30(v8, v9);
    }

    v32 = *(void (**)(uint64_t, uint64_t *))(v0 + 160);
    if ((unint64_t)v32 >= 2)
    {
      v33 = *(_QWORD *)(v0 + 120);
      if (v9)
      {
        sub_249E11A64();
        v34 = (void *)swift_allocError();
        *(_QWORD *)v35 = v8;
        *(_BYTE *)(v35 + 8) = v9;
        v52 = (uint64_t)v34;
        v53 = 0;
        v54 = 3;
        sub_249E119FC(v8, v9);
        sub_249DC09B8((uint64_t)v32);
        v32(v33, &v52);
        sub_249DC0A2C((uint64_t)v32);

      }
      else
      {
        v52 = (uint64_t)v8;
        v53 = 0;
        v54 = 2;
        sub_249E119FC(v8, 0);
        sub_249DC09B8((uint64_t)v32);
        v32(v33, &v52);
        sub_249DC0A2C((uint64_t)v32);
        sub_249E11A30(v8, 0);
      }
    }
    v43 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v44 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 128);
    sub_249E11A64();
    swift_allocError();
    *(_QWORD *)v46 = v8;
    *(_BYTE *)(v46 + 8) = v9;
    swift_willThrow();
    v43(v44, v45);

  }
  else
  {

    swift_retain();
    v18 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = v7;
    v20 = sub_249F1EF20();
    v21 = sub_249F1F820();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(void **)(v0 + 280);
    v24 = *(_QWORD *)(v0 + 200);
    if (v22)
    {
      v25 = *(_QWORD *)(v0 + 192);
      v26 = *(_QWORD *)(v0 + 120);
      v27 = swift_slowAlloc();
      v49 = (_QWORD *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v52 = v51;
      *(_DWORD *)v27 = 136315651;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_249E68CA8(v25, v24, &v52);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2081;
      v28 = *(_QWORD *)(v26 + 16);
      v29 = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 48) = sub_249E68CA8(v28, v29, &v52);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v27 + 22) = 2112;
      v30 = v23;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 56) = v31;
      sub_249F1F9AC();
      *v49 = v31;

      _os_log_impl(&dword_249D98000, v20, v21, "%s prompt \"%{private}s\" rejected - %@", (uint8_t *)v27, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v49, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v51, -1, -1);
      MEMORY[0x24BD06618](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

    }
    v36 = *(void (**)(uint64_t, uint64_t *))(v0 + 160);
    if ((unint64_t)v36 >= 2)
    {
      v37 = *(void **)(v0 + 280);
      v38 = *(_QWORD *)(v0 + 120);
      v52 = (uint64_t)v37;
      v53 = 0;
      v54 = 3;
      v39 = v37;
      v36(v38, &v52);

    }
    v40 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 128);
    swift_willThrow();
    v40(v41, v42);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.PromptAssignmentTask.prompt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GenerativePlayground.PromptAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.PromptAssignmentTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall GenerativePlayground.PromptAssignmentTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t GenerativePlayground.PromptAssignmentTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return 0xD000000000000015;
}

uint64_t sub_249E23DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  type metadata accessor for DefinitionSession();
  v8[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E23E48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::Bool v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t *);
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 40)
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_4:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = (unsigned __int8 *)(v5
                         + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__assignmentOptions);
  v7 = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  v34 = v7;
  if (v6[*(int *)(v7 + 28)] != 1)
    goto LABEL_10;
  v8 = &v6[*(int *)(v7 + 32)];
  v9 = *((_QWORD *)v8 + 1);
  v10 = *((_DWORD *)v8 + 4);
  v36 = *(_QWORD *)v8;
  v37 = v9;
  v38 = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = *(void **)(v5 + 24);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  v14 = LanguageCheckingParameters.check(text:)(v13);
  swift_bridgeObjectRelease();
  if (v15)
    goto LABEL_4;
  if (v14)
  {
    v16 = *(void (**)(uint64_t, uint64_t *))(v0 + 48);
    if (v16 == (void (*)(uint64_t, uint64_t *))1)
      goto LABEL_13;
  }
  else
  {
LABEL_10:
    v16 = *(void (**)(uint64_t, uint64_t *))(v0 + 48);
    if (v16 == (void (*)(uint64_t, uint64_t *))1)
    {
LABEL_13:
      v17 = 0uLL;
      goto LABEL_15;
    }
    if (v16)
    {
      v18 = *(_QWORD *)(v0 + 40);
      v36 = 0;
      v37 = 0;
      LOBYTE(v38) = 5;
      v16(v18, &v36);
      v17 = *(_OWORD *)(v0 + 64);
      v16 = *(void (**)(uint64_t, uint64_t *))(v0 + 48);
      goto LABEL_15;
    }
  }
  v17 = *(_OWORD *)(v0 + 64);
LABEL_15:
  v31 = v17;
  *(_OWORD *)(v0 + 104) = v17;
  v19 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 40);
  v25 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 120) = v25;
  v25[2] = v20;
  v25[3] = v19;
  v25[4] = v16;
  v25[5] = v23;
  v25[6] = v22;
  v25[7] = v21;
  v25[8] = v24;
  v26 = *v6;
  v27 = 2;
  if (*v6)
    v27 = 3;
  if (v6[1])
    v26 = v27;
  v33 = v26;
  sub_249DC091C(v24 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__definitionSession, v32, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v28 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v0 + 128) = v28;
  v29 = *(_QWORD *)(v24 + 24);
  *(_QWORD *)(v0 + 136) = v29;
  v35 = (uint64_t)&v6[*(int *)(v34 + 24)];
  sub_249DC09B8(v31);
  swift_bridgeObjectRetain();
  sub_249E11B04((uint64_t)v16, v23, v22);
  swift_retain();
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v30;
  *v30 = v0;
  v30[1] = sub_249E24164;
  return sub_249E9A8CC(v28, v29, v35, (uint64_t)sub_249E24CEC, (uint64_t)v25, v31, *((uint64_t *)&v31 + 1), v33);
}

uint64_t sub_249E24164()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E241C8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15[2];
  char v16;

  if (qword_2578D5CE8 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15[0] = v8;
    *(_DWORD *)v7 = 136315395;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_249E68CA8(v6, v5, v15);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_249E68CA8(v14, v4, v15);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_249D98000, v2, v3, "%s accepted prompt \"%{private}s\"", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  v9 = *(void (**)(uint64_t, uint64_t *))(v0 + 48);
  if ((unint64_t)v9 >= 2)
  {
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 40);
    v15[0] = *(_QWORD *)(v0 + 128);
    v15[1] = v10;
    v16 = 4;
    swift_bridgeObjectRetain();
    v9(v11, v15);
    swift_bridgeObjectRelease();
  }
  v12 = *(_QWORD *)(v0 + 104);
  sub_249DEA908(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 32));
  swift_release();
  sub_249DC0A2C(v12);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E24464()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  sub_249DC05A8(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_release();
  sub_249DC0A2C(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E244C8(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint8_t *v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;

  v45 = type metadata accessor for Concept(0);
  v14 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5CE8 != -1)
    swift_once();
  v17 = sub_249F1EF38();
  __swift_project_value_buffer(v17, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v18 = sub_249F1EF20();
  v19 = sub_249F1F82C();
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    v42 = v19;
    v44 = v18;
    v20 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v47 = v41;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain();
    v48 = sub_249E68CA8(a2, a3, &v47);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    v43 = (uint8_t *)v20;
    *(_WORD *)(v20 + 12) = 2080;
    v21 = *(_QWORD *)(a1 + 16);
    v22 = MEMORY[0x24BEE4AF8];
    if (v21)
    {
      v37 = a5;
      v38 = a4;
      v40 = a8;
      v46 = MEMORY[0x24BEE4AF8];
      sub_249DB673C(0, v21, 0);
      v23 = *(unsigned __int8 *)(v14 + 80);
      v39 = a1;
      v24 = a1 + ((v23 + 32) & ~v23);
      v25 = *(_QWORD *)(v14 + 72);
      do
      {
        sub_249DC091C(v24, (uint64_t)v16, type metadata accessor for Concept);
        v48 = 0;
        v49 = 0xE000000000000000;
        sub_249F1FB98();
        v26 = v48;
        v27 = v49;
        sub_249DC05A8((uint64_t)v16, type metadata accessor for Concept);
        v22 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249DB673C(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v46;
        }
        v29 = *(_QWORD *)(v22 + 16);
        v28 = *(_QWORD *)(v22 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_249DB673C(v28 > 1, v29 + 1, 1);
          v22 = v46;
        }
        *(_QWORD *)(v22 + 16) = v29 + 1;
        v30 = v22 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v26;
        *(_QWORD *)(v30 + 40) = v27;
        v24 += v25;
        --v21;
      }
      while (v21);
      a1 = v39;
      a8 = v40;
      a4 = v38;
    }
    v31 = v43;
    v48 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
    sub_249E11B3C();
    v32 = sub_249F1F280();
    v34 = v33;
    swift_bridgeObjectRelease();
    v48 = sub_249E68CA8(v32, v34, &v47);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v35 = v44;
    _os_log_impl(&dword_249D98000, v44, (os_log_type_t)v42, "%s prompt concepts %s", v31, 0x16u);
    v36 = v41;
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v36, -1, -1);
    MEMORY[0x24BD06618](v31, -1, -1);

    if ((unint64_t)a4 >= 2)
      goto LABEL_15;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if ((unint64_t)a4 >= 2)
    {
LABEL_15:
      v48 = a1;
      v49 = 0;
      v50 = 1;
      swift_bridgeObjectRetain();
      a4(a8, &v48);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t GenerativePlayground.PromptAssignmentTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__assignmentOptions, type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  return v0;
}

uint64_t GenerativePlayground.PromptAssignmentTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__assignmentOptions, type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  return swift_deallocClassInstance();
}

uint64_t sub_249E249F4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E24A3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E24A90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249E24AE0()
{
  return GenerativePlayground.PromptAssignmentTask.description.getter();
}

uint64_t sub_249E24B00()
{
  return type metadata accessor for GenerativePlayground.PromptAssignmentTask();
}

uint64_t type metadata accessor for GenerativePlayground.PromptAssignmentTask()
{
  uint64_t result;

  result = qword_2578D97B8;
  if (!qword_2578D97B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E24B44()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(319);
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.PromptAssignmentTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_249E24C04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_249DAFCF8;
  return sub_249E23DE4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_249E24C98()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    if (v1 == 1)
      goto LABEL_6;
    swift_release();
  }
  if (*(_QWORD *)(v0 + 48))
    swift_release();
LABEL_6:
  swift_release();
  return swift_deallocObject();
}

void sub_249E24CEC(uint64_t a1)
{
  uint64_t v1;

  sub_249E244C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_249E24D00(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 80) = v3;
  *(_QWORD *)(v4 + 64) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  *(_OWORD *)(v4 + 96) = *a2;
  return swift_task_switch();
}

uint64_t sub_249E24D6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;

  v2 = v0[12];
  v1 = v0[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6518);
  inited = swift_initStackObject();
  v0[14] = inited;
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_249E24DF4;
  return sub_249E25118(inited, v0[9]);
}

uint64_t sub_249E24DF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_setDeallocating();
  return swift_task_switch();
}

id sub_249E24E68()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id result;
  double v13;
  double v14;
  size_t Width;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  CGImage *v20;
  size_t Height;
  uint64_t v22;

  if (*(_QWORD *)(v0[16] + 16) && (v1 = sub_249DB8068(v0[12], v0[13]), (v2 & 1) != 0))
  {
    v3 = v1;
    v4 = v0[11];
    v5 = *(_QWORD *)(v0[16] + 56);
    v6 = type metadata accessor for GeneratedImage();
    v7 = *(_QWORD *)(v6 - 8);
    sub_249DC091C(v5 + *(_QWORD *)(v7 + 72) * v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  }
  else
  {
    v8 = v0[11];
    v6 = type metadata accessor for GeneratedImage();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v8, 1, 1, v6);
  }
  v9 = v0[11];
  swift_bridgeObjectRelease();
  type metadata accessor for GeneratedImage();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v9, 1, v6) != 1)
  {
    sub_249D9E308(v0[11], v0[8], (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    swift_task_dealloc();
    v19 = (uint64_t (*)(void))v0[1];
    return (id)v19();
  }
  v10 = v0[10];
  sub_249DCC2FC(v0[11], &qword_2578D6E70);
  v11 = *(void **)v10;
  if (!*(_BYTE *)(v10 + 8))
  {
    v20 = v11;
    Width = CGImageGetWidth(v20);
    Height = CGImageGetHeight(v20);
LABEL_18:
    v18 = Height;
    v17 = v0[12];
    v16 = v0[13];

    goto LABEL_19;
  }
  if (*(_BYTE *)(v10 + 8) != 1)
  {
    v20 = v11;
    Width = CVPixelBufferGetWidth(v20);
    Height = CVPixelBufferGetHeight(v20);
    goto LABEL_18;
  }
  result = objc_msgSend(v11, sel_extent);
  if (v13 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((*(_QWORD *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v14 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_23;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v14 < 9.22337204e18)
  {
    Width = (uint64_t)v13;
    v17 = v0[12];
    v16 = v0[13];
    v18 = (uint64_t)v14;
LABEL_19:
    sub_249DFC27C();
    swift_allocError();
    *(_QWORD *)v22 = Width;
    *(_QWORD *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v17;
    *(_QWORD *)(v22 + 24) = v16;
    *(_BYTE *)(v22 + 32) = 1;
    swift_willThrow();
    swift_task_dealloc();
    v19 = (uint64_t (*)(void))v0[1];
    return (id)v19();
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249E250DC()
{
  uint64_t v0;

  swift_setDeallocating();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E25118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  type metadata accessor for ImageProvenance();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

id sub_249E25174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  int v5;
  id result;
  double v7;
  double v8;
  size_t Width;
  uint64_t v11;
  unint64_t v12;
  CGImage *v13;
  size_t Height;
  __CVBuffer *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) || !*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
  {
    v12 = sub_249DCA3BC(MEMORY[0x24BEE4AF8]);
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(unint64_t))(v0 + 8))(v12);
  }
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = type metadata accessor for GeneratedImage();
  sub_249DC091C(v1 + *(int *)(v3 + 20), v2, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  v4 = *(void **)v1;
  *(_QWORD *)(v0 + 56) = *(_QWORD *)v1;
  v5 = *(unsigned __int8 *)(v1 + 8);
  if (!*(_BYTE *)(v1 + 8))
  {
    v13 = v4;
    Width = CGImageGetWidth(v13);
    Height = CGImageGetHeight(v13);
LABEL_17:
    v11 = Height;
    goto LABEL_18;
  }
  if (v5 != 1)
  {
    v15 = v4;
    Width = CVPixelBufferGetWidth(v15);
    Height = CVPixelBufferGetHeight(v15);
    goto LABEL_17;
  }
  result = objc_msgSend(v4, sel_extent);
  if (v7 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((*(_QWORD *)&v7 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v8 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_21;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v8 < 9.22337204e18)
  {
    Width = (uint64_t)v7;
    v11 = (uint64_t)v8;
LABEL_18:
    v16 = *(_QWORD *)(v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9880);
    v17 = swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v17;
    *(_OWORD *)(v17 + 16) = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v17 + 32) = Width;
    *(_QWORD *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v4;
    *(_BYTE *)(v17 + 56) = v5;
    *(_QWORD *)(v17 + 64) = v16;
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v18;
    *v18 = v0;
    v18[1] = sub_249E253A4;
    return (id)sub_249F1FC58();
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_249E253A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E25410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);

  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_249E25464()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);

  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E254B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  *(_BYTE *)(v8 + 360) = a8;
  *(_QWORD *)(v8 + 224) = a7;
  *(_QWORD *)(v8 + 232) = v12;
  *(_QWORD *)(v8 + 208) = a5;
  *(_QWORD *)(v8 + 216) = a6;
  *(_QWORD *)(v8 + 192) = a3;
  *(_QWORD *)(v8 + 200) = a4;
  *(_QWORD *)(v8 + 176) = a1;
  *(_QWORD *)(v8 + 184) = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9898);
  *(_QWORD *)(v8 + 240) = v9;
  *(_QWORD *)(v8 + 248) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  v10 = *(_QWORD *)(type metadata accessor for ImageProvenance() - 8);
  *(_QWORD *)(v8 + 264) = v10;
  *(_QWORD *)(v8 + 272) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E25584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59[2];

  v1 = *(_QWORD *)(v0 + 200);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_249DCA770(v2);
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v1 + 16);
  if (v52)
  {
    v4 = v0 + 16;
    v51 = (__int128 *)(v0 + 56);
    v50 = *(_QWORD *)(v0 + 264);
    v49 = *(void **)(v0 + 224);
    v53 = *(_QWORD *)(v0 + 200) + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    v58 = (_QWORD *)(v0 + 16);
    while (1)
    {
      sub_249D9E1E4(v53 + 40 * v5, v4);
      v7 = *(_QWORD *)(v3 + 16);
      if (!v7)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v4);
        goto LABEL_36;
      }
      v57 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6518);
      v8 = swift_allocObject();
      v9 = _swift_stdlib_malloc_size((const void *)v8);
      v10 = v9 - 32;
      if (v9 < 32)
        v10 = v9 - 17;
      *(_QWORD *)(v8 + 16) = v7;
      *(_QWORD *)(v8 + 24) = 2 * (v10 >> 4);
      v11 = sub_249DBEFE4(v59, (_OWORD *)(v8 + 32), v7, v3);
      swift_bridgeObjectRetain_n();
      result = sub_249D9E18C();
      if (v11 != (_QWORD *)v7)
        break;
      swift_bridgeObjectRelease();
      v59[0] = v8;
      sub_249DB1D54(v59);
      v14 = *(_QWORD *)(v0 + 208);
      v13 = *(_QWORD *)(v0 + 216);
      swift_bridgeObjectRelease();
      v4 = v0 + 16;
      v15 = v59[0];
      v16 = *(_QWORD *)(v0 + 40);
      v17 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1(v58, v16);
      v59[0] = v14;
      v59[1] = v13;
      v18 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 24))(v59, v15, v16, v17);
      swift_release();
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        if (*(_QWORD *)(v3 + 16))
        {
          swift_bridgeObjectRetain();
          for (i = 0; i != v19; ++i)
          {
            v22 = (uint64_t *)(v18 + 32 + 16 * i);
            v23 = *v22;
            v24 = v22[1];
            sub_249F1FF64();
            sub_249F1FF70();
            sub_249F1FF70();
            v25 = sub_249F1FFA0();
            v26 = -1 << *(_BYTE *)(v3 + 32);
            v27 = v25 & ~v26;
            if (((*(_QWORD *)(v3 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
            {
              v28 = ~v26;
              while (1)
              {
                v29 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v27);
                v31 = *v29;
                v30 = v29[1];
                if (v31 == v23 && v30 == v24)
                  break;
                v27 = (v27 + 1) & v28;
                if (((*(_QWORD *)(v3 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
                  goto LABEL_15;
              }
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v59[0] = v3;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_249DB5574();
              sub_249E489F8(v27);
              v3 = v59[0];
              swift_bridgeObjectRelease();
            }
LABEL_15:
            ;
          }
          swift_bridgeObjectRelease();
        }
        v33 = *(_QWORD *)(v0 + 296);
        v56 = *(_QWORD *)(v0 + 288);
        v34 = *(_QWORD *)(v0 + 280);
        v55 = *(_BYTE *)(v0 + 360);
        v35 = *(_QWORD *)(v0 + 232);
        v54 = *(_QWORD *)(v0 + 224);
        v36 = sub_249F1F604();
        v37 = *(_QWORD *)(v36 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v33, 1, 1, v36);
        sub_249D9E1E4((uint64_t)v58, (uint64_t)v51);
        sub_249DC091C(v35, v34, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
        v38 = (*(unsigned __int8 *)(v50 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = 0;
        *(_QWORD *)(v39 + 24) = 0;
        sub_249D9E174(v51, v39 + 32);
        *(_QWORD *)(v39 + 72) = v54;
        *(_BYTE *)(v39 + 80) = v55;
        *(_QWORD *)(v39 + 88) = v18;
        sub_249D9E308(v34, v39 + v38, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
        sub_249DDC154(v33, v56);
        LODWORD(v38) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v56, 1, v36);
        v40 = v49;
        v41 = *(_QWORD *)(v0 + 288);
        if ((_DWORD)v38 == 1)
        {
          sub_249DCC2FC(*(_QWORD *)(v0 + 288), &qword_2578D62B8);
        }
        else
        {
          sub_249F1F5F8();
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v36);
        }
        v4 = v0 + 16;
        if (*(_QWORD *)(v39 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v42 = sub_249F1F5B0();
          v44 = v43;
          swift_unknownObjectRelease();
        }
        else
        {
          v42 = 0;
          v44 = 0;
        }
        v45 = **(_QWORD **)(v0 + 184);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9880);
        v46 = v44 | v42;
        if (v44 | v42)
        {
          v46 = v0 + 96;
          *(_QWORD *)(v0 + 96) = 0;
          *(_QWORD *)(v0 + 104) = 0;
          *(_QWORD *)(v0 + 112) = v42;
          *(_QWORD *)(v0 + 120) = v44;
        }
        v6 = v57;
        v47 = *(_QWORD *)(v0 + 296);
        *(_QWORD *)(v0 + 128) = 1;
        *(_QWORD *)(v0 + 136) = v46;
        *(_QWORD *)(v0 + 144) = v45;
        swift_task_create();
        swift_release();
        sub_249DCC2FC(v47, &qword_2578D62B8);
      }
      else
      {
        swift_bridgeObjectRelease();
        v6 = v57;
      }
      v5 = v6 + 1;
      __swift_destroy_boxed_opaque_existential_1(v4);
      if (v5 == v52)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_36:
    *(_QWORD *)(v0 + 304) = v3;
    *(_QWORD *)(v0 + 312) = sub_249DCA3BC(MEMORY[0x24BEE4AF8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9880);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    sub_249F1F67C();
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v48;
    *v48 = v0;
    v48[1] = sub_249E25B5C;
    return sub_249F1F694();
  }
  return result;
}

uint64_t sub_249E25B5C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v2[39];
    v2[41] = 0;
    v2[42] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_249E25BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 336);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 328);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 168) = v2;
    sub_249E2642C(v1, (uint64_t)sub_249E263C4, 0, isUniquelyReferenced_nonNull_native, (_QWORD *)(v0 + 168));
    if (v3)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 168);
      swift_bridgeObjectRelease();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v7;
      *v7 = v0;
      v7[1] = sub_249E25D38;
      return sub_249F1F694();
    }
  }
  else
  {
    v6 = *(_QWORD **)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    swift_bridgeObjectRelease();
    *v6 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249E25D38()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v2[43];
    v2[41] = 0;
    v2[42] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_249E25DB4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E25E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 64) = a8;
  *(_BYTE *)(v8 + 25) = a6;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 32) = a1;
  v9 = type metadata accessor for GeneratedImage();
  *(_QWORD *)(v8 + 72) = v9;
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  *(_QWORD *)(v8 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E25EA8()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 25);
  v2 = *(_QWORD **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = v2[3];
  v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  *(_QWORD *)(v0 + 16) = v3;
  *(_BYTE *)(v0 + 24) = v1;
  v8 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 40) + *(_QWORD *)(v5 + 40));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v6;
  *v6 = v0;
  v6[1] = sub_249E25F44;
  return v8(v0 + 16, *(_QWORD *)(v0 + 56), v4, v5);
}

uint64_t sub_249E25F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E25FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  id v27;
  int isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;

  v1 = *(_QWORD *)(v0 + 112);
  v44 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 72);
  v47 = *(_QWORD *)(v0 + 96);
  result = sub_249DCA3BC(MEMORY[0x24BEE4AF8]);
  v3 = (_QWORD *)result;
  v4 = 0;
  v42 = v1 + 64;
  v48 = v1;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v1 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(v1 + 64);
  v43 = (unint64_t)(63 - v6) >> 6;
  v45 = v0;
  while (1)
  {
    if (v7)
    {
      v49 = (v7 - 1) & v7;
      v50 = v4;
      v9 = __clz(__rbit64(v7)) | (v4 << 6);
    }
    else
    {
      v10 = v4 + 1;
      if (__OFADD__(v4, 1))
        goto LABEL_35;
      if (v10 >= v43)
      {
LABEL_31:
        v41 = *(_QWORD **)(v0 + 32);
        swift_release();
        *v41 = v3;
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v11 = *(_QWORD *)(v42 + 8 * v10);
      v12 = v4 + 1;
      if (!v11)
      {
        v12 = v4 + 2;
        if (v4 + 2 >= v43)
          goto LABEL_31;
        v11 = *(_QWORD *)(v42 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 3;
          if (v4 + 3 >= v43)
            goto LABEL_31;
          v11 = *(_QWORD *)(v42 + 8 * v12);
          if (!v11)
          {
            v13 = v4 + 4;
            if (v4 + 4 >= v43)
              goto LABEL_31;
            v11 = *(_QWORD *)(v42 + 8 * v13);
            if (!v11)
            {
              while (1)
              {
                v12 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_36;
                if (v12 >= v43)
                  goto LABEL_31;
                v11 = *(_QWORD *)(v42 + 8 * v12);
                ++v13;
                if (v11)
                  goto LABEL_21;
              }
            }
            v12 = v4 + 4;
          }
        }
      }
LABEL_21:
      v49 = (v11 - 1) & v11;
      v50 = v12;
      v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    v15 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD **)(v0 + 96);
    v16 = 16 * v9;
    v17 = (uint64_t *)(*(_QWORD *)(v48 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(v48 + 56) + v16;
    v21 = *(void **)v20;
    v22 = *(_BYTE *)(v20 + 8);
    sub_249DC091C(*(_QWORD *)(v0 + 64), (uint64_t)v14 + *(int *)(v46 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    *v14 = v21;
    *(_BYTE *)(v47 + 8) = v22;
    v23 = (char *)v14 + *(int *)(v46 + 24);
    *v23 = 2;
    v24 = type metadata accessor for GeneratedImageIndications();
    v25 = &v23[*(int *)(v24 + 20)];
    v26 = sub_249F1F13C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    *(_QWORD *)&v23[*(int *)(v24 + 24)] = 0;
    sub_249DC091C((uint64_t)v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v27 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = sub_249DB8068(v19, v18);
    v31 = v3[2];
    v32 = (v29 & 1) == 0;
    result = v31 + v32;
    if (__OFADD__(v31, v32))
      break;
    v33 = v29;
    if (v3[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_249DBD9E0();
    }
    else
    {
      sub_249DBB570(result, isUniquelyReferenced_nonNull_native);
      v34 = sub_249DB8068(v19, v18);
      if ((v33 & 1) != (v35 & 1))
        return sub_249F1FF10();
      v30 = v34;
    }
    v0 = v45;
    v36 = *(_QWORD *)(v45 + 88);
    if ((v33 & 1) != 0)
    {
      sub_249E27070(v36, v3[7] + *(_QWORD *)(v44 + 72) * v30);
    }
    else
    {
      v3[(v30 >> 6) + 8] |= 1 << v30;
      v37 = (uint64_t *)(v3[6] + 16 * v30);
      *v37 = v19;
      v37[1] = v18;
      result = sub_249D9E308(v36, v3[7] + *(_QWORD *)(v44 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v38 = v3[2];
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (v39)
        goto LABEL_34;
      v3[2] = v40;
    }
    v7 = v49;
    v4 = v50;
    v8 = *(_QWORD *)(v45 + 96);
    swift_bridgeObjectRelease();

    result = sub_249DC05A8(v8, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_249E26388()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E263C4@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D98B0) + 48);
  v5 = (uint64_t)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D58) + 48);
  *a2 = *a1;
  return sub_249DC091C(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
}

uint64_t sub_249E2642C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t (*v26)();
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  int v43;
  _QWORD *v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v64 = a5;
  v9 = type metadata accessor for GeneratedImage();
  v56 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v54 = (uint64_t)v53 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v53 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D98B8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (_QWORD *)((char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = -1 << *(_BYTE *)(a1 + 32);
  v20 = ~v19;
  v21 = *(_QWORD *)(a1 + 64);
  v22 = -v19;
  v57 = a1;
  v58 = a1 + 64;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v59 = v20;
  v60 = 0;
  v61 = v23 & v21;
  v62 = a2;
  v63 = a3;
  v53[2] = a1;
  swift_bridgeObjectRetain();
  v53[1] = a3;
  swift_retain();
  sub_249E26978((uint64_t)v18);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D58);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 1, v24) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_249D9E18C();
    return swift_release();
  }
  v26 = type metadata accessor for GeneratedImage;
  while (1)
  {
    v32 = *v18;
    v33 = v18[1];
    v34 = (uint64_t)v15;
    v35 = v26;
    sub_249D9E308((uint64_t)v18 + *(int *)(v24 + 48), (uint64_t)v15, (uint64_t (*)(_QWORD))v26);
    v36 = *v64;
    v38 = sub_249DB8068(v32, v33);
    v39 = *(_QWORD *)(v36 + 16);
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (*(_QWORD *)(v36 + 24) >= v41)
    {
      if ((a4 & 1) != 0)
      {
        v44 = v64;
        v47 = (_QWORD *)*v64;
        if ((v37 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        v44 = v64;
        sub_249DBD9E0();
        v47 = (_QWORD *)*v44;
        if ((v42 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      v43 = a4 & 1;
      v44 = v64;
      sub_249DBB570(v41, v43);
      v45 = sub_249DB8068(v32, v33);
      if ((v42 & 1) != (v46 & 1))
        goto LABEL_22;
      v38 = v45;
      v47 = (_QWORD *)*v44;
      if ((v42 & 1) != 0)
      {
LABEL_7:
        v27 = v47[7];
        v28 = *(_QWORD *)(v56 + 72) * v38;
        v29 = v44;
        v30 = v55;
        v26 = v35;
        sub_249DC091C(v27 + v28, v55, (uint64_t (*)(_QWORD))v35);
        v31 = v54;
        sub_249DC091C(v30, v54, (uint64_t (*)(_QWORD))v35);
        sub_249DC05A8(v30, (uint64_t (*)(_QWORD))v35);
        v15 = (char *)v34;
        sub_249DC05A8(v34, (uint64_t (*)(_QWORD))v35);
        sub_249E27070(v31, *(_QWORD *)(*v29 + 56) + v28);
        goto LABEL_8;
      }
    }
    v47[(v38 >> 6) + 8] |= 1 << v38;
    v48 = (uint64_t *)(v47[6] + 16 * v38);
    *v48 = v32;
    v48[1] = v33;
    v49 = v47[7] + *(_QWORD *)(v56 + 72) * v38;
    v15 = (char *)v34;
    v26 = v35;
    sub_249D9E308(v34, v49, (uint64_t (*)(_QWORD))v35);
    v50 = v47[2];
    v51 = __OFADD__(v50, 1);
    v52 = v50 + 1;
    if (v51)
      goto LABEL_21;
    v47[2] = v52;
LABEL_8:
    sub_249E26978((uint64_t)v18);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D58);
    a4 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 1, v24) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249E267E8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_249E26978@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int64_t v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D98B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D98C0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (uint64_t *)((char *)&v40 - v11);
  v14 = *v1;
  v13 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v1[4];
  if (v17)
  {
    v42 = v1[2];
    v43 = v13;
    v18 = v3;
    v44 = v9;
    v45 = v15;
    v41 = v4;
    v19 = a1;
    v20 = (v17 - 1) & v17;
    v21 = __clz(__rbit64(v17)) | (v15 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v14 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v21);
    v24 = v14;
    v25 = *v23;
    v26 = v23[1];
    v27 = v22 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for GeneratedImage() - 8) + 72) * v21;
    v3 = v18;
    sub_249DC091C(v27, (uint64_t)v12 + *(int *)(v18 + 48), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v28 = 0;
    *v12 = v25;
    v12[1] = v26;
    v14 = v24;
    a1 = v19;
    v4 = v41;
    v16 = v42;
    v13 = v43;
    v9 = v44;
    goto LABEL_4;
  }
  v35 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return result;
  }
  v36 = (unint64_t)(v16 + 64) >> 6;
  if (v35 >= v36)
  {
    v45 = v1[3];
    v20 = 0;
    v28 = 1;
    goto LABEL_4;
  }
  v37 = *(_QWORD *)(v13 + 8 * v35);
  if (v37)
  {
LABEL_11:
    v42 = v1[2];
    v43 = v13;
    v18 = v3;
    v44 = v9;
    v45 = v35;
    v41 = v4;
    v19 = a1;
    v20 = (v37 - 1) & v37;
    v21 = __clz(__rbit64(v37)) + (v35 << 6);
    goto LABEL_3;
  }
  v38 = v15 + 2;
  if (v15 + 2 >= v36)
    goto LABEL_27;
  v37 = *(_QWORD *)(v13 + 8 * v38);
  if (v37)
  {
LABEL_15:
    v35 = v38;
    goto LABEL_11;
  }
  if (v15 + 3 >= v36)
    goto LABEL_28;
  v37 = *(_QWORD *)(v13 + 8 * (v15 + 3));
  if (v37)
  {
    v35 = v15 + 3;
    goto LABEL_11;
  }
  v38 = v15 + 4;
  if (v15 + 4 < v36)
  {
    v37 = *(_QWORD *)(v13 + 8 * v38);
    if (v37)
      goto LABEL_15;
    v35 = v15 + 5;
    if (v15 + 5 < v36)
    {
      v37 = *(_QWORD *)(v13 + 8 * v35);
      if (v37)
        goto LABEL_11;
      v35 = v36 - 1;
      v39 = v15 + 6;
      while (v36 != v39)
      {
        v37 = *(_QWORD *)(v13 + 8 * v39++);
        if (v37)
        {
          v35 = v39 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v20 = 0;
      v28 = 1;
      v45 = v35;
      goto LABEL_4;
    }
LABEL_28:
    v20 = 0;
    v28 = 1;
    v45 = v38;
    goto LABEL_4;
  }
  v20 = 0;
  v28 = 1;
  v45 = v15 + 3;
LABEL_4:
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, v28, 1, v3);
  *v1 = v14;
  v1[1] = v13;
  v29 = v45;
  v1[2] = v16;
  v1[3] = v29;
  v1[4] = v20;
  v30 = (void (*)(uint64_t))v1[5];
  sub_249DCB1B0((uint64_t)v12, (uint64_t)v9, &qword_2578D98C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 1, 1, v31);
  }
  else
  {
    v32 = (uint64_t)v9;
    v33 = v40;
    sub_249DCB1B0(v32, v40, &qword_2578D98B0);
    v30(v33);
    sub_249DCC2FC(v33, &qword_2578D98B0);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D58);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a1, 0, 1, v34);
  }
}

uint64_t sub_249E26CC8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_249E26E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v11 = *(_BYTE *)(v2 + 56);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_249DCC420;
  return sub_249E254B0(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_249E26F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ImageProvenance();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 96) & ~v2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249E26FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImageProvenance() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + 32;
  v8 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = v1 + ((v4 + 96) & ~v4);
  v11 = *(_BYTE *)(v1 + 80);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_249DAFCF8;
  return sub_249E25E2C(a1, v5, v6, v7, v8, v11, v9, v10);
}

uint64_t sub_249E27070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeneratedImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of GenderDirectiveSpecifying.genderDirective.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFA54;
  return v7(a1, a2);
}

uint64_t dispatch thunk of GenderDirectiveSpecifying.specifyGenderDirective(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DAFCF8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of GenderDirectiveSpecifying.dropGenderDirective()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFCF8;
  return v7(a1, a2);
}

unint64_t sub_249E27204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];
  _QWORD v12[5];
  unint64_t v13;
  unint64_t v14;

  v1 = v0;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  v13 = 0xD00000000000001CLL;
  v14 = 0x8000000249F35F50;
  v2 = type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy();
  v3 = *(_QWORD *)(v0 + *(int *)(v2 + 20));
  v4 = *(_QWORD *)(v1 + *(int *)(v2 + 28));
  swift_bridgeObjectRetain();
  v5 = sub_249E277A8(v4, v3);
  v6 = sub_249DBDDCC(v5);
  swift_release();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  v12[3] = v7;
  v8 = sub_249E27928(&qword_2578D98E8, MEMORY[0x24BEE12C8]);
  v12[4] = v8;
  v12[0] = v6;
  __swift_project_boxed_opaque_existential_1(v12, v7);
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = sub_249E72DE8;
  v11[5] = 0;
  swift_bridgeObjectRetain();
  v11[7] = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)v11, v7, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v9);
  sub_249E27928((unint64_t *)&qword_2578D8E38, MEMORY[0x24BEE12B0]);
  sub_249F1F280();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_release();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_249E273B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249D9E1A0(v1, a1);
}

uint64_t sub_249E273C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD v28[6];
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy();
  v11 = *(_QWORD *)(v0 + *(int *)(v10 + 20));
  v12 = *(_QWORD *)(v0 + *(int *)(v10 + 28));
  swift_bridgeObjectRetain();
  v13 = sub_249E277A8(v12, v11);
  v14 = sub_249DBDDCC(v13);
  swift_release();
  v15 = v14[2];
  if (v15)
  {
    v28[1] = v9;
    v28[2] = v6;
    v28[3] = v3;
    v33 = MEMORY[0x24BEE4AF8];
    sub_249DB673C(0, v15, 0);
    v16 = v33;
    v28[0] = v14;
    v17 = v14 + 5;
    do
    {
      v29 = 34;
      v30 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_249F1F460();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      v19 = v29;
      v18 = v30;
      v33 = v16;
      v21 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_249DB673C(v20 > 1, v21 + 1, 1);
        v16 = v33;
      }
      v17 += 2;
      *(_QWORD *)(v16 + 16) = v21 + 1;
      v22 = v16 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v19;
      *(_QWORD *)(v22 + 40) = v18;
      --v15;
    }
    while (v15);
    swift_release();
  }
  else
  {
    swift_release();
    v16 = MEMORY[0x24BEE4AF8];
  }
  sub_249F1F2D4();
  sub_249F1F2C8();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  v31 = v23;
  v24 = sub_249E27928(&qword_2578D98E8, MEMORY[0x24BEE12C8]);
  v32 = v24;
  v29 = v16;
  v25 = __swift_project_boxed_opaque_existential_1(&v29, v23);
  MEMORY[0x24BDAC7A8](v25);
  v28[-4] = v23;
  v28[-3] = v24;
  v28[-2] = sub_249E72DE8;
  v28[-1] = 0;
  swift_bridgeObjectRetain();
  v33 = sub_249E2262C((void (*)(char *, char *))sub_249E21784, (uint64_t)&v28[-6], v23, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v24, MEMORY[0x24BEE40A8], v26);
  sub_249E27928((unint64_t *)&qword_2578D8E38, MEMORY[0x24BEE12B0]);
  sub_249F1F280();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  swift_bridgeObjectRelease();
  sub_249F1F2BC();
  swift_bridgeObjectRelease();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  return sub_249F1F388();
}

uint64_t type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy()
{
  uint64_t result;

  result = qword_2578D9948;
  if (!qword_2578D9948)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E277A8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_249E2796C((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_249E2796C((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x24BD06618](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_249E27928(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8E30);
    result = MEMORY[0x24BD06528](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E2796C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_249F1FF64();
        swift_bridgeObjectRetain();
        sub_249F1F40C();
        v20 = sub_249F1FFA0();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_249F1FE2C() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_249F1FE2C() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_249F1FF64();
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    v47 = sub_249F1FFA0();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_249F1FE2C() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_249E27EA8(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_249F1FE2C() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_249E27EA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6118);
  result = sub_249F1FA60();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_249F1FF64();
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

char *sub_249E2813C(char *a1, char **a2, int *a3)
{
  char *v4;
  int v5;
  char *v6;
  char v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  int *__dsta;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v28[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = *a2;
    v7 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v7;
    __dsta = (int *)type metadata accessor for GeneratedImage();
    v8 = __dsta[5];
    v9 = &v4[v8];
    v10 = (uint64_t)a2 + v8;
    v4[v8] = *((_BYTE *)a2 + v8);
    v11 = (int *)type metadata accessor for ImageProvenance();
    v12 = v11[5];
    v13 = &v9[v12];
    v14 = v10 + v12;
    v15 = sub_249F1E8D8();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v17 = v6;
    v16(v13, v14, v15);
    *(_QWORD *)&v9[v11[6]] = *(_QWORD *)(v10 + v11[6]);
    *(_QWORD *)&v9[v11[7]] = *(_QWORD *)(v10 + v11[7]);
    v18 = __dsta[6];
    v19 = &v4[v18];
    v20 = (uint64_t)a2 + v18;
    v4[v18] = *((_BYTE *)a2 + v18);
    v21 = type metadata accessor for GeneratedImageIndications();
    v22 = *(int *)(v21 + 20);
    __dst = &v19[v22];
    v23 = (const void *)(v20 + v22);
    v24 = sub_249F1F13C();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    *(_QWORD *)&v19[*(int *)(v21 + 24)] = *(_QWORD *)(v20 + *(int *)(v21 + 24));
    v29 = a3[6];
    *(_QWORD *)&v4[a3[5]] = *(char **)((char *)a2 + a3[5]);
    v30 = &v4[v29];
    v31 = (char **)((char *)a2 + v29);
    v32 = v31[1];
    *(_QWORD *)v30 = *v31;
    *((_QWORD *)v30 + 1) = v32;
    *(_QWORD *)&v4[a3[7]] = *(char **)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_249E2834C(id *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for GeneratedImage();
  v3 = (char *)a1 + *(int *)(v2 + 20);
  v4 = &v3[*(int *)(type metadata accessor for ImageProvenance() + 20)];
  v5 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = (char *)a1 + *(int *)(v2 + 24);
  v7 = &v6[*(int *)(type metadata accessor for GeneratedImageIndications() + 20)];
  v8 = sub_249F1F13C();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E28460(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int *__dsta;
  void *__dst;

  v5 = *(void **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  __dsta = (int *)type metadata accessor for GeneratedImage();
  v7 = __dsta[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for ImageProvenance();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_249F1E8D8();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v5;
  v15(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  *(_QWORD *)(v8 + v10[7]) = *(_QWORD *)(v9 + v10[7]);
  v17 = __dsta[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v20 = type metadata accessor for GeneratedImageIndications();
  v21 = *(int *)(v20 + 20);
  __dst = (void *)(v18 + v21);
  v22 = (const void *)(v19 + v21);
  v23 = sub_249F1F13C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(_QWORD *)(v18 + *(int *)(v20 + 24)) = *(_QWORD *)(v19 + *(int *)(v20 + 24));
  v27 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249E28644(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  char v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;

  v5 = *(void **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v8 = v5;

  v9 = type metadata accessor for GeneratedImage();
  v10 = *(int *)(v9 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v13 = (int *)type metadata accessor for ImageProvenance();
  v14 = v13[5];
  v15 = v11 + v14;
  v16 = v12 + v14;
  v17 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *(_QWORD *)(v11 + v13[6]) = *(_QWORD *)(v12 + v13[6]);
  *(_QWORD *)(v11 + v13[7]) = *(_QWORD *)(v12 + v13[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(int *)(v9 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v33 = type metadata accessor for GeneratedImageIndications();
  v21 = *(int *)(v33 + 20);
  v22 = (void *)(v19 + v21);
  v23 = (void *)(v20 + v21);
  v24 = sub_249F1F13C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  LODWORD(v12) = v26(v22, 1, v24);
  v27 = v26(v23, 1, v24);
  if (!(_DWORD)v12)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  *(_QWORD *)(v19 + *(int *)(v33 + 24)) = *(_QWORD *)(v20 + *(int *)(v33 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[6];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249E288A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = type metadata accessor for GeneratedImage();
  v7 = *(int *)(v6 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for ImageProvenance();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  *(_QWORD *)(v8 + v10[7]) = *(_QWORD *)(v9 + v10[7]);
  v15 = *(int *)(v6 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v18 = type metadata accessor for GeneratedImageIndications();
  v19 = *(int *)(v18 + 20);
  v20 = (void *)(v16 + v19);
  v21 = (const void *)(v17 + v19);
  v22 = sub_249F1F13C();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_QWORD *)(v16 + *(int *)(v18 + 24)) = *(_QWORD *)(v17 + *(int *)(v18 + 24));
  v25 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_249E28A38(uint64_t a1, uint64_t a2, int *a3)
{
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;

  v7 = type metadata accessor for GeneratedImage();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = (int *)type metadata accessor for ImageProvenance();
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  *(_QWORD *)(v9 + v11[7]) = *(_QWORD *)(v10 + v11[7]);
  swift_bridgeObjectRelease();
  v16 = *(int *)(v7 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v33 = type metadata accessor for GeneratedImageIndications();
  v19 = *(int *)(v33 + 20);
  v20 = (void *)(v17 + v19);
  v21 = (void *)(v18 + v19);
  v22 = sub_249F1F13C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v10) = v24(v20, 1, v22);
  v25 = v24(v21, 1, v22);
  if (!(_DWORD)v10)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_7:
  *(_QWORD *)(v17 + *(int *)(v33 + 24)) = *(_QWORD *)(v18 + *(int *)(v33 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v27 = a3[6];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249E28C60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E28C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for GeneratedImage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_249E28CE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E28CF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for GeneratedImage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_249E28D6C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GeneratedImage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249E28DEC(uint64_t a1)
{
  uint64_t result;

  result = sub_249E28E54((unint64_t *)&qword_2578D6130, (uint64_t)&unk_249F2817C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249E28E20(uint64_t a1)
{
  uint64_t result;

  result = sub_249E28E54(&qword_2578D9988, (uint64_t)&unk_249F28138);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249E28E54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy();
    result = MEMORY[0x24BD06528](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E28E94(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, int *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *a2;
  v9 = a2[1];
  v10 = *a3;
  v11 = a3[1];
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)a5 + *a5);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_249DCC420;
  return v14(a1, v8, v9, v10, v11, a4);
}

uint64_t sub_249E28F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  _QWORD *v7;
  _QWORD *v10;
  int *v12;

  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  v7[5] = a5;
  v12 = (int *)((char *)a7 + *a7);
  v10 = (_QWORD *)swift_task_alloc();
  v7[6] = v10;
  *v10 = v7;
  v10[1] = sub_249E28FC4;
  return ((uint64_t (*)(uint64_t, _QWORD *, _QWORD *, uint64_t))v12)(a1, v7 + 2, v7 + 4, a6);
}

uint64_t sub_249E28FC4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *KeyboardEmojiGenerator.__allocating_init()()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  int v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_processName);
  v2 = sub_249F1F328();
  v4 = v3;

  LODWORD(v1) = objc_msgSend(v0, sel_processIdentifier);
  v6[0] = v2;
  v6[1] = v4;
  v7 = (int)v1;
  return _s16VisualGeneration22KeyboardEmojiGeneratorC6clientAcA14ClientIdentityV_tcfC_0((uint64_t)v6);
}

_QWORD *sub_249E290AC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v2 = v1;
  v4 = type metadata accessor for DefinitionSession();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v47 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v47 - v11;
  if (qword_2578D5D78 != -1)
    swift_once();
  v13 = sub_249F1EF38();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_2578FF3F0);
  sub_249DC091C(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v50 = a1;
  sub_249DC091C(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v15 = sub_249F1EF20();
  v16 = sub_249F1F82C();
  v17 = os_log_type_enabled(v15, v16);
  v49 = v7;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v51 = v19;
    *(_DWORD *)v18 = 136315394;
    v47[1] = v14;
    v20 = &v12[*(int *)(v4 + 20)];
    v22 = *(_QWORD *)v20;
    v21 = *((_QWORD *)v20 + 1);
    LODWORD(v20) = *((_DWORD *)v20 + 4);
    *(_QWORD *)&v52 = v22;
    *((_QWORD *)&v52 + 1) = v21;
    LODWORD(v53) = (_DWORD)v20;
    swift_bridgeObjectRetain();
    v23 = sub_249F1F3AC();
    v48 = v2;
    v24 = v4;
    *(_QWORD *)&v52 = sub_249E68CA8(v23, v25, &v51);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DC05A8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    *(_WORD *)(v18 + 12) = 2080;
    v26 = &v10[*(int *)(v4 + 56)];
    v28 = *((_QWORD *)v26 + 1);
    v27 = *((_QWORD *)v26 + 2);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v52 = sub_249E68CA8(v28, v27, &v51);
    sub_249F1F9AC();
    v4 = v24;
    v2 = v48;
    swift_bridgeObjectRelease();
    sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    _os_log_impl(&dword_249D98000, v15, v16, "Creating generator for %s targeting %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v19, -1, -1);
    MEMORY[0x24BD06618](v18, -1, -1);
  }
  else
  {
    sub_249DC05A8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  }

  type metadata accessor for AppleDiffusionResourceFactory(0);
  v29 = static AppleDiffusionResourceFactory.shared()();
  v30 = v50;
  v2[11] = v29;
  v31 = v30 + *(int *)(v4 + 56);
  v33 = *(_QWORD *)(v31 + 8);
  v32 = *(_QWORD *)(v31 + 16);
  v2[3] = v33;
  v2[4] = v32;
  v34 = qword_2578D5CF0;
  swift_bridgeObjectRetain_n();
  if (v34 != -1)
    swift_once();
  v35 = qword_2578FF318;
  v36 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v36)
  {
    v37 = swift_bridgeObjectRetain();
    v38 = 0;
    while (1)
    {
      v39 = *(_QWORD *)(v35 + 8 * v38 + 32);
      if ((*(uint64_t (**)(uint64_t))(v39 + 88))(v37) == v33 && v40 == v32)
        break;
      v42 = sub_249F1FE2C();
      v37 = swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_19;
      if (v36 == ++v38)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
LABEL_19:
    v43 = swift_bridgeObjectRelease();
    (*(void (**)(__int128 *__return_ptr, uint64_t))(v39 + 112))(&v52, v43);
  }
  else
  {
LABEL_17:
    v54 = 0;
    v52 = 0u;
    v53 = 0u;
  }
  v44 = (uint64_t)v49;
  swift_bridgeObjectRelease();
  sub_249E32148((uint64_t)&v52, (uint64_t)(v2 + 5));
  v2[2] = sub_249E2F3C8();
  sub_249DC091C(v30, v44, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  type metadata accessor for DefinitionSessionAccessor();
  v45 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_249D9E308(v44, v45 + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC05A8(v30, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v2[10] = v45;
  return v2;
}

uint64_t KeyboardEmojiGenerator.hasRequiredResources.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E295FC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.directableDemographicCategories.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_249DCC274(v1 + 40, (uint64_t)&v6, &qword_2578D62F0);
  if (v7)
  {
    sub_249D9E174(&v6, (uint64_t)v8);
    v4 = v9;
    v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 8))(v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    result = sub_249DCC2FC((uint64_t)&v6, &qword_2578D62F0);
    *a1 = 0;
  }
  return result;
}

uint64_t sub_249E296B4(int *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  int v7;
  int *v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  sub_249DCC274(v1 + 40, (uint64_t)&v9, &qword_2578D62F0);
  if (v10)
  {
    sub_249D9E174(&v9, (uint64_t)v11);
    v4 = v12;
    v3 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v3 + 16) + 8))(&v14, v4);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v6 = v14;
    if ((v2 & ~(_DWORD)v14) == 0)
      return result;
  }
  else
  {
    result = sub_249DCC2FC((uint64_t)&v9, &qword_2578D62F0);
    v6 = 0;
    if (!v2)
      return result;
  }
  v7 = v6 & ~v2;
  sub_249DCC2B8();
  swift_allocError();
  *v8 = v7;
  return swift_willThrow();
}

uint64_t sub_249E2979C(int a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = v1;
  if (qword_2578D5D78 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  v5 = sub_249F1EF20();
  v6 = sub_249F1F82C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = sub_249F1F3AC();
    sub_249E68CA8(v9, v10, &v23);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v5, v6, "Assigning directive %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    v11 = v8;
    v2 = v1;
    MEMORY[0x24BD06618](v11, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }

  LODWORD(v23) = a1;
  result = sub_249E296B4((int *)&v23);
  if (v2)
  {
    v13 = v2;
    v14 = v2;
    v15 = sub_249F1EF20();
    v16 = sub_249F1F820();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136446466;
      v19 = sub_249F1F3AC();
      sub_249E68CA8(v19, v20, &v23);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_getErrorValue();
      v21 = sub_249F1FF1C();
      sub_249E68CA8(v21, v22, &v23);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_249D98000, v15, v16, "Failed to assign directive %{public}s - %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v18, -1, -1);
      MEMORY[0x24BD06618](v17, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_249E29B04(int a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  if (qword_2578D5D78 != -1)
    swift_once();
  v8 = sub_249F1EF38();
  __swift_project_value_buffer(v8, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v9 = sub_249F1EF20();
  v10 = sub_249F1F82C();
  v27 = a2;
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v30 = v12;
    *(_DWORD *)v11 = 136446210;
    v29 = a3;
    swift_bridgeObjectRetain();
    v13 = sub_249F1F3AC();
    v28 = sub_249E68CA8(v13, v14, &v30);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v9, v10, "Assigning directive %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    v4 = v3;
    MEMORY[0x24BD06618](v15, -1, -1);
    MEMORY[0x24BD06618](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LODWORD(v28) = a1;
  result = sub_249E296B4((int *)&v28);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v17 = v4;
    swift_bridgeObjectRetain();
    v18 = v4;
    v19 = sub_249F1EF20();
    v20 = sub_249F1F820();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v30 = v22;
      *(_DWORD *)v21 = 136446466;
      v28 = v27;
      v29 = a3;
      swift_bridgeObjectRetain();
      v23 = sub_249F1F3AC();
      v28 = sub_249E68CA8(v23, v24, &v30);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      v25 = sub_249F1FF1C();
      v28 = sub_249E68CA8(v25, v26, &v30);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_249D98000, v19, v20, "Failed to assign directive %{public}s - %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v22, -1, -1);
      MEMORY[0x24BD06618](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    return swift_willThrow();
  }
  return result;
}

uint64_t KeyboardEmojiGenerator.genderDirective.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E29F30()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.specifyGenderDirective(_:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E29FAC()
{
  uint64_t v0;

  sub_249E2979C(1);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.dropGenderDirective()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A090()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.skinToneDirective.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A108()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.specifySkinToneDirective(_:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_BYTE *)(v2 + 104) = *a1;
  return swift_task_switch();
}

uint64_t sub_249E2A18C()
{
  uint64_t v0;

  sub_249E2979C(2);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.dropSkinToneDirective()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A270()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.personDescriptionDirective.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A2E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.specifyPersonDescriptionDirective(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_249E2A320()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_249E29B04(4, v0[2], v0[3]);
  v1 = *(_QWORD *)(v0[4] + 80);
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2578D6DE0 + dword_2578D6DE0);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_249DA55CC;
  return v4(v0[2], v0[3], v1);
}

uint64_t KeyboardEmojiGenerator.dropPersonDescriptionDirective()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A428()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.currentGenerationState.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for GenerationRecipe(0);
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for GenerationState();
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for DefinitionSession();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A518()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.apply(generationState:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2A590()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2A5AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249E2A61C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[11];
  v2 = v0[10];
  v3 = v0[8];
  v4 = type metadata accessor for GenerationState();
  sub_249DC0960(v3 + *(int *)(v4 + 28), v1 + *(int *)(v2 + 56), type metadata accessor for GenerationRecipe);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.allowPersonalizations.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.allowPersonalizations.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentOptions.allowPersonalizations.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.allowTextRejection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.allowTextRejection.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentOptions.allowTextRejection.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.personalizationUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  return sub_249DCC274(v1 + *(int *)(v3 + 24), a1, &qword_2578D6288);
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.personalizationUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0) + 24);
  return sub_249DC02EC(a1, v3);
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentOptions.personalizationUUID.modify())(_QWORD)
{
  type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.performLanguageCheck.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0)
                                     + 28));
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.performLanguageCheck.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentOptions.performLanguageCheck.modify())(_QWORD)
{
  type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.languageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = v1 + *(int *)(type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0) + 32);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_DWORD *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.languageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  v5 = v1 + *(int *)(type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_DWORD *)(v5 + 16) = v4;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentOptions.languageCheckingParameters.modify())(_QWORD)
{
  type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentOptions.init()@<X0>(_WORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char *v8;

  *a1 = 257;
  v2 = (int *)type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  v3 = (char *)a1 + v2[6];
  v4 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *((_BYTE *)a1 + v2[7]) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6290);
  sub_249F1E8F0();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_249F21770;
  sub_249F1E8E4();
  v6 = sub_249DC0334(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  v8 = (char *)a1 + v2[8];
  *(_QWORD *)v8 = v6;
  *((_QWORD *)v8 + 1) = 5;
  *((_DWORD *)v8 + 4) = 1064514355;
  return result;
}

uint64_t sub_249E2A9B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_249DCAC7C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_249DC09B8(v3);
}

uint64_t sub_249E2AA14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_249DCAC4C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  sub_249DC09B8(v3);
  result = sub_249DC0A2C(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentInteractable.eventsHandler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249DC09B8(*v0);
  return v1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentInteractable.eventsHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_249DC0A2C(*v2);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentInteractable.eventsHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_249E2AB14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = &unk_2578D6D38;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_249DC09B8(v3);
}

uint64_t sub_249E2AB78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = &unk_2578D6D30;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 16);
  sub_249DC09B8(v3);
  result = sub_249DC0A2C(v7);
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentInteractable.ambiguityResolver.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_249DC09B8(v1);
  return v1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentInteractable.ambiguityResolver.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249DC0A2C(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.DescriptionAssignmentInteractable.ambiguityResolver.modify())()
{
  return nullsub_1;
}

double KeyboardEmojiGenerator.DescriptionAssignmentInteractable.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t KeyboardEmojiGenerator.assignEmojiDescription(_:options:interactable:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  type metadata accessor for DefinitionSession();
  *(_QWORD *)(v5 + 48) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D99F8);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  v7 = type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  v8 = a4[1];
  *(_OWORD *)(v5 + 88) = *a4;
  *(_OWORD *)(v5 + 104) = v8;
  return swift_task_switch();
}

uint64_t sub_249E2AD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _WORD *v5;
  uint64_t v6;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  sub_249DCC274(*(_QWORD *)(v0 + 32), v3, &qword_2578D99F8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  v5 = *(_WORD **)(v0 + 80);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(int **)(v0 + 64);
    *v5 = 257;
    v8 = (char *)v5 + v7[6];
    v9 = sub_249F1E8D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    *((_BYTE *)v5 + v7[7]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6290);
    sub_249F1E8F0();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_249F21770;
    sub_249F1E8E4();
    v11 = sub_249DC0334(v10);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v12 = (char *)v5 + v7[8];
    *(_QWORD *)v12 = v11;
    *((_QWORD *)v12 + 1) = 5;
    *((_DWORD *)v12 + 4) = 1064514355;
    sub_249DCC2FC(v6, &qword_2578D99F8);
  }
  else
  {
    sub_249D9E308(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80), type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  }
  v13 = *(_QWORD *)(v0 + 112);
  v18 = *(_OWORD *)(v0 + 80);
  v19 = *(_OWORD *)(v0 + 96);
  v17 = *(_OWORD *)(v0 + 16);
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v14;
  *(_OWORD *)(v14 + 16) = v17;
  *(_OWORD *)(v14 + 32) = v18;
  *(_OWORD *)(v14 + 48) = v19;
  *(_QWORD *)(v14 + 64) = v13;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v15;
  *v15 = v0;
  v15[1] = sub_249E2AF50;
  return sub_249DEA4FC(*(_QWORD *)(v0 + 48), (uint64_t)&unk_2578D9A08, v14);
}

uint64_t sub_249E2AF50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_249DC05A8(*(_QWORD *)(v2 + 48), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E2AFE0()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 80), type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2B044()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 80), type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2B0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[18] = a8;
  v8[19] = v11;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a2;
  v8[13] = a3;
  v8[11] = a1;
  type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  v8[20] = swift_task_alloc();
  v9 = type metadata accessor for DefinitionSession();
  v8[21] = v9;
  v8[22] = *(_QWORD *)(v9 - 8);
  v8[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2B13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  sub_249E48CDC();
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 152);
  v13 = *(_OWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  v6 = type metadata accessor for _InternalCanceller();
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 192) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  sub_249DC091C(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(v4, v2, type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v7;
  type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentTask();
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 200) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249F1E8CC();
  sub_249D9E308(v1, v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249D9E174((__int128 *)(v0 + 16), v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller);
  *(_QWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 24) = v3;
  sub_249D9E308(v2, v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__assignmentOptions, type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  *(_OWORD *)(v0 + 56) = v13;
  *(_QWORD *)(v0 + 72) = v14;
  *(_QWORD *)(v0 + 80) = v15;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v10;
  *v10 = v0;
  v10[1] = sub_249D9FFAC;
  return sub_249E0FC88(*(_QWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
}

uint64_t KeyboardEmojiGenerator.assignedEmojiDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  type metadata accessor for DefinitionSession();
  *(_QWORD *)(v1 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2B3A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2B3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249E2B42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = sub_249E9954C();
  v4 = v3;
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v4);
}

Swift::Void __swiftcall KeyboardEmojiGenerator.dropEmojiDescriptionAssignment()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD000000000000020, 0x8000000249F35F70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D9A20;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D62E0, (uint64_t)v9);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249E2B630()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.dropEmojiDescriptionAssignment()();
}

uint64_t KeyboardEmojiGenerator.dropEmojiDescriptionAssignment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2B6D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.findPersonIndications()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for GenerationRecipe(0);
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for DefinitionSession();
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2B770()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.conditioningImage.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2B7E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 80);
  return swift_task_switch();
}

double KeyboardEmojiGenerator.ConditioningImageFaceInfo.normalizedQuartzCoordinateCropRect.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t KeyboardEmojiGenerator.conditioningImageFaces.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2B86C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2B888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249E2B8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(int *)(*(_QWORD *)(v0 + 48) + 56);
  v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 80) + v2;
  if (*(_QWORD *)(v3 + 24))
  {
    v4 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v18 = MEMORY[0x24BEE4AF8];
      sub_249DB68CC(0, v5, 0);
      v6 = 0;
      v7 = v18;
      v8 = *(_QWORD *)(v18 + 16);
      v9 = 32 * v8;
      do
      {
        v10 = *(_OWORD *)(v4 + v6 + 32);
        v11 = *(_OWORD *)(v4 + v6 + 48);
        v12 = *(_QWORD *)(v18 + 24);
        v13 = v8 + 1;
        if (v8 >= v12 >> 1)
        {
          v16 = *(_OWORD *)(v4 + v6 + 48);
          v17 = *(_OWORD *)(v4 + v6 + 32);
          sub_249DB68CC(v12 > 1, v8 + 1, 1);
          v11 = v16;
          v10 = v17;
        }
        *(_QWORD *)(v18 + 16) = v13;
        v14 = v18 + v9 + v6;
        *(_OWORD *)(v14 + 32) = v10;
        *(_OWORD *)(v14 + 48) = v11;
        v6 += 32;
        v8 = v13;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    v7 = 0;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t KeyboardEmojiGenerator.recommendedConditioningImageDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  __int128 v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;

  sub_249DCC274(v1 + 40, (uint64_t)v8, &qword_2578D62F0);
  v3 = v9;
  if (!v9)
  {
    result = sub_249DCC2FC((uint64_t)v8, &qword_2578D62F0);
    goto LABEL_5;
  }
  v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 56))(&v11, v3, v4);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if ((v12 & 1) != 0)
  {
LABEL_5:
    v7 = 0uLL;
    v6 = 1;
    goto LABEL_6;
  }
  v6 = 0;
  v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(_BYTE *)(a1 + 16) = v6;
  return result;
}

uint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentOptions.allowPersonalizations.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentOptions.allowPersonalizations.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.ConditioningImageAssignmentOptions.allowPersonalizations.modify())()
{
  return nullsub_1;
}

VisualGeneration::KeyboardEmojiGenerator::ConditioningImageAssignmentOptions __swiftcall KeyboardEmojiGenerator.ConditioningImageAssignmentOptions.init()()
{
  _BYTE *v0;
  VisualGeneration::KeyboardEmojiGenerator::ConditioningImageAssignmentOptions result;

  *v0 = 1;
  return result;
}

uint64_t KeyboardEmojiGenerator.assign(conditioningImage:options:eventsHandler:)(uint64_t *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 16) = a3;
  type metadata accessor for DefinitionSession();
  v8 = swift_task_alloc();
  v9 = *a1;
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 48) = v9;
  *(_BYTE *)(v5 + 72) = *((_BYTE *)a1 + 8);
  *(_BYTE *)(v5 + 73) = *a2;
  return swift_task_switch();
}

uint64_t sub_249E2BBAC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  char *v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (*(_BYTE *)(v0 + 73) == 2) | *(_BYTE *)(v0 + 73);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 80);
  v4 = *(id *)(v0 + 48);
  sub_249DC09B8(v1);
  v7 = (char *)&dword_2578D8020 + dword_2578D8020;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_249DA22EC;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v7)(*(_QWORD *)(v0 + 40), v3, *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 72), v2 & 1, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249E2BC58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 88) = a7;
  *(_BYTE *)(v7 + 153) = a5;
  *(_BYTE *)(v7 + 152) = a4;
  *(_QWORD *)(v7 + 64) = a2;
  *(_QWORD *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 56) = a1;
  v8 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2BCC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  sub_249E48CDC();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_BYTE *)(v0 + 153);
  v3 = *(_BYTE *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v6 = type metadata accessor for _InternalCanceller();
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  sub_249DC091C(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v7;
  type metadata accessor for KeyboardEmojiGenerator.ConditioningImageAssignmentTask();
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 128) = v9;
  v10 = v5;
  swift_retain();
  sub_249F1E8CC();
  sub_249D9E308(v1, v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v9 + 16) = v5;
  *(_BYTE *)(v9 + 24) = v3;
  sub_249D9E174((__int128 *)(v0 + 16), v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller);
  *(_BYTE *)(v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__options) = v2;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *v11 = v0;
  v11[1] = sub_249DA0C40;
  return sub_249E8862C(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t KeyboardEmojiGenerator.dropConditioningImageAssignment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2BED4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.supportedEmojiDimensions.getter()
{
  return swift_bridgeObjectRetain();
}

void KeyboardEmojiGenerator.defaultEmojiDimensions.getter(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v2 + 16))
    *a1 = *(_OWORD *)(v2 + 32);
  else
    __break(1u);
}

uint64_t KeyboardEmojiGenerator.generationSeed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x69746172656E6567, 0xEE00646565536E6FLL, 0xD000000000000016, 0x8000000249F34150);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6468);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_WORD *)(v6 + 24) = 256;
  *(_QWORD *)(v6 + 32) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D9A60;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D6478, (uint64_t)v9);
  swift_release();
  result = sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 25) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 16);
    swift_release();
    swift_release();

    return v12;
  }
  return result;
}

void KeyboardEmojiGenerator.generationSeed.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  dispatch_semaphore_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v8 = sub_249F1EF38();
  __swift_project_value_buffer(v8, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x69746172656E6567, 0xEE00646565536E6FLL, 0xD000000000000017, 0x8000000249F34170);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v2;
  *(_QWORD *)(v9 + 24) = a1;
  *(_BYTE *)(v9 + 32) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 1;
  *(_QWORD *)(v10 + 24) = 0;
  swift_retain();
  v11 = dispatch_semaphore_create(0);
  v12 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v11;
  v13[5] = &unk_2578D9A70;
  v13[6] = v9;
  v13[7] = v10;
  v14 = v11;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v7, (uint64_t)&unk_2578D9A78, (uint64_t)v13);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v10 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249E2C2DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2C338()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assignedGenerationSeed.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2C3B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2C3CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 112) = a4;
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 80) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2C42C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assign(generationSeed:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 80) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2C4A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 80);
  return swift_task_switch();
}

void (*KeyboardEmojiGenerator.generationSeed.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)a1 = KeyboardEmojiGenerator.generationSeed.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return sub_249E2C500;
}

void sub_249E2C500(uint64_t a1)
{
  KeyboardEmojiGenerator.generationSeed.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

VisualGeneration::KeyboardEmojiGenerator::Scaler_optional __swiftcall KeyboardEmojiGenerator.Scaler.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (VisualGeneration::KeyboardEmojiGenerator::Scaler_optional)rawValue;
}

uint64_t KeyboardEmojiGenerator.Scaler.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

VisualGeneration::KeyboardEmojiGenerator::Scaler_optional sub_249E2C548(Swift::Int *a1)
{
  return KeyboardEmojiGenerator.Scaler.init(rawValue:)(*a1);
}

void sub_249E2C550(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void KeyboardEmojiGenerator.GenerationOptions.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_WORD *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.maximumRepresentations.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.allowImageRejection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.allowImageRejection.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.allowImageRejection.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.performBackgroundRemoval.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.performBackgroundRemoval.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.performBackgroundRemoval.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.strikeSizes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.strikeSizes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.strikeSizes.modify())()
{
  return nullsub_1;
}

void KeyboardEmojiGenerator.GenerationOptions.strikeSizesScaler.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *KeyboardEmojiGenerator.GenerationOptions.strikeSizesScaler.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.strikeSizesScaler.modify())()
{
  return nullsub_1;
}

unint64_t KeyboardEmojiGenerator.GenerationOptions.lcmScale.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32);
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.lcmScale.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  *(_BYTE *)(v1 + 32) = BYTE4(result) & 1;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.lcmScale.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.engineeredPromptLanguageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_DWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t KeyboardEmojiGenerator.GenerationOptions.engineeredPromptLanguageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_DWORD *)(v1 + 56) = v4;
  return result;
}

uint64_t (*KeyboardEmojiGenerator.GenerationOptions.engineeredPromptLanguageCheckingParameters.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardEmojiGenerator.GeneratedEmoji.representations.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for GeneratedImage();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v19 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB68F0(0, v6, 0);
    v8 = *(unsigned __int8 *)(v2 + 80);
    v18 = v5;
    v9 = v5 + ((v8 + 32) & ~v8);
    v10 = *(_QWORD *)(v2 + 72);
    v7 = v19;
    do
    {
      sub_249DC091C(v9, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v11 = *(id *)v4;
      v12 = v4[8];
      v13 = *(id *)v4;
      sub_249DC05A8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB68F0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v19;
      }
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_249DB68F0(v14 > 1, v15 + 1, 1);
        v7 = v19;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_BYTE *)(v16 + 40) = v12;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t KeyboardEmojiGenerator.GeneratedEmoji.scaledInstances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_249E2C86C(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  uint64_t result;
  double v7;
  double v8;
  int64_t Width;
  uint64_t v11;
  __CVBuffer *v12;
  size_t Height;
  void *v14;
  double v15;
  double v16;
  int64_t v17;
  uint64_t v18;
  CGImage *v19;
  size_t v20;
  BOOL v21;

  v4 = *(void **)a1;
  v5 = *(unsigned __int8 *)(a1 + 8);
  if (v5)
  {
    if (v5 == 1)
    {
      result = (uint64_t)objc_msgSend(v4, sel_extent);
      if (v7 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v7 < 9.22337204e18)
      {
        if ((*(_QWORD *)&v7 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(_QWORD *)&v8 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v8 > -9.22337204e18)
          {
            if (v8 < 9.22337204e18)
            {
              Width = (uint64_t)v7;
              v11 = (uint64_t)v8;
              goto LABEL_15;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      __break(1u);
      goto LABEL_46;
    }
    v12 = v4;
    Width = CVPixelBufferGetWidth(v12);
    Height = CVPixelBufferGetHeight(v12);
  }
  else
  {
    v12 = v4;
    Width = CGImageGetWidth(v12);
    Height = CGImageGetHeight(v12);
  }
  v11 = Height;

LABEL_15:
  v14 = *(void **)a2;
  if (!*(_BYTE *)(a2 + 8))
  {
    v19 = v14;
    v17 = CGImageGetWidth(v19);
    v20 = CGImageGetHeight(v19);
    goto LABEL_31;
  }
  if (*(_BYTE *)(a2 + 8) != 1)
  {
    v19 = v14;
    v17 = CVPixelBufferGetWidth(v19);
    v20 = CVPixelBufferGetHeight(v19);
LABEL_31:
    v18 = v20;

    if (v18 >= v17)
    {
LABEL_24:
      if (v11 >= Width)
      {
        if (v17 >= Width)
        {
          if (Width >= v17)
            return v18 < v11;
          return 0;
        }
      }
      else if (v17 >= v11)
      {
        v21 = v11 < v17;
        v11 = Width;
        if (!v21)
          return v18 < v11;
        return 0;
      }
      return 1;
    }
LABEL_32:
    if (v11 >= Width)
    {
      if (v18 < Width)
        return 1;
      v21 = Width < v18;
    }
    else
    {
      if (v18 < v11)
        return 1;
      v21 = v11 < v18;
      v11 = Width;
    }
    v18 = v17;
    if (!v21)
      return v18 < v11;
    return 0;
  }
  result = (uint64_t)objc_msgSend(v14, sel_extent);
  if (v15 <= -9.22337204e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if ((*(_QWORD *)&v15 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v16 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_51;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v16 < 9.22337204e18)
  {
    v17 = (uint64_t)v15;
    v18 = (uint64_t)v16;
    if ((uint64_t)v16 >= (uint64_t)v15)
      goto LABEL_24;
    goto LABEL_32;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t KeyboardEmojiGenerator.generatedEmoji(options:eventsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v5 + 96) = a4;
  *(_QWORD *)(v5 + 104) = v4;
  *(_QWORD *)(v5 + 80) = a1;
  *(_QWORD *)(v5 + 88) = a3;
  v7 = sub_249F1E8D8();
  *(_QWORD *)(v5 + 112) = v7;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 136) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 152) = v8;
  *(_OWORD *)(v5 + 168) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(v5 + 184) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(v5 + 76) = *(_DWORD *)(a2 + 56);
  return swift_task_switch();
}

uint64_t sub_249E2CB80()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_DWORD *)(v0 + 76);
  v2 = *(_QWORD *)(v0 + 184);
  v6 = *(_OWORD *)(v0 + 152);
  v7 = *(_OWORD *)(v0 + 168);
  v5 = *(_OWORD *)(v0 + 136);
  sub_249F1E8CC();
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v2;
  *(_DWORD *)(v0 + 72) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v3;
  *v3 = v0;
  v3[1] = sub_249E2CC24;
  return KeyboardEmojiGenerator.generatedEmoji(options:generationID:eventsHandler:)(*(_QWORD *)(v0 + 80), v0 + 16, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_249E2CC24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E2CC88()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2CCD0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.generatedEmoji(options:generationID:eventsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_QWORD *)(v6 + 224) = a5;
  *(_QWORD *)(v6 + 232) = v5;
  *(_QWORD *)(v6 + 208) = a3;
  *(_QWORD *)(v6 + 216) = a4;
  *(_QWORD *)(v6 + 200) = a1;
  type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)(v6 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  *(_QWORD *)(v6 + 248) = swift_task_alloc();
  *(_QWORD *)(v6 + 256) = type metadata accessor for GenerationState();
  *(_QWORD *)(v6 + 264) = swift_task_alloc();
  *(_QWORD *)(v6 + 272) = swift_task_alloc();
  *(_QWORD *)(v6 + 280) = swift_task_alloc();
  *(_QWORD *)(v6 + 288) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v6 + 296) = swift_task_alloc();
  *(_QWORD *)(v6 + 304) = swift_task_alloc();
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 312) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 328) = v8;
  *(_OWORD *)(v6 + 344) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(v6 + 360) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(v6 + 76) = *(_DWORD *)(a2 + 56);
  return swift_task_switch();
}

uint64_t sub_249E2CE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 328);
  if (v1 == 1)
  {
    LOBYTE(v2) = 0;
    v3 = 0;
    LOBYTE(v4) = 0;
    LODWORD(v5) = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 1;
    v10 = 1;
    LOBYTE(v11) = 1;
    v12 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 320);
  }
  else
  {
    v5 = HIDWORD(*(_QWORD *)(v0 + 336));
    v12 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 320);
    v10 = v13 & 1;
    v2 = (v13 >> 8) & 1;
    v11 = *(_QWORD *)(v0 + 344) & 1;
    v9 = v12;
    v3 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 352);
    v7 = *(_QWORD *)(v0 + 360);
    v8 = *(_DWORD *)(v0 + 76);
  }
  *(_DWORD *)(v0 + 484) = v8;
  *(_QWORD *)(v0 + 384) = v6;
  *(_QWORD *)(v0 + 392) = v7;
  *(_BYTE *)(v0 + 491) = v11;
  *(_DWORD *)(v0 + 480) = v5;
  *(_BYTE *)(v0 + 490) = v4;
  *(_BYTE *)(v0 + 489) = v2;
  *(_BYTE *)(v0 + 488) = v10;
  *(_QWORD *)(v0 + 368) = v9;
  *(_QWORD *)(v0 + 376) = v3;
  *(_QWORD *)(v0 + 16) = v9;
  *(_BYTE *)(v0 + 24) = v10;
  *(_BYTE *)(v0 + 25) = v2;
  *(_QWORD *)(v0 + 32) = v3;
  *(_BYTE *)(v0 + 40) = v4;
  *(_DWORD *)(v0 + 44) = v5;
  *(_BYTE *)(v0 + 48) = v11;
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  *(_DWORD *)(v0 + 72) = v8;
  sub_249E2F9FC(v12, v13, v1);
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v14;
  *(_QWORD *)v14 = v0;
  *(_QWORD *)(v14 + 8) = sub_249E2CF88;
  v15 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v14 + 56) = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v14 + 64) = v15;
  *(_BYTE *)(v14 + 124) = *(_BYTE *)(v0 + 25);
  *(_DWORD *)(v14 + 120) = *(_DWORD *)(v0 + 44);
  *(_BYTE *)(v14 + 125) = *(_BYTE *)(v0 + 48);
  return swift_task_switch();
}

uint64_t sub_249E2CF88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E2CFEC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  int v43;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58[2];
  int v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  _QWORD v70[7];

  v52 = v0 + 160;
  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(int **)(v0 + 288);
  v3 = v2[6];
  v4 = v1 + v2[5];
  v50 = *(_QWORD *)v4;
  v53 = *(_QWORD *)(v4 + 8);
  v51 = *(_DWORD *)(v4 + 16);
  v56 = *(_QWORD *)(v1 + v3);
  v57 = (uint64_t *)(v0 + 80);
  *(_QWORD *)(v0 + 416) = v56;
  v5 = *(_QWORD *)(v1 + v3 + 8);
  *(_QWORD *)(v0 + 424) = v5;
  v6 = *(void **)(v1 + v2[11]);
  *(_QWORD *)(v0 + 432) = v6;
  v7 = *(_QWORD *)(v1 + v2[15]);
  *(_QWORD *)(v0 + 440) = v7;
  v8 = v1 + v2[14];
  v54 = v7;
  v55 = v5;
  if (*(_QWORD *)(v8 + 8) == 0xD000000000000029 && *(_QWORD *)(v8 + 16) == 0x8000000249F34090
    || (sub_249F1FE2C() & 1) != 0)
  {
    v9 = type metadata accessor for InputConditioner();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v0 + 144) = v9;
    *(_QWORD *)(v0 + 152) = &off_251B53448;
    *(_QWORD *)(v0 + 120) = v10;
    v11 = v6;
  }
  else
  {
    *(_QWORD *)(v0 + 152) = 0;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
  }
  v49 = *(_QWORD *)(v0 + 408);
  v48 = *(_DWORD *)(v0 + 484);
  v46 = *(_QWORD *)(v0 + 384);
  v47 = *(_QWORD *)(v0 + 392);
  v43 = *(_DWORD *)(v0 + 480);
  v44 = *(_BYTE *)(v0 + 491);
  v41 = *(_BYTE *)(v0 + 489);
  v42 = *(_BYTE *)(v0 + 490);
  v39 = *(_BYTE *)(v0 + 488);
  v40 = *(_QWORD *)(v0 + 376);
  v13 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 264);
  v38 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 248);
  v34 = *(int **)(v0 + 256);
  v35 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 280);
  v16 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  v45 = v6;
  sub_249DC09B8(v56);
  swift_retain();
  sub_249DA7068(v0 + 120, v57);
  sub_249DCC2FC(v0 + 120, &qword_2578D6448);
  sub_249DC091C(v12, v13, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v17 = sub_249F1E8D8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v19(v15, v16, v17);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v20(v15, 0, 1, v17);
  v21 = v14 + v34[5];
  v20(v21, 1, 1, v17);
  v19(v14, v13, v17);
  sub_249DC02EC(v15, v21);
  v22 = (uint64_t *)(v13 + v2[5]);
  v23 = *v22;
  v24 = v22[1];
  v25 = (_QWORD *)(v14 + v34[6]);
  *v25 = v23;
  v25[1] = v24;
  sub_249DC091C(v13 + v2[14], v35, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v13, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249D9E308(v35, v14 + v34[7], type metadata accessor for GenerationRecipe);
  sub_249D9E308(v14, v36, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v26 = type metadata accessor for _InternalCanceller();
  v27 = swift_allocObject();
  *(_QWORD *)(v0 + 448) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = 0;
  *(_QWORD *)(v27 + 16) = v28;
  v58[0] = v50;
  v58[1] = v53;
  v59 = v51;
  sub_249DC091C(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249D9E1E4((uint64_t)v57, v52);
  v60 = v38;
  v61 = v39;
  v62 = v41;
  v63 = v40;
  v64 = v42;
  v65 = v43;
  v66 = v44;
  v67 = v46;
  v68 = v47;
  v69 = v48;
  v70[3] = v26;
  v70[4] = &off_251B54510;
  v70[0] = v27;
  type metadata accessor for KeyboardEmojiGenerator.GenerationTask();
  swift_allocObject();
  v29 = v45;
  sub_249DC09B8(v56);
  swift_retain();
  swift_retain();
  *(_QWORD *)(v0 + 456) = sub_249DE26CC(v58, v37, v52, &v60, v56, v55, v45, v54, (uint64_t)v70);
  if (v49)
  {
    v30 = *(_QWORD *)(v0 + 304);
    v31 = *(_QWORD *)(v0 + 280);
    swift_release();
    swift_release();

    sub_249DC0A2C(v56);
    sub_249DC05A8(v31, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    sub_249DC05A8(v30, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 464) = v33;
    *v33 = v0;
    v33[1] = sub_249E2D528;
    return sub_249DE2A20(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  }
}

uint64_t sub_249E2D528()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E2D58C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  swift_release();
  swift_release();

  swift_release();
  sub_249DC0A2C(v2);
  sub_249DC05A8(v4, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2D688()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2D720()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  swift_release();
  swift_release();

  swift_release();
  sub_249DC0A2C(v2);
  sub_249DC05A8(v4, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2D80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v2;
  *(_BYTE *)(v3 + 124) = *(_BYTE *)(a2 + 9);
  *(_DWORD *)(v3 + 120) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(v3 + 125) = *(_BYTE *)(a2 + 32);
  return swift_task_switch();
}

uint64_t sub_249E2D83C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2D858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249E2D8C8()
{
  uint64_t v0;
  char v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_BYTE *)(v0 + 125);
  v2 = *(_DWORD *)(v0 + 120);
  v3 = *(_BYTE *)(v0 + 124);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = v4 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_QWORD *)(v5 + 48) = 1;
  *(_BYTE *)(v5 + 59) = v3;
  v6 = v5 + *(int *)(type metadata accessor for GenerationRecipe(0) + 40);
  *(_DWORD *)v6 = v2;
  *(_BYTE *)(v6 + 4) = v1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  *v7 = v0;
  v7[1] = sub_249E2D968;
  return sub_249E997C8((uint64_t)&unk_251B4DA78);
}

uint64_t sub_249E2D968()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E2D9D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _DWORD *v17;
  uint64_t v19;
  _QWORD *v20;

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v2 = sub_249F1EF38();
  __swift_project_value_buffer(v2, (uint64_t)qword_2578FF3F0);
  v3 = v1;
  v4 = v1;
  v5 = sub_249F1EF20();
  v6 = sub_249F1F820();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 88);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v12;
    sub_249F1F9AC();
    *v10 = v12;

    _os_log_impl(&dword_249D98000, v5, v6, "Unable to set style .emoji for KeyboardEmojiGenerator: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v10, -1, -1);
    MEMORY[0x24BD06618](v9, -1, -1);
  }
  else
  {

  }
  v13 = DefinitionSession.availableImageStyles.getter();
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = *(unsigned __int8 *)(v13 + 32);
    swift_bridgeObjectRelease();
    v15 = sub_249F1EF20();
    v16 = sub_249F1F820();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (_DWORD *)swift_slowAlloc();
      swift_slowAlloc();
      *v17 = 136315138;
      __asm { BR              X9 }
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
    v19 = swift_allocObject();
    *(_QWORD *)(v0 + 96) = v19;
    *(_OWORD *)(v19 + 16) = xmmword_249F21770;
    *(_BYTE *)(v19 + 32) = v14;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v20;
    *v20 = v0;
    v20[1] = sub_249E2DE5C;
    return sub_249E997C8(v19);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_249DC05A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249E2DE5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_249E2DEC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2DEFC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease();

  sub_249DC05A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.retone(_:to:eventsHandler:)()
{
  return swift_task_switch();
}

uint64_t sub_249E2DF5C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_249E2FA30();
  swift_allocError();
  *v1 = 0xD000000000000013;
  v1[1] = 0x8000000249F35FA0;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.retone(generatedEmoji:to:eventsHandler:)(uint64_t a1, uint64_t *a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = v5;
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a4;
  v9 = sub_249F1E8D8();
  *(_QWORD *)(v6 + 72) = v9;
  *(_QWORD *)(v6 + 80) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 96) = swift_task_alloc();
  type metadata accessor for DefinitionSession();
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  v10 = swift_task_alloc();
  v11 = *a2;
  *(_QWORD *)(v6 + 112) = v10;
  *(_QWORD *)(v6 + 120) = v11;
  *(_BYTE *)(v6 + 168) = *a3;
  return swift_task_switch();
}

uint64_t sub_249E2E090()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2E0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249E2E11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD v16[6];

  v13 = *(_BYTE *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  sub_249F1E8CC();
  v8 = type metadata accessor for _InternalCanceller();
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 136) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 0;
  *(_QWORD *)(v9 + 16) = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
  sub_249DC091C(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v14 = v1;
  v15 = v13;
  v16[3] = v8;
  v16[4] = &off_251B54510;
  v16[0] = v9;
  type metadata accessor for KeyboardEmojiGenerator.ImageToningTask();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  *(_QWORD *)(v0 + 144) = sub_249E3ECAC(v5, v3, &v14, &v15, (uint64_t)v16);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v11;
  *v11 = v0;
  v11[1] = sub_249E2E304;
  return sub_249E3D7C8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_249E2E304()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E2E368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E2E408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + 40, &qword_2578D62F0);
  swift_release();
  swift_release();
  return v0;
}

uint64_t KeyboardEmojiGenerator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + 40, &qword_2578D62F0);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_249E2E534()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DAFA54;
  return KeyboardEmojiGenerator.hasRequiredResources.getter();
}

uint64_t sub_249E2E57C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249E2E5D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2E5F4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = type metadata accessor for DefinitionSession();
  v4 = swift_task_alloc();
  v5 = *v2;
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = v5;
  return swift_task_switch();
}

uint64_t sub_249E2E658()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2E674@<X0>(_DWORD *a1@<X8>)
{
  return KeyboardEmojiGenerator.directableDemographicCategories.getter(a1);
}

uint64_t sub_249E2E694()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249E2E6F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2E70C(char a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DAFCF8;
  return KeyboardEmojiGenerator.specifyGenderDirective(_:)(a1);
}

uint64_t sub_249E2E75C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.dropGenderDirective()();
}

uint64_t sub_249E2E7A4(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = type metadata accessor for DefinitionSession();
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[7] = v3;
  v2[8] = v4;
  return swift_task_switch();
}

uint64_t sub_249E2E804()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2E820(_BYTE *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.specifySkinToneDirective(_:)(a1);
}

uint64_t sub_249E2E870()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.dropSkinToneDirective()();
}

uint64_t sub_249E2E8B8()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249E2E914()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2E930(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_249E2E950()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.dropPersonDescriptionDirective()();
}

uint64_t sub_249E2E998(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.currentGenerationState.getter(a1);
}

uint64_t sub_249E2E9EC(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[9] = type metadata accessor for DefinitionSession();
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[10] = v3;
  v2[11] = v4;
  return swift_task_switch();
}

uint64_t sub_249E2EA4C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 80);
  return swift_task_switch();
}

_QWORD *KeyboardEmojiGenerator.__allocating_init(imageGeneratorIdentifier:client:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  _QWORD *v13;
  __int128 v15;
  int v16;

  v6 = type metadata accessor for DefinitionSession();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = *((_DWORD *)a3 + 4);
  v15 = *a3;
  v16 = v12;
  sub_249E991D0((uint64_t)&v15, 0, a1, a2, (uint64_t)&v15 - v10);
  sub_249DC091C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v13 = sub_249E290AC((uint64_t)v9);
  sub_249DC05A8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return v13;
}

_QWORD *KeyboardEmojiGenerator.__allocating_init(definitionSession:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v7;

  v2 = type metadata accessor for DefinitionSession();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v5 = sub_249E290AC((uint64_t)v4);
  sub_249DC05A8(a1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return v5;
}

uint64_t KeyboardEmojiGenerator.definitionSession.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_249E2EC28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.forceInProcessGeneration.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2ECA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assign(forceInProcessGeneration:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2ED1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2ED38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  _QWORD *v15;
  uint64_t result;
  __int128 v17;
  int v18;

  v8 = type metadata accessor for DefinitionSession();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v14 = *((_DWORD *)a3 + 4);
  v17 = *a3;
  v18 = v14;
  sub_249E991D0((uint64_t)&v17, 0, a1, a2, (uint64_t)&v17 - v12);
  sub_249DC091C((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v15 = sub_249E290AC((uint64_t)v11);
  result = sub_249DC05A8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *a4 = v15;
  return result;
}

uint64_t sub_249E2EE40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;

  v4 = type metadata accessor for DefinitionSession();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v7 = sub_249E290AC((uint64_t)v6);
  result = sub_249DC05A8(a1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *a2 = v7;
  return result;
}

uint64_t sub_249E2EEF0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249E2EF4C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2EF68(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 64) = type metadata accessor for DefinitionSession();
  v3 = swift_task_alloc();
  v4 = *v1;
  *(_QWORD *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 80) = v4;
  return swift_task_switch();
}

uint64_t sub_249E2EFC8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assignedForensicsReporter.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2F040()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assign(forensicsReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  type metadata accessor for DefinitionSession();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2F0B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2F0D4()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249E2F130()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 80);
  return swift_task_switch();
}

uint64_t sub_249E2F14C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[8] = a1;
  v3[9] = a2;
  type metadata accessor for DefinitionSession();
  v4 = swift_task_alloc();
  v5 = *v2;
  v3[10] = v4;
  v3[11] = v5;
  return swift_task_switch();
}

uint64_t sub_249E2F1A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.allowImageRejection.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2F220()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assign(allowImageRejection:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 96) = a1;
  type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2F298()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.enableGenerativeModelsAvailabilityCheck.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  type metadata accessor for GenerationRecipe(0);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for DefinitionSession();
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2F330()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  return swift_task_switch();
}

uint64_t KeyboardEmojiGenerator.assign(enableGenerativeModelsAvailabilityCheck:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E2F3AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80);
  return swift_task_switch();
}

_QWORD *sub_249E2F3C8()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v5;

  v0 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v1 = sub_249E9A454();
  if (v1)
  {
    sub_249E5DC60(v1);
    v0 = v5;
  }
  if (!v0[2])
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_249DB20AC(0, 1, 1, v0);
    v3 = v0[2];
    v2 = v0[3];
    if (v3 >= v2 >> 1)
      v0 = sub_249DB20AC((_QWORD *)(v2 > 1), v3 + 1, 1, v0);
    v0[2] = v3 + 1;
    *(int64x2_t *)&v0[2 * v3 + 4] = vdupq_n_s64(0x180uLL);
  }
  return v0;
}

_QWORD *_s16VisualGeneration22KeyboardEmojiGeneratorC6clientAcA14ClientIdentityV_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD v19[2];
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  v2 = type metadata accessor for DefinitionSession();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - v6;
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v20 = *(_DWORD *)(a1 + 16);
  if (qword_2578D5D78 != -1)
    swift_once();
  v10 = sub_249F1EF38();
  __swift_project_value_buffer(v10, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v11 = sub_249F1EF20();
  v12 = sub_249F1F82C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v21 = v14;
    v22 = v9;
    v19[1] = v13 + 4;
    v23 = v8;
    v24 = v20;
    swift_bridgeObjectRetain();
    v15 = sub_249F1F3AC();
    v22 = sub_249E68CA8(v15, v16, &v21);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v11, v12, "Creating generator for %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v14, -1, -1);
    MEMORY[0x24BD06618](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for AppleDiffusionResourceFactory(0);
  static AppleDiffusionResourceFactory.shared()();
  v22 = v9;
  v23 = v8;
  v24 = v20;
  sub_249E991D0((uint64_t)&v22, 0, 0, 0, (uint64_t)v7);
  sub_249DC091C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  type metadata accessor for KeyboardEmojiGenerator();
  swift_allocObject();
  v17 = sub_249E290AC((uint64_t)v5);
  sub_249DC05A8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_release();
  return v17;
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D9CB8);
}

uint64_t sub_249E2F778(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_249DAFCF8;
  return sub_249E2B0A8(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_249E2F81C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_249DCC420;
  return KeyboardEmojiGenerator.dropEmojiDescriptionAssignment()();
}

uint64_t sub_249E2F884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_249DCC420;
  return sub_249E2C2DC(a1, v1);
}

uint64_t sub_249E2F8DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E2F900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_249DCC420;
  return sub_249E2C3CC(a1, v4, v5, v6);
}

uint64_t sub_249E2F970(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (int *)v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_249DCC420;
  return sub_249DB1DBC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_249E2F9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_249E2FA30()
{
  unint64_t result;

  result = qword_2578D9AB0;
  if (!qword_2578D9AB0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.ImageToningTask.Error, &type metadata for KeyboardEmojiGenerator.ImageToningTask.Error);
    atomic_store(result, (unint64_t *)&qword_2578D9AB0);
  }
  return result;
}

unint64_t sub_249E2FA78()
{
  unint64_t result;

  result = qword_2578D9B08;
  if (!qword_2578D9B08)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.Scaler, &type metadata for KeyboardEmojiGenerator.Scaler);
    atomic_store(result, (unint64_t *)&qword_2578D9B08);
  }
  return result;
}

uint64_t sub_249E2FACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = KeyboardEmojiGenerator.generationSeed.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_249E2FAFC(uint64_t a1)
{
  KeyboardEmojiGenerator.generationSeed.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t type metadata accessor for KeyboardEmojiGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for KeyboardEmojiGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for KeyboardEmojiGenerator.DescriptionAssignmentOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E2FB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.DescriptionAssignmentOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E2FBF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_249E2FC74()
{
  unint64_t v0;

  sub_249E2FCF4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249E2FCF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578D6798[0])
  {
    sub_249F1E8D8();
    v0 = sub_249F1F970();
    if (!v1)
      atomic_store(v0, qword_2578D6798);
  }
}

id sub_249E2FD4C(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for KeyboardEmojiGenerator.DescriptionAssignmentEvent(uint64_t a1)
{
  sub_249E2FD98(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_249E2FD98(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t _s16VisualGeneration22KeyboardEmojiGeneratorC26DescriptionAssignmentEventOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E2FD4C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for KeyboardEmojiGenerator.DescriptionAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E2FD4C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_249E2FD98(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for KeyboardEmojiGenerator.DescriptionAssignmentEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_249E2FD98(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentEvent()
{
  return &type metadata for KeyboardEmojiGenerator.DescriptionAssignmentEvent;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentInteractable()
{
  return &type metadata for KeyboardEmojiGenerator.DescriptionAssignmentInteractable;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.ConditioningImageFaceInfo()
{
  return &type metadata for KeyboardEmojiGenerator.ConditioningImageFaceInfo;
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.ConditioningImageAssignmentOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E2FF30 + 4 * byte_249F281C4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E2FF64 + 4 * byte_249F281BF[v4]))();
}

uint64_t sub_249E2FF64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E2FF6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E2FF74);
  return result;
}

uint64_t sub_249E2FF80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E2FF88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E2FF8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E2FF94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.ConditioningImageAssignmentOptions()
{
  return &type metadata for KeyboardEmojiGenerator.ConditioningImageAssignmentOptions;
}

void destroy for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t a1)
{
  sub_249DC2FCC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent()
{
  return &type metadata for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent;
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.Scaler(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_249E3001C + 4 * byte_249F281CE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249E30050 + 4 * byte_249F281C9[v4]))();
}

uint64_t sub_249E30050(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E30058(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E30060);
  return result;
}

uint64_t sub_249E3006C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E30074);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_249E30078(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E30080(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.Scaler()
{
  return &type metadata for KeyboardEmojiGenerator.Scaler;
}

uint64_t destroy for KeyboardEmojiGenerator.GenerationOptions()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KeyboardEmojiGenerator.GenerationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KeyboardEmojiGenerator.GenerationOptions(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for KeyboardEmojiGenerator.GenerationOptions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyboardEmojiGenerator.GenerationOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 60))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.GenerationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 60) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 60) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.GenerationOptions()
{
  return &type metadata for KeyboardEmojiGenerator.GenerationOptions;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.GeneratedEmoji()
{
  return &type metadata for KeyboardEmojiGenerator.GeneratedEmoji;
}

char *initializeBufferWithCopyOfBuffer for KeyboardEmojiGenerator.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, int *);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  void *v70;
  uint64_t v71;
  id v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  uint64_t v78;
  id v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void *v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  _OWORD *v88;
  _OWORD *v89;
  void *v90;
  uint64_t v91;
  id v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *__dst;
  int *v111;
  uint64_t v112;
  uint64_t v113;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v15[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_249F1E8D8();
        v8 = *(_QWORD *)(v7 - 8);
        v9 = *(void (**)(_QWORD, _QWORD, _QWORD))(v8 + 16);
        v9(a1, a2, v7);
        v10 = (int *)type metadata accessor for GenerationState();
        v11 = v10[5];
        v12 = &a1[v11];
        v13 = &a2[v11];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
        }
        v20 = v10[6];
        v21 = &a1[v20];
        v22 = &a2[v20];
        v112 = *((_QWORD *)v22 + 1);
        *(_QWORD *)v21 = *(_QWORD *)v22;
        *((_QWORD *)v21 + 1) = v112;
        v23 = v10[7];
        v24 = &a1[v23];
        v25 = &a2[v23];
        *v24 = *v25;
        v26 = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
        *((_QWORD *)v24 + 2) = v26;
        v24[40] = v25[40];
        *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
        *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
        *((_DWORD *)v24 + 14) = *((_DWORD *)v25 + 14);
        v24[60] = v25[60];
        v24[61] = v25[61];
        v24[62] = v25[62];
        v28 = *((_QWORD *)v25 + 8);
        v27 = *((_QWORD *)v25 + 9);
        v24[80] = v25[80];
        *((_QWORD *)v24 + 8) = v28;
        *((_QWORD *)v24 + 9) = v27;
        v29 = type metadata accessor for GenerationRecipe(0);
        v30 = *(int *)(v29 + 32);
        __dst = &v24[v30];
        v111 = (int *)v29;
        v31 = &v25[v30];
        v32 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
        v33 = *((_QWORD *)v32 - 1);
        v34 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v33 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34(v31, 1, v32))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
          memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v113 = v33;
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
          v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v36 - 8) + 16);
          v37(__dst, v31, v36);
          v37(&__dst[v32[5]], &v31[v32[5]], v36);
          v38 = v32[6];
          v39 = (uint64_t *)&__dst[v38];
          v40 = (uint64_t *)&v31[v38];
          if (*(_QWORD *)&v31[v38 + 16])
          {
            v109 = v31;
            v41 = *v40;
            v42 = v40[1];
            sub_249DC3928(*v40, v42);
            *v39 = v41;
            v39[1] = v42;
            v31 = v109;
            v39[2] = v40[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v39[2] = v40[2];
          }
          __dst[v32[7]] = v31[v32[7]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v113 + 56))(__dst, 0, 1, v32);
        }
        v43 = v111[9];
        v44 = &v24[v43];
        v45 = &v25[v43];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        v46 = v111[10];
        v47 = &v24[v46];
        v48 = &v25[v46];
        v47[4] = v48[4];
        *(_DWORD *)v47 = *(_DWORD *)v48;
        v49 = v111[11];
        v50 = &v24[v49];
        v51 = &v25[v49];
        *(_WORD *)v50 = *(_WORD *)v51;
        v50[2] = v51[2];
        v52 = *((_QWORD *)v51 + 2);
        *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
        *((_QWORD *)v50 + 2) = v52;
        *(_QWORD *)&v24[v111[12]] = *(_QWORD *)&v25[v111[12]];
        *(_QWORD *)&v24[v111[13]] = *(_QWORD *)&v25[v111[13]];
        v53 = v111[14];
        v54 = &v24[v53];
        v55 = &v25[v53];
        v56 = *(void **)&v25[v53 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56)
        {
          *(_OWORD *)v54 = *(_OWORD *)v55;
          *((_DWORD *)v54 + 4) = *((_DWORD *)v55 + 4);
          v57 = *((_QWORD *)v55 + 4);
          *((_QWORD *)v54 + 3) = v56;
          *((_QWORD *)v54 + 4) = v57;
          v58 = v56;
          swift_retain();
        }
        else
        {
          v59 = *((_OWORD *)v55 + 1);
          *(_OWORD *)v54 = *(_OWORD *)v55;
          *((_OWORD *)v54 + 1) = v59;
          *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
        }
        v60 = v111[15];
        v61 = &v24[v60];
        v62 = &v25[v60];
        v63 = (void *)*((_QWORD *)v62 + 3);
        if (v63)
        {
          *(_OWORD *)v61 = *(_OWORD *)v62;
          *((_DWORD *)v61 + 4) = *((_DWORD *)v62 + 4);
          v64 = *((_QWORD *)v62 + 4);
          *((_QWORD *)v61 + 3) = v63;
          *((_QWORD *)v61 + 4) = v64;
          v65 = v63;
          swift_retain();
        }
        else
        {
          v66 = *((_OWORD *)v62 + 1);
          *(_OWORD *)v61 = *(_OWORD *)v62;
          *((_OWORD *)v61 + 1) = v66;
          *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
        }
        v67 = v111[16];
        v68 = &v24[v67];
        v69 = &v25[v67];
        v70 = (void *)*((_QWORD *)v69 + 3);
        if (v70)
        {
          *(_OWORD *)v68 = *(_OWORD *)v69;
          *((_DWORD *)v68 + 4) = *((_DWORD *)v69 + 4);
          v71 = *((_QWORD *)v69 + 4);
          *((_QWORD *)v68 + 3) = v70;
          *((_QWORD *)v68 + 4) = v71;
          v72 = v70;
          swift_retain();
        }
        else
        {
          v73 = *((_OWORD *)v69 + 1);
          *(_OWORD *)v68 = *(_OWORD *)v69;
          *((_OWORD *)v68 + 1) = v73;
          *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
        }
        v74 = v111[17];
        v75 = &v24[v74];
        v76 = &v25[v74];
        v77 = (void *)*((_QWORD *)v76 + 3);
        if (v77)
        {
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_DWORD *)v75 + 4) = *((_DWORD *)v76 + 4);
          v78 = *((_QWORD *)v76 + 4);
          *((_QWORD *)v75 + 3) = v77;
          *((_QWORD *)v75 + 4) = v78;
          v79 = v77;
          swift_retain();
        }
        else
        {
          v80 = *((_OWORD *)v76 + 1);
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_OWORD *)v75 + 1) = v80;
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
        }
        v81 = v111[18];
        v82 = &v24[v81];
        v83 = &v25[v81];
        v84 = *(void **)&v25[v81 + 24];
        if (v84)
        {
          *(_OWORD *)v82 = *(_OWORD *)v83;
          *((_DWORD *)v82 + 4) = *((_DWORD *)v83 + 4);
          v85 = *((_QWORD *)v83 + 4);
          *((_QWORD *)v82 + 3) = v84;
          *((_QWORD *)v82 + 4) = v85;
          v86 = v84;
          swift_retain();
        }
        else
        {
          v87 = *((_OWORD *)v83 + 1);
          *(_OWORD *)v82 = *(_OWORD *)v83;
          *((_OWORD *)v82 + 1) = v87;
          *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
        }
        v88 = v82 + 40;
        v89 = v83 + 40;
        v90 = (void *)*((_QWORD *)v83 + 8);
        if (v90)
        {
          *v88 = *v89;
          *((_DWORD *)v82 + 14) = *((_DWORD *)v83 + 14);
          v91 = *((_QWORD *)v83 + 9);
          *((_QWORD *)v82 + 8) = v90;
          *((_QWORD *)v82 + 9) = v91;
          v92 = v90;
          swift_retain();
        }
        else
        {
          v93 = *(_OWORD *)(v83 + 56);
          *v88 = *v89;
          *(_OWORD *)(v82 + 56) = v93;
          *((_QWORD *)v82 + 9) = *((_QWORD *)v83 + 9);
        }
        v82[80] = v83[80];
        *(_QWORD *)&v24[v111[19]] = *(_QWORD *)&v25[v111[19]];
        v94 = v111[20];
        v95 = &v24[v94];
        v96 = &v25[v94];
        v97 = *(void **)&v25[v94 + 24];
        swift_bridgeObjectRetain();
        if (v97)
        {
          *(_OWORD *)v95 = *(_OWORD *)v96;
          *((_DWORD *)v95 + 4) = *((_DWORD *)v96 + 4);
          v98 = *((_QWORD *)v96 + 4);
          v99 = *((_QWORD *)v96 + 5);
          *((_QWORD *)v95 + 3) = v97;
          *((_QWORD *)v95 + 4) = v98;
          v100 = *((_QWORD *)v96 + 6);
          v101 = *((_QWORD *)v96 + 7);
          *((_QWORD *)v95 + 5) = v99;
          *((_QWORD *)v95 + 6) = v100;
          *((_QWORD *)v95 + 7) = v101;
          v102 = v97;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v103 = *((_OWORD *)v96 + 1);
          *(_OWORD *)v95 = *(_OWORD *)v96;
          *((_OWORD *)v95 + 1) = v103;
          v104 = *((_OWORD *)v96 + 3);
          *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
          *((_OWORD *)v95 + 3) = v104;
        }
        v105 = v111[21];
        v106 = &v24[v105];
        v107 = &v25[v105];
        v108 = *((_QWORD *)v107 + 1);
        *(_QWORD *)v106 = *(_QWORD *)v107;
        *((_QWORD *)v106 + 1) = v108;
        *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
        *(_QWORD *)&v24[v111[22]] = *(_QWORD *)&v25[v111[22]];
        v24[v111[23]] = v25[v111[23]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v17 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v17;
        a1[16] = a2[16];
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v18 = *(char **)a2;
        v19 = v18;
        *(_QWORD *)a1 = v18;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for KeyboardEmojiGenerator.GenerationEvent(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(id *, uint64_t);
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = sub_249F1E8D8();
      v3 = *(_QWORD *)(v2 - 8);
      v4 = *(void (**)(id *, uint64_t))(v3 + 8);
      v4(a1, v2);
      v5 = type metadata accessor for GenerationState();
      v6 = (char *)a1 + *(int *)(v5 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2))
        v4((id *)v6, v2);
      swift_bridgeObjectRelease();
      v7 = (char *)a1 + *(int *)(v5 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = (int *)type metadata accessor for GenerationRecipe(0);
      v9 = &v7[v8[8]];
      v10 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
        v12(v9, v11);
        v12(&v9[*(int *)(v10 + 20)], v11);
        v13 = (uint64_t *)&v9[*(int *)(v10 + 24)];
        if (v13[2])
        {
          sub_249DC3C24(*v13, v13[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *(void **)&v7[v8[14] + 24];
      if (v14)
      {

        swift_release();
      }
      v15 = *(void **)&v7[v8[15] + 24];
      if (v15)
      {

        swift_release();
      }
      v16 = *(void **)&v7[v8[16] + 24];
      if (v16)
      {

        swift_release();
      }
      v17 = *(void **)&v7[v8[17] + 24];
      if (v17)
      {

        swift_release();
      }
      v18 = &v7[v8[18]];
      v19 = (void *)*((_QWORD *)v18 + 3);
      if (v19)
      {

        swift_release();
      }
      v20 = (void *)*((_QWORD *)v18 + 8);
      if (v20)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      v21 = *(void **)&v7[v8[20] + 24];
      if (v21)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 1u:
    case 3u:
LABEL_23:
      swift_bridgeObjectRelease();
      break;
    case 2u:

      break;
    default:
      return;
  }
}

char *initializeWithCopy for KeyboardEmojiGenerator.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, int *);
  uint64_t v34;
  int *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  id v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void *v64;
  uint64_t v65;
  id v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void *v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void *v78;
  uint64_t v79;
  id v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void *v85;
  uint64_t v86;
  id v87;
  __int128 v88;
  _OWORD *v89;
  _OWORD *v90;
  void *v91;
  uint64_t v92;
  id v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v111;
  char *__dst;
  int *v113;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_249F1E8D8();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v8(a1, a2, v6);
      v9 = (int *)type metadata accessor for GenerationState();
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
      }
      v17 = v9[6];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      v21 = v9[7];
      v22 = &a1[v21];
      v23 = &a2[v21];
      *v22 = a2[v21];
      v24 = *(_QWORD *)&a2[v21 + 8];
      v25 = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 1) = v24;
      *((_QWORD *)v22 + 2) = v25;
      v22[40] = v23[40];
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
      *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
      *((_DWORD *)v22 + 14) = *((_DWORD *)v23 + 14);
      v22[60] = v23[60];
      v22[61] = v23[61];
      v22[62] = v23[62];
      v27 = *((_QWORD *)v23 + 8);
      v26 = *((_QWORD *)v23 + 9);
      v22[80] = v23[80];
      *((_QWORD *)v22 + 8) = v27;
      *((_QWORD *)v22 + 9) = v26;
      v28 = type metadata accessor for GenerationRecipe(0);
      v29 = *(int *)(v28 + 32);
      __dst = &v22[v29];
      v113 = (int *)v28;
      v30 = &v23[v29];
      v31 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v32 = *((_QWORD *)v31 - 1);
      v33 = *(unsigned int (**)(char *, uint64_t, int *))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v35 = v113;
      }
      else
      {
        v111 = v32;
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        v37(__dst, v30, v36);
        v37(&__dst[v31[5]], &v30[v31[5]], v36);
        v38 = v31[6];
        v39 = (uint64_t *)&__dst[v38];
        v40 = (uint64_t *)&v30[v38];
        if (*(_QWORD *)&v30[v38 + 16])
        {
          v41 = v30;
          v42 = *v40;
          v43 = v40[1];
          sub_249DC3928(*v40, v43);
          *v39 = v42;
          v39[1] = v43;
          v30 = v41;
          v39[2] = v40[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v39[2] = v40[2];
        }
        v35 = v113;
        __dst[v31[7]] = v30[v31[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v111 + 56))(__dst, 0, 1, v31);
      }
      v44 = v35[9];
      v45 = &v22[v44];
      v46 = &v23[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      v47 = v35[10];
      v48 = &v22[v47];
      v49 = &v23[v47];
      v48[4] = v49[4];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v50 = v35[11];
      v51 = &v22[v50];
      v52 = &v23[v50];
      *(_WORD *)v51 = *(_WORD *)v52;
      v51[2] = v52[2];
      v53 = *((_QWORD *)v52 + 2);
      *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
      *((_QWORD *)v51 + 2) = v53;
      *(_QWORD *)&v22[v35[12]] = *(_QWORD *)&v23[v35[12]];
      *(_QWORD *)&v22[v35[13]] = *(_QWORD *)&v23[v35[13]];
      v54 = v35[14];
      v55 = &v22[v54];
      v56 = &v23[v54];
      v57 = *(void **)&v23[v54 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57)
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_DWORD *)v55 + 4) = *((_DWORD *)v56 + 4);
        v58 = *((_QWORD *)v56 + 4);
        *((_QWORD *)v55 + 3) = v57;
        *((_QWORD *)v55 + 4) = v58;
        v59 = v57;
        swift_retain();
      }
      else
      {
        v60 = *((_OWORD *)v56 + 1);
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v60;
        *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
      }
      v61 = v35[15];
      v62 = &v22[v61];
      v63 = &v23[v61];
      v64 = (void *)*((_QWORD *)v63 + 3);
      if (v64)
      {
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_DWORD *)v62 + 4) = *((_DWORD *)v63 + 4);
        v65 = *((_QWORD *)v63 + 4);
        *((_QWORD *)v62 + 3) = v64;
        *((_QWORD *)v62 + 4) = v65;
        v66 = v64;
        swift_retain();
      }
      else
      {
        v67 = *((_OWORD *)v63 + 1);
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_OWORD *)v62 + 1) = v67;
        *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
      }
      v68 = v35[16];
      v69 = &v22[v68];
      v70 = &v23[v68];
      v71 = (void *)*((_QWORD *)v70 + 3);
      if (v71)
      {
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_DWORD *)v69 + 4) = *((_DWORD *)v70 + 4);
        v72 = *((_QWORD *)v70 + 4);
        *((_QWORD *)v69 + 3) = v71;
        *((_QWORD *)v69 + 4) = v72;
        v73 = v71;
        swift_retain();
      }
      else
      {
        v74 = *((_OWORD *)v70 + 1);
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_OWORD *)v69 + 1) = v74;
        *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
      }
      v75 = v35[17];
      v76 = &v22[v75];
      v77 = &v23[v75];
      v78 = (void *)*((_QWORD *)v77 + 3);
      if (v78)
      {
        *(_OWORD *)v76 = *(_OWORD *)v77;
        *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
        v79 = *((_QWORD *)v77 + 4);
        *((_QWORD *)v76 + 3) = v78;
        *((_QWORD *)v76 + 4) = v79;
        v80 = v78;
        swift_retain();
      }
      else
      {
        v81 = *((_OWORD *)v77 + 1);
        *(_OWORD *)v76 = *(_OWORD *)v77;
        *((_OWORD *)v76 + 1) = v81;
        *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
      }
      v82 = v35[18];
      v83 = &v22[v82];
      v84 = &v23[v82];
      v85 = *(void **)&v23[v82 + 24];
      if (v85)
      {
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_DWORD *)v83 + 4) = *((_DWORD *)v84 + 4);
        v86 = *((_QWORD *)v84 + 4);
        *((_QWORD *)v83 + 3) = v85;
        *((_QWORD *)v83 + 4) = v86;
        v87 = v85;
        swift_retain();
      }
      else
      {
        v88 = *((_OWORD *)v84 + 1);
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_OWORD *)v83 + 1) = v88;
        *((_QWORD *)v83 + 4) = *((_QWORD *)v84 + 4);
      }
      v89 = v83 + 40;
      v90 = v84 + 40;
      v91 = (void *)*((_QWORD *)v84 + 8);
      if (v91)
      {
        *v89 = *v90;
        *((_DWORD *)v83 + 14) = *((_DWORD *)v84 + 14);
        v92 = *((_QWORD *)v84 + 9);
        *((_QWORD *)v83 + 8) = v91;
        *((_QWORD *)v83 + 9) = v92;
        v93 = v91;
        swift_retain();
      }
      else
      {
        v94 = *(_OWORD *)(v84 + 56);
        *v89 = *v90;
        *(_OWORD *)(v83 + 56) = v94;
        *((_QWORD *)v83 + 9) = *((_QWORD *)v84 + 9);
      }
      v83[80] = v84[80];
      *(_QWORD *)&v22[v35[19]] = *(_QWORD *)&v23[v35[19]];
      v95 = v35[20];
      v96 = &v22[v95];
      v97 = &v23[v95];
      v98 = *(void **)&v23[v95 + 24];
      swift_bridgeObjectRetain();
      if (v98)
      {
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_DWORD *)v96 + 4) = *((_DWORD *)v97 + 4);
        v99 = *((_QWORD *)v97 + 4);
        v100 = *((_QWORD *)v97 + 5);
        *((_QWORD *)v96 + 3) = v98;
        *((_QWORD *)v96 + 4) = v99;
        v101 = *((_QWORD *)v97 + 6);
        v102 = *((_QWORD *)v97 + 7);
        *((_QWORD *)v96 + 5) = v100;
        *((_QWORD *)v96 + 6) = v101;
        *((_QWORD *)v96 + 7) = v102;
        v103 = v98;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v104 = *((_OWORD *)v97 + 1);
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + 1) = v104;
        v105 = *((_OWORD *)v97 + 3);
        *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
        *((_OWORD *)v96 + 3) = v105;
      }
      v106 = v35[21];
      v107 = &v22[v106];
      v108 = &v23[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      *((_QWORD *)v107 + 2) = *((_QWORD *)v108 + 2);
      *(_QWORD *)&v22[v35[22]] = *(_QWORD *)&v23[v35[22]];
      v22[v35[23]] = v23[v35[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_37;
    case 1u:
      v14 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v14;
      a1[16] = a2[16];
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_37;
    case 2u:
      v15 = *(void **)a2;
      v16 = v15;
      *(_QWORD *)a1 = v15;
      goto LABEL_37;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
LABEL_37:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for KeyboardEmojiGenerator.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  void *v56;
  id v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  void *v63;
  id v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  void *v70;
  id v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  void *v77;
  id v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  void *v84;
  id v85;
  __int128 v86;
  _OWORD *v87;
  __int128 v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  void *v97;
  id v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v105;
  uint64_t v106;
  char *__dst;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_249F1E8D8();
        v7 = *(_QWORD *)(v6 - 8);
        v8 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v8(a1, a2, v6);
        v9 = (int *)type metadata accessor for GenerationState();
        v10 = v9[5];
        v11 = &a1[v10];
        v12 = &a2[v10];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v8(v11, v12, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
        }
        v17 = v9[6];
        v18 = &a1[v17];
        v19 = &a2[v17];
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        v20 = v9[7];
        v21 = &a1[v20];
        v22 = &a2[v20];
        *v21 = a2[v20];
        *((_QWORD *)v21 + 1) = *(_QWORD *)&a2[v20 + 8];
        *((_QWORD *)v21 + 2) = *(_QWORD *)&a2[v20 + 16];
        v23 = *(_OWORD *)&a2[v20 + 24];
        v21[40] = a2[v20 + 40];
        *(_OWORD *)(v21 + 24) = v23;
        *((_QWORD *)v21 + 6) = *(_QWORD *)&a2[v20 + 48];
        v21[56] = a2[v20 + 56];
        v21[57] = a2[v20 + 57];
        v21[58] = a2[v20 + 58];
        v21[59] = a2[v20 + 59];
        v21[60] = a2[v20 + 60];
        v21[61] = a2[v20 + 61];
        v21[62] = a2[v20 + 62];
        *((_QWORD *)v21 + 8) = *(_QWORD *)&a2[v20 + 64];
        v24 = *(_QWORD *)&a2[v20 + 72];
        v21[80] = v22[80];
        *((_QWORD *)v21 + 9) = v24;
        v25 = (int *)type metadata accessor for GenerationRecipe(0);
        v26 = v25[8];
        __dst = &v21[v26];
        v27 = &v22[v26];
        v28 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
        v29 = *((_QWORD *)v28 - 1);
        v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30(v27, 1, v28))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v106 = v29;
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
          v33(__dst, v27, v32);
          v33(&__dst[v28[5]], &v27[v28[5]], v32);
          v34 = v28[6];
          v35 = (uint64_t *)&__dst[v34];
          v36 = (uint64_t *)&v27[v34];
          if (*(_QWORD *)&v27[v34 + 16])
          {
            v105 = v27;
            v37 = *v36;
            v38 = v36[1];
            sub_249DC3928(*v36, v38);
            *v35 = v37;
            v35[1] = v38;
            v27 = v105;
            v35[2] = v36[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v39 = *(_OWORD *)v36;
            v35[2] = v36[2];
            *(_OWORD *)v35 = v39;
          }
          __dst[v28[7]] = v27[v28[7]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v106 + 56))(__dst, 0, 1, v28);
        }
        v40 = v25[9];
        v41 = &v21[v40];
        v42 = &v22[v40];
        v43 = *(_DWORD *)v42;
        v41[4] = v42[4];
        *(_DWORD *)v41 = v43;
        v44 = v25[10];
        v45 = &v21[v44];
        v46 = &v22[v44];
        v47 = *(_DWORD *)v46;
        v45[4] = v46[4];
        *(_DWORD *)v45 = v47;
        v48 = v25[11];
        v49 = &v21[v48];
        v50 = &v22[v48];
        *v49 = *v50;
        v49[1] = v50[1];
        v49[2] = v50[2];
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *(_QWORD *)&v21[v25[12]] = *(_QWORD *)&v22[v25[12]];
        *(_QWORD *)&v21[v25[13]] = *(_QWORD *)&v22[v25[13]];
        v51 = v25[14];
        v52 = &v21[v51];
        v53 = &v22[v51];
        v54 = *(_QWORD *)&v22[v51 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = *(_OWORD *)v53;
        if (v54)
        {
          *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
          *(_OWORD *)v52 = v55;
          v56 = (void *)*((_QWORD *)v53 + 3);
          *((_QWORD *)v52 + 3) = v56;
          *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
          v57 = v56;
          swift_retain();
        }
        else
        {
          v58 = *((_OWORD *)v53 + 1);
          *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
          *(_OWORD *)v52 = v55;
          *((_OWORD *)v52 + 1) = v58;
        }
        v59 = v25[15];
        v60 = &v21[v59];
        v61 = &v22[v59];
        v62 = *(_OWORD *)v61;
        if (*((_QWORD *)v61 + 3))
        {
          *((_DWORD *)v60 + 4) = *((_DWORD *)v61 + 4);
          *(_OWORD *)v60 = v62;
          v63 = (void *)*((_QWORD *)v61 + 3);
          *((_QWORD *)v60 + 3) = v63;
          *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
          v64 = v63;
          swift_retain();
        }
        else
        {
          v65 = *((_OWORD *)v61 + 1);
          *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
          *(_OWORD *)v60 = v62;
          *((_OWORD *)v60 + 1) = v65;
        }
        v66 = v25[16];
        v67 = &v21[v66];
        v68 = &v22[v66];
        v69 = *(_OWORD *)v68;
        if (*((_QWORD *)v68 + 3))
        {
          *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
          *(_OWORD *)v67 = v69;
          v70 = (void *)*((_QWORD *)v68 + 3);
          *((_QWORD *)v67 + 3) = v70;
          *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
          v71 = v70;
          swift_retain();
        }
        else
        {
          v72 = *((_OWORD *)v68 + 1);
          *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
          *(_OWORD *)v67 = v69;
          *((_OWORD *)v67 + 1) = v72;
        }
        v73 = v25[17];
        v74 = &v21[v73];
        v75 = &v22[v73];
        v76 = *(_OWORD *)v75;
        if (*((_QWORD *)v75 + 3))
        {
          *((_DWORD *)v74 + 4) = *((_DWORD *)v75 + 4);
          *(_OWORD *)v74 = v76;
          v77 = (void *)*((_QWORD *)v75 + 3);
          *((_QWORD *)v74 + 3) = v77;
          *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
          v78 = v77;
          swift_retain();
        }
        else
        {
          v79 = *((_OWORD *)v75 + 1);
          *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
          *(_OWORD *)v74 = v76;
          *((_OWORD *)v74 + 1) = v79;
        }
        v80 = v25[18];
        v81 = &v21[v80];
        v82 = &v22[v80];
        v83 = *(_OWORD *)&v22[v80];
        if (*(_QWORD *)&v22[v80 + 24])
        {
          *((_DWORD *)v81 + 4) = *((_DWORD *)v82 + 4);
          *(_OWORD *)v81 = v83;
          v84 = (void *)*((_QWORD *)v82 + 3);
          *((_QWORD *)v81 + 3) = v84;
          *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
          v85 = v84;
          swift_retain();
        }
        else
        {
          v86 = *((_OWORD *)v82 + 1);
          *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
          *(_OWORD *)v81 = v83;
          *((_OWORD *)v81 + 1) = v86;
        }
        v87 = v81 + 40;
        v88 = *(_OWORD *)(v82 + 40);
        if (*((_QWORD *)v82 + 8))
        {
          *((_DWORD *)v81 + 14) = *((_DWORD *)v82 + 14);
          *v87 = v88;
          v89 = (void *)*((_QWORD *)v82 + 8);
          *((_QWORD *)v81 + 8) = v89;
          *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
          v90 = v89;
          swift_retain();
        }
        else
        {
          v91 = *(_OWORD *)(v82 + 56);
          *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
          *v87 = v88;
          *(_OWORD *)(v81 + 56) = v91;
        }
        v81[80] = v82[80];
        *(_QWORD *)&v21[v25[19]] = *(_QWORD *)&v22[v25[19]];
        v92 = v25[20];
        v93 = &v21[v92];
        v94 = &v22[v92];
        v95 = *(_QWORD *)&v22[v92 + 24];
        swift_bridgeObjectRetain();
        v96 = *(_OWORD *)v94;
        if (v95)
        {
          *((_DWORD *)v93 + 4) = *((_DWORD *)v94 + 4);
          *(_OWORD *)v93 = v96;
          v97 = (void *)*((_QWORD *)v94 + 3);
          *((_QWORD *)v93 + 3) = v97;
          *((_QWORD *)v93 + 4) = *((_QWORD *)v94 + 4);
          *((_QWORD *)v93 + 5) = *((_QWORD *)v94 + 5);
          *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
          *((_QWORD *)v93 + 7) = *((_QWORD *)v94 + 7);
          v98 = v97;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v99 = *((_OWORD *)v94 + 1);
          v100 = *((_OWORD *)v94 + 3);
          *((_OWORD *)v93 + 2) = *((_OWORD *)v94 + 2);
          *((_OWORD *)v93 + 3) = v100;
          *(_OWORD *)v93 = v96;
          *((_OWORD *)v93 + 1) = v99;
        }
        v101 = v25[21];
        v102 = &v21[v101];
        v103 = &v22[v101];
        *(_QWORD *)v102 = *(_QWORD *)v103;
        *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
        *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
        *(_QWORD *)&v21[v25[22]] = *(_QWORD *)&v22[v25[22]];
        v21[v25[23]] = v22[v25[23]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v14 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v14;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 2u:
        v15 = *(void **)a2;
        v16 = v15;
        *(_QWORD *)a1 = v15;
        goto LABEL_38;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
LABEL_38:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D9D70);
}

char *assignWithTake for KeyboardEmojiGenerator.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_249F1E8D8();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v8(a1, a2, v6);
      v9 = (int *)type metadata accessor for GenerationState();
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
      }
      *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
      v14 = v9[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      *v15 = a2[v14];
      *(_QWORD *)(v15 + 55) = *(_QWORD *)&a2[v14 + 55];
      *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
      *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
      v15[80] = a2[v14 + 80];
      v17 = *(_QWORD *)&a2[v14 + 72];
      *((_QWORD *)v15 + 8) = *(_QWORD *)&a2[v14 + 64];
      *((_QWORD *)v15 + 9) = v17;
      v18 = (int *)type metadata accessor for GenerationRecipe(0);
      v19 = v18[8];
      v20 = &v15[v19];
      v21 = &v16[v19];
      v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v23 = *((_QWORD *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
        v26(v20, v21, v25);
        v26(&v20[v22[5]], &v21[v22[5]], v25);
        v27 = v22[6];
        v28 = &v20[v27];
        v29 = &v21[v27];
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
        v20[v22[7]] = v21[v22[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v30 = v18[9];
      v31 = &v15[v30];
      v32 = &v16[v30];
      *(_DWORD *)v31 = *(_DWORD *)v32;
      v31[4] = v32[4];
      v33 = v18[10];
      v34 = &v15[v33];
      v35 = &v16[v33];
      v34[4] = v35[4];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v36 = v18[11];
      v37 = &v15[v36];
      v38 = &v16[v36];
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      *(_QWORD *)&v15[v18[12]] = *(_QWORD *)&v16[v18[12]];
      *(_QWORD *)&v15[v18[13]] = *(_QWORD *)&v16[v18[13]];
      v39 = v18[14];
      v40 = &v15[v39];
      v41 = &v16[v39];
      v42 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v42;
      *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      v43 = v18[15];
      v44 = &v15[v43];
      v45 = &v16[v43];
      *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v47 = v18[16];
      v48 = &v15[v47];
      v49 = &v16[v47];
      v50 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v50;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
      v51 = v18[17];
      v52 = &v15[v51];
      v53 = &v16[v51];
      v54 = *((_OWORD *)v53 + 1);
      *(_OWORD *)v52 = *(_OWORD *)v53;
      *((_OWORD *)v52 + 1) = v54;
      *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
      v55 = v18[18];
      v56 = &v15[v55];
      v57 = &v16[v55];
      v58 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v58;
      *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
      v56[80] = v57[80];
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
      v60 = v18[20];
      v61 = &v15[v60];
      v62 = &v16[v60];
      v63 = *((_OWORD *)v62 + 1);
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v63;
      v64 = *((_OWORD *)v62 + 3);
      *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
      *((_OWORD *)v61 + 3) = v64;
      v65 = v18[21];
      v66 = &v15[v65];
      v67 = &v16[v65];
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
      *(_QWORD *)&v15[v18[22]] = *(_QWORD *)&v16[v18[22]];
      v15[v18[23]] = v16[v18[23]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_249E31E48()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_249E31ECC(id result, int a2, unint64_t a3, id a4)
{
  unint64_t v4;

  v4 = a3 >> 62;
  if (a3 >> 62 == 2)
    return (id)swift_bridgeObjectRetain();
  if ((_DWORD)v4 != 1)
  {
    if ((_DWORD)v4)
      return result;
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for KeyboardEmojiGenerator.ImageToningEvent(uint64_t a1)
{
  sub_249E31F04(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(id *)(a1 + 24));
}

void sub_249E31F04(void *a1, int a2, unint64_t a3, id a4)
{
  unint64_t v4;

  v4 = a3 >> 62;
  if (a3 >> 62 == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if ((_DWORD)v4 != 1)
  {
    if ((_DWORD)v4)
      return;
    goto LABEL_4;
  }

}

_QWORD *initializeWithCopy for KeyboardEmojiGenerator.ImageToningEvent(_QWORD *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  sub_249E31ECC(*(id *)a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t assignWithCopy for KeyboardEmojiGenerator.ImageToningEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  sub_249E31ECC(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  sub_249E31F04(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for KeyboardEmojiGenerator.ImageToningEvent(uint64_t a1, _OWORD *a2)
{
  void *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  __int128 v7;

  v3 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(void **)(a1 + 24);
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_249E31F04(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyboardEmojiGenerator.ImageToningEvent(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.ImageToningEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_249E320B4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_249E320D0(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_249E320E0(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 8) = xmmword_249F281A0;
    *(_QWORD *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.ImageToningEvent()
{
  return &type metadata for KeyboardEmojiGenerator.ImageToningEvent;
}

uint64_t sub_249E32124()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E32148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_249E3219C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

unint64_t sub_249E321D8()
{
  unsigned __int8 v0;
  char v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  v2 = 0xD000000000000013;
  if ((v1 & 1) == 0)
    v2 = 0x3E6177617A3C2061;
  v3 = 0x3E78776C6E3C2061;
  if ((v1 & 1) != 0)
    v3 = 0x203E6E63723C2061;
  v4 = 0x203E7367703C2061;
  if ((v1 & 1) != 0)
    v4 = 0xD000000000000011;
  if (!v0)
    v4 = v3;
  if (v0 - 2 >= 2)
    return v4;
  else
    return v2;
}

void sub_249E32354()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  v1 = (void *)sub_249F1F304();
  v2 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_, v1);

  if (v2)
  {
    objc_msgSend(v2, sel_setValue_forKey_, v0, *MEMORY[0x24BDBF960]);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, 1.0);
    v4 = (void *)sub_249F1F304();
    objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, 1.0);
    v6 = (void *)sub_249F1F304();
    objc_msgSend(v2, sel_setValue_forKey_, v5, v6);

    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, 1.0);
    v8 = (void *)sub_249F1F304();
    objc_msgSend(v2, sel_setValue_forKey_, v7, v8);

    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, 1.0);
    v10 = (void *)sub_249F1F304();
    objc_msgSend(v2, sel_setValue_forKey_, v9, v10);

    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, 0.0);
    v12 = (void *)sub_249F1F304();
    objc_msgSend(v2, sel_setValue_forKey_, v11, v12);

    objc_msgSend(v2, sel_outputImage);
  }
  else
  {
    __break(1u);
  }
}

void sub_249E32654()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)sub_249F1F304();
  v2 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_, v1);

  if (v2)
  {
    objc_msgSend(v2, sel_setValue_forKey_, v0, *MEMORY[0x24BDBF960]);
    v3 = (void *)sub_249F1F6F4();
    v4 = (void *)sub_249F1F304();
    objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

    objc_msgSend(v2, sel_outputImage);
  }
  else
  {
    __break(1u);
  }
}

void Image.expandMask()(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;

  v3 = *(void **)v1;
  if (*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + 8) == 1)
      v4 = v3;
    else
      v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v3);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v3);
  }
  v5 = v4;
  sub_249E32354();
  if (v6)
  {
    v7 = v6;
    sub_249E32654();
    if (v8)
    {
      v9 = v8;
      v10 = (void *)sub_249F1F304();
      v11 = (void *)objc_opt_self();
      v12 = objc_msgSend(v11, sel_filterWithName_, v10);

      if (v12)
      {
        v27 = a1;
        v13 = (void *)sub_249F1F718();
        v14 = *MEMORY[0x24BDBF978];
        objc_msgSend(v12, sel_setValue_forKey_, v13, *MEMORY[0x24BDBF978]);

        v15 = *MEMORY[0x24BDBF960];
        objc_msgSend(v12, sel_setValue_forKey_, v9, *MEMORY[0x24BDBF960]);
        v28 = objc_msgSend(v12, sel_outputImage);
        v16 = (void *)sub_249F1F304();
        v17 = objc_msgSend(v11, sel_filterWithName_, v16);

        if (v17)
        {
          v18 = (void *)sub_249F1F718();
          objc_msgSend(v17, sel_setValue_forKey_, v18, v14);

          objc_msgSend(v17, sel_setValue_forKey_, v28, v15);
          v19 = objc_msgSend(v17, sel_outputImage);
          if (v19)
          {
            v20 = v19;
            objc_msgSend(v5, sel_extent);
            v21 = objc_msgSend(v20, sel_imageByCroppingToRect_);

            if (v21)
            {

              *(_QWORD *)v27 = v21;
              *(_BYTE *)(v27 + 8) = 1;
              return;
            }
          }
          sub_249E32BC8();
          swift_allocError();
          *v26 = 0xD000000000000020;
          v26[1] = 0x8000000249F36120;
          swift_willThrow();

        }
        else
        {
          sub_249E32BC8();
          swift_allocError();
          *v25 = 0xD000000000000029;
          v25[1] = 0x8000000249F360F0;
          swift_willThrow();

          v17 = v28;
        }
      }
      else
      {
        sub_249E32BC8();
        swift_allocError();
        *v24 = 0xD000000000000029;
        v24[1] = 0x8000000249F360A0;
        swift_willThrow();

        v17 = v9;
      }
    }
    else
    {
      sub_249E32BC8();
      swift_allocError();
      *v23 = 0xD000000000000024;
      v23[1] = 0x8000000249F36050;
      swift_willThrow();

      v17 = v7;
    }
  }
  else
  {
    sub_249E32BC8();
    swift_allocError();
    *v22 = 0xD000000000000024;
    v22[1] = 0x8000000249F36050;
    swift_willThrow();
    v17 = v5;
  }

}

unint64_t sub_249E32BC8()
{
  unint64_t result;

  result = qword_2578D9DC0;
  if (!qword_2578D9DC0)
  {
    result = MEMORY[0x24BD06528](&unk_249F28624, &type metadata for MaskExpandError);
    atomic_store(result, (unint64_t *)&qword_2578D9DC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MaskExpandError()
{
  return &type metadata for MaskExpandError;
}

uint64_t DemographicCategories.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t DemographicCategories.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static DemographicCategories.none.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static DemographicCategories.gender.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static DemographicCategories.skinTone.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static DemographicCategories.personDescription.getter(_DWORD *a1@<X8>)
{
  *a1 = 4;
}

_DWORD *sub_249E32C58@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_249E32C64()
{
  sub_249F1FF64();
  sub_249F1FF88();
  return sub_249F1FFA0();
}

uint64_t sub_249E32CA8()
{
  return sub_249F1FF88();
}

uint64_t sub_249E32CD0()
{
  sub_249F1FF64();
  sub_249F1FF88();
  return sub_249F1FFA0();
}

_DWORD *sub_249E32D10@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_249E32D24@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_249E32D38@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_249E32D4C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_249E32D7C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_249E32DA8@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_249E32DCC(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_249E32DE0(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_249E32DF4(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_249E32E08@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_249E32E1C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_249E32E30(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_249E32E44(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_249E32E58()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_249E32E68(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_249E32E7C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_249E32E8C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_249E32E98(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void UnsupportedDemographicCategories.demographicCategories.getter(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

unint64_t sub_249E32EC0()
{
  unint64_t result;

  result = qword_2578D9DC8;
  if (!qword_2578D9DC8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DemographicCategories, &type metadata for DemographicCategories);
    atomic_store(result, (unint64_t *)&qword_2578D9DC8);
  }
  return result;
}

unint64_t sub_249E32F08()
{
  unint64_t result;

  result = qword_2578D9DD0;
  if (!qword_2578D9DD0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DemographicCategories, &type metadata for DemographicCategories);
    atomic_store(result, (unint64_t *)&qword_2578D9DD0);
  }
  return result;
}

unint64_t sub_249E32F50()
{
  unint64_t result;

  result = qword_2578D9DD8;
  if (!qword_2578D9DD8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DemographicCategories, &type metadata for DemographicCategories);
    atomic_store(result, (unint64_t *)&qword_2578D9DD8);
  }
  return result;
}

unint64_t sub_249E32F98()
{
  unint64_t result;

  result = qword_2578D9DE0;
  if (!qword_2578D9DE0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DemographicCategories, &type metadata for DemographicCategories);
    atomic_store(result, (unint64_t *)&qword_2578D9DE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DemographicCategories()
{
  return &type metadata for DemographicCategories;
}

ValueMetadata *type metadata accessor for UnsupportedDemographicCategories()
{
  return &type metadata for UnsupportedDemographicCategories;
}

void ImageStyle.radarDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_249E33050()
{
  uint64_t v0;

  if (qword_2578D5D60 != -1)
    swift_once();
  v0 = sub_249F1E698();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t dispatch thunk of Cancellable.isCancelled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Cancellable.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_249E33168(uint64_t a1, uint64_t a2)
{
  if (((*(uint64_t (**)(void))(a2 + 8))() & 1) == 0)
    return sub_249F1F670();
  sub_249F1F5D4();
  sub_249E33288();
  swift_allocError();
  sub_249F1F1E4();
  return swift_willThrow();
}

uint64_t sub_249E331DC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _InternalCanceller()
{
  return objc_opt_self();
}

uint64_t sub_249E33220()
{
  uint64_t v0;
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 136))());
  return v1 & 1;
}

unsigned __int8 *sub_249E33254()
{
  uint64_t v0;
  unsigned __int8 *result;

  result = (unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 136))();
  atomic_store(1u, result);
  return result;
}

unint64_t sub_249E33288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D6E78;
  if (!qword_2578D6E78)
  {
    v1 = sub_249F1F5D4();
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE6848], v1);
    atomic_store(result, (unint64_t *)&qword_2578D6E78);
  }
  return result;
}

uint64_t sub_249E332D0(void *a1, void *a2, char a3, void *a4, void *a5)
{
  uint64_t v5;
  __CVBuffer *v7;
  size_t Width;
  size_t Height;
  OSType PixelFormatType;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  __CVBuffer *v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  __CVBuffer *v19;
  size_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  __CVBuffer *v24;
  size_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;

  v7 = a1;
  Width = CVPixelBufferGetWidth(v7);
  Height = CVPixelBufferGetHeight(v7);
  PixelFormatType = CVPixelBufferGetPixelFormatType(v7);
  type metadata accessor for ResolvedImage.HiddenBufferData();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_249F21920;
  v12 = PixelFormatType;
  v13 = (int *)type metadata accessor for GenerationRecipe(0);
  v14 = v5 + v13[18];
  sub_249DC0768(*(_QWORD *)v14, *(_QWORD *)(v14 + 8), *(_QWORD *)(v14 + 16), *(void **)(v14 + 24));
  *(_QWORD *)v14 = Width;
  *(_QWORD *)(v14 + 8) = Height;
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v7;
  *(_QWORD *)(v14 + 32) = v11;
  v15 = a2;
  v16 = CVPixelBufferGetWidth(v15);
  v17 = CVPixelBufferGetHeight(v15);
  LODWORD(Width) = CVPixelBufferGetPixelFormatType(v15);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_249F21920;
  sub_249DC0768(*(_QWORD *)(v14 + 40), *(_QWORD *)(v14 + 48), *(_QWORD *)(v14 + 56), *(void **)(v14 + 64));
  *(_QWORD *)(v14 + 40) = v16;
  *(_QWORD *)(v14 + 48) = v17;
  *(_QWORD *)(v14 + 56) = Width;
  *(_QWORD *)(v14 + 64) = v15;
  *(_QWORD *)(v14 + 72) = v18;
  *(_BYTE *)(v14 + 80) = a3;
  v19 = a4;
  v20 = CVPixelBufferGetWidth(v19);
  v21 = CVPixelBufferGetHeight(v19);
  LODWORD(v16) = CVPixelBufferGetPixelFormatType(v19);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_249F21920;
  v23 = v5 + v13[14];
  sub_249DC0768(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(void **)(v23 + 24));
  *(_QWORD *)v23 = v20;
  *(_QWORD *)(v23 + 8) = v21;
  *(_QWORD *)(v23 + 16) = v16;
  *(_QWORD *)(v23 + 24) = v19;
  *(_QWORD *)(v23 + 32) = v22;
  v24 = a5;
  v25 = CVPixelBufferGetWidth(v24);
  v26 = CVPixelBufferGetHeight(v24);
  LODWORD(v16) = CVPixelBufferGetPixelFormatType(v24);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_249F21920;
  v28 = v5 + v13[15];
  result = sub_249DC0768(*(_QWORD *)v28, *(_QWORD *)(v28 + 8), *(_QWORD *)(v28 + 16), *(void **)(v28 + 24));
  *(_QWORD *)v28 = v25;
  *(_QWORD *)(v28 + 8) = v26;
  *(_QWORD *)(v28 + 16) = v16;
  *(_QWORD *)(v28 + 24) = v24;
  *(_QWORD *)(v28 + 32) = v27;
  return result;
}

void sub_249E334F0(unsigned __int8 *a1, char a2)
{
  uint64_t v2;
  char v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;

  v3 = a2 & 1;
  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *(int *)(type metadata accessor for GenerationRecipe(0) + 88);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *(_QWORD *)(v2 + v7);
  *(_QWORD *)(v2 + v7) = 0x8000000000000000;
  sub_249DD2130(v4 | (v5 << 8) | (v6 << 16), v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + v7) = v18;
  swift_bridgeObjectRelease();
  if (qword_2578D5D78 != -1)
    swift_once();
  v9 = sub_249F1EF38();
  __swift_project_value_buffer(v9, (uint64_t)qword_2578FF3F0);
  oslog = sub_249F1EF20();
  v10 = sub_249F1F808();
  if (os_log_type_enabled(oslog, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136315395;
    v13 = sub_249F1F3AC();
    sub_249E68CA8(v13, v14, &v18);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2081;
    v15 = sub_249DF46C0();
    sub_249E68CA8(v15, v16, &v18);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, oslog, v10, "FaceAttributes.%s: %{private}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v12, -1, -1);
    MEMORY[0x24BD06618](v11, -1, -1);

  }
  else
  {

  }
}

void sub_249E33740(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249E33780()
{
  uint64_t v0;
  uint64_t v1;

  sub_249F1FE2C();
  v1 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t))((char *)sub_249E33818 + 4 * byte_249F2897A[v0]))(v1);
}

uint64_t sub_249E33818@<X0>(int a1@<W8>)
{
  if (a1)
    return 0x696B73206B726164;
  else
    return 0xD000000000000015;
}

uint64_t sub_249E33958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_249F1E8D8();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E339CC()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  os_signpost_id_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  os_signpost_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 16);
  v1(v0[13], v0[9] + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask_id, v0[10]);
  v46 = 0x206B736154;
  v47 = 0xE500000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v0[14] = 0x206B736154;
  v0[15] = 0xE500000000000000;
  if (qword_2578D5CE8 != -1)
    swift_once();
  v2 = sub_249F1EF38();
  v0[16] = __swift_project_value_buffer(v2, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  v3 = sub_249F1EF20();
  v4 = sub_249F1F82C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v46 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_249E68CA8(0x206B736154, 0xE500000000000000, &v46);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v3, v4, "%s assigning prompt conditioning image", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v6, -1, -1);
    MEMORY[0x24BD06618](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7 = sub_249F1EE9C();
  v0[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v0[18] = v8;
  v9 = v8;
  v10 = swift_task_alloc();
  v0[19] = v10;
  if (qword_2578D5D80 != -1)
    swift_once();
  v12 = v0[12];
  v11 = v0[13];
  v13 = v0[10];
  v14 = sub_249F1EED8();
  __swift_project_value_buffer(v14, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v1(v12, v11, v13);
  v15 = v10;
  v16 = sub_249F1EEC0();
  v17 = sub_249F1F8A4();
  v18 = sub_249F1F958();
  v20 = v0[11];
  v19 = v0[12];
  v21 = v0[10];
  if ((v18 & 1) != 0)
  {
    v45 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v45, v15, v7);
    v43 = v20;
    v22 = (uint8_t *)swift_slowAlloc();
    v44 = v17;
    v23 = swift_slowAlloc();
    v46 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_249F1FE08();
    v0[4] = sub_249E68CA8(v24, v25, &v46);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v26(v19, v21);
    v27 = sub_249F1EE84();
    v28 = v9;
    _os_signpost_emit_with_name_impl(&dword_249D98000, v16, v44, v27, "promptConditioningImageAssignment", "%{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v23, -1, -1);
    MEMORY[0x24BD06618](v22, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v45, v7);
    swift_task_dealloc();
  }
  else
  {

    v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v26(v19, v21);
    v28 = v9;
  }
  v0[20] = v26;
  v29 = v0[9];
  v30 = v0[7];
  swift_task_alloc();
  (*(void (**)(void))(v28 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[21] = sub_249F1EEFC();
  swift_task_dealloc();
  v31 = *(void **)(v29 + 16);
  v32 = *(_BYTE *)(v29 + 24);
  if (v30)
  {
    v33 = v0[9];
    v34 = (void (*)(uint64_t, uint64_t *))v0[7];
    v46 = *(_QWORD *)(v29 + 16);
    LOBYTE(v47) = v32;
    v35 = v31;
    v34(v33, &v46);

  }
  v37 = v0[8];
  v36 = v0[9];
  v38 = v0[7];
  v39 = swift_task_alloc();
  v0[22] = v39;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v31;
  *(_BYTE *)(v39 + 32) = v32;
  *(_QWORD *)(v39 + 40) = 0x206B736154;
  *(_QWORD *)(v39 + 48) = 0xE500000000000000;
  *(_QWORD *)(v39 + 56) = v38;
  *(_QWORD *)(v39 + 64) = v37;
  v40 = swift_task_alloc();
  v0[23] = v40;
  *(_QWORD *)(v40 + 16) = 0x206B736154;
  *(_QWORD *)(v40 + 24) = 0xE500000000000000;
  v41 = (_QWORD *)swift_task_alloc();
  v0[24] = v41;
  type metadata accessor for DefinitionSession();
  *v41 = v0;
  v41[1] = sub_249E33F88;
  return sub_249F1FE38();
}

uint64_t sub_249E33F88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249E34010()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  sub_249DDDF68("promptConditioningImageAssignment", 33, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E340BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t *);
  void *v18;
  uint64_t v19;
  id v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v1 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DDDF68("promptConditioningImageAssignment", 33, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  v5 = v1;
  swift_bridgeObjectRetain();
  v6 = v1;
  v7 = sub_249F1EF20();
  v8 = sub_249F1F820();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_249E68CA8(v11, v10, &v26);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    v14 = v9;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v15;
    sub_249F1F9AC();
    *v13 = v15;

    _os_log_impl(&dword_249D98000, v7, v8, "%s prompt conditioning image rejected - %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v25, -1, -1);
    MEMORY[0x24BD06618](v12, -1, -1);
  }
  else
  {
    v16 = *(void **)(v0 + 200);
    swift_bridgeObjectRelease_n();

  }
  v17 = *(void (**)(uint64_t, uint64_t *))(v0 + 56);
  if (v17)
  {
    v18 = *(void **)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 72);
    v26 = (uint64_t)v18;
    v27 = 64;
    v20 = v18;
    v17(v19, &v26);

  }
  v21 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 80);
  swift_willThrow();
  v21(v22, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id GenerativePlayground.PromptConditioningImageAssignmentTask.promptConditioningImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall GenerativePlayground.PromptConditioningImageAssignmentTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t GenerativePlayground.PromptConditioningImageAssignmentTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

uint64_t sub_249E34534(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = a8;
  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 72) = a6;
  *(_BYTE *)(v8 + 25) = a4;
  *(_QWORD *)(v8 + 48) = a2;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_249E3455C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 48)
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
    goto LABEL_2;
  sub_249F1F670();
  v4 = *(_BYTE *)(v0 + 25);
  v5 = *(_QWORD *)(v0 + 56);
  type metadata accessor for ImageChecker();
  swift_initStaticObject();
  v18 = v5;
  v19 = v4;
  sub_249DDD43C((uint64_t)&v18, &v17);
  swift_bridgeObjectRelease();
  v7 = v1[3];
  v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v7);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) != 0)
  {
LABEL_2:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v9 = *(_BYTE *)(v0 + 25);
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 40);
    sub_249DE98FC(v10+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__definitionSession, v12);
    v13 = (char *)(v10
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__options);
    v14 = *v13;
    v15 = v12 + *(int *)(type metadata accessor for DefinitionSession() + 56);
    *(_BYTE *)(v15 + 60) = v14;
    *(_BYTE *)(v15 + 61) = v13[2];
    *(_QWORD *)(v0 + 16) = v11;
    *(_BYTE *)(v0 + 24) = v9;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v16;
    *v16 = v0;
    v16[1] = sub_249E3474C;
    return sub_249E9B970((uint64_t *)(v0 + 16));
  }
}

uint64_t sub_249E3474C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E347B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  void *v8;
  void (*v9)(uint64_t, id *);
  uint64_t v10;
  char v11;
  id v12;
  id v14;
  char v15;

  if (qword_2578D5CE8 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 72);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 64);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (void *)swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_249E68CA8(v6, v5, (uint64_t *)&v14);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v2, v3, "%s accepted prompt conditioning image", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void (**)(uint64_t, id *))(v0 + 80);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(_BYTE *)(v0 + 25) | 0x80;
    v14 = *(id *)(v0 + 56);
    v15 = v11;
    v12 = v14;
    v9(v10, &v14);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E3499C()
{
  uint64_t v0;

  sub_249DE95C8(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  return v0;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249E34AB4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E34AFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E34B50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249E34BA0()
{
  return GenerativePlayground.PromptConditioningImageAssignmentTask.description.getter();
}

uint64_t sub_249E34BC0()
{
  return type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentTask();
}

uint64_t type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentTask()
{
  uint64_t result;

  result = qword_2578D9EC8;
  if (!qword_2578D9EC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E34C04()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.PromptConditioningImageAssignmentTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_249E34CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v4 = *(_BYTE *)(v1 + 32);
  v9 = *(_OWORD *)(v1 + 40);
  v10 = *(_OWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_249DAFCF8;
  *(_QWORD *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 88) = v5;
  *(_BYTE *)(v7 + 25) = v4;
  *(_OWORD *)(v7 + 48) = v10;
  *(_OWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 40) = a1;
  return swift_task_switch();
}

uint64_t DefinitionSession.save(to:printEncodedData:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = sub_249F1F37C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_249F1E470();
  MEMORY[0x24BDAC7A8](v4);
  sub_249F1E4B8();
  swift_allocObject();
  sub_249F1E4AC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9F88);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_249F21910;
  sub_249F1E464();
  sub_249F1E458();
  sub_249D9BBEC(&qword_2578D9F90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9F98);
  sub_249E34FE0();
  sub_249F1FA0C();
  sub_249F1E47C();
  type metadata accessor for DefinitionSession();
  sub_249D9BBEC(&qword_2578D9FA8, (uint64_t (*)(uint64_t))type metadata accessor for DefinitionSession, (uint64_t)&protocol conformance descriptor for DefinitionSession);
  v5 = sub_249F1E488();
  if (v2)
    return swift_release();
  v7 = v5;
  v8 = v6;
  if ((a2 & 1) == 0)
  {
LABEL_5:
    sub_249F1E848();
    sub_249DC3C24(v7, v8);
    return swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E10);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_249F21770;
  sub_249F1F364();
  result = sub_249F1F340();
  if (v11)
  {
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 32) = result;
    *(_QWORD *)(v9 + 40) = v11;
    sub_249F1FF58();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t sub_249E34FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D9FA0;
  if (!qword_2578D9FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D9F98);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2578D9FA0);
  }
  return result;
}

uint64_t static DefinitionSession.load(from:)()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result = sub_249F1E800();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    sub_249F1E44C();
    swift_allocObject();
    sub_249F1E440();
    type metadata accessor for DefinitionSession();
    sub_249D9BBEC(qword_2578D9FB0, (uint64_t (*)(uint64_t))type metadata accessor for DefinitionSession, (uint64_t)&protocol conformance descriptor for DefinitionSession);
    sub_249F1E428();
    swift_release();
    return sub_249DC3C24(v3, v4);
  }
  return result;
}

uint64_t *sub_249E350F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_249F1E8D8();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_249E351A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_249E351F8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_249E3527C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_249E35310(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

_BYTE *sub_249E35390(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249E35418()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E35424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_249E354B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E354BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_249F1E8D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

uint64_t type metadata accessor for ImageProvenance()
{
  uint64_t result;

  result = qword_2578DA010;
  if (!qword_2578DA010)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E35574()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_249E35600()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  __int128 v8;
  uint64_t v9;
  _OWORD v10[2];

  v0 = sub_249DAE8D4(MEMORY[0x24BEE4AF8]);
  v1 = sub_249E36944();
  if (v1)
  {
    v2 = v1;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7068);
    *(_QWORD *)&v8 = v2;
    v3 = sub_249F1F328();
    v5 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_249E36BE0(&v8, v3, v5, isUniquelyReferenced_nonNull_native, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249E36D34((uint64_t)v10);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v0;
}

unint64_t sub_249E356CC()
{
  unint64_t result;
  unint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  __CFString *v21;
  __CFString *v22;
  const void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  CGImageMetadata *metadata;
  __int128 v40;
  _OWORD v41[2];
  __int128 v42;
  _OWORD v43[2];
  _QWORD v44[2];
  __int128 v45;

  result = sub_249E35600();
  if (!result)
    return result;
  v1 = result;
  result = (unint64_t)CGImageMetadataCreateMutable();
  v2 = 0;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  metadata = (CGImageMetadata *)result;
  v34 = (unint64_t)(v3 + 63) >> 6;
  v32 = v1 + 104;
  v33 = v1 + 64;
  v35 = v1;
  if (!v5)
    goto LABEL_10;
LABEL_8:
  v6 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v7 = v6 | (v2 << 6);
LABEL_9:
  v8 = *(_QWORD *)(v1 + 56);
  v9 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v7);
  v10 = v9[1];
  *(_QWORD *)&v42 = *v9;
  *((_QWORD *)&v42 + 1) = v10;
  sub_249DCA7E4(v8 + 32 * v7, (uint64_t)v43);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_249E368FC((uint64_t)&v42, (uint64_t)v44);
    if (!v44[1])
    {
      swift_release();
      return (unint64_t)metadata;
    }
    sub_249DCA678(&v45, &v42);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7068);
    result = swift_dynamicCast();
    if (!(_DWORD)result)
    {
      result = swift_bridgeObjectRelease();
      if (v5)
        goto LABEL_8;
      goto LABEL_10;
    }
    v36 = v5;
    v37 = v2;
    v14 = 0;
    v15 = v40;
    v16 = *(_QWORD *)(v40 + 64);
    v38 = v40 + 64;
    v17 = 1 << *(_BYTE *)(v40 + 32);
    v18 = v17 < 64 ? ~(-1 << v17) : -1;
    v19 = v18 & v16;
    v20 = (unint64_t)(v17 + 63) >> 6;
    if ((v18 & v16) == 0)
      break;
    while (1)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v14 << 6);
LABEL_25:
      v26 = *(_QWORD *)(v15 + 56);
      v27 = (_QWORD *)(*(_QWORD *)(v15 + 48) + 16 * v25);
      v28 = v27[1];
      *(_QWORD *)&v40 = *v27;
      *((_QWORD *)&v40 + 1) = v28;
      sub_249DCA7E4(v26 + 32 * v25, (uint64_t)v41);
      swift_bridgeObjectRetain();
LABEL_44:
      sub_249E368FC((uint64_t)&v40, (uint64_t)&v42);
      if (!*((_QWORD *)&v42 + 1))
        break;
      sub_249DCA678(v43, &v40);
      v21 = (__CFString *)sub_249F1F304();
      v22 = (__CFString *)sub_249F1F304();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41[0] + 1));
      v23 = (const void *)sub_249F1FE20();
      CGImageMetadataSetValueMatchingImageProperty(metadata, v21, v22, v23);

      swift_unknownObjectRelease();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      if (!v19)
        goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    result = swift_release();
    v1 = v35;
    v5 = v36;
    v2 = v37;
    if (v36)
      goto LABEL_8;
LABEL_10:
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_62;
    if (v11 >= v34)
    {
      v13 = v2;
    }
    else
    {
      v12 = *(_QWORD *)(v33 + 8 * v11);
      if (v12)
        goto LABEL_13;
      v13 = v2 + 1;
      if (v2 + 2 < v34)
      {
        v12 = *(_QWORD *)(v33 + 8 * (v2 + 2));
        if (v12)
        {
          v11 = v2 + 2;
LABEL_13:
          v5 = (v12 - 1) & v12;
          v7 = __clz(__rbit64(v12)) + (v11 << 6);
          v2 = v11;
          goto LABEL_9;
        }
        v13 = v2 + 2;
        if (v2 + 3 < v34)
        {
          v12 = *(_QWORD *)(v33 + 8 * (v2 + 3));
          if (v12)
          {
            v11 = v2 + 3;
            goto LABEL_13;
          }
          v11 = v2 + 4;
          v13 = v2 + 3;
          if (v2 + 4 < v34)
          {
            v12 = *(_QWORD *)(v33 + 8 * v11);
            if (v12)
              goto LABEL_13;
            while (v34 - 5 != v2)
            {
              v12 = *(_QWORD *)(v32 + 8 * v2++);
              if (v12)
              {
                v11 = v2 + 4;
                goto LABEL_13;
              }
            }
            v13 = v34 - 1;
          }
        }
      }
    }
    v5 = 0;
    memset(v43, 0, sizeof(v43));
    v2 = v13;
    v42 = 0u;
  }
LABEL_26:
  v29 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v29 < v20)
    {
      v30 = *(_QWORD *)(v38 + 8 * v29);
      if (v30)
      {
LABEL_29:
        v19 = (v30 - 1) & v30;
        v25 = __clz(__rbit64(v30)) + (v29 << 6);
        v14 = v29;
        goto LABEL_25;
      }
      v31 = v14 + 2;
      ++v14;
      if (v29 + 1 < v20)
      {
        v30 = *(_QWORD *)(v38 + 8 * v31);
        if (v30)
        {
LABEL_32:
          v29 = v31;
          goto LABEL_29;
        }
        v14 = v29 + 1;
        if (v29 + 2 < v20)
        {
          v30 = *(_QWORD *)(v38 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_29;
          }
          v31 = v29 + 3;
          v14 = v29 + 2;
          if (v29 + 3 < v20)
          {
            v30 = *(_QWORD *)(v38 + 8 * v31);
            if (v30)
              goto LABEL_32;
            while (1)
            {
              v29 = v31 + 1;
              if (__OFADD__(v31, 1))
                goto LABEL_63;
              if (v29 >= v20)
                break;
              v30 = *(_QWORD *)(v38 + 8 * v29);
              ++v31;
              if (v30)
                goto LABEL_29;
            }
            v14 = v20 - 1;
          }
        }
      }
    }
    v19 = 0;
    memset(v41, 0, sizeof(v41));
    v40 = 0u;
    goto LABEL_44;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

void sub_249E35B64(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA0D0);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA0D8);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA0E0);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA0E8);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA0F0);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E376CC();
  sub_249F20018();
  __asm { BR              X10 }
}

uint64_t sub_249E35D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_249E377DC();
  sub_249F1FD3C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

uint64_t sub_249E35E50(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA050);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E36718();
  sub_249F20018();
  v16 = *v3;
  v15 = 0;
  sub_249E0B594();
  sub_249F1FDCC();
  if (!v2)
  {
    v9 = type metadata accessor for ImageProvenance();
    v14 = 1;
    sub_249F1E8D8();
    sub_249E3675C(&qword_2578D8108, MEMORY[0x24BDCEA70]);
    sub_249F1FDCC();
    v13 = 2;
    sub_249F1FDC0();
    v12 = *(_QWORD *)&v3[*(int *)(v9 + 28)];
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA060);
    sub_249E3679C(&qword_2578DA068, &qword_2578DA070, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_249F1FD84();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_249E36054@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v20 = a2;
  v3 = sub_249F1E8D8();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA080);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ImageProvenance();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E36718();
  v23 = v8;
  v12 = v25;
  sub_249F1FFF4();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v25 = a1;
  v15 = v21;
  v14 = v22;
  v30 = 0;
  sub_249E0B8C0();
  sub_249F1FD00();
  v16 = (uint64_t)v11;
  *v11 = v31;
  v29 = 1;
  sub_249E3675C(&qword_2578D8160, MEMORY[0x24BDCEAA8]);
  sub_249F1FD00();
  (*(void (**)(_BYTE *, char *, uint64_t))(v15 + 32))(&v11[v9[5]], v5, v14);
  v28 = 2;
  *(_QWORD *)&v11[v9[6]] = sub_249F1FCF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA060);
  v27 = 3;
  sub_249E3679C(&qword_2578DA088, &qword_2578DA090, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  sub_249F1FCB8();
  v17 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v24);
  *(_QWORD *)(v16 + v9[7]) = v26;
  sub_249E3687C(v16, v20);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return sub_249E368C0(v16);
}

uint64_t sub_249E3636C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249E363A8 + 4 * byte_249F28A94[*v0]))(0x6472616F6279656BLL, 0xED0000696A6F6D45);
}

unint64_t sub_249E363A8()
{
  return 0xD000000000000014;
}

uint64_t sub_249E363D0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_249E363E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E36F0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E3640C()
{
  sub_249E376CC();
  return sub_249F20024();
}

uint64_t sub_249E36434()
{
  sub_249E376CC();
  return sub_249F20030();
}

uint64_t sub_249E3645C()
{
  sub_249E37798();
  return sub_249F20024();
}

uint64_t sub_249E36484()
{
  sub_249E37798();
  return sub_249F20030();
}

uint64_t sub_249E364AC()
{
  sub_249E377DC();
  return sub_249F20024();
}

uint64_t sub_249E364D4()
{
  sub_249E377DC();
  return sub_249F20030();
}

uint64_t sub_249E364FC()
{
  sub_249E37754();
  return sub_249F20024();
}

uint64_t sub_249E36524()
{
  sub_249E37754();
  return sub_249F20030();
}

uint64_t sub_249E3654C()
{
  sub_249E37710();
  return sub_249F20024();
}

uint64_t sub_249E36574()
{
  sub_249E37710();
  return sub_249F20030();
}

void sub_249E3659C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B4DAA0;
}

uint64_t sub_249E365AC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249E370D8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_249E365D4(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_249E35B64(a1, *v1);
}

uint64_t sub_249E365EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249E36620 + 4 * byte_249F28A98[*v0]))(0x6F746172656E6567, 0xE900000000000072);
}

uint64_t sub_249E36620()
{
  return 0x69746172656E6567;
}

unint64_t sub_249E36640()
{
  return 0xD000000000000014;
}

unint64_t sub_249E3665C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_249E3667C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E374FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E366A0()
{
  sub_249E36718();
  return sub_249F20024();
}

uint64_t sub_249E366C8()
{
  sub_249E36718();
  return sub_249F20030();
}

uint64_t sub_249E366F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E36054(a1, a2);
}

uint64_t sub_249E36704(_QWORD *a1)
{
  return sub_249E35E50(a1);
}

unint64_t sub_249E36718()
{
  unint64_t result;

  result = qword_2578DA058;
  if (!qword_2578DA058)
  {
    result = MEMORY[0x24BD06528](&unk_249F28D08, &type metadata for ImageProvenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA058);
  }
  return result;
}

uint64_t sub_249E3675C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_249F1E8D8();
    result = MEMORY[0x24BD06528](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E3679C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DA060);
    v10[0] = a3;
    v10[1] = sub_249E3681C(a2, a3, a4);
    result = MEMORY[0x24BD06528](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E3681C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DA078);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x24BD06528](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E3687C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageProvenance();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E368C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImageProvenance();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249E368FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E36944()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;

  v1 = *v0;
  if (v1 == 3)
    return 0;
  if (v1 == 2)
  {
    v2 = sub_249F1F328();
    v4 = v3;
    v5 = sub_249E36B40();
    v6 = MEMORY[0x24BEE0D00];
    v29 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v28 = v5;
    *((_QWORD *)&v28 + 1) = v7;
    sub_249DCA678(&v28, v27);
    v8 = MEMORY[0x24BEE4B00];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_249DD1EC8(v27, v2, v4, isUniquelyReferenced_nonNull_native);
    v10 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = sub_249F1F328();
    v13 = v12;
    v29 = v6;
    v14 = 0xD000000000000054;
    v15 = "https://cv.iptc.org/newscodes/digitalsourcetype/compositeWithTrainedAlgorithmicMedia";
  }
  else
  {
    v16 = sub_249F1F328();
    v18 = v17;
    v19 = sub_249E36B40();
    v20 = MEMORY[0x24BEE0D00];
    v29 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v28 = v19;
    *((_QWORD *)&v28 + 1) = v21;
    sub_249DCA678(&v28, v27);
    v22 = MEMORY[0x24BEE4B00];
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_249DD1EC8(v27, v16, v18, v23);
    v10 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = sub_249F1F328();
    v13 = v24;
    v29 = v20;
    v14 = 0xD000000000000047;
    v15 = "https://cv.iptc.org/newscodes/digitalsourcetype/trainedAlgorithmicMedia";
  }
  *(_QWORD *)&v28 = v14;
  *((_QWORD *)&v28 + 1) = (unint64_t)(v15 - 32) | 0x8000000000000000;
  sub_249DCA678(&v28, v27);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_249DD1EC8(v27, v11, v13, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

unint64_t sub_249E36B40()
{
  uint64_t v0;

  sub_249DDE7C0();
  if (v0)
  {
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  return 0xD000000000000016;
}

_OWORD *sub_249E36BE0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *result;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_249DB7D8C(a2, a3);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        sub_249DCA678((_OWORD *)(v20[7] + 32 * v14), a5);
        return sub_249DCA678(a1, (_OWORD *)(v20[7] + 32 * v14));
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_249DBD618();
      goto LABEL_7;
    }
    sub_249DBAF60(v17, a4 & 1);
    v22 = sub_249DB7D8C(a2, a3);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDBA14(v14, a2, a3, a1, v20);
      *a5 = 0u;
      a5[1] = 0u;
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249E36D34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DD090);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ImageProvenance.CodingKeys()
{
  return &type metadata for ImageProvenance.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageProvenance.Generator()
{
  return &type metadata for ImageProvenance.Generator;
}

unint64_t sub_249E36DA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DA0A0;
  if (!qword_2578DA0A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DA0A8);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578DA0A0);
  }
  return result;
}

unint64_t sub_249E36DF0()
{
  unint64_t result;

  result = qword_2578DA0B0;
  if (!qword_2578DA0B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F28BD8, &type metadata for ImageProvenance.Generator);
    atomic_store(result, (unint64_t *)&qword_2578DA0B0);
  }
  return result;
}

unint64_t sub_249E36E38()
{
  unint64_t result;

  result = qword_2578DA0B8;
  if (!qword_2578DA0B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F28C90, &type metadata for ImageProvenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA0B8);
  }
  return result;
}

unint64_t sub_249E36E80()
{
  unint64_t result;

  result = qword_2578DA0C0;
  if (!qword_2578DA0C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F28C00, &type metadata for ImageProvenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA0C0);
  }
  return result;
}

unint64_t sub_249E36EC8()
{
  unint64_t result;

  result = qword_2578DA0C8;
  if (!qword_2578DA0C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F28C28, &type metadata for ImageProvenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA0C8);
  }
  return result;
}

uint64_t sub_249E36F0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6472616F6279656BLL && a2 == 0xED0000696A6F6D45;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249F364C0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249F364E0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_249E370D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA120);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA128);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA130);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA138);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA140);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_249E376CC();
  v17 = v25;
  sub_249F1FFF4();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_249F1FD24();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_249F1FAF0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v21 = &type metadata for ImageProvenance.Generator;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v12;
}

void sub_249E373FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_249E37798();
  sub_249F1FC64();
  if (!v0)
    JUMPOUT(0x249E374D0);
  JUMPOUT(0x249E373B0);
}

void sub_249E37440()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_249E37754();
  sub_249F1FC64();
  if (!v0)
    JUMPOUT(0x249E37480);
  JUMPOUT(0x249E373B0);
}

void sub_249E3748C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_249E37710();
  sub_249F1FC64();
  if (!v0)
    JUMPOUT(0x249E374D0);
  JUMPOUT(0x249E373B0);
}

uint64_t sub_249E374FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F746172656E6567 && a2 == 0xE900000000000072;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69746172656E6567 && a2 == 0xEC00000044496E6FLL || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249F36480 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249F364A0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_249E376CC()
{
  unint64_t result;

  result = qword_2578DA0F8;
  if (!qword_2578DA0F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2910C, &type metadata for ImageProvenance.Generator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA0F8);
  }
  return result;
}

unint64_t sub_249E37710()
{
  unint64_t result;

  result = qword_2578DA100;
  if (!qword_2578DA100)
  {
    result = MEMORY[0x24BD06528](&unk_249F290BC, &type metadata for ImageProvenance.Generator.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA100);
  }
  return result;
}

unint64_t sub_249E37754()
{
  unint64_t result;

  result = qword_2578DA108;
  if (!qword_2578DA108)
  {
    result = MEMORY[0x24BD06528](&unk_249F2906C, &type metadata for ImageProvenance.Generator.PhotosGenerativeEditCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA108);
  }
  return result;
}

unint64_t sub_249E37798()
{
  unint64_t result;

  result = qword_2578DA110;
  if (!qword_2578DA110)
  {
    result = MEMORY[0x24BD06528](&unk_249F2901C, &type metadata for ImageProvenance.Generator.GenerativePlaygroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA110);
  }
  return result;
}

unint64_t sub_249E377DC()
{
  unint64_t result;

  result = qword_2578DA118;
  if (!qword_2578DA118)
  {
    result = MEMORY[0x24BD06528](&unk_249F28FCC, &type metadata for ImageProvenance.Generator.KeyboardEmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA118);
  }
  return result;
}

uint64_t _s16VisualGeneration15ImageProvenanceV9GeneratorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249E3786C + 4 * byte_249F28AA5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249E378A0 + 4 * byte_249F28AA0[v4]))();
}

uint64_t sub_249E378A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E378A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E378B0);
  return result;
}

uint64_t sub_249E378BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E378C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249E378C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E378D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageProvenance.Generator.CodingKeys()
{
  return &type metadata for ImageProvenance.Generator.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageProvenance.Generator.KeyboardEmojiCodingKeys()
{
  return &type metadata for ImageProvenance.Generator.KeyboardEmojiCodingKeys;
}

ValueMetadata *type metadata accessor for ImageProvenance.Generator.GenerativePlaygroundCodingKeys()
{
  return &type metadata for ImageProvenance.Generator.GenerativePlaygroundCodingKeys;
}

ValueMetadata *type metadata accessor for ImageProvenance.Generator.PhotosGenerativeEditCodingKeys()
{
  return &type metadata for ImageProvenance.Generator.PhotosGenerativeEditCodingKeys;
}

ValueMetadata *type metadata accessor for ImageProvenance.Generator.UnknownCodingKeys()
{
  return &type metadata for ImageProvenance.Generator.UnknownCodingKeys;
}

unint64_t sub_249E37930()
{
  unint64_t result;

  result = qword_2578DA148;
  if (!qword_2578DA148)
  {
    result = MEMORY[0x24BD06528](&unk_249F28FA4, &type metadata for ImageProvenance.Generator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA148);
  }
  return result;
}

unint64_t sub_249E37978()
{
  unint64_t result;

  result = qword_2578DA150;
  if (!qword_2578DA150)
  {
    result = MEMORY[0x24BD06528](&unk_249F28EC4, &type metadata for ImageProvenance.Generator.KeyboardEmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA150);
  }
  return result;
}

unint64_t sub_249E379C0()
{
  unint64_t result;

  result = qword_2578DA158;
  if (!qword_2578DA158)
  {
    result = MEMORY[0x24BD06528](&unk_249F28EEC, &type metadata for ImageProvenance.Generator.KeyboardEmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA158);
  }
  return result;
}

unint64_t sub_249E37A08()
{
  unint64_t result;

  result = qword_2578DA160;
  if (!qword_2578DA160)
  {
    result = MEMORY[0x24BD06528](&unk_249F28E74, &type metadata for ImageProvenance.Generator.GenerativePlaygroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA160);
  }
  return result;
}

unint64_t sub_249E37A50()
{
  unint64_t result;

  result = qword_2578DA168;
  if (!qword_2578DA168)
  {
    result = MEMORY[0x24BD06528](&unk_249F28E9C, &type metadata for ImageProvenance.Generator.GenerativePlaygroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA168);
  }
  return result;
}

unint64_t sub_249E37A98()
{
  unint64_t result;

  result = qword_2578DA170;
  if (!qword_2578DA170)
  {
    result = MEMORY[0x24BD06528](&unk_249F28E24, &type metadata for ImageProvenance.Generator.PhotosGenerativeEditCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA170);
  }
  return result;
}

unint64_t sub_249E37AE0()
{
  unint64_t result;

  result = qword_2578DA178;
  if (!qword_2578DA178)
  {
    result = MEMORY[0x24BD06528](&unk_249F28E4C, &type metadata for ImageProvenance.Generator.PhotosGenerativeEditCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA178);
  }
  return result;
}

unint64_t sub_249E37B28()
{
  unint64_t result;

  result = qword_2578DA180;
  if (!qword_2578DA180)
  {
    result = MEMORY[0x24BD06528](&unk_249F28DD4, &type metadata for ImageProvenance.Generator.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA180);
  }
  return result;
}

unint64_t sub_249E37B70()
{
  unint64_t result;

  result = qword_2578DA188;
  if (!qword_2578DA188)
  {
    result = MEMORY[0x24BD06528](&unk_249F28DFC, &type metadata for ImageProvenance.Generator.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA188);
  }
  return result;
}

unint64_t sub_249E37BB8()
{
  unint64_t result;

  result = qword_2578DA190;
  if (!qword_2578DA190)
  {
    result = MEMORY[0x24BD06528](&unk_249F28F14, &type metadata for ImageProvenance.Generator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA190);
  }
  return result;
}

unint64_t sub_249E37C00()
{
  unint64_t result;

  result = qword_2578DA198;
  if (!qword_2578DA198)
  {
    result = MEMORY[0x24BD06528](&unk_249F28F3C, &type metadata for ImageProvenance.Generator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA198);
  }
  return result;
}

uint64_t dispatch thunk of RequiredResourcesIndicating.hasRequiredResources.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFA54;
  return v7(a1, a2);
}

_QWORD *sub_249E37CB0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  os_signpost_id_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v8 = v7;
  v53 = a6;
  v54 = a4;
  v51 = a5;
  v52 = a3;
  v12 = sub_249F1E8D8();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(unsigned int *)(a7 + 16);
  sub_249F1EDDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C78);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_249F21770;
  v49 = a1;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v45 = v14;
  swift_bridgeObjectRetain();
  v7[2] = sub_249F1EDB8();
  if (qword_2578D5D80 != -1)
    swift_once();
  v16 = sub_249F1EED8();
  __swift_project_value_buffer(v16, (uint64_t)qword_2578FF408);
  v17 = sub_249F1EE9C();
  v50 = &v39;
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  v22 = (char *)&v39 - v21;
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_249F1EE90();
  v23 = sub_249F1EEC0();
  v44 = sub_249F1F8B0();
  v24 = sub_249F1F958();
  if ((v24 & 1) != 0)
  {
    v43 = &v39;
    MEMORY[0x24BDAC7A8](v24);
    v39 = (char *)&v39 - v21;
    v41 = v18;
    v42 = v19;
    (*(void (**)(void))(v19 + 16))();
    v25 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v56 = v40;
    *(_DWORD *)v25 = 67109634;
    swift_bridgeObjectRelease();
    LODWORD(v55) = v45;
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 8) = 2082;
    v26 = v46;
    sub_249F1EDC4();
    sub_249E38474();
    v27 = v48;
    v28 = sub_249F1FE08();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v26, v27);
    v55 = sub_249E68CA8(v28, v30, &v56);
    sub_249F1F9AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 18) = 2080;
    swift_bridgeObjectRetain();
    v55 = sub_249E68CA8(v49, a2, &v56);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    v31 = v39;
    v32 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v23, (os_signpost_type_t)v44, v32, "createModelManagerSession", "client PID %d, session %{public}s, resourceBundleIdentifier %s, privacy: .public)", (uint8_t *)v25, 0x1Cu);
    v33 = v40;
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v33, -1, -1);
    MEMORY[0x24BD06618](v25, -1, -1);

    v34 = v41;
    v35 = *(void (**)(char *, uint64_t))(v42 + 8);
    v35(v22, v41);
    v35(v31, v34);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v19 + 8))((char *)&v39 - v21, v18);
  }
  v36 = v53;
  v8[3] = v51;
  v8[4] = v36;
  v37 = v54;
  v8[5] = v52;
  v8[6] = v37;
  return v8;
}

uint64_t sub_249E38118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  NSObject *v11;
  uint64_t v12;
  void (*v13)(void);
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  os_signpost_id_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_249F1E8D8();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D80 != -1)
    swift_once();
  v5 = sub_249F1EED8();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF408);
  v6 = sub_249F1EE9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = (char *)v27 - v9;
  swift_retain_n();
  sub_249F1EE90();
  v11 = sub_249F1EEC0();
  v33 = sub_249F1F8B0();
  v12 = sub_249F1F958();
  if ((v12 & 1) != 0)
  {
    v31 = v27;
    MEMORY[0x24BDAC7A8](v12);
    v28 = (char *)v27 - v9;
    v13 = *(void (**)(void))(v7 + 16);
    v30 = v6;
    v13();
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v32 = v27;
    v16 = v15;
    v37 = v15;
    v29 = v7;
    *(_DWORD *)v14 = 136446210;
    v27[1] = v14 + 4;
    sub_249F1EDC4();
    sub_249E38474();
    v17 = v35;
    v18 = sub_249F1FE08();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v17);
    v36 = sub_249E68CA8(v18, v20, &v37);
    sub_249F1F9AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    v21 = v28;
    v22 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v11, (os_signpost_type_t)v33, v22, "releaseModelManagerSession", "session %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v16, -1, -1);
    MEMORY[0x24BD06618](v14, -1, -1);

    v23 = *(void (**)(char *, uint64_t))(v29 + 8);
    v24 = v10;
    v25 = v30;
    v23(v24, v30);
    v23(v21, v25);
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v7 + 8))((char *)v27 - v9, v6);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_249E38434()
{
  sub_249E38118();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelManagerInterface()
{
  return objc_opt_self();
}

unint64_t sub_249E38474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D7C60;
  if (!qword_2578D7C60)
  {
    v1 = sub_249F1E8D8();
    result = MEMORY[0x24BD06528](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_2578D7C60);
  }
  return result;
}

uint64_t sub_249E384BC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  uint64_t v42;
  __int128 v43[2];
  uint64_t v44;
  _QWORD v45[2];
  int v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = a2[1];
  v4 = a1[8];
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    sub_249DE0540();
    swift_allocError();
    *(_OWORD *)v18 = xmmword_249F29180;
    v19 = 4;
LABEL_35:
    *(_BYTE *)(v18 + 16) = v19;
    swift_willThrow();
    sub_249E0F9F8((uint64_t)a1);
    return v3;
  }
  v5 = *a2;
  v6 = *((_DWORD *)a2 + 4);
  v41 = *(_BYTE *)(v4 + 32);
  v8 = a1[1];
  v7 = a1[2];
  v9 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = qword_2578FF318;
  v11 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v39 = v5;
  v40 = v6;
  v50 = v3;
  v12 = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    v14 = *(_QWORD *)(v10 + 8 * v13 + 32);
    if ((*(uint64_t (**)(uint64_t))(v14 + 88))(v12) == v8 && v15 == v7)
    {
      swift_bridgeObjectRelease();
      v20 = swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    v17 = sub_249F1FE2C();
    v12 = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      break;
    if (v11 == ++v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  v20 = swift_bridgeObjectRelease();
LABEL_18:
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v14 + 112))(v45, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA268);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v44 = 0;
    memset(v43, 0, sizeof(v43));
    swift_bridgeObjectRelease();
    sub_249E3898C((uint64_t)v43);
LABEL_22:
    v23 = qword_2578FF318;
    v24 = *(_QWORD *)(qword_2578FF318 + 16);
    if (v24)
    {
      v26 = a1[1];
      v25 = a1[2];
      swift_bridgeObjectRetain();
      v27 = swift_bridgeObjectRetain();
      v28 = 0;
      while (1)
      {
        v29 = *(_QWORD *)(v23 + 8 * v28 + 32);
        if ((*(uint64_t (**)(uint64_t))(v29 + 88))(v27) == v26 && v30 == v25)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_34;
        }
        v32 = sub_249F1FE2C();
        v27 = swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
          break;
        if (v24 == ++v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_31:
      v29 = 0;
    }
LABEL_34:
    v47[0] = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA258);
    v3 = sub_249F1F3AC();
    v34 = v33;
    sub_249DE0540();
    swift_allocError();
    *(_QWORD *)v18 = v3;
    *(_QWORD *)(v18 + 8) = v34;
    v19 = 3;
    goto LABEL_35;
  }
  sub_249D9E174(v43, (uint64_t)v47);
  LOBYTE(v45[0]) = v41;
  v3 = sub_249E04E6C();
  v21 = *(_QWORD *)((char *)a1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 64) + 24) != 0;
  v22 = sub_249E911A0((unsigned __int8 *)v45, v3 & 1, v21);
  if (!v42)
  {
    v36 = v22;
    AppleDiffusionAdapter.modelCatalogResourceBundleIdentifier.getter(v22);
    v37 = v48;
    v38 = v49;
    __swift_project_boxed_opaque_existential_1(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    AppleDiffusionAdapter.modelCatalogInferenceAssetIdentifier.getter(v36);
    v45[0] = v39;
    v45[1] = v50;
    v46 = v40;
    __asm { BR              X10 }
  }
  sub_249E0F9F8((uint64_t)a1);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return v3;
}

uint64_t sub_249E3898C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249E389CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v21;
  __int128 v22[2];
  uint64_t v23;
  _QWORD v24[2];
  int v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_DWORD *)a2 + 4);
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = qword_2578FF318;
  v10 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v10)
  {
    v21 = v5;
    v11 = swift_bridgeObjectRetain();
    v12 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(v9 + 8 * v12 + 32);
      if ((*(uint64_t (**)(uint64_t))(v13 + 88))(v11) == v7 && v14 == v6)
      {
        swift_bridgeObjectRelease();
        v17 = swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
      v16 = sub_249F1FE2C();
      v11 = swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        break;
      if (v10 == ++v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    v17 = swift_bridgeObjectRelease();
LABEL_15:
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(v13 + 112))(v24, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA260);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA268);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_249D9E174(v22, (uint64_t)v26);
      v18 = v27;
      v19 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
      v24[0] = v3;
      v24[1] = v4;
      v25 = v21;
      __asm { BR              X10 }
    }
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_249E3898C((uint64_t)v22);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_249E38CBC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249E38D20(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249E38E04 + 4 * byte_249F2921A[a2]))(0x74736572696166);
}

uint64_t sub_249E38E04(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x74736572696166 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_249E38F54(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C616D6566;
  else
    v3 = 1701601645;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C616D6566;
  else
    v5 = 1701601645;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_249E38FEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249E3902C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249E390A0 + 4 * byte_249F29229[a2]))(0x646C696863);
}

uint64_t sub_249E390A0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x646C696863 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_249E3915C(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x8000000249F33A00;
  else
    v2 = 0x8000000249F339E0;
  if ((a2 & 1) != 0)
    v3 = 0x8000000249F33A00;
  else
    v3 = 0x8000000249F339E0;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_249E391F8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000010;
  v3 = 0x8000000249F33A20;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000011;
    else
      v5 = 0xD000000000000010;
    if (v4 == 1)
      v6 = 0x8000000249F33A40;
    else
      v6 = 0x8000000249F33A60;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v5 = 0xD000000000000010;
    v6 = 0x8000000249F33A20;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  if (v7 == 1)
  {
    v2 = 0xD000000000000011;
    v3 = 0x8000000249F33A40;
  }
  else
  {
    v3 = 0x8000000249F33A60;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_249E392E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x746E65696C63;
    else
      v3 = 0xD000000000000010;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0x8000000249F33A60;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x746E65696C63;
      else
        v6 = 0xD000000000000010;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0x8000000249F33A60;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE200000000000000;
    v3 = 25705;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE200000000000000;
  if (v3 != 25705)
  {
LABEL_21:
    v8 = sub_249F1FE2C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_249E393DC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_249E39440(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249E394D4 + 4 * byte_249F29236[a2]))(0xD000000000000018);
}

uint64_t sub_249E394D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000018 && v1 == 0x8000000249F33D00)
    v2 = 1;
  else
    v2 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_249E395A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249E39604(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249E3967C + 4 * byte_249F29243[a2]))(0x696A6F6D65);
}

uint64_t sub_249E3967C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x696A6F6D65 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_249E39740(char *a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *v1;
  if (qword_2578D5D78 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x3A286E6769737361, 0xE900000000000029, 0x615F6E6769737361, 0xEF293A28636E7973);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = v2;
  swift_retain();
  sub_249E3B9CC((uint64_t)&unk_2578DA3C8, v5);
  return swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ImageStylesAssignable.assign(_:)(VisualGeneration::ImageStyle a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v4 = v2;
  v5 = v1;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_BYTE *)MEMORY[0x24BDAC7A8](a1);
  if (qword_2578D5D78 != -1)
    swift_once();
  v9 = sub_249F1EF38();
  __swift_project_value_buffer(v9, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x3A286E6769737361, 0xE900000000000029, 0x615F6E6769737361, 0xEF293A28636E7973);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v5;
  *(_QWORD *)(v11 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(_BYTE *)(v11 + v10 + v7) = v8;
  sub_249E3B9CC((uint64_t)&unk_2578DA280, v11);
  swift_release();
}

uint64_t sub_249E399A8(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 40) = *a1;
  *(_QWORD *)(v2 + 16) = *v1;
  return swift_task_switch();
}

uint64_t sub_249E399CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_249F21770;
  *(_BYTE *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_249E39A50;
  return GenerativePlayground.assign_async(_:)(v2);
}

uint64_t sub_249E39A50()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t ImageStylesAssignable.assign_async(_:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 64) = *a1;
  return swift_task_switch();
}

uint64_t sub_249E39AC4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, _QWORD, _QWORD);

  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_249F21770;
  *(_BYTE *)(v3 + 32) = v1;
  v6 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(v2 + 40) + *(_QWORD *)(v2 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_249E39B64;
  return v6(v3, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249E39B64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E39BD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E39C0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  if (qword_2578D5D78 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x3A286E6769737361, 0xE900000000000029, 0x615F6E6769737361, 0xEF293A28636E7973);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_249E3B9CC((uint64_t)&unk_2578DA3B0, v5);
  return swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ImageStylesAssignable.assign(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v4 = v2;
  v5 = v1;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1._rawValue);
  if (qword_2578D5D78 != -1)
    swift_once();
  v9 = sub_249F1EF38();
  __swift_project_value_buffer(v9, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x3A286E6769737361, 0xE900000000000029, 0x615F6E6769737361, 0xEF293A28636E7973);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v5;
  *(_QWORD *)(v11 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(Swift::OpaquePointer *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_bridgeObjectRetain();
  sub_249E3B9CC((uint64_t)&unk_2578DA298, v11);
  swift_release();
}

uint64_t sub_249E39E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249E3A38C(a1, a2, a3, 0x293A28646461, 0xE600000000000000, (uint64_t)&unk_251B54A40, (uint64_t)&unk_2578DA3A0);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ImageStylesAssignable.add(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_249E3A4A8((uint64_t)a1._rawValue, v1, v2, 0x293A28646461, 0xE600000000000000, (uint64_t)&unk_251B54900, (uint64_t)&unk_2578DA2A8);
}

uint64_t sub_249E39EF0(char *a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *v1;
  if (qword_2578D5D78 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0x3A2865766F6D6572, 0xE900000000000029);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = v2;
  swift_retain();
  sub_249E3B9CC((uint64_t)&unk_2578DA390, v5);
  return swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ImageStylesAssignable.remove(_:)(VisualGeneration::ImageStyle a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v4 = v2;
  v5 = v1;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_BYTE *)MEMORY[0x24BDAC7A8](a1);
  if (qword_2578D5D78 != -1)
    swift_once();
  v9 = sub_249F1EF38();
  __swift_project_value_buffer(v9, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0x3A2865766F6D6572, 0xE900000000000029);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v5;
  *(_QWORD *)(v11 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(_BYTE *)(v11 + v10 + v7) = v8;
  sub_249E3B9CC((uint64_t)&unk_2578DA2B8, v11);
  swift_release();
}

uint64_t sub_249E3A118(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 49) = *a1;
  *(_QWORD *)(v2 + 56) = *v1;
  return swift_task_switch();
}

uint64_t sub_249E3A13C()
{
  uint64_t v0;
  char v1;
  uint64_t inited;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 64) = inited;
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  *(_BYTE *)(inited + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_249E3A1C8;
  return GenerativePlayground.remove(_:)(inited);
}

uint64_t sub_249E3A1C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_setDeallocating();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t ImageStylesAssignable.remove(_:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 64) = *a1;
  return swift_task_switch();
}

uint64_t sub_249E3A23C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, _QWORD, _QWORD);

  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_249F21770;
  *(_BYTE *)(v3 + 32) = v1;
  v6 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(v2 + 88) + *(_QWORD *)(v2 + 88));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_249E3A2DC;
  return v6(v3, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249E3A2DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E3A350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249E3A38C(a1, a2, a3, 0x3A2865766F6D6572, 0xE900000000000029, (uint64_t)&unk_251B549F0, (uint64_t)&unk_2578DA378);
}

uint64_t sub_249E3A38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = *v7;
  if (qword_2578D5D78 != -1)
    swift_once();
  v13 = sub_249F1EF38();
  __swift_project_value_buffer(v13, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(a4, a5);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_249E3B9CC(a7, v14);
  return swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ImageStylesAssignable.remove(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_249E3A4A8((uint64_t)a1._rawValue, v1, v2, 0x3A2865766F6D6572, 0xE900000000000029, (uint64_t)&unk_251B54950, (uint64_t)&unk_2578DA2D0);
}

uint64_t sub_249E3A4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  v21 = a7;
  v19[1] = a6;
  v20 = a3;
  v12 = *(_QWORD *)(a2 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](a1);
  if (qword_2578D5D78 != -1)
    swift_once();
  v14 = sub_249F1EF38();
  __swift_project_value_buffer(v14, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(a4, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a2);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  v17 = v20;
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  *(_QWORD *)(v16 + ((v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_bridgeObjectRetain();
  sub_249E3B9CC(v21, v16);
  return swift_release();
}

void sub_249E3A608()
{
  sub_249E3A628();
}

void sub_249E3A628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD000000000000016, 0x8000000249F365C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578DA360;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578DA368, (uint64_t)v9);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

Swift::Void __swiftcall ImageStylesAssignable.removeAllImageStyles()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  dispatch_semaphore_t v15;
  uint64_t v16;
  _QWORD *v17;
  NSObject *v18;
  uint64_t v19;

  v3 = v1;
  v4 = v0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v6);
  if (qword_2578D5D78 != -1)
    swift_once();
  v11 = sub_249F1EF38();
  __swift_project_value_buffer(v11, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD000000000000016, 0x8000000249F365C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v4);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v4;
  *(_QWORD *)(v13 + 24) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = 1;
  *(_QWORD *)(v14 + 24) = 0;
  v15 = dispatch_semaphore_create(0);
  v16 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v15;
  v17[5] = &unk_2578DA2E0;
  v17[6] = v13;
  v17[7] = v14;
  v18 = v15;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v8, (uint64_t)&unk_2578D62E0, (uint64_t)v17);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v14 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249E3A9F4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

void sub_249E3AC04(VisualGeneration::ImageStyle a1)
{
  ImageStylesAssignable.assign(_:)(a1);
}

uint64_t sub_249E3AC18(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_249DAFCF8;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 16) = a2;
  *(_BYTE *)(v8 + 64) = *a1;
  return swift_task_switch();
}

void sub_249E3AC94(Swift::OpaquePointer a1)
{
  ImageStylesAssignable.assign(_:)(a1);
}

void sub_249E3ACA8(Swift::OpaquePointer a1)
{
  ImageStylesAssignable.add(_:)(a1);
}

uint64_t sub_249E3ACBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_249DCC420;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t ImageStylesAssignable.add(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_249E3AD4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  *(_QWORD *)(v0 + 48) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 32) + 8)
                                              + *(_QWORD *)(*(_QWORD *)(v0 + 32) + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_249E3ADD8;
  return v4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_249E3ADD8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E3AE34()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t (*v10)(char *, _QWORD, _QWORD);
  _QWORD *v11;

  v9 = *(_QWORD *)(v0 + 16) + 32;
  v1 = *(char **)(v0 + 64);
  swift_bridgeObjectRetain();
  v2 = 0;
  do
  {
    v3 = *(_BYTE *)(v9 + v2);
    if (*((_QWORD *)v1 + 2))
    {
      swift_bridgeObjectRetain_n();
      __asm { BR              X9 }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_249DB22EC(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v5 = *((_QWORD *)v1 + 2);
    v4 = *((_QWORD *)v1 + 3);
    if (v5 >= v4 >> 1)
      v1 = sub_249DB22EC((char *)(v4 > 1), v5 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v5 + 1;
    v1[v5 + 32] = v3;
    ++v2;
    v11[9] = v1;
  }
  while (v2 != v11[6]);
  v6 = v11[4];
  swift_bridgeObjectRelease();
  v10 = (uint64_t (*)(char *, _QWORD, _QWORD))(**(int **)(v6 + 40) + *(_QWORD *)(v6 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  v11[10] = v7;
  *v7 = v11;
  v7[1] = sub_249E3B128;
  return v10(v1, v11[3], v11[4]);
}

uint64_t sub_249E3B128()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E3B19C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E3B1D0(VisualGeneration::ImageStyle a1)
{
  ImageStylesAssignable.remove(_:)(a1);
}

uint64_t sub_249E3B1E4(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_249DCC420;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 16) = a2;
  *(_BYTE *)(v8 + 64) = *a1;
  return swift_task_switch();
}

void sub_249E3B260(Swift::OpaquePointer a1)
{
  ImageStylesAssignable.remove(_:)(a1);
}

uint64_t sub_249E3B274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_249DCC420;
  v8[5] = a3;
  v8[6] = v3;
  v8[3] = a1;
  v8[4] = a2;
  return swift_task_switch();
}

uint64_t ImageStylesAssignable.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_249E3B304()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  *(_QWORD *)(v0 + 56) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 40) + 8)
                                              + *(_QWORD *)(*(_QWORD *)(v0 + 40) + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_249E3B390;
  return v4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_249E3B390(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E3B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 16) = v1;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_7;
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_249E3CA6C(v3, v2);
  v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD *)(v1 + 16);
    v7 = v8;
    goto LABEL_9;
  }
  v7 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  v8 = v4;
  v9 = *(_QWORD *)(v1 + 16);
  if (v7 != v9)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      v14 = *(_QWORD *)(v0 + 24) + 32;
      if (v7 < v9)
      {
        swift_bridgeObjectRetain();
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x249E3B7B0);
    }
LABEL_15:
    __break(1u);
    JUMPOUT(0x249E3B7CCLL);
  }
  if (v7 < v4)
  {
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_9:
  v11 = *(_QWORD *)(v0 + 40);
  sub_249E3C918(v8, v7);
  v12 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 80) = v12;
  v15 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(v11 + 40) + *(_QWORD *)(v11 + 40));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v13;
  *v13 = v0;
  v13[1] = sub_249E3B7F4;
  return v15(v12, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_249E3B7F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_249E3B860()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E3B86C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E3B8A4()
{
  uint64_t v0;

  ImageStylesAssignable.removeAllImageStyles()();
  return sub_249E3D33C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_249E3B8D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(v5 + 32) = a3;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_249E3B954;
  return v10(v5 + 32, a4, a5);
}

uint64_t sub_249E3B954()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E3B9C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E3B9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  dispatch_semaphore_t v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 1;
  *(_QWORD *)(v7 + 24) = 0;
  v8 = dispatch_semaphore_create(0);
  v9 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = a1;
  v10[6] = a2;
  v10[7] = v7;
  v11 = v8;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v6, (uint64_t)&unk_2578DA3D8, (uint64_t)v10);
  swift_release();
  sub_249F1F8E0();
  v12 = *(void **)(v7 + 24);
  if (v12)
  {
    v13 = v12;
    swift_willThrow();
    swift_release();

  }
  else if ((*(_BYTE *)(v7 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();

  }
}

uint64_t sub_249E3BB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 40) + *(_QWORD *)(a5 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_249DCC420;
  return v11(a3, a4, a5);
}

uint64_t sub_249E3BBC0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(v5 + 32) = a3;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 72) + *(_QWORD *)(a5 + 72));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_249E3BC40;
  return v10(v5 + 32, a4, a5);
}

uint64_t sub_249E3BC40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E3BCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 88) + *(_QWORD *)(a5 + 88));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_249DCC420;
  return v11(a3, a4, a5);
}

uint64_t sub_249E3BD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a4 + 104) + *(_QWORD *)(a4 + 104));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_249DCC420;
  return v9(a3, a4);
}

uint64_t sub_249E3BD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v7[2] = a4;
  v7[3] = a7;
  v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc();
  v7[4] = v8;
  *v8 = v7;
  v8[1] = sub_249E3BDF4;
  return v10();
}

uint64_t sub_249E3BDF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E3BE58()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 24) + 16) = 0;
  sub_249F1F8EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E3BE90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v0 + 40);

  sub_249F1F8EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E3BED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0
                + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                + *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_249DCC420;
  *(_BYTE *)(v5 + 32) = v4;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = v5;
  v6[1] = sub_249E3B954;
  return v8(v5 + 32, v2, v3);
}

uint64_t sub_249E3BFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_249DCC420;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 40) + *(_QWORD *)(v3 + 40));
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_249DCC420;
  return v8(v4, v2, v3);
}

uint64_t sub_249E3C064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_249DCC420;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 40) + *(_QWORD *)(v3 + 40));
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_249DCC420;
  return v8(v4, v2, v3);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_249E3C184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0
                + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                + *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_249DCC420;
  *(_BYTE *)(v5 + 32) = v4;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 72) + *(_QWORD *)(v3 + 72));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = v5;
  v6[1] = sub_249E3BC40;
  return v8(v5 + 32, v2, v3);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249E3C2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_249DCC420;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 88) + *(_QWORD *)(v3 + 88));
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_249DCC420;
  return v8(v4, v2, v3);
}

uint64_t sub_249E3C378()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_249E3C3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_249DCC420;
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 104) + *(_QWORD *)(v3 + 104));
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_249DCC420;
  return v7(v2, v3);
}

_QWORD *sub_249E3C474(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *result;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    result = sub_249DB20AC(result, v15, 1, v6);
    v6 = result;
  }
  v16 = &v6[2 * a1 + 4];
  if (!v10)
    goto LABEL_20;
  v17 = v6[2];
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_26;
  if ((v19 & 0x8000000000000000) == 0)
  {
    result = v16 + 2;
    v20 = &v6[2 * a2 + 4];
    if (v16 + 2 != v20 || result >= &v20[2 * v19])
      result = memmove(result, v20, 16 * v19);
    v21 = v6[2];
    v18 = __OFADD__(v21, v10);
    v22 = v21 + v10;
    if (!v18)
    {
      v6[2] = v22;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (_QWORD *)sub_249F1FC28();
  __break(1u);
  return result;
}

_QWORD *sub_249E3C5E0(_QWORD *a1)
{
  return sub_249DB20AC(0, a1[2], 0, a1);
}

char *sub_249E3C5F4(uint64_t a1)
{
  return sub_249DB22EC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_249E3C608(_QWORD *a1)
{
  return sub_249DB23F8(0, a1[2], 0, a1);
}

_QWORD *sub_249E3C61C(_QWORD *a1)
{
  return sub_249DB2504(0, a1[2], 0, a1);
}

void sub_249E3C630(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24BD056C4);
}

_QWORD *sub_249E3C698(_QWORD *a1)
{
  return sub_249DB2DD0(0, a1[2], 0, a1);
}

_QWORD *sub_249E3C6AC(_QWORD *a1)
{
  return sub_249DB2EDC(0, a1[2], 0, a1);
}

_QWORD *sub_249E3C6C0(_QWORD *a1)
{
  return sub_249DB2FE8(0, a1[2], 0, a1);
}

uint64_t sub_249E3C6D4(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 40) = a3;
  *(_QWORD *)(v3 + 16) = *a2;
  return swift_task_switch();
}

uint64_t sub_249E3C6F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_249F21770;
  *(_BYTE *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_249E3D738;
  return GenerativePlayground.assign_async(_:)(v2);
}

uint64_t sub_249E3C778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_249DCC420;
  return GenerativePlayground.assign_async(_:)(a3);
}

uint64_t sub_249E3C7CC(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 49) = a3;
  *(_QWORD *)(v3 + 56) = *a2;
  return swift_task_switch();
}

uint64_t sub_249E3C7EC()
{
  uint64_t v0;
  char v1;
  uint64_t inited;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 64) = inited;
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  *(_BYTE *)(inited + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_249E3D73C;
  return GenerativePlayground.remove(_:)(inited);
}

uint64_t sub_249E3C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_249DCC420;
  return GenerativePlayground.remove(_:)(a3);
}

uint64_t sub_249E3C8CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.removeAllImageStyles()();
}

char *sub_249E3C918(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = sub_249DB22EC(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = v12 - a2;
  if (__OFSUB__(v12, a2))
    goto LABEL_27;
  if ((v13 & 0x8000000000000000) == 0)
  {
    result = &v4[a1 + 32];
    v14 = &v4[a2 + 32];
    if (a1 != a2 || result >= &v14[v13])
      result = (char *)memmove(result, v14, v13);
    v15 = *((_QWORD *)v4 + 2);
    v16 = __OFADD__(v15, v8);
    v17 = v15 + v8;
    if (!v16)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E3CA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        __asm { BR              X9 }
      }
    }
  }
  return 0;
}

uint64_t dispatch thunk of ImageStylesAssignable.assignedImageStyles.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFA54;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ImageStylesAssignable.assign(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ImageStylesAssignable.assign_async(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DAFCF8;
  return v9(a1, a2, a3);
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ImageStylesAssignable.add(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ImageStylesAssignable.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return v9(a1, a2, a3);
}

{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ImageStylesAssignable.removeAllImageStyles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 104) + *(_QWORD *)(a2 + 104));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DCC420;
  return v7(a1, a2);
}

uint64_t sub_249E3D070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_249F1FBEC();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BD056C4](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequest(0);
  swift_arrayDestroy();
  if (!v6)
    return sub_249F1F55C();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_249F1FBEC();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_249F1F55C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E3D33C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_249E3D344()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_249E3D3B4;
  return ((uint64_t (__cdecl *)())((char *)&dword_2578DA358 + dword_2578DA358))();
}

uint64_t sub_249E3D3B4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E3D404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2578DA370 + dword_2578DA370))(a1, v4, v5);
}

uint64_t sub_249E3D478()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E3D49C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  char v5;
  _QWORD *v6;

  v4 = (_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, _QWORD *, char))((char *)&dword_2578DA388 + dword_2578DA388))(a1, v4, v5);
}

uint64_t sub_249E3D514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2578DA398 + dword_2578DA398))(a1, v4, v5);
}

uint64_t objectdestroy_59Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249E3D5B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2578DA3A8 + dword_2578DA3A8))(a1, v4, v5);
}

uint64_t sub_249E3D62C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  char v5;
  _QWORD *v6;

  v4 = (_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, _QWORD *, char))((char *)&dword_2578DA3C0 + dword_2578DA3C0))(a1, v4, v5);
}

uint64_t sub_249E3D6A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v2 = v0[4];
  v3 = (int *)v0[5];
  v4 = v0[7];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_249DAFCF8;
  v5[2] = v2;
  v5[3] = v4;
  v8 = (uint64_t (*)(void))((char *)v3 + *v3);
  v6 = (_QWORD *)swift_task_alloc();
  v5[4] = v6;
  *v6 = v5;
  v6[1] = sub_249E3BDF4;
  return v8();
}

uint64_t sub_249E3D748(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for GeneratedImage() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_249E7543C(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_249E41EFC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_249E3D7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[30] = a3;
  v4[31] = v3;
  v4[28] = a1;
  v4[29] = a2;
  v5 = sub_249F1E8D8();
  v4[32] = v5;
  v4[33] = *(_QWORD *)(v5 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v4[36] = swift_task_alloc();
  v4[37] = type metadata accessor for DefinitionSession();
  v4[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E3D880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_signpost_type_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  os_signpost_id_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t *);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  os_signpost_type_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_t log;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  __int128 v69;

  v2 = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = v4 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(v1 + *(int *)(v2 + 56), v3, type metadata accessor for GenerationRecipe);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v6 = v4 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generationID;
  v65 = *(_OWORD *)(v4
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller
                  + 24);
  v7 = *(_QWORD *)(v4
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller
                 + 24);
  v8 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller), v7);
  *(_OWORD *)(v0 + 120) = v65;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 96));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_1, v8, v7);
  sub_249E0ED70(v3, v6, v0 + 96, v0 + 56);
  sub_249DC05A8(v3, type metadata accessor for GenerationRecipe);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  if (*(_QWORD *)(v0 + 80))
  {
    v10 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 264);
    sub_249D9E174((__int128 *)(v0 + 56), v0 + 16);
    log = *(os_log_t *)(v12 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v10, v6, v11);
    v67 = 0x206B736154;
    v68 = 0xE500000000000000;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    *(_QWORD *)(v0 + 312) = 0x206B736154;
    *(_QWORD *)(v0 + 320) = 0xE500000000000000;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v62 = sub_249E14D88();
    v14 = v13;
    if (qword_2578D5D40 != -1)
      swift_once();
    v15 = sub_249F1EF38();
    *(_QWORD *)(v0 + 328) = __swift_project_value_buffer(v15, (uint64_t)qword_2578FF378);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v16 = sub_249F1EF20();
    v17 = sub_249F1F82C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v67 = v19;
      *(_DWORD *)v18 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 208) = sub_249E68CA8(0x206B736154, 0xE500000000000000, &v67);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 216) = sub_249E68CA8(v62, v14, &v67);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v16, v17, "%s generating toned emoji with %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v19, -1, -1);
      MEMORY[0x24BD06618](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v66 = (_QWORD *)(v0 + 160);
    v26 = sub_249F1EE9C();
    *(_QWORD *)(v0 + 336) = v26;
    v27 = *(_QWORD *)(v26 - 8);
    *(_QWORD *)(v0 + 344) = v27;
    v63 = v27;
    v64 = v26;
    v28 = swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v28;
    if (qword_2578D5D80 != -1)
      swift_once();
    v30 = *(_QWORD *)(v0 + 272);
    v29 = *(_QWORD *)(v0 + 280);
    v31 = *(_QWORD *)(v0 + 256);
    v32 = sub_249F1EED8();
    __swift_project_value_buffer(v32, (uint64_t)qword_2578FF408);
    sub_249F1EEC0();
    sub_249F1EE78();
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v30, v29, v31);
    swift_bridgeObjectRetain();
    v33 = sub_249F1EEC0();
    v34 = sub_249F1F8A4();
    v35 = sub_249F1F958();
    v37 = *(_QWORD *)(v0 + 264);
    v36 = *(_QWORD *)(v0 + 272);
    v38 = *(_QWORD *)(v0 + 256);
    if ((v35 & 1) != 0)
    {
      v57 = v14;
      v59 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v59, v28, v64);
      v58 = v34;
      v39 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      v67 = v60;
      *(_DWORD *)v39 = 136446466;
      v40 = sub_249F1FE08();
      *(_QWORD *)(v0 + 192) = sub_249E68CA8(v40, v41, &v67);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      v42 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v42(v36, v38);
      *(_WORD *)(v39 + 12) = 2082;
      swift_bridgeObjectRetain();
      v43 = v63;
      *(_QWORD *)(v0 + 200) = sub_249E68CA8(v62, v57, &v67);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      v44 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v33, v58, v44, "generateTonedEmojiTask", "%{public}s %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v60, -1, -1);
      MEMORY[0x24BD06618](v39, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v59, v64);
      swift_task_dealloc();
    }
    else
    {

      v42 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v42(v36, v38);
      swift_bridgeObjectRelease_n();
      v43 = v63;
    }
    *(_QWORD *)(v0 + 360) = v42;
    v45 = *(_QWORD *)(v0 + 232);
    swift_task_alloc();
    (*(void (**)(void))(v43 + 16))();
    sub_249F1EF08();
    swift_allocObject();
    *(_QWORD *)(v0 + 368) = sub_249F1EEFC();
    swift_task_dealloc();
    *v66 = 0;
    *(_QWORD *)(v0 + 168) = 0;
    if (v45)
    {
      v46 = *(_QWORD *)(v0 + 240);
      v47 = *(_QWORD *)(v0 + 248);
      v48 = *(void (**)(uint64_t, uint64_t *))(v0 + 232);
      v49 = (_QWORD *)swift_allocObject();
      v49[2] = v48;
      v49[3] = v46;
      v49[4] = v47;
      sub_249DC09B8((uint64_t)v48);
      sub_249DC09B8((uint64_t)v48);
      swift_retain();
      sub_249DC0A2C(0);
      *(_QWORD *)(v0 + 160) = sub_249E43458;
      *(_QWORD *)(v0 + 168) = v49;
      v67 = 0;
      v68 = 0;
      v69 = xmmword_249F29290;
      v48(v47, &v67);
      sub_249DC0A2C((uint64_t)v48);
    }
    v50 = *(_QWORD *)(v0 + 280);
    v52 = *(_QWORD *)(v0 + 240);
    v51 = *(_QWORD *)(v0 + 248);
    v53 = *(_QWORD *)(v0 + 232);
    v54 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v54;
    v54[2] = v51;
    v54[3] = v50;
    v54[4] = v0 + 16;
    v54[5] = v53;
    v54[6] = v52;
    v54[7] = v66;
    v54[8] = 0x206B736154;
    v54[9] = 0xE500000000000000;
    v55 = swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v55;
    *(_QWORD *)(v55 + 16) = 0x206B736154;
    *(_QWORD *)(v55 + 24) = 0xE500000000000000;
    v56 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 392) = v56;
    *v56 = v0;
    v56[1] = sub_249E3E174;
    return sub_249F1FE38();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 304);
    v21 = *(_QWORD *)(v0 + 288);
    sub_249DCC2FC(v0 + 56, &qword_2578D7DE0);
    sub_249DC091C(v5, v20, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    sub_249DC091C(v20 + *(int *)(v2 + 56), v21, type metadata accessor for GenerationRecipe);
    sub_249DC05A8(v20, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    v23 = *(_QWORD *)(v21 + 8);
    v22 = *(_QWORD *)(v21 + 16);
    swift_bridgeObjectRetain();
    sub_249DC05A8(v21, type metadata accessor for GenerationRecipe);
    sub_249D9D9B0();
    swift_allocError();
    *(_QWORD *)v24 = v23;
    *(_QWORD *)(v24 + 8) = v22;
    *(_BYTE *)(v24 + 16) = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249E3E174()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249E3E1FC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 256);
  sub_249DC0A2C(*(_QWORD *)(v0 + 160));
  sub_249DDDF68("generateTonedEmojiTask", 22, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E3E2E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t *);
  void *v15;
  uint64_t v16;
  id v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DC0A2C(*(_QWORD *)(v0 + 160));
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_249F1EF20();
  v5 = sub_249F1F820();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 400);
    v8 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_249E68CA8(v8, v7, &v26);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 184) = v12;
    sub_249F1F9AC();
    *v10 = v12;

    _os_log_impl(&dword_249D98000, v4, v5, "%s toned emoji generation failed - %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v25, -1, -1);
    MEMORY[0x24BD06618](v9, -1, -1);
  }
  else
  {
    v13 = *(void **)(v0 + 400);
    swift_bridgeObjectRelease_n();

  }
  v14 = *(void (**)(uint64_t, uint64_t *))(v0 + 232);
  if (v14)
  {
    v15 = *(void **)(v0 + 400);
    v16 = *(_QWORD *)(v0 + 248);
    v26 = (uint64_t)v15;
    v27 = xmmword_249F292A0;
    v28 = 0;
    v17 = v15;
    v14(v16, &v26);

  }
  v18 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
  v20 = *(_QWORD *)(v0 + 344);
  v19 = *(_QWORD *)(v0 + 352);
  v21 = *(_QWORD *)(v0 + 336);
  v22 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 256);
  swift_willThrow();
  sub_249DDDF68("generateTonedEmojiTask", 22, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  v18(v22, v23);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Error.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249E3E610()
{
  sub_249E3E81C();
  return sub_249F20024();
}

uint64_t sub_249E3E638()
{
  sub_249E3E81C();
  return sub_249F20030();
}

uint64_t sub_249E3E660()
{
  sub_249E3E860();
  return sub_249F20024();
}

uint64_t sub_249E3E688()
{
  sub_249E3E860();
  return sub_249F20030();
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Error.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA3E0);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA3E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v12[1] = v1[1];
  v12[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E3E81C();
  sub_249F20018();
  sub_249E3E860();
  sub_249F1FD3C();
  sub_249F1FD90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_249E3E81C()
{
  unint64_t result;

  result = qword_2578DA3F0;
  if (!qword_2578DA3F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F296F0, &_s15ImageToningTaskC5ErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA3F0);
  }
  return result;
}

unint64_t sub_249E3E860()
{
  unint64_t result;

  result = qword_2578DA3F8;
  if (!qword_2578DA3F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F296A0, &_s15ImageToningTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA3F8);
  }
  return result;
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Error.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA400);
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA408);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E3E81C();
  v10 = v30;
  sub_249F1FFF4();
  if (v10)
    goto LABEL_7;
  v26 = v3;
  v27 = a1;
  v30 = v7;
  v11 = v6;
  if (*(_QWORD *)(sub_249F1FD24() + 16) != 1)
  {
    v15 = v6;
    v16 = sub_249F1FAF0();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v18 = &type metadata for KeyboardEmojiGenerator.ImageToningTask.Error;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v19 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  sub_249E3E860();
  v12 = v5;
  sub_249F1FC64();
  v13 = v30;
  v14 = v29;
  v21 = sub_249F1FCC4();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v11);
  v24 = (uint64_t)v27;
  v25 = v28;
  *v28 = v21;
  v25[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_249E3EB54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return KeyboardEmojiGenerator.ImageToningTask.Error.init(from:)(a1, a2);
}

uint64_t sub_249E3EB68(_QWORD *a1)
{
  return KeyboardEmojiGenerator.ImageToningTask.Error.encode(to:)(a1);
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Progress.currentStep.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Progress.totalSteps.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

unint64_t KeyboardEmojiGenerator.ImageToningTask.Progress.completionPercentage.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  float v4;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16) | (v1 < 1);
  if (*(_BYTE *)(v0 + 16) & 1 | (v1 < 1))
  {
    v3 = 0;
  }
  else
  {
    v4 = (float)*(uint64_t *)v0 / (float)v1;
    if (v4 > 1.0)
      v4 = 1.0;
    v3 = LODWORD(v4);
  }
  return v3 | ((unint64_t)(v2 & 1) << 32);
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Progress.emoji.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.Progress.description.getter()
{
  uint64_t v0;
  char v1;
  uint64_t result;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 16);
  result = sub_249F1FE08();
  v3 = result;
  if ((v1 & 1) == 0)
  {
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t sub_249E3ECAC(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;

  v11 = type metadata accessor for DefinitionSession();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a3;
  v20 = *a4;
  sub_249DC091C(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)&v13[*(int *)(v11 + 56) + 48] = 1;
  v14 = v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generationID;
  v15 = sub_249F1E8D8();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  sub_249DC091C((uint64_t)v13, v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249D9E1E4(a5, v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller);
  *(_BYTE *)(v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__strikeSizesScaler) = 0;
  __swift_destroy_boxed_opaque_existential_1(a5);
  sub_249DC05A8(a2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  sub_249DC05A8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__strikeSizes) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generatedEmoji) = v19;
  *(_BYTE *)(v5 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__skinTone) = v20;
  return v5;
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generationID;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E3EE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[45] = a8;
  v8[46] = v12;
  v8[43] = a6;
  v8[44] = a7;
  v8[41] = a4;
  v8[42] = a5;
  v8[39] = a2;
  v8[40] = a3;
  v8[38] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  v8[47] = swift_task_alloc();
  v8[48] = type metadata accessor for DefinitionSession();
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v8[51] = swift_task_alloc();
  v8[52] = swift_task_alloc();
  v9 = sub_249F1E8D8();
  v8[53] = v9;
  v8[54] = *(_QWORD *)(v9 - 8);
  v8[55] = swift_task_alloc();
  v8[56] = swift_task_alloc();
  v10 = type metadata accessor for GeneratedImage();
  v8[57] = v10;
  v8[58] = *(_QWORD *)(v10 - 8);
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E3EFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  char v20;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller;
  *(_QWORD *)(v0 + 488) = OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller;
  v3 = (_QWORD *)(v1 + v2);
  v4 = *(_QWORD *)(v1 + v2 + 24);
  v5 = *(_QWORD *)(v1 + v2 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + v2), v4);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 312)
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generatedEmoji);
  if (!*(_QWORD *)(v6 + 16))
  {
    sub_249E2FA30();
    swift_allocError();
    *v14 = 0xD00000000000001FLL;
    v14[1] = 0x8000000249F366F0;
    swift_willThrow();
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(v0 + 480);
  v8 = *(_DWORD *)(*(_QWORD *)(v0 + 464) + 80);
  *(_DWORD *)(v0 + 244) = v8;
  sub_249DC091C(v6 + ((v8 + 32) & ~(unint64_t)v8), v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v9 = *(void **)v7;
  *(_QWORD *)(v0 + 496) = *(_QWORD *)v7;
  v10 = *(_BYTE *)(v7 + 8);
  v11 = v9;
  sub_249DC05A8(v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  type metadata accessor for ImageChecker();
  swift_initStaticObject();
  v19 = v9;
  v20 = v10;
  sub_249DDD43C((uint64_t)&v19, &v18);
  swift_bridgeObjectRelease();
  v12 = v3[3];
  v13 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v12);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();

    goto LABEL_10;
  }
  sub_249F1F670();
  *(_QWORD *)(v0 + 248) = v9;
  v16 = *(_QWORD *)(v0 + 312);
  *(_BYTE *)(v0 + 256) = v10;
  *(_BYTE *)(v0 + 257) = *(_BYTE *)(v16
                                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__skinTone);
  *(_QWORD *)(v0 + 504) = OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__definitionSession;
  swift_beginAccess();
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v17;
  *v17 = v0;
  v17[1] = sub_249E3F31C;
  return sub_249E9CA4C((uint64_t *)(v0 + 248), (_BYTE *)(v0 + 257));
}

uint64_t sub_249E3F31C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_249E3F388()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  NSObject *v16;
  os_signpost_type_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  os_signpost_id_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v50;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 488));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    v4 = *(void **)(v0 + 496);
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_5:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 520);
  sub_249F1F670();
  if (v5)
  {
    v4 = *(void **)(v0 + 496);
    goto LABEL_5;
  }
  v7 = sub_249F1EE9C();
  *(_QWORD *)(v0 + 528) = v7;
  v48 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 536) = v8;
  *(_QWORD *)(v0 + 544) = *(_QWORD *)(v8 + 64);
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 552) = v9;
  if (qword_2578D5D80 != -1)
    swift_once();
  v10 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 424);
  v11 = *(_QWORD *)(v0 + 432);
  v13 = *(_QWORD *)(v0 + 320);
  v14 = sub_249F1EED8();
  *(_QWORD *)(v0 + 560) = __swift_project_value_buffer(v14, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  *(_QWORD *)(v0 + 568) = v15;
  v15(v10, v13, v12);
  v16 = sub_249F1EEC0();
  v17 = sub_249F1F8A4();
  v18 = sub_249F1F958();
  v19 = *(_QWORD *)(v0 + 448);
  v21 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 432);
  if ((v18 & 1) != 0)
  {
    v46 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v46, v9, v48);
    v47 = v8;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v50 = v23;
    *(_DWORD *)v22 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v24 = sub_249F1FE08();
    *(_QWORD *)(v0 + 296) = sub_249E68CA8(v24, v25, &v50);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v26(v19, v21);
    v27 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v16, v17, v27, "prepareTonedEmojiRecipe", "%{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v23, -1, -1);
    MEMORY[0x24BD06618](v22, -1, -1);

    v28 = v47;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    swift_task_dealloc();
  }
  else
  {

    v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v26(v19, v21);
    v28 = v8;
  }
  *(_QWORD *)(v0 + 576) = v26;
  v30 = *(_QWORD *)(v0 + 400);
  v29 = *(_QWORD *)(v0 + 408);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD **)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 504);
  swift_task_alloc();
  v35 = *(void (**)(void))(v28 + 16);
  *(_QWORD *)(v0 + 584) = v35;
  v35();
  *(_QWORD *)(v0 + 592) = sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 600) = sub_249F1EEFC();
  swift_task_dealloc();
  v37 = v33[3];
  v36 = v33[4];
  __swift_project_boxed_opaque_existential_1(v33, v37);
  sub_249DC091C(v34, v30, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(v30 + *(int *)(v31 + 56), v29, type metadata accessor for GenerationRecipe);
  sub_249DC05A8(v30, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(v34, v32, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v38 = v32 + *(int *)(v31 + 56);
  if (*(_QWORD *)(v38 + 8) == 0xD000000000000029 && *(_QWORD *)(v38 + 16) == 0x8000000249F34090
    || (sub_249F1FE2C() & 1) != 0)
  {
    v39 = *(_QWORD *)(v0 + 392);
    v40 = *(void **)(v39 + *(int *)(*(_QWORD *)(v0 + 384) + 44));
    v41 = type metadata accessor for InputConditioner();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v40;
    *(_QWORD *)(v0 + 144) = v41;
    *(_QWORD *)(v0 + 152) = &off_251B53448;
    *(_QWORD *)(v0 + 120) = v42;
    v43 = v40;
    v44 = v0 + 120;
  }
  else
  {
    v44 = v0 + 120;
    *(_QWORD *)(v0 + 152) = 0;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    v39 = *(_QWORD *)(v0 + 392);
  }
  sub_249DC05A8(v39, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v49 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v36 + 32) + *(_QWORD *)(v36 + 32));
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 608) = v45;
  *v45 = v0;
  v45[1] = sub_249E3F924;
  return v49(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 408), v44, v37, v36);
}

uint64_t sub_249E3F924()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *v1 + 120;
  *(_QWORD *)(*v1 + 616) = v0;
  swift_task_dealloc();
  v4 = *(_QWORD *)(v2 + 408);
  sub_249DCC2FC(v3, &qword_2578D6448);
  sub_249DC05A8(v4, type metadata accessor for GenerationRecipe);
  return swift_task_switch();
}

uint64_t sub_249E3F9B8()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t *);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_signpost_type_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  os_signpost_id_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void);
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int *v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  os_signpost_type_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74[2];
  __int128 v75;

  v1 = sub_249F1EEC0();
  v2 = swift_task_alloc();
  sub_249F1EEF0();
  v3 = sub_249F1F898();
  if ((sub_249F1F958() & 1) != 0)
  {
    v4 = sub_249F1EEE4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x24BEE7808] && v7 == *MEMORY[0x24BEE7808])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      v8 = "";
    }
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
    v13 = *(_QWORD *)(v0 + 536);
    v14 = *(_QWORD *)(v0 + 528);
    swift_task_dealloc();
    v15 = swift_task_alloc();
    v12(v15, v2, v14);
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v1, v3, v17, "prepareTonedEmojiRecipe", v8, v16, 2u);
    MEMORY[0x24BD06618](v16, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v11(v2, v14);
    v11(v15, v14);
    swift_task_dealloc();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 536);
    v10 = *(_QWORD *)(v0 + 528);

    v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v11(v2, v10);
  }
  *(_QWORD *)(v0 + 624) = v11;
  v18 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc();
  if (v18)
  {
    v19 = *(void (**)(uint64_t, uint64_t *))(v0 + 336);
    v20 = *(_QWORD *)(v0 + 312);
    v74[0] = 0;
    v74[1] = 0;
    v75 = xmmword_249F23BD0;
    swift_retain();
    v19(v20, v74);
    sub_249DC0A2C((uint64_t)v19);
  }
  v21 = (_QWORD *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 488));
  v22 = v21[3];
  v23 = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v22);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_13:
    v25 = *(_QWORD *)(v0 + 552);
    v26 = *(_QWORD *)(v0 + 528);
    v27 = *(void **)(v0 + 496);
    v28 = *(_QWORD *)(v0 + 416);
    swift_release();

    sub_249DC05A8(v28, type metadata accessor for GenerationRecipe);
    v11(v25, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v24 = *(_QWORD *)(v0 + 616);
  sub_249F1F670();
  if (v24)
    goto LABEL_13;
  v30 = (uint64_t *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 504) + *(int *)(*(_QWORD *)(v0 + 384) + 24));
  v31 = *v30;
  *(_QWORD *)(v0 + 632) = *v30;
  *(_QWORD *)(v0 + 640) = v30[1];
  v32 = 0;
  if (v31)
  {
    type metadata accessor for ForensicsHandler();
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = 0;
  }
  v72 = v32;
  *(_QWORD *)(v0 + 648) = v32;
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 568);
  v34 = *(_QWORD *)(v0 + 440);
  v35 = *(_QWORD *)(v0 + 424);
  v36 = *(_QWORD *)(v0 + 320);
  v37 = swift_task_alloc();
  *(_QWORD *)(v0 + 656) = v37;
  sub_249DC09B8(v31);
  sub_249F1EEC0();
  sub_249F1EE78();
  v33(v34, v36, v35);
  v38 = sub_249F1EEC0();
  v39 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
    v69 = *(void (**)(uint64_t, uint64_t))(v0 + 576);
    v70 = v39;
    v41 = *(_QWORD *)(v0 + 528);
    v71 = v41;
    v42 = *(_QWORD *)(v0 + 440);
    v43 = *(_QWORD *)(v0 + 424);
    v68 = swift_task_alloc();
    v40(v68, v37, v41);
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v74[0] = v45;
    *(_DWORD *)v44 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v46 = sub_249F1FE08();
    *(_QWORD *)(v0 + 288) = sub_249E68CA8(v46, v47, v74);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v69(v42, v43);
    v48 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v38, v70, v48, "generateTonedImages", "%{public}s", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v45, -1, -1);
    MEMORY[0x24BD06618](v44, -1, -1);

    v11(v68, v71);
    swift_task_dealloc();
  }
  else
  {
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 576);
    v50 = *(_QWORD *)(v0 + 440);
    v51 = *(_QWORD *)(v0 + 424);

    v49(v50, v51);
  }
  v52 = *(void (**)(void))(v0 + 584);
  v53 = *(_QWORD *)(v0 + 384);
  v54 = *(uint64_t **)(v0 + 352);
  v55 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 504);
  swift_task_alloc();
  v52();
  swift_allocObject();
  *(_QWORD *)(v0 + 664) = sub_249F1EEFC();
  swift_task_dealloc();
  v56 = *(_QWORD *)(v55 + *(int *)(v53 + 60));
  v58 = *v54;
  v57 = v54[1];
  if (v72)
  {
    *(_QWORD *)(v0 + 184) = type metadata accessor for ForensicsHandler();
    *(_QWORD *)(v0 + 192) = &off_251B4FC48;
    *(_QWORD *)(v0 + 160) = v72;
  }
  else
  {
    *(_QWORD *)(v0 + 192) = 0;
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  *(_QWORD *)(v0 + 672) = v72;
  v59 = *(_QWORD *)(v0 + 384);
  v60 = *(_QWORD **)(v0 + 328);
  v61 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 504);
  *(_QWORD *)(v0 + 16) = v56;
  *(_QWORD *)(v0 + 24) = v58;
  *(_QWORD *)(v0 + 32) = v57;
  sub_249DE6E50(v0 + 160, v0 + 40);
  v62 = v60[3];
  v63 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v62);
  v64 = v61 + *(int *)(v59 + 20);
  v65 = *(_DWORD *)(v64 + 16);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)v64;
  *(_DWORD *)(v0 + 240) = v65;
  v66 = *(int **)(v63 + 40);
  swift_retain();
  sub_249DC09B8(v58);
  v73 = (int *)((char *)v66 + *v66);
  swift_retain();
  v67 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 680) = v67;
  *v67 = v0;
  v67[1] = sub_249E40108;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v73)(*(_QWORD *)(v0 + 416), v0 + 224, v0 + 16, v62, v63);
}

uint64_t sub_249E40108(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 688) = a1;
  *(_QWORD *)(v3 + 696) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E40178()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *);
  unint64_t *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v1 = sub_249F1EEC0();
  v2 = swift_task_alloc();
  sub_249F1EEF0();
  v3 = sub_249F1F898();
  if ((sub_249F1F958() & 1) != 0)
  {
    v4 = sub_249F1EEE4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x24BEE7808] && v7 == *MEMORY[0x24BEE7808])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      v8 = "";
    }
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
    v13 = *(_QWORD *)(v0 + 528);
    swift_task_dealloc();
    v14 = swift_task_alloc();
    v12(v14, v2, v13);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v1, v3, v16, "generateTonedImages", v8, v15, 2u);
    MEMORY[0x24BD06618](v15, -1, -1);

    v11(v2, v13);
    v11(v14, v13);
    swift_task_dealloc();
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v10 = *(_QWORD *)(v0 + 528);

    v9(v2, v10);
  }
  v17 = *(_QWORD *)(v0 + 648);
  swift_task_dealloc();
  if (v17)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 672) + 16);
    if (v18)
    {
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = *(void (**)(uint64_t *))(v0 + 632);
        swift_bridgeObjectRetain();
        v21 = (unint64_t *)(v18 + 40);
        do
        {
          if (*(_QWORD *)(v0 + 632))
          {
            v22 = *v21;
            LOBYTE(v64) = *((_BYTE *)v21 - 8);
            v65 = v22;
            swift_bridgeObjectRetain();
            v20(&v64);
            swift_bridgeObjectRelease();
          }
          v21 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
      }
    }
  }
  v23 = (_QWORD *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 488));
  v24 = v23[3];
  v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v63 = v0 + 16;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_19:
    v27 = *(_QWORD *)(v0 + 656);
    v28 = *(_QWORD *)(v0 + 632);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v30 = *(_QWORD *)(v0 + 552);
    v31 = *(_QWORD *)(v0 + 528);
    v32 = *(void **)(v0 + 496);
    v60 = *(_QWORD *)(v0 + 416);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    sub_249DC0A2C(v28);
    sub_249DE6E98(v63);
    v29(v27, v31);
    sub_249DC05A8(v60, type metadata accessor for GenerationRecipe);
    v29(v30, v31);
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v26 = *(_QWORD *)(v0 + 696);
  sub_249F1F670();
  if (v26)
    goto LABEL_19;
  v34 = *(_QWORD *)(v0 + 688);
  v35 = *(_QWORD *)(v34 + 16);
  if (v35 != 1)
  {
    if (v35)
    {
      v48 = *(_QWORD *)(v0 + 656);
      v59 = *(_QWORD *)(v0 + 632);
      v49 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
      v50 = *(_QWORD *)(v0 + 552);
      v51 = *(_QWORD *)(v0 + 528);
      v52 = *(void **)(v0 + 496);
      v62 = *(_QWORD *)(v0 + 416);
      v64 = 0;
      v65 = 0xE000000000000000;
      sub_249F1FA84();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 264) = v35;
      v53 = sub_249F1FE08();
      v55 = v54;
      swift_bridgeObjectRelease();
      v64 = v53;
      v65 = v55;
      sub_249F1F460();
      v57 = v64;
      v56 = v65;
      sub_249E2FA30();
      swift_allocError();
      *v58 = v57;
      v58[1] = v56;
      swift_willThrow();

      swift_release();
      swift_release();
      swift_release();
      sub_249DC0A2C(v59);
      sub_249DE6E98(v63);
      v49(v48, v51);
      sub_249DC05A8(v62, type metadata accessor for GenerationRecipe);
      v49(v50, v51);
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 656);
      v37 = *(_QWORD *)(v0 + 632);
      v38 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
      v39 = *(_QWORD *)(v0 + 552);
      v40 = *(_QWORD *)(v0 + 528);
      v41 = *(void **)(v0 + 496);
      v61 = *(_QWORD *)(v0 + 416);
      swift_bridgeObjectRelease();
      sub_249E2FA30();
      swift_allocError();
      *v42 = 0xD000000000000015;
      v42[1] = 0x8000000249F350E0;
      swift_willThrow();

      swift_release();
      swift_release();
      swift_release();
      sub_249DC0A2C(v37);
      sub_249DE6E98(v63);
      v38(v36, v40);
      sub_249DC05A8(v61, type metadata accessor for GenerationRecipe);
      v38(v39, v40);
    }
    goto LABEL_20;
  }
  v43 = *(_QWORD *)(v0 + 456);
  v44 = *(_QWORD *)(v0 + 464);
  v45 = *(_QWORD *)(v0 + 376);
  sub_249DC091C(v34 + ((*(unsigned __int8 *)(v0 + 244) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 244)), v45, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v43);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_249DE6ECC(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 472));
    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 704) = v46;
    *v46 = v0;
    v46[1] = sub_249E40898;
    v47 = *(_QWORD *)(v0 + 312);
    v46[6] = *(_QWORD *)(v0 + 472);
    v46[7] = v47;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_249E40898(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 712) = a1;
  *(_QWORD *)(v3 + 720) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E40908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, _QWORD **);
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  uint64_t v42;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 712) + 16))
  {
    v1 = *(_QWORD *)(v0 + 720);
    v40 = *(_QWORD **)(v0 + 712);
    swift_bridgeObjectRetain();
    sub_249E3D748(&v40);
    if (v1)
      return swift_release();
    v39 = v0 + 16;
    swift_bridgeObjectRelease();
    v11 = v40;
    if (qword_2578D5D40 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 328);
    v13 = sub_249F1EF38();
    __swift_project_value_buffer(v13, (uint64_t)qword_2578FF378);
    sub_249D9E1E4(v12, v0 + 80);
    swift_bridgeObjectRetain_n();
    v14 = sub_249F1EF20();
    v15 = sub_249F1F82C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 368);
    v38 = v11;
    if (v16)
    {
      v18 = *(_QWORD *)(v0 + 360);
      v19 = swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      v40 = v20;
      *(_DWORD *)v19 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 272) = sub_249E68CA8(v18, v17, (uint64_t *)&v40);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
      v21 = sub_249F1FE08();
      *(_QWORD *)(v0 + 280) = sub_249E68CA8(v21, v22, (uint64_t *)&v40);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 80);
      _os_log_impl(&dword_249D98000, v14, v15, "%s generated emoji with %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v20, -1, -1);
      MEMORY[0x24BD06618](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    }

    v23 = *(void (**)(uint64_t, _QWORD **))(v0 + 336);
    v24 = *(_QWORD *)(v0 + 656);
    v34 = *(_QWORD *)(v0 + 632);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v26 = *(_QWORD *)(v0 + 552);
    v27 = *(_QWORD *)(v0 + 528);
    v28 = *(void **)(v0 + 496);
    v35 = *(_QWORD *)(v0 + 472);
    v37 = *(_QWORD *)(v0 + 416);
    if (v23)
    {
      v32 = *(_QWORD *)(v0 + 552);
      v29 = *(_QWORD *)(v0 + 312);
      v31 = *(_QWORD *)(v0 + 656);
      v30 = v38;
      v40 = v38;
      v41 = xmmword_249F292B0;
      v42 = 0;
      swift_retain();
      v23(v29, &v40);

      swift_release();
      swift_release();
      swift_release();
      sub_249DC0A2C(v34);
      swift_release();
      sub_249DC05A8(v35, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DE6E98(v39);
      v25(v31, v27);
      sub_249DC05A8(v37, type metadata accessor for GenerationRecipe);
      v25(v32, v27);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();

      sub_249DC0A2C(v34);
      sub_249DC05A8(v35, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DE6E98(v39);
      v25(v24, v27);
      sub_249DC05A8(v37, type metadata accessor for GenerationRecipe);
      v25(v26, v27);
      v30 = v38;
    }
    **(_QWORD **)(v0 + 304) = v30;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 656);
    v33 = *(_QWORD *)(v0 + 632);
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v5 = *(_QWORD *)(v0 + 552);
    v6 = *(_QWORD *)(v0 + 528);
    v7 = *(void **)(v0 + 496);
    v8 = *(_QWORD *)(v0 + 472);
    v36 = *(_QWORD *)(v0 + 416);
    swift_bridgeObjectRelease();
    sub_249E2FA30();
    swift_allocError();
    *v9 = 0xD000000000000027;
    v9[1] = 0x8000000249F350B0;
    swift_willThrow();

    swift_release();
    swift_release();
    swift_release();
    sub_249DC0A2C(v33);
    sub_249DC05A8(v8, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DE6E98(v0 + 16);
    v4(v3, v6);
    sub_249DC05A8(v36, type metadata accessor for GenerationRecipe);
    v4(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

uint64_t sub_249E40ED4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 496);
  swift_endAccess();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E40F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 528);
  v4 = *(void **)(v0 + 496);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E41060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
  v4 = *(_QWORD *)(v0 + 552);
  v5 = *(_QWORD *)(v0 + 528);
  v6 = *(void **)(v0 + 496);
  v8 = *(_QWORD *)(v0 + 416);
  swift_release();
  swift_release();
  swift_release();

  sub_249DC0A2C(v2);
  sub_249DE6E98(v0 + 16);
  v3(v1, v5);
  sub_249DC05A8(v8, type metadata accessor for GenerationRecipe);
  v3(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4119C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v9 = *(_QWORD *)(v0 + 656);
  v1 = *(_QWORD *)(v0 + 632);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
  v3 = *(_QWORD *)(v0 + 552);
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(void **)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 416);
  swift_release();
  swift_release();
  swift_release();

  sub_249DC0A2C(v1);
  sub_249DC05A8(v6, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DE6E98(v0 + 16);
  v2(v9, v4);
  sub_249DC05A8(v8, type metadata accessor for GenerationRecipe);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E412F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return swift_task_switch();
}

id sub_249E4130C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id result;
  double v12;
  double v13;
  size_t Width;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGImage *v21;
  size_t Height;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56)
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__strikeSizes);
  if (!v1)
  {
    v17 = *(_QWORD *)(v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CC0);
    v18 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratedImage() - 8) + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_249F21770;
    sub_249DC091C(v17, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
  }
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v30 = MEMORY[0x24BEE4AF8];
    sub_249DB6860(0, v2, 0);
    v3 = v30;
    v4 = (unint64_t *)(v1 + 32);
    v5 = *(_QWORD *)(v30 + 16);
    do
    {
      v7 = *v4++;
      v6 = v7;
      v31 = v3;
      v8 = *(_QWORD *)(v3 + 24);
      if (v5 >= v8 >> 1)
      {
        sub_249DB6860(v8 > 1, v5 + 1, 1);
        v3 = v31;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      *(int64x2_t *)(v3 + 16 * v5++ + 32) = vdupq_n_s64(v6);
      --v2;
    }
    while (v2);
  }
  v9 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 40) = v3;
  v10 = *(void **)v9;
  if (!*(_BYTE *)(v9 + 8))
  {
    v21 = v10;
    Width = CGImageGetWidth(v21);
    Height = CGImageGetHeight(v21);
LABEL_21:
    v16 = Height;

    goto LABEL_22;
  }
  if (*(_BYTE *)(v9 + 8) != 1)
  {
    v21 = v10;
    Width = CVPixelBufferGetWidth(v21);
    Height = CVPixelBufferGetHeight(v21);
    goto LABEL_21;
  }
  result = objc_msgSend(v10, sel_extent);
  if (v12 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((*(_QWORD *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_25;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v13 < 9.22337204e18)
  {
    Width = (uint64_t)v12;
    v16 = (uint64_t)v13;
LABEL_22:
    v23 = *(_QWORD *)(v0 + 56);
    sub_249E3C474(0, 0, Width, v16);
    v32 = *(_BYTE *)(v23
                   + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__strikeSizesScaler);
    v24 = v23 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__definitionSession;
    swift_beginAccess();
    v25 = *(id *)(v24 + *(int *)(type metadata accessor for DefinitionSession() + 44));
    sub_249E43578(&v32);
    v27 = v26;
    *(_QWORD *)(v0 + 64) = v26;

    v28 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 72) = v28;
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v29;
    *v29 = v0;
    v29[1] = sub_249E41618;
    return (id)sub_249E25118(v28, v27);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249E41618(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_249E4169C()
{
  uint64_t v0;
  size_t v1;

  v1 = sub_249DBDED8(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(size_t))(v0 + 8))(v1);
}

uint64_t sub_249E416E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall KeyboardEmojiGenerator.ImageToningTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t KeyboardEmojiGenerator.ImageToningTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return 0xD000000000000010;
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generationID;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KeyboardEmojiGenerator.ImageToningTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generationID;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_249E419A4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249E419D8();
  a1[2] = sub_249E41A1C();
  result = sub_249E2FA30();
  a1[3] = result;
  return result;
}

unint64_t sub_249E419D8()
{
  unint64_t result;

  result = qword_2578DA438;
  if (!qword_2578DA438)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.ImageToningTask.Error, &type metadata for KeyboardEmojiGenerator.ImageToningTask.Error);
    atomic_store(result, (unint64_t *)&qword_2578DA438);
  }
  return result;
}

unint64_t sub_249E41A1C()
{
  unint64_t result;

  result = qword_2578DA440;
  if (!qword_2578DA440)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.ImageToningTask.Error, &type metadata for KeyboardEmojiGenerator.ImageToningTask.Error);
    atomic_store(result, (unint64_t *)&qword_2578DA440);
  }
  return result;
}

uint64_t sub_249E41A64@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__generationID;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E41AAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E41B00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator15ImageToningTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249E41B50()
{
  return KeyboardEmojiGenerator.ImageToningTask.description.getter();
}

uint64_t sub_249E41B70()
{
  return type metadata accessor for KeyboardEmojiGenerator.ImageToningTask();
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.ImageToningTask()
{
  uint64_t result;

  result = qword_2578DA480;
  if (!qword_2578DA480)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E41BB4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for KeyboardEmojiGenerator.ImageToningTask()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.ImageToningTask.Error()
{
  return &type metadata for KeyboardEmojiGenerator.ImageToningTask.Error;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.ImageToningTask.Progress()
{
  return &type metadata for KeyboardEmojiGenerator.ImageToningTask.Progress;
}

ValueMetadata *_s15ImageToningTaskC5ErrorO10CodingKeysOMa()
{
  return &_s15ImageToningTaskC5ErrorO10CodingKeysON;
}

uint64_t _s15ImageToningTaskC5ErrorO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E41CF0 + 4 * byte_249F292C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E41D10 + 4 * byte_249F292C5[v4]))();
}

_BYTE *sub_249E41CF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E41D10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E41D18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E41D20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E41D28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E41D30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15ImageToningTaskC5ErrorO29UnexpectedConditionCodingKeysOMa()
{
  return &_s15ImageToningTaskC5ErrorO29UnexpectedConditionCodingKeysON;
}

unint64_t sub_249E41D50()
{
  unint64_t result;

  result = qword_2578DA538;
  if (!qword_2578DA538)
  {
    result = MEMORY[0x24BD06528](&unk_249F295C0, &_s15ImageToningTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA538);
  }
  return result;
}

unint64_t sub_249E41D98()
{
  unint64_t result;

  result = qword_2578DA540;
  if (!qword_2578DA540)
  {
    result = MEMORY[0x24BD06528](&unk_249F29678, &_s15ImageToningTaskC5ErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA540);
  }
  return result;
}

unint64_t sub_249E41DE0()
{
  unint64_t result;

  result = qword_2578DA548;
  if (!qword_2578DA548)
  {
    result = MEMORY[0x24BD06528](&unk_249F29530, &_s15ImageToningTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA548);
  }
  return result;
}

unint64_t sub_249E41E28()
{
  unint64_t result;

  result = qword_2578DA550;
  if (!qword_2578DA550)
  {
    result = MEMORY[0x24BD06528](&unk_249F29558, &_s15ImageToningTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA550);
  }
  return result;
}

unint64_t sub_249E41E70()
{
  unint64_t result;

  result = qword_2578DA558;
  if (!qword_2578DA558)
  {
    result = MEMORY[0x24BD06528](&unk_249F295E8, &_s15ImageToningTaskC5ErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578DA558);
  }
  return result;
}

unint64_t sub_249E41EB8()
{
  unint64_t result;

  result = qword_2578DA560;
  if (!qword_2578DA560)
  {
    result = MEMORY[0x24BD06528](&unk_249F29610, &_s15ImageToningTaskC5ErrorO10CodingKeysON);
    atomic_store(result, &qword_2578DA560);
  }
  return result;
}

uint64_t sub_249E41EFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  double v67;
  double v68;
  int64_t Width;
  uint64_t v71;
  CGImage *v72;
  size_t Height;
  void *v74;
  double v75;
  double v76;
  int64_t v77;
  uint64_t v78;
  BOOL v79;
  CGImage *v80;
  size_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  unint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v3 = type metadata accessor for GeneratedImage();
  v155 = *(_QWORD *)(v3 - 8);
  v156 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v153 = (uint64_t)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v162 = (uint64_t)&v144 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v165 = (uint64_t)&v144 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v163 = (uint64_t)&v144 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v144 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v144 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v144 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v144 - v21;
  v158 = a1;
  v23 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v23)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      if (v23)
        return sub_249E42BC8(0, v23, 1, v158);
      return result;
    }
    goto LABEL_196;
  }
  if (v23 >= 0)
    v25 = v23;
  else
    v25 = v23 + 1;
  if (v23 < -1)
  {
LABEL_205:
    result = sub_249F1FBC8();
    __break(1u);
    return result;
  }
  v147 = result;
  v157 = v1;
  if (v23 < 2)
  {
    v29 = (char *)MEMORY[0x24BEE4AF8];
    v154 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
    v148 = MEMORY[0x24BEE4AF8];
    if (v23 != 1)
    {
      v86 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      goto LABEL_150;
    }
    v145 = v22;
    v146 = v20;
    v151 = v17;
    v152 = v14;
  }
  else
  {
    v145 = v22;
    v146 = v20;
    v151 = v17;
    v152 = v14;
    v26 = v25 >> 1;
    v27 = sub_249F1F58C();
    *(_QWORD *)(v27 + 16) = v26;
    v28 = *(unsigned __int8 *)(v155 + 80);
    v148 = v27;
    v154 = v27 + ((v28 + 32) & ~v28);
  }
  v30 = 0;
  v29 = (char *)MEMORY[0x24BEE4AF8];
  do
  {
    v31 = v30;
    v32 = v30 + 1;
    if (v30 + 1 >= v23)
    {
      ++v30;
LABEL_36:
      if (v30 >= v23)
        goto LABEL_98;
      goto LABEL_37;
    }
    v33 = *v158;
    v34 = *(_QWORD *)(v155 + 72);
    v35 = (uint64_t)v145;
    sub_249DC091C(*v158 + v34 * v32, (uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v159 = v33;
    v36 = v33 + v34 * v31;
    v37 = (uint64_t)v146;
    sub_249DC091C(v36, (uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v38 = v157;
    v39 = sub_249E2C86C(v35, v37);
    v157 = v38;
    if (v38)
    {
      sub_249DC05A8(v37, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8(v35, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      goto LABEL_164;
    }
    v40 = v39;
    sub_249DC05A8(v37, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC05A8(v35, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v30 = v31 + 2;
    if (v31 + 2 >= v23)
      goto LABEL_22;
    v161 = v23;
    v144 = v29;
    v164 = v34 * v32;
    v41 = v159;
    v42 = v31 + 2;
    v160 = v34 * (v31 + 2);
    do
    {
      v43 = (uint64_t)v151;
      sub_249DC091C(v41 + v160, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v44 = (uint64_t)v152;
      sub_249DC091C(v41 + v164, (uint64_t)v152, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v45 = v157;
      v46 = sub_249E2C86C(v43, v44);
      v157 = v45;
      if (v45)
      {
        sub_249DC05A8(v44, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        sub_249DC05A8(v43, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        goto LABEL_164;
      }
      v47 = v46;
      sub_249DC05A8(v44, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8(v43, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if (((v40 ^ v47) & 1) != 0)
      {
        v29 = v144;
        v30 = v42;
        v23 = v161;
        if ((v40 & 1) != 0)
          goto LABEL_23;
        goto LABEL_36;
      }
      v41 += v34;
      ++v42;
    }
    while (v161 != v42);
    v23 = v161;
    v30 = v161;
    v29 = v144;
LABEL_22:
    if ((v40 & 1) == 0)
      goto LABEL_36;
LABEL_23:
    if (v30 < v31)
      goto LABEL_200;
    if (v31 >= v30)
      goto LABEL_36;
    v161 = v23;
    v144 = v29;
    v48 = 0;
    v49 = v34 * (v30 - 1);
    v50 = v30 * v34;
    v51 = v31;
    v150 = v31;
    v52 = v31 * v34;
    do
    {
      if (v51 != v30 + v48 - 1)
      {
        v54 = v159;
        if (!v159)
          goto LABEL_203;
        v55 = v30;
        v56 = v159 + v52;
        v164 = v159 + v49;
        sub_249DE6ECC(v159 + v52, v153);
        if (v52 < v49 || v56 >= v54 + v50)
        {
          v53 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v53 = v164;
          if (v52 != v49)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_249DE6ECC(v153, v53);
        v30 = v55;
      }
      ++v51;
      --v48;
      v49 -= v34;
      v50 -= v34;
      v52 += v34;
    }
    while (v51 < v30 + v48);
    v29 = v144;
    v31 = v150;
    v23 = v161;
    if (v30 >= v161)
      goto LABEL_98;
LABEL_37:
    if (__OFSUB__(v30, v31))
      goto LABEL_197;
    if (v30 - v31 >= v147)
      goto LABEL_98;
    if (__OFADD__(v31, v147))
      goto LABEL_198;
    if (v31 + v147 >= v23)
      v57 = v23;
    else
      v57 = v31 + v147;
    if (v57 < v31)
      goto LABEL_199;
    if (v30 == v57)
      goto LABEL_98;
    v149 = v57;
    v150 = v31;
    v144 = v29;
    v58 = *(_QWORD *)(v155 + 72);
    v59 = v58 * (v30 - 1);
    v159 = v58;
    v164 = v30 * v58;
    v60 = v158;
    while (2)
    {
      v62 = 0;
      v63 = v150;
      v160 = v59;
      v161 = v30;
      while (2)
      {
        v64 = *v60;
        v65 = v163;
        sub_249DC091C(v164 + v62 + *v60, v163, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        sub_249DC091C(v59 + v62 + v64, v165, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        v66 = *(void **)v65;
        if (!*(_BYTE *)(v65 + 8))
        {
          v72 = v66;
          Width = CGImageGetWidth(v72);
          Height = CGImageGetHeight(v72);
LABEL_63:
          v71 = Height;

          goto LABEL_64;
        }
        if (*(_BYTE *)(v65 + 8) != 1)
        {
          v72 = v66;
          Width = CVPixelBufferGetWidth(v72);
          Height = CVPixelBufferGetHeight(v72);
          goto LABEL_63;
        }
        objc_msgSend(v66, sel_extent);
        if (v67 <= -9.22337204e18)
        {
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
          goto LABEL_205;
        }
        if (v67 >= 9.22337204e18)
          goto LABEL_167;
        if ((*(_QWORD *)&v67 & 0x7FF0000000000000) == 0x7FF0000000000000
          || (*(_QWORD *)&v68 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_169;
        }
        if (v68 <= -9.22337204e18)
          goto LABEL_171;
        if (v68 >= 9.22337204e18)
          goto LABEL_173;
        Width = (uint64_t)v67;
        v71 = (uint64_t)v68;
LABEL_64:
        v74 = *(void **)v165;
        if (!*(_BYTE *)(v165 + 8))
        {
          v80 = v74;
          v77 = CGImageGetWidth(v80);
          v81 = CGImageGetHeight(v80);
          goto LABEL_78;
        }
        if (*(_BYTE *)(v165 + 8) != 1)
        {
          v80 = v74;
          v77 = CVPixelBufferGetWidth(v80);
          v81 = CVPixelBufferGetHeight(v80);
LABEL_78:
          v78 = v81;

          v60 = v158;
          if (v78 >= v77)
            goto LABEL_73;
LABEL_79:
          if (v71 >= Width)
          {
            if (v78 >= Width)
            {
              v79 = Width < v78;
              Width = v71;
              if (v79)
                break;
              goto LABEL_90;
            }
          }
          else if (v78 >= v71)
          {
            if (v71 < v78)
              break;
            goto LABEL_90;
          }
          goto LABEL_91;
        }
        objc_msgSend(v74, sel_extent);
        if (v75 <= -9.22337204e18)
          goto LABEL_168;
        if (v75 >= 9.22337204e18)
          goto LABEL_170;
        if ((*(_QWORD *)&v75 & 0x7FF0000000000000) == 0x7FF0000000000000
          || (*(_QWORD *)&v76 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_172;
        }
        if (v76 <= -9.22337204e18)
          goto LABEL_174;
        if (v76 >= 9.22337204e18)
          goto LABEL_175;
        v77 = (uint64_t)v75;
        v78 = (uint64_t)v76;
        if ((uint64_t)v76 < (uint64_t)v75)
          goto LABEL_79;
LABEL_73:
        if (v71 >= Width)
        {
          if (v77 >= Width)
          {
            v79 = Width < v77;
            Width = v71;
            goto LABEL_85;
          }
          goto LABEL_91;
        }
        if (v77 < v71)
          goto LABEL_91;
        v79 = v71 < v77;
LABEL_85:
        v77 = v78;
        if (v79)
          break;
LABEL_90:
        if (v77 < Width)
        {
LABEL_91:
          sub_249DC05A8(v165, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
          sub_249DC05A8(v163, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
          v82 = *v60;
          if (!*v60)
            goto LABEL_201;
          v59 = v160;
          v83 = v82 + v160 + v62;
          sub_249DE6ECC(v82 + v164 + v62, v162);
          swift_arrayInitWithTakeFrontToBack();
          sub_249DE6ECC(v162, v83);
          v62 -= v159;
          ++v63;
          v61 = v161;
          if (v161 == v63)
            goto LABEL_47;
          continue;
        }
        break;
      }
      sub_249DC05A8(v165, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8(v163, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v59 = v160;
      v61 = v161;
LABEL_47:
      v30 = v61 + 1;
      v59 += v159;
      v164 += v159;
      if (v30 != v149)
        continue;
      break;
    }
    v30 = v149;
    v29 = v144;
    v31 = v150;
LABEL_98:
    if (v30 < v31)
      goto LABEL_195;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_249E74C00(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
    v85 = *((_QWORD *)v29 + 2);
    v84 = *((_QWORD *)v29 + 3);
    v86 = v85 + 1;
    if (v85 >= v84 >> 1)
      v29 = sub_249E74C00((char *)(v84 > 1), v85 + 1, 1, v29);
    *((_QWORD *)v29 + 2) = v86;
    v87 = v29 + 32;
    v88 = &v29[16 * v85 + 32];
    *(_QWORD *)v88 = v31;
    *((_QWORD *)v88 + 1) = v30;
    if (v85)
    {
      while (1)
      {
        v89 = v86 - 1;
        if (v86 >= 4)
        {
          v94 = &v87[16 * v86];
          v95 = *((_QWORD *)v94 - 8);
          v96 = *((_QWORD *)v94 - 7);
          v100 = __OFSUB__(v96, v95);
          v97 = v96 - v95;
          if (v100)
            goto LABEL_180;
          v99 = *((_QWORD *)v94 - 6);
          v98 = *((_QWORD *)v94 - 5);
          v100 = __OFSUB__(v98, v99);
          v92 = v98 - v99;
          v93 = v100;
          if (v100)
            goto LABEL_181;
          v101 = v86 - 2;
          v102 = &v87[16 * v86 - 32];
          v104 = *(_QWORD *)v102;
          v103 = *((_QWORD *)v102 + 1);
          v100 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          if (v100)
            goto LABEL_183;
          v100 = __OFADD__(v92, v105);
          v106 = v92 + v105;
          if (v100)
            goto LABEL_186;
          if (v106 >= v97)
          {
            v124 = &v87[16 * v89];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v100 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v100)
              goto LABEL_190;
            v117 = v92 < v127;
            goto LABEL_135;
          }
        }
        else
        {
          if (v86 != 3)
          {
            v118 = *((_QWORD *)v29 + 4);
            v119 = *((_QWORD *)v29 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
            goto LABEL_129;
          }
          v91 = *((_QWORD *)v29 + 4);
          v90 = *((_QWORD *)v29 + 5);
          v100 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          v93 = v100;
        }
        if ((v93 & 1) != 0)
          goto LABEL_182;
        v101 = v86 - 2;
        v107 = &v87[16 * v86 - 32];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v110 = __OFSUB__(v108, v109);
        v111 = v108 - v109;
        v112 = v110;
        if (v110)
          goto LABEL_185;
        v113 = &v87[16 * v89];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v100 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v100)
          goto LABEL_188;
        if (__OFADD__(v111, v116))
          goto LABEL_189;
        if (v111 + v116 >= v92)
        {
          v117 = v92 < v116;
LABEL_135:
          if (v117)
            v89 = v101;
          goto LABEL_137;
        }
LABEL_129:
        if ((v112 & 1) != 0)
          goto LABEL_184;
        v120 = &v87[16 * v89];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v100 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v100)
          goto LABEL_187;
        if (v123 < v111)
          goto LABEL_146;
LABEL_137:
        v128 = v30;
        v129 = v89 - 1;
        if (v89 - 1 >= v86)
          goto LABEL_176;
        if (!*v158)
          goto LABEL_202;
        v130 = v29;
        v131 = &v87[16 * v129];
        v132 = *(_QWORD *)v131;
        v133 = &v87[16 * v89];
        v134 = *((_QWORD *)v133 + 1);
        v135 = v157;
        sub_249E42E10(*v158 + *(_QWORD *)(v155 + 72) * *(_QWORD *)v131, *v158 + *(_QWORD *)(v155 + 72) * *(_QWORD *)v133, *v158 + *(_QWORD *)(v155 + 72) * v134, v154);
        v157 = v135;
        if (v135)
          goto LABEL_164;
        if (v134 < v132)
          goto LABEL_177;
        if (v89 > *((_QWORD *)v130 + 2))
          goto LABEL_178;
        *(_QWORD *)v131 = v132;
        *(_QWORD *)&v87[16 * v129 + 8] = v134;
        v136 = *((_QWORD *)v130 + 2);
        if (v89 >= v136)
          goto LABEL_179;
        v29 = v130;
        v86 = v136 - 1;
        memmove(&v87[16 * v89], v133 + 16, 16 * (v136 - 1 - v89));
        *((_QWORD *)v130 + 2) = v136 - 1;
        v79 = v136 > 2;
        v30 = v128;
        if (!v79)
          goto LABEL_146;
      }
    }
    v86 = 1;
LABEL_146:
    v23 = v158[1];
  }
  while (v30 < v23);
LABEL_150:
  if (v86 >= 2)
  {
    v137 = *v158;
    do
    {
      v138 = v86 - 2;
      if (v86 < 2)
        goto LABEL_191;
      if (!v137)
        goto LABEL_204;
      v139 = *(_QWORD *)&v29[16 * v138 + 32];
      v140 = *(_QWORD *)&v29[16 * v86 + 24];
      v141 = v157;
      sub_249E42E10(v137 + *(_QWORD *)(v155 + 72) * v139, v137 + *(_QWORD *)(v155 + 72) * *(_QWORD *)&v29[16 * v86 + 16], v137 + *(_QWORD *)(v155 + 72) * v140, v154);
      v157 = v141;
      if (v141)
        break;
      if (v140 < v139)
        goto LABEL_192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_249E750A8((uint64_t)v29);
      if (v138 >= *((_QWORD *)v29 + 2))
        goto LABEL_193;
      v142 = &v29[16 * v138 + 32];
      *(_QWORD *)v142 = v139;
      *((_QWORD *)v142 + 1) = v140;
      v143 = *((_QWORD *)v29 + 2);
      if (v86 > v143)
        goto LABEL_194;
      memmove(&v29[16 * v86 + 16], &v29[16 * v86 + 32], 16 * (v143 - v86));
      *((_QWORD *)v29 + 2) = v143 - 1;
      v86 = v143 - 1;
    }
    while (v143 > 2);
  }
LABEL_164:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v148 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E42BC8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v29 = type metadata accessor for GeneratedImage();
  v8 = MEMORY[0x24BDAC7A8](v29);
  v35 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v33 = (uint64_t)&v27 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v32 = (uint64_t)&v27 - v14;
  v28 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v13 + 72);
    v16 = v15 * (a3 - 1);
    v30 = v15;
    v36 = v15 * a3;
    v27 = a1;
LABEL_4:
    v17 = 0;
    v31 = a3;
    while (1)
    {
      v34 = a1;
      v19 = a4;
      v20 = *a4;
      v21 = v32;
      sub_249DC091C(v36 + v17 + *a4, v32, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v22 = v33;
      sub_249DC091C(v16 + v17 + v20, v33, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v23 = v37;
      v24 = sub_249E2C86C(v21, v22);
      sub_249DC05A8(v22, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      result = sub_249DC05A8(v21, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v37 = v23;
      if (v23)
        break;
      if ((v24 & 1) == 0)
      {
        v18 = v31;
        a4 = v19;
LABEL_11:
        a3 = v18 + 1;
        v16 += v30;
        v36 += v30;
        a1 = v27;
        if (a3 != v28)
          goto LABEL_4;
        return result;
      }
      v25 = *v19;
      if (!*v19)
      {
        __break(1u);
        return result;
      }
      a4 = v19;
      v26 = v25 + v16 + v17;
      sub_249DE6ECC(v25 + v36 + v17, v35);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_249DE6ECC(v35, v26);
      v18 = v31;
      v17 -= v30;
      a1 = v34 + 1;
      if (v31 == v34 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_249E42E10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v5 = v4;
  v51 = type metadata accessor for GeneratedImage();
  v10 = MEMORY[0x24BDAC7A8](v51);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v45 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v18 = (char *)&v45 - v17;
  v52 = *(_QWORD *)(v19 + 72);
  if (!v52)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_68;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_69;
  v21 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v22 = v20 / v52;
  if (v21 >= v20 / v52)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v52;
      v18 = v16;
      v49 = (char *)v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v31 = a4 + v24;
      v53 = a4 + v24;
      v55 = a2;
      if (v24 < 1 || a1 >= a2)
        goto LABEL_65;
      v46 = a1;
      v33 = -v52;
      v47 = -v52;
      v48 = a4;
      while (1)
      {
        sub_249DC091C(v31 + v33, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        v34 = a2;
        v35 = a2 + v33;
        v36 = a2 + v33;
        v37 = v33;
        v14 = v49;
        sub_249DC091C(v36, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        v38 = sub_249E2C86C((uint64_t)v18, (uint64_t)v14);
        if (v5)
          goto LABEL_64;
        v39 = v38;
        v52 = 0;
        v50 = a3 + v37;
        sub_249DC05A8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        sub_249DC05A8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        if ((v39 & 1) != 0)
        {
          v40 = a3;
          v25 = a3 >= v34;
          a3 = v50;
          if (v25 && v50 < v34)
          {
            v41 = v48;
            if (v40 != v34)
              swift_arrayInitWithTakeBackToFront();
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            v41 = v48;
          }
          v33 = v47;
          v55 += v47;
        }
        else
        {
          v42 = v53;
          v53 += v37;
          v43 = a3;
          v25 = a3 >= v42;
          a3 = v50;
          if (v25 && v50 < v42)
          {
            v41 = v48;
            if (v43 != v42)
              swift_arrayInitWithTakeBackToFront();
            v35 = v34;
            v33 = v47;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            v35 = v34;
            v33 = v47;
            v41 = v48;
          }
        }
        v31 = v53;
        if (v53 > v41)
        {
          a2 = v35;
          v5 = v52;
          if (v35 > v46)
            continue;
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v52;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v50 = a4 + v23;
    v53 = a4 + v23;
    v25 = v23 < 1 || a2 >= a3;
    if (v25)
      goto LABEL_65;
    while (1)
    {
      sub_249DC091C(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC091C(a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v26 = sub_249E2C86C((uint64_t)v18, (uint64_t)v14);
      if (v4)
        break;
      v27 = v26;
      sub_249DC05A8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v28 = v55;
      if ((v27 & 1) != 0)
      {
        v29 = a2 + v52;
        if (v55 < a2 || v55 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v55 == a2)
        {
          v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v30 = v54 + v52;
        if (v55 < v54 || v55 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v55 != v54)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v54 = v30;
        v29 = a2;
      }
      v55 = v28 + v52;
      a4 = v54;
      if (v54 < v50)
      {
        a2 = v29;
        if (v29 < a3)
          continue;
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_249DC05A8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC05A8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
LABEL_65:
    sub_249E74EF4(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_70:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E4338C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_249DAFCF8;
  return sub_249E3EE7C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_249E4342C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E43458(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD *);
  uint64_t v5;
  _QWORD v7[4];

  v4 = *(uint64_t (**)(uint64_t, _QWORD *))(v3 + 16);
  v5 = *(_QWORD *)(v3 + 32);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3 & 1;
  v7[3] = 0;
  return v4(v5, v7);
}

uint64_t sub_249E4349C()
{
  uint64_t v0;

  v0 = sub_249F1EF38();
  __swift_allocate_value_buffer(v0, qword_2578FF378);
  __swift_project_value_buffer(v0, (uint64_t)qword_2578FF378);
  return sub_249F1EF2C();
}

uint64_t KeyboardEmojiGenerator.imageGeneratorIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249E43548()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_249E43578(unsigned __int8 *a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  __int128 v5;
  ValueMetadata *v6;
  _UNKNOWN **v7;

  v1 = *a1;
  v2 = sub_249DB2C7C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_249DB2C7C((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v6 = &type metadata for NoOpImageScaler;
  v7 = &off_251B52178;
  v2[2] = v4 + 1;
  sub_249D9E174(&v5, (uint64_t)&v2[5 * v4 + 4]);
  __asm { BR              X9 }
}

void *static Gender.allCases.getter()
{
  return &unk_251B4DB58;
}

uint64_t Gender.rawValue.getter(char a1)
{
  if (!a1)
    return 7233901;
  if (a1 == 1)
    return 0x6E616D6F77;
  return 0x6E79676F72646E61;
}

uint64_t sub_249E43848()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249E438E4()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E4395C()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249E439F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s16VisualGeneration6GenderO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_249E43A20(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6E616D6F77;
  if (v2 != 1)
  {
    v5 = 0x6E79676F72646E61;
    v4 = 0xEB0000000073756FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 7233901;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_249E43A7C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B4DB80;
}

uint64_t sub_249E43A8C(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE500000000000000;
  v4 = 0x6E616D6F77;
  if (v2 != 1)
  {
    v4 = 0x6E79676F72646E61;
    v3 = 0xEB0000000073756FLL;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 7233901;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE300000000000000;
  v7 = 0xE500000000000000;
  v8 = 0x6E616D6F77;
  if (*a2 != 1)
  {
    v8 = 0x6E79676F72646E61;
    v7 = 0xEB0000000073756FLL;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 7233901;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE300000000000000;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_249E43B90()
{
  sub_249E43DE4();
  return sub_249F1F514();
}

uint64_t sub_249E43BEC()
{
  sub_249E43DE4();
  return sub_249F1F4FC();
}

uint64_t _s16VisualGeneration6GenderO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_249F1FC4C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_249E43C84()
{
  unint64_t result;

  result = qword_2578DA588;
  if (!qword_2578DA588)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Gender, &type metadata for Gender);
    atomic_store(result, (unint64_t *)&qword_2578DA588);
  }
  return result;
}

unint64_t sub_249E43CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DA590;
  if (!qword_2578DA590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DA598);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578DA590);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Gender(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E43D64 + 4 * byte_249F29765[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E43D98 + 4 * byte_249F29760[v4]))();
}

uint64_t sub_249E43D98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E43DA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E43DA8);
  return result;
}

uint64_t sub_249E43DB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E43DBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E43DC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E43DC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Gender()
{
  return &type metadata for Gender;
}

unint64_t sub_249E43DE4()
{
  unint64_t result;

  result = qword_2578DA5A0;
  if (!qword_2578DA5A0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Gender, &type metadata for Gender);
    atomic_store(result, (unint64_t *)&qword_2578DA5A0);
  }
  return result;
}

uint64_t sub_249E43E28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E43E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedPrompt();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_249E43E70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E43E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedPrompt();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TextPrompt()
{
  uint64_t result;

  result = qword_2578DA600;
  if (!qword_2578DA600)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E43EF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for AugmentedPrompt();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA650);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TextPrompt();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E442D0();
  sub_249F1FFF4();
  if (!v2)
  {
    sub_249D9BBEC(&qword_2578D9108, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2AB34);
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_249D9E308(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    sub_249D9E308((uint64_t)v11, v13, (uint64_t (*)(_QWORD))type metadata accessor for TextPrompt);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249E440C4()
{
  sub_249E442D0();
  return sub_249F20024();
}

uint64_t sub_249E440EC()
{
  sub_249E442D0();
  return sub_249F20030();
}

uint64_t sub_249E44114@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E43EF8(a1, a2);
}

uint64_t sub_249E44128(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA660);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E442D0();
  sub_249F20018();
  type metadata accessor for AugmentedPrompt();
  sub_249D9BBEC(&qword_2578D90E8, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2AB0C);
  sub_249F1FDCC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249E44238(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249D9BBEC(&qword_2578DA638, (uint64_t (*)(uint64_t))type metadata accessor for TextPrompt, (uint64_t)&unk_249F298F4);
  result = sub_249D9BBEC(&qword_2578DA640, (uint64_t (*)(uint64_t))type metadata accessor for TextPrompt, (uint64_t)&unk_249F298CC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249E44294(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578DA648, (uint64_t (*)(uint64_t))type metadata accessor for TextPrompt, (uint64_t)&unk_249F2992C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249E442D0()
{
  unint64_t result;

  result = qword_2578DA658;
  if (!qword_2578DA658)
  {
    result = MEMORY[0x24BD06528](&unk_249F29A44, &type metadata for TextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA658);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TextPrompt.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E44354 + 4 * asc_249F298B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E44374 + 4 * byte_249F298B5[v4]))();
}

_BYTE *sub_249E44354(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E44374(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E4437C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E44384(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E4438C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E44394(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TextPrompt.CodingKeys()
{
  return &type metadata for TextPrompt.CodingKeys;
}

unint64_t sub_249E443B4()
{
  unint64_t result;

  result = qword_2578DA668;
  if (!qword_2578DA668)
  {
    result = MEMORY[0x24BD06528](&unk_249F29A1C, &type metadata for TextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA668);
  }
  return result;
}

unint64_t sub_249E443FC()
{
  unint64_t result;

  result = qword_2578DA670;
  if (!qword_2578DA670)
  {
    result = MEMORY[0x24BD06528](&unk_249F2998C, &type metadata for TextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA670);
  }
  return result;
}

unint64_t sub_249E44444()
{
  unint64_t result;

  result = qword_2578DA678;
  if (!qword_2578DA678)
  {
    result = MEMORY[0x24BD06528](&unk_249F299B4, &type metadata for TextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA678);
  }
  return result;
}

uint64_t sub_249E4448C(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_249E3C6AC(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_249E4471C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249E444F8(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  if (a1[2] == a2[2] && a1[3] == a2[3])
    return 1;
  else
    return sub_249F1FE2C();
}

unint64_t sub_249E44544(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v4 = a4;
  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_249F1FED4();
  swift_unknownObjectRetain_n();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  swift_release();
  if (__OFSUB__(v4 >> 1, a3))
    goto LABEL_24;
  if (v9 != (v4 >> 1) - a3)
  {
LABEL_25:
    swift_unknownObjectRelease();
LABEL_2:
    v4 = sub_249DBDFF0(a1, a2, a3, v4);
    goto LABEL_9;
  }
  v4 = swift_dynamicCastClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
    v4 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  a3 = *(_QWORD *)(v4 + 16);
  swift_unknownObjectRelease();
  if (a3 >= 2)
  {
    a2 = 0;
    v11 = 0;
    v12 = a3 >> 1;
    v13 = a3 - 1;
    v14 = 16 * a3 + 16;
    v19 = a3 >> 1;
    do
    {
      if (v11 != v13)
      {
        v15 = *(_QWORD *)(v4 + 16);
        if (v11 >= v15)
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        if (v13 >= v15)
          goto LABEL_22;
        v16 = *(_QWORD *)(v4 + a2 + 32);
        a1 = *(_QWORD *)(v4 + a2 + 40);
        v17 = *(_QWORD *)(v4 + v14);
        a3 = *(_QWORD *)(v4 + v14 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = (unint64_t)sub_249E3C698((_QWORD *)v4);
        v18 = v4 + a2;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v18 + 32) = v17;
        *(_QWORD *)(v18 + 40) = a3;
        if (v13 >= *(_QWORD *)(v4 + 16))
          goto LABEL_23;
        a3 = v4 + v14;
        swift_bridgeObjectRelease();
        *(_QWORD *)a3 = v16;
        *(_QWORD *)(a3 + 8) = a1;
        v12 = v19;
      }
      ++v11;
      --v13;
      v14 -= 16;
      a2 += 16;
    }
    while (v12 != v11);
  }
  return v4;
}

uint64_t sub_249E4471C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t i;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *__dst;

  v3 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v90 = 0;
      v91 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v93 = *(_QWORD *)(v91 + 32 * i);
        v94 = v90;
        do
        {
          v95 = (_OWORD *)(v91 + v94);
          if (*(_QWORD *)(v91 + v94) >= v93)
            break;
          if (!v91)
            goto LABEL_140;
          v96 = v91 + v94;
          v97 = *(_QWORD *)(v91 + v94 + 56);
          v98 = *(_OWORD *)(v91 + v94 + 40);
          v99 = v95[1];
          *(_OWORD *)(v91 + v94 + 32) = *v95;
          *(_OWORD *)(v91 + v94 + 48) = v99;
          *(_QWORD *)v96 = v93;
          *(_OWORD *)(v96 + 8) = v98;
          *(_QWORD *)(v96 + 24) = v97;
          v94 -= 32;
        }
        while (v94 != -32);
        v90 += 32;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v109 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v100 = v12;
      v111 = v9;
      if (v13 >= 2)
      {
        v101 = *v109;
        do
        {
          v102 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v101)
            goto LABEL_144;
          v103 = v100;
          v104 = *(_QWORD *)&v100[16 * v102 + 32];
          v105 = *(_QWORD *)&v100[16 * v13 + 24];
          sub_249E44E08((char *)(v101 + 32 * v104), (char *)(v101 + 32 * *(_QWORD *)&v100[16 * v13 + 16]), v101 + 32 * v105, __dst);
          if (v1)
            break;
          if (v105 < v104)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v103 = sub_249E750A8((uint64_t)v103);
          if (v102 >= *((_QWORD *)v103 + 2))
            goto LABEL_133;
          v106 = &v103[16 * v102 + 32];
          *(_QWORD *)v106 = v104;
          *((_QWORD *)v106 + 1) = v105;
          v107 = *((_QWORD *)v103 + 2);
          if (v13 > v107)
            goto LABEL_134;
          memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
          v100 = v103;
          *((_QWORD *)v103 + 2) = v107 - 1;
          v13 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v111 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_249F1F58C();
    *(_QWORD *)(v8 + 16) = v7;
    v111 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v110 = *a1 + 64;
  v108 = *a1 - 32;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v112 = v6;
  v113 = v3;
  v114 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 32 * v10);
      v16 = 32 * v14;
      v17 = *(_QWORD *)(v11 + 32 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (uint64_t *)(v110 + 32 * v14);
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 4;
          v20 = v21;
          if (v17 < v15 == v19 >= v21)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v22 = 32 * v10;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = (_OWORD *)(v11 + v16);
              v26 = v11 + v22;
              v27 = *(_QWORD *)(v11 + v16 + 16);
              v28 = *(_QWORD *)(v11 + v16 + 24);
              v29 = *(_OWORD *)(v11 + v16);
              v30 = *(_OWORD *)(v11 + v22 - 16);
              *v25 = *(_OWORD *)(v11 + v22 - 32);
              v25[1] = v30;
              *(_OWORD *)(v26 - 32) = v29;
              *(_QWORD *)(v26 - 16) = v27;
              *(_QWORD *)(v26 - 8) = v28;
            }
            ++v24;
            v22 -= 32;
            v16 += 32;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v31 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v31 >= v3)
      v31 = v3;
    if (v31 < v14)
      break;
    if (v10 != v31)
    {
      v32 = v108 + 32 * v10;
      do
      {
        v33 = *(_QWORD *)(v11 + 32 * v10);
        v34 = v14;
        v35 = v32;
        do
        {
          if (*(_QWORD *)v35 >= v33)
            break;
          if (!v11)
            goto LABEL_141;
          v36 = *(_QWORD *)(v35 + 56);
          v37 = *(_OWORD *)(v35 + 40);
          v38 = *(_OWORD *)(v35 + 16);
          *(_OWORD *)(v35 + 32) = *(_OWORD *)v35;
          *(_OWORD *)(v35 + 48) = v38;
          *(_QWORD *)v35 = v33;
          *(_OWORD *)(v35 + 8) = v37;
          *(_QWORD *)(v35 + 24) = v36;
          v35 -= 32;
          ++v34;
        }
        while (v10 != v34);
        ++v10;
        v32 += 32;
      }
      while (v10 != v31);
      v10 = v31;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_249E74C00(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v40 = *((_QWORD *)v12 + 2);
    v39 = *((_QWORD *)v12 + 3);
    v13 = v40 + 1;
    v11 = v114;
    if (v40 >= v39 >> 1)
    {
      v89 = sub_249E74C00((char *)(v39 > 1), v40 + 1, 1, v12);
      v11 = v114;
      v12 = v89;
    }
    *((_QWORD *)v12 + 2) = v13;
    v41 = v12 + 32;
    v42 = &v12[16 * v40 + 32];
    *(_QWORD *)v42 = v14;
    *((_QWORD *)v42 + 1) = v10;
    if (v40)
    {
      while (1)
      {
        v43 = v13 - 1;
        if (v13 >= 4)
        {
          v48 = &v41[16 * v13];
          v49 = *((_QWORD *)v48 - 8);
          v50 = *((_QWORD *)v48 - 7);
          v54 = __OFSUB__(v50, v49);
          v51 = v50 - v49;
          if (v54)
            goto LABEL_119;
          v53 = *((_QWORD *)v48 - 6);
          v52 = *((_QWORD *)v48 - 5);
          v54 = __OFSUB__(v52, v53);
          v46 = v52 - v53;
          v47 = v54;
          if (v54)
            goto LABEL_120;
          v55 = v13 - 2;
          v56 = &v41[16 * v13 - 32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v54 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v54)
            goto LABEL_122;
          v54 = __OFADD__(v46, v59);
          v60 = v46 + v59;
          if (v54)
            goto LABEL_125;
          if (v60 >= v51)
          {
            v78 = &v41[16 * v43];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v54 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v54)
              goto LABEL_129;
            v71 = v46 < v81;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v72 = *((_QWORD *)v12 + 4);
            v73 = *((_QWORD *)v12 + 5);
            v54 = __OFSUB__(v73, v72);
            v65 = v73 - v72;
            v66 = v54;
            goto LABEL_77;
          }
          v45 = *((_QWORD *)v12 + 4);
          v44 = *((_QWORD *)v12 + 5);
          v54 = __OFSUB__(v44, v45);
          v46 = v44 - v45;
          v47 = v54;
        }
        if ((v47 & 1) != 0)
          goto LABEL_121;
        v55 = v13 - 2;
        v61 = &v41[16 * v13 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_124;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_127;
        if (__OFADD__(v65, v70))
          goto LABEL_128;
        if (v65 + v70 >= v46)
        {
          v71 = v46 < v70;
LABEL_83:
          if (v71)
            v43 = v55;
          goto LABEL_85;
        }
LABEL_77:
        if ((v66 & 1) != 0)
          goto LABEL_123;
        v74 = &v41[16 * v43];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v54 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v54)
          goto LABEL_126;
        if (v77 < v65)
          goto LABEL_15;
LABEL_85:
        v82 = v43 - 1;
        if (v43 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v83 = v12;
        v84 = &v41[16 * v82];
        v85 = *(_QWORD *)v84;
        v86 = &v41[16 * v43];
        v87 = *((_QWORD *)v86 + 1);
        sub_249E44E08((char *)(v11 + 32 * *(_QWORD *)v84), (char *)(v11 + 32 * *(_QWORD *)v86), v11 + 32 * v87, __dst);
        if (v1)
          goto LABEL_93;
        if (v87 < v85)
          goto LABEL_116;
        if (v43 > *((_QWORD *)v83 + 2))
          goto LABEL_117;
        *(_QWORD *)v84 = v85;
        *(_QWORD *)&v41[16 * v82 + 8] = v87;
        v88 = *((_QWORD *)v83 + 2);
        if (v43 >= v88)
          goto LABEL_118;
        v12 = v83;
        v13 = v88 - 1;
        memmove(&v41[16 * v43], v86 + 16, 16 * (v88 - 1 - v43));
        *((_QWORD *)v83 + 2) = v88 - 1;
        v11 = v114;
        if (v88 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v112;
    v3 = v113;
    if (v10 >= v113)
    {
      v9 = v111;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_249F1FBC8();
  __break(1u);
  return result;
}

uint64_t sub_249E44E08(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  char *v26;
  char *v27;
  char *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v28 = __src;
  v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v18 = &v4[32 * v13];
      v26 = v18;
      v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v19 = (char *)(a3 - 32);
        v20 = v6;
        while (1)
        {
          v21 = v19 + 32;
          v22 = *((_QWORD *)v20 - 4);
          v20 -= 32;
          if (v22 >= *((_QWORD *)v18 - 4))
          {
            v26 = v18 - 32;
            if (v21 < v18 || v19 >= v18 || v21 != v18)
            {
              v24 = *((_OWORD *)v18 - 1);
              *(_OWORD *)v19 = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 1) = v24;
            }
            v20 = v6;
            v18 -= 32;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              v23 = *((_OWORD *)v20 + 1);
              *(_OWORD *)v19 = *(_OWORD *)v20;
              *((_OWORD *)v19 + 1) = v23;
            }
            v28 = v20;
            if (v20 <= v7)
              goto LABEL_42;
          }
          v19 -= 32;
          v6 = v20;
          if (v18 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        if (*(_QWORD *)v4 >= *(_QWORD *)v6)
        {
          if (v7 != v4)
          {
            v17 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v17;
          }
          v4 += 32;
          v27 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 32;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            v16 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 32;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v28 = v7;
    }
LABEL_42:
    sub_249E75000((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

_QWORD *sub_249E45080(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_249F1F46C();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249E45138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D98);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_249E451AC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = a1[2];
  v3 = a2[2];
  if (v3 >= (unint64_t)v2)
    v4 = a1[2];
  else
    v4 = a2[2];
  if (!v4)
    return 0;
  result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    result = sub_249F1FE2C();
    if ((result & 1) == 0)
      return 0;
  }
  if (v4 == 1)
    return 1;
  if (v2 <= 1)
    v2 = 1;
  if (v3 <= 1)
    v3 = 1;
  v10 = a2 + 7;
  v11 = a1 + 7;
  v9 = 1;
  while (v4 != v9)
  {
    if (v2 == v9)
      goto LABEL_31;
    if (v3 == v9)
      goto LABEL_32;
    result = *(v11 - 1);
    if (result != *(v10 - 1) || *v11 != *v10)
    {
      result = sub_249F1FE2C();
      if ((result & 1) == 0)
        return v9;
    }
    ++v9;
    v10 += 2;
    v11 += 2;
    if (v4 == v9)
      return v4;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_249E452B0(uint64_t a1, unint64_t a2, _QWORD *a3, int64_t a4)
{
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;

  v5 = a4;
  v6 = a3;
  v8 = a1;
  if ((_QWORD *)a1 == a3 && a2 == a4)
    return MEMORY[0x24BEE4AF8];
  v10 = sub_249F1FE2C();
  v9 = MEMORY[0x24BEE4AF8];
  if ((v10 & 1) != 0)
    return v9;
  swift_bridgeObjectRetain();
  v11 = sub_249F1F424();
  if (v11)
  {
    v12 = v11;
    v13 = sub_249E45138(v11, 0);
    swift_bridgeObjectRetain();
    v8 = (uint64_t)sub_249E45080(&v42, v13 + 4, v12, v8, a2);
    result = swift_bridgeObjectRelease();
    if (v8 != v12)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v15 = sub_249F1F424();
  if (!v15)
  {
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_13:
    v17 = sub_249E451AC(v13, v16);
    v18 = v13[2];
    if (v18 < v17)
    {
      __break(1u);
    }
    else
    {
      v5 = v17;
      if ((v17 & 0x8000000000000000) == 0)
      {
        v6 = v13 + 4;
        v8 = (2 * v18) | 1;
        v19 = swift_retain();
        v20 = sub_249E44544(v19, (uint64_t)(v13 + 4), v5, v8);
        v21 = v16[2];
        if (v21 >= v5)
        {
          v22 = (_QWORD *)v20;
          v6 = v16 + 4;
          v23 = (2 * v21) | 1;
          v24 = swift_retain();
          v25 = (_QWORD *)sub_249E44544(v24, (uint64_t)(v16 + 4), v5, v23);
          v26 = sub_249E451AC(v22, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v8 = v13[2];
          swift_release();
          v4 = v8 - v26;
          if (!__OFSUB__(v8, v26))
          {
            v27 = v16[2];
            v8 = v27 - v26;
            if (!__OFSUB__(v27, v26))
            {
              if (v8 >= v5)
              {
                if (v27 >= v8)
                {
                  sub_249F1FED4();
                  swift_unknownObjectRetain_n();
                  v28 = swift_dynamicCastClass();
                  if (!v28)
                  {
                    swift_release();
                    v28 = MEMORY[0x24BEE4AF8];
                  }
                  v29 = *(_QWORD *)(v28 + 16);
                  swift_release();
                  if (v29 == v8 - v5)
                  {
                    v30 = swift_dynamicCastClass();
                    if (!v30)
                    {
                      swift_release();
                      v30 = MEMORY[0x24BEE4AF8];
                    }
                    goto LABEL_25;
                  }
LABEL_42:
                  swift_release();
                  v30 = sub_249DBDFF0((uint64_t)v16, (uint64_t)v6, v5, (2 * v8) | 1);
LABEL_25:
                  swift_release();
                  v31 = *(_QWORD *)(v30 + 16);
                  if (v31)
                  {
                    v41 = v4;
                    v42 = v9;
                    sub_249DB673C(0, v31, 0);
                    v9 = v42;
                    v32 = (uint64_t *)(v30 + 40);
                    do
                    {
                      v34 = *(v32 - 1);
                      v33 = *v32;
                      v42 = v9;
                      v36 = *(_QWORD *)(v9 + 16);
                      v35 = *(_QWORD *)(v9 + 24);
                      swift_bridgeObjectRetain();
                      if (v36 >= v35 >> 1)
                      {
                        sub_249DB673C(v35 > 1, v36 + 1, 1);
                        v9 = v42;
                      }
                      v32 += 2;
                      *(_QWORD *)(v9 + 16) = v36 + 1;
                      v37 = v9 + 16 * v36;
                      *(_QWORD *)(v37 + 32) = v34;
                      *(_QWORD *)(v37 + 40) = v33;
                      --v31;
                    }
                    while (v31);
                    swift_release();
                    v4 = v41;
                  }
                  else
                  {
                    swift_release();
                  }
                  v42 = v9;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
                  sub_249E11B3C();
                  v38 = sub_249F1F280();
                  v40 = v39;
                  swift_bridgeObjectRelease();
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6DA0);
                  result = swift_allocObject();
                  *(_OWORD *)(result + 16) = xmmword_249F21770;
                  if (v4 >= v5)
                  {
                    v9 = result;
                    *(_QWORD *)(result + 32) = v5;
                    *(_QWORD *)(result + 40) = v4;
                    *(_QWORD *)(result + 48) = v38;
                    *(_QWORD *)(result + 56) = v40;
                    return v9;
                  }
                  __break(1u);
                  goto LABEL_44;
                }
LABEL_41:
                __break(1u);
                goto LABEL_42;
              }
LABEL_40:
              __break(1u);
              goto LABEL_41;
            }
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  v8 = v15;
  v16 = sub_249E45138(v15, 0);
  swift_bridgeObjectRetain();
  v6 = sub_249E45080(&v42, v16 + 4, v8, (uint64_t)v6, v5);
  result = swift_bridgeObjectRelease();
  if (v6 == (_QWORD *)v8)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_45:
  __break(1u);
  return result;
}

BOOL sub_249E456E0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  int64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  uint8_t *v54;
  _QWORD *v55;
  int64_t v56;
  BOOL v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  char *v64;
  uint8_t *v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char *v72;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  _QWORD *v92[4];
  _QWORD *v93;

  v82 = sub_249F1EE30();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v81 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249F1EE24();
  v6 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  v78 = v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v75 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v74 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v79 = (char *)&v74 - v11;
  v87 = sub_249F1EE54();
  v12 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_249F1EE48();
  v84 = *(_QWORD *)(v15 - 8);
  v85 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v83 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_249F1EE6C();
  v88 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v86 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v89 = (char *)&v74 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v74 - v22;
  sub_249F1E9D4();
  __swift_project_boxed_opaque_existential_1(v92, (uint64_t)v92[3]);
  v24 = a1;
  v25 = a2;
  v26 = v90;
  v27 = sub_249F1EE18();
  v29 = v26;
  if (v26)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    v92[0] = v26;
    v30 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    if (swift_dynamicCast())
    {
      v31 = v17;
      v90 = v26;

      v33 = v88;
      v32 = v89;
      (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v89, v23, v17);
      sub_249F1EE60();
      v34 = v87;
      if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v87) == *MEMORY[0x24BE3B440])
      {
        (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v34);
        v35 = v83;
        v36 = v84;
        v37 = v85;
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v83, v14, v85);
        v38 = v81;
        sub_249F1EE3C();
        v39 = v80;
        v40 = v82;
        if ((*(unsigned int (**)(char *, uint64_t))(v80 + 88))(v38, v82) == *MEMORY[0x24BE3B320])
        {
          (*(void (**)(char *, uint64_t))(v39 + 96))(v38, v40);
          v41 = v78;
          v42 = v79;
          v43 = v77;
          (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v79, v38, v77);
          if (qword_2578D5D78 != -1)
            swift_once();
          v44 = sub_249F1EF38();
          __swift_project_value_buffer(v44, (uint64_t)qword_2578FF3F0);
          v45 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
          v46 = v76;
          v45(v76, v42, v43);
          v47 = sub_249F1EF20();
          v48 = sub_249F1F808();
          if (os_log_type_enabled(v47, v48))
          {
            v87 = v31;
            v49 = (uint8_t *)swift_slowAlloc();
            v50 = (_QWORD *)swift_slowAlloc();
            v93 = v50;
            *(_DWORD *)v49 = 136315138;
            v86 = (char *)(v49 + 4);
            v45(v75, v46, v43);
            v51 = sub_249F1F3C4();
            v91 = sub_249E68CA8(v51, v52, (uint64_t *)&v93);
            v31 = v87;
            sub_249F1F9AC();
            swift_bridgeObjectRelease();
            v53 = *(void (**)(char *, uint64_t))(v78 + 8);
            v53(v46, v43);
            _os_log_impl(&dword_249D98000, v47, v48, "DenyListUtility rejected text. %s", v49, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24BD06618](v50, -1, -1);
            v54 = v49;
            v42 = v79;
            MEMORY[0x24BD06618](v54, -1, -1);
          }
          else
          {
            v53 = *(void (**)(char *, uint64_t))(v41 + 8);
            v53(v46, v43);
          }

          v93 = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_249E4448C(&v93);
          v53(v42, v43);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
          (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v31);

          v29 = v90;
          return v29 == 0;
        }
        (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
      }
      v58 = v86;
      if (qword_2578D5D78 != -1)
        swift_once();
      v59 = sub_249F1EF38();
      __swift_project_value_buffer(v59, (uint64_t)qword_2578FF3F0);
      v60 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v60(v58, v32, v31);
      v61 = sub_249F1EF20();
      v62 = sub_249F1F820();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc();
        v90 = v60;
        v64 = v58;
        v65 = (uint8_t *)v63;
        v66 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v65 = 138412290;
        sub_249E45ED0();
        swift_allocError();
        v67 = v31;
        v90(v68, v64, v31);
        v69 = (_QWORD *)_swift_stdlib_bridgeErrorToNSError();
        v93 = v69;
        v32 = v89;
        sub_249F1F9AC();
        *v66 = v69;
        v31 = v67;
        v70 = *(void (**)(char *, uint64_t))(v88 + 8);
        v71 = v64;
        v60 = v90;
        v70(v71, v67);
        _os_log_impl(&dword_249D98000, v61, v62, "GMS sanitizer rejected the prompt with error message: %@", v65, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v66, -1, -1);
        MEMORY[0x24BD06618](v65, -1, -1);
      }
      else
      {
        v70 = *(void (**)(char *, uint64_t))(v33 + 8);
        v70(v58, v31);
      }

      sub_249E45ED0();
      swift_allocError();
      v60(v72, v32, v31);
      swift_willThrow();
      v70(v32, v31);
    }

    return v57;
  }
  v55 = (_QWORD *)v27;
  v56 = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  v92[0] = (_QWORD *)sub_249E452B0(v24, v25, v55, v56);
  sub_249E4448C(v92);
  return v29 == 0;
}

unint64_t sub_249E45ED0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DA680;
  if (!qword_2578DA680)
  {
    v1 = sub_249F1EE6C();
    result = MEMORY[0x24BD06528](MEMORY[0x24BE3B480], v1);
    atomic_store(result, (unint64_t *)&qword_2578DA680);
  }
  return result;
}

uint64_t initializeWithCopy for TextEdit(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TextEdit(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextEdit(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextEdit(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextEdit(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextEdit()
{
  return &type metadata for TextEdit;
}

CGImageRef __swiftcall Image.asCGImage()()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  CGImage *v5;
  CGImageRef result;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = *(id *)v0;
  if (!*(_BYTE *)(v0 + 8))
    return (CGImageRef)v1;
  v10 = *(id *)v0;
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    v2 = objc_allocWithZone(MEMORY[0x24BDBF648]);
    v3 = v10;
    v4 = objc_msgSend(v2, sel_init);
    objc_msgSend(v3, sel_extent);
    v5 = (CGImage *)objc_msgSend(v4, sel_createCGImage_fromRect_, v3);

    if (!v5)
    {
      __break(1u);
      return (CGImageRef)v1;
    }
    goto LABEL_7;
  }
  v7 = objc_allocWithZone(MEMORY[0x24BDBF660]);
  v3 = v10;
  v8 = objc_msgSend(v7, sel_initWithCVPixelBuffer_, v3);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
  objc_msgSend(v8, sel_extent);
  v5 = (CGImage *)objc_msgSend(v9, sel_createCGImage_fromRect_, v8);

  if (v5)
  {
LABEL_7:

    return v5;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of DefinitionSessionInitializable.init(definitionSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_249E461BC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_249F1F73C();
  if (!v18)
    return sub_249F1F580();
  v19 = v18;
  v25 = v15;
  v39 = sub_249F1FB74();
  v32 = sub_249F1FB80();
  sub_249F1FB38();
  v36 = v17;
  result = sub_249F1F730();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_249F1F784();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_249F1FB68();
      sub_249F1F760();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t Optional<A>.radarDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v8, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v13;
}

uint64_t Array<A>.radarDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;
  unint64_t v9;

  v8 = a1;
  v7[2] = a2;
  v7[3] = a3;
  v3 = sub_249F1F5A4();
  v4 = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v3);
  v8 = sub_249E461BC((void (*)(char *, char *))sub_249E4687C, (uint64_t)v7, v3, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249E11B3C();
  sub_249F1F280();
  swift_bridgeObjectRelease();
  v8 = 91;
  v9 = 0xE100000000000000;
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t RadarDescriptionConvertible.radarDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_249F1F3AC();
}

uint64_t sub_249E46750()
{
  return sub_249F1F3AC();
}

uint64_t String.radarDescription.getter()
{
  sub_249F1F460();
  sub_249F1F460();
  return 34;
}

uint64_t sub_249E467C4()
{
  sub_249F1F460();
  sub_249F1F460();
  return 34;
}

uint64_t sub_249E46810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_249F1F3AC();
}

uint64_t sub_249E4687C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 24) + 8))(*(_QWORD *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_249E468C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Array<A>.radarDescription.getter(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

uint64_t dispatch thunk of RadarDescriptionConvertible.radarDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

CVPixelBufferRef sub_249E468DC(uint64_t *a1, OSType a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  CVPixelBufferRef v9;
  id v10;
  id v11;
  id v12;
  CVPixelBufferRef v13;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = *a1;
  v4 = a1[1];
  v6 = *(void **)v2;
  v7 = *(unsigned __int8 *)(v2 + 8);
  if (*(_BYTE *)(v2 + 8))
  {
    v15 = *a1;
    v16 = v4;
    v17 = 0;
    if (v7 == 1)
    {
      v8 = v6;
      v9 = sub_249DFD278(v8, a2, (uint64_t)&v15);
    }
    else
    {
      v8 = v6;
      v9 = sub_249DFD450((CVPixelBufferRef)v8, a2, (uint64_t)&v15);
    }
    v13 = v9;

  }
  else
  {
    v10 = objc_allocWithZone(MEMORY[0x24BDBF660]);
    v11 = v6;
    v12 = objc_msgSend(v10, sel_initWithCGImage_, v11);
    v15 = v5;
    v16 = v4;
    v17 = 0;
    v13 = sub_249DFD278(v12, a2, (uint64_t)&v15);

  }
  return v13;
}

uint64_t sub_249E469F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  NSObject *v18;
  os_signpost_type_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  id v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  void *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t result;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  _WORD *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  _WORD *v94;
  unint64_t v95;
  id v96;
  id v97[2];

  v96 = a2;
  v93 = a1;
  v94 = a3;
  v97[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v3);
  v87 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249F1EC74();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v84 - v9;
  v92 = sub_249F1E7F4();
  v10 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v95 = (unint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D80 != -1)
    swift_once();
  v89 = v10;
  v90 = v6;
  v88 = v5;
  v12 = sub_249F1EED8();
  __swift_project_value_buffer(v12, (uint64_t)qword_2578FF408);
  v13 = sub_249F1EE9C();
  v91 = &v84;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v17 = (char *)&v84 - v16;
  sub_249F1EEC0();
  sub_249F1EE78();
  v18 = sub_249F1EEC0();
  v19 = sub_249F1F8A4();
  v20 = sub_249F1F958();
  if ((v20 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v20);
    v21 = (char *)&v84 - v16;
    v22 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v22((char *)&v84 - v16, (char *)&v84 - v16, v13);
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    v24 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v18, v19, v24, "fetchFaceAttributes.photos", "", v23, 2u);
    MEMORY[0x24BD06618](v23, -1, -1);

    v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v21, v13);
  }
  else
  {

    v22 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  }
  MEMORY[0x24BDAC7A8](v25);
  v22((char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v13);
  sub_249F1EF08();
  swift_allocObject();
  sub_249F1EEFC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v97[0] = 0;
  v26 = v96;
  v27 = objc_msgSend(v96, sel_requestVUIndexURLForSystemPhotosLibraryWithError_, v97);
  v28 = v97[0];
  v29 = v92;
  v30 = v95;
  if (!v27)
  {
    v39 = v97[0];
    v40 = (void *)sub_249F1E710();

    swift_willThrow();
    v42 = v93;
    if (qword_2578D5D78 != -1)
      swift_once();
    v43 = sub_249F1EF38();
    __swift_project_value_buffer(v43, (uint64_t)qword_2578FF3F0);
    v44 = v40;
    v45 = v40;
    v46 = sub_249F1EF20();
    v47 = sub_249F1F820();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v48 = 138412290;
      v50 = v40;
      v51 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v97[0] = v51;
      v26 = v96;
      sub_249F1F9AC();
      *v49 = v51;

      v52 = "Unexpected error initializing FaceAttributes from UUID: %@";
LABEL_12:
      _os_log_impl(&dword_249D98000, v46, v47, v52, v48, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v49, -1, -1);
      MEMORY[0x24BD06618](v48, -1, -1);

LABEL_31:
      sub_249DDDF68("fetchFaceAttributes.photos", 26, 2);

      swift_release();
      v82 = sub_249F1E8D8();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(v42, v82);
      v75 = 3;
      goto LABEL_32;
    }
LABEL_30:

    goto LABEL_31;
  }
  v31 = v27;
  sub_249F1E7A0();
  v32 = v28;

  v33 = *MEMORY[0x24BEC0BB8];
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 104);
  v35 = v88;
  v34(v86, v33, v88);
  v36 = v89;
  v37 = v87;
  (*(void (**)(char *, unint64_t, uint64_t))(v89 + 16))(v87, v30, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v29);
  sub_249F1EC80();
  swift_allocObject();
  sub_249F1EC5C();
  v38 = v93;
  v41 = v85;
  v34(v85, v33, v35);
  v42 = v38;
  v53 = sub_249F1EC50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v41, v35);
  (*(void (**)(unint64_t, uint64_t))(v89 + 8))(v95, v29);
  v54 = (void *)objc_opt_self();
  v97[0] = 0;
  v55 = objc_msgSend(v54, sel_openPhotoLibraryWithWellKnownIdentifier_error_, 1, v97);
  if (!v55)
  {
    v76 = v97[0];
    swift_bridgeObjectRelease();
    v40 = (void *)sub_249F1E710();

    swift_willThrow();
    v26 = v96;
    if (qword_2578D5D78 != -1)
      swift_once();
    v77 = sub_249F1EF38();
    __swift_project_value_buffer(v77, (uint64_t)qword_2578FF3F0);
    v78 = v40;
    v79 = v40;
    v46 = sub_249F1EF20();
    v47 = sub_249F1F820();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v48 = 138412290;
      v80 = v40;
      v81 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v97[0] = v81;
      v26 = v96;
      sub_249F1F9AC();
      *v49 = v81;

      v52 = "Unexpected error thrown when accessing photo library: %@";
      goto LABEL_12;
    }
    goto LABEL_30;
  }
  v56 = v55;
  v57 = v97[0];
  v58 = objc_msgSend(v56, sel_librarySpecificFetchOptions);
  v59 = (void *)objc_opt_self();
  sub_249E47430(v53);
  swift_bridgeObjectRelease();
  sub_249E4769C();
  v60 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  v61 = objc_msgSend(v59, sel_fetchFacesWithVuObservationIDs_options_, v60, v58);

  v62 = objc_msgSend(v61, sel_firstObject);
  v26 = v96;
  if (!v62)
  {
LABEL_34:

    goto LABEL_31;
  }
  v63 = objc_msgSend((id)objc_opt_self(), sel_fetchPersonWithFace_options_, v62, v58);
  v64 = objc_msgSend(v63, sel_firstObject);

  if (!v64)
  {

    goto LABEL_34;
  }
  v65 = objc_msgSend(v64, sel_ageType);
  v95 = 0x30402010005uLL >> (8 * v65);
  v66 = objc_msgSend(v64, sel_sexType);
  if (v66 == 2)
    v67 = 1;
  else
    v67 = 2;
  LODWORD(v92) = v67;
  v68 = v26;
  v69 = objc_msgSend(v62, sel_skintoneType);

  sub_249DDDF68("fetchFaceAttributes.photos", 26, 2);
  swift_release();
  v70 = sub_249F1E8D8();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v38, v70);
  v72 = v92;
  if (v66 == 1)
    v72 = 0;
  v73 = (v95 & 7) << 8;
  if (v65 >= 6)
    v73 = 1280;
  v74 = (0x908050403020AuLL >> (8 * v69)) << 16;
  if (v69 >= 7)
    v74 = 655360;
  v75 = v74 | v72 | v73;
LABEL_32:
  v83 = v94;
  *v94 = v75;
  *((_BYTE *)v83 + 2) = BYTE2(v75);
  return result;
}

uint64_t sub_249E47430(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_249F1FB44();
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_249F1F718();
      sub_249F1FB20();
      sub_249F1FB50();
      sub_249F1FB5C();
      sub_249F1FB2C();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_249E474D4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v16 = MEMORY[0x24BEE4AF8];
  result = sub_249DB690C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x24BD056B8](v5, a1);
        v16 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_249DB690C(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        ++v5;
        v14 = type metadata accessor for MediaAnalysisServiceImageScaler();
        v15 = &off_251B55288;
        *(_QWORD *)&v13 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_249D9E174(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v16 = v3;
        v11 = *(_QWORD *)(v3 + 16);
        v12 = *(_QWORD *)(v3 + 24);
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_249DB690C(v12 > 1, v11 + 1, 1);
          v3 = v16;
        }
        v14 = type metadata accessor for MediaAnalysisServiceImageScaler();
        v15 = &off_251B55288;
        *(_QWORD *)&v13 = v10;
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_249D9E174(&v13, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_249E4769C()
{
  unint64_t result;

  result = qword_2578D9630;
  if (!qword_2578D9630)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578D9630);
  }
  return result;
}

unint64_t sub_249E476D8()
{
  uint64_t inited;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA838);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21910;
  *(int64x2_t *)(inited + 32) = vdupq_n_s64(0xA0uLL);
  *(_QWORD *)(inited + 48) = &unk_251B4D228;
  *(int64x2_t *)(inited + 56) = vdupq_n_s64(0x200uLL);
  *(_QWORD *)(inited + 72) = &unk_251B4D258;
  v1 = sub_249DC11C8((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA840);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_249E47788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)a1;
  *(_BYTE *)(v3 + 104) = *(_BYTE *)(a1 + 8);
  return swift_task_switch();
}

id sub_249E477B0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  id result;
  double v5;
  double v6;
  size_t Width;
  uint64_t v9;
  CGImage *v10;
  size_t Height;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t i;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  char v36;
  CVPixelBufferRef v37;
  CVPixelBufferRef v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  __int128 v47;
  _QWORD v48[2];
  _OWORD v49[2];

  v1 = *(unsigned __int8 *)(v0 + 104);
  v2 = MEMORY[0x24BEE4AF8];
  v3 = sub_249DCA52C(MEMORY[0x24BEE4AF8]);
  if (!v1)
  {
    v10 = (CGImage *)*(id *)(v0 + 48);
    Width = CGImageGetWidth(v10);
    Height = CGImageGetHeight(v10);
LABEL_14:
    v9 = Height;

    goto LABEL_15;
  }
  if (v1 != 1)
  {
    v10 = (CGImage *)*(id *)(v0 + 48);
    Width = CVPixelBufferGetWidth(v10);
    Height = CVPixelBufferGetHeight(v10);
    goto LABEL_14;
  }
  result = objc_msgSend(*(id *)(v0 + 48), sel_extent);
  if (v5 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((*(_QWORD *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v6 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_53;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_55:
    __break(1u);
    return result;
  }
  Width = (uint64_t)v5;
  v9 = (uint64_t)v6;
LABEL_15:
  v12 = swift_bridgeObjectRetain();
  v13 = sub_249DCA770(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v13;
  v46 = v9;
  if ((sub_249E4811C(Width, v9, v13) & 1) != 0)
  {
    v14 = *(void **)(v0 + 48);
    v15 = *(_BYTE *)(v0 + 104);
    v16 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v49[0] = v3;
    sub_249DD1D8C((uint64_t)v14, v15, Width, v9, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_249E488B8(Width, v9, (uint64_t)v49);
    v13 = *(_QWORD *)(v0 + 16);
  }
  v43 = v3;
  *(_QWORD *)(v0 + 56) = v3;
  v18 = swift_allocObject();
  v19 = 0;
  *(_QWORD *)(v0 + 64) = v18;
  *(_QWORD *)(v18 + 16) = v2;
  v20 = (_QWORD *)(v18 + 16);
  v21 = v13 + 56;
  v22 = -1;
  v23 = -1 << *(_BYTE *)(v13 + 32);
  if (-v23 < 64)
    v22 = ~(-1 << -(char)v23);
  v24 = v22 & *(_QWORD *)(v13 + 56);
  v44 = v18;
  v45 = (unint64_t)(63 - v23) >> 6;
  if (!v24)
    goto LABEL_21;
LABEL_20:
  v25 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (i = v25 | (v19 << 6); ; i = __clz(__rbit64(v28)) + (v19 << 6))
  {
    v30 = *(_QWORD *)(v0 + 40);
    v31 = *(_QWORD *)(v13 + 48);
    v48[0] = Width;
    v48[1] = v9;
    v47 = *(_OWORD *)(v31 + 16 * i);
    v49[0] = v47;
    v32 = (*(uint64_t (**)(_QWORD *, _OWORD *))(*(_QWORD *)v30 + 128))(v48, v49);
    if ((v33 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_249DFC27C();
      swift_allocError();
      *(_QWORD *)v35 = Width;
      *(_QWORD *)(v35 + 8) = v9;
      *(_OWORD *)(v35 + 16) = v47;
      *(_BYTE *)(v35 + 32) = 1;
      swift_willThrow();
      swift_release();
      swift_release();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    if ((v47 & 0x8000000000000000) != 0 || (*((_QWORD *)&v47 + 1) & 0x8000000000000000) != 0)
      return (id)sub_249F1FBC8();
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE64268]), sel_initWithScaledImageWidth_scaledImageHeight_scalingModel_, v47, v32);
    MEMORY[0x24BD05130]();
    if (*(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_249F1F568();
    sub_249F1F598();
    sub_249F1F55C();

    v9 = v46;
    if (v24)
      goto LABEL_20;
LABEL_21:
    v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v27 >= v45)
      goto LABEL_43;
    v28 = *(_QWORD *)(v21 + 8 * v27);
    ++v19;
    if (!v28)
    {
      v19 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_43;
      v28 = *(_QWORD *)(v21 + 8 * v19);
      if (!v28)
      {
        v19 = v27 + 2;
        if (v27 + 2 >= v45)
          goto LABEL_43;
        v28 = *(_QWORD *)(v21 + 8 * v19);
        if (!v28)
          break;
      }
    }
LABEL_34:
    v24 = (v28 - 1) & v28;
  }
  v29 = v27 + 3;
  if (v29 < v45)
  {
    v28 = *(_QWORD *)(v21 + 8 * v29);
    if (!v28)
    {
      while (1)
      {
        v19 = v29 + 1;
        if (__OFADD__(v29, 1))
          break;
        if (v19 >= v45)
          goto LABEL_43;
        v28 = *(_QWORD *)(v21 + 8 * v19);
        ++v29;
        if (v28)
          goto LABEL_34;
      }
LABEL_48:
      __break(1u);
LABEL_49:
      swift_bridgeObjectRetain();
      v42 = sub_249F1FBEC();
      swift_bridgeObjectRelease();
      if (v42 < 1)
        goto LABEL_50;
LABEL_45:
      v36 = *(_BYTE *)(v0 + 104);
      *(_QWORD *)&v49[0] = *(_QWORD *)(v0 + 48);
      BYTE8(v49[0]) = v36;
      v37 = sub_249DDE218();
      *(_QWORD *)(v0 + 72) = v37;
      v38 = v37;
      v39 = *(_QWORD *)(v0 + 40);
      v40 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v40;
      v40[2] = v44;
      v40[3] = v39;
      v40[4] = v38;
      v41 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA828);
      *v41 = v0;
      v41[1] = sub_249E47DB8;
      return (id)sub_249F1FEEC();
    }
    v19 = v29;
    goto LABEL_34;
  }
LABEL_43:
  swift_release();
  if (*v20 >> 62)
    goto LABEL_49;
  if (*(uint64_t *)((*v20 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    goto LABEL_45;
LABEL_50:
  swift_release();
  return (id)(*(uint64_t (**)(unint64_t))(v0 + 8))(v43);
}

uint64_t sub_249E47DB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E47E40()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t i;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  __CVBuffer *v9;
  size_t Width;
  size_t Height;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  size_t *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
    goto LABEL_26;
  for (i = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10); i; v26 = v0)
  {
    v3 = 0;
    v28 = v1;
    v29 = v1 & 0xC000000000000001;
    v4 = *(_QWORD **)(v0 + 56);
    v27 = i;
    while (v29)
    {
      v5 = (id)MEMORY[0x24BD056B8](v3, v1);
      v6 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_23;
LABEL_11:
      v30 = v6;
      v7 = v5;
      v8 = objc_msgSend(v5, sel_pixelBuffer);
      v9 = (__CVBuffer *)v8;
      Width = CVPixelBufferGetWidth(v9);
      Height = CVPixelBufferGetHeight(v9);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v0 = sub_249DB8068(Width, Height);
      v14 = v4[2];
      v15 = (v13 & 1) == 0;
      v16 = v14 + v15;
      if (__OFADD__(v14, v15))
        goto LABEL_24;
      v1 = v13;
      if (v4[3] >= v16)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v13 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_249DBD468();
          if ((v1 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_249DBAC5C(v16, isUniquelyReferenced_nonNull_native);
        v17 = sub_249DB8068(Width, Height);
        if ((v1 & 1) != (v18 & 1))
          return sub_249F1FF10();
        v0 = v17;
        if ((v1 & 1) != 0)
        {
LABEL_4:
          v0 = v4[7] + 16 * v0;

          *(_QWORD *)v0 = v8;
          *(_BYTE *)(v0 + 8) = 2;
          goto LABEL_5;
        }
      }
      v4[(v0 >> 6) + 8] |= 1 << v0;
      v19 = (size_t *)(v4[6] + 16 * v0);
      *v19 = Width;
      v19[1] = Height;
      v20 = v4[7] + 16 * v0;
      *(_QWORD *)v20 = v8;
      *(_BYTE *)(v20 + 8) = 2;
      v21 = v4[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_25;
      v4[2] = v23;
LABEL_5:
      swift_bridgeObjectRelease();

      ++v3;
      v1 = v28;
      if (v30 == v27)
        goto LABEL_28;
    }
    v5 = *(id *)(v1 + 8 * v3 + 32);
    v6 = v3 + 1;
    if (!__OFADD__(v3, 1))
      goto LABEL_11;
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    i = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  v4 = *(_QWORD **)(v0 + 56);
LABEL_28:
  v25 = *(void **)(v26 + 72);
  swift_release();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD *))(v26 + 8))(v4);
}

uint64_t sub_249E480E0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4811C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  v6 = sub_249F1FFA0();
  v7 = -1 << *(_BYTE *)(a3 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  do
  {
    v10 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v8);
    v12 = *v10;
    v11 = v10[1];
    v13 = v12 == a1 && v11 == a2;
    result = v13;
    if (v13)
      break;
    v8 = (v8 + 1) & v9;
  }
  while (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  return result;
}

void sub_249E481F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA830);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v13 = *(void **)(a3 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a2 + 16) >> 62)
  {
    sub_249D9D9F4(0, &qword_2578D60E8);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_249F1FBE0();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_249F1FEC8();
    sub_249D9D9F4(0, &qword_2578D60E8);
  }
  swift_bridgeObjectRelease();
  sub_249D9D9F4(0, &qword_2578D60E8);
  v14 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_249E48C60;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249E11B88;
  aBlock[3] = &block_descriptor_3;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performRequests_onPixelBuffer_withOrientation_andIdentifier_completionHandler_, v14, a4, 1, 0, v15);
  _Block_release(v15);
  swift_release();

}

uint64_t sub_249E48450(int a1, id a2, unint64_t a3, uint64_t a4)
{
  id v5;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  if (a2)
  {
    v5 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA830);
    return sub_249F1F5BC();
  }
  v19 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 16);
  if (v8 >> 62)
    goto LABEL_28;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_5:
    if (v9 >= 1)
    {
      v18 = a3;
      v10 = 0;
      while (1)
      {
        if ((v8 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x24BD056B8](v10, v8);
        else
          v11 = *(id *)(v8 + 8 * v10 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, sel_results, v18);
        if (v13)
        {
          v14 = v13;
          sub_249D9D9F4(0, &qword_2578D60F8);
          a3 = sub_249F1F544();

          if (a3 >> 62)
          {
            swift_bridgeObjectRetain();
            v17 = sub_249F1FBEC();
            swift_bridgeObjectRelease();
            if (!v17)
            {
LABEL_24:

              swift_bridgeObjectRelease();
              goto LABEL_10;
            }
          }
          else if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_24;
          }
          if ((a3 & 0xC000000000000001) != 0)
          {
            v15 = (id)MEMORY[0x24BD056B8](0, a3);
          }
          else
          {
            if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_28:
              swift_bridgeObjectRetain();
              result = sub_249F1FBEC();
              v9 = result;
              if (!result)
                goto LABEL_29;
              goto LABEL_5;
            }
            v15 = *(id *)(a3 + 32);
          }
          v16 = v15;
          swift_bridgeObjectRelease();
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
          {
            v16 = v16;
            MEMORY[0x24BD05130]();
            if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_249F1F568();
            sub_249F1F598();
            sub_249F1F55C();
          }

        }
LABEL_10:
        if (v9 == ++v10)
          goto LABEL_29;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_29:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA830);
    return sub_249F1F5C8();
  }
  return result;
}

uint64_t sub_249E48708(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (*a1 == a1[1] && v3 == a2[1])
  {
    if (v2 == 512)
    {
      if (v3 == 1024)
        return 1;
    }
    else if (v2 == 160 && v3 == 320)
    {
      return 0;
    }
  }
  return 0;
}

uint64_t type metadata accessor for MediaAnalysisServiceImageScaler()
{
  return objc_opt_self();
}

uint64_t sub_249E48780()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

BOOL sub_249E487A8(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (*a1 == *a2 && v3 == v5)
    return 1;
  v7 = *v2;
  v11[0] = *a1;
  v11[1] = v3;
  v10[0] = v4;
  v10[1] = v5;
  (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)v7 + 128))(v11, v10);
  return (v8 & 1) == 0;
}

uint64_t sub_249E4880C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_249DDB798;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = v6;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)a1;
  *(_BYTE *)(v7 + 104) = *(_BYTE *)(a1 + 8);
  return swift_task_switch();
}

uint64_t sub_249E4888C()
{
  return 0;
}

uint64_t type metadata accessor for MediaAnalysisServiceEmojiStrikeSizeScaler()
{
  return objc_opt_self();
}

uint64_t sub_249E488B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v7 = *v3;
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  result = sub_249F1FFA0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = result & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v10);
      v14 = *v12;
      v13 = v12[1];
      if (v14 == a1 && v13 == a2)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_8;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_249DB5574();
      v17 = v18;
    }
    *(_OWORD *)a3 = *(_OWORD *)(*(_QWORD *)(v17 + 48) + 16 * v10);
    sub_249E489F8(v10);
    *v3 = v18;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(a3 + 16) = 0;
  }
  else
  {
LABEL_8:
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
  }
  return result;
}

unint64_t sub_249E489F8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_249F1FA18();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_249F1FF64();
        sub_249F1FF70();
        sub_249F1FF70();
        v10 = sub_249F1FFA0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_OWORD *)(v11 + 16 * v2);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_249E48BB8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_249E48BDC(uint64_t a1)
{
  uint64_t *v1;

  sub_249E481F0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_249E48BE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA830);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E48C60(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578DA830) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_249E48450(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_249E48CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
        break;
      v12 = sub_249F1FE2C();
      v7 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        goto LABEL_14;
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    sub_249D9D9B0();
    swift_allocError();
    *(_QWORD *)v13 = v3;
    *(_QWORD *)(v13 + 8) = v2;
    *(_BYTE *)(v13 + 16) = 0;
    return swift_willThrow();
  }
}

void sub_249E48E34(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249E48E7C()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E48F5C()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

void sub_249E48FD4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249E49018()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

VisualGeneration::SkinTone_optional __swiftcall SkinTone.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VisualGeneration::SkinTone_optional result;
  char v5;

  v2 = v1;
  v3 = sub_249F1FC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static SkinTone.allCases.getter()
{
  return &unk_251B4DCB8;
}

uint64_t SkinTone.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249E49168 + 4 * byte_249F29C52[*v0]))(0x6C6559696A6F6D65, 0xEB00000000776F6CLL);
}

uint64_t sub_249E49168()
{
  return 0x74736572696166;
}

uint64_t sub_249E49180()
{
  return 0x696146746867696CLL;
}

uint64_t sub_249E4919C()
{
  return 1919508838;
}

uint64_t sub_249E491AC()
{
  return 0x64654D746867696CLL;
}

uint64_t sub_249E491CC()
{
  return 0x6D756964656DLL;
}

uint64_t sub_249E491E0()
{
  return 0x61446D756964656DLL;
}

uint64_t sub_249E491FC()
{
  return 1802658148;
}

uint64_t sub_249E4920C()
{
  return 0x6B72614470656564;
}

uint64_t sub_249E49224()
{
  return 0x7473656B726164;
}

uint64_t sub_249E4923C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_249F1FF64();
  sub_249E48E34((uint64_t)v3, v1);
  return sub_249F1FFA0();
}

void sub_249E49280(uint64_t a1)
{
  char *v1;

  sub_249E48E34(a1, *v1);
}

uint64_t sub_249E49288()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_249F1FF64();
  sub_249E48E34((uint64_t)v3, v1);
  return sub_249F1FFA0();
}

VisualGeneration::SkinTone_optional sub_249E492C8(Swift::String *a1)
{
  return SkinTone.init(rawValue:)(*a1);
}

uint64_t sub_249E492D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SkinTone.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_249E492F8(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B4DCB8;
}

void sub_249E49308(char *a1)
{
  sub_249E38CBC(*a1);
}

uint64_t sub_249E49314()
{
  sub_249E49F80();
  return sub_249F1F514();
}

uint64_t sub_249E49370()
{
  sub_249E49F80();
  return sub_249F1F4FC();
}

unint64_t sub_249E493BC()
{
  return 0xD000000000000013;
}

uint64_t sub_249E493D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E49EFC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249E49400()
{
  sub_249E49620();
  return sub_249F20024();
}

uint64_t sub_249E49428()
{
  sub_249E49620();
  return sub_249F20030();
}

uint64_t sub_249E49450()
{
  sub_249E49664();
  return sub_249F20024();
}

uint64_t sub_249E49478()
{
  sub_249E49664();
  return sub_249F20030();
}

uint64_t SkinToneError.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA848);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA850);
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E49620();
  sub_249F20018();
  sub_249E49664();
  sub_249F1FD3C();
  v14 = v9;
  sub_249DEB11C();
  sub_249F1FDCC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v6);
}

unint64_t sub_249E49620()
{
  unint64_t result;

  result = qword_2578DA858;
  if (!qword_2578DA858)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A090, &type metadata for SkinToneError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA858);
  }
  return result;
}

unint64_t sub_249E49664()
{
  unint64_t result;

  result = qword_2578DA860;
  if (!qword_2578DA860)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A040, &type metadata for SkinToneError.UnsupportedSkinToneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA860);
  }
  return result;
}

uint64_t SkinToneError.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v21 = a2;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA868);
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA870);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E49620();
  v9 = v24;
  sub_249F1FFF4();
  if (v9)
    goto LABEL_5;
  v19 = v3;
  v20 = a1;
  v11 = v22;
  v10 = v23;
  v24 = v6;
  if (*(_QWORD *)(sub_249F1FD24() + 16) != 1)
  {
    v13 = v10;
    v14 = sub_249F1FAF0();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v16 = &type metadata for SkinToneError;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v13);
    a1 = v20;
LABEL_5:
    v18 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v18);
  }
  sub_249E49664();
  sub_249F1FC64();
  v12 = v24;
  sub_249DEB1E8();
  sub_249F1FD00();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v10);
  v18 = (uint64_t)v20;
  *v21 = v25;
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

unint64_t sub_249E4996C()
{
  unint64_t result;

  result = qword_2578DA878;
  if (!qword_2578DA878)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinTone, &type metadata for SkinTone);
    atomic_store(result, (unint64_t *)&qword_2578DA878);
  }
  return result;
}

unint64_t sub_249E499B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DA880;
  if (!qword_2578DA880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DA888);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578DA880);
  }
  return result;
}

unint64_t sub_249E49A00(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249E49A34();
  a1[2] = sub_249E49A78();
  result = sub_249E49ABC();
  a1[3] = result;
  return result;
}

unint64_t sub_249E49A34()
{
  unint64_t result;

  result = qword_2578DA890;
  if (!qword_2578DA890)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinToneError, &type metadata for SkinToneError);
    atomic_store(result, (unint64_t *)&qword_2578DA890);
  }
  return result;
}

unint64_t sub_249E49A78()
{
  unint64_t result;

  result = qword_2578DA898;
  if (!qword_2578DA898)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinToneError, &type metadata for SkinToneError);
    atomic_store(result, (unint64_t *)&qword_2578DA898);
  }
  return result;
}

unint64_t sub_249E49ABC()
{
  unint64_t result;

  result = qword_2578DA8A0;
  if (!qword_2578DA8A0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinToneError, &type metadata for SkinToneError);
    atomic_store(result, (unint64_t *)&qword_2578DA8A0);
  }
  return result;
}

uint64_t sub_249E49B00@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SkinToneError.init(from:)(a1, a2);
}

uint64_t sub_249E49B14(_QWORD *a1)
{
  return SkinToneError.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SkinTone()
{
  return &type metadata for SkinTone;
}

uint64_t getEnumTagSinglePayload for ModelManagerInferenceProvider.Error.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s16VisualGeneration8SkinToneOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_249E49C1C + 4 * byte_249F29C61[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_249E49C50 + 4 * byte_249F29C5C[v4]))();
}

uint64_t sub_249E49C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E49C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E49C60);
  return result;
}

uint64_t sub_249E49C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E49C74);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_249E49C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E49C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SkinToneError()
{
  return &type metadata for SkinToneError;
}

ValueMetadata *type metadata accessor for SkinToneError.CodingKeys()
{
  return &type metadata for SkinToneError.CodingKeys;
}

uint64_t _s16VisualGeneration13SkinToneErrorO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E49CF0 + 4 * byte_249F29C66[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E49D10 + 4 * byte_249F29C6B[v4]))();
}

_BYTE *sub_249E49CF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E49D10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E49D18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E49D20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E49D28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E49D30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SkinToneError.UnsupportedSkinToneCodingKeys()
{
  return &type metadata for SkinToneError.UnsupportedSkinToneCodingKeys;
}

unint64_t sub_249E49D50()
{
  unint64_t result;

  result = qword_2578DA8A8;
  if (!qword_2578DA8A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F29F60, &type metadata for SkinToneError.UnsupportedSkinToneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8A8);
  }
  return result;
}

unint64_t sub_249E49D98()
{
  unint64_t result;

  result = qword_2578DA8B0;
  if (!qword_2578DA8B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A018, &type metadata for SkinToneError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8B0);
  }
  return result;
}

unint64_t sub_249E49DE0()
{
  unint64_t result;

  result = qword_2578DA8B8;
  if (!qword_2578DA8B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F29ED0, &type metadata for SkinToneError.UnsupportedSkinToneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8B8);
  }
  return result;
}

unint64_t sub_249E49E28()
{
  unint64_t result;

  result = qword_2578DA8C0;
  if (!qword_2578DA8C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F29EF8, &type metadata for SkinToneError.UnsupportedSkinToneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8C0);
  }
  return result;
}

unint64_t sub_249E49E70()
{
  unint64_t result;

  result = qword_2578DA8C8;
  if (!qword_2578DA8C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F29F88, &type metadata for SkinToneError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8C8);
  }
  return result;
}

unint64_t sub_249E49EB8()
{
  unint64_t result;

  result = qword_2578DA8D0;
  if (!qword_2578DA8D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F29FB0, &type metadata for SkinToneError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8D0);
  }
  return result;
}

uint64_t sub_249E49EFC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000249F36850)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_249E49F80()
{
  unint64_t result;

  result = qword_2578DA8D8;
  if (!qword_2578DA8D8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinTone, &type metadata for SkinTone);
    atomic_store(result, (unint64_t *)&qword_2578DA8D8);
  }
  return result;
}

uint64_t LanguageCheckingParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6290);
  sub_249F1E8F0();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_249F21770;
  sub_249F1E8E4();
  v3 = sub_249DC0334(v2);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 5;
  *(_DWORD *)(a1 + 16) = 1064514355;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> LanguageCheckingParameters.check(text:)(Swift::String text)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v3 = sub_249F1EC20();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249F1EC44();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = *((_DWORD *)v1 + 4);
  if (sub_249F1F424() < 1)
    goto LABEL_4;
  v20 = v6;
  if (v9 < 1)
    goto LABEL_5;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFD70]), sel_initWithUnit_, 0);
  v13 = (void *)sub_249F1F304();
  objc_msgSend(v12, sel_setString_, v13);

  v14 = sub_249F1F7B4();
  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (v15 >= v9)
  {
LABEL_5:
    v24 = v10;
    v25 = v9;
    v26 = v11;
    sub_249E4A3A8();
    sub_249F1EC2C();
    sub_249F1EC38();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v20);
      sub_249E4B60C();
      swift_allocError();
      *v17 = v2;
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_249F1EC08();
      sub_249F1EC14();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v20);
      v16 = 1;
    }
  }
  else
  {
LABEL_4:
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t LanguageCheckingParameters.supportedLanguageCodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LanguageCheckingParameters.supportedLanguageCodes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*LanguageCheckingParameters.supportedLanguageCodes.modify())()
{
  return nullsub_1;
}

uint64_t LanguageCheckingParameters.minimumTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t LanguageCheckingParameters.minimumTokenCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*LanguageCheckingParameters.minimumTokenCount.modify())()
{
  return nullsub_1;
}

float LanguageCheckingParameters.minimumConfidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void LanguageCheckingParameters.minimumConfidence.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*LanguageCheckingParameters.minimumConfidence.modify())()
{
  return nullsub_1;
}

uint64_t sub_249E4A3A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA948);
  MEMORY[0x24BDAC7A8](v1);
  v43 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA950);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6EF0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_249F1E8F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v34 - v11;
  v12 = sub_249F1E92C();
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v0;
  v15 = *(_QWORD *)(*v0 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (!v15)
    return v16;
  v45 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_249DB67E0(0, v15, 0);
  result = sub_249DFB67C(v14);
  v18 = result;
  v20 = v19;
  v22 = v21 & 1;
  v35 = v14;
  v36 = v14 + 56;
  v23 = v40;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(v14 + 32))
  {
    if (((*(_QWORD *)(v36 + (((unint64_t)v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(v14 + 36) != (_DWORD)v20)
      goto LABEL_16;
    v24 = *(_QWORD *)(v14 + 48) + *(_QWORD *)(v8 + 72) * v18;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v26 = v39;
    v25(v39, v24, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v23, v26, v7);
    v27 = v41;
    v25(v41, (uint64_t)v23, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v27, 0, 1, v7);
    v28 = sub_249F1E914();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v42, 1, 1, v28);
    v29 = sub_249F1E908();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v43, 1, 1, v29);
    sub_249F1E8FC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
    v16 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_249DB67E0(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v16 = v45;
    }
    v31 = *(_QWORD *)(v16 + 16);
    v30 = *(_QWORD *)(v16 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_249DB67E0(v30 > 1, v31 + 1, 1);
      v16 = v45;
    }
    *(_QWORD *)(v16 + 16) = v31 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v16+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v31, v44, v38);
    v45 = v16;
    v14 = v35;
    result = sub_249DFB720(v18, v20, v22 & 1, v35);
    v18 = result;
    v20 = v32;
    v22 = v33 & 1;
    if (!--v15)
    {
      sub_249DFBBD8(result, v32, v33 & 1);
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

BOOL static LanguageCheckingParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float v3;
  uint64_t v4;
  float v5;
  char v6;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(float *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(float *)(a2 + 16);
  v6 = sub_249E4A7D4(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v6 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

uint64_t sub_249E4A7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_249F1E8F0();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_249E4BC80(&qword_2578D6EF8, MEMORY[0x24BDCEB78]);
    v27 = sub_249F1F220();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_249E4BC80(&qword_2578D6F00, MEMORY[0x24BDCEB80]);
      v31 = sub_249F1F298();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t LanguageCheckingParameters.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_249E4B388(a1, v3);
  swift_bridgeObjectRelease();
  sub_249F1FF70();
  return sub_249F1FF88();
}

unint64_t sub_249E4AB9C(char a1)
{
  unint64_t result;

  result = 0xD000000000000011;
  if (!a1)
    return 0xD000000000000016;
  return result;
}

unint64_t sub_249E4ABF4()
{
  char *v0;

  return sub_249E4AB9C(*v0);
}

uint64_t sub_249E4ABFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E4BB40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E4AC20()
{
  sub_249E4B650();
  return sub_249F20024();
}

uint64_t sub_249E4AC48()
{
  sub_249E4B650();
  return sub_249F20030();
}

uint64_t LanguageCheckingParameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA8E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[1] = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E4B650();
  sub_249F20018();
  v14 = v8;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA8F8);
  sub_249E4B694(&qword_2578DA900, &qword_2578DA908, MEMORY[0x24BDCEB70], MEMORY[0x24BEE1700]);
  sub_249F1FDCC();
  if (!v2)
  {
    v12 = 1;
    sub_249F1FDC0();
    v11 = 2;
    sub_249F1FDB4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LanguageCheckingParameters.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_249F1FF64();
  swift_bridgeObjectRetain();
  sub_249E4B388(v3, v1);
  swift_bridgeObjectRelease();
  sub_249F1FF70();
  sub_249F1FF88();
  return sub_249F1FFA0();
}

uint64_t LanguageCheckingParameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  _BYTE v14[8];
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA910);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E4B650();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA8F8);
  v14[7] = 0;
  sub_249E4B694(&qword_2578DA918, &qword_2578DA920, MEMORY[0x24BDCEB88], MEMORY[0x24BEE1720]);
  sub_249F1FD00();
  v9 = v15;
  v14[6] = 1;
  swift_bridgeObjectRetain();
  v10 = sub_249F1FCF4();
  v14[5] = 2;
  sub_249F1FCE8();
  v12 = v11;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_DWORD *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

BOOL sub_249E4B07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float v3;
  uint64_t v4;
  float v5;
  char v6;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(float *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(float *)(a2 + 16);
  v6 = sub_249E4A7D4(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v6 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

uint64_t sub_249E4B0DC()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_249F1FF64();
  swift_bridgeObjectRetain();
  sub_249E4B388(v3, v1);
  swift_bridgeObjectRelease();
  sub_249F1FF70();
  sub_249F1FF88();
  return sub_249F1FFA0();
}

uint64_t sub_249E4B154@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LanguageCheckingParameters.init(from:)(a1, a2);
}

uint64_t sub_249E4B168(_QWORD *a1)
{
  return LanguageCheckingParameters.encode(to:)(a1);
}

id LanguageCheckError.underlyingError.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t LanguageCheckError.errorDescription.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v1 = sub_249F1E734();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v13 - v6;
  v8 = *v0;
  sub_249F1E71C();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v9 = sub_249F1F394();
  v14 = v9;
  v15 = v10;
  sub_249E72E1C(v8);
  if (v11)
  {
    v13[0] = 8250;
    v13[1] = 0xE200000000000000;
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    v9 = v14;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_249E4B2D4()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_249F1E734();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_249F1E71C();
  v6 = sub_249E7216C((uint64_t)v4, v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_249E4B388(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v4 = sub_249F1E8F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6EF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v31 = *a1;
  v32 = v12;
  v13 = a1[2];
  v14 = a1[3];
  v29[1] = a1;
  v33 = v13;
  v34 = v14;
  v35 = v11;
  v29[2] = sub_249F1FFA0();
  v30 = a2;
  v15 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      goto LABEL_19;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_249E4BC80(&qword_2578D6EF8, MEMORY[0x24BDCEB78]);
    v28 = sub_249F1F220();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v18)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v22++, 1))
      goto LABEL_21;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    if (!v26)
      break;
LABEL_14:
    v18 = (v26 - 1) & v26;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v19)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_249F1FF70();
  }
  v26 = *(_QWORD *)(v15 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_249E4B60C()
{
  unint64_t result;

  result = qword_2578DA8E0;
  if (!qword_2578DA8E0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for LanguageCheckError, &type metadata for LanguageCheckError);
    atomic_store(result, (unint64_t *)&qword_2578DA8E0);
  }
  return result;
}

unint64_t sub_249E4B650()
{
  unint64_t result;

  result = qword_2578DA8F0;
  if (!qword_2578DA8F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A338, &type metadata for LanguageCheckingParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA8F0);
  }
  return result;
}

uint64_t sub_249E4B694(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DA8F8);
    v10 = sub_249E4BC80(a2, a3);
    result = MEMORY[0x24BD06528](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E4B714()
{
  unint64_t result;

  result = qword_2578DA928;
  if (!qword_2578DA928)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for LanguageCheckingParameters, &type metadata for LanguageCheckingParameters);
    atomic_store(result, (unint64_t *)&qword_2578DA928);
  }
  return result;
}

uint64_t destroy for LanguageCheckingParameters()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16VisualGeneration26LanguageCheckingParametersVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LanguageCheckingParameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LanguageCheckingParameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 20))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 20) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageCheckingParameters()
{
  return &type metadata for LanguageCheckingParameters;
}

_QWORD *initializeBufferWithCopyOfBuffer for LanguageCheckError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for LanguageCheckError(id *a1)
{

}

void **assignWithCopy for LanguageCheckError(void **a1, id *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  v5 = *a2;
  *a1 = v4;

  return a1;
}

void **assignWithTake for LanguageCheckError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for LanguageCheckError()
{
  return &type metadata for LanguageCheckError;
}

uint64_t storeEnumTagSinglePayload for LanguageCheckingParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E4B9E8 + 4 * byte_249F2A0E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E4BA1C + 4 * byte_249F2A0E0[v4]))();
}

uint64_t sub_249E4BA1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E4BA24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E4BA2CLL);
  return result;
}

uint64_t sub_249E4BA38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E4BA40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E4BA44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E4BA4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LanguageCheckingParameters.CodingKeys()
{
  return &type metadata for LanguageCheckingParameters.CodingKeys;
}

unint64_t sub_249E4BA6C()
{
  unint64_t result;

  result = qword_2578DA930;
  if (!qword_2578DA930)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A310, &type metadata for LanguageCheckingParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA930);
  }
  return result;
}

unint64_t sub_249E4BAB4()
{
  unint64_t result;

  result = qword_2578DA938;
  if (!qword_2578DA938)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A280, &type metadata for LanguageCheckingParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA938);
  }
  return result;
}

unint64_t sub_249E4BAFC()
{
  unint64_t result;

  result = qword_2578DA940;
  if (!qword_2578DA940)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A2A8, &type metadata for LanguageCheckingParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DA940);
  }
  return result;
}

uint64_t sub_249E4BB40(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x8000000249F36890 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F368B0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F368D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249E4BC80(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_249F1E8F0();
    result = MEMORY[0x24BD06528](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of ForensicsReporterAssignable.assignedForensicsReporter.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DD56E0;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ForensicsReporterAssignable.assign(forensicsReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_249DAFCF8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_249E4BDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[13] = a1;
  return swift_task_switch();
}

uint64_t sub_249E4BDD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 120)
                + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v5 = (_OWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 112);
    type metadata accessor for WordCloudImageGenerator();
    v7 = swift_allocObject();
    *(_QWORD *)(v0 + 128) = v7;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(_QWORD *)(v6 + 16);
    if (v8)
    {
      *(_QWORD *)(v0 + 40) = &type metadata for ImageGeneratorDelegateOperationProgressHandler;
      *(_QWORD *)(v0 + 48) = &off_251B532C8;
      *(_QWORD *)(v0 + 16) = v8;
      *(_QWORD *)(v0 + 24) = v9;
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *v5 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = v10 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation_id;
    *(_QWORD *)(v0 + 80) = type metadata accessor for InProcessWordCloudGeneratorOperation();
    *(_QWORD *)(v0 + 88) = &off_251B55960;
    *(_QWORD *)(v0 + 56) = v10;
    sub_249DC09B8(v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v13;
    v13[2] = v12;
    v13[3] = v12;
    v13[4] = v0 + 56;
    v13[5] = v5;
    v13[6] = v11;
    v13[7] = v7;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v14;
    *v14 = v0;
    v14[1] = sub_249E4BFE8;
    return sub_249F1FC58();
  }
}

uint64_t sub_249E4BFE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E4C054()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  sub_249DD94CC(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_249E4C0B0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  sub_249DD94CC(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4C10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation__canceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249E4C16C()
{
  return type metadata accessor for InProcessWordCloudGeneratorOperation();
}

uint64_t type metadata accessor for InProcessWordCloudGeneratorOperation()
{
  uint64_t result;

  result = qword_2578DA998;
  if (!qword_2578DA998)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E4C1B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249E4C224(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) == 0xD000000000000024 && *(_QWORD *)(a1 + 16) == 0x8000000249F34CE0)
    return 1;
  else
    return sub_249F1FE2C();
}

uint64_t sub_249E4C278@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for InProcessWordCloudGeneratorOperation();
  v6 = swift_allocObject();
  v7 = v6 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation_id;
  v8 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  result = sub_249D9E174(a2, v6 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation__canceller);
  *a3 = v6;
  return result;
}

uint64_t sub_249E4C308(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_249E4C328()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 32)
                + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
  }
  else
  {
    sub_249F1F670();
    sub_249DFB638(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4C3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v3;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_249DDB798;
  v8[14] = a3;
  v8[15] = v7;
  v8[13] = a1;
  return swift_task_switch();
}

uint64_t sub_249E4C46C(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F2A480, a1);
  return sub_249D9E63C();
}

uint64_t sub_249E4C4A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E4C4E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E4C53C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC16VisualGeneration36InProcessWordCloudGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_249E4C58C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249D9BBEC(&qword_2578DAA50, (uint64_t (*)(uint64_t))type metadata accessor for InProcessWordCloudGeneratorOperation, (uint64_t)&unk_249F2A458);
  result = sub_249D9BBEC(qword_2578DAA58, (uint64_t (*)(uint64_t))type metadata accessor for InProcessWordCloudGeneratorOperation, (uint64_t)&unk_249F2A420);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249E4C5E8(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578DAA70, (uint64_t (*)(uint64_t))type metadata accessor for InProcessWordCloudGeneratorOperation, (uint64_t)&unk_249F2A480);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249E4C624(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578D9410, (uint64_t (*)(uint64_t))type metadata accessor for InProcessWordCloudGeneratorOperation, (uint64_t)&unk_249F2A49C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249E4C664(uint64_t a1)
{
  return sub_249E4C9E0(a1);
}

uint64_t sub_249E4C684(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char **v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  int v40;

  v32 = *(_QWORD *)(result + 16);
  if (!v32)
    return result;
  v2 = result;
  v31 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v30 = v2 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v33 = v3;
    v40 = *(unsigned __int8 *)(v30 + v3);
    v6 = *(_QWORD *)(v31 + 8);
    v5 = *(_QWORD *)(v31 + 16);
    v7 = qword_2578D5CF0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7 != -1)
      swift_once();
    v8 = qword_2578FF318;
    v9 = *(_QWORD *)(qword_2578FF318 + 16);
    if (!v9)
      goto LABEL_26;
    v10 = *(_QWORD *)(qword_2578FF318 + 32);
    v11 = *(uint64_t (**)(uint64_t))(v10 + 88);
    v12 = swift_bridgeObjectRetain();
    if (v11(v12) == v6 && v13 == v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    v15 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      break;
LABEL_13:
    v16 = swift_bridgeObjectRelease();
LABEL_14:
    v17 = v40;
    (*(void (**)(__int128 *__return_ptr, uint64_t))(v10 + 112))(&v34, v16);
LABEL_27:
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v35 + 1))
    {
      sub_249D9E174(&v34, (uint64_t)v37);
      v24 = v38;
      v23 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      LOBYTE(v34) = v17;
      v25 = (*(uint64_t (**)(__int128 *, char *, uint64_t))(*(_QWORD *)(v23 + 40) + 8))(&v34, v4, v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      sub_249E4CF08((uint64_t)&v34);
      swift_bridgeObjectRelease();
      v25 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_29;
    }
    v4 = sub_249DB22EC(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
LABEL_29:
    v27 = *((_QWORD *)v4 + 2);
    v26 = *((_QWORD *)v4 + 3);
    if (v27 >= v26 >> 1)
      v4 = sub_249DB22EC((char *)(v26 > 1), v27 + 1, 1, v4);
    *((_QWORD *)v4 + 2) = v27 + 1;
    v4[v27 + 32] = v17;
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_249E4CD7C();
      swift_allocError();
      *v28 = v4;
      return swift_willThrow();
    }
    v3 = v33 + 1;
    if (v33 + 1 == v32)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  if (v9 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    v17 = v40;
    goto LABEL_27;
  }
  v29 = v4;
  v18 = 5;
  while (1)
  {
    v19 = v18 - 3;
    if (__OFADD__(v18 - 4, 1))
      break;
    v10 = *(_QWORD *)(v8 + 8 * v18);
    if ((*(uint64_t (**)(uint64_t))(v10 + 88))(result) == v6 && v20 == v5)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      v16 = swift_bridgeObjectRelease();
      v4 = v29;
      goto LABEL_14;
    }
    v22 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_37;
    ++v18;
    if (v19 == v9)
    {
      swift_bridgeObjectRelease();
      v4 = v29;
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249E4C9E0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(__int128 *, char *, uint64_t, uint64_t);
  char v13;
  unint64_t v14;
  unint64_t v15;
  char **v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = result;
    v22 = v2;
    v5 = v1 + 128;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = (char *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v8 = *(_BYTE *)(v4 + v6 + 32);
      sub_249E4CF48(v5, (uint64_t)&v17);
      if (v18)
      {
        sub_249D9E174(&v17, (uint64_t)v19);
        v10 = v20;
        v9 = v21;
        __swift_project_boxed_opaque_existential_1(v19, v20);
        LOBYTE(v17) = v8;
        v11 = *(_QWORD *)(v9 + 40);
        v12 = *(uint64_t (**)(__int128 *, char *, uint64_t, uint64_t))(v11 + 8);
        swift_bridgeObjectRetain();
        v13 = v12(&v17, v7, v10, v11);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_249E4CF08((uint64_t)&v17);
        v13 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_5;
      }
      v7 = sub_249DB22EC(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
LABEL_5:
      v15 = *((_QWORD *)v7 + 2);
      v14 = *((_QWORD *)v7 + 3);
      if (v15 >= v14 >> 1)
        v7 = sub_249DB22EC((char *)(v14 > 1), v15 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v15 + 1;
      v7[v15 + 32] = v8;
      if ((v13 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_249E4CD7C();
        swift_allocError();
        *v16 = v7;
        return swift_willThrow();
      }
      if (v3 == ++v6)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ImageStyleCompatibility.evaluateCompatibilities(of:)(Swift::OpaquePointer of)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  char **v12;
  uint64_t v13;
  uint64_t (*v14)(char *, char *, uint64_t, uint64_t);
  uint64_t v15;
  char v16;

  v15 = v1;
  v3 = *((_QWORD *)of._rawValue + 2);
  if (v3)
  {
    v4 = v2;
    v14 = *(uint64_t (**)(char *, char *, uint64_t, uint64_t))(v2 + 8);
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = (char *)MEMORY[0x24BEE4AF8];
    v13 = v4;
    while (1)
    {
      v8 = *((_BYTE *)of._rawValue + v6 + 32);
      v16 = v8;
      swift_bridgeObjectRetain();
      v9 = v14(&v16, v7, v15, v4);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_249DB22EC(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v11 = *((_QWORD *)v7 + 2);
      v10 = *((_QWORD *)v7 + 3);
      if (v11 >= v10 >> 1)
        v7 = sub_249DB22EC((char *)(v10 > 1), v11 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v11 + 1;
      v7[v11 + 32] = v8;
      if ((v9 & 1) == 0)
        break;
      ++v6;
      v4 = v13;
      if (v3 == v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    sub_249E4CD7C();
    swift_allocError();
    *v12 = v7;
    swift_willThrow();
  }
}

uint64_t sub_249E4CD18(uint64_t a1)
{
  return sub_249E4CF90(a1);
}

void sub_249E4CD2C(Swift::OpaquePointer a1)
{
  ImageStyleCompatibility.evaluateCompatibilities(of:)(a1);
}

uint64_t sub_249E4CD40(uint64_t a1)
{
  return sub_249E4D9E0(a1);
}

uint64_t sub_249E4CD54(uint64_t a1)
{
  return sub_249E4D4D8(a1);
}

uint64_t sub_249E4CD68(uint64_t a1)
{
  return sub_249E4C684(a1);
}

unint64_t sub_249E4CD7C()
{
  unint64_t result;

  result = qword_2578DAA78;
  if (!qword_2578DAA78)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ImageStyle.CompatibilityError, &type metadata for ImageStyle.CompatibilityError);
    atomic_store(result, &qword_2578DAA78);
  }
  return result;
}

uint64_t dispatch thunk of ImageStyleCompatibility.imageStyle(_:canBeCombinedWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ImageStyleCompatibility.evaluateCompatibilities(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

_QWORD *_s18CompatibilityErrorOwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s18CompatibilityErrorOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s18CompatibilityErrorOwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18CompatibilityErrorOwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18CompatibilityErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageStyle.CompatibilityError()
{
  return &type metadata for ImageStyle.CompatibilityError;
}

uint64_t sub_249E4CF08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249E4CF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E4CF90(uint64_t result)
{
  char *v1;
  char v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  char **v7;
  char *v8;

  if (*(_QWORD *)(result + 16))
  {
    v8 = (char *)(result + 32);
    swift_bridgeObjectRetain();
    v1 = (char *)MEMORY[0x24BEE4AF8];
    v2 = *v8;
    v3 = qword_2578D5CF8;
    swift_bridgeObjectRetain();
    if (v3 != -1)
      swift_once();
    swift_beginAccess();
    v4 = off_2578D7E08;
    if (*((_QWORD *)off_2578D7E08 + 2))
    {
      swift_bridgeObjectRetain_n();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_249DB22EC(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v6 = *((_QWORD *)v1 + 2);
    v5 = *((_QWORD *)v1 + 3);
    if (v6 >= v5 >> 1)
      v1 = sub_249DB22EC((char *)(v5 > 1), v6 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v6 + 1;
    v1[v6 + 32] = v2;
    swift_bridgeObjectRelease();
    sub_249E4CD7C();
    swift_allocError();
    *v7 = v1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_249E4D4D8(uint64_t result)
{
  char *v1;
  char v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  char **v6;
  char *v7;

  if (*(_QWORD *)(result + 16))
  {
    v7 = (char *)(result + 32);
    swift_bridgeObjectRetain();
    v1 = (char *)MEMORY[0x24BEE4AF8];
    v2 = *v7;
    swift_bridgeObjectRetain();
    v3 = sub_249E91414();
    if (*((_QWORD *)v3 + 2))
    {
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_249DB22EC(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v5 = *((_QWORD *)v1 + 2);
    v4 = *((_QWORD *)v1 + 3);
    if (v5 >= v4 >> 1)
      v1 = sub_249DB22EC((char *)(v4 > 1), v5 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v5 + 1;
    v1[v5 + 32] = v2;
    swift_bridgeObjectRelease();
    sub_249E4CD7C();
    swift_allocError();
    *v6 = v1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_249E4D9E0(uint64_t result)
{
  char v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  char **v5;

  if (*(_QWORD *)(result + 16))
  {
    v1 = *(_BYTE *)(result + 32);
    swift_bridgeObjectRetain();
    v2 = sub_249DB22EC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v4 = *((_QWORD *)v2 + 2);
    v3 = *((_QWORD *)v2 + 3);
    if (v4 >= v3 >> 1)
      v2 = sub_249DB22EC((char *)(v3 > 1), v4 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v4 + 1;
    v2[v4 + 32] = v1;
    swift_bridgeObjectRelease();
    sub_249E4CD7C();
    swift_allocError();
    *v5 = v2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_249E4DAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return swift_task_switch();
}

uint64_t sub_249E4DB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_2578D5D80 != -1)
    swift_once();
  v1 = sub_249F1EED8();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF408);
  v2 = sub_249F1EE9C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  sub_249F1EEC0();
  sub_249F1EE78();
  v5 = sub_249F1EEC0();
  v6 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v7 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v4, v2);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v5, v6, v9, "detectPeople.SCMLPeopleDetector", "", v8, 2u);
    MEMORY[0x24BD06618](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    swift_task_dealloc();
  }
  else
  {

  }
  swift_task_alloc();
  (*(void (**)(void))(v3 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 160) = sub_249F1EEFC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249E9954C();
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + 152);
    v12 = (char *)&loc_249E4DD28
        + 4 * byte_249F2A5A0[*(unsigned __int8 *)(v11 + *(int *)(type metadata accessor for DefinitionSession() + 56))];
    __asm { BR              X10 }
  }
  if (qword_2578D5D88 != -1)
    swift_once();
  v13 = *(_QWORD **)(v0 + 144);
  v14 = *(_QWORD *)algn_2578FF438;
  v15 = qword_2578FF440;
  *v13 = qword_2578FF430;
  v13[1] = v14;
  v13[2] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249DDDF68("detectPeople.SCMLPeopleDetector", 31, 2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4E03C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_249E4E0E0()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *v12;
  void *v13;

  v1 = *(void **)(v0 + 184);
  v12 = *(void **)(v0 + 176);
  v13 = *(void **)(v0 + 168);
  v2 = *(uint64_t **)(v0 + 144);
  v3 = *(void **)(v0 + 128);
  v4 = objc_msgSend(v1, sel_string);
  v5 = sub_249F1F328();
  v7 = v6;

  v8 = objc_msgSend(v3, sel_spans);
  sub_249D9D9F4(0, &qword_2578DAA88);
  v9 = sub_249F1F544();

  swift_bridgeObjectRetain();
  v10 = sub_249E4E9F4(v9, v5, v7);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *v2 = v5;
  v2[1] = v7;
  v2[2] = v10;
  sub_249DDDF68("detectPeople.SCMLPeopleDetector", 31, 2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4E258()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  sub_249DDDF68("detectPeople.SCMLPeopleDetector", 31, 2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4E2FC(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_249E4E388(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X8>)
{
  id v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id i;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;

  v4 = a1;
  objc_msgSend(a1, sel_range);
  v70 = a2;
  v8 = sub_249F1F79C();
  v66 = a4;
  if ((v10 & 1) != 0)
  {
    v63 = 0;
    v65 = 15;
    v64 = 15;
  }
  else
  {
    v64 = v9;
    v65 = v8;
    v11 = objc_msgSend(v4, sel_isGeneric);
    if (objc_msgSend(v4, sel_isGroup))
      v11 |= 2u;
    if (objc_msgSend(v4, sel_hasAge))
      v11 |= 0x10u;
    if (objc_msgSend(v4, sel_hasGender))
      v11 |= 8u;
    v12 = objc_msgSend(v4, sel_hasEthnicity);
    v13 = v11 | 0x20;
    if (!v12)
      v13 = v11;
    v63 = v13;
  }
  v14 = objc_msgSend(v4, sel_ageSpans);
  sub_249D9D9F4(0, &qword_2578DAA90);
  v15 = sub_249F1F544();

  if (v15 >> 62)
    goto LABEL_27;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (i = v4; v16; i = v4)
  {
    v69 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v17 = 4;
    while (1)
    {
      v4 = (id)(v17 - 4);
      v19 = (v15 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24BD056B8](v17 - 4, v15)
          : *(id *)(v15 + 8 * v17);
      v20 = v19;
      v21 = v17 - 3;
      if (__OFADD__(v4, 1))
        break;
      swift_bridgeObjectRetain();
      v22 = v20;
      objc_msgSend(v22, sel_range);
      v23 = sub_249F1F79C();
      v25 = v24;
      v27 = v26;
      swift_bridgeObjectRelease();

      if ((v27 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v69 = sub_249DB23F8(0, v69[2] + 1, 1, v69);
        v29 = v69[2];
        v28 = v69[3];
        if (v29 >= v28 >> 1)
          v69 = sub_249DB23F8((_QWORD *)(v28 > 1), v29 + 1, 1, v69);
        v69[2] = v29 + 1;
        v18 = &v69[2 * v29];
        v18[4] = v23;
        v18[5] = v25;
      }
      ++v17;
      if (v21 == v16)
        goto LABEL_29;
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_249F1FBEC();
  }
  v69 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v30 = objc_msgSend(i, sel_genderSpans);
  v31 = sub_249F1F544();

  if (v31 >> 62)
    goto LABEL_44;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v32; v32 = sub_249F1FBEC())
  {
    v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v33 = 4;
    while (1)
    {
      v35 = (v31 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24BD056B8](v33 - 4, v31)
          : *(id *)(v31 + 8 * v33);
      v36 = v35;
      v37 = v33 - 3;
      if (__OFADD__(v33 - 4, 1))
        break;
      swift_bridgeObjectRetain();
      v38 = v36;
      objc_msgSend(v38, sel_range);
      v39 = sub_249F1F79C();
      v41 = v40;
      v43 = v42;
      swift_bridgeObjectRelease();

      if ((v43 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v68 = sub_249DB23F8(0, v68[2] + 1, 1, v68);
        v45 = v68[2];
        v44 = v68[3];
        if (v45 >= v44 >> 1)
          v68 = sub_249DB23F8((_QWORD *)(v44 > 1), v45 + 1, 1, v68);
        v68[2] = v45 + 1;
        v34 = &v68[2 * v45];
        v34[4] = v39;
        v34[5] = v41;
      }
      ++v33;
      if (v37 == v32)
        goto LABEL_46;
    }
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_46:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v46 = objc_msgSend(i, sel_ethnicitySpans);
  v47 = sub_249F1F544();

  if (v47 >> 62)
    goto LABEL_61;
  v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v48; v48 = sub_249F1FBEC())
  {
    v49 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v50 = 4;
    while (1)
    {
      v52 = (v47 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24BD056B8](v50 - 4, v47)
          : *(id *)(v47 + 8 * v50);
      v53 = v52;
      v54 = v50 - 3;
      if (__OFADD__(v50 - 4, 1))
        break;
      swift_bridgeObjectRetain();
      v55 = v53;
      objc_msgSend(v55, sel_range);
      v56 = sub_249F1F79C();
      v58 = v57;
      v60 = v59;
      swift_bridgeObjectRelease();

      if ((v60 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v49 = sub_249DB23F8(0, v49[2] + 1, 1, v49);
        v62 = v49[2];
        v61 = v49[3];
        if (v62 >= v61 >> 1)
          v49 = sub_249DB23F8((_QWORD *)(v61 > 1), v62 + 1, 1, v49);
        v49[2] = v62 + 1;
        v51 = &v49[2 * v62];
        v51[4] = v56;
        v51[5] = v58;
      }
      ++v50;
      if (v54 == v48)
        goto LABEL_63;
    }
    __break(1u);
LABEL_61:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v49 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_63:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  *(_QWORD *)v66 = v70;
  *(_QWORD *)(v66 + 8) = a3;
  *(_DWORD *)(v66 + 16) = v63;
  *(_QWORD *)(v66 + 24) = v69;
  *(_QWORD *)(v66 + 32) = v68;
  *(_QWORD *)(v66 + 40) = v49;
  *(_QWORD *)(v66 + 48) = v65;
  *(_QWORD *)(v66 + 56) = v64;
}

uint64_t sub_249E4E9F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v25[2];
  int v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    if (!v4)
      return v5;
    v30 = MEMORY[0x24BEE4AF8];
    result = sub_249DB68B0(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v30;
    v21 = v3 & 0xC000000000000001;
    v22 = v3;
    while (v4 != v7)
    {
      if (v21)
        v8 = (id)MEMORY[0x24BD056B8](v7, v3);
      else
        v8 = *(id *)(v3 + 8 * v7 + 32);
      v9 = v8;
      swift_bridgeObjectRetain();
      sub_249E4E388(v9, a2, a3, (uint64_t)v25);
      v10 = v25[0];
      v11 = v25[1];
      v12 = v26;
      v13 = v27;
      v14 = v28;
      v15 = v29;
      v30 = v5;
      v17 = *(_QWORD *)(v5 + 16);
      v16 = *(_QWORD *)(v5 + 24);
      if (v17 >= v16 >> 1)
      {
        v19 = v29;
        v20 = v27;
        sub_249DB68B0(v16 > 1, v17 + 1, 1);
        v15 = v19;
        v13 = v20;
        v5 = v30;
      }
      ++v7;
      *(_QWORD *)(v5 + 16) = v17 + 1;
      v18 = v5 + (v17 << 6);
      *(_QWORD *)(v18 + 32) = v10;
      *(_QWORD *)(v18 + 40) = v11;
      *(_DWORD *)(v18 + 48) = v12;
      *(_OWORD *)(v18 + 56) = v13;
      *(_QWORD *)(v18 + 72) = v14;
      *(_OWORD *)(v18 + 80) = v15;
      v3 = v22;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_249E4EB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_249F1E8D8();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E4EC10()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  os_signpost_id_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37[2];

  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 16);
  v35(v0[11], v0[7] + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask_id, v0[8]);
  v37[0] = 0x206B736154;
  v37[1] = 0xE500000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v0[12] = 0xE500000000000000;
  if (qword_2578D5CE8 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v37[0] = v5;
    *(_DWORD *)v4 = 136315138;
    swift_bridgeObjectRetain();
    v0[3] = sub_249E68CA8(0x206B736154, 0xE500000000000000, v37);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v2, v3, "%s assigning draw on image elements", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v5, -1, -1);
    MEMORY[0x24BD06618](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v6 = sub_249F1EE9C();
  v0[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v0[14] = v7;
  v8 = v7;
  v9 = swift_task_alloc();
  v0[15] = v9;
  if (qword_2578D5D80 != -1)
    swift_once();
  v11 = v0[10];
  v10 = v0[11];
  v12 = v0[8];
  v13 = sub_249F1EED8();
  __swift_project_value_buffer(v13, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v35(v11, v10, v12);
  v14 = sub_249F1EEC0();
  v15 = sub_249F1F8A4();
  v16 = sub_249F1F958();
  v17 = v9;
  v18 = v0[9];
  v19 = v0[10];
  v20 = v0[8];
  if ((v16 & 1) != 0)
  {
    v34 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v34, v17, v6);
    v21 = (uint8_t *)swift_slowAlloc();
    v36 = v6;
    v22 = swift_slowAlloc();
    v37[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v23 = sub_249F1FE08();
    v0[2] = sub_249E68CA8(v23, v24, v37);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v25(v19, v20);
    v26 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v14, v15, v26, "drawOnImageAssignment", "%{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v22, -1, -1);
    MEMORY[0x24BD06618](v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v34, v36);
    swift_task_dealloc();
  }
  else
  {

    v25 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v25(v19, v20);
  }
  v0[16] = v25;
  v28 = v0[6];
  v27 = v0[7];
  v29 = v0[5];
  swift_task_alloc();
  (*(void (**)(void))(v8 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[17] = sub_249F1EEFC();
  swift_task_dealloc();
  v30 = (_QWORD *)swift_task_alloc();
  v0[18] = v30;
  v30[2] = v27;
  v30[3] = 0x206B736154;
  v30[4] = 0xE500000000000000;
  v30[5] = v29;
  v30[6] = v28;
  v31 = swift_task_alloc();
  v0[19] = v31;
  *(_QWORD *)(v31 + 16) = 0x206B736154;
  *(_QWORD *)(v31 + 24) = 0xE500000000000000;
  v32 = (_QWORD *)swift_task_alloc();
  v0[20] = v32;
  type metadata accessor for DefinitionSession();
  *v32 = v0;
  v32[1] = sub_249E4F178;
  return sub_249F1FE38();
}

uint64_t sub_249E4F178()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249E4F200()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  sub_249DDDF68("drawOnImageAssignment", 21, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4F2AC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DDDF68("drawOnImageAssignment", 21, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E4F37C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_249E53FC4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  return v1;
}

id GenerativePlayground.DrawOnImageAssignmentTask.drawnOnImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

id GenerativePlayground.DrawOnImageAssignmentTask.sketchOverlayImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

id GenerativePlayground.DrawOnImageAssignmentTask.sketchMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

uint64_t GenerativePlayground.DrawOnImageAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.DrawOnImageAssignmentTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall GenerativePlayground.DrawOnImageAssignmentTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t GenerativePlayground.DrawOnImageAssignmentTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

uint64_t sub_249E4F588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[48] = a5;
  v6[49] = a6;
  v6[46] = a3;
  v6[47] = a4;
  v6[44] = a1;
  v6[45] = a2;
  return swift_task_switch();
}

uint64_t sub_249E4F5A8()
{
  uint64_t v0;
  __CVBuffer *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  double v17;
  double v18;
  size_t Width;
  uint64_t v20;
  CGImage *v21;
  size_t Height;
  uint64_t v23;
  void *v24;
  int v25;
  double v26;
  double v27;
  uint64_t v28;
  size_t v29;
  double v30;
  double v31;
  size_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  unint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  const char *v44;
  __CVBuffer *v46;
  size_t v47;
  uint64_t v48;
  void *v49;
  int v50;
  double v51;
  double v52;
  uint64_t v53;
  __CVBuffer *v54;
  size_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  unint64_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  __CVBuffer *v71;
  __CVBuffer *v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  __CVBuffer *v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t *);
  uint64_t v84;
  __CVBuffer *v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  id v97;
  id v98;
  id v99;
  _QWORD *v100;
  id v101;
  id v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  _QWORD *v109;
  void *v110;
  void (*v111)(uint64_t, uint64_t *);
  id v112;
  char v113;
  char v114;
  void *v115;
  void *v116;
  void *v117;
  char v118;
  void *v119;
  char v120;
  void *v121;
  char v122;
  uint64_t v123;
  __int128 v124;
  char v125;

  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 360);
  sub_249DE98FC(v4 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__definitionSession, v3);
  v5 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v0 + 400) = v5;
  v6 = *(int *)(v5 + 56);
  *(_DWORD *)(v0 + 76) = v6;
  v7 = v3 + v6;
  v8 = (int *)type metadata accessor for GenerationRecipe(0);
  v9 = v8[14];
  *(_DWORD *)(v0 + 92) = v9;
  v10 = v7 + v9;
  sub_249DC0768(*(_QWORD *)(v7 + v9), *(_QWORD *)(v7 + v9 + 8), *(_QWORD *)(v7 + v9 + 16), *(void **)(v7 + v9 + 24));
  *(_QWORD *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  v11 = v8[15];
  *(_DWORD *)(v0 + 108) = v11;
  v12 = v7 + v11;
  sub_249DC0768(*(_QWORD *)(v7 + v11), *(_QWORD *)(v7 + v11 + 8), *(_QWORD *)(v7 + v11 + 16), *(void **)(v7 + v11 + 24));
  *(_QWORD *)(v12 + 32) = 0;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  v13 = v7 + v8[18];
  sub_249DC0768(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(void **)(v13 + 24));
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  sub_249DC0768(*(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(void **)(v13 + 64));
  *(_OWORD *)(v13 + 65) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  v14 = v3 + *(int *)(v5 + 36);
  sub_249DC0824(*(void **)v14, *(_QWORD *)(v14 + 8), *(void **)(v14 + 16), *(_QWORD *)(v14 + 24), *(void **)(v14 + 32));
  *(_OWORD *)v14 = xmmword_249F21900;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_BYTE *)(v14 + 40) = 0;
  v15 = *(void **)(v4 + 16);
  *(_QWORD *)(v0 + 408) = v15;
  v16 = *(unsigned __int8 *)(v4 + 24);
  *(_BYTE *)(v0 + 73) = v16;
  if (!(_DWORD)v16)
  {
    v21 = v15;
    Width = CGImageGetWidth(v21);
    Height = CGImageGetHeight(v21);
LABEL_12:
    v20 = Height;

    goto LABEL_13;
  }
  if ((_DWORD)v16 != 1)
  {
    v21 = v15;
    Width = CVPixelBufferGetWidth(v21);
    Height = CVPixelBufferGetHeight(v21);
    goto LABEL_12;
  }
  objc_msgSend(v15, sel_extent);
  if (v17 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_89;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if ((*(_QWORD *)&v17 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v18 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_90;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  Width = (uint64_t)v17;
  v20 = (uint64_t)v18;
LABEL_13:
  v23 = *(_QWORD *)(v0 + 360);
  v24 = *(void **)(v23 + 32);
  *(_QWORD *)(v0 + 416) = v24;
  v25 = *(unsigned __int8 *)(v23 + 40);
  *(_BYTE *)(v0 + 74) = v25;
  if (v25)
  {
    if (v25 == 1)
    {
      objc_msgSend(v24, sel_extent);
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          if ((*(_QWORD *)&v26 & 0x7FF0000000000000) != 0x7FF0000000000000
            && (*(_QWORD *)&v27 & 0x7FF0000000000000) != 0x7FF0000000000000)
          {
            if (v27 > -9.22337204e18)
            {
              if (v27 < 9.22337204e18)
              {
                if (Width == (uint64_t)v26)
                {
                  v28 = (uint64_t)v27;
                  goto LABEL_26;
                }
LABEL_36:
                if (qword_2578D5CE8 != -1)
                  swift_once();
                v34 = sub_249F1EF38();
                __swift_project_value_buffer(v34, (uint64_t)qword_2578FF300);
                swift_bridgeObjectRetain_n();
                v35 = sub_249F1EF20();
                v36 = sub_249F1F820();
                v37 = os_log_type_enabled(v35, v36);
                v38 = *(_QWORD *)(v0 + 376);
                if (v37)
                {
                  v39 = *(_QWORD *)(v0 + 368);
                  v40 = (uint8_t *)swift_slowAlloc();
                  v41 = swift_slowAlloc();
                  v123 = v41;
                  *(_DWORD *)v40 = 136315138;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v0 + 344) = sub_249E68CA8(v39, v38, &v123);
                  sub_249F1F9AC();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_249D98000, v35, v36, "%s image and sketch overlay dimensions don't match", v40, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x24BD06618](v41, -1, -1);
                  MEMORY[0x24BD06618](v40, -1, -1);
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                }

                sub_249E53C88();
                swift_allocError();
                v43 = 0xD000000000000027;
                v44 = "image and sketch dimensions don't match";
                goto LABEL_42;
              }
LABEL_97:
              __break(1u);
              goto LABEL_98;
            }
LABEL_96:
            __break(1u);
            goto LABEL_97;
          }
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        goto LABEL_92;
      }
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    v1 = v24;
    v2 = (void *)CVPixelBufferGetWidth(v1);
    v29 = CVPixelBufferGetHeight(v1);
  }
  else
  {
    v1 = v24;
    v2 = (void *)CGImageGetWidth(v1);
    v29 = CGImageGetHeight(v1);
  }
  v28 = v29;

  if ((void *)Width != v2)
    goto LABEL_36;
LABEL_26:
  if (v20 != v28)
    goto LABEL_36;
  if ((_DWORD)v16)
  {
    if ((_DWORD)v16 == 1)
    {
      objc_msgSend(v15, sel_extent);
      if (v30 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v30 < 9.22337204e18)
      {
        if ((*(_QWORD *)&v30 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(_QWORD *)&v31 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v31 > -9.22337204e18)
          {
            if (v31 < 9.22337204e18)
            {
              v32 = (uint64_t)v30;
              v33 = (uint64_t)v31;
              goto LABEL_47;
            }
LABEL_103:
            __break(1u);
            goto LABEL_104;
          }
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      __break(1u);
      goto LABEL_101;
    }
    v46 = v15;
    v32 = CVPixelBufferGetWidth(v46);
    v47 = CVPixelBufferGetHeight(v46);
  }
  else
  {
    v46 = v15;
    v32 = CGImageGetWidth(v46);
    v47 = CGImageGetHeight(v46);
  }
  v33 = v47;

LABEL_47:
  v48 = *(_QWORD *)(v0 + 360);
  v49 = *(void **)(v48 + 48);
  *(_QWORD *)(v0 + 424) = v49;
  v50 = *(unsigned __int8 *)(v48 + 56);
  *(_BYTE *)(v0 + 75) = v50;
  v114 = v50;
  v115 = v49;
  if (v50)
  {
    if (v50 == 1)
    {
      objc_msgSend(v49, sel_extent);
      if (v51 > -9.22337204e18)
      {
        if (v51 < 9.22337204e18)
        {
          if ((*(_QWORD *)&v51 & 0x7FF0000000000000) != 0x7FF0000000000000
            && (*(_QWORD *)&v52 & 0x7FF0000000000000) != 0x7FF0000000000000)
          {
            if (v52 > -9.22337204e18)
            {
              if (v52 < 9.22337204e18)
              {
                if (v32 != (uint64_t)v51)
                  goto LABEL_63;
                v53 = (uint64_t)v52;
                goto LABEL_60;
              }
LABEL_108:
              __break(1u);
              goto LABEL_109;
            }
LABEL_107:
            __break(1u);
            goto LABEL_108;
          }
LABEL_106:
          __break(1u);
          goto LABEL_107;
        }
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    v54 = v49;
    v55 = CVPixelBufferGetWidth(v54);
    v56 = CVPixelBufferGetHeight(v54);
  }
  else
  {
    v54 = v49;
    v55 = CGImageGetWidth(v54);
    v56 = CGImageGetHeight(v54);
  }
  v53 = v56;

  if (v32 != v55)
    goto LABEL_63;
LABEL_60:
  if (v33 != v53)
  {
LABEL_63:
    if (qword_2578D5CE8 == -1)
    {
LABEL_64:
      v62 = sub_249F1EF38();
      __swift_project_value_buffer(v62, (uint64_t)qword_2578FF300);
      swift_bridgeObjectRetain_n();
      v63 = sub_249F1EF20();
      v64 = sub_249F1F820();
      v65 = os_log_type_enabled(v63, v64);
      v66 = *(_QWORD *)(v0 + 376);
      if (v65)
      {
        v67 = *(_QWORD *)(v0 + 368);
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = swift_slowAlloc();
        v123 = v69;
        *(_DWORD *)v68 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 312) = sub_249E68CA8(v67, v66, &v123);
        sub_249F1F9AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_249D98000, v63, v64, "%s image and sketch mask dimensions don't match", v68, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v69, -1, -1);
        MEMORY[0x24BD06618](v68, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_249E53C88();
      swift_allocError();
      v43 = 0xD00000000000002CLL;
      v44 = "image and sketch mask dimensions don't match";
LABEL_42:
      *(_QWORD *)v42 = v43;
      *(_QWORD *)(v42 + 8) = (unint64_t)(v44 - 32) | 0x8000000000000000;
      *(_BYTE *)(v42 + 16) = 1;
      swift_willThrow();
LABEL_43:
      sub_249DE95C8(*(_QWORD *)(v0 + 352));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
LABEL_98:
    swift_once();
    goto LABEL_64;
  }
  v57 = *(_QWORD *)(v0 + 360);
  v58 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller;
  *(_QWORD *)(v0 + 432) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller;
  v59 = (_QWORD *)(v57 + v58);
  v60 = *(_QWORD *)(v57 + v58 + 24);
  v61 = *(_QWORD *)(v57 + v58 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v57 + v58), v60);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v60, v61) & 1) != 0)
    goto LABEL_62;
  sub_249F1F670();
  if (qword_2578D5CE8 != -1)
    swift_once();
  v86 = sub_249F1EF38();
  *(_QWORD *)(v0 + 440) = __swift_project_value_buffer(v86, (uint64_t)qword_2578FF300);
  v87 = sub_249F1EF20();
  v88 = sub_249F1F82C();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v89 = 0;
    _os_log_impl(&dword_249D98000, v87, v88, "assigning base image and sketch mask", v89, 2u);
    MEMORY[0x24BD06618](v89, -1, -1);
  }
  v90 = *(_QWORD *)(v0 + 384);

  if (v90)
  {
    v111 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
    v91 = *(_QWORD *)(v0 + 360);
    v123 = (uint64_t)v15;
    *(_QWORD *)&v124 = v16;
    *((_QWORD *)&v124 + 1) = v115;
    v125 = v114;
    v92 = v115;
    v93 = v15;
    v111(v91, &v123);
    sub_249DC0794(v15, v16);
    sub_249DC0794(v115, v114);
  }
  v94 = v59[3];
  v95 = v59[4];
  __swift_project_boxed_opaque_existential_1(v59, v94);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v94, v95) & 1) != 0)
  {
LABEL_62:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v1 = (__CVBuffer *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    v2 = 0;
    v113 = -1;
    goto LABEL_69;
  }
  sub_249F1F670();
  v96 = *(_BYTE *)(*(_QWORD *)(v0 + 360) + 57);
  *(_BYTE *)(v0 + 89) = v96;
  if ((v96 & 1) != 0)
  {
    *(_QWORD *)(v0 + 128) = v15;
    *(_BYTE *)(v0 + 136) = v16;
    *(_QWORD *)(v0 + 144) = v24;
    *(_BYTE *)(v0 + 152) = v25;
    *(_QWORD *)(v0 + 160) = v115;
    *(_BYTE *)(v0 + 168) = v114;
    v97 = v15;
    v98 = v24;
    v99 = v115;
    v100 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v100;
    *v100 = v0;
    v100[1] = sub_249E512E4;
    return sub_249E532B4(v0 + 112, (uint64_t *)(v0 + 128), (uint64_t *)(v0 + 144), v0 + 160);
  }
  v119 = v15;
  v120 = v16;
  v121 = v24;
  v122 = v25;
  v123 = (uint64_t)v115;
  LOBYTE(v124) = v114;
  v112 = v115;
  v101 = v15;
  v102 = v24;
  sub_249E52F98((uint64_t)&v119, (uint64_t)&v121, (uint64_t)&v123, (uint64_t)&v117);

  v110 = v101;
  v103 = v59;
  v2 = v117;
  *(_QWORD *)(v0 + 448) = v117;
  v113 = v118;
  *(_BYTE *)(v0 + 90) = v118;
  v104 = v103[3];
  v105 = v103[4];
  __swift_project_boxed_opaque_existential_1(v103, v104);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v105 + 8))(v104, v105) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v1 = (__CVBuffer *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_69:
    if (qword_2578D5CE8 == -1)
    {
LABEL_70:
      v70 = sub_249F1EF38();
      __swift_project_value_buffer(v70, (uint64_t)qword_2578FF300);
      swift_bridgeObjectRetain();
      v71 = v1;
      swift_bridgeObjectRetain();
      v72 = v1;
      v73 = sub_249F1EF20();
      v74 = sub_249F1F820();
      v75 = os_log_type_enabled(v73, v74);
      v76 = *(_QWORD *)(v0 + 376);
      if (v75)
      {
        v116 = v2;
        v77 = *(_QWORD *)(v0 + 368);
        v78 = swift_slowAlloc();
        v79 = (_QWORD *)swift_slowAlloc();
        v80 = swift_slowAlloc();
        v123 = v80;
        *(_DWORD *)v78 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 272) = sub_249E68CA8(v77, v76, &v123);
        sub_249F1F9AC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v78 + 12) = 2112;
        v81 = v1;
        v82 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 336) = v82;
        sub_249F1F9AC();
        *v79 = v82;
        v2 = v116;

        _os_log_impl(&dword_249D98000, v73, v74, "%s base image or sketch rejected - %@", (uint8_t *)v78, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v79, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v80, -1, -1);
        MEMORY[0x24BD06618](v78, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      v83 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
      if (v83)
      {
        v84 = *(_QWORD *)(v0 + 360);
        v123 = (uint64_t)v1;
        v124 = xmmword_249F2A5B0;
        v125 = 0;
        v85 = v1;
        v83(v84, &v123);

      }
      swift_willThrow();
      sub_249DC0794(0, 255);
      sub_249DC0794(v2, v113);
      goto LABEL_43;
    }
LABEL_109:
    swift_once();
    goto LABEL_70;
  }
  sub_249F1F670();
  *(_QWORD *)(v0 + 192) = v15;
  *(_BYTE *)(v0 + 200) = v16;
  *(_QWORD *)(v0 + 176) = v24;
  *(_BYTE *)(v0 + 184) = v25;
  *(_QWORD *)(v0 + 96) = v115;
  *(_BYTE *)(v0 + 104) = v114;
  v106 = v110;
  v107 = v102;
  v108 = v112;
  v109 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v109;
  *v109 = v0;
  v109[1] = sub_249E50510;
  return sub_249E532B4(v0 + 240, (uint64_t *)(v0 + 192), (uint64_t *)(v0 + 176), v0 + 96);
}

uint64_t sub_249E50510()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  v4 = (void *)v2[52];
  v3 = (void *)v2[53];
  v5 = (void *)v2[51];

  return swift_task_switch();
}

uint64_t sub_249E5059C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void (*v24)(uint64_t, void **);
  uint64_t v25;
  id v26;
  void *v27;
  char v28;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  BOOL v53;
  unint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, void **);
  void *v60;
  void *v61;
  uint64_t v62;
  unsigned __int8 v63;
  char v64;
  id v65;
  id v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  void *v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  id v81;
  uint64_t v82;
  void (*v83)(uint64_t, void **);
  uint64_t v84;
  id v85;
  void *v86;
  void *v87;
  char v88;
  char v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  unint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  void (*v96)(uint64_t, void **);
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  _QWORD *v107;
  uint64_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  void *v114;
  __int128 v115;
  char v116;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 360) + *(_QWORD *)(v0 + 432));
  v2 = *(void **)(v0 + 240);
  v3 = *(unsigned __int8 *)(v0 + 248);
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v6 = (void *)swift_allocError();
    sub_249F1F1E4();
LABEL_3:
    swift_willThrow();
LABEL_5:

    v8 = *(_BYTE *)(v0 + 90);
    v9 = *(void **)(v0 + 448);
    if (qword_2578D5CE8 != -1)
      swift_once();
    v10 = sub_249F1EF38();
    __swift_project_value_buffer(v10, (uint64_t)qword_2578FF300);
    swift_bridgeObjectRetain();
    v11 = v6;
    swift_bridgeObjectRetain();
    v12 = v6;
    v13 = sub_249F1EF20();
    v14 = sub_249F1F820();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v0 + 376);
    if (v15)
    {
      v109 = v9;
      v17 = *(_QWORD *)(v0 + 368);
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v114 = (void *)v20;
      *(_DWORD *)v18 = 136315394;
      v112 = v8;
      swift_bridgeObjectRetain();
      v21 = v17;
      v9 = v109;
      *(_QWORD *)(v0 + 272) = sub_249E68CA8(v21, v16, (uint64_t *)&v114);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2112;
      v22 = v6;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 336) = v23;
      sub_249F1F9AC();
      *v19 = v23;
      v8 = v112;

      _os_log_impl(&dword_249D98000, v13, v14, "%s base image or sketch rejected - %@", (uint8_t *)v18, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v20, -1, -1);
      MEMORY[0x24BD06618](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v24 = *(void (**)(uint64_t, void **))(v0 + 384);
    if (v24)
    {
      v25 = *(_QWORD *)(v0 + 360);
      v114 = v6;
      v115 = xmmword_249F2A5B0;
      v116 = 0;
      v26 = v6;
      v24(v25, &v114);

    }
    swift_willThrow();
    sub_249DC0794(0, 255);
    v27 = v9;
    v28 = v8;
LABEL_13:
    sub_249DC0794(v27, v28);
    sub_249DE95C8(*(_QWORD *)(v0 + 352));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(void **)(v0 + 464);
  sub_249F1F670();
  v6 = v7;
  if (v7)
    goto LABEL_5;
  v30 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NonMaxLineSuppressFilter()), sel_init);
  if (v3)
  {
    if (v3 == 1)
      v31 = v2;
    else
      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v2);
  }
  else
  {
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v2);
  }
  v32 = v31;
  if (*(_BYTE *)(v0 + 75))
  {
    if (*(_BYTE *)(v0 + 75) == 1)
      v33 = *(id *)(v0 + 424);
    else
      v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, *(_QWORD *)(v0 + 424));
  }
  else
  {
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, *(_QWORD *)(v0 + 424));
  }
  v34 = v33;
  if (qword_2578D5D58 != -1)
    swift_once();
  v35 = (id)qword_2578FF3D0;
  objc_msgSend(v32, sel_extent);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  *(_QWORD *)(v0 + 48) = j_nullsub_1;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_249E5BAE0;
  *(_QWORD *)(v0 + 40) = &block_descriptor_5;
  v44 = _Block_copy((const void *)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E10);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_249F21910;
  v46 = sub_249E53CE4();
  *(_QWORD *)(v45 + 32) = v32;
  *(_QWORD *)(v45 + 88) = v46;
  *(_QWORD *)(v45 + 56) = v46;
  *(_QWORD *)(v45 + 64) = v34;
  v47 = v32;
  v48 = v34;
  v49 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v35, sel_applyWithExtent_roiCallback_arguments_, v44, v49, v37, v39, v41, v43);

  _Block_release(v44);
  if (!v50)
  {
    sub_249E53C88();
    v6 = (void *)swift_allocError();
    *(_QWORD *)v58 = 0xD000000000000014;
    *(_QWORD *)(v58 + 8) = 0x8000000249F36B20;
    *(_BYTE *)(v58 + 16) = 2;
    goto LABEL_3;
  }

  v113 = *(unsigned __int8 *)(v0 + 90);
  *(_BYTE *)(v0 + 105) = v113;
  *(_BYTE *)(v0 + 91) = 1;
  v110 = *(void **)(v0 + 448);
  *(_QWORD *)(v0 + 488) = v50;
  *(_QWORD *)(v0 + 496) = v110;
  swift_bridgeObjectRetain_n();
  v51 = sub_249F1EF20();
  v52 = sub_249F1F82C();
  v53 = os_log_type_enabled(v51, v52);
  v54 = *(_QWORD *)(v0 + 376);
  if (v53)
  {
    v55 = *(_QWORD *)(v0 + 368);
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    v114 = (void *)v57;
    *(_DWORD *)v56 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 304) = sub_249E68CA8(v55, v54, (uint64_t *)&v114);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v51, v52, "%s accepted prompt guidance sketch", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v57, -1, -1);
    MEMORY[0x24BD06618](v56, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v59 = *(void (**)(uint64_t, void **))(v0 + 384);
  if (v59)
  {
    v60 = *(void **)(v0 + 424);
    v62 = *(_QWORD *)(v0 + 360);
    v63 = *(_BYTE *)(v0 + 73);
    v64 = *(_BYTE *)(v0 + 75);
    v114 = *(void **)(v0 + 408);
    v61 = v114;
    *(_QWORD *)&v115 = v63 | 0x4000000000000000;
    *((_QWORD *)&v115 + 1) = v60;
    v116 = v64;
    v65 = v60;
    v66 = v61;
    v59(v62, &v114);
    sub_249DC0794(v61, v63);
    sub_249DC0794(v60, v64);
  }
  v67 = (_QWORD *)(*(_QWORD *)(v0 + 360) + *(_QWORD *)(v0 + 432));
  v68 = v67[3];
  v69 = v67[4];
  __swift_project_boxed_opaque_existential_1(v67, v68);
  v70 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
  sub_249DC07A8(v50, 1);
  sub_249DC07A8(v110, v113);
  if ((v70(v68, v69) & 1) != 0)
    goto LABEL_34;
  sub_249F1F670();
  swift_bridgeObjectRetain_n();
  v90 = sub_249F1EF20();
  v91 = sub_249F1F82C();
  v92 = os_log_type_enabled(v90, v91);
  v93 = *(_QWORD *)(v0 + 376);
  if (v92)
  {
    v108 = *(_QWORD *)(v0 + 368);
    v94 = (uint8_t *)swift_slowAlloc();
    v95 = swift_slowAlloc();
    v114 = (void *)v95;
    *(_DWORD *)v94 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 296) = sub_249E68CA8(v108, v93, (uint64_t *)&v114);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v90, v91, "%s assigning scribble images", v94, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v95, -1, -1);
    MEMORY[0x24BD06618](v94, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v96 = *(void (**)(uint64_t, void **))(v0 + 384);
  if (v96)
  {
    v97 = *(_QWORD *)(v0 + 360);
    v114 = v110;
    *(_QWORD *)&v115 = v113 | 0x6000000000000000;
    *((_QWORD *)&v115 + 1) = v50;
    v116 = 1;
    sub_249DC07A8(v50, 1);
    sub_249DC07A8(v110, v113);
    v96(v97, &v114);
    sub_249DC0794(v110, v113);
    sub_249DC0794(v50, 1);
  }
  v98 = (_QWORD *)(*(_QWORD *)(v0 + 360) + *(_QWORD *)(v0 + 432));
  v99 = v98[3];
  v100 = v98[4];
  __swift_project_boxed_opaque_existential_1(v98, v99);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v100 + 8))(v99, v100) & 1) != 0)
  {
LABEL_34:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v71 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_bridgeObjectRetain();
    v72 = v71;
    swift_bridgeObjectRetain();
    v73 = v71;
    v74 = sub_249F1EF20();
    v75 = sub_249F1F820();
    v76 = os_log_type_enabled(v74, v75);
    v77 = *(_QWORD *)(v0 + 376);
    if (v76)
    {
      v78 = *(_QWORD *)(v0 + 368);
      v79 = swift_slowAlloc();
      v80 = (_QWORD *)swift_slowAlloc();
      v111 = swift_slowAlloc();
      v114 = (void *)v111;
      *(_DWORD *)v79 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 328) = sub_249E68CA8(v78, v77, (uint64_t *)&v114);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v79 + 12) = 2112;
      v81 = v71;
      v82 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 320) = v82;
      sub_249F1F9AC();
      *v80 = v82;

      _os_log_impl(&dword_249D98000, v74, v75, "%s prompt scribble images - %@", (uint8_t *)v79, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v80, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v111, -1, -1);
      MEMORY[0x24BD06618](v79, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v83 = *(void (**)(uint64_t, void **))(v0 + 384);
    if (v83)
    {
      v84 = *(_QWORD *)(v0 + 360);
      v114 = v71;
      v115 = xmmword_249F2A5C0;
      v116 = 0;
      v85 = v71;
      v83(v84, &v114);

    }
    v86 = *(void **)(v0 + 488);
    v87 = *(void **)(v0 + 496);
    v88 = *(_BYTE *)(v0 + 91);
    v89 = *(_BYTE *)(v0 + 105);
    swift_willThrow();
    sub_249DC0794(v86, v88);
    sub_249DC0794(v87, v89);
    sub_249DC0794(v86, v88);
    v27 = v87;
    v28 = v89;
    goto LABEL_13;
  }
  sub_249F1F670();
  v101 = *(_BYTE *)(v0 + 89);
  v102 = *(_BYTE *)(v0 + 75);
  v104 = *(_QWORD *)(v0 + 416);
  v103 = *(_QWORD *)(v0 + 424);
  v105 = *(_BYTE *)(v0 + 74);
  v106 = *(_BYTE *)(v0 + 73);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 408);
  *(_BYTE *)(v0 + 216) = v106;
  *(_QWORD *)(v0 + 224) = v104;
  *(_BYTE *)(v0 + 232) = v105;
  *(_QWORD *)(v0 + 64) = v103;
  *(_BYTE *)(v0 + 72) = v102;
  *(_QWORD *)(v0 + 80) = v110;
  *(_BYTE *)(v0 + 88) = v113;
  *(_QWORD *)(v0 + 256) = v50;
  *(_BYTE *)(v0 + 264) = 1;
  v107 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v107;
  *v107 = v0;
  v107[1] = sub_249E51F58;
  return sub_249E9D4EC((uint64_t *)(v0 + 208), (uint64_t *)(v0 + 224), (uint64_t *)(v0 + 64), (v101 & 1) == 0, (uint64_t *)(v0 + 80), (uint64_t *)(v0 + 256));
}

uint64_t sub_249E512E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  v4 = (void *)v2[52];
  v3 = (void *)v2[53];
  v5 = (void *)v2[51];

  return swift_task_switch();
}

uint64_t sub_249E51370()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void (*v29)(uint64_t, void **);
  uint64_t v30;
  id v31;
  void *v32;
  char v33;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  _BOOL4 v43;
  unint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint8_t *v48;
  void (*v49)(uint64_t, void **);
  void *v50;
  void *v51;
  uint64_t v52;
  unsigned __int8 v53;
  char v54;
  id v55;
  id v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  void *v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  uint64_t v73;
  void (*v74)(uint64_t, void **);
  uint64_t v75;
  id v76;
  void *v77;
  void *v78;
  char v79;
  char v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  unint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint8_t *v87;
  void (*v88)(uint64_t, void **);
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  void *v108;
  unsigned __int8 v109;
  id v110;
  char v111;
  void *v112;
  __int128 v113;
  char v114;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 360) + *(_QWORD *)(v0 + 432));
  v2 = *(void **)(v0 + 112);
  v107 = *(_BYTE *)(v0 + 120);
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v5 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_5:
    v12 = 0;
    LOBYTE(v13) = -1;
LABEL_6:
    v103 = v13;
    if (qword_2578D5CE8 != -1)
      swift_once();
    v14 = sub_249F1EF38();
    __swift_project_value_buffer(v14, (uint64_t)qword_2578FF300);
    swift_bridgeObjectRetain();
    v15 = v5;
    swift_bridgeObjectRetain();
    v16 = v5;
    v17 = sub_249F1EF20();
    v18 = sub_249F1F820();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 376);
    if (v19)
    {
      v100 = v2;
      v21 = *(_QWORD *)(v0 + 368);
      v22 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v112 = (void *)v24;
      *(_DWORD *)v22 = 136315394;
      v101 = v12;
      v25 = v5;
      swift_bridgeObjectRetain();
      v26 = v21;
      v2 = v100;
      *(_QWORD *)(v0 + 272) = sub_249E68CA8(v26, v20, (uint64_t *)&v112);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2112;
      v27 = v5;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 336) = v28;
      sub_249F1F9AC();
      *v23 = v28;
      v5 = v25;
      v12 = v101;

      _os_log_impl(&dword_249D98000, v17, v18, "%s base image or sketch rejected - %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v24, -1, -1);
      MEMORY[0x24BD06618](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v29 = *(void (**)(uint64_t, void **))(v0 + 384);
    if (v29)
    {
      v30 = *(_QWORD *)(v0 + 360);
      v112 = v5;
      v113 = xmmword_249F2A5B0;
      v114 = 0;
      v31 = v5;
      v29(v30, &v112);

    }
    swift_willThrow();
    sub_249DC0794(v2, v107);
    v32 = v12;
    v33 = v103;
LABEL_14:
    sub_249DC0794(v32, v33);
    sub_249DE95C8(*(_QWORD *)(v0 + 352));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(void **)(v0 + 480);
  sub_249F1F670();
  v5 = v6;
  if (v6)
    goto LABEL_5;
  v7 = *(_BYTE *)(v0 + 74);
  v8 = *(_BYTE *)(v0 + 73);
  v9 = *(void **)(v0 + 416);
  v110 = *(id *)(v0 + 408);
  v111 = v8;
  v112 = v9;
  LOBYTE(v113) = v7;
  v10 = v110;
  v11 = v9;
  sub_249E53630((uint64_t)&v110, (uint64_t)&v112, (uint64_t)&v108);
  v35 = *(_QWORD *)(v0 + 432);
  v36 = *(void **)(v0 + 408);
  v37 = *(_QWORD *)(v0 + 360);

  v38 = (_QWORD *)(v37 + v35);
  v12 = v108;
  v13 = v109;
  v39 = *(_QWORD *)(v37 + v35 + 24);
  v40 = *(_QWORD *)(v37 + v35 + 32);
  __swift_project_boxed_opaque_existential_1(v38, v39);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v5 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    goto LABEL_6;
  }
  sub_249F1F670();
  *(_BYTE *)(v0 + 105) = v13;
  *(_BYTE *)(v0 + 91) = v107;
  *(_QWORD *)(v0 + 488) = v2;
  *(_QWORD *)(v0 + 496) = v12;
  swift_bridgeObjectRetain_n();
  v41 = sub_249F1EF20();
  v42 = sub_249F1F82C();
  v43 = os_log_type_enabled(v41, (os_log_type_t)v42);
  v44 = *(_QWORD *)(v0 + 376);
  v102 = v12;
  if (v43)
  {
    v104 = *(_QWORD *)(v0 + 368);
    v45 = v13;
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v112 = (void *)v47;
    *(_DWORD *)v46 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 304) = sub_249E68CA8(v104, v44, (uint64_t *)&v112);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v41, (os_log_type_t)v42, "%s accepted prompt guidance sketch", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v47, -1, -1);
    v48 = v46;
    v13 = v45;
    MEMORY[0x24BD06618](v48, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v49 = *(void (**)(uint64_t, void **))(v0 + 384);
  if (v49)
  {
    v50 = *(void **)(v0 + 424);
    v52 = *(_QWORD *)(v0 + 360);
    v53 = *(_BYTE *)(v0 + 73);
    v54 = *(_BYTE *)(v0 + 75);
    v112 = *(void **)(v0 + 408);
    v51 = v112;
    *(_QWORD *)&v113 = v53 | 0x4000000000000000;
    *((_QWORD *)&v113 + 1) = v50;
    v114 = v54;
    v55 = v50;
    v56 = v51;
    v49(v52, &v112);
    sub_249DC0794(v51, v53);
    sub_249DC0794(v50, v54);
  }
  v57 = (_QWORD *)(*(_QWORD *)(v0 + 360) + *(_QWORD *)(v0 + 432));
  v58 = v57[3];
  v59 = v57[4];
  __swift_project_boxed_opaque_existential_1(v57, v58);
  v60 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8);
  sub_249DC07A8(v2, v107);
  sub_249DC07A8(v102, v13);
  if ((v60(v58, v59) & 1) != 0)
    goto LABEL_23;
  sub_249F1F670();
  swift_bridgeObjectRetain_n();
  v81 = sub_249F1EF20();
  v82 = sub_249F1F82C();
  v83 = os_log_type_enabled(v81, v82);
  v84 = *(_QWORD *)(v0 + 376);
  if (v83)
  {
    v99 = *(_QWORD *)(v0 + 368);
    v106 = v13;
    v85 = (uint8_t *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v112 = (void *)v86;
    *(_DWORD *)v85 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 296) = sub_249E68CA8(v99, v84, (uint64_t *)&v112);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v81, v82, "%s assigning scribble images", v85, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v86, -1, -1);
    v87 = v85;
    v13 = v106;
    MEMORY[0x24BD06618](v87, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v88 = *(void (**)(uint64_t, void **))(v0 + 384);
  if (v88)
  {
    v89 = *(_QWORD *)(v0 + 360);
    v112 = v102;
    *(_QWORD *)&v113 = v13 | 0x6000000000000000;
    *((_QWORD *)&v113 + 1) = v2;
    v114 = v107;
    sub_249DC07A8(v2, v107);
    sub_249DC07A8(v102, v13);
    v88(v89, &v112);
    sub_249DC0794(v102, v13);
    sub_249DC0794(v2, v107);
  }
  v90 = (_QWORD *)(*(_QWORD *)(v0 + 360) + *(_QWORD *)(v0 + 432));
  v91 = v90[3];
  v92 = v90[4];
  __swift_project_boxed_opaque_existential_1(v90, v91);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v91, v92) & 1) != 0)
  {
LABEL_23:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v61 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_bridgeObjectRetain();
    v62 = v61;
    swift_bridgeObjectRetain();
    v63 = v61;
    v64 = sub_249F1EF20();
    v65 = sub_249F1F820();
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 376);
    if (v66)
    {
      v68 = v61;
      v69 = *(_QWORD *)(v0 + 368);
      v70 = swift_slowAlloc();
      v71 = (_QWORD *)swift_slowAlloc();
      v105 = swift_slowAlloc();
      v112 = (void *)v105;
      *(_DWORD *)v70 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 328) = sub_249E68CA8(v69, v67, (uint64_t *)&v112);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 12) = 2112;
      v72 = v68;
      v73 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 320) = v73;
      v61 = v68;
      sub_249F1F9AC();
      *v71 = v73;

      _os_log_impl(&dword_249D98000, v64, v65, "%s prompt scribble images - %@", (uint8_t *)v70, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v71, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v105, -1, -1);
      MEMORY[0x24BD06618](v70, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v74 = *(void (**)(uint64_t, void **))(v0 + 384);
    if (v74)
    {
      v75 = *(_QWORD *)(v0 + 360);
      v112 = v61;
      v113 = xmmword_249F2A5C0;
      v114 = 0;
      v76 = v61;
      v74(v75, &v112);

    }
    v77 = *(void **)(v0 + 488);
    v78 = *(void **)(v0 + 496);
    v79 = *(_BYTE *)(v0 + 91);
    v80 = *(_BYTE *)(v0 + 105);
    swift_willThrow();
    sub_249DC0794(v77, v79);
    sub_249DC0794(v78, v80);
    sub_249DC0794(v77, v79);
    v32 = v78;
    v33 = v80;
    goto LABEL_14;
  }
  sub_249F1F670();
  v93 = *(_BYTE *)(v0 + 89);
  v94 = *(_BYTE *)(v0 + 75);
  v96 = *(_QWORD *)(v0 + 416);
  v95 = *(_QWORD *)(v0 + 424);
  v97 = *(_BYTE *)(v0 + 74);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 408);
  *(_BYTE *)(v0 + 216) = *(_BYTE *)(v0 + 73);
  *(_QWORD *)(v0 + 224) = v96;
  *(_BYTE *)(v0 + 232) = v97;
  *(_QWORD *)(v0 + 64) = v95;
  *(_QWORD *)(v0 + 80) = v102;
  *(_BYTE *)(v0 + 72) = v94;
  *(_BYTE *)(v0 + 88) = v13;
  *(_QWORD *)(v0 + 256) = v2;
  *(_BYTE *)(v0 + 264) = v107;
  v98 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v98;
  *v98 = v0;
  v98[1] = sub_249E51F58;
  return sub_249E9D4EC((uint64_t *)(v0 + 208), (uint64_t *)(v0 + 224), (uint64_t *)(v0 + 64), (v93 & 1) == 0, (uint64_t *)(v0 + 80), (uint64_t *)(v0 + 256));
}

uint64_t sub_249E51F58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E51FBC()
{
  uint64_t v0;
  void *v1;
  char v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __CVBuffer *v8;
  size_t Width;
  size_t Height;
  OSType PixelFormatType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  char v23;
  NSObject *v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t *);
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  char v41;
  char v42;
  uint64_t (*v43)(void);
  uint64_t v45;
  __CVBuffer *v46;
  size_t v47;
  size_t v48;
  OSType v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  BOOL v53;
  unint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t *);
  uint64_t v59;
  char v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  char v71;

  v1 = *(void **)(v0 + 512);
  v2 = *(_BYTE *)(v0 + 105);
  v69 = *(_QWORD *)(v0 + 496);
  LOBYTE(v70) = v2;
  v3 = sub_249E9F178(&v69);
  v4 = v1;
  if (v1)
  {
    swift_bridgeObjectRetain();
    v25 = v1;
    swift_bridgeObjectRetain();
    v26 = v1;
    v27 = sub_249F1EF20();
    v28 = sub_249F1F820();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 376);
    if (v29)
    {
      v31 = *(_QWORD *)(v0 + 368);
      v32 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v69 = v68;
      *(_DWORD *)v32 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 328) = sub_249E68CA8(v31, v30, &v69);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2112;
      v34 = v4;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 320) = v35;
      sub_249F1F9AC();
      *v33 = v35;

      _os_log_impl(&dword_249D98000, v27, v28, "%s prompt scribble images - %@", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v33, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v68, -1, -1);
      MEMORY[0x24BD06618](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v36 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
    if (v36)
    {
      v37 = *(_QWORD *)(v0 + 360);
      v69 = (uint64_t)v4;
      v70 = xmmword_249F2A5C0;
      v71 = 0;
      v38 = v4;
      v36(v37, &v69);

    }
    v40 = *(void **)(v0 + 488);
    v39 = *(void **)(v0 + 496);
    v41 = *(_BYTE *)(v0 + 91);
    v42 = *(_BYTE *)(v0 + 105);
    swift_willThrow();
    sub_249DC0794(v40, v41);
    sub_249DC0794(v39, v42);
    sub_249DC0794(v40, v41);
    sub_249DC0794(v39, v42);
    sub_249DE95C8(*(_QWORD *)(v0 + 352));
    v43 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v67 = *(_BYTE *)(v0 + 105);
    v5 = *(void **)(v0 + 496);
    v66 = *(_QWORD *)(v0 + 400);
    v6 = *(_QWORD *)(v0 + 352);
    v7 = v6 + *(int *)(v0 + 76) + *(int *)(v0 + 92);
    v8 = v3;
    Width = CVPixelBufferGetWidth(v8);
    Height = CVPixelBufferGetHeight(v8);
    PixelFormatType = CVPixelBufferGetPixelFormatType(v8);
    type metadata accessor for ResolvedImage.HiddenBufferData();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_249F21920;
    sub_249DC0768(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(void **)(v7 + 24));

    *(_QWORD *)v7 = Width;
    *(_QWORD *)(v7 + 8) = Height;
    *(_QWORD *)(v7 + 16) = PixelFormatType;
    *(_QWORD *)(v7 + 24) = v8;
    *(_QWORD *)(v7 + 32) = v12;
    v13 = v6 + *(int *)(v66 + 28);
    v14 = *(void **)v13;
    LOBYTE(v8) = *(_BYTE *)(v13 + 8);
    v15 = v5;
    sub_249DC0794(v14, (char)v8);
    *(_QWORD *)v13 = v5;
    *(_BYTE *)(v13 + 8) = v67;
    swift_bridgeObjectRetain_n();
    v16 = sub_249F1EF20();
    v17 = sub_249F1F82C();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 376);
    if (v18)
    {
      v20 = *(_QWORD *)(v0 + 368);
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v69 = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 288) = sub_249E68CA8(v20, v19, &v69);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v16, v17, "%s accepted blended scribble color image", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v22, -1, -1);
      MEMORY[0x24BD06618](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v23 = *(_BYTE *)(v0 + 91);
    v69 = *(_QWORD *)(v0 + 488);
    LOBYTE(v70) = v23;
    v24 = sub_249E9F1A4(&v69);
    v45 = *(_QWORD *)(v0 + 352) + *(int *)(v0 + 76) + *(int *)(v0 + 108);
    v46 = v24;
    v47 = CVPixelBufferGetWidth(v46);
    v48 = CVPixelBufferGetHeight(v46);
    v49 = CVPixelBufferGetPixelFormatType(v46);
    v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_249F21920;
    sub_249DC0768(*(_QWORD *)v45, *(_QWORD *)(v45 + 8), *(_QWORD *)(v45 + 16), *(void **)(v45 + 24));

    *(_QWORD *)v45 = v47;
    *(_QWORD *)(v45 + 8) = v48;
    *(_QWORD *)(v45 + 16) = v49;
    *(_QWORD *)(v45 + 24) = v46;
    *(_QWORD *)(v45 + 32) = v50;
    swift_bridgeObjectRetain_n();
    v51 = sub_249F1EF20();
    v52 = sub_249F1F82C();
    v53 = os_log_type_enabled(v51, v52);
    v54 = *(_QWORD *)(v0 + 376);
    if (v53)
    {
      v55 = *(_QWORD *)(v0 + 368);
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v69 = v57;
      *(_DWORD *)v56 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 280) = sub_249E68CA8(v55, v54, &v69);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v51, v52, "%s accepted blended scribble edge image", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v57, -1, -1);
      MEMORY[0x24BD06618](v56, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v58 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
    v59 = *(unsigned __int8 *)(v0 + 105);
    v60 = *(_BYTE *)(v0 + 91);
    v62 = *(void **)(v0 + 488);
    v61 = *(void **)(v0 + 496);
    if (v58)
    {
      v63 = *(_QWORD *)(v0 + 360);
      v69 = *(_QWORD *)(v0 + 496);
      *(_QWORD *)&v70 = v59 | 0xA000000000000000;
      *((_QWORD *)&v70 + 1) = v62;
      v71 = v60;
      sub_249DC07A8(v62, v60);
      sub_249DC07A8(v61, v59);
      v58(v63, &v69);
      sub_249DC0794(v62, v60);
      sub_249DC0794(v61, v59);
      sub_249DC0794(v61, v59);
      sub_249DC0794(v62, v60);
      sub_249DC0794(v61, v59);
      v64 = v62;
      v65 = v60;
    }
    else
    {
      sub_249DC0794(*(id *)(v0 + 488), *(_BYTE *)(v0 + 91));
      sub_249DC0794(v61, v59);
      sub_249DC0794(v62, v60);
      v64 = v61;
      v65 = v59;
    }
    sub_249DC0794(v64, v65);
    v43 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v43();
}

uint64_t sub_249E5273C()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t *);
  uint64_t v19;
  id v20;
  void *v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  char v26;

  v1 = *(void **)(v0 + 464);
  v2 = *(_BYTE *)(v0 + 90);
  v3 = *(void **)(v0 + 448);
  if (qword_2578D5CE8 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain();
  v5 = v1;
  swift_bridgeObjectRetain();
  v6 = v1;
  v7 = sub_249F1EF20();
  v8 = sub_249F1F820();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 376);
  if (v9)
  {
    v11 = *(_QWORD *)(v0 + 368);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v22 = v3;
    v14 = swift_slowAlloc();
    v24 = v14;
    *(_DWORD *)v12 = 136315394;
    v23 = v2;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 272) = sub_249E68CA8(v11, v10, &v24);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    v15 = v1;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 336) = v16;
    sub_249F1F9AC();
    *v13 = v16;
    v2 = v23;

    _os_log_impl(&dword_249D98000, v7, v8, "%s base image or sketch rejected - %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v13, -1, -1);
    swift_arrayDestroy();
    v17 = v14;
    v3 = v22;
    MEMORY[0x24BD06618](v17, -1, -1);
    MEMORY[0x24BD06618](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v18 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
  if (v18)
  {
    v19 = *(_QWORD *)(v0 + 360);
    v24 = (uint64_t)v1;
    v25 = xmmword_249F2A5B0;
    v26 = 0;
    v20 = v1;
    v18(v19, &v24);

  }
  swift_willThrow();
  sub_249DC0794(0, 255);
  sub_249DC0794(v3, v2);
  sub_249DE95C8(*(_QWORD *)(v0 + 352));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E52A20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t *);
  uint64_t v16;
  id v17;
  uint64_t v19;
  __int128 v20;
  char v21;

  v1 = *(void **)(v0 + 480);
  if (qword_2578D5CE8 != -1)
    swift_once();
  v2 = sub_249F1EF38();
  __swift_project_value_buffer(v2, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_249F1EF20();
  v6 = sub_249F1F820();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 376);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 368);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 272) = sub_249E68CA8(v9, v8, &v19);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    v13 = v1;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 336) = v14;
    sub_249F1F9AC();
    *v11 = v14;

    _os_log_impl(&dword_249D98000, v5, v6, "%s base image or sketch rejected - %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v12, -1, -1);
    MEMORY[0x24BD06618](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v15 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + 360);
    v19 = (uint64_t)v1;
    v20 = xmmword_249F2A5B0;
    v21 = 0;
    v17 = v1;
    v15(v16, &v19);

  }
  swift_willThrow();
  sub_249DC0794(0, 255);
  sub_249DC0794(0, 255);
  sub_249DE95C8(*(_QWORD *)(v0 + 352));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E52CEC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t *);
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char v23;

  v1 = *(void **)(v0 + 512);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_249F1EF20();
  v5 = sub_249F1F820();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 376);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 328) = sub_249E68CA8(v6, v7, &v21);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 320) = v11;
    sub_249F1F9AC();
    *v9 = v11;

    _os_log_impl(&dword_249D98000, v4, v5, "%s prompt scribble images - %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v20, -1, -1);
    MEMORY[0x24BD06618](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v12 = *(void (**)(uint64_t, uint64_t *))(v0 + 384);
  if (v12)
  {
    v13 = *(_QWORD *)(v0 + 360);
    v21 = (uint64_t)v1;
    v22 = xmmword_249F2A5C0;
    v23 = 0;
    v14 = v1;
    v12(v13, &v21);

  }
  v16 = *(void **)(v0 + 488);
  v15 = *(void **)(v0 + 496);
  v17 = *(_BYTE *)(v0 + 91);
  v18 = *(_BYTE *)(v0 + 105);
  swift_willThrow();
  sub_249DC0794(v16, v17);
  sub_249DC0794(v15, v18);
  sub_249DC0794(v16, v17);
  sub_249DC0794(v15, v18);
  sub_249DE95C8(*(_QWORD *)(v0 + 352));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E52F98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  v8 = *(unsigned __int8 *)(a2 + 8);
  v9 = *(void **)a3;
  v10 = *(unsigned __int8 *)(a3 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v6);
    goto LABEL_7;
  }
  if (*(_BYTE *)(a1 + 8) != 1)
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v6);
LABEL_7:
    v11 = v13;
    if (!v8)
      goto LABEL_4;
    goto LABEL_8;
  }
  v11 = v6;
  if (!v8)
  {
LABEL_4:
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v7);
    goto LABEL_12;
  }
LABEL_8:
  if (v8 == 1)
  {
    v14 = v7;
    if (v10)
      goto LABEL_13;
LABEL_10:
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v9);
    goto LABEL_16;
  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v7);
LABEL_12:
  v14 = v12;
  if (!v10)
    goto LABEL_10;
LABEL_13:
  if (v10 == 1)
    v15 = v9;
  else
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v9);
LABEL_16:
  v16 = v15;
  v17 = sub_249E53D20(0x57646E656C424943, 0xEF6B73614D687469);
  if (v4)
  {
    v18 = v16;
LABEL_18:

    return;
  }
  v18 = v17;
  objc_msgSend(v17, sel_setValue_forKey_, v11, *MEMORY[0x24BDBF928]);
  objc_msgSend(v18, sel_setValue_forKey_, v16, *MEMORY[0x24BDBF970]);
  objc_msgSend(v18, sel_setValue_forKey_, v14, *MEMORY[0x24BDBF960]);
  v19 = objc_msgSend(v18, sel_outputImage);
  if (!v19)
  {
    if (qword_2578D5CE8 != -1)
      swift_once();
    v21 = sub_249F1EF38();
    __swift_project_value_buffer(v21, (uint64_t)qword_2578FF300);
    v22 = sub_249F1EF20();
    v23 = sub_249F1F820();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_249D98000, v22, v23, "failed to blend image", v24, 2u);
      MEMORY[0x24BD06618](v24, -1, -1);
    }

    sub_249E53C88();
    swift_allocError();
    *(_QWORD *)v25 = 0xD000000000000015;
    *(_QWORD *)(v25 + 8) = 0x8000000249F36B40;
    *(_BYTE *)(v25 + 16) = 2;
    swift_willThrow();

    v14 = v16;
    goto LABEL_18;
  }
  v20 = v19;

  *(_QWORD *)a4 = v20;
  *(_BYTE *)(a4 + 8) = 1;
}

uint64_t sub_249E532B4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *a2;
  *(_BYTE *)(v5 + 56) = *((_BYTE *)a2 + 8);
  v7 = *a3;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v7;
  *(_BYTE *)(v5 + 57) = *((_BYTE *)a3 + 8);
  *(_QWORD *)(v5 + 48) = *(_QWORD *)a4;
  *(_BYTE *)(v5 + 58) = *(_BYTE *)(a4 + 8);
  return swift_task_switch();
}

uint64_t sub_249E532F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t (*v9)(void);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  void *v23;
  char v24;
  void *v25;
  char v26;
  uint64_t v27;
  char v28;

  type metadata accessor for HEDEdgeDetector();
  swift_allocObject();
  sub_249EAB67C();
  v1 = (_QWORD *)(*(_QWORD *)(v0 + 24)
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_9:
    swift_release();
LABEL_10:
    v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  sub_249F1F670();
  v4 = *(_BYTE *)(v0 + 56);
  v27 = *(_QWORD *)(v0 + 32);
  v28 = v4;
  v5 = (void *)sub_249EAB900((uint64_t)&v27, 0);
  v6 = v1[3];
  v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();

    goto LABEL_9;
  }
  sub_249F1F670();
  v8 = *(_BYTE *)(v0 + 57);
  v27 = *(_QWORD *)(v0 + 40);
  v28 = v8;
  v11 = (void *)sub_249EAB900((uint64_t)&v27, 1);
  v12 = v1[3];
  v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if ((v14 & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_release();

    goto LABEL_10;
  }
  sub_249F1F670();
  v15 = *(_BYTE *)(v0 + 58);
  v16 = *(_QWORD *)(v0 + 48);
  v23 = v5;
  v24 = 1;
  v25 = v11;
  v26 = 1;
  v27 = v16;
  v28 = v15;
  v17 = v5;
  v18 = v11;
  sub_249E52F98((uint64_t)&v23, (uint64_t)&v25, (uint64_t)&v27, (uint64_t)&v21);
  swift_release();

  v19 = *(_QWORD *)(v0 + 16);
  v20 = v22;
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v20;
  v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_249E53630(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v5;
  int v6;
  void *v7;
  int v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;

  v5 = *(void **)a1;
  v6 = *(unsigned __int8 *)(a1 + 8);
  v7 = *(void **)a2;
  v8 = *(unsigned __int8 *)(a2 + 8);
  v9 = sub_249E53D20(0xD000000000000017, 0x8000000249F36B60);
  if (!v3)
  {
    v10 = v9;
    if (v8)
    {
      if (v8 == 1)
        v11 = v7;
      else
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v7);
    }
    else
    {
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v7);
    }
    v12 = v11;
    v13 = (void *)sub_249F1F304();
    objc_msgSend(v10, sel_setValue_forKey_, v12, v13);

    if (v6)
    {
      if (v6 == 1)
        v14 = v5;
      else
        v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v5);
    }
    else
    {
      v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v5);
    }
    v15 = v14;
    v16 = (void *)sub_249F1F304();
    objc_msgSend(v10, sel_setValue_forKey_, v15, v16);

    v17 = objc_msgSend(v10, sel_outputImage);
    if (v17)
    {
      v18 = v17;

      *(_QWORD *)a3 = v18;
      *(_BYTE *)(a3 + 8) = 1;
    }
    else
    {
      if (qword_2578D5CE8 != -1)
        swift_once();
      v19 = sub_249F1EF38();
      __swift_project_value_buffer(v19, (uint64_t)qword_2578FF300);
      v20 = sub_249F1EF20();
      v21 = sub_249F1F820();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_249D98000, v20, v21, "CIFilter to alpha blend images failed", v22, 2u);
        MEMORY[0x24BD06618](v22, -1, -1);
      }

      sub_249E53C88();
      swift_allocError();
      *(_QWORD *)v23 = 0xD000000000000025;
      *(_QWORD *)(v23 + 8) = 0x8000000249F36BA0;
      *(_BYTE *)(v23 + 16) = 2;
      swift_willThrow();

    }
  }
}

id *GenerativePlayground.DrawOnImageAssignmentTask.deinit()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8((uint64_t)v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller);
  return v0;
}

uint64_t GenerativePlayground.DrawOnImageAssignmentTask.__deallocating_deinit()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8((uint64_t)v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249E539F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E53A38()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E53A8C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249E53ADC()
{
  return GenerativePlayground.DrawOnImageAssignmentTask.description.getter();
}

uint64_t sub_249E53AFC()
{
  return type metadata accessor for GenerativePlayground.DrawOnImageAssignmentTask();
}

uint64_t type metadata accessor for GenerativePlayground.DrawOnImageAssignmentTask()
{
  uint64_t result;

  result = qword_2578DAAD0;
  if (!qword_2578DAAD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E53B40()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.DrawOnImageAssignmentTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_249E53BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;

  v7 = *(_OWORD *)(v1 + 32);
  v8 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_249DAFCF8;
  *(_QWORD *)(v5 + 392) = v4;
  *(_OWORD *)(v5 + 376) = v7;
  *(_OWORD *)(v5 + 360) = v8;
  *(_QWORD *)(v5 + 352) = a1;
  return swift_task_switch();
}

unint64_t sub_249E53C88()
{
  unint64_t result;

  result = qword_2578DABA0;
  if (!qword_2578DABA0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2A754, &_s26DrawOnImageAssignmentErrorON);
    atomic_store(result, &qword_2578DABA0);
  }
  return result;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_249E53CE4()
{
  unint64_t result;

  result = qword_2578DABB0;
  if (!qword_2578DABB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_2578DABB0);
  }
  return result;
}

id sub_249E53D20(uint64_t a1, unint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[4];

  swift_bridgeObjectRetain();
  v4 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_, v4);

  if (!v5)
  {
    if (qword_2578D5CE8 != -1)
      swift_once();
    v6 = sub_249F1EF38();
    __swift_project_value_buffer(v6, (uint64_t)qword_2578FF300);
    swift_bridgeObjectRetain_n();
    v7 = sub_249F1EF20();
    v8 = sub_249F1F820();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v15[0] = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      v15[3] = sub_249E68CA8(a1, a2, v15);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v7, v8, "couldn't find %s Core Image filter", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v10, -1, -1);
      MEMORY[0x24BD06618](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_249F1FA84();
    swift_bridgeObjectRelease();
    strcpy((char *)v15, "couldn't find ");
    HIBYTE(v15[1]) = -18;
    sub_249F1F460();
    sub_249F1F460();
    v11 = v15[0];
    v12 = v15[1];
    sub_249E53C88();
    swift_allocError();
    *(_QWORD *)v13 = v11;
    *(_QWORD *)(v13 + 8) = v12;
    *(_BYTE *)(v13 + 16) = 0;
    swift_willThrow();
  }
  return v5;
}

uint64_t sub_249E53FC4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t _s26DrawOnImageAssignmentErrorOwxx(uint64_t a1)
{
  return sub_249E53FEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_249E53FEC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s26DrawOnImageAssignmentErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E53FC4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s26DrawOnImageAssignmentErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E53FC4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_249E53FEC(v6, v7, v8);
  return a1;
}

uint64_t _s26DrawOnImageAssignmentErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_249E53FEC(v4, v5, v6);
  return a1;
}

uint64_t _s26DrawOnImageAssignmentErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s26DrawOnImageAssignmentErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s26DrawOnImageAssignmentErrorOMa()
{
  return &_s26DrawOnImageAssignmentErrorON;
}

ValueMetadata *type metadata accessor for CoreImageDownsampleFilterSquareImageScaler()
{
  return &type metadata for CoreImageDownsampleFilterSquareImageScaler;
}

uint64_t sub_249E54194(uint64_t a1, uint64_t *a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  v6 = *a2;
  *(_QWORD *)(v5 + 32) = a5;
  *(_QWORD *)(v5 + 40) = v6;
  *(_BYTE *)(v5 + 64) = *((_BYTE *)a2 + 8);
  *(_OWORD *)(v5 + 48) = *a3;
  return swift_task_switch();
}

id sub_249E541C4()
{
  uint64_t v0;
  id result;
  double v2;
  double v3;
  int64_t Width;
  int64_t v6;
  uint64_t v7;
  CGImage *v8;
  size_t Height;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;

  if (!*(_BYTE *)(v0 + 64))
  {
    v8 = (CGImage *)*(id *)(v0 + 40);
    Width = CGImageGetWidth(v8);
    Height = CGImageGetHeight(v8);
    goto LABEL_15;
  }
  if (*(_BYTE *)(v0 + 64) != 1)
  {
    v8 = (CGImage *)*(id *)(v0 + 40);
    Width = CVPixelBufferGetWidth(v8);
    Height = CVPixelBufferGetHeight(v8);
LABEL_15:
    v7 = Height;
    v10 = *(_QWORD *)(v0 + 48);

    if (Width != v10)
    {
      v6 = *(_QWORD *)(v0 + 48);
      goto LABEL_20;
    }
LABEL_16:
    if (v7 == *(_QWORD *)(v0 + 56))
    {
      v11 = *(_BYTE *)(v0 + 64);
      v12 = *(void **)(v0 + 40);
      v13 = *(_QWORD *)(v0 + 16);
      *(_QWORD *)v13 = v12;
      *(_BYTE *)(v13 + 8) = v11;
      v14 = v12;
LABEL_36:
      v28 = *(uint64_t (**)(void))(v0 + 8);
      return (id)v28();
    }
    v6 = *(_QWORD *)(v0 + 48);
    Width = v6;
LABEL_20:
    v15 = *(_QWORD *)(v0 + 56);
    if (Width != v7 || v6 != v15)
    {
      sub_249DFC27C();
      swift_allocError();
      *(_QWORD *)v17 = Width;
      *(_QWORD *)(v17 + 8) = v7;
      *(_QWORD *)(v17 + 16) = v6;
      *(_QWORD *)(v17 + 24) = v15;
      v18 = 1;
LABEL_30:
      *(_BYTE *)(v17 + 32) = v18;
      swift_willThrow();
LABEL_40:
      v28 = *(uint64_t (**)(void))(v0 + 8);
      return (id)v28();
    }
    swift_bridgeObjectRetain();
    v19 = (void *)sub_249F1F304();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_, v19);

    if (!v20)
    {
      sub_249F1FA84();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      sub_249DFC27C();
      swift_allocError();
      *(_QWORD *)v17 = 0xD000000000000011;
      *(_QWORD *)(v17 + 8) = 0x8000000249F36BD0;
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)(v17 + 24) = 0;
      v18 = 2;
      goto LABEL_30;
    }
    if (*(_BYTE *)(v0 + 64))
    {
      if (*(_BYTE *)(v0 + 64) == 1)
        v21 = *(id *)(v0 + 40);
      else
        v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, *(_QWORD *)(v0 + 40));
    }
    else
    {
      v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, *(_QWORD *)(v0 + 40));
    }
    v22 = v21;
    v23 = *(_QWORD *)(v0 + 48);
    objc_msgSend(v20, sel_setValue_forKey_, v21, *MEMORY[0x24BDBF960]);

    if ((double)v23 / (double)Width <= 0.0)
    {
      sub_249F1FA84();
      swift_bridgeObjectRelease();
      v34 = 0xD00000000000002CLL;
      v35 = 0x8000000249F36C10;
      sub_249F1F6E8();
      sub_249F1F460();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = (void *)sub_249F1E938();
      objc_msgSend(v20, sel_setValue_forKey_, v24, *MEMORY[0x24BDBF988]);

      v25 = objc_msgSend(v20, sel_outputImage);
      if (v25)
      {
        v26 = v25;
        v27 = *(_QWORD *)(v0 + 16);

        *(_QWORD *)v27 = v26;
        *(_BYTE *)(v27 + 8) = 1;
        goto LABEL_36;
      }
      sub_249F1FA84();
      v29 = objc_msgSend(v20, sel_description);
      v30 = sub_249F1F328();
      v32 = v31;

      swift_bridgeObjectRelease();
      v34 = v30;
      v35 = v32;
      sub_249F1F460();
    }
    sub_249DFC27C();
    swift_allocError();
    *(_QWORD *)v33 = v34;
    *(_QWORD *)(v33 + 8) = v35;
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    *(_BYTE *)(v33 + 32) = 2;
    swift_willThrow();

    goto LABEL_40;
  }
  result = objc_msgSend(*(id *)(v0 + 40), sel_extent);
  if (v2 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((*(_QWORD *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_44;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v3 < 9.22337204e18)
  {
    Width = (uint64_t)v2;
    v6 = *(_QWORD *)(v0 + 48);
    v7 = (uint64_t)v3;
    if (v6 != (uint64_t)v2)
      goto LABEL_20;
    goto LABEL_16;
  }
LABEL_46:
  __break(1u);
  return result;
}

BOOL sub_249E546A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (*a1 == *a2 && v3 == v5)
    return 1;
  if (v2 == v3 && v4 == v5)
  {
    v9 = __OFSUB__(v3, v5);
    v8 = v3 - v5 < 0;
  }
  else
  {
    v9 = 0;
    v8 = 1;
  }
  if (v8 != v9)
  {
    v11 = 0;
    v10 = 1;
  }
  else
  {
    v11 = __OFSUB__(v2, v4);
    v10 = v2 - v4 < 0;
  }
  return v10 == v11;
}

void Image.pixelDimensions.getter(size_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  double v4;
  double v5;
  __CVBuffer *v6;
  size_t Width;
  size_t Height;
  size_t v9;

  v3 = *(void **)v1;
  if (*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + 8) == 1)
    {
      objc_msgSend(v3, sel_extent);
      sub_249E00CB8(a1, v4, v5);
      return;
    }
    v6 = v3;
    Width = CVPixelBufferGetWidth(v6);
    Height = CVPixelBufferGetHeight(v6);
  }
  else
  {
    v6 = v3;
    Width = CGImageGetWidth(v6);
    Height = CGImageGetHeight(v6);
  }
  v9 = Height;

  *a1 = Width;
  a1[1] = v9;
}

uint64_t _s16VisualGeneration5ImageO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  int v4;
  id v5;
  id v6;
  char v7;
  void (*v8)(uint64_t);
  unint64_t *v9;
  void *v10;
  char v11;

  v2 = *(void **)a1;
  v3 = *(void **)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a2 + 8))
      goto LABEL_11;
    type metadata accessor for CGImage(0);
    v8 = type metadata accessor for CGImage;
    v9 = (unint64_t *)&unk_2578DABD0;
    v10 = &unk_249F20F30;
LABEL_9:
    sub_249D9BBEC(v9, (uint64_t (*)(uint64_t))v8, (uint64_t)v10);
    v5 = v3;
    v6 = v2;
    v7 = sub_249F1EB30();
    goto LABEL_10;
  }
  if (*(_BYTE *)(a1 + 8) != 1)
  {
    if (v4 != 2)
      goto LABEL_11;
    type metadata accessor for CVBuffer(0);
    v8 = type metadata accessor for CVBuffer;
    v9 = (unint64_t *)&unk_2578DABC0;
    v10 = &unk_249F20FC4;
    goto LABEL_9;
  }
  if (v4 != 1)
  {
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  sub_249E549C8();
  v5 = v3;
  v6 = v2;
  v7 = sub_249F1F940();
LABEL_10:
  v11 = v7;

  return v11 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for Image(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for Image(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for Image(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for Image(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Image(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Image()
{
  return &type metadata for Image;
}

unint64_t sub_249E549C8()
{
  unint64_t result;

  result = qword_2578DABC8;
  if (!qword_2578DABC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578DABC8);
  }
  return result;
}

uint64_t PolicyViolationError.policies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PolicyViolationError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[6];
  __int128 v24[2];
  uint64_t v25;
  _BYTE v26[40];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;

  v1 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = *v0;
  v10 = *(_QWORD *)(*v0 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v23[2] = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v23[3] = v6;
    v23[4] = v3;
    v31 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB673C(0, v10, 0);
    v23[1] = v9;
    v12 = v9 + 32;
    do
    {
      sub_249D9E1E4(v12, (uint64_t)v30);
      sub_249D9E1E4((uint64_t)v30, (uint64_t)v26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578DABD8);
      if (swift_dynamicCast())
      {
        sub_249D9E174(v24, (uint64_t)v27);
        v13 = v28;
        v14 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
        v17 = v16;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      else
      {
        v25 = 0;
        memset(v24, 0, sizeof(v24));
        sub_249E54D94((uint64_t)v24);
        __swift_project_boxed_opaque_existential_1(v30, v30[3]);
        v15 = sub_249F1FE08();
        v17 = v18;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      v11 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB673C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v31;
      }
      v20 = *(_QWORD *)(v11 + 16);
      v19 = *(_QWORD *)(v11 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_249DB673C(v19 > 1, v20 + 1, 1);
        v11 = v31;
      }
      *(_QWORD *)(v11 + 16) = v20 + 1;
      v21 = v11 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v15;
      *(_QWORD *)(v21 + 40) = v17;
      v12 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  v30[0] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249E11B3C();
  sub_249F1F280();
  swift_bridgeObjectRelease();
  sub_249F1F2D4();
  sub_249F1F2C8();
  sub_249F1F2BC();
  swift_bridgeObjectRelease();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  return sub_249F1F388();
}

uint64_t sub_249E54D94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DABE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of InputImagePolicy.inputImage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of GeneratedImagePolicy.generatedImage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for PolicyViolationError()
{
  return &type metadata for PolicyViolationError;
}

uint64_t sub_249E54DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  char v5;
  char v7;
  uint64_t result;
  char v9;
  char v10;

  v5 = 0;
  if (a1 == 0x4847495259504F43 && a2 == 0xEB00000000444554)
    goto LABEL_3;
  v7 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    goto LABEL_5;
  v5 = 1;
  if (a1 == 0xD000000000000013 && 0x8000000249F36C90 == a2)
    goto LABEL_3;
  v9 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_5;
  v5 = 2;
  if (a1 == 0x465F43494C425550 && a2 == 0xED00004552554749)
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      result = swift_bridgeObjectRelease();
      v5 = 3;
      goto LABEL_6;
    }
  }
LABEL_5:
  result = swift_bridgeObjectRelease();
LABEL_6:
  *a3 = v5;
  return result;
}

uint64_t SkinTone.radarDescription.getter()
{
  return sub_249F1F3AC();
}

uint64_t sub_249E55060()
{
  return sub_249F1F3AC();
}

uint64_t sub_249E5508C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v19[4];

  v2 = v1;
  v19[3] = *(id *)MEMORY[0x24BDAC8D0];
  *(_OWORD *)(v1 + 40) = xmmword_249F2A980;
  v4 = v1 + 40;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_QWORD *)(v4 + 64) = 0;
  *(_OWORD *)(v4 + 72) = xmmword_249F2A990;
  *(_QWORD *)(v4 - 24) = a1;
  v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_newCommandQueue);
  if (!v5)
    __break(1u);
  *(_QWORD *)(v2 + 24) = v5;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19[0] = 0;
  v8 = objc_msgSend(a1, sel_newDefaultLibraryWithBundle_error_, v7, v19);
  if (v8)
  {
    v9 = v8;
    v10 = v19[0];

    *(_QWORD *)(v2 + 32) = v9;
    swift_beginAccess();
    CVMetalTextureCacheCreate(0, 0, a1, 0, (CVMetalTextureCacheRef *)v4);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  else
  {
    v11 = v19[0];
    v12 = (void *)sub_249F1E710();

    swift_willThrow();
    if (qword_2578D5CE8 != -1)
      swift_once();
    v13 = sub_249F1EF38();
    __swift_project_value_buffer(v13, (uint64_t)qword_2578FF300);
    v14 = sub_249F1EF20();
    v15 = sub_249F1F820();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_249D98000, v14, v15, "could not load shader library", v16, 2u);
      MEMORY[0x24BD06618](v16, -1, -1);
    }

    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v17 = 0xD000000000000015;
    *(_QWORD *)(v17 + 8) = 0x8000000249F36DE0;
    *(_QWORD *)(v17 + 16) = 0;
    *(_BYTE *)(v17 + 24) = 5;
    swift_willThrow();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    type metadata accessor for ImageBlendingRenderer();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

void sub_249E5537C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  BOOL v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38[2];

  v38[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *(double *)(v3 + 56) == a2 && *(double *)(v3 + 64) == a3;
  if (v4 && *(_QWORD *)(v3 + 48) == a1)
    return;
  *(double *)(v3 + 56) = a2;
  *(double *)(v3 + 64) = a3;
  *(_QWORD *)(v3 + 48) = a1;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD6B8]), sel_init);
  v6 = (void *)sub_249F1F304();
  objc_msgSend(v5, sel_setLabel_, v6);

  v7 = *(void **)(v3 + 32);
  v8 = (void *)sub_249F1F304();
  v9 = objc_msgSend(v7, sel_newFunctionWithName_, v8);

  if (!v9)
  {
    __break(1u);
    goto LABEL_36;
  }
  objc_msgSend(v5, sel_setVertexFunction_, v9);
  swift_unknownObjectRelease();
  v10 = (void *)sub_249F1F304();
  v11 = objc_msgSend(v7, sel_newFunctionWithName_, v10);

  if (!v11)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  objc_msgSend(v5, sel_setFragmentFunction_, v11);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v5, sel_colorAttachments);
  v13 = objc_msgSend(v12, sel_objectAtIndexedSubscript_, 0);

  if (!v13)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  objc_msgSend(v13, sel_setPixelFormat_, *(_QWORD *)(v3 + 48));

  v14 = *(void **)(v3 + 16);
  v38[0] = 0;
  v15 = objc_msgSend(v14, sel_newRenderPipelineStateWithDescriptor_error_, v5, v38);
  v16 = v38[0];
  if (v15)
  {
    *(_QWORD *)(v3 + 72) = v15;
    v17 = v16;
    swift_unknownObjectRelease();
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD690]), sel_init);
    v19 = *(void **)(v3 + 80);
    *(_QWORD *)(v3 + 80) = v18;

    v20 = *(void **)(v3 + 80);
    if (v20)
    {
      v21 = objc_msgSend(v20, sel_colorAttachments);
      v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 0);

      if (v22)
      {
        objc_msgSend(v22, sel_setLoadAction_, 0);

        v23 = *(void **)(v3 + 80);
        if (v23)
        {
          v24 = objc_msgSend(v23, sel_colorAttachments);
          v25 = objc_msgSend(v24, sel_objectAtIndexedSubscript_, 0);

          if (v25)
          {
            objc_msgSend(v25, sel_setClearColor_, 1.0, 0.0, 1.0, 1.0);

            v26 = *(void **)(v3 + 80);
            if (v26)
            {
              v27 = objc_msgSend(v26, sel_colorAttachments);
              v28 = objc_msgSend(v27, sel_objectAtIndexedSubscript_, 0);

              if (v28)
              {
                objc_msgSend(v28, sel_setStoreAction_, 1);

                v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD740]), sel_init);
                objc_msgSend(v29, sel_setTextureType_, 2);
                objc_msgSend(v29, sel_setPixelFormat_, *(_QWORD *)(v3 + 48));
                v30 = *(double *)(v3 + 56);
                if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) != 0)
                {
                  if (v30 > -9.22337204e18)
                  {
                    if (v30 < 9.22337204e18)
                    {
                      objc_msgSend(v29, sel_setWidth_, (uint64_t)v30);
                      v31 = *(double *)(v3 + 64);
                      if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) != 0)
                      {
                        if (v31 > -9.22337204e18)
                        {
                          if (v31 < 9.22337204e18)
                          {
                            objc_msgSend(v29, sel_setHeight_, (uint64_t)v31);
                            objc_msgSend(v29, sel_setUsage_, 5);
                            objc_msgSend(v29, sel_setAllowGPUOptimizedContents_, 0);
                            v32 = objc_msgSend(v14, sel_newTextureWithDescriptor_, v29);
                            if (v32)
                            {
                              *(_QWORD *)(v3 + 88) = v32;
                              swift_unknownObjectRelease();
                              v33 = *(void **)(v3 + 80);
                              if (v33)
                              {
                                v34 = objc_msgSend(v33, sel_colorAttachments);
                                v35 = objc_msgSend(v34, sel_objectAtIndexedSubscript_, 0);

                                if (v35)
                                {
                                  v36 = *(_QWORD *)(v3 + 88);
                                  swift_unknownObjectRetain();
                                  objc_msgSend(v35, sel_setTexture_, v36);
                                  swift_unknownObjectRelease();

                                  sub_249E56910();
                                }
                                goto LABEL_46;
                              }
LABEL_45:
                              __break(1u);
LABEL_46:
                              __break(1u);
                              return;
                            }
LABEL_44:
                            __break(1u);
                            goto LABEL_45;
                          }
LABEL_34:
                          __break(1u);
                        }
LABEL_33:
                        __break(1u);
                        goto LABEL_34;
                      }
LABEL_32:
                      __break(1u);
                      goto LABEL_33;
                    }
LABEL_31:
                    __break(1u);
                    goto LABEL_32;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
                goto LABEL_31;
              }
LABEL_43:
              __break(1u);
              goto LABEL_44;
            }
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v37 = v38[0];
  sub_249F1E710();

  swift_willThrow();
}

void sub_249E558EC(__CVBuffer *a1, __CVBuffer *a2, __CVBuffer *a3)
{
  uint64_t v3;
  int64_t Width;
  int64_t Height;
  OSType PixelFormatType;
  uint64_t v10;
  MTLPixelFormat v11;
  id *v12;
  void *v13;
  __CVMetalTextureCache *v14;
  size_t v15;
  size_t v16;
  CVMetalTextureRef v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  MTLPixelFormat v26;
  __CVMetalTextureCache *v27;
  size_t v28;
  size_t v29;
  CVMetalTextureRef v30;
  __CVMetalTextureCache *v31;
  size_t v32;
  size_t v33;
  CVMetalTextureRef v34;
  void *v35;
  MTLPixelFormat v36;
  __CVMetalTextureCache *v37;
  size_t v38;
  size_t v39;
  CVMetalTextureRef v40;
  id v41;
  unint64_t v42;
  double *v43;
  void *v44;
  char **v45;
  char **v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  double v53;
  double v54;
  id v55;
  void *v56;
  void *v57;
  char **v58;
  char **v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  CGColorSpaceRef DeviceRGB;
  double *v75;
  CGColorSpaceRef v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t inited;
  void *v84;
  uint64_t v85;
  id v86;
  CGColorSpace *v87;
  id v88;
  void *v89;
  id v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  _QWORD *v99;
  CVMetalTextureRef image[2];
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  Width = CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
  if (PixelFormatType != CVPixelBufferGetPixelFormatType(a2))
  {
    if (qword_2578D5CE8 != -1)
      swift_once();
    v18 = sub_249F1EF38();
    __swift_project_value_buffer(v18, (uint64_t)qword_2578FF300);
    v19 = sub_249F1EF20();
    v20 = sub_249F1F820();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      v22 = "inconsistent input pixel buffer formats";
      goto LABEL_14;
    }
LABEL_15:

    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v24 = 0xD000000000000015;
    *(_QWORD *)(v24 + 8) = 0x8000000249F36DE0;
    *(_QWORD *)(v24 + 16) = 0;
    *(_BYTE *)(v24 + 24) = 5;
    swift_willThrow();
    return;
  }
  if (CVPixelBufferGetPixelFormatType(a3) != 1278226488)
  {
    if (qword_2578D5CE8 != -1)
      goto LABEL_81;
    goto LABEL_12;
  }
  v10 = sub_249E56788(PixelFormatType);
  if (v3)
    return;
  sub_249E5537C(v10, (double)Width, (double)Height);
  v11 = v99[6];
  image[0] = 0;
  v12 = (id *)(v99 + 5);
  swift_beginAccess();
  v13 = (void *)v99[5];
  if (!v13)
    goto LABEL_86;
  v14 = v13;
  v15 = CVPixelBufferGetWidth(a1);
  v16 = CVPixelBufferGetHeight(a1);
  CVMetalTextureCacheCreateTextureFromImage(0, v14, a1, 0, v11, v15, v16, 0, image);

  v17 = image[0];
  if (image[0])
  {
    v98 = CVMetalTextureGetTexture(image[0]);

  }
  else
  {
    v98 = 0;
  }
  image[0] = 0;
  v25 = (void *)v99[5];
  v26 = v99[6];
  if (!v25)
    goto LABEL_87;
  v27 = v25;
  v28 = CVPixelBufferGetWidth(a2);
  v29 = CVPixelBufferGetHeight(a2);
  CVMetalTextureCacheCreateTextureFromImage(0, v27, a2, 0, v26, v28, v29, 0, image);

  v30 = image[0];
  if (image[0])
  {
    v97 = CVMetalTextureGetTexture(image[0]);

  }
  else
  {
    v97 = 0;
  }
  image[0] = 0;
  if (!*v12)
    goto LABEL_88;
  v31 = (__CVMetalTextureCache *)*v12;
  v32 = CVPixelBufferGetWidth(a3);
  v33 = CVPixelBufferGetHeight(a3);
  CVMetalTextureCacheCreateTextureFromImage(0, v31, a3, 0, MTLPixelFormatR8Unorm, v32, v33, 0, image);

  v34 = image[0];
  if (image[0])
  {
    v96 = CVMetalTextureGetTexture(image[0]);

  }
  else
  {
    v96 = 0;
  }
  image[0] = 0;
  v35 = (void *)v99[5];
  v36 = v99[6];
  if (!v35)
    goto LABEL_89;
  v37 = v35;
  v38 = CVPixelBufferGetWidth(a1);
  v39 = CVPixelBufferGetHeight(a1);
  CVMetalTextureCacheCreateTextureFromImage(0, v37, a1, 0, v36, v38, v39, 0, image);

  v40 = image[0];
  if (image[0])
  {
    v41 = CVMetalTextureGetTexture(image[0]);

  }
  else
  {
    v41 = 0;
  }
  v42 = 0;
  v43 = (double *)v99;
  v44 = (void *)v99[3];
  v45 = &selRef_openPhotoLibraryWithWellKnownIdentifier_error_;
  v46 = &selRef_openPhotoLibraryWithWellKnownIdentifier_error_;
  do
  {
    v47 = objc_msgSend(v44, v45[26]);
    if (!v47)
    {
      if (qword_2578D5CE8 != -1)
        swift_once();
      v64 = sub_249F1EF38();
      __swift_project_value_buffer(v64, (uint64_t)qword_2578FF300);
      v65 = sub_249F1EF20();
      v66 = sub_249F1F820();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v67 = 0;
        _os_log_impl(&dword_249D98000, v65, v66, "could not create command buffer", v67, 2u);
        MEMORY[0x24BD06618](v67, -1, -1);
      }

      sub_249DD9530();
      swift_allocError();
      *(_QWORD *)v68 = 0xD000000000000015;
      *(_QWORD *)(v68 + 8) = 0x8000000249F36DE0;
      *(_QWORD *)(v68 + 16) = 0;
      *(_BYTE *)(v68 + 24) = 5;
      swift_willThrow();
      goto LABEL_65;
    }
    v48 = v47;
    v49 = (void *)sub_249F1F304();
    objc_msgSend(v48, sel_setLabel_, v49);

    if (!*((_QWORD *)v43 + 10))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      return;
    }
    v50 = objc_msgSend(v48, v46[28]);
    if (!v50)
    {
      if (qword_2578D5CE8 != -1)
        swift_once();
      v69 = sub_249F1EF38();
      __swift_project_value_buffer(v69, (uint64_t)qword_2578FF300);
      v70 = sub_249F1EF20();
      v71 = sub_249F1F820();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v72 = 0;
        _os_log_impl(&dword_249D98000, v70, v71, "could not create render command encoder", v72, 2u);
        MEMORY[0x24BD06618](v72, -1, -1);
      }

      sub_249DD9530();
      swift_allocError();
      *(_QWORD *)v73 = 0xD000000000000015;
      *(_QWORD *)(v73 + 8) = 0x8000000249F36DE0;
      *(_QWORD *)(v73 + 16) = 0;
      *(_BYTE *)(v73 + 24) = 5;
      swift_willThrow();
LABEL_64:
      swift_unknownObjectRelease();
LABEL_65:
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    v51 = v50;
    v52 = (void *)sub_249F1F304();
    objc_msgSend(v51, sel_pushDebugGroup_, v52);

    image[0] = 0;
    image[1] = 0;
    v101 = *(_OWORD *)(v43 + 7);
    v102 = xmmword_249F2A9A0;
    objc_msgSend(v51, sel_setViewport_, image);
    if (!*((_QWORD *)v43 + 9))
      goto LABEL_83;
    objc_msgSend(v51, sel_setRenderPipelineState_);
    objc_msgSend(v51, sel_setVertexBuffer_offset_atIndex_, *((_QWORD *)v43 + 13), 0, 0);
    objc_msgSend(v51, sel_setFragmentTexture_atIndex_, v98, 0);
    objc_msgSend(v51, sel_setFragmentTexture_atIndex_, v97, 1);
    objc_msgSend(v51, sel_setFragmentTexture_atIndex_, v96, 2);
    objc_msgSend(v51, sel_setFragmentTexture_atIndex_, v41, 3);
    v53 = v43[7];
    if ((~*(_QWORD *)&v53 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      swift_once();
LABEL_12:
      v23 = sub_249F1EF38();
      __swift_project_value_buffer(v23, (uint64_t)qword_2578FF300);
      v19 = sub_249F1EF20();
      v20 = sub_249F1F820();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        v22 = "unexpected mask pixel buffer format";
LABEL_14:
        _os_log_impl(&dword_249D98000, v19, v20, v22, v21, 2u);
        MEMORY[0x24BD06618](v21, -1, -1);
      }
      goto LABEL_15;
    }
    if (v53 <= -2147483650.0)
      goto LABEL_76;
    if (v53 >= 2147483650.0)
      goto LABEL_77;
    LODWORD(image[0]) = (int)v53;
    v54 = v43[8];
    if ((~*(_QWORD *)&v54 & 0x7FF0000000000000) == 0)
      goto LABEL_78;
    if (v54 <= -2147483650.0)
      goto LABEL_79;
    if (v54 >= 2147483650.0)
      goto LABEL_80;
    HIDWORD(image[0]) = (int)v54;
    objc_msgSend(v51, sel_setFragmentBytes_length_atIndex_, image, 8, 0);
    objc_msgSend(v51, sel_drawPrimitives_vertexStart_vertexCount_, 3, 0, 6);
    objc_msgSend(v51, sel_popDebugGroup);
    objc_msgSend(v51, sel_endEncoding);
    if (v42 <= 0xC6)
    {
      v55 = objc_msgSend(v48, sel_blitCommandEncoder);
      if (!v55)
      {
        if (qword_2578D5CE8 != -1)
          swift_once();
        v78 = sub_249F1EF38();
        __swift_project_value_buffer(v78, (uint64_t)qword_2578FF300);
        v79 = sub_249F1EF20();
        v80 = sub_249F1F820();
        if (os_log_type_enabled(v79, v80))
        {
          v81 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v81 = 0;
          _os_log_impl(&dword_249D98000, v79, v80, "could not create blit command encoder", v81, 2u);
          MEMORY[0x24BD06618](v81, -1, -1);
        }

        sub_249DD9530();
        swift_allocError();
        *(_QWORD *)v82 = 0xD000000000000015;
        *(_QWORD *)(v82 + 8) = 0x8000000249F36DE0;
        *(_QWORD *)(v82 + 16) = 0;
        *(_BYTE *)(v82 + 24) = 5;
        swift_willThrow();
        swift_unknownObjectRelease();
        goto LABEL_64;
      }
      v56 = v55;
      v57 = v48;
      v58 = v46;
      v59 = v45;
      v60 = v44;
      v61 = v41;
      v62 = (void *)sub_249F1F304();
      objc_msgSend(v56, sel_setLabel_, v62);

      v63 = (void *)sub_249F1F304();
      objc_msgSend(v56, sel_pushDebugGroup_, v63);

      if (!v99[11])
        goto LABEL_84;
      if (!v61)
        goto LABEL_85;
      v41 = v61;
      objc_msgSend(v56, sel_copyFromTexture_toTexture_);
      objc_msgSend(v56, sel_popDebugGroup);
      objc_msgSend(v56, sel_endEncoding);
      swift_unknownObjectRelease();
      v44 = v60;
      v45 = v59;
      v46 = v58;
      v48 = v57;
      v43 = (double *)v99;
    }
    ++v42;
    objc_msgSend(v48, sel_commit);
    objc_msgSend(v48, sel_waitUntilCompleted);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  while (v42 != 200);
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v75 = v43;
  v76 = DeviceRGB;
  if (!*((_QWORD *)v75 + 12))
  {
    v77 = *((_QWORD *)v75 + 11);
    if (v77)
    {
      swift_unknownObjectRetain();
      goto LABEL_68;
    }
    goto LABEL_90;
  }
  v77 = *((_QWORD *)v75 + 12);
LABEL_68:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB018);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  v84 = (void *)*MEMORY[0x24BDBF8E8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBF8E8];
  type metadata accessor for CGColorSpace(0);
  *(_QWORD *)(inited + 64) = v85;
  *(_QWORD *)(inited + 40) = v76;
  v86 = v84;
  v87 = v76;
  swift_unknownObjectRetain();
  sub_249DAE508(inited);
  v88 = objc_allocWithZone(MEMORY[0x24BDBF660]);
  type metadata accessor for CIImageOption(0);
  sub_249E56AEC();
  v89 = (void *)sub_249F1F1F0();
  swift_bridgeObjectRelease();
  v90 = objc_msgSend(v88, sel_initWithMTLTexture_options_, v77, v89);

  swift_unknownObjectRelease();
  if (v90)
  {
    objc_msgSend(v90, sel_imageTransformForCGOrientation_, 4);
    objc_msgSend(v90, sel_imageByApplyingTransform_, image);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_2578D5CE8 != -1)
      swift_once();
    v91 = sub_249F1EF38();
    __swift_project_value_buffer(v91, (uint64_t)qword_2578FF300);
    v92 = sub_249F1EF20();
    v93 = sub_249F1F820();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v94 = 0;
      _os_log_impl(&dword_249D98000, v92, v93, "could not create CIImage", v94, 2u);
      MEMORY[0x24BD06618](v94, -1, -1);
    }

    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v95 = 0xD000000000000015;
    *(_QWORD *)(v95 + 8) = 0x8000000249F36DE0;
    *(_QWORD *)(v95 + 16) = 0;
    *(_BYTE *)(v95 + 24) = 5;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

  }
}

uint64_t sub_249E56788(int a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if (a1 == 1111970369)
    return 80;
  if (a1 == 1380401729)
    return 70;
  if (qword_2578D5CE8 != -1)
    swift_once();
  v2 = sub_249F1EF38();
  __swift_project_value_buffer(v2, (uint64_t)qword_2578FF300);
  v3 = sub_249F1EF20();
  v4 = sub_249F1F820();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    sub_249F1F9AC();
    _os_log_impl(&dword_249D98000, v3, v4, "unsupported input pixel buffer format %u", v5, 8u);
    MEMORY[0x24BD06618](v5, -1, -1);
  }

  sub_249DD9530();
  swift_allocError();
  *(_QWORD *)v6 = 0xD000000000000015;
  *(_QWORD *)(v6 + 8) = 0x8000000249F36DE0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 24) = 5;
  return swift_willThrow();
}

void sub_249E56910()
{
  uint64_t v0;
  _QWORD *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat MinX;
  CGFloat MinY;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v15;
  float v16;
  CGRect v17;
  CGRect v18;

  v1 = (_QWORD *)swift_slowAlloc();
  v2 = *(double *)(v0 + 56);
  v3 = *(double *)(v0 + 64);
  v17.origin.x = 0.0;
  v17.origin.y = 0.0;
  v17.size.width = v2;
  v17.size.height = v3;
  MinX = CGRectGetMinX(v17);
  *(float *)&MinX = 1.0 - (MinX + MinX) / *(double *)(v0 + 56);
  v16 = *(float *)&MinX;
  v18.origin.x = 0.0;
  v18.origin.y = 0.0;
  v18.size.width = v2;
  v18.size.height = v3;
  MinY = CGRectGetMinY(v18);
  *(float *)&MinY = 1.0 - (MinY + MinY) / *(double *)(v0 + 64);
  *(float *)&v6 = v16;
  *(float *)&v7 = v16;
  *((float *)&v7 + 1) = -*(float *)&MinY;
  *(float *)&v8 = -v16;
  *(float *)&v9 = -v16;
  *((float *)&v9 + 1) = -*(float *)&MinY;
  HIDWORD(v8) = LODWORD(MinY);
  HIDWORD(v6) = LODWORD(MinY);
  __asm { FMOV            V0.2S, #1.0 }
  *v1 = v7;
  v1[1] = _D0;
  v1[2] = v9;
  v1[3] = 0x3F80000000000000;
  v1[4] = v8;
  v1[5] = 0;
  v1[6] = v7;
  v1[7] = _D0;
  v1[8] = v8;
  v1[9] = 0;
  v1[10] = v6;
  v1[11] = 1065353216;
  v15 = objc_msgSend(*(id *)(v0 + 16), sel_newBufferWithBytes_length_options_, v1, 96, 0);
  if (v15)
  {
    *(_QWORD *)(v0 + 104) = v15;
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  JUMPOUT(0x24BD06618);
}

uint64_t sub_249E56A50()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_249E56AAC()
{
  sub_249E56A50();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageBlendingRenderer()
{
  return objc_opt_self();
}

unint64_t sub_249E56AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DB020;
  if (!qword_2578DB020)
  {
    type metadata accessor for CIImageOption(255);
    result = MEMORY[0x24BD06528](&unk_249F21688, v1);
    atomic_store(result, (unint64_t *)&qword_2578DB020);
  }
  return result;
}

uint64_t sub_249E56B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(void);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v39 = a3;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9658);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v35 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v35 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  v20 = (char *)&v35 + *(int *)(v17 + 48) - v18;
  v21 = sub_249F1E620();
  v22 = *(_QWORD **)(v21 - 8);
  v23 = (void (*)(void))v22[4];
  ((void (*)(char *, uint64_t, uint64_t))v23)(v19, a1, v21);
  ((void (*)(char *, uint64_t, uint64_t))v23)(v20, a2, v21);
  v24 = &v16[*(int *)(v6 + 48)];
  v25 = (void (*)(char *, char *, uint64_t))v22[2];
  v25(v16, v19, v21);
  v25(v24, v20, v21);
  sub_249DCC2FC((uint64_t)v16, &qword_2578D9658);
  v36 = &v16[*(int *)(v6 + 48)];
  v26 = v36;
  v25(v16, v19, v21);
  v25(v26, v20, v21);
  v27 = &v40[*(int *)(v6 + 48)];
  v23();
  ((void (*)(char *, char *, uint64_t))v23)(v27, v20, v21);
  v28 = &v11[*(int *)(v6 + 48)];
  ((void (*)(char *, char *, uint64_t))v23)(v11, v16, v21);
  ((void (*)(char *, char *, uint64_t))v23)(v28, v27, v21);
  v29 = v35;
  v30 = &v35[*(int *)(v6 + 48)];
  v25(v35, v11, v21);
  v25(v30, v28, v21);
  v31 = (uint64_t)v37;
  ((void (*)(char *, char *, uint64_t))v23)(v37, v29, v21);
  v32 = (void (*)(char *, uint64_t))v22[1];
  v32(v30, v21);
  v33 = &v29[*(int *)(v6 + 48)];
  ((void (*)(char *, char *, uint64_t))v23)(v29, v11, v21);
  ((void (*)(char *, char *, uint64_t))v23)(v33, v28, v21);
  ((void (*)(uint64_t, char *, uint64_t))v23)(v31 + *(int *)(v38 + 36), v33, v21);
  v32(v29, v21);
  sub_249DCB1B0(v31, v39, &qword_2578D6C30);
  v32(v40, v21);
  return ((uint64_t (*)(char *, uint64_t))v32)(v36, v21);
}

uint64_t sub_249E56E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v42 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9658);
  v5 = MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - v8;
  v10 = sub_249F1E620();
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  v13 = MEMORY[0x24BDAC7A8](v39);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  v18 = sub_249F1E584();
  v19 = sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  v41 = v18;
  v37 = v19;
  sub_249F1F754();
  sub_249D9BBEC(&qword_2578D8E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
  result = sub_249F1F28C();
  if ((result & 1) != 0)
  {
    v34 = v15;
    v35 = v17;
    v21 = v9;
    v22 = v40;
    v23 = &v21[*(int *)(v40 + 48)];
    v36 = v3;
    v24 = v7;
    v25 = v38;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v26(v21, a1, v10);
    v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v27(v23, v12, v10);
    v28 = &v24[*(int *)(v22 + 48)];
    v26(v24, (uint64_t)v21, v10);
    v26(v28, (uint64_t)v23, v10);
    v29 = (uint64_t)v34;
    v27(v34, v24, v10);
    v30 = *(void (**)(char *, uint64_t))(v25 + 8);
    v30(v28, v10);
    v31 = &v24[*(int *)(v22 + 48)];
    v27(v24, v21, v10);
    v27(v31, v23, v10);
    v27((char *)(v29 + *(int *)(v39 + 36)), v31, v10);
    v30(v24, v10);
    v32 = (uint64_t)v35;
    sub_249DCB1B0(v29, (uint64_t)v35, &qword_2578D6C30);
    sub_249F1F778();
    return sub_249DCC2FC(v32, &qword_2578D6C30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_249E570FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, _QWORD);
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  _BOOL8 v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char v67[40];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v0);
  v54 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_249F1E6B0();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v51 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1E5E4();
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E60);
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249F1E5F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - v12;
  v14 = sub_249F1E5FC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E68);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v50 - v22;
  sub_249F1E608();
  v56 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v56(v21, v17, v14);
  v63 = sub_249D9BBEC(&qword_2578D8E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
  sub_249F1F730();
  v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v57 = v17;
  v55 = v24;
  v24(v17, v14);
  v25 = &v21[*(int *)(v18 + 36)];
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v64 = v13;
  v27 = v13;
  v28 = (uint64_t)v23;
  v62 = v8;
  v26(v25, v27, v8);
  sub_249DCB1B0((uint64_t)v21, (uint64_t)v23, &qword_2578D8E68);
  v29 = &v23[*(int *)(v18 + 36)];
  v66 = v9;
  v61 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v30 = v58;
  while (1)
  {
    v31 = v64;
    v32 = v62;
    v61(v64, v29, v62);
    v33 = v65;
    sub_249F1F754();
    sub_249D9BBEC(&qword_2578D8E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v34 = sub_249F1F298();
    v35 = *(void (**)(char *, uint64_t))(v66 + 8);
    v35(v33, v32);
    v35(v31, v32);
    if ((v34 & 1) != 0)
      break;
    v36 = (void (*)(char *, _QWORD))sub_249F1F784();
    v38 = v59;
    v37 = v60;
    (*(void (**)(char *))(v30 + 16))(v60);
    v36(v67, 0);
    v39 = v57;
    v56(v57, (char *)v28, v14);
    sub_249F1F760();
    v55(v39, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v38);
    v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v37, 1, v38);
    v41 = v40 != 1;
    if (v40 != 1)
    {
      v42 = v50;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v50, v37, v38);
      v43 = v51;
      sub_249F1E5CC();
      sub_249E0B50C();
      v44 = v28;
      v45 = v54;
      sub_249F1E6BC();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v53);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v42, v38);
      v46 = sub_249F1E8D8();
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46);
      v48 = (uint64_t)v45;
      v28 = v44;
      sub_249DCC2FC(v48, &qword_2578D6288);
      if (v47 == 1)
        continue;
    }
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v60, 1, 1, v59);
  v41 = 0;
LABEL_7:
  sub_249DCC2FC(v28, &qword_2578D8E68);
  return v41;
}

uint64_t sub_249E575F0()
{
  return 0x5555797469746E45;
}

unint64_t sub_249E57618()
{
  return 0xD000000000000015;
}

unint64_t sub_249E57634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, _QWORD);
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70[40];

  v0 = sub_249F1E6B0();
  v57 = *(_QWORD *)(v0 - 8);
  v58 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v56 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v2);
  v55 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1E8D8();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v49 - v7;
  v64 = sub_249F1E5E4();
  v8 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249F1E5F0();
  v69 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v66 = (char *)&v49 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E60);
  MEMORY[0x24BDAC7A8](v14);
  v65 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E68);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_249F1E5FC();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8];
  v21 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v49 - v25;
  sub_249F1E608();
  v68 = v21;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v52 = v26;
  v59 = v27;
  v27(v24, (uint64_t)v26, v19);
  sub_249D9BBEC(qword_2578DB040, v20, MEMORY[0x24BDCC4C0]);
  v60 = v24;
  sub_249F1F4E4();
  v28 = &v18[*(int *)(v16 + 36)];
  v63 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v53 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v29 = v66;
    v63(v66, v28, v10);
    sub_249D9BBEC(&qword_2578D8E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
    v30 = v67;
    sub_249F1F754();
    sub_249D9BBEC(&qword_2578D8E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v31 = sub_249F1F298();
    v32 = (uint64_t)v18;
    v33 = *(void (**)(char *, uint64_t))(v69 + 8);
    v33(v30, v10);
    v33(v29, v10);
    if ((v31 & 1) != 0)
      break;
    v34 = (void (*)(char *, _QWORD))sub_249F1F784();
    v36 = v64;
    v35 = v65;
    (*(void (**)(char *))(v8 + 16))(v65);
    v34(v70, 0);
    v37 = v60;
    v59(v60, v32, v19);
    sub_249F1F760();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v36);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v35, 1, v36) == 1)
      goto LABEL_12;
    v38 = v54;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v54, v35, v36);
    v39 = v56;
    sub_249F1E5CC();
    sub_249E0B50C();
    v40 = (uint64_t)v55;
    sub_249F1E6BC();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v58);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v38, v36);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v40, 1, v62) == 1)
    {
      sub_249DCC2FC(v40, &qword_2578D6288);
      v18 = (char *)v32;
    }
    else
    {
      v41 = v62;
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
      v43 = v50;
      v42(v50, v40, v62);
      v42(v51, (uint64_t)v43, v41);
      v44 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v44 = sub_249DB23E4(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
      v18 = (char *)v32;
      v46 = *(_QWORD *)(v44 + 16);
      v45 = *(_QWORD *)(v44 + 24);
      if (v46 >= v45 >> 1)
        v44 = sub_249DB23E4(v45 > 1, v46 + 1, 1, v44);
      *(_QWORD *)(v44 + 16) = v46 + 1;
      v47 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      v53 = v44;
      v42((char *)(v44 + v47 + *(_QWORD *)(v61 + 72) * v46), (uint64_t)v51, v62);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v65, 1, 1, v64);
LABEL_12:
  sub_249DCC2FC(v32, &qword_2578D8E68);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v19);
  return v53;
}

uint64_t sub_249E57C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (**v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t result;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  char v78[40];

  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9658);
  v1 = MEMORY[0x24BDAC7A8](v66);
  v67 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v64 = (char *)&v59 - v3;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  v4 = MEMORY[0x24BDAC7A8](v69);
  v65 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v68 = (uint64_t)&v59 - v6;
  v75 = sub_249F1E620();
  v7 = *(_QWORD **)(v75 - 8);
  v8 = MEMORY[0x24BDAC7A8](v75);
  v71 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v59 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)&v59 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v59 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v59 - v17;
  v19 = sub_249F1E584();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290];
  v21 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v77 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v59 - v24;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9650);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v0;
  sub_249F1E56C();
  v27 = sub_249D9BBEC(&qword_2578D8D30, v20, MEMORY[0x24BDCC2B0]);
  sub_249F1F730();
  while (1)
  {
    sub_249F1F754();
    sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
    v28 = v75;
    v29 = sub_249F1F298();
    v30 = (char *)v7[1];
    ((void (*)(char *, uint64_t))v30)(v16, v28);
    v31 = v77;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v77, v25, v19);
    if ((v29 & 1) != 0)
    {
      v76 = *(void (**)(char *, uint64_t))(v21 + 8);
      v76(v31, v19);
      goto LABEL_7;
    }
    v74 = v30;
    v32 = sub_249F1F784();
    v76 = *v33;
    swift_bridgeObjectRetain();
    ((void (*)(char *, _QWORD))v32)(v78, 0);
    v34 = v21;
    v35 = *(void (**)(char *, uint64_t))(v21 + 8);
    v35(v77, v19);
    LOBYTE(v32) = sub_249F1F238();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
      break;
    sub_249F1F760();
    v21 = v34;
  }
  v76 = v35;
  v30 = v74;
LABEL_7:
  v61 = v27;
  sub_249F1F730();
  v36 = (void (*)(char *, char *, uint64_t))v7[2];
  v37 = v73;
  v38 = v75;
  v36(v73, v18, v75);
  v36(v72, v16, v38);
  v39 = v71;
  v77 = (char *)v36;
  v36(v71, v37, v38);
  ((void (*)(char *, uint64_t))v30)(v18, v38);
  sub_249D9BBEC(&qword_2578D8E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
  v40 = v72;
  LOBYTE(v36) = sub_249F1F28C();
  ((void (*)(char *, uint64_t))v30)(v39, v38);
  result = ((uint64_t (*)(char *, uint64_t))v30)(v40, v38);
  if ((v36 & 1) != 0)
  {
    v74 = v25;
    v42 = v66;
    v43 = v64;
    v44 = &v64[*(int *)(v66 + 48)];
    v45 = v75;
    v60 = v16;
    v46 = (void (*)(char *, char *, uint64_t))v7[4];
    v46(v64, v16, v75);
    v47 = v44;
    v46(v44, v73, v45);
    v48 = v67;
    v49 = &v67[*(int *)(v42 + 48)];
    v50 = v77;
    ((void (*)(char *, char *, uint64_t))v77)(v67, v43, v45);
    ((void (*)(char *, char *, uint64_t))v50)(v49, v47, v45);
    v51 = (uint64_t)v65;
    v46(v65, v48, v45);
    ((void (*)(char *, uint64_t))v30)(v49, v45);
    v52 = &v48[*(int *)(v42 + 48)];
    v46(v48, v43, v45);
    v46(v52, v47, v45);
    v46((char *)(v51 + *(int *)(v69 + 36)), v52, v45);
    ((void (*)(char *, uint64_t))v30)(v48, v45);
    v53 = v68;
    sub_249DCB1B0(v51, v68, &qword_2578D6C30);
    v54 = (uint64_t)v63;
    v55 = v74;
    sub_249F1F778();
    v76(v55, v19);
    sub_249DCC2FC(v53, &qword_2578D6C30);
    v56 = (uint64_t)v60;
    v57 = v77;
    ((void (*)(char *, uint64_t, uint64_t))v77)(v60, v54, v45);
    v58 = (uint64_t)v73;
    ((void (*)(char *, uint64_t, uint64_t))v57)(v73, v54 + *(int *)(v62 + 36), v45);
    sub_249E56B34(v56, v58, v53);
    sub_249E58288();
    sub_249F1E59C();
    sub_249DCC2FC(v53, &qword_2578D6C30);
    return sub_249DCC2FC(v54, &qword_2578D9650);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_249E58288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D8E58;
  if (!qword_2578D8E58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D6C30);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D8E58);
  }
  return result;
}

uint64_t sub_249E582D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55[32];

  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_249F1E620();
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v41 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v41 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v41 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB030);
  MEMORY[0x24BDAC7A8](v13);
  v43 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_249F1E584();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290];
  v42 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9650);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (uint64_t)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v0;
  sub_249F1E56C();
  sub_249D9BBEC(&qword_2578D8D30, v16, MEMORY[0x24BDCC2B0]);
  sub_249F1F754();
  while (1)
  {
    v20 = v52;
    sub_249F1F730();
    v21 = sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
    v22 = v54;
    v23 = sub_249F1F298();
    v24 = *(void (**)(char *, uint64_t))(v53 + 8);
    v24(v20, v22);
    if ((v23 & 1) != 0)
    {
      v27 = v18;
      v28 = v15;
      v30 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      v31 = v49;
      v30(v49, v11, v54);
      goto LABEL_7;
    }
    v50 = v21;
    v25 = v53;
    v26 = v51;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v51, v11, v54);
    sub_249D9BBEC(&qword_2578DB038, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A0]);
    sub_249F1F274();
    v27 = v18;
    v28 = v15;
    v29 = sub_249F1F784();
    swift_bridgeObjectRetain();
    ((void (*)(char *, _QWORD))v29)(v55, 0);
    LOBYTE(v29) = sub_249F1F238();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
      break;
    v24(v26, v54);
    v18 = v27;
  }
  v32 = v54;
  v24(v11, v54);
  v30 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v31 = v49;
  v30(v49, v26, v32);
LABEL_7:
  result = sub_249F1F298();
  if ((result & 1) != 0)
  {
    v34 = (uint64_t)v43;
    v35 = v54;
    v30(v43, v31, v54);
    v36 = v44;
    sub_249E56E30(v34, v44);
    sub_249DCC2FC(v34, &qword_2578DB030);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v28);
    v37 = (uint64_t)v52;
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v38(v52, v36, v35);
    v39 = (uint64_t)v45;
    v38(v45, v36 + *(int *)(v41 + 36), v35);
    v40 = v46;
    sub_249E56B34(v37, v39, v46);
    sub_249E58288();
    sub_249F1E59C();
    sub_249DCC2FC(v40, &qword_2578D6C30);
    return sub_249DCC2FC(v36, &qword_2578D9650);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249E58780@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_249F1E650();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB0F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AugmentedPrompt();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E58E20();
  sub_249F1FFF4();
  if (!v2)
  {
    sub_249D9BBEC(&qword_2578DB100, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5D0]);
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_249E00BF8((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_249E58944()
{
  return 0xD000000000000010;
}

uint64_t sub_249E58960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E58FD8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249E58988()
{
  sub_249E58E20();
  return sub_249F20024();
}

uint64_t sub_249E589B0()
{
  sub_249E58E20();
  return sub_249F20030();
}

uint64_t sub_249E589D8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = sub_249F1E584();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290];
  MEMORY[0x24BDAC7A8](v0);
  sub_249F1E56C();
  sub_249D9BBEC((unint64_t *)&qword_2578D73C8, v1, MEMORY[0x24BDCC2A8]);
  return sub_249F1F4C0();
}

uint64_t sub_249E58A6C()
{
  sub_249F1FF64();
  sub_249F1E650();
  sub_249D9BBEC(&qword_2578DB0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_249F1F22C();
  return sub_249F1FFA0();
}

uint64_t sub_249E58AD8()
{
  sub_249F1E650();
  sub_249D9BBEC(&qword_2578DB0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  return sub_249F1F22C();
}

uint64_t sub_249E58B30()
{
  sub_249F1FF64();
  sub_249F1E650();
  sub_249D9BBEC(&qword_2578DB0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_249F1F22C();
  return sub_249F1FFA0();
}

uint64_t sub_249E58B98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E58780(a1, a2);
}

uint64_t sub_249E58BAC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB108);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E58E20();
  sub_249F20018();
  sub_249F1E650();
  sub_249D9BBEC(&qword_2578DB110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5B8]);
  sub_249F1FDCC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for AugmentedPrompt.DemographicCategoryAttribute()
{
  return &type metadata for AugmentedPrompt.DemographicCategoryAttribute;
}

ValueMetadata *type metadata accessor for AugmentedPrompt.EntityUUIDAttribute()
{
  return &type metadata for AugmentedPrompt.EntityUUIDAttribute;
}

uint64_t sub_249E58CDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E58CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_249E58D24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E58D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AugmentedPrompt()
{
  uint64_t result;

  result = qword_2578DB0A0;
  if (!qword_2578DB0A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E58DAC()
{
  return sub_249D9BBEC(&qword_2578DB0D8, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2AAE4);
}

unint64_t sub_249E58DDC()
{
  unint64_t result;

  result = qword_2578DB0E0;
  if (!qword_2578DB0E0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DemographicCategories, &type metadata for DemographicCategories);
    atomic_store(result, (unint64_t *)&qword_2578DB0E0);
  }
  return result;
}

unint64_t sub_249E58E20()
{
  unint64_t result;

  result = qword_2578DB0F8;
  if (!qword_2578DB0F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AD28, &type metadata for AugmentedPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB0F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AugmentedPrompt.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E58EA4 + 4 * byte_249F2AA80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E58EC4 + 4 * byte_249F2AA85[v4]))();
}

_BYTE *sub_249E58EA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E58EC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E58ECC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E58ED4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E58EDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E58EE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AugmentedPrompt.CodingKeys()
{
  return &type metadata for AugmentedPrompt.CodingKeys;
}

unint64_t sub_249E58F04()
{
  unint64_t result;

  result = qword_2578DB118;
  if (!qword_2578DB118)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AD00, &type metadata for AugmentedPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB118);
  }
  return result;
}

unint64_t sub_249E58F4C()
{
  unint64_t result;

  result = qword_2578DB120;
  if (!qword_2578DB120)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AC70, &type metadata for AugmentedPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB120);
  }
  return result;
}

unint64_t sub_249E58F94()
{
  unint64_t result;

  result = qword_2578DB128;
  if (!qword_2578DB128)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AC98, &type metadata for AugmentedPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB128);
  }
  return result;
}

uint64_t sub_249E58FD8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000249F36ED0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t getEnumTagSinglePayload for PixelBufferDescriptor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PixelBufferDescriptor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferDescriptor()
{
  return &type metadata for PixelBufferDescriptor;
}

uint64_t sub_249E590B8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v3;

  v1 = *(_DWORD *)(v0 + 16);
  v3 = sub_249F1FE08();
  sub_249F1F460();
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E72248(v1);
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_249E59184(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB148);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v14 = *((_DWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E59540();
  sub_249F20018();
  v12 = v8;
  v13 = v7;
  v15 = 0;
  sub_249E595C8();
  v9 = v11[1];
  sub_249F1FDCC();
  if (!v9)
  {
    LOBYTE(v12) = 1;
    sub_249F1FDE4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_249E592BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD v13[2];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB130);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E59540();
  sub_249F1FFF4();
  if (!v2)
  {
    v14 = 0;
    sub_249E59584();
    sub_249F1FD00();
    v9 = v13[0];
    v10 = v13[1];
    LOBYTE(v13[0]) = 1;
    v11 = sub_249F1FD18();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249E59424()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F466C65786970;
  else
    return 0x6F69736E656D6964;
}

uint64_t sub_249E59470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E597B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E59494()
{
  sub_249E59540();
  return sub_249F20024();
}

uint64_t sub_249E594BC()
{
  sub_249E59540();
  return sub_249F20030();
}

BOOL sub_249E594E4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16);
}

uint64_t sub_249E59518@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E592BC(a1, a2);
}

uint64_t sub_249E5952C(_QWORD *a1)
{
  return sub_249E59184(a1);
}

unint64_t sub_249E59540()
{
  unint64_t result;

  result = qword_2578DB138;
  if (!qword_2578DB138)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AF0C, &type metadata for PixelBufferDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB138);
  }
  return result;
}

unint64_t sub_249E59584()
{
  unint64_t result;

  result = qword_2578DB140;
  if (!qword_2578DB140)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PixelDimensions, &type metadata for PixelDimensions);
    atomic_store(result, (unint64_t *)&qword_2578DB140);
  }
  return result;
}

unint64_t sub_249E595C8()
{
  unint64_t result;

  result = qword_2578DB150;
  if (!qword_2578DB150)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PixelDimensions, &type metadata for PixelDimensions);
    atomic_store(result, (unint64_t *)&qword_2578DB150);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PixelBufferDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E59658 + 4 * byte_249F2AD85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E5968C + 4 * byte_249F2AD80[v4]))();
}

uint64_t sub_249E5968C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E59694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E5969CLL);
  return result;
}

uint64_t sub_249E596A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E596B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E596B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E596BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferDescriptor.CodingKeys()
{
  return &type metadata for PixelBufferDescriptor.CodingKeys;
}

unint64_t sub_249E596DC()
{
  unint64_t result;

  result = qword_2578DB158;
  if (!qword_2578DB158)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AEE4, &type metadata for PixelBufferDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB158);
  }
  return result;
}

unint64_t sub_249E59724()
{
  unint64_t result;

  result = qword_2578DB160;
  if (!qword_2578DB160)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AE54, &type metadata for PixelBufferDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB160);
  }
  return result;
}

unint64_t sub_249E5976C()
{
  unint64_t result;

  result = qword_2578DB168;
  if (!qword_2578DB168)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AE7C, &type metadata for PixelBufferDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB168);
  }
  return result;
}

uint64_t sub_249E597B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F69736E656D6964 && a2 == 0xEA0000000000736ELL;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F466C65786970 && a2 == 0xEF6570795474616DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t _prewarmDependencies()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_249E59934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  void **v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v1 = sub_249F1EE9C();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v0 + 40) = v2;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  if (qword_2578D5D80 != -1)
    swift_once();
  v4 = sub_249F1EED8();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v5 = sub_249F1EEC0();
  v6 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v7 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v7, v3, v1);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v5, v6, v9, "prewarmDependencies", "", v8, 2u);
    MEMORY[0x24BD06618](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_task_dealloc();
  }
  else
  {

  }
  v10 = (void **)(v0 + 16);
  swift_task_alloc();
  (*(void (**)(void))(v2 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 56) = sub_249F1EEFC();
  swift_task_dealloc();
  if (MEMORY[0x24BE7BE90])
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_visualGenerationManager);
    objc_msgSend(v11, sel_preheat);

  }
  v12 = objc_allocWithZone(MEMORY[0x24BE85398]);
  v13 = (void *)sub_249F1F304();
  v14 = objc_msgSend(v12, sel_initWithModelManagerServicesUseCaseID_, v13);

  v15 = objc_allocWithZone(MEMORY[0x24BE85390]);
  *v10 = 0;
  v16 = objc_msgSend(v15, sel_initWithConfiguration_error_, v14, v0 + 16);
  v17 = *v10;
  if (v16)
  {
    v18 = v16;
    v19 = v17;

    type metadata accessor for AppleDiffusionResourceFactory(0);
    *(_QWORD *)(v0 + 64) = static AppleDiffusionResourceFactory.shared()();
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE642A0]), sel_init);
    *(_QWORD *)(v0 + 72) = v20;
    if ((AppleDiffusionResourceFactory.imageClipEncoderVersion.getter() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v22 = 5;
    }
    else
    {
      v21 = sub_249F1FE2C();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        v22 = 5;
      else
        v22 = 3;
    }
    objc_msgSend(v20, sel_setRevision_, v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60E0);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_249F21760;
    *(_QWORD *)(v28 + 32) = v20;
    v34 = v28;
    sub_249F1F55C();
    *(_QWORD *)(v0 + 80) = v34;
    v29 = (void *)objc_opt_self();
    v30 = v20;
    v31 = objc_msgSend(v29, sel_service);
    *(_QWORD *)(v0 + 88) = v31;
    v32 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v32;
    *(_QWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 24) = v34;
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v33;
    *v33 = v0;
    v33[1] = sub_249E59E40;
    return sub_249F1FEEC();
  }
  else
  {
    v23 = v17;
    sub_249F1E710();

    swift_willThrow();
    v24 = *(_QWORD *)(v0 + 48);
    v25 = *(_QWORD *)(v0 + 32);
    v26 = *(_QWORD *)(v0 + 40);
    sub_249DDDF68("prewarmDependencies", 19, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249E59E40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249E59F04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(void **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD **)(v0 + 24);

  *v6 = v2;
  sub_249DDDF68("prewarmDependencies", 19, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E59FCC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 88);

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  sub_249DDDF68("prewarmDependencies", 19, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E5A0A0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB180);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_249E5A42C();
  v9 = (void *)sub_249F1F538();
  aBlock[4] = sub_249E5A3DC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249E11B88;
  aBlock[3] = &block_descriptor_6;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_prewarmMultiModalRequests_completionHandler_, v9, v10);
  _Block_release(v10);
  swift_release();

}

uint64_t sub_249E5A208(int a1, id a2)
{
  id v2;

  if (a1 == -1 && a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB180);
    sub_249F1F5BC();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB180);
  return sub_249F1F5C8();
}

uint64_t _prewarmDependencies()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_249E5A2DC;
  v1[3] = v0 + 48;
  return swift_task_switch();
}

uint64_t sub_249E5A2DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  _OWORD *v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = *(uint64_t (**)(void))(v3 + 8);
  }
  else
  {
    v5 = (_OWORD *)(v2 + 16);
    v6 = *(_QWORD *)(v2 + 48);
    if (v6)
    {
      *(_QWORD *)(v2 + 40) = &type metadata for PrewarmedDependencies;
      *(_QWORD *)(v2 + 16) = v6;
    }
    else
    {
      *v5 = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
    }
    sub_249E36D34((uint64_t)v5);
    v4 = *(uint64_t (**)(void))(v3 + 8);
  }
  return v4();
}

void sub_249E5A360(uint64_t a1)
{
  uint64_t v1;

  sub_249E5A0A0(a1, *(void **)(v1 + 16));
}

ValueMetadata *type metadata accessor for PrewarmedDependencies()
{
  return &type metadata for PrewarmedDependencies;
}

uint64_t sub_249E5A378()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB180);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_249E5A3DC(int a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB180);
  return sub_249E5A208(a1, a2);
}

unint64_t sub_249E5A42C()
{
  unint64_t result;

  result = qword_2578D9640;
  if (!qword_2578D9640)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578D9640);
  }
  return result;
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

CGColorRef sub_249E5A480(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;

  if ((a4 & 1) != 0)
  {
    v8 = a3 | a2;
    if (a3 | a2 | a1)
    {
      if (a1 == 1 && !v8)
      {
        v4 = 0.333;
LABEL_9:
        v7 = 1.0;
        v5 = v4;
        v6 = v4;
        return CGColorCreateGenericRGB(v4, v5, v6, v7);
      }
      if (a1 == 2 && !v8)
      {
        v4 = 0.5;
        v5 = 0.5;
LABEL_16:
        v6 = 0.5;
        v7 = 1.0;
        return CGColorCreateGenericRGB(v4, v5, v6, v7);
      }
      if (a1 == 3 && !v8)
      {
        v4 = 0.667;
        goto LABEL_9;
      }
      if (a1 == 4 && !v8)
      {
        v4 = 1.0;
LABEL_23:
        v5 = 1.0;
LABEL_24:
        v6 = 1.0;
        v7 = 1.0;
        return CGColorCreateGenericRGB(v4, v5, v6, v7);
      }
      if (a1 != 5 || v8)
      {
        if (a1 != 6 || v8)
        {
          if (a1 == 7 && !v8)
          {
            v4 = 0.0;
            v5 = 0.0;
            goto LABEL_24;
          }
          if (a1 == 8 && !v8)
          {
            v4 = 0.0;
            goto LABEL_23;
          }
          if (a1 != 9 || v8)
          {
            if (a1 == 10 && !v8)
            {
              v4 = 1.0;
              v5 = 0.0;
              goto LABEL_24;
            }
            if (a1 != 11 || v8)
            {
              if (a1 != 12 || v8)
                return CGColorCreateGenericRGB(0.6, 0.4, 0.2, 1.0);
              v4 = 0.5;
              v5 = 0.0;
              goto LABEL_16;
            }
            v4 = 1.0;
            v5 = 0.5;
          }
          else
          {
            v4 = 1.0;
            v5 = 1.0;
          }
        }
        else
        {
          v4 = 0.0;
          v5 = 1.0;
        }
LABEL_12:
        v6 = 0.0;
        v7 = 1.0;
        return CGColorCreateGenericRGB(v4, v5, v6, v7);
      }
      v4 = 1.0;
    }
    else
    {
      v4 = 0.0;
    }
    v5 = 0.0;
    goto LABEL_12;
  }
  v4 = *(double *)&a1;
  v5 = *(double *)&a2;
  v6 = *(double *)&a3;
  v7 = 1.0;
  return CGColorCreateGenericRGB(v4, v5, v6, v7);
}

void sub_249E5A610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  qword_2578FF3A0 = CGRectMake();
  *(_QWORD *)algn_2578FF3A8 = v0;
  qword_2578FF3B0 = v1;
  unk_2578FF3B8 = v2;
  byte_2578FF3C0 = 1;
}

void sub_249E5A63C(const __CFAttributedString *a1@<X0>, _QWORD *a2@<X8>)
{
  CGFloat v4;
  CGFloat v5;
  const __CTFramesetter *v6;
  CGSize v7;
  size_t v9[2];
  CFRange v10;
  CGSize v11;

  sub_249E5AB5C(v9);
  v4 = (double)(uint64_t)v9[0];
  v5 = (double)(uint64_t)v9[1];
  v6 = CTFramesetterCreateWithAttributedString(a1);
  v10.length = (CFIndex)-[__CFAttributedString length](a1, sel_length);
  v10.location = 0;
  v11.width = v4;
  v11.height = v5;
  v7 = CTFramesetterSuggestFrameSizeWithConstraints(v6, v10, 0, v11, 0);

  if (v7.width <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v7.width >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if ((*(_QWORD *)&v7.width & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v7.height & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_12;
  }
  if (v7.height <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7.height < 9.22337204e18)
  {
    *a2 = (uint64_t)v7.width;
    a2[1] = (uint64_t)v7.height;
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_249E5A758(const __CFAttributedString *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  CGContext *v7;
  CGFloat v8;
  CGFloat v9;
  const __CTFramesetter *v10;
  const CGPath *Mutable;
  const __CTFrame *Frame;
  CFRange fitRange;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CFRange v21;
  CGSize v22;

  v20 = *MEMORY[0x24BDAC8D0];
  v7 = *(CGContext **)(v4 + 32);
  CGContextSaveGState(v7);
  sub_249E5AB5C((size_t *)&v14);
  v8 = (double)v14;
  v9 = (double)v15;
  v10 = CTFramesetterCreateWithAttributedString(a1);
  v21.length = (CFIndex)-[__CFAttributedString length](a1, sel_length);
  fitRange.location = 0;
  fitRange.length = v21.length;
  v21.location = 0;
  v22.width = v8;
  v22.height = v9;
  CTFramesetterSuggestFrameSizeWithConstraints(v10, v21, 0, v22, &fitRange);
  if ((a4 & 1) != 0 && !*(_QWORD *)(*(_QWORD *)(v4 + 40) + 16))
    __break(1u);
  Mutable = CGPathCreateMutable();
  v14 = 0x3FF0000000000000;
  v15 = 0;
  v16 = 0;
  v17 = 0x3FF0000000000000;
  v18 = 0;
  v19 = 0;
  sub_249F1F850();
  Frame = CTFramesetterCreateFrame(v10, fitRange, Mutable, 0);
  CTFrameDraw(Frame, v7);

  CGContextRestoreGState(v7);
}

void sub_249E5A8F8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  char v18;

  v7 = (void *)sub_249F1F304();
  v16 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_, v7);

  if (!v16)
    return;
  v8 = (void *)sub_249F1F304();
  objc_msgSend(v16, sel_setValue_forKey_, a1, v8);

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, a3);
  v10 = (void *)sub_249F1F304();
  objc_msgSend(v16, sel_setValue_forKey_, v9, v10);

  v11 = objc_msgSend(v16, sel_outputImage);
  if (!v11)
  {
    v14 = v16;
LABEL_9:

    return;
  }
  v15 = v11;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
  objc_msgSend(v15, sel_extent);
  v13 = objc_msgSend(v12, sel_createCGImage_fromRect_, v15);

  if (!v13)
  {

    v14 = v15;
    goto LABEL_9;
  }
  sub_249DD9608(a2, (uint64_t)&v17);
  if ((v18 & 1) != 0 && !*(_QWORD *)(*(_QWORD *)(v3 + 40) + 16))
  {
    __break(1u);
  }
  else
  {
    sub_249F1F7C0();

  }
}

size_t sub_249E5AB5C@<X0>(size_t *a1@<X8>)
{
  uint64_t v1;
  CGContext *v3;
  size_t Width;
  size_t result;

  if ((*(_BYTE *)(v1 + 64) & 1) != 0)
  {
    v3 = *(CGContext **)(v1 + 32);
    Width = CGBitmapContextGetWidth(v3);
    result = CGBitmapContextGetHeight(v3);
    *(_QWORD *)(v1 + 48) = Width;
    *(_QWORD *)(v1 + 56) = result;
    *(_BYTE *)(v1 + 64) = 0;
  }
  else
  {
    Width = *(_QWORD *)(v1 + 48);
    result = *(_QWORD *)(v1 + 56);
  }
  *a1 = Width;
  a1[1] = result;
  return result;
}

uint64_t sub_249E5ABB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Canvas()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for Canvas.Color(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Canvas.Color(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

uint64_t sub_249E5AC54(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_249E5AC70(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    *(_BYTE *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Canvas.Color()
{
  return &type metadata for Canvas.Color;
}

double CGRectMake()
{
  return 0.0;
}

uint64_t sub_249E5ACB8(void *a1)
{
  uint64_t v1;
  CGContext *v2;
  int64_t Width;
  double Height;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 1;
  *(_QWORD *)(v1 + 32) = a1;
  v2 = a1;
  Width = CGBitmapContextGetWidth(v2);
  Height = (double)(uint64_t)CGBitmapContextGetHeight(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D18);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_249F21770;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0;
  *(double *)(v5 + 48) = (double)Width;
  *(double *)(v5 + 56) = Height;
  *(_QWORD *)(v1 + 40) = v5;
  return v1;
}

CGColorSpace *sub_249E5AD4C(void *a1)
{
  id v2;
  CGImage *v3;
  CGImage *v4;
  size_t Width;
  size_t Height;
  CGColorSpace *result;
  CGColorSpace *v8;
  CGContextRef v9;
  uint64_t v10;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_initWithOptions_, 0);
  objc_msgSend(a1, sel_extent);
  v3 = (CGImage *)objc_msgSend(v2, sel_createCGImage_fromRect_, a1);
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  Width = CGImageGetWidth(v3);
  Height = CGImageGetHeight(v4);
  result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF318]);
  if (!result)
  {
LABEL_6:

    return 0;
  }
  if ((Width - 0x2000000000000000) >> 62 == 3)
  {
    v8 = result;
    v9 = CGBitmapContextCreate(0, Width, Height, 8uLL, 4 * Width, result, 2u);

    if (v9)
    {
      sub_249F1F7C0();
      type metadata accessor for Canvas();
      swift_allocObject();
      v10 = sub_249E5ACB8(v9);

      return (CGColorSpace *)v10;
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_249E5AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  __CFString *v13;
  CTFontRef v14;
  const __CTFont *v15;
  __CFString *v16;
  CTFontRef v17;
  CGColorRef v18;
  uint64_t inited;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  CGColor *v25;
  id v26;
  id v27;
  id v28;
  const __CTFont *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  CFRange v35;

  if ((a6 & 1) != 0)
    *(double *)&a5 = 12.0;
  swift_bridgeObjectRetain();
  v13 = (__CFString *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v14 = CTFontCreateWithName(v13, *(CGFloat *)&a5, 0);

  v15 = v14;
  v16 = (__CFString *)sub_249F1F304();
  v35.length = CFStringGetLength(v16);
  v35.location = 0;
  v17 = CTFontCreateForString(v15, v16, v35);

  v18 = sub_249E5A480(a7, a8, a9, a10 & 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D77E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F22C20;
  v20 = (void *)*MEMORY[0x24BDC4EE0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDC4EE0];
  type metadata accessor for CGColor(0);
  *(_QWORD *)(inited + 40) = v18;
  v21 = (void *)*MEMORY[0x24BDC4F30];
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 72) = v21;
  *(_QWORD *)(inited + 80) = v18;
  v23 = (void *)*MEMORY[0x24BDC4C28];
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 112) = v23;
  type metadata accessor for CTFont(0);
  *(_QWORD *)(inited + 144) = v24;
  *(_QWORD *)(inited + 120) = v17;
  v25 = v18;
  v26 = v20;
  v27 = v21;
  v28 = v23;
  v29 = v17;
  sub_249DAEB18(inited);
  v30 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  swift_bridgeObjectRetain();
  v31 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_249E0E928();
  v32 = (void *)sub_249F1F1F0();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

  return v33;
}

uint64_t getEnumTagSinglePayload for Canvas.Rect(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Canvas.Rect(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_249E5B1A0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Canvas.Rect()
{
  return &type metadata for Canvas.Rect;
}

uint64_t Gender.radarDescription.getter()
{
  return sub_249F1F3AC();
}

void sub_249E5B1E8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  _BYTE v20[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_249F1E7F4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v20[-v8];
  type metadata accessor for NonMaxLineSuppressFilter();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)sub_249F1F304();
  v13 = (void *)sub_249F1F304();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_249F1E7A0();

    v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      v16 = sub_249F1E800();
      v18 = v17;
      sub_249D9D9F4(0, &qword_2578DB438);
      sub_249DC3928(v16, v18);
      v19 = sub_249E5BC98();
      sub_249DC3C24(v16, v18);
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
      sub_249DC3C24(v16, v18);

      qword_2578FF3C8 = (uint64_t)v19;
      return;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  __break(1u);
  swift_unexpectedError();
  __break(1u);
  swift_unexpectedError();
  __break(1u);
}

void sub_249E5B4C4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  _BYTE v20[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_249F1E7F4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v20[-v8];
  type metadata accessor for NonMaxLineSuppressFilter();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)sub_249F1F304();
  v13 = (void *)sub_249F1F304();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_249F1E7A0();

    v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      v16 = sub_249F1E800();
      v18 = v17;
      sub_249D9D9F4(0, &qword_2578DB440);
      sub_249DC3928(v16, v18);
      v19 = sub_249E5BC98();
      sub_249DC3C24(v16, v18);
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
      sub_249DC3C24(v16, v18);

      qword_2578FF3D0 = (uint64_t)v19;
      return;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  __break(1u);
  swift_unexpectedError();
  __break(1u);
  swift_unexpectedError();
  __break(1u);
}

id sub_249E5B7D4()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  uint64_t v23;
  int v24;
  id v25;
  void *v26;
  id v27;
  uint64_t aBlock;
  uint64_t v30;
  double (*v31)(uint64_t, uint64_t, double, double, double, double);
  void *v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16VisualGeneration24NonMaxLineSuppressFilter_inputImage);
  if (!v1)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB428);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21910;
  sub_249F1F328();
  v3 = v1;
  v4 = MEMORY[0x24BEE0D00];
  sub_249F1FA3C();
  v5 = sub_249F1F328();
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v6;
  aBlock = sub_249F1F328();
  v30 = v7;
  sub_249F1FA3C();
  v8 = sub_249F1F328();
  *(_QWORD *)(inited + 168) = v4;
  *(_QWORD *)(inited + 144) = v8;
  *(_QWORD *)(inited + 152) = v9;
  sub_249DADF2C(inited);
  v10 = objc_allocWithZone(MEMORY[0x24BDBF688]);
  v11 = (void *)sub_249F1F1F0();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_initWithImage_options_, v3, v11);

  if (qword_2578D5D50 != -1)
    swift_once();
  v13 = (id)qword_2578FF3C8;
  objc_msgSend(v3, sel_extent);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v33 = nullsub_1;
  v34 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v30 = 1107296256;
  v31 = sub_249E5BAE0;
  v32 = &block_descriptor_7;
  v22 = _Block_copy(&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E10);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_249F21910;
  *(_QWORD *)(v23 + 56) = sub_249D9D9F4(0, &qword_2578DB430);
  *(_QWORD *)(v23 + 32) = v12;
  v24 = *(_DWORD *)(v0 + OBJC_IVAR____TtC16VisualGeneration24NonMaxLineSuppressFilter_threshold);
  *(_QWORD *)(v23 + 88) = MEMORY[0x24BEE14E8];
  *(_DWORD *)(v23 + 64) = v24;
  v25 = v12;
  v26 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v13, sel_applyWithExtent_roiCallback_arguments_, v22, v26, v15, v17, v19, v21);

  _Block_release(v22);
  return v27;
}

double sub_249E5BAE0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  double (*v11)(uint64_t, double, double, double, double);
  double v12;

  v11 = *(double (**)(uint64_t, double, double, double, double))(a1 + 32);
  swift_retain();
  v12 = v11(a2, a3, a4, a5, a6);
  swift_release();
  return v12;
}

id sub_249E5BC20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NonMaxLineSuppressFilter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NonMaxLineSuppressFilter()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

id sub_249E5BC98()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_249F1E824();
  v6[0] = 0;
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_kernelWithFunctionName_fromMetalLibraryData_error_, v0, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_249F1E710();

    swift_willThrow();
  }
  return v2;
}

uint64_t FrameworkError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v2);
  sub_249F1F2D4();
  sub_249F1F2C8();
  sub_249F1F2BC();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  return sub_249F1F388();
}

unint64_t sub_249E5BF60()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0xD000000000000015;
}

uint64_t sub_249E5BFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E5CF80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E5BFC4()
{
  sub_249E5C45C();
  return sub_249F20024();
}

uint64_t sub_249E5BFEC()
{
  sub_249E5C45C();
  return sub_249F20030();
}

uint64_t sub_249E5C014()
{
  return 0x7470697263736564;
}

uint64_t sub_249E5C034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249E5C0E0()
{
  sub_249E5C4A0();
  return sub_249F20024();
}

uint64_t sub_249E5C108()
{
  sub_249E5C4A0();
  return sub_249F20030();
}

uint64_t sub_249E5C130()
{
  return 0x696669746E656469;
}

uint64_t sub_249E5C14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249E5C1EC()
{
  sub_249E5C4E4();
  return sub_249F20024();
}

uint64_t sub_249E5C214()
{
  sub_249E5C4E4();
  return sub_249F20030();
}

uint64_t FrameworkError.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB448);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB450);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB458);
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v21 = v1[1];
  v22 = v12;
  v13 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E5C45C();
  sub_249F20018();
  if ((v13 & 1) != 0)
  {
    v25 = 1;
    sub_249E5C4A0();
    sub_249F1FD3C();
    v14 = v20;
    sub_249F1FD90();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v14);
  }
  else
  {
    v24 = 0;
    sub_249E5C4E4();
    sub_249F1FD3C();
    v15 = v18;
    sub_249F1FD90();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v9);
}

unint64_t sub_249E5C45C()
{
  unint64_t result;

  result = qword_2578DB460;
  if (!qword_2578DB460)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B468, &type metadata for FrameworkError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB460);
  }
  return result;
}

unint64_t sub_249E5C4A0()
{
  unint64_t result;

  result = qword_2578DB468;
  if (!qword_2578DB468)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B418, &type metadata for FrameworkError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB468);
  }
  return result;
}

unint64_t sub_249E5C4E4()
{
  unint64_t result;

  result = qword_2578DB470;
  if (!qword_2578DB470)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B3C8, &type metadata for FrameworkError.UnknownImageGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB470);
  }
  return result;
}

uint64_t FrameworkError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  char v39;
  char v40;

  v32 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB478);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB480);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB488);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_249E5C45C();
  v13 = v37;
  sub_249F1FFF4();
  if (v13)
    goto LABEL_6;
  v31 = v5;
  v14 = v4;
  v16 = v34;
  v15 = v35;
  v37 = v9;
  v17 = sub_249F1FD24();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v18 = sub_249F1FAF0();
    swift_allocError();
    v19 = v11;
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v21 = &type metadata for FrameworkError;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v8);
LABEL_6:
    v22 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  v38 = *(unsigned __int8 *)(v17 + 32);
  if ((v38 & 1) != 0)
  {
    v31 = v17;
    v40 = 1;
    sub_249E5C4A0();
    sub_249F1FC64();
    v25 = sub_249F1FCC4();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v15);
  }
  else
  {
    v39 = 0;
    sub_249E5C4E4();
    v24 = v7;
    sub_249F1FC64();
    v25 = sub_249F1FCC4();
    v27 = v28;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v14);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
  v22 = (uint64_t)v36;
  v29 = v32;
  *v32 = v25;
  v29[1] = v27;
  *((_BYTE *)v29 + 16) = v38;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

unint64_t sub_249E5C8EC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249E5C920();
  a1[2] = sub_249E5C964();
  result = sub_249D9D9B0();
  a1[3] = result;
  return result;
}

unint64_t sub_249E5C920()
{
  unint64_t result;

  result = qword_2578DB490;
  if (!qword_2578DB490)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for FrameworkError, &type metadata for FrameworkError);
    atomic_store(result, (unint64_t *)&qword_2578DB490);
  }
  return result;
}

unint64_t sub_249E5C964()
{
  unint64_t result;

  result = qword_2578DB498;
  if (!qword_2578DB498)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for FrameworkError, &type metadata for FrameworkError);
    atomic_store(result, (unint64_t *)&qword_2578DB498);
  }
  return result;
}

uint64_t sub_249E5C9A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FrameworkError.init(from:)(a1, a2);
}

uint64_t sub_249E5C9BC(_QWORD *a1)
{
  return FrameworkError.encode(to:)(a1);
}

uint64_t sub_249E5C9D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FrameworkError()
{
  return sub_249E5C9EC();
}

uint64_t sub_249E5C9EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16VisualGeneration14FrameworkErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_249E5C9D4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FrameworkError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_249E5C9D4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_249E5C9EC();
  return a1;
}

uint64_t assignWithTake for FrameworkError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_249E5C9EC();
  return a1;
}

uint64_t getEnumTagSinglePayload for FrameworkError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FrameworkError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_249E5CB60(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FrameworkError()
{
  return &type metadata for FrameworkError;
}

uint64_t storeEnumTagSinglePayload for FrameworkError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E5CBC8 + 4 * byte_249F2B005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E5CBFC + 4 * asc_249F2B000[v4]))();
}

uint64_t sub_249E5CBFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E5CC04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E5CC0CLL);
  return result;
}

uint64_t sub_249E5CC18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E5CC20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E5CC24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E5CC2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FrameworkError.CodingKeys()
{
  return &type metadata for FrameworkError.CodingKeys;
}

ValueMetadata *type metadata accessor for FrameworkError.UnknownImageGeneratorCodingKeys()
{
  return &type metadata for FrameworkError.UnknownImageGeneratorCodingKeys;
}

uint64_t _s16VisualGeneration14FrameworkErrorO31UnknownImageGeneratorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E5CC9C + 4 * byte_249F2B00A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E5CCBC + 4 * byte_249F2B00F[v4]))();
}

_BYTE *sub_249E5CC9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E5CCBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E5CCC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E5CCCC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E5CCD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E5CCDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FrameworkError.UnexpectedConditionCodingKeys()
{
  return &type metadata for FrameworkError.UnexpectedConditionCodingKeys;
}

unint64_t sub_249E5CCFC()
{
  unint64_t result;

  result = qword_2578DB4A0;
  if (!qword_2578DB4A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B230, &type metadata for FrameworkError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4A0);
  }
  return result;
}

unint64_t sub_249E5CD44()
{
  unint64_t result;

  result = qword_2578DB4A8;
  if (!qword_2578DB4A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B2E8, &type metadata for FrameworkError.UnknownImageGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4A8);
  }
  return result;
}

unint64_t sub_249E5CD8C()
{
  unint64_t result;

  result = qword_2578DB4B0;
  if (!qword_2578DB4B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B3A0, &type metadata for FrameworkError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4B0);
  }
  return result;
}

unint64_t sub_249E5CDD4()
{
  unint64_t result;

  result = qword_2578DB4B8;
  if (!qword_2578DB4B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B258, &type metadata for FrameworkError.UnknownImageGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4B8);
  }
  return result;
}

unint64_t sub_249E5CE1C()
{
  unint64_t result;

  result = qword_2578DB4C0;
  if (!qword_2578DB4C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B280, &type metadata for FrameworkError.UnknownImageGeneratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4C0);
  }
  return result;
}

unint64_t sub_249E5CE64()
{
  unint64_t result;

  result = qword_2578DB4C8;
  if (!qword_2578DB4C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B1A0, &type metadata for FrameworkError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4C8);
  }
  return result;
}

unint64_t sub_249E5CEAC()
{
  unint64_t result;

  result = qword_2578DB4D0;
  if (!qword_2578DB4D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B1C8, &type metadata for FrameworkError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4D0);
  }
  return result;
}

unint64_t sub_249E5CEF4()
{
  unint64_t result;

  result = qword_2578DB4D8;
  if (!qword_2578DB4D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B310, &type metadata for FrameworkError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4D8);
  }
  return result;
}

unint64_t sub_249E5CF3C()
{
  unint64_t result;

  result = qword_2578DB4E0;
  if (!qword_2578DB4E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2B338, &type metadata for FrameworkError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB4E0);
  }
  return result;
}

uint64_t sub_249E5CF80(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000249F37150 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249F35020)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249E5D06C()
{
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_249E5D078()
{
  return 0xD000000000000032;
}

void sub_249E5D094(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for UnsupportedArchitectureImageGenerator.Descriptor;
  *(_QWORD *)(a1 + 32) = &off_251B56808;
}

uint64_t sub_249E5D0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = *(_QWORD *)(type metadata accessor for GeneratedImage() - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = type metadata accessor for ImageProvenance();
  v4[15] = swift_task_alloc();
  v5 = sub_249F1E8D8();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E5D168()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(_BYTE *, uint64_t, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249E33288();
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v5 = *(_QWORD *)(v0 + 56);
    v35 = *(_QWORD *)(v5 + 48);
    if (v35 < 1)
    {
      v11 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v6 = *(int **)(v0 + 112);
      v30 = (_QWORD *)(v0 + 16);
      v31 = *(_QWORD *)(v0 + 88);
      v7 = *(_QWORD *)(v5 + 24);
      v8 = *(_QWORD *)(v5 + 32);
      v9 = *(_BYTE *)(v5 + 40) == 0;
      v10 = 512;
      if (v9)
        v10 = v8;
      else
        v7 = 512;
      v33 = v10;
      v34 = v7;
      v32 = *(void (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 16);
      v32(*(_BYTE **)(v0 + 144), *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_id, *(_QWORD *)(v0 + 128));
      v11 = MEMORY[0x24BEE4AF8];
      v12 = 1;
      while (1)
      {
        v13 = *(_BYTE **)(v0 + 120);
        v15 = *(_QWORD *)(v0 + 96);
        v14 = *(_QWORD *)(v0 + 104);
        v16 = **(_BYTE **)(v0 + 56);
        v32(&v13[v6[5]], *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
        *v13 = v16;
        *(_QWORD *)&v13[v6[6]] = v12;
        *(_QWORD *)&v13[v6[7]] = 0;
        v37[0] = v34;
        v37[1] = v33;
        sub_249E5D4F8(v37, (uint64_t)v13, v14);
        sub_249DC091C(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_249DB292C(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
        v18 = *(_QWORD *)(v11 + 16);
        v17 = *(_QWORD *)(v11 + 24);
        if (v18 >= v17 >> 1)
          v11 = sub_249DB292C(v17 > 1, v18 + 1, 1, v11);
        v19 = *(_QWORD *)(v0 + 120);
        v20 = *(_QWORD *)(v0 + 96);
        v21 = *(_QWORD *)(v0 + 104);
        *(_QWORD *)(v11 + 16) = v18 + 1;
        sub_249DE6ECC(v20, v11+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v18);
        sub_249DC05A8(v21, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        result = sub_249DC05A8(v19, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
        if (v35 == v12)
          break;
        if (__OFADD__(v12++, 1))
        {
          __break(1u);
          return result;
        }
      }
      sub_249DD9484(*(_QWORD *)(v0 + 72), (uint64_t)v30);
      v23 = *(_QWORD *)(v0 + 40);
      v24 = *(_QWORD *)(v0 + 136);
      v25 = *(_QWORD *)(v0 + 128);
      if (v23)
      {
        v26 = *(_QWORD *)(v0 + 80);
        v27 = *(_QWORD *)(v0 + 64);
        v28 = *(_QWORD *)(v0 + 48);
        v36 = *(_QWORD *)(v0 + 144);
        __swift_project_boxed_opaque_existential_1(v30, v23);
        v29 = *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v28 + 32);
        swift_bridgeObjectRetain();
        v29(v26, v27, v11, v23, v28);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v36, v25);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v24 + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
        sub_249DD94CC((uint64_t)v30);
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v11);
  }
}

void sub_249E5D4F8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  CGColorSpace *v10;
  CGColorSpace *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const __CFAttributedString *v16;
  CGImageRef Image;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;

  v5 = *a1;
  v6 = a1[1];
  v7 = objc_msgSend((id)objc_opt_self(), sel_blackImage);
  v8 = objc_msgSend(v7, sel_imageByCroppingToRect_, 0.0, 0.0, (double)v5, (double)v6);

  v9 = v8;
  v10 = sub_249E5AD4C(v9);
  if (v10)
  {
    v11 = v10;
    v12 = sub_249E5D7D4();
    if (v13)
      v14 = v12;
    else
      v14 = 6645844;
    if (v13)
      v15 = v13;
    else
      v15 = 0xE300000000000000;
    sub_249F1FA84();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    v16 = (const __CFAttributedString *)sub_249E5AEB0(v14, v15, 0, 0, COERCE__INT64((double)v6 / 10.0), 0, 4, 0, 0, 1);
    sub_249E5A758(v16, 0x3FE0000000000000, 0x3FE0000000000000, 1);
    swift_bridgeObjectRelease();

    Image = CGBitmapContextCreateImage(*((CGContextRef *)v11 + 4));
    v18 = type metadata accessor for GeneratedImage();
    sub_249DC091C(a2, a3 + *(int *)(v18 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    if (Image)
    {
      *(_QWORD *)a3 = Image;
      *(_BYTE *)(a3 + 8) = 0;
      v19 = (_BYTE *)(a3 + *(int *)(v18 + 24));
      *v19 = 2;
      v20 = type metadata accessor for GeneratedImageIndications();
      v21 = &v19[*(int *)(v20 + 20)];
      v22 = sub_249F1F13C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      swift_release();

    }
    else
    {
      *(_QWORD *)a3 = v9;
      *(_BYTE *)(a3 + 8) = 1;
      v19 = (_BYTE *)(a3 + *(int *)(v18 + 24));
      *v19 = 2;
      v20 = type metadata accessor for GeneratedImageIndications();
      v26 = &v19[*(int *)(v20 + 20)];
      v27 = sub_249F1F13C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
      swift_release();
    }
  }
  else
  {
    v23 = type metadata accessor for GeneratedImage();
    sub_249DC091C(a2, a3 + *(int *)(v23 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    *(_QWORD *)a3 = v9;
    *(_BYTE *)(a3 + 8) = 1;
    v19 = (_BYTE *)(a3 + *(int *)(v23 + 24));
    *v19 = 2;
    v20 = type metadata accessor for GeneratedImageIndications();
    v24 = &v19[*(int *)(v20 + 20)];
    v25 = sub_249F1F13C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  }
  *(_QWORD *)&v19[*(int *)(v20 + 24)] = 0;
}

uint64_t sub_249E5D7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1;
  if (v2 == 1)
  {
    v3 = sub_249E5D8CC();
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 24) = v6;
    swift_bridgeObjectRetain();
    sub_249DFBBC4(v4, v5);
  }
  sub_249E5DA84(v1, v2);
  return v3;
}

double sub_249E5D854()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_249F27E00;
  return result;
}

uint64_t sub_249E5D880()
{
  uint64_t v0;

  return sub_249DFBBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249E5D888()
{
  uint64_t v0;

  sub_249DFBBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsupportedArchitectureImageGenerator()
{
  return objc_opt_self();
}

uint64_t sub_249E5D8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  utsname v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v0 = sub_249F1E4DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1F37C();
  MEMORY[0x24BDAC7A8](v4);
  bzero(&v13, 0x500uLL);
  v5 = 0;
  if (!uname(&v13))
  {
    v6 = sub_249DDFB64(v13.machine, 256);
    v8 = v7;
    v14 = v6;
    v15 = v7;
    sub_249F1F370();
    sub_249E5DA98();
    v9 = sub_249F1F34C();
    v5 = v9;
    if (v10)
    {
      v14 = v9;
      v15 = v10;
      sub_249F1E4C4();
      sub_249D9E5BC();
      v5 = sub_249F1F9C4();
      sub_249DC3C24(v6, v8);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249DC3C24(v6, v8);
    }
  }
  return v5;
}

uint64_t sub_249E5DA84(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_249E5DA98()
{
  unint64_t result;

  result = qword_2578DB608;
  if (!qword_2578DB608)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BDCDE28], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578DB608);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedArchitectureImageGenerator.Descriptor()
{
  return &type metadata for UnsupportedArchitectureImageGenerator.Descriptor;
}

uint64_t sub_249E5DAEC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_249DB2098(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E50);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E5DC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_249DB20AC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E5DDA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_249DB23F8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E5DEE8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_249DB2820(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E5E03C(uint64_t a1)
{
  return sub_249E5E064(a1, (uint64_t (*)(void))sub_249DB20B8, type metadata accessor for Concept);
}

uint64_t sub_249E5E050(uint64_t a1)
{
  return sub_249E5E064(a1, (uint64_t (*)(void))sub_249DB292C, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
}

uint64_t sub_249E5E064(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t static ModelManagerInferenceProvider.available.getter()
{
  return 1;
}

uint64_t sub_249E5E1E4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD);
  uint64_t v33;
  _QWORD v36[5];
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char v46[32];
  __int128 bytes;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;

  v42 = a2;
  v52 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  MEMORY[0x24BDAC7A8](v3);
  v36[2] = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_249F1EF98();
  v36[4] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36[3] = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DD080);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249F1EF68();
  v40 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249F1FBBC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v36 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v45 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v36 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v36 - v25;
  v27 = a1[1];
  v49 = *a1;
  v50 = v27;
  v51 = *((_QWORD *)a1 + 4);
  sub_249F1E4B8();
  swift_allocObject();
  v28 = sub_249F1E4AC();
  sub_249F1FBB0();
  sub_249DCC274((uint64_t)v26, (uint64_t)v24, &qword_2578DC0E8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v30 = v29(v24, 1, v10);
  v41 = v29;
  if (v30 == 1)
  {
    sub_249DCC2FC((uint64_t)v24, &qword_2578DC0E8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v24, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v18, v10);
    v48 = v8;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&bytes);
    sub_249F1EF5C();
    v31 = v11;
    v32 = (void (*)(char *, _QWORD))sub_249F1E494();
    sub_249E8A934((uint64_t)&bytes, (uint64_t)v16);
    v32(v46, 0);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v10);
  }
  sub_249E6E79C();
  v33 = v44;
  sub_249F1E488();
  if (!v33)
  {
    v44 = v28;
    __asm { BR              X10 }
  }
  sub_249DCC2FC((uint64_t)v26, &qword_2578DC0E8);
  return swift_release();
}

uint64_t sub_249E5EA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  void (*v29)(_BYTE *, _QWORD);
  uint64_t v30;
  _QWORD v33[15];
  char *v34;
  _BYTE v35[32];
  uint64_t bytes[3];
  uint64_t v37;
  uint64_t v38;

  v33[12] = a1;
  v33[10] = a2;
  v38 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  MEMORY[0x24BDAC7A8](v2);
  v33[2] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1EF98();
  v33[4] = *(_QWORD *)(v4 - 8);
  v33[5] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33[3] = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DD080);
  MEMORY[0x24BDAC7A8](v6);
  v33[14] = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249F1EF68();
  v33[6] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v33[1] = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249F1FBBC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v33[11] = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v33 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v33[9] = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v33 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v33 - v25;
  sub_249F1E4B8();
  swift_allocObject();
  sub_249F1E4AC();
  sub_249F1FBB0();
  v34 = v26;
  sub_249DCC274((uint64_t)v26, (uint64_t)v24, &qword_2578DC0E8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v28 = v27(v24, 1, v10);
  v33[7] = v8;
  v33[8] = v27;
  if (v28 == 1)
  {
    sub_249DCC2FC((uint64_t)v24, &qword_2578DC0E8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v24, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v18, v10);
    v37 = v8;
    __swift_allocate_boxed_opaque_existential_1(bytes);
    sub_249F1EF5C();
    v29 = (void (*)(_BYTE *, _QWORD))sub_249F1E494();
    sub_249E8A934((uint64_t)bytes, (uint64_t)v16);
    v29(v35, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }
  type metadata accessor for ModelManagerInferenceProvider.Input(0);
  sub_249D9BBEC(&qword_2578DC0F8, type metadata accessor for ModelManagerInferenceProvider.Input, (uint64_t)&unk_249F2BFC0);
  v30 = v33[13];
  sub_249F1E488();
  if (!v30)
    __asm { BR              X10 }
  sub_249DCC2FC((uint64_t)v34, &qword_2578DC0E8);
  return swift_release();
}

uint64_t sub_249E5F2B4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char v24;
  char v25;
  __int128 v26;
  _OWORD *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD);
  _BYTE *data;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  size_t length[4];
  __int128 v45;
  char v46;
  char v47;
  __int128 v48;
  uint64_t v49;

  v39 = a1;
  v49 = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1FBBC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - v14;
  sub_249F1E44C();
  swift_allocObject();
  v42 = sub_249F1E440();
  v41 = sub_249F1ECA4();
  v17 = v16;
  sub_249F1FBB0();
  sub_249DCC274((uint64_t)v15, (uint64_t)v13, &qword_2578DC0E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    sub_249DCC2FC((uint64_t)v13, &qword_2578DC0E8);
  }
  else
  {
    v37 = v17;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v13, v4);
    sub_249F1EC8C();
    v18 = sub_249F1EF98();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v3, 1, v18) == 1)
    {
      sub_249DCC2FC((uint64_t)v3, &qword_2578D7C00);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
    else
    {
      v28 = v9;
      v29 = (void *)sub_249F1EF80();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v18);
      v30 = MEMORY[0x24BD06858](v29);
      if (v30 != sub_249F1EF44())
      {
        sub_249DE0540();
        swift_allocError();
        *(_QWORD *)v31 = 0;
        *(_QWORD *)(v31 + 8) = 0;
        *(_BYTE *)(v31 + 16) = 4;
        swift_willThrow();
        sub_249DD3B94(v41, v37);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
        return sub_249DCC2FC((uint64_t)v15, &qword_2578DC0E8);
      }
      v32 = (uint64_t)v38;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v38, v28, v4);
      length[3] = sub_249F1EF68();
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)length);
      swift_unknownObjectRetain();
      sub_249F1EF74();
      v33 = (void (*)(char *, _QWORD))sub_249F1E434();
      sub_249E8A934((uint64_t)length, v32);
      v33(v43, 0);
      length[0] = 0;
      data = xpc_dictionary_get_data(v29, "DATA", length);
      if (data)
      {
        v35 = sub_249DDFB64(data, length[0]);
        v17 = v36;
        sub_249DD3B94(v41, v37);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
        sub_249DC3928(v35, v17);
        v20 = v35;
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
      swift_unknownObjectRelease();
    }
    v17 = v37;
  }
  v20 = v41;
  if (v17 >> 60 == 15)
  {
    sub_249DE0540();
    swift_allocError();
    *(_QWORD *)v21 = 0;
    *(_QWORD *)(v21 + 8) = 0;
    *(_BYTE *)(v21 + 16) = 4;
    swift_willThrow();
    swift_release();
    return sub_249DCC2FC((uint64_t)v15, &qword_2578DC0E8);
  }
  sub_249DC3928(v41, v17);
LABEL_9:
  sub_249E6E740();
  v22 = v40;
  sub_249F1E428();
  sub_249DCC2FC((uint64_t)v15, &qword_2578DC0E8);
  sub_249DD3B94(v20, v17);
  swift_release();
  result = sub_249DC3C24(v20, v17);
  if (!v22)
  {
    v24 = v46;
    v25 = v47;
    v26 = v48;
    v27 = v39;
    *v39 = v45;
    *((_BYTE *)v27 + 16) = v24;
    *((_BYTE *)v27 + 17) = v25;
    *(_OWORD *)((char *)v27 + 24) = v26;
  }
  return result;
}

uint64_t sub_249E5F7A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _QWORD);
  _BYTE *data;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[32];
  size_t length[5];

  v35 = a1;
  length[4] = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1FBBC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v34 = type metadata accessor for ModelManagerInferenceProvider.Input(0);
  sub_249F1E44C();
  swift_allocObject();
  v37 = sub_249F1E440();
  v36 = sub_249F1ECA4();
  v17 = v16;
  sub_249F1FBB0();
  sub_249DCC274((uint64_t)v15, (uint64_t)v13, &qword_2578DC0E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    sub_249DCC2FC((uint64_t)v13, &qword_2578DC0E8);
  }
  else
  {
    v32 = v17;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v13, v4);
    sub_249F1EC8C();
    v18 = sub_249F1EF98();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v3, 1, v18) == 1)
    {
      sub_249DCC2FC((uint64_t)v3, &qword_2578D7C00);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
    else
    {
      v23 = (void *)sub_249F1EF80();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v18);
      v24 = MEMORY[0x24BD06858](v23);
      if (v24 != sub_249F1EF44())
      {
        sub_249DE0540();
        swift_allocError();
        *(_QWORD *)v25 = 0;
        *(_QWORD *)(v25 + 8) = 0;
        *(_BYTE *)(v25 + 16) = 4;
        swift_willThrow();
        sub_249DD3B94(v36, v32);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
        return sub_249DCC2FC((uint64_t)v15, &qword_2578DC0E8);
      }
      v26 = (uint64_t)v33;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v33, v9, v4);
      length[3] = sub_249F1EF68();
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)length);
      swift_unknownObjectRetain();
      sub_249F1EF74();
      v27 = (void (*)(_BYTE *, _QWORD))sub_249F1E434();
      sub_249E8A934((uint64_t)length, v26);
      v27(v38, 0);
      length[0] = 0;
      data = xpc_dictionary_get_data(v23, "DATA", length);
      if (data)
      {
        v29 = sub_249DDFB64(data, length[0]);
        v31 = v30;
        sub_249DD3B94(v36, v32);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
        sub_249DC3928(v29, v31);
        v20 = v29;
        v17 = v31;
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      swift_unknownObjectRelease();
    }
    v17 = v32;
  }
  v20 = v36;
  if (v17 >> 60 != 15)
  {
    sub_249DC3928(v36, v17);
LABEL_9:
    sub_249D9BBEC(&qword_2578DC120, type metadata accessor for ModelManagerInferenceProvider.Input, (uint64_t)&unk_249F2BFE8);
    sub_249F1E428();
    sub_249DCC2FC((uint64_t)v15, &qword_2578DC0E8);
    sub_249DD3B94(v20, v17);
    swift_release();
    return sub_249DC3C24(v20, v17);
  }
  sub_249DE0540();
  swift_allocError();
  *(_QWORD *)v21 = 0;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 4;
  swift_willThrow();
  swift_release();
  return sub_249DCC2FC((uint64_t)v15, &qword_2578DC0E8);
}

uint64_t sub_249E5FC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_249F1F604();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_249F1F5F8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_249DCC2FC(a1, &qword_2578D62B8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_249F1F5B0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_249E5FDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_249F1F604();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_249F1F5F8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_249DCC2FC(a1, &qword_2578D62B8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_249F1F5B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
  return swift_task_create();
}

uint64_t sub_249E5FEE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_249E5FF24 + 4 * byte_249F2B570[a1]))(0xD000000000000015, 0x8000000249F37750);
}

unint64_t sub_249E5FF24()
{
  return 0xD000000000000019;
}

uint64_t sub_249E5FF70()
{
  uint64_t v0;

  return v0 - 9;
}

uint64_t sub_249E5FFC8()
{
  return 0x53676E697373696DLL;
}

uint64_t sub_249E5FFE8()
{
  sub_249E60CCC();
  return sub_249F20024();
}

uint64_t sub_249E60010()
{
  sub_249E60CCC();
  return sub_249F20030();
}

uint64_t sub_249E60038()
{
  unsigned __int8 *v0;

  return sub_249E5FEE8(*v0);
}

uint64_t sub_249E60040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E69F00(a1, a2);
  *a3 = result;
  return result;
}

void sub_249E60064(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_249E60070()
{
  sub_249E60BBC();
  return sub_249F20024();
}

uint64_t sub_249E60098()
{
  sub_249E60BBC();
  return sub_249F20030();
}

uint64_t sub_249E600C0()
{
  sub_249E60C88();
  return sub_249F20024();
}

uint64_t sub_249E600E8()
{
  sub_249E60C88();
  return sub_249F20030();
}

uint64_t sub_249E60110()
{
  sub_249E60D54();
  return sub_249F20024();
}

uint64_t sub_249E60138()
{
  sub_249E60D54();
  return sub_249F20030();
}

uint64_t sub_249E60160()
{
  return 0x6F746172656E6567;
}

uint64_t sub_249E60184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F746172656E6567 && a2 == 0xED00006570795472)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249E6023C()
{
  sub_249E60D98();
  return sub_249F20024();
}

uint64_t sub_249E60264()
{
  sub_249E60D98();
  return sub_249F20030();
}

uint64_t sub_249E6028C()
{
  sub_249E60C00();
  return sub_249F20024();
}

uint64_t sub_249E602B4()
{
  sub_249E60C00();
  return sub_249F20030();
}

uint64_t sub_249E602DC()
{
  sub_249E60D10();
  return sub_249F20024();
}

uint64_t sub_249E60304()
{
  sub_249E60D10();
  return sub_249F20030();
}

uint64_t sub_249E6032C()
{
  sub_249E60C44();
  return sub_249F20024();
}

uint64_t sub_249E60354()
{
  sub_249E60C44();
  return sub_249F20030();
}

uint64_t sub_249E60380()
{
  sub_249E60E20();
  return sub_249F20024();
}

uint64_t sub_249E603A8()
{
  sub_249E60E20();
  return sub_249F20030();
}

uint64_t sub_249E603D0()
{
  sub_249E60E64();
  return sub_249F20024();
}

uint64_t sub_249E603F8()
{
  sub_249E60E64();
  return sub_249F20030();
}

uint64_t sub_249E60420()
{
  sub_249E60DDC();
  return sub_249F20024();
}

uint64_t sub_249E60448()
{
  sub_249E60DDC();
  return sub_249F20030();
}

void ModelManagerInferenceProvider.Error.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB610);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB618);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB620);
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v28 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB628);
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB630);
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB638);
  v20[1] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20[0] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB640);
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v39 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB648);
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v42 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB650);
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB658);
  MEMORY[0x24BDAC7A8](v16);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB660);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *v1;
  v45 = v1[1];
  v19 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E60BBC();
  v47 = v18;
  sub_249F20018();
  __asm { BR              X9 }
}

uint64_t sub_249E607FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 90) = 0;
  sub_249E60E64();
  v5 = *(_QWORD *)(v3 - 128);
  v4 = *(_QWORD *)(v3 - 120);
  sub_249F1FD3C();
  sub_249F1FD90();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v5, v4);
}

unint64_t sub_249E60BBC()
{
  unint64_t result;

  result = qword_2578DB668;
  if (!qword_2578DB668)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C418, &type metadata for ModelManagerInferenceProvider.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB668);
  }
  return result;
}

unint64_t sub_249E60C00()
{
  unint64_t result;

  result = qword_2578DB670;
  if (!qword_2578DB670)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C3C8, &type metadata for ModelManagerInferenceProvider.Error.MissingStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB670);
  }
  return result;
}

unint64_t sub_249E60C44()
{
  unint64_t result;

  result = qword_2578DB678;
  if (!qword_2578DB678)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C378, &type metadata for ModelManagerInferenceProvider.Error.TaskIDTokenCanOnlyBeSerializedViaXPCCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB678);
  }
  return result;
}

unint64_t sub_249E60C88()
{
  unint64_t result;

  result = qword_2578DB680;
  if (!qword_2578DB680)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C328, &type metadata for ModelManagerInferenceProvider.Error.FailedToAssignSurfaceOwnershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB680);
  }
  return result;
}

unint64_t sub_249E60CCC()
{
  unint64_t result;

  result = qword_2578DB688;
  if (!qword_2578DB688)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C2D8, &type metadata for ModelManagerInferenceProvider.Error.ClientIdentityTokenUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB688);
  }
  return result;
}

unint64_t sub_249E60D10()
{
  unint64_t result;

  result = qword_2578DB690;
  if (!qword_2578DB690)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C288, &type metadata for ModelManagerInferenceProvider.Error.OwnIdentityTokenUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB690);
  }
  return result;
}

unint64_t sub_249E60D54()
{
  unint64_t result;

  result = qword_2578DB698;
  if (!qword_2578DB698)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C238, &type metadata for ModelManagerInferenceProvider.Error.InvalidIPCFormatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB698);
  }
  return result;
}

unint64_t sub_249E60D98()
{
  unint64_t result;

  result = qword_2578DB6A0;
  if (!qword_2578DB6A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C1E8, &type metadata for ModelManagerInferenceProvider.Error.InvalidImageGeneratorTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB6A0);
  }
  return result;
}

unint64_t sub_249E60DDC()
{
  unint64_t result;

  result = qword_2578DB6A8;
  if (!qword_2578DB6A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C198, &type metadata for ModelManagerInferenceProvider.Error.UnknownRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB6A8);
  }
  return result;
}

unint64_t sub_249E60E20()
{
  unint64_t result;

  result = qword_2578DB6B0;
  if (!qword_2578DB6B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C148, &type metadata for ModelManagerInferenceProvider.Error.UnavailableInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB6B0);
  }
  return result;
}

unint64_t sub_249E60E64()
{
  unint64_t result;

  result = qword_2578DB6B8;
  if (!qword_2578DB6B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C0F8, &type metadata for ModelManagerInferenceProvider.Error.UnknownInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DB6B8);
  }
  return result;
}

uint64_t ModelManagerInferenceProvider.Error.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD v31[6];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6C0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6C8);
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6D0);
  v42 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v54 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6D8);
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6E0);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v50 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6E8);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v48 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6F0);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v49 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB6F8);
  v31[5] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v47 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB700);
  v31[4] = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB708);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB710);
  v20 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_249E60BBC();
  v24 = v59;
  sub_249F1FFF4();
  if (!v24)
  {
    v31[2] = v19;
    v31[0] = v17;
    v31[1] = v16;
    v31[3] = v15;
    v59 = v20;
    v25 = sub_249F1FD24();
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X10 }
    v26 = sub_249F1FAF0();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v28 = &type metadata for ModelManagerInferenceProvider.Error;
    v29 = v57;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v29);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

void sub_249E617E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 65) = 9;
  sub_249E60C00();
  v4 = *(_QWORD *)(v3 - 120);
  sub_249F1FC64();
  if (v0)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x249E617B0);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 216) + 8))(v1, *(_QWORD *)(v3 - 208));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v4);
  JUMPOUT(0x249E619F0);
}

uint64_t sub_249E61A04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelManagerInferenceProvider.Error.init(from:)(a1, a2);
}

void sub_249E61A18(_QWORD *a1)
{
  ModelManagerInferenceProvider.Error.encode(to:)(a1);
}

uint64_t ModelManagerInferenceProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ModelManagerInferenceProvider.init()();
  return v0;
}

_QWORD *ModelManagerInferenceProvider.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppleDiffusionImageGenerator();
  v5 = swift_allocObject();
  type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager();
  v6 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v6 + 112) = sub_249DAE198(MEMORY[0x24BEE4AF8]);
  *(_OWORD *)(v6 + 120) = 0u;
  *(_OWORD *)(v6 + 136) = 0u;
  *(_QWORD *)(v6 + 152) = 0;
  *(_BYTE *)(v6 + 160) = -1;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = 0;
  type metadata accessor for ModelManagerInferenceProvider.ImageGeneratorAccessor();
  v7 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  v7[14] = v5;
  v7[15] = &off_251B589C0;
  v7[16] = &off_251B589A0;
  v1[2] = v7;
  type metadata accessor for ModelManagerInferenceProvider.SerialRequestProcessor(0);
  v8 = swift_allocObject();
  swift_retain();
  sub_249E63F30();
  v1[3] = v8;
  v9 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = v7;
  swift_retain_n();
  swift_retain();
  v11 = sub_249E5FC80((uint64_t)v4, (uint64_t)&unk_2578DB720, (uint64_t)v10);
  swift_release();
  swift_release();
  swift_release();
  v1[4] = v11;
  return v1;
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.ImageGeneratorAccessor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.SerialRequestProcessor(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578DBB08);
}

uint64_t sub_249E61C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_249E61C6C()
{
  int8x16_t *v0;
  uint64_t v1;

  sub_249F1F670();
  v0[2].i64[0] = 0;
  v1 = swift_task_alloc();
  v0[2].i64[1] = v1;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_249E61D04;
  *(int8x16_t *)(v1 + 136) = vextq_s8(v0[1], v0[1], 8uLL);
  return swift_task_switch();
}

uint64_t sub_249E61D04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E61D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  sub_249F1F670();
  if (v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 32) = 0;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = sub_249E61D04;
  *(int8x16_t *)(v3 + 136) = vextq_s8(*(int8x16_t *)(v0 + 16), *(int8x16_t *)(v0 + 16), 8uLL);
  return swift_task_switch();
}

uint64_t ModelManagerInferenceProvider.deinit()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  sub_249F1F664();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ModelManagerInferenceProvider.__deallocating_deinit()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  sub_249F1F664();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_249E61EC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E6E59C();
  sub_249F20018();
  v14 = 0;
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D8108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_249F1FDCC();
  if (!v2)
  {
    v9 = type metadata accessor for ModelManagerInferenceProvider.Input(0);
    v13 = 1;
    type metadata accessor for GenerationRecipe(0);
    sub_249D9BBEC(&qword_2578DC0A8, type metadata accessor for GenerationRecipe, (uint64_t)&unk_249F272E0);
    sub_249F1FDCC();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC080);
    sub_249E6E660();
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_249E62098@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v22 = a2;
  v23 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_249F1E8D8();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC068);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ModelManagerInferenceProvider.Input(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E6E59C();
  v28 = v8;
  v12 = v29;
  sub_249F1FFF4();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = (uint64_t)v24;
  v21 = v9;
  v29 = a1;
  v33 = 0;
  sub_249D9BBEC(&qword_2578D8160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v25;
  v15 = v27;
  sub_249F1FD00();
  v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v17 = (uint64_t)v11;
  v16(v11, v14, v15);
  v32 = 1;
  sub_249D9BBEC(&qword_2578DC078, type metadata accessor for GenerationRecipe, (uint64_t)&unk_249F272B8);
  sub_249F1FD00();
  v18 = v21;
  sub_249E0FA34(v13, (uint64_t)&v11[*(int *)(v21 + 20)]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC080);
  v31 = 2;
  sub_249E6E5E0();
  sub_249F1FD00();
  v19 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v26);
  *(_QWORD *)(v17 + *(int *)(v18 + 24)) = v30;
  sub_249DC091C(v17, v22, type metadata accessor for ModelManagerInferenceProvider.Input);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return sub_249DC05A8(v17, type metadata accessor for ModelManagerInferenceProvider.Input);
}

uint64_t sub_249E6240C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0x69746172656E6567;
}

uint64_t sub_249E62474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E6A2FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E62498()
{
  sub_249E6E59C();
  return sub_249F20024();
}

uint64_t sub_249E624C0()
{
  sub_249E6E59C();
  return sub_249F20030();
}

uint64_t sub_249E624E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E62098(a1, a2);
}

uint64_t sub_249E624FC(_QWORD *a1)
{
  return sub_249E61EC0(a1);
}

uint64_t sub_249E62510(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11[8];
  _BYTE v12[8];
  _BYTE v13[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC190);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E6EBD8();
  sub_249F20018();
  v11[0] = 0;
  sub_249F1FDC0();
  if (!v2)
  {
    v11[0] = 1;
    sub_249F1FD78();
    v11[0] = 2;
    sub_249F1FD9C();
    sub_249DCB1B0(v3 + 24, (uint64_t)v13, &qword_2578D8B10);
    sub_249DCB1B0((uint64_t)v13, (uint64_t)v11, &qword_2578D8B10);
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    sub_249E6EC60(&qword_2578DC198, &qword_2578DC1A0, (uint64_t)&protocol conformance descriptor for GeneratedImage, MEMORY[0x24BEE12A0]);
    sub_249F1FD84();
    sub_249DCB1B0(v3 + 32, (uint64_t)v12, &qword_2578D8B48);
    sub_249DCB1B0((uint64_t)v12, (uint64_t)v11, &qword_2578D8B48);
    HIBYTE(v10) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC178);
    sub_249E6ECE4(&qword_2578DC1A8, (uint64_t (*)(void))sub_249E6ED4C, MEMORY[0x24BEE12A0]);
    sub_249F1FD84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_249E62760()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249E62798 + 4 * byte_249F2B59A[*v0]))(0x53746E6572727563, 0xEB00000000706574);
}

uint64_t sub_249E62798()
{
  return 0x6574536C61746F74;
}

uint64_t sub_249E627B4()
{
  return 0x536C616E69467369;
}

uint64_t sub_249E627C8()
{
  return 0x65746172656E6567;
}

unint64_t sub_249E627EC()
{
  return 0xD000000000000012;
}

uint64_t sub_249E62808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E6A45C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E6282C()
{
  sub_249E6EBD8();
  return sub_249F20024();
}

uint64_t sub_249E62854()
{
  sub_249E6EBD8();
  return sub_249F20030();
}

double sub_249E6287C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_249E6A6D0(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_249E628C0(_QWORD *a1)
{
  return sub_249E62510(a1);
}

uint64_t sub_249E628F8()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0x203A44495555;
}

uint64_t sub_249E62A0C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(v2
                                                                                     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)
                                                                         + 16)
                                                           + 136))());
  if ((v5 & 1) != 0)
  {
    v6 = a2[5];
    v7 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  }
  v8 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                 + 24);
  v9 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                 + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate), v8);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
}

uint64_t sub_249E62AC0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(v3
                                                                                     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)
                                                                         + 16)
                                                           + 136))());
  if ((v7 & 1) != 0)
  {
    v8 = a2[5];
    v9 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  }
  v10 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                  + 24);
  v11 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                  + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate), v10);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, a2, a3, v10, v11);
}

uint64_t sub_249E62B84(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(v3
                                                                                     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)
                                                                         + 16)
                                                           + 136))());
  if ((v7 & 1) != 0)
  {
    v8 = a2[5];
    v9 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  }
  v10 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                  + 24);
  v11 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                  + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate), v10);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 24))(a1, a2, a3, v10, v11);
}

uint64_t sub_249E62C48(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(v3
                                                                                     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)
                                                                         + 16)
                                                           + 136))());
  if ((v7 & 1) != 0)
  {
    v8 = a2[5];
    v9 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  }
  v10 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                  + 24);
  v11 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate
                  + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate), v10);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, a2, a3, v10, v11);
}

uint64_t sub_249E62D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest_uuid;
  v2 = sub_249F1E8D8();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate);
  swift_release();
  v3(v0 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__generationID, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__recipe, type metadata accessor for GenerationRecipe);
  return swift_deallocClassInstance();
}

uint64_t sub_249E62DB4(uint64_t a1, _QWORD *a2)
{
  return sub_249E62A0C(a1, a2);
}

uint64_t sub_249E62DD4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_249E62AC0(a1, a2, a3);
}

uint64_t sub_249E62DF4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_249E62B84(a1, a2, a3);
}

uint64_t sub_249E62E14(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_249E62C48(a1, a2, a3);
}

uint64_t sub_249E62E34()
{
  _QWORD *v0;
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(*v0
                                                                                     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)
                                                                         + 16)
                                                           + 136))());
  return v1 & 1;
}

unsigned __int8 *sub_249E62E74()
{
  _QWORD *v0;
  unsigned __int8 *result;

  result = (unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(*v0
                                                                             + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)
                                                                 + 16)
                                                   + 136))();
  atomic_store(1u, result);
  return result;
}

uint64_t sub_249E62EB4()
{
  return sub_249E628F8();
}

uint64_t sub_249E62ED4()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (unint64_t *)(v0 + 112);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 112);
  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v4 = sub_249F1FBEC();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_12;
LABEL_3:
  v2 = *v1;
  if (!(*v1 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  v5 = sub_249F1FBEC();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_14;
LABEL_5:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    result = MEMORY[0x24BD056B8](0, v2);
    v2 = result;
    goto LABEL_8;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v6 = sub_249F1FBEC();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_10;
    goto LABEL_18;
  }
  v2 = *(_QWORD *)(v2 + 32);
  result = swift_retain();
LABEL_8:
  if (*v1 >> 62)
    goto LABEL_17;
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    sub_249E3D070(0, 1);
    swift_endAccess();
    return v2;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_249E63048()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  uint64_t v5;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 112);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_249F1FBEC();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x24BD056B8](i, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v1 + 8 * i + 32);
        swift_retain();
      }
      if ((sub_249F1E8C0() & 1) != 0)
        atomic_store(1u, (unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(v5+ OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller)+ 16)+ 136))());
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_249E63180()
{
  return sub_249E64300((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_249E6318C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0D8);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC108);
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E6321C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
  swift_retain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F814();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    v6 = sub_249E628F8();
    v8 = v7;
    swift_release();
    v0[5] = sub_249E68CA8(v6, v8, &v10);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_249D98000, v2, v3, "enqueuing request %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v5, -1, -1);
    MEMORY[0x24BD06618](v4, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v0[14] = *(_QWORD *)(v0[7] + 16);
  return swift_task_switch();
}

uint64_t sub_249E63404()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 112) + 112);
  swift_beginAccess();
  v2 = swift_retain();
  MEMORY[0x24BD05130](v2);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_249F1F568();
  sub_249F1F598();
  sub_249F1F55C();
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_249E634B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, *(_QWORD *)(v0 + 56)+ OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStreamContinuation, v5);
  *(_BYTE *)(v0 + 120) = 1;
  sub_249F1F61C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E63560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return swift_task_switch();
}

uint64_t sub_249E63578()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0[18];
  v0[16] = 0;
  v0[19] = OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStreamIterator;
  v0[20] = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (qword_2578D5D78 != -1)
    swift_once();
  v2 = sub_249F1EF38();
  v0[21] = v2;
  v0[22] = __swift_project_value_buffer(v2, (uint64_t)qword_2578FF3F0);
  v3 = sub_249F1EF20();
  v4 = sub_249F1F814();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_249D98000, v3, v4, "looking for the next request", v5, 2u);
    MEMORY[0x24BD06618](v5, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_249E6369C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 112);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  swift_bridgeObjectRetain_n();
  v5 = sub_249F1FBEC();
  result = swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x24BD056B8](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = swift_retain();
LABEL_6:
    *(_QWORD *)(v0 + 184) = v4;
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  __break(1u);
  return result;
}

uint64_t sub_249E63774()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v0[22];
  v1 = v0[23];
  v3 = v0[21];
  swift_release();
  v0[16] = v1;
  v4 = *(_QWORD **)(v3 - 8);
  v0[24] = v4[8];
  v5 = swift_task_alloc();
  v6 = (void (*)(uint64_t, uint64_t, uint64_t))v4[2];
  v0[25] = v6;
  v6(v5, v2, v3);
  v7 = sub_249F1EF20();
  v8 = sub_249F1F814();
  if (!os_log_type_enabled(v7, v8))
  {
    v15 = v0[21];

    v14 = (void (*)(uint64_t, uint64_t))v4[1];
    v14(v5, v15);
    goto LABEL_5;
  }
  v9 = (uint8_t *)swift_slowAlloc();
  v17 = swift_slowAlloc();
  v18 = v17;
  *(_DWORD *)v9 = 136315138;
  result = swift_beginAccess();
  if (v0[16])
  {
    v16 = v0[21];
    swift_retain();
    v11 = sub_249E628F8();
    v13 = v12;
    swift_release();
    v0[15] = sub_249E68CA8(v11, v13, &v18);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v7, v8, "fulfilling %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v17, -1, -1);
    MEMORY[0x24BD06618](v9, -1, -1);

    v14 = (void (*)(uint64_t, uint64_t))v4[1];
    v14(v5, v16);
LABEL_5:
    v0[27] = v14;
    swift_task_dealloc();
    return swift_task_switch();
  }
  __break(1u);
  return result;
}

uint64_t sub_249E6397C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;

  v1 = sub_249F1EF20();
  v2 = sub_249F1F814();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_249D98000, v1, v2, "waiting for another request", v3, 2u);
    MEMORY[0x24BD06618](v3, -1, -1);
  }

  swift_beginAccess();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0D0);
  *v4 = v0;
  v4[1] = sub_249E63A80;
  return sub_249F1F640();
}

uint64_t sub_249E63A80()
{
  swift_task_dealloc();
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_249E63AE0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
  v2 = sub_249F1EF20();
  v3 = sub_249F1F814();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_249D98000, v2, v3, "looking for the next request", v4, 2u);
    MEMORY[0x24BD06618](v4, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_249E63BD4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[17];
  v0[28] = *(_QWORD *)(v1 + 112);
  v0[29] = *(_QWORD *)(v1 + 120);
  return swift_task_switch();
}

uint64_t sub_249E63BFC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;

  result = swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 240) = v2;
  if (v2)
  {
    v3 = **(_QWORD **)(v0 + 224);
    v5 = (char *)&dword_2578DC0C8 + dword_2578DC0C8;
    swift_retain();
    swift_retain();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v4;
    *v4 = v0;
    v4[1] = sub_249E63CB0;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))v5)(*(_QWORD *)(v0 + 224), v2, v3, *(_QWORD *)(v0 + 232));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249E63CB0()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_249E63D24()
{
  sub_249E62ED4();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_249E63D64()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = swift_task_alloc();
  v1(v4, v2, v3);
  v5 = sub_249F1EF20();
  v6 = sub_249F1F814();
  if (!os_log_type_enabled(v5, v6))
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    v14 = *(_QWORD *)(v0 + 168);

    v13(v4, v14);
    goto LABEL_5;
  }
  v7 = (uint8_t *)swift_slowAlloc();
  result = swift_slowAlloc();
  v17 = result;
  *(_DWORD *)v7 = 136315138;
  if (*(_QWORD *)(v0 + 128))
  {
    v9 = result;
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    v15 = *(_QWORD *)(v0 + 168);
    swift_retain();
    v10 = sub_249E628F8();
    v12 = v11;
    swift_release();
    *(_QWORD *)(v0 + 112) = sub_249E68CA8(v10, v12, &v17);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v5, v6, "fulfilled %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v9, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);

    v16(v4, v15);
LABEL_5:
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_249E63F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0D0);
  v22 = *(_QWORD *)(v1 - 8);
  v23 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v21 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC130);
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E0);
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC138);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v20 - v13;
  type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequestsQueue();
  v15 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v15 + 112) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0D8);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v14, 1, 1, v16);
  *v5 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE6A08], v24);
  v26 = v14;
  sub_249F1F64C();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v0 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStream, v8, v6);
  sub_249DCC274((uint64_t)v14, (uint64_t)v12, &qword_2578DC138);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v0+ OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStreamContinuation, v12, v16);
    v19 = v21;
    sub_249F1F634();
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v0+ OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStreamIterator, v19, v23);
    sub_249DCC2FC((uint64_t)v14, &qword_2578DC138);
    return v0;
  }
  return result;
}

uint64_t sub_249E641E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_249DAFCF8;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_249E64240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v1 = v0
     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStreamContinuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStream;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0
     + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22SerialRequestProcessor__signalStreamIterator;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_249E642F4()
{
  return sub_249E64300((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_249E64300(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 112));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ModelManagerInferenceProvider.transitionAsset(withIdentifier:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_249F1ECE0();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v6 = sub_249F1EDE8();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E643B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  os_signpost_type_t v11;
  char v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  os_signpost_id_t v16;
  uint64_t v17;
  NSObject *v18;
  os_signpost_type_t v19;
  char v20;
  unint64_t v21;
  uint8_t *v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  os_signpost_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[2];

  v1 = sub_249F1EE9C();
  *(_QWORD *)(v0 + 112) = v1;
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v3;
  if (qword_2578D5D80 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = sub_249F1EED8();
  __swift_project_value_buffer(v8, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v7, v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6);
  if (v9 == *MEMORY[0x24BE68C98])
  {
    swift_bridgeObjectRetain_n();
    v10 = sub_249F1EEC0();
    v11 = sub_249F1F8A4();
    v12 = sub_249F1F958();
    v13 = *(_QWORD *)(v0 + 40);
    if ((v12 & 1) != 0)
    {
      v43 = *(_QWORD *)(v0 + 32);
      v46 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v46, v3, v1);
      v14 = (uint8_t *)swift_slowAlloc();
      v41 = v11;
      v15 = swift_slowAlloc();
      v47[0] = v15;
      *(_DWORD *)v14 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_249E68CA8(v43, v13, v47);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      v16 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v10, v41, v16, "modelManagerLoadOut", "asset=%{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v15, -1, -1);
      MEMORY[0x24BD06618](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v46, v1);
      swift_task_dealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17 = *(_QWORD *)(v0 + 56);
    swift_task_alloc();
    (*(void (**)(void))(v2 + 16))();
    sub_249F1EF08();
    swift_allocObject();
    *(_QWORD *)(v0 + 176) = sub_249F1EEFC();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v17 + 16);
  }
  else if (v9 != *MEMORY[0x24BE68C80])
  {
    if (v9 != *MEMORY[0x24BE68C88])
    {
      v25 = *(_QWORD *)(v0 + 96);
      v24 = *(_QWORD *)(v0 + 104);
      v26 = *(_QWORD *)(v0 + 88);
      v27 = *(_QWORD *)(v0 + 64);
      v28 = *(_QWORD *)(v0 + 72);
      sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
      v29 = (void *)swift_allocError();
      v31 = v30;
      sub_249DAE2C8(MEMORY[0x24BEE4AF8]);
      sub_249F1ECC8();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v31, *MEMORY[0x24BE68968], v27);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      v33 = *(_QWORD *)(v0 + 120);
      v32 = *(_QWORD *)(v0 + 128);
      v34 = *(_QWORD *)(v0 + 112);
      v36 = *(_QWORD *)(v0 + 72);
      v35 = *(_QWORD *)(v0 + 80);
      v37 = *(_QWORD *)(v0 + 64);
      sub_249E93FC4(v29, v35);
      sub_249E650F8(v29, v35);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v38, v35, v37);
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    swift_bridgeObjectRetain_n();
    v18 = sub_249F1EEC0();
    v19 = sub_249F1F8A4();
    v20 = sub_249F1F958();
    v21 = *(_QWORD *)(v0 + 40);
    if ((v20 & 1) != 0)
    {
      v42 = *(_QWORD *)(v0 + 32);
      v44 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v44, v3, v1);
      v22 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      v47[0] = v45;
      *(_DWORD *)v22 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 24) = sub_249E68CA8(v42, v21, v47);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      v23 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v18, v19, v23, "modelManagerLoadIn", "asset=%{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v45, -1, -1);
      MEMORY[0x24BD06618](v22, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v44, v1);
      swift_task_dealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v40 = *(_QWORD *)(v0 + 56);
    swift_task_alloc();
    (*(void (**)(void))(v2 + 16))();
    sub_249F1EF08();
    swift_allocObject();
    *(_QWORD *)(v0 + 136) = sub_249F1EEFC();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v40 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_249E64A4C()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_249E64AA0;
  return sub_249E8FC78(v0[4], v0[5]);
}

uint64_t sub_249E64AA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E64B04()
{
  uint64_t v0;

  sub_249DDDF68("modelManagerLoadIn", 18, 2);
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E64B8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_249DDDF68("modelManagerLoadIn", 18, 2);
  swift_release();
  v1 = *(void **)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  sub_249E93FC4(v1, v6);
  sub_249E650F8(v1, v6);
  sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v6, v7);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E64CBC()
{
  uint64_t v0;

  sub_249E92C44(*(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
  *(_QWORD *)(v0 + 168) = 0;
  return swift_task_switch();
}

uint64_t sub_249E64D18()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E64D7C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  sub_249E93FC4(v1, v6);
  sub_249E650F8(v1, v6);
  sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v6, v7);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E64E88()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_249E64EDC;
  return sub_249E90500(v0[4], v0[5]);
}

uint64_t sub_249E64EDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E64F40()
{
  uint64_t v0;

  sub_249DDDF68("modelManagerLoadOut", 19, 2);
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E64FC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_249DDDF68("modelManagerLoadOut", 19, 2);
  swift_release();
  v1 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  sub_249E93FC4(v1, v6);
  sub_249E650F8(v1, v6);
  sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v6, v7);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E650F8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  NSObject *v23;
  uint64_t v24;

  v4 = sub_249F1ECE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v8 = sub_249F1EF38();
  __swift_project_value_buffer(v8, (uint64_t)qword_2578FF3F0);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, a2, v4);
  v10 = a1;
  v11 = a1;
  v12 = sub_249F1EF20();
  v13 = sub_249F1F820();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v22 = (void (*)(uint64_t, char *, uint64_t))v9;
    v16 = (_QWORD *)v15;
    *(_DWORD *)v14 = 138412546;
    v23 = v12;
    v17 = a1;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    v24 = v18;
    sub_249F1F9AC();
    *v16 = v18;

    *(_WORD *)(v14 + 12) = 2112;
    sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
    swift_allocError();
    v22(v19, v7, v4);
    v20 = _swift_stdlib_bridgeErrorToNSError();
    v24 = v20;
    sub_249F1F9AC();
    v16[1] = v20;
    v12 = v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_249D98000, v12, v13, "[ModelManagerInferenceProvider] caught %@ / throwing %@", (uint8_t *)v14, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v16, -1, -1);
    MEMORY[0x24BD06618](v14, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

}

uint64_t ModelManagerInferenceProvider.requestStream(clientData:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  os_signpost_id_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  _UNKNOWN **v129;
  _UNKNOWN **v130;

  v111 = a2;
  v106 = sub_249F1ECE0();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v107 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v4);
  v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x24BDAC7A8](v6);
  v99 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB738);
  v94 = *(_QWORD *)(v98 - 8);
  v8 = MEMORY[0x24BDAC7A8](v98);
  v97 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v102 = (char *)&v89 - v10;
  v11 = type metadata accessor for ModelManagerInferenceProvider.Input(0);
  MEMORY[0x24BDAC7A8](v11);
  v122 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB740);
  v114 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v115 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB748);
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v124 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB750);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v123 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v117 = (char *)&v89 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v89 - v20;
  v22 = sub_249F1E8D8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v96 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v95 = (char *)&v89 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v113 = (char *)&v89 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v89 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v125 = (char *)&v89 - v33;
  sub_249F1EDA0();
  if (qword_2578D5D78 != -1)
    swift_once();
  v34 = sub_249F1EF38();
  __swift_project_value_buffer(v34, (uint64_t)qword_2578FF3F0);
  v121 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v121(v32, v125, v22);
  v35 = sub_249F1EF20();
  v36 = sub_249F1F814();
  v37 = os_log_type_enabled(v35, v36);
  v119 = v21;
  v120 = v23;
  v103 = v11;
  v118 = a1;
  if (v37)
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    *(_QWORD *)&v127 = v39;
    *(_DWORD *)v38 = 136315138;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v40 = sub_249F1FE08();
    v126 = sub_249E68CA8(v40, v41, (uint64_t *)&v127);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v32, v22);
    _os_log_impl(&dword_249D98000, v35, v36, "requestStream %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v39, -1, -1);
    MEMORY[0x24BD06618](v38, -1, -1);
  }
  else
  {
    v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v32, v22);
  }

  v43 = v113;
  if (qword_2578D5D80 != -1)
    swift_once();
  v44 = sub_249F1EED8();
  __swift_project_value_buffer(v44, (uint64_t)qword_2578FF408);
  v121(v43, v125, v22);
  v45 = sub_249F1EE9C();
  v112 = &v89;
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_QWORD *)(v46 + 64);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_249F1EE90();
  v49 = sub_249F1EEC0();
  v104 = sub_249F1F8B0();
  v50 = sub_249F1F958();
  v108 = v22;
  if ((v50 & 1) != 0)
  {
    v93 = &v89;
    MEMORY[0x24BDAC7A8](v50);
    v91 = (char *)&v89 - v48;
    v92 = v46;
    (*(void (**)(void))(v46 + 16))();
    v51 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    *(_QWORD *)&v127 = v52;
    *(_DWORD *)v51 = 136446210;
    v90 = v42;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v53 = sub_249F1FE08();
    v126 = sub_249E68CA8(v53, v54, (uint64_t *)&v127);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v90(v43, v22);
    v55 = v91;
    v56 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v49, (os_signpost_type_t)v104, v56, "requestStream", "UUID=%{public}s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v52, -1, -1);
    MEMORY[0x24BD06618](v51, -1, -1);

    v57 = *(void (**)(char *, uint64_t))(v92 + 8);
    v57((char *)&v89 - v48, v45);
    v57(v55, v45);
  }
  else
  {

    v42(v43, v22);
    (*(void (**)(char *, uint64_t))(v46 + 8))((char *)&v89 - v48, v45);
  }
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB758);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = (uint64_t)v119;
  v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v119, 1, 1, v58);
  MEMORY[0x24BDAC7A8](v61);
  *(&v89 - 2) = v60;
  sub_249F1ECBC();
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v115, *MEMORY[0x24BEE6CA0], v116);
  sub_249F1F6DC();
  sub_249E5F7A0(v122);
  v62 = (uint64_t)v117;
  v63 = swift_bridgeObjectRetain();
  sub_249E6AA10(v63);
  swift_bridgeObjectRelease();
  v64 = v102;
  sub_249DE05D4();
  sub_249DCC274(v60, v62, &qword_2578DB750);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v62, 1, v58);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v69 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
    v70 = v97;
    v71 = v98;
    v69(v97, v64, v98);
    v72 = type metadata accessor for ModelManagerInferenceProvider.RequestStreamDelegate(0);
    v73 = swift_allocObject();
    *(_QWORD *)(v73
              + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__currentStep) = 0;
    v74 = v73
        + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__totalSteps;
    *(_QWORD *)v74 = 0;
    *(_BYTE *)(v74 + 8) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v73+ OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__continuation, v62, v58);
    v69((char *)(v73+ OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__owning_task_id_token), v70, v71);
    v75 = v95;
    v76 = v108;
    v77 = (void (*)(char *, uint64_t, uint64_t))v121;
    v121(v95, v125, v108);
    v78 = v96;
    v79 = v122;
    v77(v96, v122, v76);
    v80 = v99;
    sub_249DC091C(v79 + *(int *)(v103 + 20), v99, type metadata accessor for GenerationRecipe);
    v129 = &off_251B56E90;
    v130 = &off_251B56E68;
    v128 = v72;
    *(_QWORD *)&v127 = v73;
    type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequest(0);
    v81 = swift_allocObject();
    v82 = OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller;
    type metadata accessor for _InternalCanceller();
    v83 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
    v84 = swift_allocObject();
    *(_BYTE *)(v84 + 16) = 0;
    *(_QWORD *)(v83 + 16) = v84;
    *(_QWORD *)(v81 + v82) = v83;
    v85 = *(void (**)(uint64_t, char *, uint64_t))(v120 + 32);
    v85(v81 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest_uuid, v75, v76);
    v85(v81 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__generationID, v78, v76);
    sub_249E0FA34(v80, v81 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__recipe);
    sub_249E6AFA8(&v127, (_OWORD *)(v81+ OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate));
    v86 = sub_249F1F604();
    v87 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v100, 1, 1, v86);
    v88 = (_QWORD *)swift_allocObject();
    v88[2] = 0;
    v88[3] = 0;
    v88[4] = v101;
    v88[5] = v81;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_249DA85E4(v87, (uint64_t)&unk_2578DB7B0, (uint64_t)v88);
    swift_release();
    swift_release();
    swift_release();
    sub_249DC05A8(v79, type metadata accessor for ModelManagerInferenceProvider.Input);
    v65 = v110;
    v66 = v111;
    v111[3] = v110;
    v66[4] = sub_249E6A9C4();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v66);
    (*(void (**)(uint64_t *, char *, uint64_t))(v109 + 32))(boxed_opaque_existential_1, v124, v65);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v125, v76);
    return sub_249DCC2FC(v60, &qword_2578DB750);
  }
  return result;
}

uint64_t sub_249E660CC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_249DCC2FC(a2, a3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_249E6613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_249E66154()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_249E661A8;
  return sub_249E6318C(*(_QWORD *)(v0 + 24));
}

uint64_t sub_249E661A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t ModelManagerInferenceProvider.requestOneShot(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[26] = a3;
  v4[27] = v3;
  v4[24] = a1;
  v4[25] = a2;
  v5 = sub_249F1ECE0();
  v4[28] = v5;
  v4[29] = *(_QWORD *)(v5 - 8);
  v4[30] = swift_task_alloc();
  v6 = sub_249F1ECBC();
  v4[31] = v6;
  v4[32] = *(_QWORD *)(v6 - 8);
  v4[33] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB7C0);
  v4[34] = v7;
  v4[35] = *(_QWORD *)(v7 - 8);
  v4[36] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v4[37] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB738);
  v4[38] = v8;
  v4[39] = *(_QWORD *)(v8 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = type metadata accessor for ModelManagerInferenceProvider.Input(0);
  v4[42] = swift_task_alloc();
  v9 = sub_249F1E8D8();
  v4[43] = v9;
  v4[44] = *(_QWORD *)(v9 - 8);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E66374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  os_signpost_id_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56[2];

  sub_249F1EDA0();
  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v55(v1, v2, v3);
  v6 = sub_249F1EF20();
  v7 = sub_249F1F814();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 344);
  v11 = *(_QWORD *)(v0 + 352);
  if (v8)
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v56[0] = v13;
    *(_DWORD *)v12 = 136315138;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v14 = sub_249F1FE08();
    *(_QWORD *)(v0 + 184) = sub_249E68CA8(v14, v15, v56);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v16(v9, v10);
    _os_log_impl(&dword_249D98000, v6, v7, "requestOneShot %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v13, -1, -1);
    MEMORY[0x24BD06618](v12, -1, -1);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v16(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 344));
  }

  v17 = sub_249F1EE9C();
  *(_QWORD *)(v0 + 400) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v0 + 408) = v18;
  v19 = swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v19;
  if (qword_2578D5D80 != -1)
    swift_once();
  v20 = *(_QWORD *)(v0 + 392);
  v21 = *(_QWORD *)(v0 + 376);
  v22 = *(_QWORD *)(v0 + 344);
  v23 = sub_249F1EED8();
  __swift_project_value_buffer(v23, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v55(v21, v20, v22);
  v24 = sub_249F1EEC0();
  v25 = sub_249F1F8A4();
  v26 = sub_249F1F958();
  v27 = *(_QWORD *)(v0 + 376);
  v28 = *(_QWORD *)(v0 + 344);
  if ((v26 & 1) != 0)
  {
    v51 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v51, v19, v17);
    v29 = (uint8_t *)swift_slowAlloc();
    v53 = v17;
    v30 = swift_slowAlloc();
    v56[0] = v30;
    *(_DWORD *)v29 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v31 = sub_249F1FE08();
    *(_QWORD *)(v0 + 176) = sub_249E68CA8(v31, v32, v56);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v16(v27, v28);
    v33 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v24, v25, v33, "requestOneShot", "UUID=%{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v30, -1, -1);
    MEMORY[0x24BD06618](v29, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v51, v53);
    swift_task_dealloc();
  }
  else
  {

    v16(v27, v28);
  }
  v34 = *(_QWORD *)(v0 + 336);
  swift_task_alloc();
  (*(void (**)(void))(v18 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 424) = sub_249F1EEFC();
  swift_task_dealloc();
  sub_249E5F7A0(v34);
  v35 = swift_bridgeObjectRetain();
  sub_249E6AA10(v35);
  swift_bridgeObjectRelease();
  sub_249DE05D4();
  v36 = *(_QWORD *)(v0 + 392);
  v37 = *(_QWORD *)(v0 + 360);
  v38 = *(_QWORD *)(v0 + 368);
  v39 = *(_QWORD *)(v0 + 344);
  v40 = *(_QWORD *)(v0 + 336);
  v52 = *(_QWORD *)(v0 + 328);
  v54 = *(_QWORD *)(v0 + 352);
  v41 = *(_QWORD *)(v0 + 296);
  v42 = type metadata accessor for ModelManagerInferenceProvider.OneShotGenerationDelegate(0);
  swift_allocObject();
  v43 = sub_249E6870C();
  *(_QWORD *)(v0 + 432) = v43;
  v55(v38, v36, v39);
  v55(v37, v40, v39);
  sub_249DC091C(v40 + *(int *)(v52 + 20), v41, type metadata accessor for GenerationRecipe);
  *(_QWORD *)(v0 + 40) = v42;
  *(_QWORD *)(v0 + 48) = &off_251B56E58;
  *(_QWORD *)(v0 + 56) = &off_251B56E30;
  *(_QWORD *)(v0 + 16) = v43;
  type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequest(0);
  v44 = swift_allocObject();
  *(_QWORD *)(v0 + 440) = v44;
  v45 = OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__canceller;
  type metadata accessor for _InternalCanceller();
  v46 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v47 = swift_allocObject();
  *(_BYTE *)(v47 + 16) = 0;
  *(_QWORD *)(v46 + 16) = v47;
  *(_QWORD *)(v44 + v45) = v46;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32);
  v48(v44 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest_uuid, v38, v39);
  v48(v44 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__generationID, v37, v39);
  sub_249E0FA34(v41, v44 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__recipe);
  sub_249E6AFA8((__int128 *)(v0 + 16), (_OWORD *)(v44 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate));
  swift_retain();
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 448) = v49;
  *v49 = v0;
  v49[1] = sub_249E66BF8;
  return sub_249E6318C(v44);
}

uint64_t sub_249E66BF8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E66C4C()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB7D8);
  sub_249F1F634();
  v0[19] = 0;
  v0[20] = 0;
  v1 = (_QWORD *)swift_task_alloc();
  v0[57] = v1;
  *v1 = v0;
  v1[1] = sub_249E66CDC;
  return sub_249F1F6D0();
}

uint64_t sub_249E66CDC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[61] = 0;
    v2[62] = v0;
    v2[60] = 0;
  }
  else
  {
    v2[58] = 0;
  }
  return swift_task_switch();
}

uint64_t sub_249E66D48()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(unsigned __int8 *)(v0 + 120);
  if (v2 <= 0xFD)
  {
    v19 = v2 >> 6;
    if (v19)
    {
      if (v19 == 1)
      {
        v20 = (uint64_t *)(v0 + 160);
        if (*(_QWORD *)(v0 + 160))
        {
          sub_249E5DEE8(v1);
          goto LABEL_13;
        }
      }
      else
      {
        v20 = (uint64_t *)(v0 + 152);
        if (*(_QWORD *)(v0 + 152))
        {
          sub_249E5E064(v1, (uint64_t (*)(void))sub_249DB292C, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
          goto LABEL_13;
        }
      }
      *v20 = v1;
    }
LABEL_13:
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v28;
    *v28 = v0;
    v28[1] = sub_249E672D0;
    return sub_249F1F6D0();
  }
  v3 = *(void **)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249E697CC(1, 1, 0, 1, v6, v7, v4, v0 + 64);
  sub_249E5E1E4((__int128 *)(v0 + 64), v5);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 336);
    v46 = *(_QWORD *)(v0 + 312);
    v47 = *(_QWORD *)(v0 + 304);
    v48 = *(_QWORD *)(v0 + 320);
    v10 = *(_QWORD *)(v0 + 280);
    v9 = *(_QWORD *)(v0 + 288);
    v33 = v3;
    v11 = *(_QWORD *)(v0 + 272);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_249DC05A8(v8, type metadata accessor for ModelManagerInferenceProvider.Input);
    sub_249DCB1B0(v0 + 88, v0 + 144, &qword_2578D8B10);
    sub_249DFBA54(v0 + 144);
    sub_249DCB1B0(v0 + 96, v0 + 168, &qword_2578D8B48);
    sub_249DFBA54(v0 + 168);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
    v13 = *(_QWORD *)(v0 + 416);
    v12 = *(uint64_t **)(v0 + 424);
    v14 = *(_QWORD *)(v0 + 392);
    v41 = *(_QWORD *)(v0 + 400);
    v35 = *(_QWORD *)(v0 + 352);
    v37 = *(_QWORD *)(v0 + 408);
    v39 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 224);
    sub_249E93FC4(v33, v15);
    sub_249E650F8(v33, v15);
    sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v18, v15, v17);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    sub_249E67588("requestOneShot", 14, 2, v12, v14);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v13, v41);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v14, v39);
  }
  else
  {
    v38 = *(uint64_t **)(v0 + 424);
    v42 = *(_QWORD *)(v0 + 408);
    v21 = *(_QWORD *)(v0 + 392);
    v44 = *(_QWORD *)(v0 + 400);
    v45 = *(_QWORD *)(v0 + 416);
    v40 = *(_QWORD *)(v0 + 352);
    v22 = *(_QWORD *)(v0 + 336);
    v43 = *(_QWORD *)(v0 + 344);
    v32 = *(_QWORD *)(v0 + 312);
    v34 = *(_QWORD *)(v0 + 304);
    v36 = *(_QWORD *)(v0 + 320);
    v23 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 272);
    v25 = *(_QWORD *)(v0 + 280);
    v29 = *(_QWORD *)(v0 + 256);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = *(_QWORD *)(v0 + 264);
    v26 = *(_QWORD *)(v0 + 192);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    sub_249DC05A8(v22, type metadata accessor for ModelManagerInferenceProvider.Input);
    sub_249DCB1B0(v0 + 88, v0 + 136, &qword_2578D8B10);
    sub_249DFBA54(v0 + 136);
    sub_249DCB1B0(v0 + 96, v0 + 128, &qword_2578D8B48);
    sub_249DFBA54(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v26, v31, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v34);
    sub_249E67588("requestOneShot", 14, 2, v38, v21);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v44);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v21, v43);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E672D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 496) = v0;
    *(_OWORD *)(v2 + 480) = *(_OWORD *)(v2 + 152);
  }
  else
  {
    *(_QWORD *)(v2 + 464) = 0;
  }
  return swift_task_switch();
}

uint64_t sub_249E67340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  sub_249DC05A8(v1, type metadata accessor for ModelManagerInferenceProvider.Input);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v20, v3);
  v7 = *(void **)(v0 + 496);
  v9 = *(_QWORD *)(v0 + 416);
  v8 = *(uint64_t **)(v0 + 424);
  v10 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v16 = *(_QWORD *)(v0 + 352);
  v17 = *(_QWORD *)(v0 + 408);
  v18 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 224);
  sub_249E93FC4(v7, v11);
  sub_249E650F8(v7, v11);
  sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v11, v13);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  sub_249E67588("requestOneShot", 14, 2, v8, v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v9, v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v10, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_249E67588(const char *a1, uint64_t a2, int a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  os_signpost_id_t v39;
  os_log_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  os_log_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  const char *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59[3];

  v56 = (char *)a1;
  v57 = a4;
  LODWORD(v52) = a3;
  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D80 != -1)
    swift_once();
  v10 = sub_249F1EED8();
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_2578FF408);
  v54 = &v42;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a5, v6);
  v15 = sub_249F1EEC0();
  v16 = sub_249F1EE9C();
  v53 = &v42;
  v17 = *(_QWORD *)(v16 - 8);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v16);
  v50 = v18;
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1EEF0();
  v51 = sub_249F1F898();
  if ((sub_249F1F958() & 1) == 0)
    goto LABEL_7;
  v43 = v19;
  v44 = v17;
  v46 = v15;
  v47 = v12;
  v48 = v9;
  v49 = v7;
  v45 = v14;
  if ((v52 & 1) == 0)
  {
    v9 = (char *)v57;
    if (!v56)
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v55);
      __break(1u);
LABEL_7:

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v55);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return (char *)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v10);
    }
    goto LABEL_12;
  }
  result = v56;
  if ((unint64_t)v56 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v56 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (v56 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v56 = sub_249E14C50();
LABEL_12:
  v21 = sub_249F1EEE4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_249F1EF14();
  swift_release();
  v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  v26 = v16;
  v42 = v10;
  if (MEMORY[0x24BEE7808] && (_DWORD)v25 == *MEMORY[0x24BEE7808])
  {
    v27 = 0;
    v28 = 0;
    v52 = "[Error] Interval already ended";
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    v52 = "UUID=%{public}s";
    v28 = 2;
    v27 = 1;
  }
  v30 = v43;
  v29 = v44;
  v57 = &v42;
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)&v42 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v30, v16);
  v33 = swift_slowAlloc();
  v34 = swift_slowAlloc();
  v59[0] = v34;
  *(_BYTE *)v33 = v28;
  *(_BYTE *)(v33 + 1) = v27;
  *(_WORD *)(v33 + 2) = 2082;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v35 = v48;
  v36 = v55;
  v37 = sub_249F1FE08();
  v58 = sub_249E68CA8(v37, v38, v59);
  sub_249F1F9AC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v36);
  v39 = sub_249F1EE84();
  v40 = v46;
  _os_signpost_emit_with_name_impl(&dword_249D98000, v46, (os_signpost_type_t)v51, v39, v56, v52, (uint8_t *)v33, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24BD06618](v34, -1, -1);
  MEMORY[0x24BD06618](v33, -1, -1);

  v41 = *(void (**)(char *, uint64_t))(v29 + 8);
  v41(v30, v26);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v42);
  return (char *)((uint64_t (*)(char *, uint64_t))v41)(v32, v26);
}

uint64_t ModelManagerInferenceProvider.cancelRequest(uuid:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_249F1E8D8();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E67AA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  os_signpost_id_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_signpost_type_t v39;
  uint64_t v40;

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[9];
  v3 = v0[6];
  v4 = v0[7];
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  v7 = sub_249F1EF20();
  v8 = sub_249F1F814();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[9];
  v11 = v0[6];
  if (v9)
  {
    v35 = v0[7];
    v12 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v40 = v37;
    *(_DWORD *)v12 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v13 = sub_249F1FE08();
    v0[3] = sub_249E68CA8(v13, v14, &v40);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v15 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v15(v10, v11);
    _os_log_impl(&dword_249D98000, v7, v8, "cancelRequest %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v37, -1, -1);
    MEMORY[0x24BD06618](v12, -1, -1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
    v15(v10, v11);
  }

  if (qword_2578D5D80 != -1)
    swift_once();
  v16 = v0[8];
  v17 = v0[6];
  v18 = v0[4];
  v19 = sub_249F1EED8();
  __swift_project_value_buffer(v19, (uint64_t)qword_2578FF408);
  v6(v16, v18, v17);
  v20 = sub_249F1EE9C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = swift_task_alloc();
  sub_249F1EE90();
  v23 = sub_249F1EEC0();
  v39 = sub_249F1F8B0();
  v24 = sub_249F1F958();
  v25 = v0[8];
  v26 = v0[6];
  if ((v24 & 1) != 0)
  {
    v36 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v36, v22, v20);
    v38 = v21;
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v40 = v28;
    *(_DWORD *)v27 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v29 = sub_249F1FE08();
    v0[2] = sub_249E68CA8(v29, v30, &v40);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v15(v25, v26);
    v31 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v23, v39, v31, "cancelRequest", "UUID=%{public}s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v28, -1, -1);
    MEMORY[0x24BD06618](v27, -1, -1);

    v32 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v32(v22, v20);
    v32(v36, v20);
    swift_task_dealloc();
  }
  else
  {

    v15(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  }
  v33 = v0[5];
  swift_task_dealloc();
  v0[10] = *(_QWORD *)(*(_QWORD *)(v33 + 24) + 16);
  return swift_task_switch();
}

uint64_t sub_249E67F24()
{
  uint64_t v0;

  sub_249E63048();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_249E67F78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  v2 = swift_allocObject();
  result = ModelManagerInferenceProvider.init()();
  *a1 = v2;
  return result;
}

void sub_249E67FB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  JUMPOUT(0x24BD0498CLL);
}

void sub_249E68028()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  JUMPOUT(0x24BD04998);
}

uint64_t sub_249E680A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return ModelManagerInferenceProvider.transitionAsset(withIdentifier:to:)(a1, a2, a3);
}

uint64_t sub_249E6810C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return ModelManagerInferenceProvider.requestStream(clientData:configuration:)(a1, a2);
}

uint64_t sub_249E6812C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249E681AC;
  return sub_249F1ED7C();
}

uint64_t sub_249E681AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_249E68210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return ModelManagerInferenceProvider.requestOneShot(clientData:configuration:)(a1, a2, a3);
}

uint64_t sub_249E6827C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DAFCF8;
  return ModelManagerInferenceProvider.cancelRequest(uuid:)(a1);
}

uint64_t sub_249E682CC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(*v1
                + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__delegate);
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, v4, v5);
}

uint64_t sub_249E68324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_249F1ECE0();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC050);
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_249F1ECBC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__totalSteps);
  v15 = *(_BYTE *)(v1
                 + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__totalSteps
                 + 8);
  *(_QWORD *)&v20 = *(_QWORD *)(v1
                              + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__currentStep);
  *((_QWORD *)&v20 + 1) = v14;
  v21 = v15;
  v22 = 0;
  v23 = a1;
  swift_bridgeObjectRetain();
  sub_249E5E1E4(&v20, (uint64_t)v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB758);
  sub_249F1F6A0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_249E68580()
{
  return sub_249E6892C(&OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__owning_task_id_token, &qword_2578DB738, &OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__continuation, &qword_2578DB758);
}

uint64_t sub_249E685A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_249E695A8(a3);
}

uint64_t sub_249E685C8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v4 = sub_249F1ECE0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249E93FC4(a3, (uint64_t)v8);
  sub_249D9BBEC((unint64_t *)&qword_2578DB730, v5, MEMORY[0x24BE68A00]);
  v9 = swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v10, v8, v4);
  v12[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB758);
  sub_249F1F6AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t sub_249E686C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249E69BF0(a3);
}

uint64_t sub_249E686EC(uint64_t a1)
{
  return sub_249E68324(a1);
}

uint64_t sub_249E6870C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC110);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB7D8);
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC118);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC060);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v19 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE6CA0], v1);
  sub_249F1F6DC();
  sub_249DCC274((uint64_t)v13, (uint64_t)v11, &qword_2578DC118);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v0+ OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider14requestOneShotFzZT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_S2_L_25OneShotGenerationDelegate__eventStreamContinuation, v11, v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v0+ OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider14requestOneShotFzZT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_S2_L_25OneShotGenerationDelegate_eventStream, v7, v18);
    sub_249DCC2FC((uint64_t)v13, &qword_2578DC118);
    return v0;
  }
  return result;
}

uint64_t sub_249E68908()
{
  return sub_249E6892C(&OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider14requestOneShotFzZT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_S2_L_25OneShotGenerationDelegate_eventStream, &qword_2578DB7D8, &OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider14requestOneShotFzZT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_S2_L_25OneShotGenerationDelegate__eventStreamContinuation, &qword_2578DC060);
}

uint64_t sub_249E6892C(_QWORD *a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = v4 + *a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocClassInstance();
}

uint64_t sub_249E689AC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[3];
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC058);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a3[3];
  v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v11 = a3[3];
  v12 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v16[1] = v10;
  v16[2] = v13;
  v17 = v14 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC060);
  sub_249F1F6A0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_249E68AC0(int a1, int a2, id a3)
{
  id v3;

  v3 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC060);
  return sub_249F1F6AC();
}

uint64_t sub_249E68B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC058);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3;
  v11 = 0;
  v12 = 0x80;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC060);
  sub_249F1F6A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = 0;
  return sub_249F1F6AC();
}

uint64_t sub_249E68BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[3];
  char v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC058);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  v7[2] = 0;
  v8 = 64;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC060);
  sub_249F1F6A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249E68CA8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_249E68D78(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_249DCA7E4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_249DCA7E4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_249E68D78(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_249F1F9B8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_249E68F30(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_249F1FAFC();
  if (!v8)
  {
    sub_249F1FBC8();
    __break(1u);
LABEL_17:
    result = sub_249F1FC28();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_249E68F30(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_249E68FC4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_249E6919C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_249E6919C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_249E68FC4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_249E69138(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_249F1FA90();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_249F1FBC8();
      __break(1u);
LABEL_10:
      v2 = sub_249F1F478();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_249F1FC28();
    __break(1u);
LABEL_14:
    result = sub_249F1FBC8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_249E69138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC128);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_249E6919C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC128);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E692E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch();
}

uint64_t sub_249E69300()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *);

  v2 = v0[12];
  v1 = v0[13];
  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__recipe;
  v4 = v1 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest__generationID;
  v5 = v1 + OBJC_IVAR____TtCC16VisualGeneration29ModelManagerInferenceProvider22ImageGenerationRequest_uuid;
  v6 = type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequest(0);
  v0[5] = v6;
  v0[6] = &off_251B56DF0;
  v0[2] = v1;
  v0[7] = v1;
  v0[10] = v6;
  v0[11] = &off_251B56E08;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *))(**(int **)(*(_QWORD *)v2 + 152)
                                                                             + *(_QWORD *)(*(_QWORD *)v2 + 152));
  swift_retain_n();
  v7 = (_QWORD *)swift_task_alloc();
  v0[14] = v7;
  *v7 = v0;
  v7[1] = sub_249E693F0;
  return v9(v3, v4, v5, v0 + 2, v0 + 7);
}

uint64_t sub_249E693F0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_249DCC2FC(v2 + 56, &qword_2578D73D8);
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_249E69494()
{
  uint64_t v0;

  sub_249DCC2FC(v0 + 56, &qword_2578D73D8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E694D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_249F1E4F4())
  {
    if (!__OFSUB__(a1, sub_249F1E50C()))
    {
      sub_249F1E500();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x249E69588);
  }
  sub_249F1E500();
  __break(1u);
  JUMPOUT(0x249E69598);
}

uint64_t sub_249E695A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC050);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249F1ECBC();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - v8;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__currentStep) = v12(v10, v11);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = v1
      + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__totalSteps;
  *(_QWORD *)v16 = v15;
  *(_BYTE *)(v16 + 8) = v17 & 1;
  v18 = v12(v10, v11);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  *(_QWORD *)&v33 = v18;
  *((_QWORD *)&v33 + 1) = v21;
  v34 = v22 & 1;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  sub_249E5E1E4(&v33, (uint64_t)v9);
  v23 = v28;
  v24 = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v9, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB758);
  v25 = v30;
  sub_249F1F6A0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v24);
}

void sub_249E697CC(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  unint64_t v8;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __CVBuffer *v22;
  IOSurfaceRef IOSurface;
  __IOSurface *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  int v29;
  uint64_t v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  unint64_t v34;
  id *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v45 = a1;
  v46 = a7;
  LODWORD(v11) = a4;
  v15 = type metadata accessor for GeneratedImage();
  MEMORY[0x24BDAC7A8](v15);
  v18 = (id *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a5)
    goto LABEL_43;
  v41 = a2;
  v42 = a3;
  v43 = v11;
  v48 = MEMORY[0x24BEE4AF8];
  v19 = *(_QWORD *)(a5 + 16);
  if (v19)
  {
    v40 = a6;
    v20 = a5 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v21 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_249DC091C(v20, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if (*((_BYTE *)v18 + 8) == 2)
      {
        v22 = (__CVBuffer *)*v18;
        IOSurface = CVPixelBufferGetIOSurface(v22);
        if (IOSurface)
        {
          v24 = IOSurface;

          v25 = sub_249DC05A8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
          MEMORY[0x24BD05130](v25);
          v8 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v8 >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_249F1F568();
          sub_249F1F598();
          sub_249F1F55C();
          goto LABEL_6;
        }

      }
      sub_249DC05A8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
LABEL_6:
      v20 += v21;
      if (!--v19)
      {
        v26 = v48;
        a6 = v40;
        goto LABEL_14;
      }
    }
  }
  swift_bridgeObjectRetain();
  v26 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_bridgeObjectRelease();
  if ((unint64_t)v26 >> 62)
  {
LABEL_37:
    if (v26 < 0)
      v18 = (id *)v26;
    else
      v18 = (id *)(v26 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v27 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
    if (v27)
    {
LABEL_16:
      v44 = v26 & 0xC000000000000001;
      if ((v26 & 0xC000000000000001) != 0)
        goto LABEL_45;
      if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_47;
      }
      v28 = (id *)*(id *)(v26 + 32);
LABEL_19:
      v18 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB738);
      sub_249F1F0F4();
      v29 = IOSurfaceSetOwnershipIdentity();
      if (v29)
      {
        LODWORD(v8) = v29;
LABEL_21:
        swift_bridgeObjectRelease();
        if (qword_2578D5D78 == -1)
        {
LABEL_22:
          v30 = sub_249F1EF38();
          __swift_project_value_buffer(v30, (uint64_t)qword_2578FF3F0);
          v11 = sub_249F1EF20();
          v31 = sub_249F1F820();
          v32 = os_log_type_enabled((os_log_t)v11, v31);
          a2 = v41;
          if (v32)
          {
            v33 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v33 = 67109120;
            v47 = v8;
            sub_249F1F9AC();
            _os_log_impl(&dword_249D98000, (os_log_t)v11, v31, "Unable to assign output surface ownership identity error: %d", v33, 8u);
            MEMORY[0x24BD06618](v33, -1, -1);
          }

          LOBYTE(a3) = v42;
          LOBYTE(v11) = v43;
          goto LABEL_43;
        }
LABEL_47:
        swift_once();
        goto LABEL_22;
      }
      v40 = a6;

      if (v27 == 1)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        a6 = v40;
        goto LABEL_42;
      }
      v39 = v26 & 0xFFFFFFFFFFFFFF8;
      a6 = 5;
      while (1)
      {
        v34 = a6 - 4;
        if (v44)
        {
          v35 = (id *)MEMORY[0x24BD056B8](a6 - 4, v26);
        }
        else
        {
          if (v34 >= *(_QWORD *)(v39 + 16))
          {
            __break(1u);
LABEL_45:
            v28 = (id *)MEMORY[0x24BD056B8](0, v26);
            goto LABEL_19;
          }
          v35 = (id *)*(id *)(v26 + 8 * a6);
        }
        v18 = v35;
        v36 = a6 - 3;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        sub_249F1F0F4();
        v37 = IOSurfaceSetOwnershipIdentity();
        if (v37)
        {
          LODWORD(v8) = v37;
          a6 = v40;
          goto LABEL_21;
        }

        ++a6;
        if (v36 == v27)
          goto LABEL_34;
      }
    }
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
      goto LABEL_16;
  }
  swift_bridgeObjectRelease();
LABEL_42:
  LOBYTE(a3) = v42;
  LOBYTE(v11) = v43;
  a2 = v41;
LABEL_43:
  *(_QWORD *)a8 = v45;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = a3 & 1;
  *(_BYTE *)(a8 + 17) = v11 & 1;
  *(_QWORD *)(a8 + 24) = a5;
  *(_QWORD *)(a8 + 32) = a6;
}

uint64_t sub_249E69BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32[8];
  char v33[8];

  v3 = sub_249F1ECE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC050);
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249F1ECBC();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__totalSteps);
  v16 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__totalSteps
                           + 8);
  v26 = v5;
  v27 = v4;
  v25 = v12;
  v23 = v17;
  if (v16 == 1)
  {
    v15 = *(uint64_t **)(v1
                      + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__currentStep);
    v18 = (uint64_t)v15 + 1;
    if (!__OFADD__(v15, 1))
      goto LABEL_6;
    __break(1u);
  }
  v18 = *v15;
LABEL_6:
  v19 = v1
      + OBJC_IVAR____TtCFC16VisualGeneration29ModelManagerInferenceProvider13requestStreamFT10clientDataV20ModelManagerServices10ClientData13configurationVS1_37InferenceProviderRequestConfiguration_Ps13AsyncSequence_L_21RequestStreamDelegate__owning_task_id_token;
  swift_bridgeObjectRetain();
  sub_249E697CC(v18, v18, 0, 1, a1, 0, v19, (uint64_t)&v29);
  sub_249E5E1E4(&v29, (uint64_t)v14);
  sub_249DCB1B0((uint64_t)&v30, (uint64_t)v33, &qword_2578D8B10);
  sub_249DFBA54((uint64_t)v33);
  sub_249DCB1B0((uint64_t)&v31, (uint64_t)v32, &qword_2578D8B48);
  sub_249DFBA54((uint64_t)v32);
  v20 = v23;
  v21 = v25;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v11, v14, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB758);
  sub_249F1F6A0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v26);
  v28 = 0;
  sub_249F1F6AC();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v21);
}

uint64_t sub_249E69F00(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000249F37750 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249F37770 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x526E776F6E6B6E75 && a2 == 0xEE00747365757165 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249F37790 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249F377B0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249F377D0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000249F377F0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000249F37810 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x8000000249F37830 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x53676E697373696DLL && a2 == 0xEC000000656C7974)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_249E6A2FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69746172656E6567 && a2 == 0xEC00000044496E6FLL;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249F33A60 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249F37A40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249E6A45C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53746E6572727563 && a2 == 0xEB00000000706574;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574536C61746F74 && a2 == 0xEA00000000007370 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x536C616E69467369 && a2 == 0xEB00000000706574 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65746172656E6567 && a2 == 0xEF736567616D4964 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249F34970)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_249E6A6D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  char v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC158);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E6EBD8();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v21) = 0;
  v9 = sub_249F1FCF4();
  LOBYTE(v21) = 1;
  v10 = sub_249F1FCAC();
  v19 = v11;
  LOBYTE(v21) = 2;
  v18 = sub_249F1FCD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
  v20 = 3;
  sub_249E6EC60(&qword_2578DC168, &qword_2578DC170, (uint64_t)&protocol conformance descriptor for GeneratedImage, MEMORY[0x24BEE12D0]);
  sub_249F1FCB8();
  v12 = v21;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC178);
  v20 = 4;
  sub_249E6ECE4(&qword_2578DC180, (uint64_t (*)(void))sub_249E6EC1C, MEMORY[0x24BEE12D0]);
  v17 = v12;
  swift_bridgeObjectRetain();
  sub_249F1FCB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v14 = v17;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_BYTE *)(a2 + 17) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v13;
  return result;
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.Input(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578DBF38);
}

uint64_t sub_249E6A99C(uint64_t a1)
{
  uint64_t v1;

  return sub_249E660CC(a1, *(_QWORD *)(v1 + 16), &qword_2578DB750, &qword_2578DB758);
}

unint64_t sub_249E6A9C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DB760;
  if (!qword_2578DB760)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DB748);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE6D38], v1);
    atomic_store(result, (unint64_t *)&qword_2578DB760);
  }
  return result;
}

uint64_t sub_249E6AA10(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  ValueMetadata *v59;
  _UNKNOWN **v60;
  unint64_t v61;

  type metadata accessor for AppleDiffusionResourceFactory(0);
  result = static AppleDiffusionResourceFactory.shared()();
  if (!v1)
  {
    v4 = result;
    v5 = (uint64_t *)(result + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs);
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs + 8);
    if (v6)
    {
      v49 = *v5;
      v50 = v6;
    }
    else
    {
      v49 = 0;
      v50 = 0xE000000000000000;
    }
    v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_adapterVersions);
    v51 = a1 + 64;
    v8 = 1 << *(_BYTE *)(a1 + 32);
    v9 = -1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    v10 = v9 & *(_QWORD *)(a1 + 64);
    v52 = (unint64_t)(v8 + 63) >> 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v11 = 0;
    v48 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v61 = 0x8000000249F34090;
    v53 = a1;
    if (v10)
      goto LABEL_12;
LABEL_13:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_61:
      __break(1u);
      return result;
    }
    if (v14 >= v52)
      goto LABEL_56;
    v15 = *(_QWORD *)(v51 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v52)
        goto LABEL_56;
      v15 = *(_QWORD *)(v51 + 8 * v11);
      if (v15)
        goto LABEL_26;
      v11 = v14 + 2;
      if (v14 + 2 >= v52)
      {
LABEL_56:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        if (v48[2])
        {
          sub_249DD9530();
          v45 = (void *)swift_allocError();
          *(_QWORD *)(v46 + 8) = 0;
          *(_QWORD *)(v46 + 16) = 0;
          *(_QWORD *)v46 = v48;
          *(_BYTE *)(v46 + 24) = 7;
          sub_249F1ECE0();
          sub_249D9BBEC((unint64_t *)&qword_2578DB730, (uint64_t (*)(uint64_t))MEMORY[0x24BE689F0], MEMORY[0x24BE68A00]);
          swift_allocError();
          sub_249E93FC4(v45, v47);

          swift_willThrow();
          return swift_release();
        }
        else
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      v15 = *(_QWORD *)(v51 + 8 * v11);
      if (!v15)
      {
        v16 = v14 + 3;
        if (v16 < v52)
        {
          v15 = *(_QWORD *)(v51 + 8 * v16);
          if (v15)
          {
            v11 = v16;
            goto LABEL_26;
          }
          while (1)
          {
            v11 = v16 + 1;
            if (__OFADD__(v16, 1))
              goto LABEL_61;
            if (v11 >= v52)
              goto LABEL_56;
            v15 = *(_QWORD *)(v51 + 8 * v11);
            ++v16;
            if (v15)
              goto LABEL_26;
          }
        }
        goto LABEL_56;
      }
    }
LABEL_26:
    v10 = (v15 - 1) & v15;
    for (i = __clz(__rbit64(v15)) + (v11 << 6); ; i = v12 | (v11 << 6))
    {
      v17 = 16 * i;
      v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v17);
      v20 = *v18;
      v19 = (void *)v18[1];
      v21 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v17);
      v23 = *v21;
      v22 = v21[1];
      v59 = &type metadata for AppleDiffusionImageGenerator.Descriptor;
      v60 = &off_251B58BC0;
      v57 = 0xD000000000000029;
      v58 = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA260);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_249F1E9E0();
        v25 = v55;
        v24 = v56;
        __swift_project_boxed_opaque_existential_1(&v54, v55);
        v26 = MEMORY[0x24BD04698](v25, *(_QWORD *)(*(_QWORD *)(v24 + 8) + 8));
        v28 = v27;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
        swift_bridgeObjectRelease();
        if (v20 == v26 && v19 == v28)
        {
          swift_bridgeObjectRelease();
LABEL_41:
          v39 = v50;
          swift_bridgeObjectRetain();
          v40 = v49;
          if (!v22)
            goto LABEL_42;
          goto LABEL_46;
        }
        v30 = sub_249F1FE2C();
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
          goto LABEL_41;
      }
      swift_bridgeObjectRetain();
      v31._countAndFlagsBits = v20;
      v31._object = v19;
      LOBYTE(v32) = AppleDiffusionAdapter.init(modelCatalogInferenceAssetIdentifier:)(v31);
      if (v32 != 9)
      {
        if (*(_QWORD *)(v7 + 16))
        {
          v33 = sub_249DB7F54(v32);
          if ((v34 & 1) != 0)
          {
            v35 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v33);
            if (*(_QWORD *)(v35 + 16))
            {
              swift_bridgeObjectRetain();
              v36 = sub_249DB7FAC(0);
              if ((v37 & 1) != 0)
              {
                v38 = (uint64_t *)(*(_QWORD *)(v35 + 56) + 16 * v36);
                v40 = *v38;
                v39 = v38[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (!v22)
                  goto LABEL_42;
                goto LABEL_46;
              }
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      v40 = 0;
      v39 = 0;
      if (!v22)
      {
LABEL_42:
        if (!v39)
          goto LABEL_11;
        goto LABEL_50;
      }
LABEL_46:
      if (v39 && (v23 == v40 && v22 == v39 || (sub_249F1FE2C() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        result = swift_bridgeObjectRelease();
        a1 = v53;
        if (!v10)
          goto LABEL_13;
        goto LABEL_12;
      }
LABEL_50:
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_249DB332C(0, v48[2] + 1, 1, v48);
        v48 = (_QWORD *)result;
      }
      v42 = v48[2];
      v41 = v48[3];
      v43 = v42 + 1;
      if (v42 >= v41 >> 1)
      {
        result = (uint64_t)sub_249DB332C((_QWORD *)(v41 > 1), v42 + 1, 1, v48);
        v43 = v42 + 1;
        v48 = (_QWORD *)result;
      }
      v48[2] = v43;
      v44 = &v48[6 * v42];
      v44[4] = v20;
      v44[5] = v19;
      v44[6] = v23;
      v44[7] = v22;
      v44[8] = v40;
      v44[9] = v39;
      a1 = v53;
      if (!v10)
        goto LABEL_13;
LABEL_12:
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
    }
  }
  return result;
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.RequestStreamDelegate(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578DBCF0);
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequest(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578DB900);
}

_OWORD *sub_249E6AFA8(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E6AFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_249DAFCF8;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.OneShotGenerationDelegate(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578DBE20);
}

unint64_t sub_249E6B06C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249E6B0A0();
  a1[2] = sub_249E6B0E4();
  result = sub_249DE0540();
  a1[3] = result;
  return result;
}

unint64_t sub_249E6B0A0()
{
  unint64_t result;

  result = qword_2578DB7E8;
  if (!qword_2578DB7E8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ModelManagerInferenceProvider.Error, &type metadata for ModelManagerInferenceProvider.Error);
    atomic_store(result, (unint64_t *)&qword_2578DB7E8);
  }
  return result;
}

unint64_t sub_249E6B0E4()
{
  unint64_t result;

  result = qword_2578DB7F0[0];
  if (!qword_2578DB7F0[0])
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ModelManagerInferenceProvider.Error, &type metadata for ModelManagerInferenceProvider.Error);
    atomic_store(result, qword_2578DB7F0);
  }
  return result;
}

uint64_t type metadata accessor for ModelManagerInferenceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ModelManagerInferenceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModelManagerInferenceProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t initializeBufferWithCopyOfBuffer for ModelManagerInferenceProvider.Error(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_249E6B790(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_249E6B168);
}

uint64_t sub_249E6B168(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ModelManagerInferenceProvider.Error(uint64_t a1)
{
  return sub_249E6B190(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_249E6B190(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *assignWithCopy for ModelManagerInferenceProvider.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_249E6B7EC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_249E6B168, (void (*)(uint64_t, uint64_t, uint64_t))sub_249E6B190);
}

uint64_t *assignWithTake for ModelManagerInferenceProvider.Error(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_249E6B858(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_249E6B190);
}

uint64_t getEnumTagSinglePayload for ModelManagerInferenceProvider.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelManagerInferenceProvider.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_249E6B254(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_249E6B26C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error()
{
  return &type metadata for ModelManagerInferenceProvider.Error;
}

uint64_t sub_249E6B294()
{
  return type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequest(0);
}

uint64_t sub_249E6B29C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GenerationRecipe(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ModelManagerInferenceProvider.ImageGenerationRequestsQueue()
{
  return objc_opt_self();
}

uint64_t sub_249E6B35C()
{
  return type metadata accessor for ModelManagerInferenceProvider.SerialRequestProcessor(0);
}

void sub_249E6B364()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_249E6B444(319, &qword_2578DBB20, MEMORY[0x24BEE6A40]);
  if (v0 <= 0x3F)
  {
    sub_249E6B444(319, &qword_2578DBB28, MEMORY[0x24BEE6A98]);
    if (v1 <= 0x3F)
    {
      sub_249E6B444(319, qword_2578DBB30, MEMORY[0x24BEE6A78]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_249E6B444(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE1328]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_249E6B48C()
{
  return type metadata accessor for ModelManagerInferenceProvider.RequestStreamDelegate(0);
}

void sub_249E6B494()
{
  unint64_t v0;
  unint64_t v1;

  sub_249E6B534();
  if (v0 <= 0x3F)
  {
    sub_249E6B590();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_249E6B534()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578DBD00)
  {
    v0 = sub_249F1F100();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2578DBD00);
  }
}

void sub_249E6B590()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578DBD08[0])
  {
    sub_249F1ECBC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D64D0);
    v0 = sub_249F1F6B8();
    if (!v1)
      atomic_store(v0, qword_2578DBD08);
  }
}

uint64_t sub_249E6B600()
{
  if (MEMORY[0x24BEE4F18])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_2578DB738);
  else
    return MEMORY[0x24BEE4AE0] + 8;
}

uint64_t sub_249E6B628()
{
  return type metadata accessor for ModelManagerInferenceProvider.OneShotGenerationDelegate(0);
}

void sub_249E6B630()
{
  unint64_t v0;
  unint64_t v1;

  sub_249E6B6D8(319, &qword_2578DBE30, MEMORY[0x24BEE6D28]);
  if (v0 <= 0x3F)
  {
    sub_249E6B6D8(319, qword_2578DBE38, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, _QWORD))MEMORY[0x24BEE6CD0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_249E6B6D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D64D0);
    v7 = a3(a1, &type metadata for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event, v6, MEMORY[0x24BEE3F20]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_249E6B790(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_249E6B750);
}

uint64_t sub_249E6B750(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if ((a3 >> 6) - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event(uint64_t a1)
{
  return sub_249E6B778(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_249E6B778(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if ((a3 >> 6) - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_249E6B790(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_249E6B7EC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_249E6B750, (void (*)(uint64_t, uint64_t, uint64_t))sub_249E6B778);
}

uint64_t *sub_249E6B7EC(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_249E6B858(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_249E6B778);
}

uint64_t *sub_249E6B858(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_249E6B944(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_249E6B950(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_249E6B960(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event()
{
  return &type metadata for ModelManagerInferenceProvider.OneShotGenerationDelegate.Event;
}

_QWORD *sub_249E6B984(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void *v42;
  uint64_t v43;
  id v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  void *v70;
  uint64_t v71;
  id v72;
  __int128 v73;
  _OWORD *v74;
  _OWORD *v75;
  void *v76;
  uint64_t v77;
  id v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_249F1E8D8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v97 = a3;
    v98 = a2;
    v8 = *(int *)(a3 + 20);
    v99 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
    v9[40] = v10[40];
    *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
    *((_DWORD *)v9 + 14) = *((_DWORD *)v10 + 14);
    v9[60] = v10[60];
    *(_WORD *)(v9 + 61) = *(_WORD *)(v10 + 61);
    v12 = *((_QWORD *)v10 + 9);
    *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
    *((_QWORD *)v9 + 9) = v12;
    v9[80] = v10[80];
    v13 = (int *)type metadata accessor for GenerationRecipe(0);
    v14 = v13[8];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v18 = *((_QWORD *)v17 - 1);
    v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      v24(v15, v16, v23);
      v24(&v15[v17[5]], &v16[v17[5]], v23);
      v25 = v17[6];
      v26 = (uint64_t *)&v15[v25];
      v27 = (uint64_t *)&v16[v25];
      if (*(_QWORD *)&v16[v25 + 16])
      {
        v28 = v27[1];
        v96 = *v27;
        sub_249DC3928(*v27, v28);
        *v26 = v96;
        v26[1] = v28;
        v26[2] = v27[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v26 = *(_OWORD *)v27;
        v26[2] = v27[2];
      }
      v15[v17[7]] = v16[v17[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    v22 = v99;
    v29 = v13[9];
    v30 = &v9[v29];
    v31 = &v10[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = v13[10];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v33[4] = v34[4];
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v35 = v13[11];
    v36 = &v9[v35];
    v37 = &v10[v35];
    *(_WORD *)v36 = *(_WORD *)v37;
    v36[2] = v37[2];
    v38 = *((_QWORD *)v37 + 2);
    *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
    *((_QWORD *)v36 + 2) = v38;
    *(_QWORD *)&v9[v13[12]] = *(_QWORD *)&v10[v13[12]];
    *(_QWORD *)&v9[v13[13]] = *(_QWORD *)&v10[v13[13]];
    v39 = v13[14];
    v40 = &v9[v39];
    v41 = &v10[v39];
    v42 = *(void **)&v10[v39 + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42)
    {
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_DWORD *)v40 + 4) = *((_DWORD *)v41 + 4);
      v43 = *((_QWORD *)v41 + 4);
      *((_QWORD *)v40 + 3) = v42;
      *((_QWORD *)v40 + 4) = v43;
      v44 = v42;
      swift_retain();
    }
    else
    {
      v45 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v45;
      *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
    }
    v46 = v13[15];
    v47 = &v9[v46];
    v48 = &v10[v46];
    v49 = (void *)*((_QWORD *)v48 + 3);
    if (v49)
    {
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_DWORD *)v47 + 4) = *((_DWORD *)v48 + 4);
      v50 = *((_QWORD *)v48 + 4);
      *((_QWORD *)v47 + 3) = v49;
      *((_QWORD *)v47 + 4) = v50;
      v51 = v49;
      swift_retain();
    }
    else
    {
      v52 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v52;
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
    }
    v53 = v13[16];
    v54 = &v9[v53];
    v55 = &v10[v53];
    v56 = (void *)*((_QWORD *)v55 + 3);
    if (v56)
    {
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_DWORD *)v54 + 4) = *((_DWORD *)v55 + 4);
      v57 = *((_QWORD *)v55 + 4);
      *((_QWORD *)v54 + 3) = v56;
      *((_QWORD *)v54 + 4) = v57;
      v58 = v56;
      swift_retain();
    }
    else
    {
      v59 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v59;
      *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
    }
    v60 = v13[17];
    v61 = &v9[v60];
    v62 = &v10[v60];
    v63 = (void *)*((_QWORD *)v62 + 3);
    if (v63)
    {
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_DWORD *)v61 + 4) = *((_DWORD *)v62 + 4);
      v64 = *((_QWORD *)v62 + 4);
      *((_QWORD *)v61 + 3) = v63;
      *((_QWORD *)v61 + 4) = v64;
      v65 = v63;
      swift_retain();
    }
    else
    {
      v66 = *((_OWORD *)v62 + 1);
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v66;
      *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
    }
    v67 = v13[18];
    v68 = &v9[v67];
    v69 = &v10[v67];
    v70 = *(void **)&v10[v67 + 24];
    if (v70)
    {
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *((_DWORD *)v68 + 4) = *((_DWORD *)v69 + 4);
      v71 = *((_QWORD *)v69 + 4);
      *((_QWORD *)v68 + 3) = v70;
      *((_QWORD *)v68 + 4) = v71;
      v72 = v70;
      swift_retain();
    }
    else
    {
      v73 = *((_OWORD *)v69 + 1);
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v73;
      *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
    }
    v74 = v68 + 40;
    v75 = v69 + 40;
    v76 = (void *)*((_QWORD *)v69 + 8);
    if (v76)
    {
      *v74 = *v75;
      *((_DWORD *)v68 + 14) = *((_DWORD *)v69 + 14);
      v77 = *((_QWORD *)v69 + 9);
      *((_QWORD *)v68 + 8) = v76;
      *((_QWORD *)v68 + 9) = v77;
      v78 = v76;
      swift_retain();
    }
    else
    {
      v79 = *(_OWORD *)(v69 + 56);
      *v74 = *v75;
      *(_OWORD *)(v68 + 56) = v79;
      *((_QWORD *)v68 + 9) = *((_QWORD *)v69 + 9);
    }
    v68[80] = v69[80];
    *(_QWORD *)&v9[v13[19]] = *(_QWORD *)&v10[v13[19]];
    v80 = v13[20];
    v81 = &v9[v80];
    v82 = &v10[v80];
    v83 = *(void **)&v10[v80 + 24];
    swift_bridgeObjectRetain();
    if (v83)
    {
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *((_DWORD *)v81 + 4) = *((_DWORD *)v82 + 4);
      v84 = *((_QWORD *)v82 + 4);
      v85 = *((_QWORD *)v82 + 5);
      *((_QWORD *)v81 + 3) = v83;
      *((_QWORD *)v81 + 4) = v84;
      v86 = *((_QWORD *)v82 + 6);
      v87 = *((_QWORD *)v82 + 7);
      *((_QWORD *)v81 + 5) = v85;
      *((_QWORD *)v81 + 6) = v86;
      *((_QWORD *)v81 + 7) = v87;
      v88 = v83;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v89 = *((_OWORD *)v82 + 1);
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *((_OWORD *)v81 + 1) = v89;
      v90 = *((_OWORD *)v82 + 3);
      *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
      *((_OWORD *)v81 + 3) = v90;
    }
    v91 = v13[21];
    v92 = &v9[v91];
    v93 = &v10[v91];
    v94 = *((_QWORD *)v93 + 1);
    *(_QWORD *)v92 = *(_QWORD *)v93;
    *((_QWORD *)v92 + 1) = v94;
    *((_QWORD *)v92 + 2) = *((_QWORD *)v93 + 2);
    *(_QWORD *)&v9[v13[22]] = *(_QWORD *)&v10[v13[22]];
    v9[v13[23]] = v10[v13[23]];
    *(_QWORD *)((char *)v99 + *(int *)(v97 + 24)) = *(_QWORD *)((char *)v98 + *(int *)(v97 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

uint64_t sub_249E6BED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;

  v4 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for GenerationRecipe(0);
  v7 = v5 + v6[8];
  v8 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v7, v9);
    v10(v7 + *(int *)(v8 + 20), v9);
    v11 = (uint64_t *)(v7 + *(int *)(v8 + 24));
    if (v11[2])
    {
      sub_249DC3C24(*v11, v11[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(void **)(v5 + v6[14] + 24);
  if (v12)
  {

    swift_release();
  }
  v13 = *(void **)(v5 + v6[15] + 24);
  if (v13)
  {

    swift_release();
  }
  v14 = *(void **)(v5 + v6[16] + 24);
  if (v14)
  {

    swift_release();
  }
  v15 = *(void **)(v5 + v6[17] + 24);
  if (v15)
  {

    swift_release();
  }
  v16 = v5 + v6[18];
  v17 = *(void **)(v16 + 24);
  if (v17)
  {

    swift_release();
  }
  v18 = *(void **)(v16 + 64);
  if (v18)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  v19 = *(void **)(v5 + v6[20] + 24);
  if (v19)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E6C0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  __int128 v71;
  _OWORD *v72;
  _OWORD *v73;
  void *v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v95 = a3;
  v96 = a2;
  v7 = *(int *)(a3 + 20);
  v97 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_DWORD *)(v8 + 56) = *(_DWORD *)(a2 + v7 + 56);
  *(_BYTE *)(v8 + 60) = *(_BYTE *)(a2 + v7 + 60);
  *(_WORD *)(v8 + 61) = *(_WORD *)(a2 + v7 + 61);
  v12 = *(_QWORD *)(a2 + v7 + 64);
  v11 = *(_QWORD *)(a2 + v7 + 72);
  *(_QWORD *)(v8 + 64) = v12;
  *(_QWORD *)(v8 + 72) = v11;
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  v13 = (int *)type metadata accessor for GenerationRecipe(0);
  v14 = v13[8];
  v15 = (char *)(v8 + v14);
  v16 = (char *)(v9 + v14);
  v17 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v15, v16, v21);
    v22(&v15[v17[5]], &v16[v17[5]], v21);
    v23 = v17[6];
    v24 = (uint64_t *)&v15[v23];
    v25 = (uint64_t *)&v16[v23];
    if (*(_QWORD *)&v16[v23 + 16])
    {
      v26 = v25[1];
      v94 = *v25;
      sub_249DC3928(*v25, v26);
      *v24 = v94;
      v24[1] = v26;
      v24[2] = v25[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
      v24[2] = v25[2];
    }
    v15[v17[7]] = v16[v17[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  v27 = v13[9];
  v28 = v8 + v27;
  v29 = v9 + v27;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = v13[10];
  v31 = v8 + v30;
  v32 = v9 + v30;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v33 = v13[11];
  v34 = v8 + v33;
  v35 = v9 + v33;
  *(_WORD *)v34 = *(_WORD *)v35;
  *(_BYTE *)(v34 + 2) = *(_BYTE *)(v35 + 2);
  v36 = *(_QWORD *)(v35 + 16);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  *(_QWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v8 + v13[12]) = *(_QWORD *)(v9 + v13[12]);
  *(_QWORD *)(v8 + v13[13]) = *(_QWORD *)(v9 + v13[13]);
  v37 = v13[14];
  v38 = v8 + v37;
  v39 = v9 + v37;
  v40 = *(void **)(v9 + v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40)
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *(_DWORD *)(v38 + 16) = *(_DWORD *)(v39 + 16);
    v41 = *(_QWORD *)(v39 + 32);
    *(_QWORD *)(v38 + 24) = v40;
    *(_QWORD *)(v38 + 32) = v41;
    v42 = v40;
    swift_retain();
  }
  else
  {
    v43 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *(_OWORD *)(v38 + 16) = v43;
    *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  }
  v44 = v13[15];
  v45 = v8 + v44;
  v46 = v9 + v44;
  v47 = *(void **)(v46 + 24);
  if (v47)
  {
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_DWORD *)(v45 + 16) = *(_DWORD *)(v46 + 16);
    v48 = *(_QWORD *)(v46 + 32);
    *(_QWORD *)(v45 + 24) = v47;
    *(_QWORD *)(v45 + 32) = v48;
    v49 = v47;
    swift_retain();
  }
  else
  {
    v50 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v50;
    *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  }
  v51 = v13[16];
  v52 = v8 + v51;
  v53 = v9 + v51;
  v54 = *(void **)(v53 + 24);
  if (v54)
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_DWORD *)(v52 + 16) = *(_DWORD *)(v53 + 16);
    v55 = *(_QWORD *)(v53 + 32);
    *(_QWORD *)(v52 + 24) = v54;
    *(_QWORD *)(v52 + 32) = v55;
    v56 = v54;
    swift_retain();
  }
  else
  {
    v57 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 16) = v57;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  }
  v58 = v13[17];
  v59 = v8 + v58;
  v60 = v9 + v58;
  v61 = *(void **)(v60 + 24);
  if (v61)
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_DWORD *)(v59 + 16) = *(_DWORD *)(v60 + 16);
    v62 = *(_QWORD *)(v60 + 32);
    *(_QWORD *)(v59 + 24) = v61;
    *(_QWORD *)(v59 + 32) = v62;
    v63 = v61;
    swift_retain();
  }
  else
  {
    v64 = *(_OWORD *)(v60 + 16);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_OWORD *)(v59 + 16) = v64;
    *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  }
  v65 = v13[18];
  v66 = v8 + v65;
  v67 = v9 + v65;
  v68 = *(void **)(v9 + v65 + 24);
  if (v68)
  {
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *(_DWORD *)(v66 + 16) = *(_DWORD *)(v67 + 16);
    v69 = *(_QWORD *)(v67 + 32);
    *(_QWORD *)(v66 + 24) = v68;
    *(_QWORD *)(v66 + 32) = v69;
    v70 = v68;
    swift_retain();
  }
  else
  {
    v71 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v71;
    *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
  }
  v72 = (_OWORD *)(v66 + 40);
  v73 = (_OWORD *)(v67 + 40);
  v74 = *(void **)(v67 + 64);
  if (v74)
  {
    *v72 = *v73;
    *(_DWORD *)(v66 + 56) = *(_DWORD *)(v67 + 56);
    v75 = *(_QWORD *)(v67 + 72);
    *(_QWORD *)(v66 + 64) = v74;
    *(_QWORD *)(v66 + 72) = v75;
    v76 = v74;
    swift_retain();
  }
  else
  {
    v77 = *(_OWORD *)(v67 + 56);
    *v72 = *v73;
    *(_OWORD *)(v66 + 56) = v77;
    *(_QWORD *)(v66 + 72) = *(_QWORD *)(v67 + 72);
  }
  *(_BYTE *)(v66 + 80) = *(_BYTE *)(v67 + 80);
  *(_QWORD *)(v8 + v13[19]) = *(_QWORD *)(v9 + v13[19]);
  v78 = v13[20];
  v79 = v8 + v78;
  v80 = v9 + v78;
  v81 = *(void **)(v9 + v78 + 24);
  swift_bridgeObjectRetain();
  if (v81)
  {
    *(_OWORD *)v79 = *(_OWORD *)v80;
    *(_DWORD *)(v79 + 16) = *(_DWORD *)(v80 + 16);
    v82 = *(_QWORD *)(v80 + 32);
    v83 = *(_QWORD *)(v80 + 40);
    *(_QWORD *)(v79 + 24) = v81;
    *(_QWORD *)(v79 + 32) = v82;
    v84 = *(_QWORD *)(v80 + 48);
    v85 = *(_QWORD *)(v80 + 56);
    *(_QWORD *)(v79 + 40) = v83;
    *(_QWORD *)(v79 + 48) = v84;
    *(_QWORD *)(v79 + 56) = v85;
    v86 = v81;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v87 = *(_OWORD *)(v80 + 16);
    *(_OWORD *)v79 = *(_OWORD *)v80;
    *(_OWORD *)(v79 + 16) = v87;
    v88 = *(_OWORD *)(v80 + 48);
    *(_OWORD *)(v79 + 32) = *(_OWORD *)(v80 + 32);
    *(_OWORD *)(v79 + 48) = v88;
  }
  v89 = v13[21];
  v90 = (_QWORD *)(v8 + v89);
  v91 = (_QWORD *)(v9 + v89);
  v92 = v91[1];
  *v90 = *v91;
  v90[1] = v92;
  v90[2] = v91[2];
  *(_QWORD *)(v8 + v13[22]) = *(_QWORD *)(v9 + v13[22]);
  *(_BYTE *)(v8 + v13[23]) = *(_BYTE *)(v9 + v13[23]);
  *(_QWORD *)(v97 + *(int *)(v95 + 24)) = *(_QWORD *)(v96 + *(int *)(v95 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v97;
}

uint64_t sub_249E6C620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  id v58;
  __int128 v59;
  void *v60;
  id v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  __int128 *v67;
  void *v68;
  uint64_t v69;
  void *v70;
  id v71;
  __int128 v72;
  void *v73;
  id v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 *v80;
  void *v81;
  uint64_t v82;
  void *v83;
  id v84;
  __int128 v85;
  void *v86;
  id v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 *v93;
  void *v94;
  uint64_t v95;
  void *v96;
  id v97;
  __int128 v98;
  void *v99;
  id v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 *v106;
  void *v107;
  uint64_t v108;
  void *v109;
  id v110;
  __int128 v111;
  void *v112;
  id v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  _OWORD *v117;
  _OWORD *v118;
  void *v119;
  uint64_t v120;
  void *v121;
  id v122;
  __int128 v123;
  void *v124;
  id v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  __int128 *v131;
  void *v132;
  uint64_t v133;
  void *v134;
  id v135;
  __int128 v136;
  void *v137;
  id v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v153 = a3;
  v154 = a2;
  v7 = *(int *)(a3 + 20);
  v155 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_OWORD *)(v9 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
  *(_OWORD *)(v8 + 24) = v10;
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_BYTE *)(v8 + 58) = *(_BYTE *)(v9 + 58);
  *(_BYTE *)(v8 + 59) = *(_BYTE *)(v9 + 59);
  *(_BYTE *)(v8 + 60) = *(_BYTE *)(v9 + 60);
  *(_BYTE *)(v8 + 61) = *(_BYTE *)(v9 + 61);
  *(_BYTE *)(v8 + 62) = *(_BYTE *)(v9 + 62);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  v12 = (int *)type metadata accessor for GenerationRecipe(0);
  v13 = v12[8];
  v14 = (_BYTE *)(v8 + v13);
  v15 = (_BYTE *)(v9 + v13);
  v16 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v22(v14, v15, v21);
      v22(&v14[v16[5]], &v15[v16[5]], v21);
      v23 = v16[6];
      v24 = (uint64_t *)&v14[v23];
      v25 = (uint64_t *)&v15[v23];
      if (*(_QWORD *)&v15[v23 + 16])
      {
        v26 = v25[1];
        v152 = *v25;
        sub_249DC3928(*v25, v26);
        *v24 = v152;
        v24[1] = v26;
        v24[2] = v25[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v39 = *(_OWORD *)v25;
        v24[2] = v25[2];
        *(_OWORD *)v24 = v39;
      }
      v14[v16[7]] = v15[v16[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_13;
    }
LABEL_7:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_13:
    v40 = v153;
    goto LABEL_14;
  }
  if (v20)
  {
    sub_249DC05A8((uint64_t)v14, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_7;
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v29 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 24);
  v29(v14, v15, v28);
  v29(&v14[v16[5]], &v15[v16[5]], v28);
  v30 = v16[6];
  v31 = (uint64_t *)&v14[v30];
  v32 = (uint64_t *)&v15[v30];
  v33 = *(_QWORD *)&v14[v30 + 16];
  v34 = *(_QWORD *)&v15[v30 + 16];
  if (v33)
  {
    if (v34)
    {
      v35 = *v32;
      v36 = v32[1];
      sub_249DC3928(*v32, v36);
      v37 = *v31;
      v38 = v31[1];
      *v31 = v35;
      v31[1] = v36;
      sub_249DC3C24(v37, v38);
      v31[2] = v32[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02528((uint64_t)v31);
      v150 = v32[2];
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v31[2] = v150;
    }
  }
  else if (v34)
  {
    v148 = *v32;
    v149 = v32[1];
    sub_249DC3928(*v32, v149);
    *v31 = v148;
    v31[1] = v149;
    v31[2] = v32[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v151 = *(_OWORD *)v32;
    v31[2] = v32[2];
    *(_OWORD *)v31 = v151;
  }
  v40 = v153;
  v14[v16[7]] = v15[v16[7]];
LABEL_14:
  v41 = v12[9];
  v42 = v8 + v41;
  v43 = (int *)(v9 + v41);
  v44 = *v43;
  *(_BYTE *)(v42 + 4) = *((_BYTE *)v43 + 4);
  *(_DWORD *)v42 = v44;
  v45 = v12[10];
  v46 = v8 + v45;
  v47 = (int *)(v9 + v45);
  v48 = *v47;
  *(_BYTE *)(v46 + 4) = *((_BYTE *)v47 + 4);
  *(_DWORD *)v46 = v48;
  v49 = v12[11];
  v50 = v8 + v49;
  v51 = v9 + v49;
  *(_BYTE *)v50 = *(_BYTE *)v51;
  *(_BYTE *)(v50 + 1) = *(_BYTE *)(v51 + 1);
  *(_BYTE *)(v50 + 2) = *(_BYTE *)(v51 + 2);
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
  *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[12]) = *(_QWORD *)(v9 + v12[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[13]) = *(_QWORD *)(v9 + v12[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = v12[14];
  v53 = v8 + v52;
  v54 = (__int128 *)(v9 + v52);
  v55 = *(void **)(v8 + v52 + 24);
  v56 = *(_QWORD *)(v9 + v52 + 24);
  if (v55)
  {
    if (v56)
    {
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *(_QWORD *)(v53 + 8) = *((_QWORD *)v54 + 1);
      *(_DWORD *)(v53 + 16) = *((_DWORD *)v54 + 4);
      v57 = (void *)*((_QWORD *)v54 + 3);
      *(_QWORD *)(v53 + 24) = v57;
      v58 = v57;

      *(_QWORD *)(v53 + 32) = *((_QWORD *)v54 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v53);
      v62 = *((_QWORD *)v54 + 4);
      v63 = v54[1];
      *(_OWORD *)v53 = *v54;
      *(_OWORD *)(v53 + 16) = v63;
      *(_QWORD *)(v53 + 32) = v62;
    }
  }
  else
  {
    v59 = *v54;
    if (v56)
    {
      *(_DWORD *)(v53 + 16) = *((_DWORD *)v54 + 4);
      *(_OWORD *)v53 = v59;
      v60 = (void *)*((_QWORD *)v54 + 3);
      *(_QWORD *)(v53 + 24) = v60;
      *(_QWORD *)(v53 + 32) = *((_QWORD *)v54 + 4);
      v61 = v60;
      swift_retain();
    }
    else
    {
      v64 = v54[1];
      *(_QWORD *)(v53 + 32) = *((_QWORD *)v54 + 4);
      *(_OWORD *)v53 = v59;
      *(_OWORD *)(v53 + 16) = v64;
    }
  }
  v65 = v12[15];
  v66 = v8 + v65;
  v67 = (__int128 *)(v9 + v65);
  v68 = *(void **)(v8 + v65 + 24);
  v69 = *(_QWORD *)(v9 + v65 + 24);
  if (v68)
  {
    if (v69)
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_QWORD *)(v66 + 8) = *((_QWORD *)v67 + 1);
      *(_DWORD *)(v66 + 16) = *((_DWORD *)v67 + 4);
      v70 = (void *)*((_QWORD *)v67 + 3);
      *(_QWORD *)(v66 + 24) = v70;
      v71 = v70;

      *(_QWORD *)(v66 + 32) = *((_QWORD *)v67 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v66);
      v75 = *((_QWORD *)v67 + 4);
      v76 = v67[1];
      *(_OWORD *)v66 = *v67;
      *(_OWORD *)(v66 + 16) = v76;
      *(_QWORD *)(v66 + 32) = v75;
    }
  }
  else
  {
    v72 = *v67;
    if (v69)
    {
      *(_DWORD *)(v66 + 16) = *((_DWORD *)v67 + 4);
      *(_OWORD *)v66 = v72;
      v73 = (void *)*((_QWORD *)v67 + 3);
      *(_QWORD *)(v66 + 24) = v73;
      *(_QWORD *)(v66 + 32) = *((_QWORD *)v67 + 4);
      v74 = v73;
      swift_retain();
    }
    else
    {
      v77 = v67[1];
      *(_QWORD *)(v66 + 32) = *((_QWORD *)v67 + 4);
      *(_OWORD *)v66 = v72;
      *(_OWORD *)(v66 + 16) = v77;
    }
  }
  v78 = v12[16];
  v79 = v8 + v78;
  v80 = (__int128 *)(v9 + v78);
  v81 = *(void **)(v8 + v78 + 24);
  v82 = *(_QWORD *)(v9 + v78 + 24);
  if (v81)
  {
    if (v82)
    {
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *(_QWORD *)(v79 + 8) = *((_QWORD *)v80 + 1);
      *(_DWORD *)(v79 + 16) = *((_DWORD *)v80 + 4);
      v83 = (void *)*((_QWORD *)v80 + 3);
      *(_QWORD *)(v79 + 24) = v83;
      v84 = v83;

      *(_QWORD *)(v79 + 32) = *((_QWORD *)v80 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v79);
      v88 = *((_QWORD *)v80 + 4);
      v89 = v80[1];
      *(_OWORD *)v79 = *v80;
      *(_OWORD *)(v79 + 16) = v89;
      *(_QWORD *)(v79 + 32) = v88;
    }
  }
  else
  {
    v85 = *v80;
    if (v82)
    {
      *(_DWORD *)(v79 + 16) = *((_DWORD *)v80 + 4);
      *(_OWORD *)v79 = v85;
      v86 = (void *)*((_QWORD *)v80 + 3);
      *(_QWORD *)(v79 + 24) = v86;
      *(_QWORD *)(v79 + 32) = *((_QWORD *)v80 + 4);
      v87 = v86;
      swift_retain();
    }
    else
    {
      v90 = v80[1];
      *(_QWORD *)(v79 + 32) = *((_QWORD *)v80 + 4);
      *(_OWORD *)v79 = v85;
      *(_OWORD *)(v79 + 16) = v90;
    }
  }
  v91 = v12[17];
  v92 = v8 + v91;
  v93 = (__int128 *)(v9 + v91);
  v94 = *(void **)(v8 + v91 + 24);
  v95 = *(_QWORD *)(v9 + v91 + 24);
  if (v94)
  {
    if (v95)
    {
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *(_QWORD *)(v92 + 8) = *((_QWORD *)v93 + 1);
      *(_DWORD *)(v92 + 16) = *((_DWORD *)v93 + 4);
      v96 = (void *)*((_QWORD *)v93 + 3);
      *(_QWORD *)(v92 + 24) = v96;
      v97 = v96;

      *(_QWORD *)(v92 + 32) = *((_QWORD *)v93 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v92);
      v101 = *((_QWORD *)v93 + 4);
      v102 = v93[1];
      *(_OWORD *)v92 = *v93;
      *(_OWORD *)(v92 + 16) = v102;
      *(_QWORD *)(v92 + 32) = v101;
    }
  }
  else
  {
    v98 = *v93;
    if (v95)
    {
      *(_DWORD *)(v92 + 16) = *((_DWORD *)v93 + 4);
      *(_OWORD *)v92 = v98;
      v99 = (void *)*((_QWORD *)v93 + 3);
      *(_QWORD *)(v92 + 24) = v99;
      *(_QWORD *)(v92 + 32) = *((_QWORD *)v93 + 4);
      v100 = v99;
      swift_retain();
    }
    else
    {
      v103 = v93[1];
      *(_QWORD *)(v92 + 32) = *((_QWORD *)v93 + 4);
      *(_OWORD *)v92 = v98;
      *(_OWORD *)(v92 + 16) = v103;
    }
  }
  v104 = v12[18];
  v105 = v8 + v104;
  v106 = (__int128 *)(v9 + v104);
  v107 = *(void **)(v8 + v104 + 24);
  v108 = *(_QWORD *)(v9 + v104 + 24);
  if (v107)
  {
    if (v108)
    {
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *(_QWORD *)(v105 + 8) = *((_QWORD *)v106 + 1);
      *(_DWORD *)(v105 + 16) = *((_DWORD *)v106 + 4);
      v109 = (void *)*((_QWORD *)v106 + 3);
      *(_QWORD *)(v105 + 24) = v109;
      v110 = v109;

      *(_QWORD *)(v105 + 32) = *((_QWORD *)v106 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v105);
      v114 = *((_QWORD *)v106 + 4);
      v115 = v106[1];
      *(_OWORD *)v105 = *v106;
      *(_OWORD *)(v105 + 16) = v115;
      *(_QWORD *)(v105 + 32) = v114;
    }
  }
  else
  {
    v111 = *v106;
    if (v108)
    {
      *(_DWORD *)(v105 + 16) = *((_DWORD *)v106 + 4);
      *(_OWORD *)v105 = v111;
      v112 = (void *)*((_QWORD *)v106 + 3);
      *(_QWORD *)(v105 + 24) = v112;
      *(_QWORD *)(v105 + 32) = *((_QWORD *)v106 + 4);
      v113 = v112;
      swift_retain();
    }
    else
    {
      v116 = v106[1];
      *(_QWORD *)(v105 + 32) = *((_QWORD *)v106 + 4);
      *(_OWORD *)v105 = v111;
      *(_OWORD *)(v105 + 16) = v116;
    }
  }
  v117 = (_OWORD *)(v105 + 40);
  v118 = (__int128 *)((char *)v106 + 40);
  v119 = *(void **)(v105 + 64);
  v120 = *((_QWORD *)v106 + 8);
  if (v119)
  {
    if (v120)
    {
      *(_QWORD *)(v105 + 40) = *((_QWORD *)v106 + 5);
      *(_QWORD *)(v105 + 48) = *((_QWORD *)v106 + 6);
      *(_DWORD *)(v105 + 56) = *((_DWORD *)v106 + 14);
      v121 = (void *)*((_QWORD *)v106 + 8);
      *(_QWORD *)(v105 + 64) = v121;
      v122 = v121;

      *(_QWORD *)(v105 + 72) = *((_QWORD *)v106 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v105 + 40);
      v126 = *((_QWORD *)v106 + 9);
      v127 = *(__int128 *)((char *)v106 + 56);
      *v117 = *v118;
      *(_OWORD *)(v105 + 56) = v127;
      *(_QWORD *)(v105 + 72) = v126;
    }
  }
  else
  {
    v123 = *v118;
    if (v120)
    {
      *(_DWORD *)(v105 + 56) = *((_DWORD *)v106 + 14);
      *v117 = v123;
      v124 = (void *)*((_QWORD *)v106 + 8);
      *(_QWORD *)(v105 + 64) = v124;
      *(_QWORD *)(v105 + 72) = *((_QWORD *)v106 + 9);
      v125 = v124;
      swift_retain();
    }
    else
    {
      v128 = *(__int128 *)((char *)v106 + 56);
      *(_QWORD *)(v105 + 72) = *((_QWORD *)v106 + 9);
      *v117 = v123;
      *(_OWORD *)(v105 + 56) = v128;
    }
  }
  *(_BYTE *)(v105 + 80) = *((_BYTE *)v106 + 80);
  *(_QWORD *)(v8 + v12[19]) = *(_QWORD *)(v9 + v12[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v129 = v12[20];
  v130 = v8 + v129;
  v131 = (__int128 *)(v9 + v129);
  v132 = *(void **)(v8 + v129 + 24);
  v133 = *(_QWORD *)(v9 + v129 + 24);
  if (v132)
  {
    if (v133)
    {
      *(_QWORD *)v130 = *(_QWORD *)v131;
      *(_QWORD *)(v130 + 8) = *((_QWORD *)v131 + 1);
      *(_DWORD *)(v130 + 16) = *((_DWORD *)v131 + 4);
      v134 = (void *)*((_QWORD *)v131 + 3);
      *(_QWORD *)(v130 + 24) = v134;
      v135 = v134;

      *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
      swift_retain();
      swift_release();
      *(_QWORD *)(v130 + 40) = *((_QWORD *)v131 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v130 + 48) = *((_QWORD *)v131 + 6);
      *(_QWORD *)(v130 + 56) = *((_QWORD *)v131 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02590(v130);
      v139 = v131[3];
      v141 = *v131;
      v140 = v131[1];
      *(_OWORD *)(v130 + 32) = v131[2];
      *(_OWORD *)(v130 + 48) = v139;
      *(_OWORD *)v130 = v141;
      *(_OWORD *)(v130 + 16) = v140;
    }
  }
  else
  {
    v136 = *v131;
    if (v133)
    {
      *(_DWORD *)(v130 + 16) = *((_DWORD *)v131 + 4);
      *(_OWORD *)v130 = v136;
      v137 = (void *)*((_QWORD *)v131 + 3);
      *(_QWORD *)(v130 + 24) = v137;
      *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
      *(_QWORD *)(v130 + 40) = *((_QWORD *)v131 + 5);
      *(_QWORD *)(v130 + 48) = *((_QWORD *)v131 + 6);
      *(_QWORD *)(v130 + 56) = *((_QWORD *)v131 + 7);
      v138 = v137;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v142 = v131[1];
      v143 = v131[3];
      *(_OWORD *)(v130 + 32) = v131[2];
      *(_OWORD *)(v130 + 48) = v143;
      *(_OWORD *)v130 = v136;
      *(_OWORD *)(v130 + 16) = v142;
    }
  }
  v144 = v12[21];
  v145 = (_QWORD *)(v8 + v144);
  v146 = v9 + v144;
  *v145 = *(_QWORD *)(v9 + v144);
  v145[1] = *(_QWORD *)(v9 + v144 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v145[2] = *(_QWORD *)(v146 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[22]) = *(_QWORD *)(v9 + v12[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + v12[23]) = *(_BYTE *)(v9 + v12[23]);
  *(_QWORD *)(v155 + *(int *)(v40 + 24)) = *(_QWORD *)(v154 + *(int *)(v40 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v155;
}

uint64_t sub_249E6D07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _OWORD *v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 55) = *(_QWORD *)(a2 + v7 + 55);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(a2 + v7 + 80);
  v10 = *(_QWORD *)(a2 + v7 + 72);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a2 + v7 + 64);
  *(_QWORD *)(v8 + 72) = v10;
  v11 = (int *)type metadata accessor for GenerationRecipe(0);
  v12 = v11[8];
  v13 = (char *)(v8 + v12);
  v14 = (char *)(v9 + v12);
  v15 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v16 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v63 = a3;
    v64 = a2;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
    v19(v13, v14, v18);
    v20 = v18;
    a3 = v63;
    v19(&v13[v15[5]], &v14[v15[5]], v20);
    a2 = v64;
    v21 = v15[6];
    v22 = &v13[v21];
    v23 = &v14[v21];
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    v13[v15[7]] = v14[v15[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  v24 = v11[9];
  v25 = v8 + v24;
  v26 = v9 + v24;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = v11[10];
  v28 = v8 + v27;
  v29 = v9 + v27;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  *(_DWORD *)v28 = *(_DWORD *)v29;
  v30 = v11[11];
  v31 = v8 + v30;
  v32 = v9 + v30;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  *(_QWORD *)(v8 + v11[13]) = *(_QWORD *)(v9 + v11[13]);
  v33 = v11[14];
  v34 = v8 + v33;
  v35 = v9 + v33;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  v37 = v11[15];
  v38 = v8 + v37;
  v39 = v9 + v37;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  v41 = v11[16];
  v42 = v8 + v41;
  v43 = v9 + v41;
  v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  v45 = v11[17];
  v46 = v8 + v45;
  v47 = v9 + v45;
  v48 = *(_OWORD *)(v47 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v48;
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  v49 = v11[18];
  v50 = v8 + v49;
  v51 = v9 + v49;
  v52 = *(_OWORD *)(v51 + 48);
  *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
  *(_OWORD *)(v50 + 48) = v52;
  *(_OWORD *)(v50 + 64) = *(_OWORD *)(v51 + 64);
  *(_BYTE *)(v50 + 80) = *(_BYTE *)(v51 + 80);
  v53 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v53;
  *(_QWORD *)(v8 + v11[19]) = *(_QWORD *)(v9 + v11[19]);
  v54 = v11[20];
  v55 = (_OWORD *)(v8 + v54);
  v56 = (_OWORD *)(v9 + v54);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = v56[3];
  v55[2] = v56[2];
  v55[3] = v58;
  v59 = v11[21];
  v60 = v8 + v59;
  v61 = v9 + v59;
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *(_QWORD *)(v60 + 16) = *(_QWORD *)(v61 + 16);
  *(_QWORD *)(v8 + v11[22]) = *(_QWORD *)(v9 + v11[22]);
  *(_BYTE *)(v8 + v11[23]) = *(_BYTE *)(v9 + v11[23]);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249E6D38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  __int128 v67;
  void *v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  void (*v85)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v91 = a2;
  v92 = a3;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_BYTE *)(v8 + 58) = *(_BYTE *)(v9 + 58);
  *(_BYTE *)(v8 + 59) = *(_BYTE *)(v9 + 59);
  *(_BYTE *)(v8 + 60) = *(_BYTE *)(v9 + 60);
  *(_BYTE *)(v8 + 61) = *(_BYTE *)(v9 + 61);
  *(_BYTE *)(v8 + 62) = *(_BYTE *)(v9 + 62);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  v11 = (int *)type metadata accessor for GenerationRecipe(0);
  v12 = v11[8];
  v13 = (_BYTE *)(v8 + v12);
  v14 = (_BYTE *)(v9 + v12);
  v15 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v21(v13, v14, v20);
      v21(&v13[v15[5]], &v14[v15[5]], v20);
      v22 = v15[6];
      v23 = &v13[v22];
      v24 = &v14[v22];
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
      v13[v15[7]] = v14[v15[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
      v26 = v91;
      goto LABEL_8;
    }
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  if (v19)
  {
    sub_249DC05A8((uint64_t)v13, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_6;
  }
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v85 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v84 - 8) + 40);
  v85(v13, v14, v84);
  v85(&v13[v15[5]], &v14[v15[5]], v84);
  v86 = v15[6];
  v87 = (uint64_t)&v13[v86];
  v88 = &v14[v86];
  if (!*(_QWORD *)&v13[v86 + 16])
    goto LABEL_48;
  if (!*((_QWORD *)v88 + 2))
  {
    sub_249E02528(v87);
LABEL_48:
    *(_OWORD *)v87 = *(_OWORD *)v88;
    *(_QWORD *)(v87 + 16) = *((_QWORD *)v88 + 2);
    goto LABEL_49;
  }
  v89 = *(_QWORD *)v87;
  v90 = *(_QWORD *)(v87 + 8);
  *(_OWORD *)v87 = *(_OWORD *)v88;
  sub_249DC3C24(v89, v90);
  *(_QWORD *)(v87 + 16) = *((_QWORD *)v88 + 2);
  swift_bridgeObjectRelease();
LABEL_49:
  v26 = v91;
  v13[v15[7]] = v14[v15[7]];
LABEL_8:
  v27 = v11[9];
  v28 = v8 + v27;
  v29 = v9 + v27;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = v11[10];
  v31 = v8 + v30;
  v32 = v9 + v30;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v33 = v11[11];
  v34 = v8 + v33;
  v35 = v9 + v33;
  *(_WORD *)v34 = *(_WORD *)v35;
  *(_BYTE *)(v34 + 2) = *(_BYTE *)(v35 + 2);
  v37 = *(_QWORD *)(v35 + 8);
  v36 = *(_QWORD *)(v35 + 16);
  *(_QWORD *)(v34 + 8) = v37;
  *(_QWORD *)(v34 + 16) = v36;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v11[13]) = *(_QWORD *)(v9 + v11[13]);
  swift_bridgeObjectRelease();
  v38 = v11[14];
  v39 = v8 + v38;
  v40 = v9 + v38;
  v41 = *(void **)(v8 + v38 + 24);
  if (v41)
  {
    v42 = *(_QWORD *)(v40 + 24);
    if (v42)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *(_DWORD *)(v39 + 16) = *(_DWORD *)(v40 + 16);
      *(_QWORD *)(v39 + 24) = v42;

      *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
      swift_release();
      goto LABEL_13;
    }
    sub_249E0255C(v39);
  }
  v43 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v43;
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
LABEL_13:
  v44 = v11[15];
  v45 = v8 + v44;
  v46 = v9 + v44;
  v47 = *(void **)(v8 + v44 + 24);
  if (v47)
  {
    v48 = *(_QWORD *)(v46 + 24);
    if (v48)
    {
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *(_DWORD *)(v45 + 16) = *(_DWORD *)(v46 + 16);
      *(_QWORD *)(v45 + 24) = v48;

      *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
      swift_release();
      goto LABEL_18;
    }
    sub_249E0255C(v45);
  }
  v49 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v49;
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
LABEL_18:
  v50 = v11[16];
  v51 = v8 + v50;
  v52 = v9 + v50;
  v53 = *(void **)(v8 + v50 + 24);
  if (v53)
  {
    v54 = *(_QWORD *)(v52 + 24);
    if (v54)
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *(_DWORD *)(v51 + 16) = *(_DWORD *)(v52 + 16);
      *(_QWORD *)(v51 + 24) = v54;

      *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
      swift_release();
      goto LABEL_23;
    }
    sub_249E0255C(v51);
  }
  v55 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v55;
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
LABEL_23:
  v56 = v11[17];
  v57 = v8 + v56;
  v58 = v9 + v56;
  v59 = *(void **)(v8 + v56 + 24);
  if (v59)
  {
    v60 = *(_QWORD *)(v58 + 24);
    if (v60)
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      *(_DWORD *)(v57 + 16) = *(_DWORD *)(v58 + 16);
      *(_QWORD *)(v57 + 24) = v60;

      *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
      swift_release();
      goto LABEL_28;
    }
    sub_249E0255C(v57);
  }
  v61 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v61;
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
LABEL_28:
  v62 = v11[18];
  v63 = v8 + v62;
  v64 = v9 + v62;
  v65 = *(void **)(v8 + v62 + 24);
  if (v65)
  {
    v66 = *(_QWORD *)(v64 + 24);
    if (v66)
    {
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *(_DWORD *)(v63 + 16) = *(_DWORD *)(v64 + 16);
      *(_QWORD *)(v63 + 24) = v66;

      *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
      swift_release();
      goto LABEL_33;
    }
    sub_249E0255C(v63);
  }
  v67 = *(_OWORD *)(v64 + 16);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *(_OWORD *)(v63 + 16) = v67;
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
LABEL_33:
  v68 = *(void **)(v63 + 64);
  if (v68)
  {
    v69 = *(_QWORD *)(v64 + 64);
    if (v69)
    {
      *(_OWORD *)(v63 + 40) = *(_OWORD *)(v64 + 40);
      *(_DWORD *)(v63 + 56) = *(_DWORD *)(v64 + 56);
      *(_QWORD *)(v63 + 64) = v69;

      *(_QWORD *)(v63 + 72) = *(_QWORD *)(v64 + 72);
      swift_release();
      goto LABEL_38;
    }
    sub_249E0255C(v63 + 40);
  }
  v70 = *(_OWORD *)(v64 + 56);
  *(_OWORD *)(v63 + 40) = *(_OWORD *)(v64 + 40);
  *(_OWORD *)(v63 + 56) = v70;
  *(_QWORD *)(v63 + 72) = *(_QWORD *)(v64 + 72);
LABEL_38:
  *(_BYTE *)(v63 + 80) = *(_BYTE *)(v64 + 80);
  *(_QWORD *)(v8 + v11[19]) = *(_QWORD *)(v9 + v11[19]);
  swift_bridgeObjectRelease();
  v71 = v11[20];
  v72 = v8 + v71;
  v73 = v9 + v71;
  v74 = *(void **)(v8 + v71 + 24);
  if (!v74)
  {
LABEL_42:
    v77 = *(_OWORD *)(v73 + 16);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v77;
    v78 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v78;
    goto LABEL_43;
  }
  v75 = *(_QWORD *)(v73 + 24);
  if (!v75)
  {
    sub_249E02590(v72);
    goto LABEL_42;
  }
  *(_OWORD *)v72 = *(_OWORD *)v73;
  *(_DWORD *)(v72 + 16) = *(_DWORD *)(v73 + 16);
  *(_QWORD *)(v72 + 24) = v75;

  *(_QWORD *)(v72 + 32) = *(_QWORD *)(v73 + 32);
  swift_release();
  *(_QWORD *)(v72 + 40) = *(_QWORD *)(v73 + 40);
  swift_bridgeObjectRelease();
  v76 = *(_QWORD *)(v73 + 56);
  *(_QWORD *)(v72 + 48) = *(_QWORD *)(v73 + 48);
  *(_QWORD *)(v72 + 56) = v76;
  swift_bridgeObjectRelease();
LABEL_43:
  v79 = v11[21];
  v80 = (_QWORD *)(v8 + v79);
  v81 = v9 + v79;
  v82 = *(_QWORD *)(v9 + v79 + 8);
  *v80 = *(_QWORD *)(v9 + v79);
  v80[1] = v82;
  swift_bridgeObjectRelease();
  v80[2] = *(_QWORD *)(v81 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v11[22]) = *(_QWORD *)(v9 + v11[22]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + v11[23]) = *(_BYTE *)(v9 + v11[23]);
  *(_QWORD *)(a1 + *(int *)(v92 + 24)) = *(_QWORD *)(v26 + *(int *)(v92 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249E6DA14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E6DA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for GenerationRecipe(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_249E6DAC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E6DAD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for GenerationRecipe(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_249E6DB78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GenerationRecipe(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ModelManagerInferenceProvider.Error.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_249E6DC54 + 4 * byte_249F2B5A4[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_249E6DC88 + 4 * byte_249F2B59F[v4]))();
}

uint64_t sub_249E6DC88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E6DC90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E6DC98);
  return result;
}

uint64_t sub_249E6DCA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E6DCACLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_249E6DCB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E6DCB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.CodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.UnknownInferenceAssetCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.UnknownInferenceAssetCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.UnavailableInferenceAssetCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.UnavailableInferenceAssetCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.UnknownRequestCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.UnknownRequestCodingKeys;
}

uint64_t _s16VisualGeneration29ModelManagerInferenceProviderC5ErrorO31UnknownInferenceAssetCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E6DD48 + 4 * byte_249F2B5A9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E6DD68 + 4 * byte_249F2B5AE[v4]))();
}

_BYTE *sub_249E6DD48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E6DD68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E6DD70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E6DD78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E6DD80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E6DD88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.InvalidImageGeneratorTypeCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.InvalidImageGeneratorTypeCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.InvalidIPCFormatCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.InvalidIPCFormatCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.OwnIdentityTokenUnavailableCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.OwnIdentityTokenUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.ClientIdentityTokenUnavailableCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.ClientIdentityTokenUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.FailedToAssignSurfaceOwnershipCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.FailedToAssignSurfaceOwnershipCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.TaskIDTokenCanOnlyBeSerializedViaXPCCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.TaskIDTokenCanOnlyBeSerializedViaXPCCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Error.MissingStyleCodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Error.MissingStyleCodingKeys;
}

unint64_t sub_249E6DE08()
{
  unint64_t result;

  result = qword_2578DBF78;
  if (!qword_2578DBF78)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BCB8, &type metadata for ModelManagerInferenceProvider.Error.InvalidImageGeneratorTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBF78);
  }
  return result;
}

unint64_t sub_249E6DE50()
{
  unint64_t result;

  result = qword_2578DBF80;
  if (!qword_2578DBF80)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BD70, &type metadata for ModelManagerInferenceProvider.Error.UnknownRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBF80);
  }
  return result;
}

unint64_t sub_249E6DE98()
{
  unint64_t result;

  result = qword_2578DBF88;
  if (!qword_2578DBF88)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BE28, &type metadata for ModelManagerInferenceProvider.Error.UnavailableInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBF88);
  }
  return result;
}

unint64_t sub_249E6DEE0()
{
  unint64_t result;

  result = qword_2578DBF90;
  if (!qword_2578DBF90)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BEE0, &type metadata for ModelManagerInferenceProvider.Error.UnknownInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBF90);
  }
  return result;
}

unint64_t sub_249E6DF28()
{
  unint64_t result;

  result = qword_2578DBF98;
  if (!qword_2578DBF98)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BF98, &type metadata for ModelManagerInferenceProvider.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBF98);
  }
  return result;
}

unint64_t sub_249E6DF70()
{
  unint64_t result;

  result = qword_2578DBFA0;
  if (!qword_2578DBFA0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BE50, &type metadata for ModelManagerInferenceProvider.Error.UnknownInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFA0);
  }
  return result;
}

unint64_t sub_249E6DFB8()
{
  unint64_t result;

  result = qword_2578DBFA8;
  if (!qword_2578DBFA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BE78, &type metadata for ModelManagerInferenceProvider.Error.UnknownInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFA8);
  }
  return result;
}

unint64_t sub_249E6E000()
{
  unint64_t result;

  result = qword_2578DBFB0;
  if (!qword_2578DBFB0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BD98, &type metadata for ModelManagerInferenceProvider.Error.UnavailableInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFB0);
  }
  return result;
}

unint64_t sub_249E6E048()
{
  unint64_t result;

  result = qword_2578DBFB8;
  if (!qword_2578DBFB8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BDC0, &type metadata for ModelManagerInferenceProvider.Error.UnavailableInferenceAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFB8);
  }
  return result;
}

unint64_t sub_249E6E090()
{
  unint64_t result;

  result = qword_2578DBFC0;
  if (!qword_2578DBFC0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BCE0, &type metadata for ModelManagerInferenceProvider.Error.UnknownRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFC0);
  }
  return result;
}

unint64_t sub_249E6E0D8()
{
  unint64_t result;

  result = qword_2578DBFC8;
  if (!qword_2578DBFC8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BD08, &type metadata for ModelManagerInferenceProvider.Error.UnknownRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFC8);
  }
  return result;
}

unint64_t sub_249E6E120()
{
  unint64_t result;

  result = qword_2578DBFD0;
  if (!qword_2578DBFD0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BC28, &type metadata for ModelManagerInferenceProvider.Error.InvalidImageGeneratorTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFD0);
  }
  return result;
}

unint64_t sub_249E6E168()
{
  unint64_t result;

  result = qword_2578DBFD8;
  if (!qword_2578DBFD8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BC50, &type metadata for ModelManagerInferenceProvider.Error.InvalidImageGeneratorTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFD8);
  }
  return result;
}

unint64_t sub_249E6E1B0()
{
  unint64_t result;

  result = qword_2578DBFE0;
  if (!qword_2578DBFE0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BBD8, &type metadata for ModelManagerInferenceProvider.Error.InvalidIPCFormatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFE0);
  }
  return result;
}

unint64_t sub_249E6E1F8()
{
  unint64_t result;

  result = qword_2578DBFE8;
  if (!qword_2578DBFE8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BC00, &type metadata for ModelManagerInferenceProvider.Error.InvalidIPCFormatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFE8);
  }
  return result;
}

unint64_t sub_249E6E240()
{
  unint64_t result;

  result = qword_2578DBFF0;
  if (!qword_2578DBFF0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BB88, &type metadata for ModelManagerInferenceProvider.Error.OwnIdentityTokenUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFF0);
  }
  return result;
}

unint64_t sub_249E6E288()
{
  unint64_t result;

  result = qword_2578DBFF8;
  if (!qword_2578DBFF8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BBB0, &type metadata for ModelManagerInferenceProvider.Error.OwnIdentityTokenUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DBFF8);
  }
  return result;
}

unint64_t sub_249E6E2D0()
{
  unint64_t result;

  result = qword_2578DC000;
  if (!qword_2578DC000)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BB38, &type metadata for ModelManagerInferenceProvider.Error.ClientIdentityTokenUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC000);
  }
  return result;
}

unint64_t sub_249E6E318()
{
  unint64_t result;

  result = qword_2578DC008;
  if (!qword_2578DC008)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BB60, &type metadata for ModelManagerInferenceProvider.Error.ClientIdentityTokenUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC008);
  }
  return result;
}

unint64_t sub_249E6E360()
{
  unint64_t result;

  result = qword_2578DC010;
  if (!qword_2578DC010)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BAE8, &type metadata for ModelManagerInferenceProvider.Error.FailedToAssignSurfaceOwnershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC010);
  }
  return result;
}

unint64_t sub_249E6E3A8()
{
  unint64_t result;

  result = qword_2578DC018;
  if (!qword_2578DC018)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BB10, &type metadata for ModelManagerInferenceProvider.Error.FailedToAssignSurfaceOwnershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC018);
  }
  return result;
}

unint64_t sub_249E6E3F0()
{
  unint64_t result;

  result = qword_2578DC020;
  if (!qword_2578DC020)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BA98, &type metadata for ModelManagerInferenceProvider.Error.TaskIDTokenCanOnlyBeSerializedViaXPCCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC020);
  }
  return result;
}

unint64_t sub_249E6E438()
{
  unint64_t result;

  result = qword_2578DC028;
  if (!qword_2578DC028)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BAC0, &type metadata for ModelManagerInferenceProvider.Error.TaskIDTokenCanOnlyBeSerializedViaXPCCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC028);
  }
  return result;
}

unint64_t sub_249E6E480()
{
  unint64_t result;

  result = qword_2578DC030;
  if (!qword_2578DC030)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BA48, &type metadata for ModelManagerInferenceProvider.Error.MissingStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC030);
  }
  return result;
}

unint64_t sub_249E6E4C8()
{
  unint64_t result;

  result = qword_2578DC038;
  if (!qword_2578DC038)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BA70, &type metadata for ModelManagerInferenceProvider.Error.MissingStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC038);
  }
  return result;
}

unint64_t sub_249E6E510()
{
  unint64_t result;

  result = qword_2578DC040;
  if (!qword_2578DC040)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BF08, &type metadata for ModelManagerInferenceProvider.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC040);
  }
  return result;
}

unint64_t sub_249E6E558()
{
  unint64_t result;

  result = qword_2578DC048;
  if (!qword_2578DC048)
  {
    result = MEMORY[0x24BD06528](&unk_249F2BF30, &type metadata for ModelManagerInferenceProvider.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC048);
  }
  return result;
}

unint64_t sub_249E6E59C()
{
  unint64_t result;

  result = qword_2578DC070;
  if (!qword_2578DC070)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C578, &type metadata for ModelManagerInferenceProvider.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC070);
  }
  return result;
}

unint64_t sub_249E6E5E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2578DC088;
  if (!qword_2578DC088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DC080);
    v2[0] = MEMORY[0x24BEE0D38];
    v2[1] = sub_249E6E6E0(&qword_2578DC090, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2578DC088);
  }
  return result;
}

unint64_t sub_249E6E660()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2578DC0B0;
  if (!qword_2578DC0B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DC080);
    v2[0] = MEMORY[0x24BEE0D08];
    v2[1] = sub_249E6E6E0(&qword_2578DC0B8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2578DC0B0);
  }
  return result;
}

uint64_t sub_249E6E6E0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DC098);
    v8 = a2;
    result = MEMORY[0x24BD06528](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E6E740()
{
  unint64_t result;

  result = qword_2578DC0F0;
  if (!qword_2578DC0F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C550, &type metadata for ModelManagerInferenceProvider.Output);
    atomic_store(result, (unint64_t *)&qword_2578DC0F0);
  }
  return result;
}

uint64_t sub_249E6E784(void *a1)
{
  uint64_t v1;

  return sub_249DE0584(a1, *(xpc_object_t *)(v1 + 16));
}

unint64_t sub_249E6E79C()
{
  unint64_t result;

  result = qword_2578DC100;
  if (!qword_2578DC100)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C528, &type metadata for ModelManagerInferenceProvider.Output);
    atomic_store(result, (unint64_t *)&qword_2578DC100);
  }
  return result;
}

uint64_t sub_249E6E7E0(uint64_t a1)
{
  uint64_t v1;

  return sub_249E660CC(a1, *(_QWORD *)(v1 + 16), &qword_2578DC118, &qword_2578DC060);
}

uint64_t sub_249E6E808(uint64_t a1)
{
  uint64_t v1;

  return sub_249E660CC(a1, *(_QWORD *)(v1 + 16), &qword_2578DC138, &qword_2578DC0D8);
}

uint64_t destroy for ModelManagerInferenceProvider.Output()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModelManagerInferenceProvider.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModelManagerInferenceProvider.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ModelManagerInferenceProvider.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelManagerInferenceProvider.Output(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelManagerInferenceProvider.Output(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Output()
{
  return &type metadata for ModelManagerInferenceProvider.Output;
}

uint64_t storeEnumTagSinglePayload for ModelManagerInferenceProvider.Input.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E6EA80 + 4 * byte_249F2B5B8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E6EAB4 + 4 * byte_249F2B5B3[v4]))();
}

uint64_t sub_249E6EAB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E6EABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E6EAC4);
  return result;
}

uint64_t sub_249E6EAD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E6EAD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E6EADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E6EAE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Input.CodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Input.CodingKeys;
}

unint64_t sub_249E6EB04()
{
  unint64_t result;

  result = qword_2578DC140;
  if (!qword_2578DC140)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C500, &type metadata for ModelManagerInferenceProvider.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC140);
  }
  return result;
}

unint64_t sub_249E6EB4C()
{
  unint64_t result;

  result = qword_2578DC148;
  if (!qword_2578DC148)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C470, &type metadata for ModelManagerInferenceProvider.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC148);
  }
  return result;
}

unint64_t sub_249E6EB94()
{
  unint64_t result;

  result = qword_2578DC150;
  if (!qword_2578DC150)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C498, &type metadata for ModelManagerInferenceProvider.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC150);
  }
  return result;
}

unint64_t sub_249E6EBD8()
{
  unint64_t result;

  result = qword_2578DC160;
  if (!qword_2578DC160)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C680, &type metadata for ModelManagerInferenceProvider.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC160);
  }
  return result;
}

unint64_t sub_249E6EC1C()
{
  unint64_t result;

  result = qword_2578DC188;
  if (!qword_2578DC188)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ForensicsReport, &type metadata for ForensicsReport);
    atomic_store(result, (unint64_t *)&qword_2578DC188);
  }
  return result;
}

uint64_t sub_249E6EC60(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D64B8);
    v10 = sub_249D9BBEC(a2, (uint64_t (*)(uint64_t))type metadata accessor for GeneratedImage, a3);
    result = MEMORY[0x24BD06528](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E6ECE4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DC178);
    v8 = a2();
    result = MEMORY[0x24BD06528](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E6ED4C()
{
  unint64_t result;

  result = qword_2578DC1B0;
  if (!qword_2578DC1B0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ForensicsReport, &type metadata for ForensicsReport);
    atomic_store(result, (unint64_t *)&qword_2578DC1B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ModelManagerInferenceProvider.Output.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_249E6EDDC + 4 * byte_249F2B5C2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249E6EE10 + 4 * byte_249F2B5BD[v4]))();
}

uint64_t sub_249E6EE10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E6EE18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E6EE20);
  return result;
}

uint64_t sub_249E6EE2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E6EE34);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_249E6EE38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E6EE40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerInferenceProvider.Output.CodingKeys()
{
  return &type metadata for ModelManagerInferenceProvider.Output.CodingKeys;
}

unint64_t sub_249E6EE60()
{
  unint64_t result;

  result = qword_2578DC1B8;
  if (!qword_2578DC1B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C658, &type metadata for ModelManagerInferenceProvider.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC1B8);
  }
  return result;
}

unint64_t sub_249E6EEA8()
{
  unint64_t result;

  result = qword_2578DC1C0;
  if (!qword_2578DC1C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C5C8, &type metadata for ModelManagerInferenceProvider.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC1C0);
  }
  return result;
}

unint64_t sub_249E6EEF0()
{
  unint64_t result;

  result = qword_2578DC1C8;
  if (!qword_2578DC1C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C5F0, &type metadata for ModelManagerInferenceProvider.Output.CodingKeys);
    atomic_store(result, &qword_2578DC1C8);
  }
  return result;
}

uint64_t sub_249E6EF38(void *a1)
{
  return sub_249E6E784(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for TextSanitizer(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for TextSanitizer(uint64_t a1)
{

}

uint64_t assignWithCopy for TextSanitizer(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for TextSanitizer(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for TextSanitizer()
{
  return &type metadata for TextSanitizer;
}

uint64_t sub_249E6F00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[20] = a5;
  v7[21] = a7;
  v7[18] = a3;
  v7[19] = a4;
  v7[16] = a1;
  v7[17] = a2;
  return swift_task_switch();
}

uint64_t sub_249E6F02C()
{
  _QWORD *v0;
  void *v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (void *)v0[21];
  v2 = v0[18];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE853A0]), sel_init);
  v0[22] = v3;
  v4 = (void *)sub_249F1F304();
  objc_msgSend(v3, sel_setText_, v4);

  objc_msgSend(v3, sel_setKeepGoing_, (v2 >> 1) & 1);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_249E6F140;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_249E4E2FC;
  v6[3] = &block_descriptor_8;
  v6[4] = v5;
  objc_msgSend(v1, sel_sanitizeRequestAsynchronously_completionHandler_, v3, v6);
  return swift_continuation_await();
}

uint64_t sub_249E6F140()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_249E6F1A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(id *)(v0 + 120);
  v4 = sub_249E456E0(v2, v1);
  v6 = v5;
  v7 = *(_QWORD *)(v0 + 152);

  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRetain();
    sub_249DC09B8(v8);
    v9 = objc_msgSend(v3, sel_signals);
    if (v9)
    {
      v10 = v9;
      v24 = 0;
      sub_249D9D9F4(0, &qword_2578DC1E8);
      sub_249F1F1FC();

    }
    sub_249DC0A2C(*(_QWORD *)(v0 + 152));
    if ((*(_BYTE *)(v0 + 144) & 1) == 0)
      goto LABEL_5;
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((*(_BYTE *)(v0 + 144) & 1) == 0)
    {
LABEL_5:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
    }
  }
  v11 = objc_msgSend(v3, sel_safe);
  swift_bridgeObjectRelease();

  if ((v11 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (v4)
    {

      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_2578D5D78 != -1)
    swift_once();
  v13 = sub_249F1EF38();
  __swift_project_value_buffer(v13, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v14 = sub_249F1EF20();
  v15 = sub_249F1F814();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(_QWORD *)(v0 + 136);
  if (v16)
  {
    v23 = *(_QWORD *)(v0 + 128);
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v18 = 136380675;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_249E68CA8(v23, v17, &v24);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v14, v15, "Text rejected: %{private}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v19, -1, -1);
    MEMORY[0x24BD06618](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v21 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 136);
  sub_249E6FA70();
  swift_allocError();
  *(_QWORD *)v22 = v21;
  *(_QWORD *)(v22 + 8) = v20;
  *(_BYTE *)(v22 + 16) = 2;
  swift_bridgeObjectRetain();
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E6F644()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = *(void **)(v0 + 176);
  swift_willThrow();

  v2 = *(void **)(v0 + 184);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  sub_249D9D9F4(0, &qword_2578DC1D8);
  v4 = swift_dynamicCast();
  v5 = *(_QWORD *)(v0 + 184);
  if (v4)
  {

    v6 = *(_QWORD *)(v0 + 120);
    sub_249E6FA70();
    swift_allocError();
    *(_QWORD *)v7 = v6;
    *(_QWORD *)(v7 + 8) = 0;
    *(_BYTE *)(v7 + 16) = 1;
    swift_willThrow();
  }

  if (!v5)
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E6F738(void *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;

  v6 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v8);
  if (a3)
  {
    if (a3 == 1)
    {
      v9 = a1;
      sub_249F1F2D4();
      sub_249F1F2C8();
      v10 = objc_msgSend(v9, sel_localizedDescription);
      sub_249F1F328();

      sub_249F1F2BC();
      swift_bridgeObjectRelease();
      sub_249F1F2C8();
      sub_249F1F2EC();
      sub_249F1E920();
      v11 = sub_249F1F388();
      sub_249E70164(a1, a2, 1u);
    }
    else
    {
      sub_249F1F2D4();
      sub_249F1F2C8();
      sub_249F1F2BC();
      sub_249F1F2C8();
      sub_249F1F2EC();
      sub_249F1E920();
      return sub_249F1F388();
    }
  }
  else
  {
    v12 = a1;
    sub_249F1F2D4();
    sub_249F1F2C8();
    swift_getErrorValue();
    sub_249F1FF1C();
    sub_249F1F2BC();
    swift_bridgeObjectRelease();
    sub_249F1F2C8();
    sub_249F1F2EC();
    sub_249F1E920();
    v11 = sub_249F1F388();
    sub_249E70164(a1, a2, 0);
  }
  return v11;
}

uint64_t sub_249E6FA64()
{
  uint64_t v0;

  return sub_249E6F738(*(void **)v0, *(void **)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_249E6FA70()
{
  unint64_t result;

  result = qword_2578DC1E0;
  if (!qword_2578DC1E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C7C4, &type metadata for TextSanitizer.Error);
    atomic_store(result, (unint64_t *)&qword_2578DC1E0);
  }
  return result;
}

unint64_t sub_249E6FAB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  void *v24;
  id v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CE0);
    v2 = (_QWORD *)sub_249F1FC1C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v33 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  v6 = &v38;
  v7 = &v40;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v9 = (unint64_t *)&unk_2578DC1E8;
  v10 = 0x24BE85388uLL;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v34 + 1;
  if (__OFADD__(v34, 1))
    goto LABEL_35;
  if (v19 >= v32)
    goto LABEL_32;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v34 + 1;
  if (!v20)
  {
    v21 = v34 + 2;
    if (v34 + 2 >= v32)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    if (!v20)
    {
      v21 = v34 + 3;
      if (v34 + 3 >= v32)
        goto LABEL_32;
      v20 = *(_QWORD *)(v33 + 8 * v21);
      if (!v20)
      {
        v21 = v34 + 4;
        if (v34 + 4 >= v32)
          goto LABEL_32;
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            v20 = *(_QWORD *)(v33 + 8 * v22);
            if (v20)
            {
              v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v32)
                break;
              v20 = *(_QWORD *)(v33 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_249D9E18C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = v21;
  v35 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v36 = *v23;
    v37 = v23[1];
    sub_249D9D9F4(0, v9);
    swift_bridgeObjectRetain();
    v25 = v24;
    swift_dynamicCast();
    sub_249DCA678(v6, v7);
    sub_249DCA678(v7, v41);
    sub_249DCA678(v41, &v39);
    result = sub_249DB7D8C(v36, v37);
    v26 = result;
    if ((v27 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = v10;
      v15 = v9;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v36;
      v16[1] = v37;
      v9 = v15;
      v10 = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_249DCA678(&v39, v17);
      v5 = v35;
      if (!v35)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v28 = (uint64_t *)(v2[6] + 16 * result);
    *v28 = v36;
    v28[1] = v37;
    result = (unint64_t)sub_249DCA678(&v39, (_OWORD *)(v2[7] + 32 * result));
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    v5 = v35;
    if (!v35)
      goto LABEL_11;
LABEL_10:
    v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_249E6FE30(char a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_allocWithZone(MEMORY[0x24BE85398]);
  v3 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithModelManagerServicesUseCaseID_, v3);

  if ((a1 & 1) != 0)
    objc_msgSend(v4, sel_setGranularity_, 1);
  v5 = objc_allocWithZone(MEMORY[0x24BE85390]);
  v21[0] = 0;
  v6 = v4;
  if (objc_msgSend(v5, sel_initWithConfiguration_error_, v6, v21))
  {
    v7 = a1 & 1;
    v8 = v21[0];

  }
  else
  {
    v9 = v21[0];
    v7 = sub_249F1E710();

    swift_willThrow();
    if (qword_2578D5D78 != -1)
      swift_once();
    v10 = sub_249F1EF38();
    __swift_project_value_buffer(v10, (uint64_t)qword_2578FF3F0);
    v11 = (id)v7;
    v12 = (id)v7;
    v13 = sub_249F1EF20();
    v14 = sub_249F1F820();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v17 = (id)v7;
      v18 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v21[0] = v18;
      sub_249F1F9AC();
      *v16 = v18;

      _os_log_impl(&dword_249D98000, v13, v14, "Unexpected error initializing text sanitizer: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v16, -1, -1);
      MEMORY[0x24BD06618](v15, -1, -1);
    }
    else
    {

    }
    sub_249E6FA70();
    swift_allocError();
    *(_QWORD *)v19 = v7;
    *(_QWORD *)(v19 + 8) = 0;
    *(_BYTE *)(v19 + 16) = 0;
    swift_willThrow();

  }
  return v7;
}

id sub_249E70128(id result, id a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a3 <= 1u)
    return result;
  return result;
}

void destroy for TextSanitizer.Error(uint64_t a1)
{
  sub_249E70164(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_249E70164(void *a1, id a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 <= 1u)
  {

  }
}

uint64_t _s16VisualGeneration13TextSanitizerV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E70128(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TextSanitizer.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E70128(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_249E70164(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TextSanitizer.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_249E70164(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TextSanitizer.Error()
{
  return &type metadata for TextSanitizer.Error;
}

uint64_t storeEnumTagSinglePayload for TextSanitizer.Granularity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E702CC + 4 * byte_249F2C6E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E70300 + 4 * byte_249F2C6E0[v4]))();
}

uint64_t sub_249E70300(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E70308(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E70310);
  return result;
}

uint64_t sub_249E7031C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E70324);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E70328(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E70330(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextSanitizer.Granularity()
{
  return &type metadata for TextSanitizer.Granularity;
}

unint64_t sub_249E70350()
{
  unint64_t result;

  result = qword_2578DC1F0;
  if (!qword_2578DC1F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C754, &type metadata for TextSanitizer.Granularity);
    atomic_store(result, (unint64_t *)&qword_2578DC1F0);
  }
  return result;
}

uint64_t sub_249E7039C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char *v49;

  v45 = a5;
  v44 = a4;
  v47 = a3;
  v42 = a6;
  v43 = a2;
  v48 = a1;
  v7 = a1;
  v8 = (int *)type metadata accessor for ImageProvenance();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_249F1E8D8();
  v14 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for GeneratedImage();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v41 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v41 - v23;
  sub_249DC091C(v6, (uint64_t)&v41 - v23, v25);
  if (v7 == 4)
    v48 = v24[*(int *)(v16 + 20)];
  sub_249DC05A8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249E70728(v43, (uint64_t)v13);
  sub_249DC091C(v6, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v26 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v46) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v49, &v22[*(int *)(v16 + 20) + (uint64_t)v8[5]], v26);
    sub_249DC05A8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249E70770((uint64_t)v13);
  }
  else
  {
    sub_249DC05A8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v49, v13, v26);
  }
  v27 = v47;
  sub_249DC091C(v6, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v28 = v45;
  if ((v44 & 1) != 0)
    v27 = *(_QWORD *)&v19[*(int *)(v16 + 20) + v8[6]];
  sub_249DC05A8((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v29 = *(_QWORD *)(v6 + *(int *)(v16 + 20) + v8[7]);
  if (v28)
  {
    swift_bridgeObjectRetain();
    if (v29)
    {
      v30 = swift_bridgeObjectRetain();
      v29 = sub_249E707B0(v30, v29);
    }
    else
    {
      v29 = v28;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v31 = v42;
  v32 = &v10[v8[5]];
  v33 = *(void (**)(_BYTE *, char *, uint64_t))(v14 + 16);
  v34 = v8;
  v35 = v14;
  v36 = v49;
  v33(v32, v49, v26);
  *v10 = v48;
  *(_QWORD *)&v10[v34[6]] = v27;
  *(_QWORD *)&v10[v34[7]] = v29;
  v37 = *(void **)v6;
  LOBYTE(v34) = *(_BYTE *)(v6 + 8);
  sub_249DC091C((uint64_t)v10, v31 + *(int *)(v16 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  v38 = v6 + *(int *)(v16 + 24);
  *(_QWORD *)v31 = v37;
  *(_BYTE *)(v31 + 8) = (_BYTE)v34;
  sub_249DC091C(v38, v31 + *(int *)(v16 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
  v39 = v37;
  sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v26);
}

uint64_t sub_249E70728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E70770(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249E707B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_249E7082C(a1, (uint64_t)sub_249E70D98, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_249E7082C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;

  v6 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = sub_249E267E8();
  if (!v10)
  {
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    sub_249D9E18C();
    return swift_release();
  }
  v12 = v9;
  v13 = v10;
  v14 = v11;
  while (1)
  {
    v17 = (_QWORD *)*a5;
    v19 = sub_249DB7D8C(v12, v13);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((a4 & 1) != 0)
      {
        v26 = (_QWORD *)*a5;
        if ((v18 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_249DBCDAC();
        v26 = (_QWORD *)*a5;
        if ((v23 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_249DBA048(v22, a4 & 1);
      v24 = sub_249DB7D8C(v12, v13);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_19;
      v19 = v24;
      v26 = (_QWORD *)*a5;
      if ((v23 & 1) != 0)
      {
LABEL_11:
        v27 = *(_QWORD *)(v26[7] + 8 * v19);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v36 = v27;
        sub_249E70AA4(v14, (uint64_t)sub_249E70DCC, 0, isUniquelyReferenced_nonNull_native, &v36);
        if (v6)
          goto LABEL_20;
        v6 = 0;
        v29 = v36;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30 = v26[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v30 + 8 * v19) = v29;
        goto LABEL_3;
      }
    }
    v26[(v19 >> 6) + 8] |= 1 << v19;
    v31 = (uint64_t *)(v26[6] + 16 * v19);
    *v31 = v12;
    v31[1] = v13;
    *(_QWORD *)(v26[7] + 8 * v19) = v14;
    v32 = v26[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_18;
    v26[2] = v34;
LABEL_3:
    v12 = sub_249E267E8();
    v13 = v15;
    v14 = v16;
    a4 = 1;
    if (!v15)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  sub_249F1FF10();
  __break(1u);
LABEL_20:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_249E70AA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_249E26CC8();
  if (!v8)
  {
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_249D9E18C();
    return swift_release();
  }
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v39 = a5;
  while (1)
  {
    v19 = (_QWORD *)*a5;
    v21 = sub_249DB7D8C(v11, v12);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v19[3] >= v24)
    {
      if ((a4 & 1) != 0)
      {
        v28 = (_QWORD *)*a5;
        if ((v20 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        sub_249DBCA40();
        v28 = (_QWORD *)*a5;
        if ((v25 & 1) != 0)
          goto LABEL_13;
      }
    }
    else
    {
      sub_249DB9A1C(v24, a4 & 1);
      v26 = sub_249DB7D8C(v11, v12);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_27;
      v21 = v26;
      v28 = (_QWORD *)*a5;
      if ((v25 & 1) != 0)
      {
LABEL_13:
        v29 = (uint64_t *)(v28[7] + 16 * v21);
        v31 = *v29;
        v30 = v29[1];
        if (*v29 == v13 && v14 == v30)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((sub_249F1FE2C() & 1) != 0)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_bridgeObjectRetain_n();
            sub_249F1F460();
            swift_bridgeObjectRetain();
            sub_249F1F460();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = v31;
        }
        v15 = (_QWORD *)(v28[7] + 16 * v21);
        swift_bridgeObjectRelease();
        *v15 = v13;
        v15[1] = v30;
        goto LABEL_5;
      }
    }
    v28[(v21 >> 6) + 8] |= 1 << v21;
    v33 = (uint64_t *)(v28[6] + 16 * v21);
    *v33 = v11;
    v33[1] = v12;
    v34 = (_QWORD *)(v28[7] + 16 * v21);
    *v34 = v13;
    v34[1] = v14;
    v35 = v28[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_26;
    v28[2] = v37;
LABEL_5:
    v11 = sub_249E26CC8();
    v12 = v16;
    v13 = v17;
    v14 = v18;
    a4 = 1;
    a5 = v39;
    if (!v16)
      goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249E70D98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_249E70DCC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t *sub_249E70E00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_249F1F13C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_249E70F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_249F1F13C();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_249E70F80(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_249E7105C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_249E71190(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_249E71268(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249E71394()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E713A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_249E71430()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E7143C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for GeneratedImageIndications()
{
  uint64_t result;

  result = qword_2578DC250;
  if (!qword_2578DC250)
    return swift_getSingletonMetadata();
  return result;
}

void sub_249E714F8()
{
  unint64_t v0;

  sub_249E71574();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249E71574()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578DC260)
  {
    sub_249F1F13C();
    v0 = sub_249F1F970();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2578DC260);
  }
}

uint64_t sub_249E715C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC298);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E71B6C();
  sub_249F20018();
  v14 = 0;
  sub_249F1FD54();
  if (!v2)
  {
    v9 = type metadata accessor for GeneratedImageIndications();
    v13 = 1;
    sub_249F1F13C();
    sub_249D9BBEC(&qword_2578DC2A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF9A18], MEMORY[0x24BDF9A28]);
    sub_249F1FD84();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC2B0);
    sub_249E71C34(&qword_2578DC2B8, &qword_2578DC2C0, MEMORY[0x24BDF9A00], MEMORY[0x24BEE12A0]);
    sub_249F1FD84();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_249E71790@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC2C8);
  v27 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GeneratedImageIndications();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = 2;
  v11 = (uint64_t)&v10[*(int *)(v8 + 20)];
  v12 = sub_249F1F13C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = *(int *)(v7 + 24);
  *(_QWORD *)&v10[v13] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E71B6C();
  v29 = v6;
  v14 = v31;
  sub_249F1FFF4();
  if (v14)
  {
    v22 = (uint64_t)a1;
  }
  else
  {
    v24 = v13;
    v25 = v11;
    v31 = a1;
    v15 = v27;
    v16 = (uint64_t)v28;
    v35 = 0;
    v17 = v29;
    v18 = v30;
    *v10 = sub_249F1FC88();
    v34 = 1;
    sub_249D9BBEC(&qword_2578DC2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF9A18], MEMORY[0x24BDF9A30]);
    sub_249F1FCB8();
    sub_249E71BEC(v16, v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC2B0);
    v33 = 2;
    sub_249E71C34(&qword_2578DC2D8, &qword_2578DC2E0, MEMORY[0x24BDF9A08], MEMORY[0x24BEE12D0]);
    sub_249F1FCB8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v18);
    v20 = v32;
    v21 = v24;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v21] = v20;
    sub_249E71CB8((uint64_t)v10, v26);
    v22 = (uint64_t)v31;
  }
  __swift_destroy_boxed_opaque_existential_1(v22);
  return sub_249E71BB0((uint64_t)v10);
}

unint64_t sub_249E71A64()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ELL;
  if (*v0 != 1)
    v1 = 0x6465746365746564;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_249E71AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E71EA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E71AF4()
{
  sub_249E71B6C();
  return sub_249F20024();
}

uint64_t sub_249E71B1C()
{
  sub_249E71B6C();
  return sub_249F20030();
}

uint64_t sub_249E71B44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E71790(a1, a2);
}

uint64_t sub_249E71B58(_QWORD *a1)
{
  return sub_249E715C8(a1);
}

unint64_t sub_249E71B6C()
{
  unint64_t result;

  result = qword_2578DC2A0;
  if (!qword_2578DC2A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C984, &type metadata for GeneratedImageIndications.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC2A0);
  }
  return result;
}

uint64_t sub_249E71BB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GeneratedImageIndications();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249E71BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E71C34(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DC2B0);
    v10 = sub_249D9BBEC(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDF99F0], a3);
    result = MEMORY[0x24BD06528](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249E71CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeneratedImageIndications();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for GeneratedImageIndications.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E71D48 + 4 * byte_249F2C815[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E71D7C + 4 * byte_249F2C810[v4]))();
}

uint64_t sub_249E71D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E71D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E71D8CLL);
  return result;
}

uint64_t sub_249E71D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E71DA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E71DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E71DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneratedImageIndications.CodingKeys()
{
  return &type metadata for GeneratedImageIndications.CodingKeys;
}

unint64_t sub_249E71DCC()
{
  unint64_t result;

  result = qword_2578DC2E8;
  if (!qword_2578DC2E8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C95C, &type metadata for GeneratedImageIndications.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC2E8);
  }
  return result;
}

unint64_t sub_249E71E14()
{
  unint64_t result;

  result = qword_2578DC2F0;
  if (!qword_2578DC2F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2C8CC, &type metadata for GeneratedImageIndications.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC2F0);
  }
  return result;
}

unint64_t sub_249E71E5C()
{
  unint64_t result;

  result = qword_2578DC2F8[0];
  if (!qword_2578DC2F8[0])
  {
    result = MEMORY[0x24BD06528](&unk_249F2C8F4, &type metadata for GeneratedImageIndications.CodingKeys);
    atomic_store(result, qword_2578DC2F8);
  }
  return result;
}

uint64_t sub_249E71EA0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000249F37B10 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000249F37B30 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465746365746564 && a2 == 0xED00007365636146)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249E72014()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1F970();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249E7208C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_249E753C4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_249E72F64(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249E720F4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_249E7216C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v4 = sub_249F1E734();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v7 = sub_249F1F394();
  v12 = v7;
  v13 = v8;
  sub_249E72E1C(a2);
  if (v9)
  {
    v11[0] = 8250;
    v11[1] = 0xE200000000000000;
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    return v12;
  }
  return v7;
}

uint64_t sub_249E72248(unsigned int a1)
{
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = (HIBYTE(a1) + 1);
  if ((a1 & 0x80000000) != 0)
    v2 = ((a1 >> 30) & 0xFFFFC0FF | ((HIBYTE(a1) & 0x3F) << 8)) + 33217;
  v24[0] = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
  v3 = MEMORY[0x24BD04FF8](v24);
  v5 = ((BYTE2(a1) >> 6) & 0xFFFFC0FF | ((HIWORD(a1) & 0x3F) << 8)) + 33217;
  if (BYTE2(a1) < 0x80u)
    v5 = (BYTE2(a1) + 1);
  v6 = v3;
  v7 = v4;
  v24[0] = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
  v8 = MEMORY[0x24BD04FF8](v24);
  v10 = (BYTE1(a1) + 1);
  if (BYTE1(a1) >= 0x80u)
    v10 = (a1 & 0x3F00 | (BYTE1(a1) >> 6)) + 33217;
  v11 = v8;
  v12 = v9;
  v24[0] = (v10 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v10) >> 3)) & 7)));
  v13 = MEMORY[0x24BD04FF8](v24);
  v15 = ((a1 >> 6) & 0xFFFFC0FF | ((a1 & 0x3F) << 8)) + 33217;
  if (a1 < 0x80u)
    v15 = (a1 + 1);
  v16 = v13;
  v17 = v14;
  v24[0] = (v15 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v15) >> 3)) & 7)));
  v18 = MEMORY[0x24BD04FF8](v24);
  v20 = v19;
  if ((sub_249E72CCC(v6, v7) & 1) != 0
    && (sub_249E72CCC(v11, v12) & 1) != 0
    && (sub_249E72CCC(v16, v17) & 1) != 0
    && (sub_249E72CCC(v18, v20) & 1) != 0)
  {
    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    sub_249F1F460();
    sub_249F1F250();
    swift_bridgeObjectRelease();
    sub_249F1F250();
    swift_bridgeObjectRelease();
    sub_249F1F250();
    swift_bridgeObjectRelease();
    sub_249F1F250();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    return v24[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC388);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_249F21770;
    v23 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v22 + 64) = v23;
    *(_QWORD *)(v22 + 32) = a1;
    return sub_249F1F358();
  }
}

uint64_t sub_249E72588(uint64_t a1)
{
  return sub_249E7259C(a1);
}

uint64_t sub_249E7259C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;

  v21 = (_QWORD *)a1;
  swift_bridgeObjectRetain();
  sub_249E7208C((uint64_t *)&v21);
  v2 = v21;
  if (v1)
  {
    swift_release();
    return (uint64_t)v2;
  }
  v3 = v21[2];
  v4 = v3 - 2;
  if (v3 < 2)
    return (uint64_t)v2;
  v6 = 2 * v3;
  for (i = -(uint64_t)v3; ; ++i)
  {
    v8 = v2[2];
    if (v4 >= v8)
      break;
    if (v4 + 1 >= v8)
      goto LABEL_33;
    v9 = v2[v6] >> 14;
    v10 = v2[v6 + 3] >> 14;
    v11 = v2[v6 + 2] >> 14;
    v12 = v2[v6 + 1] >> 14;
    if (v9 < v10 && v9 != v12 && v11 < v12 && v11 != v10)
    {
      if (v11 >= v9)
        v16 = v2[v6];
      else
        v16 = v2[v6 + 2];
      if (v10 >= v12)
        v17 = v2[v6 + 3];
      else
        v17 = v2[v6 + 1];
      if (v17 >> 14 < v16 >> 14)
        goto LABEL_34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_249E3C608(v2);
      if (v4 >= v2[2])
        goto LABEL_35;
      v18 = &v2[v6];
      *v18 = v16;
      v18[1] = v17;
      v19 = v2[2];
      if (v4 + 1 >= v19)
        goto LABEL_36;
      if ((uint64_t)(i + v19) < 0)
        goto LABEL_37;
      v20 = v19 - 1;
      memmove(&v2[v6 + 2], &v2[v6 + 4], 16 * (i + v19));
      v2[2] = v20;
    }
    --v4;
    v6 -= 2;
    if (v4 == -1)
      return (uint64_t)v2;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

_QWORD *sub_249E72754(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD v31[2];
  int v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  v42 = a1;
  swift_bridgeObjectRetain();
  sub_249E720F4((uint64_t *)&v42, sub_249E75428, sub_249E73638);
  v50 = v42;
  if (v1)
  {
    swift_release();
    return v50;
  }
  v2 = v50[2];
  v3 = v2 - 2;
  if (v2 < 2)
    return v50;
  v5 = (v2 << 6) - 96;
  for (i = -(uint64_t)v2; ; ++i)
  {
    v7 = v50[2];
    if (v3 >= v7)
      break;
    v8 = (char *)v50 + v5;
    v9 = *(_QWORD *)((char *)v50 + v5 + 8);
    v10 = *(_DWORD *)((char *)v50 + v5 + 16);
    v11 = *(_QWORD *)((char *)v50 + v5 + 40);
    v12 = *(_OWORD *)((char *)v50 + v5 + 24);
    v13 = *(_OWORD *)((char *)v50 + v5 + 48);
    v36 = *(_QWORD *)((char *)v50 + v5);
    v37 = v9;
    v38 = v10;
    v39 = v12;
    v40 = v11;
    v41 = v13;
    if (v3 + 1 >= v7)
      goto LABEL_17;
    v14 = *((_QWORD *)v8 + 9);
    v15 = *((_DWORD *)v8 + 20);
    v16 = *((_QWORD *)v8 + 13);
    v17 = *(_OWORD *)(v8 + 88);
    v18 = *((_OWORD *)v8 + 7);
    v31[0] = *((_QWORD *)v8 + 8);
    v31[1] = v14;
    v32 = v15;
    v33 = v17;
    v34 = v16;
    v35 = v18;
    sub_249EA8B68((uint64_t)v31, &v42);
    v19 = v43;
    if (v43)
    {
      v29 = v45;
      v30 = v44;
      v27 = v47;
      v28 = v46;
      v26 = v48;
      v24 = (uint64_t)v42;
      v25 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v50 = sub_249E3C61C(v50);
      if (v3 >= v50[2])
        goto LABEL_18;
      v20 = (char *)v50 + v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v20 = v24;
      *((_QWORD *)v20 + 1) = v19;
      *((_DWORD *)v20 + 4) = v30;
      *((_QWORD *)v20 + 3) = v29;
      *((_QWORD *)v20 + 4) = v28;
      *((_QWORD *)v20 + 5) = v27;
      *((_QWORD *)v20 + 6) = v26;
      *((_QWORD *)v20 + 7) = v25;
      v21 = v50[2];
      if (v3 + 1 >= v21)
        goto LABEL_19;
      v22 = v50;
      if ((uint64_t)(i + v21) < 0)
        goto LABEL_20;
      v23 = v21 - 1;
      memmove((char *)v50 + v5 + 64, (char *)v50 + v5 + 128, (i + v21) << 6);
      v22[2] = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249E753D8(v24, v19);
    }
    --v3;
    v5 -= 64;
    if (v3 == -1)
      return v50;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = (_QWORD *)sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E72A58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v24 = (_QWORD *)a1;
  swift_bridgeObjectRetain();
  sub_249E720F4((uint64_t *)&v24, sub_249E75450, sub_249E73D98);
  v2 = v24;
  if (v1)
  {
    swift_release();
    return (uint64_t)v2;
  }
  v3 = v24[2];
  v4 = v3 - 2;
  if (v3 < 2)
    return (uint64_t)v2;
  v6 = 2 * v3;
  for (i = -(uint64_t)v3; ; ++i)
  {
    v8 = v2[2];
    if (v4 >= v8)
      break;
    if (v4 + 1 >= v8)
      goto LABEL_40;
    v9 = v2[v6];
    v10 = &v2[v6];
    v11 = v2[v6 + 1];
    v12 = v9 + v11;
    if (__OFADD__(v9, v11))
      goto LABEL_41;
    v13 = v10[2];
    v14 = v10[3];
    v15 = __OFADD__(v13, v14);
    v16 = v13 + v14;
    if (v15)
      goto LABEL_42;
    v17 = v9 >= v13 && v9 < v16;
    if (v17 || v13 >= v9 && v13 < v12)
    {
      if (v12 <= v16)
        v12 = v16;
      if (v9 >= v13)
        v18 = v13;
      else
        v18 = v2[v6];
      v19 = v12 - v18;
      if (__OFSUB__(v12, v18))
        goto LABEL_45;
    }
    else
    {
      if (v12 != v13)
        goto LABEL_6;
      if (v13 <= v16)
        v23 = v16;
      else
        v23 = v13;
      if (v9 >= v13)
        v18 = v13;
      else
        v18 = v2[v6];
      v19 = v23 - v18;
      if (__OFSUB__(v23, v18))
        goto LABEL_46;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_249E3C6C0(v2);
    if (v4 >= v2[2])
      goto LABEL_43;
    v20 = &v2[v6];
    *v20 = v18;
    v20[1] = v19;
    v21 = v2[2];
    if (v4 + 1 >= v21)
      goto LABEL_44;
    if ((uint64_t)(i + v21) < 0)
      goto LABEL_47;
    v22 = v21 - 1;
    memmove(&v2[v6 + 2], &v2[v6 + 4], 16 * (i + v21));
    v2[2] = v22;
LABEL_6:
    --v4;
    v6 -= 2;
    if (v4 == -1)
      return (uint64_t)v2;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

void sub_249E72C58()
{
  void *v0;
  id v1;

  v0 = (void *)sub_249F1F304();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v0);

  if (v1)
    qword_2578FF3E0 = (uint64_t)v1;
  else
    __break(1u);
}

unint64_t sub_249E72CCC(unint64_t a1, unint64_t a2)
{
  unint64_t result;

  if ((sub_249F1F25C() & 1) != 0 || (sub_249F1F268() & 1) != 0 || (sub_249F1F244() & 1) != 0)
    return 1;
  if ((sub_249F1F238() & 1) == 0)
    return 0;
  result = sub_249E750BC(a1, a2);
  if ((result & 0x100000000) == 0)
    return (result - 14) <= 0xFFFFFFFB && (result - 8232) >= 2 && (_DWORD)result != 133;
  __break(1u);
  return result;
}

uint64_t sub_249E72D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = sub_249F1F970();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_249E72DBC()
{
  sub_249E72D68();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResultBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResultBox);
}

{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResultBox);
}

uint64_t sub_249E72DE8(uint64_t a1)
{
  uint64_t v2;

  sub_249DCA7E4(a1, (uint64_t)&v2);
  return sub_249F1F3AC();
}

uint64_t sub_249E72E1C(void *a1)
{
  id v1;
  uint64_t v2;
  __int128 v4[2];
  uint64_t v5;
  void *v6;
  _QWORD v7[4];

  if (!a1)
    return 0;
  v6 = a1;
  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79E0);
  if (!swift_dynamicCast())
  {
    v5 = 0;
    memset(v4, 0, sizeof(v4));
    sub_249DDE77C((uint64_t)v4);
    return 0;
  }
  sub_249D9E174(v4, (uint64_t)v7);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v2 = sub_249F1E530();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v2;
}

uint64_t sub_249E72EEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_249F1F490();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24BD05088](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_249E72F64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  unint64_t v86;
  uint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;

  v3 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_QWORD *)(v84 + 16 * i);
        v87 = v83;
        do
        {
          if (v86 >> 14 >= *(_QWORD *)(v84 + v87) >> 14)
            break;
          if (!v84)
            goto LABEL_140;
          v88 = (unint64_t *)(v84 + v87);
          v89 = *(_QWORD *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v90 = v12;
      v101 = v9;
      if (v13 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v91)
            goto LABEL_144;
          v93 = v90;
          v94 = *(_QWORD *)&v90[16 * v92 + 32];
          v95 = *(_QWORD *)&v90[16 * v13 + 24];
          sub_249E74460((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v93 = sub_249E750A8((uint64_t)v93);
          if (v92 >= *((_QWORD *)v93 + 2))
            goto LABEL_133;
          v96 = &v93[16 * v92 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v93 + 2);
          if (v13 > v97)
            goto LABEL_134;
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          v90 = v93;
          *((_QWORD *)v93 + 2) = v97 - 1;
          v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v101 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_249F1F58C();
    *(_QWORD *)(v8 + 16) = v7;
    v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 16;
  v100 = *a1 + 32;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v102 = v6;
  v103 = v3;
  v104 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 16 * v10);
      v16 = v15 >> 14;
      v17 = *(_QWORD *)(v11 + 16 * v14) >> 14;
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (unint64_t *)(v100 + 16 * v14);
        while (1)
        {
          v20 = *v18;
          v18 += 2;
          v19 = v20;
          if (v16 < v17 == v20 >> 14 >= v15 >> 14)
            break;
          ++v10;
          v15 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = (__int128 *)(v99 + 16 * v10);
          v22 = v10;
          v23 = v14;
          v24 = (__int128 *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_143;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v26 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v14)
      break;
    if (v10 != v26)
    {
      v27 = v99 + 16 * v10;
      do
      {
        v28 = *(_QWORD *)(v11 + 16 * v10);
        v29 = v14;
        v30 = v27;
        do
        {
          if (v28 >> 14 >= *(_QWORD *)v30 >> 14)
            break;
          if (!v11)
            goto LABEL_141;
          v31 = *(_QWORD *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(_QWORD *)v30 = v28;
          *(_QWORD *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      v10 = v26;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_249E74C00(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v33 = *((_QWORD *)v12 + 2);
    v32 = *((_QWORD *)v12 + 3);
    v13 = v33 + 1;
    v11 = v104;
    if (v33 >= v32 >> 1)
    {
      v82 = sub_249E74C00((char *)(v32 > 1), v33 + 1, 1, v12);
      v11 = v104;
      v12 = v82;
    }
    *((_QWORD *)v12 + 2) = v13;
    v34 = v12 + 32;
    v35 = &v12[16 * v33 + 32];
    *(_QWORD *)v35 = v14;
    *((_QWORD *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        v36 = v13 - 1;
        if (v13 >= 4)
        {
          v41 = &v34[16 * v13];
          v42 = *((_QWORD *)v41 - 8);
          v43 = *((_QWORD *)v41 - 7);
          v47 = __OFSUB__(v43, v42);
          v44 = v43 - v42;
          if (v47)
            goto LABEL_119;
          v46 = *((_QWORD *)v41 - 6);
          v45 = *((_QWORD *)v41 - 5);
          v47 = __OFSUB__(v45, v46);
          v39 = v45 - v46;
          v40 = v47;
          if (v47)
            goto LABEL_120;
          v48 = v13 - 2;
          v49 = &v34[16 * v13 - 32];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v47 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v47)
            goto LABEL_122;
          v47 = __OFADD__(v39, v52);
          v53 = v39 + v52;
          if (v47)
            goto LABEL_125;
          if (v53 >= v44)
          {
            v71 = &v34[16 * v36];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v47 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v47)
              goto LABEL_129;
            v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v65 = *((_QWORD *)v12 + 4);
            v66 = *((_QWORD *)v12 + 5);
            v47 = __OFSUB__(v66, v65);
            v58 = v66 - v65;
            v59 = v47;
            goto LABEL_77;
          }
          v38 = *((_QWORD *)v12 + 4);
          v37 = *((_QWORD *)v12 + 5);
          v47 = __OFSUB__(v37, v38);
          v39 = v37 - v38;
          v40 = v47;
        }
        if ((v40 & 1) != 0)
          goto LABEL_121;
        v48 = v13 - 2;
        v54 = &v34[16 * v13 - 32];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v57 = __OFSUB__(v55, v56);
        v58 = v55 - v56;
        v59 = v57;
        if (v57)
          goto LABEL_124;
        v60 = &v34[16 * v36];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v47 = __OFSUB__(v61, v62);
        v63 = v61 - v62;
        if (v47)
          goto LABEL_127;
        if (__OFADD__(v58, v63))
          goto LABEL_128;
        if (v58 + v63 >= v39)
        {
          v64 = v39 < v63;
LABEL_83:
          if (v64)
            v36 = v48;
          goto LABEL_85;
        }
LABEL_77:
        if ((v59 & 1) != 0)
          goto LABEL_123;
        v67 = &v34[16 * v36];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v47 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v47)
          goto LABEL_126;
        if (v70 < v58)
          goto LABEL_15;
LABEL_85:
        v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v76 = v12;
        v77 = &v34[16 * v75];
        v78 = *(_QWORD *)v77;
        v79 = &v34[16 * v36];
        v80 = *((_QWORD *)v79 + 1);
        sub_249E74460((char *)(v11 + 16 * *(_QWORD *)v77), (char *)(v11 + 16 * *(_QWORD *)v79), v11 + 16 * v80, __dst);
        if (v1)
          goto LABEL_93;
        if (v80 < v78)
          goto LABEL_116;
        if (v36 > *((_QWORD *)v76 + 2))
          goto LABEL_117;
        *(_QWORD *)v77 = v78;
        *(_QWORD *)&v34[16 * v75 + 8] = v80;
        v81 = *((_QWORD *)v76 + 2);
        if (v36 >= v81)
          goto LABEL_118;
        v12 = v76;
        v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((_QWORD *)v76 + 2) = v81 - 1;
        v11 = v104;
        if (v81 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v102;
    v3 = v103;
    if (v10 >= v103)
    {
      v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_249F1FBC8();
  __break(1u);
  return result;
}

uint64_t sub_249E73638(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t i;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *__dst;
  uint64_t v132;

  v3 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v102 = 0;
      v103 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v105 = *(_QWORD *)(v103 + (i << 6) + 48);
        v106 = v102;
        do
        {
          v107 = v103 + v106;
          if (v105 >> 14 >= *(_QWORD *)(v103 + v106 + 48) >> 14)
            break;
          if (!v103)
            goto LABEL_140;
          v108 = *(_QWORD *)(v107 + 64);
          v109 = v103 + v106;
          v110 = *(_QWORD *)(v103 + v106 + 72);
          result = *(unsigned int *)(v103 + v106 + 80);
          v111 = *(_QWORD *)(v103 + v106 + 104);
          v112 = *(_QWORD *)(v103 + v106 + 120);
          v113 = *(_OWORD *)(v103 + v106 + 88);
          v114 = *(_OWORD *)(v107 + 16);
          *(_OWORD *)(v107 + 64) = *(_OWORD *)v107;
          *(_OWORD *)(v107 + 80) = v114;
          v115 = *(_OWORD *)(v107 + 48);
          *(_OWORD *)(v107 + 96) = *(_OWORD *)(v107 + 32);
          *(_OWORD *)(v107 + 112) = v115;
          *(_QWORD *)v109 = v108;
          *(_QWORD *)(v109 + 8) = v110;
          *(_DWORD *)(v109 + 16) = result;
          *(_OWORD *)(v109 + 24) = v113;
          *(_QWORD *)(v109 + 40) = v111;
          *(_QWORD *)(v107 + 48) = v105;
          v106 -= 64;
          *(_QWORD *)(v109 + 56) = v112;
        }
        while (v106 != -64);
        v102 += 64;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v132 = v1;
  v125 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v116 = v12;
      v127 = v9;
      if (v13 >= 2)
      {
        v117 = *v125;
        do
        {
          v118 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v117)
            goto LABEL_144;
          v119 = v116;
          v120 = *(_QWORD *)&v116[16 * v118 + 32];
          v121 = *(_QWORD *)&v116[16 * v13 + 24];
          sub_249E746E0((char *)(v117 + (v120 << 6)), (char *)(v117 + (*(_QWORD *)&v116[16 * v13 + 16] << 6)), v117 + (v121 << 6), __dst);
          if (v132)
            break;
          if (v121 < v120)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v119 = sub_249E750A8((uint64_t)v119);
          if (v118 >= *((_QWORD *)v119 + 2))
            goto LABEL_133;
          v122 = &v119[16 * v118 + 32];
          *(_QWORD *)v122 = v120;
          *((_QWORD *)v122 + 1) = v121;
          v123 = *((_QWORD *)v119 + 2);
          if (v13 > v123)
            goto LABEL_134;
          memmove(&v119[16 * v13 + 16], &v119[16 * v13 + 32], 16 * (v123 - v13));
          v116 = v119;
          *((_QWORD *)v119 + 2) = v123 - 1;
          v13 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v127 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_249F1F58C();
    *(_QWORD *)(v8 + 16) = v7;
    v127 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v126 = *a1 + 176;
  v124 = *a1 + 56;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v128 = v6;
  v129 = v3;
  v130 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + (v10 << 6) + 48);
      v16 = v15 >> 14;
      v17 = *(_QWORD *)(v11 + (v14 << 6) + 48) >> 14;
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (unint64_t *)(v126 + (v14 << 6));
        while (1)
        {
          v20 = *v18;
          v18 += 8;
          v19 = v20;
          if (v16 < v17 == v20 >> 14 >= v15 >> 14)
            break;
          ++v10;
          v15 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = v10 << 6;
          v22 = v14 << 6;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = (_OWORD *)(v11 + v22);
              v26 = v11 + v21;
              v27 = *(_QWORD *)(v11 + v22);
              v28 = *(_QWORD *)(v11 + v22 + 8);
              v29 = *(_DWORD *)(v11 + v22 + 16);
              v30 = *(_QWORD *)(v11 + v22 + 40);
              v31 = *(_OWORD *)(v11 + v22 + 24);
              v32 = *(_OWORD *)(v11 + v22 + 48);
              v33 = *(_OWORD *)(v11 + v21 - 16);
              v35 = *(_OWORD *)(v11 + v21 - 64);
              v34 = *(_OWORD *)(v11 + v21 - 48);
              v25[2] = *(_OWORD *)(v11 + v21 - 32);
              v25[3] = v33;
              *v25 = v35;
              v25[1] = v34;
              *(_QWORD *)(v26 - 64) = v27;
              *(_QWORD *)(v26 - 56) = v28;
              *(_DWORD *)(v26 - 48) = v29;
              *(_OWORD *)(v26 - 40) = v31;
              *(_QWORD *)(v26 - 24) = v30;
              *(_OWORD *)(v26 - 16) = v32;
            }
            ++v24;
            v21 -= 64;
            v22 += 64;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v36 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v36 >= v3)
      v36 = v3;
    if (v36 < v14)
      break;
    if (v10 != v36)
    {
      v37 = v124 + (v10 << 6);
      do
      {
        v38 = *(_QWORD *)(v11 + (v10 << 6) + 48);
        v39 = v14;
        v40 = v37;
        do
        {
          if (v38 >> 14 >= *(_QWORD *)(v40 - 72) >> 14)
            break;
          if (!v11)
            goto LABEL_141;
          v41 = (_OWORD *)(v40 - 56);
          v42 = (_OWORD *)(v40 - 120);
          v44 = *(_OWORD *)(v40 - 88);
          v43 = *(_OWORD *)(v40 - 72);
          *(_QWORD *)(v40 - 64) = *(_QWORD *)v40;
          v40 -= 64;
          v45 = *(_QWORD *)(v40 + 8);
          v46 = *(_QWORD *)(v40 + 16);
          v47 = *(_DWORD *)(v40 + 24);
          v48 = *(_OWORD *)(v40 + 32);
          v49 = v42[1];
          *v41 = *v42;
          v41[1] = v49;
          v50 = *(_QWORD *)(v40 + 48);
          v41[2] = v44;
          v41[3] = v43;
          *(_QWORD *)(v40 - 56) = v45;
          *(_QWORD *)(v40 - 48) = v46;
          *(_DWORD *)(v40 - 40) = v47;
          *(_OWORD *)(v40 - 32) = v48;
          ++v39;
          *(_QWORD *)(v40 - 16) = v50;
          *(_QWORD *)(v40 - 8) = v38;
        }
        while (v10 != v39);
        ++v10;
        v37 += 64;
      }
      while (v10 != v36);
      v10 = v36;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_249E74C00(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v52 = *((_QWORD *)v12 + 2);
    v51 = *((_QWORD *)v12 + 3);
    v13 = v52 + 1;
    v11 = v130;
    if (v52 >= v51 >> 1)
    {
      v101 = sub_249E74C00((char *)(v51 > 1), v52 + 1, 1, v12);
      v11 = v130;
      v12 = v101;
    }
    *((_QWORD *)v12 + 2) = v13;
    v53 = v12 + 32;
    v54 = &v12[16 * v52 + 32];
    *(_QWORD *)v54 = v14;
    *((_QWORD *)v54 + 1) = v10;
    if (v52)
    {
      while (1)
      {
        v55 = v13 - 1;
        if (v13 >= 4)
        {
          v60 = &v53[16 * v13];
          v61 = *((_QWORD *)v60 - 8);
          v62 = *((_QWORD *)v60 - 7);
          v66 = __OFSUB__(v62, v61);
          v63 = v62 - v61;
          if (v66)
            goto LABEL_119;
          v65 = *((_QWORD *)v60 - 6);
          v64 = *((_QWORD *)v60 - 5);
          v66 = __OFSUB__(v64, v65);
          v58 = v64 - v65;
          v59 = v66;
          if (v66)
            goto LABEL_120;
          v67 = v13 - 2;
          v68 = &v53[16 * v13 - 32];
          v70 = *(_QWORD *)v68;
          v69 = *((_QWORD *)v68 + 1);
          v66 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          if (v66)
            goto LABEL_122;
          v66 = __OFADD__(v58, v71);
          v72 = v58 + v71;
          if (v66)
            goto LABEL_125;
          if (v72 >= v63)
          {
            v90 = &v53[16 * v55];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v66 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v66)
              goto LABEL_129;
            v83 = v58 < v93;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v84 = *((_QWORD *)v12 + 4);
            v85 = *((_QWORD *)v12 + 5);
            v66 = __OFSUB__(v85, v84);
            v77 = v85 - v84;
            v78 = v66;
            goto LABEL_77;
          }
          v57 = *((_QWORD *)v12 + 4);
          v56 = *((_QWORD *)v12 + 5);
          v66 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          v59 = v66;
        }
        if ((v59 & 1) != 0)
          goto LABEL_121;
        v67 = v13 - 2;
        v73 = &v53[16 * v13 - 32];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v76 = __OFSUB__(v74, v75);
        v77 = v74 - v75;
        v78 = v76;
        if (v76)
          goto LABEL_124;
        v79 = &v53[16 * v55];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v66 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v66)
          goto LABEL_127;
        if (__OFADD__(v77, v82))
          goto LABEL_128;
        if (v77 + v82 >= v58)
        {
          v83 = v58 < v82;
LABEL_83:
          if (v83)
            v55 = v67;
          goto LABEL_85;
        }
LABEL_77:
        if ((v78 & 1) != 0)
          goto LABEL_123;
        v86 = &v53[16 * v55];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v66 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v66)
          goto LABEL_126;
        if (v89 < v77)
          goto LABEL_15;
LABEL_85:
        v94 = v55 - 1;
        if (v55 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v95 = v12;
        v96 = &v53[16 * v94];
        v97 = *(_QWORD *)v96;
        v98 = &v53[16 * v55];
        v99 = *((_QWORD *)v98 + 1);
        sub_249E746E0((char *)(v11 + (*(_QWORD *)v96 << 6)), (char *)(v11 + (*(_QWORD *)v98 << 6)), v11 + (v99 << 6), __dst);
        if (v132)
          goto LABEL_93;
        if (v99 < v97)
          goto LABEL_116;
        if (v55 > *((_QWORD *)v95 + 2))
          goto LABEL_117;
        *(_QWORD *)v96 = v97;
        *(_QWORD *)&v53[16 * v94 + 8] = v99;
        v100 = *((_QWORD *)v95 + 2);
        if (v55 >= v100)
          goto LABEL_118;
        v12 = v95;
        v13 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        *((_QWORD *)v95 + 2) = v100 - 1;
        v11 = v130;
        if (v100 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v128;
    v3 = v129;
    if (v10 >= v129)
    {
      v9 = v127;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_249F1FBC8();
  __break(1u);
  return result;
}

uint64_t sub_249E73D98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;

  v3 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_QWORD *)(v84 + 16 * i);
        v87 = v83;
        do
        {
          if (v86 >= *(_QWORD *)(v84 + v87))
            break;
          if (!v84)
            goto LABEL_140;
          v88 = (_QWORD *)(v84 + v87);
          v89 = *(_QWORD *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v90 = v12;
      v101 = v9;
      if (v13 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v91)
            goto LABEL_144;
          v93 = v90;
          v94 = *(_QWORD *)&v90[16 * v92 + 32];
          v95 = *(_QWORD *)&v90[16 * v13 + 24];
          sub_249E74988((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v93 = sub_249E750A8((uint64_t)v93);
          if (v92 >= *((_QWORD *)v93 + 2))
            goto LABEL_133;
          v96 = &v93[16 * v92 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v93 + 2);
          if (v13 > v97)
            goto LABEL_134;
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          v90 = v93;
          *((_QWORD *)v93 + 2) = v97 - 1;
          v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v101 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    type metadata accessor for _NSRange(0);
    v8 = sub_249F1F58C();
    *(_QWORD *)(v8 + 16) = v7;
    v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 16;
  v100 = *a1 + 32;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v102 = v6;
  v103 = v3;
  v104 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 16 * v10);
      v16 = *(_QWORD *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v100 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 2;
          v19 = v20;
          if (v15 < v16 == v20 >= v18)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = (__int128 *)(v99 + 16 * v10);
          v22 = v10;
          v23 = v14;
          v24 = (__int128 *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_143;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v26 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v14)
      break;
    if (v10 != v26)
    {
      v27 = v99 + 16 * v10;
      do
      {
        v28 = *(_QWORD *)(v11 + 16 * v10);
        v29 = v14;
        v30 = v27;
        do
        {
          if (v28 >= *(_QWORD *)v30)
            break;
          if (!v11)
            goto LABEL_141;
          v31 = *(_QWORD *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(_QWORD *)v30 = v28;
          *(_QWORD *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      v10 = v26;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_249E74C00(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v33 = *((_QWORD *)v12 + 2);
    v32 = *((_QWORD *)v12 + 3);
    v13 = v33 + 1;
    v11 = v104;
    if (v33 >= v32 >> 1)
    {
      v82 = sub_249E74C00((char *)(v32 > 1), v33 + 1, 1, v12);
      v11 = v104;
      v12 = v82;
    }
    *((_QWORD *)v12 + 2) = v13;
    v34 = v12 + 32;
    v35 = &v12[16 * v33 + 32];
    *(_QWORD *)v35 = v14;
    *((_QWORD *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        v36 = v13 - 1;
        if (v13 >= 4)
        {
          v41 = &v34[16 * v13];
          v42 = *((_QWORD *)v41 - 8);
          v43 = *((_QWORD *)v41 - 7);
          v47 = __OFSUB__(v43, v42);
          v44 = v43 - v42;
          if (v47)
            goto LABEL_119;
          v46 = *((_QWORD *)v41 - 6);
          v45 = *((_QWORD *)v41 - 5);
          v47 = __OFSUB__(v45, v46);
          v39 = v45 - v46;
          v40 = v47;
          if (v47)
            goto LABEL_120;
          v48 = v13 - 2;
          v49 = &v34[16 * v13 - 32];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v47 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v47)
            goto LABEL_122;
          v47 = __OFADD__(v39, v52);
          v53 = v39 + v52;
          if (v47)
            goto LABEL_125;
          if (v53 >= v44)
          {
            v71 = &v34[16 * v36];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v47 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v47)
              goto LABEL_129;
            v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v65 = *((_QWORD *)v12 + 4);
            v66 = *((_QWORD *)v12 + 5);
            v47 = __OFSUB__(v66, v65);
            v58 = v66 - v65;
            v59 = v47;
            goto LABEL_77;
          }
          v38 = *((_QWORD *)v12 + 4);
          v37 = *((_QWORD *)v12 + 5);
          v47 = __OFSUB__(v37, v38);
          v39 = v37 - v38;
          v40 = v47;
        }
        if ((v40 & 1) != 0)
          goto LABEL_121;
        v48 = v13 - 2;
        v54 = &v34[16 * v13 - 32];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v57 = __OFSUB__(v55, v56);
        v58 = v55 - v56;
        v59 = v57;
        if (v57)
          goto LABEL_124;
        v60 = &v34[16 * v36];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v47 = __OFSUB__(v61, v62);
        v63 = v61 - v62;
        if (v47)
          goto LABEL_127;
        if (__OFADD__(v58, v63))
          goto LABEL_128;
        if (v58 + v63 >= v39)
        {
          v64 = v39 < v63;
LABEL_83:
          if (v64)
            v36 = v48;
          goto LABEL_85;
        }
LABEL_77:
        if ((v59 & 1) != 0)
          goto LABEL_123;
        v67 = &v34[16 * v36];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v47 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v47)
          goto LABEL_126;
        if (v70 < v58)
          goto LABEL_15;
LABEL_85:
        v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v76 = v12;
        v77 = &v34[16 * v75];
        v78 = *(_QWORD *)v77;
        v79 = &v34[16 * v36];
        v80 = *((_QWORD *)v79 + 1);
        sub_249E74988((char *)(v11 + 16 * *(_QWORD *)v77), (char *)(v11 + 16 * *(_QWORD *)v79), v11 + 16 * v80, __dst);
        if (v1)
          goto LABEL_93;
        if (v80 < v78)
          goto LABEL_116;
        if (v36 > *((_QWORD *)v76 + 2))
          goto LABEL_117;
        *(_QWORD *)v77 = v78;
        *(_QWORD *)&v34[16 * v75 + 8] = v80;
        v81 = *((_QWORD *)v76 + 2);
        if (v36 >= v81)
          goto LABEL_118;
        v12 = v76;
        v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((_QWORD *)v76 + 2) = v81 - 1;
        v11 = v104;
        if (v81 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v102;
    v3 = v103;
    if (v10 >= v103)
    {
      v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_249F1FBC8();
  __break(1u);
  return result;
}

uint64_t sub_249E74460(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >> 14 >= v20 >> 14)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >> 14 >= *(_QWORD *)v4 >> 14)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_249E74CFC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E746E0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t result;
  char *v32;
  const void *v33;
  char *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 6;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 6;
  v34 = __src;
  v33 = __dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst)
        memmove(__dst, a2, v13 << 6);
      v21 = &v4[64 * v13];
      v32 = v21;
      v34 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        v22 = (char *)(a3 - 64);
        do
        {
          v23 = v22 + 64;
          if (*((_QWORD *)v21 - 2) >> 14 >= *((_QWORD *)v6 - 2) >> 14)
          {
            v32 = v21 - 64;
            if (v23 < v21 || v22 >= v21 || v23 != v21)
            {
              v28 = *((_OWORD *)v21 - 4);
              v29 = *((_OWORD *)v21 - 3);
              v30 = *((_OWORD *)v21 - 1);
              *((_OWORD *)v22 + 2) = *((_OWORD *)v21 - 2);
              *((_OWORD *)v22 + 3) = v30;
              *(_OWORD *)v22 = v28;
              *((_OWORD *)v22 + 1) = v29;
            }
            v24 = v6;
            v21 -= 64;
            if (v6 <= v7)
              break;
          }
          else
          {
            v24 = v6 - 64;
            if (v23 != v6 || v22 >= v6)
            {
              v25 = *(_OWORD *)v24;
              v26 = *((_OWORD *)v6 - 3);
              v27 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v22 + 2) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v22 + 3) = v27;
              *(_OWORD *)v22 = v25;
              *((_OWORD *)v22 + 1) = v26;
            }
            v34 = v6 - 64;
            if (v24 <= v7)
              break;
          }
          v22 -= 64;
          v6 = v24;
        }
        while (v21 > v4);
      }
LABEL_44:
      sub_249E74DA4((void **)&v34, &v33, &v32);
      return 1;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst)
      memmove(__dst, __src, v10 << 6);
    v14 = &v4[64 * v10];
    v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      v15 = v4;
      while (1)
      {
        if (*((_QWORD *)v6 + 6) >> 14 >= *((_QWORD *)v15 + 6) >> 14)
        {
          v4 = v15 + 64;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 64;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 64;
          }
        }
        else
        {
          v16 = v6 + 64;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        v18 = *(_OWORD *)v17;
        v19 = *((_OWORD *)v17 + 1);
        v20 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v7 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v7 + 3) = v20;
        *(_OWORD *)v7 = v18;
        *((_OWORD *)v7 + 1) = v19;
LABEL_22:
        v7 += 64;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v33 = v4;
        v34 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249E74988(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_249E74CFC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

char *sub_249E74C00(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC380);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_249E74CFC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_249F1FC28();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_249E74DA4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    result = (char *)sub_249F1FC28();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

char *sub_249E74E4C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_249F1FC28();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_249E74EF4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for GeneratedImage();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_249F1FC28();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_249E75000(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_249F1FC28();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_249E750A8(uint64_t a1)
{
  return sub_249E74C00(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_249E750BC(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_249E75198(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_249F1FA78();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_249F1FAFC();
      v5 = sub_249F1FB08();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_249E75198(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_249E75234(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_249E752A0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_249E75234(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_249E72EEC(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_249E752A0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_249F1FAFC();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_249F1FA6C();
  }
  return result;
}

uint64_t sub_249E753B0(uint64_t a1)
{
  return sub_249DB6C14(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_249E753C4(uint64_t a1)
{
  return sub_249DB6ED8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_249E753D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249E75428(uint64_t a1)
{
  return sub_249DB7034(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_249E7543C(_QWORD *a1)
{
  return sub_249DB75D8(0, a1[2], 0, a1);
}

uint64_t sub_249E75450(uint64_t a1)
{
  return sub_249DB75EC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BD064D4](a1, v6, a5);
}

void ClientIdentity.init()(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_processName);
  v4 = sub_249F1F328();
  v6 = v5;

  LODWORD(v3) = objc_msgSend(v2, sel_processIdentifier);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = (_DWORD)v3;
}

uint64_t ClientIdentity.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientIdentity.pid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

void ClientIdentity.init(processInfo:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(a1, sel_processName);
  v5 = sub_249F1F328();
  v7 = v6;

  LODWORD(v4) = objc_msgSend(a1, sel_processIdentifier);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_DWORD *)(a2 + 16) = (_DWORD)v4;
}

uint64_t ClientIdentity.init(pid:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 16) = result;
  return result;
}

uint64_t ClientIdentity.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 8))
  {
    v2 = 34;
    sub_249F1F460();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
  }
  else
  {
    v2 = 0x20737365636F7270;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t ClientIdentity.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_249F1FF7C();
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_249F1FF7C();
  }
  return sub_249F1FF88();
}

uint64_t sub_249E75740()
{
  _BYTE *v0;

  if (*v0)
    return 6580592;
  else
    return 1701667182;
}

uint64_t sub_249E7576C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E760F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E75790()
{
  sub_249E75D3C();
  return sub_249F20024();
}

uint64_t sub_249E757B8()
{
  sub_249E75D3C();
  return sub_249F20030();
}

uint64_t ClientIdentity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC390);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_DWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E75D3C();
  sub_249F20018();
  v12 = 0;
  sub_249F1FD48();
  if (!v2)
  {
    v11 = 1;
    sub_249F1FDD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t ClientIdentity.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_249F1FF64();
  sub_249F1FF7C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    swift_bridgeObjectRelease();
  }
  sub_249F1FF88();
  return sub_249F1FFA0();
}

uint64_t ClientIdentity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC3A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E75D3C();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_249F1FC7C();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_249F1FD0C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E75B10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientIdentity.init(from:)(a1, a2);
}

uint64_t sub_249E75B24(_QWORD *a1)
{
  return ClientIdentity.encode(to:)(a1);
}

uint64_t sub_249E75B38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_249F1FF64();
  sub_249F1FF7C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    swift_bridgeObjectRelease();
  }
  sub_249F1FF88();
  return sub_249F1FFA0();
}

uint64_t sub_249E75BC4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_249F1FF7C();
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_249F1FF7C();
  }
  return sub_249F1FF88();
}

uint64_t sub_249E75C38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_249F1FF64();
  sub_249F1FF7C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    swift_bridgeObjectRelease();
  }
  sub_249F1FF88();
  return sub_249F1FFA0();
}

BOOL _s16VisualGeneration14ClientIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  char v8;
  _BOOL8 result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a2 + 16);
  if (!v3)
  {
    if (!v5)
      return v4 == v6;
    return 0;
  }
  if (!v5)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v5)
    return v4 == v6;
  v8 = sub_249F1FE2C();
  result = 0;
  if ((v8 & 1) != 0)
    return v4 == v6;
  return result;
}

unint64_t sub_249E75D3C()
{
  unint64_t result;

  result = qword_2578DC398;
  if (!qword_2578DC398)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CC14, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC398);
  }
  return result;
}

unint64_t sub_249E75D84()
{
  unint64_t result;

  result = qword_2578DC3A8;
  if (!qword_2578DC3A8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ClientIdentity, &type metadata for ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_2578DC3A8);
  }
  return result;
}

uint64_t sub_249E75DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientIdentity(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 20) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientIdentity()
{
  return &type metadata for ClientIdentity;
}

uint64_t storeEnumTagSinglePayload for ClientIdentity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E75F9C + 4 * byte_249F2CA45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E75FD0 + 4 * asc_249F2CA40[v4]))();
}

uint64_t sub_249E75FD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E75FD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E75FE0);
  return result;
}

uint64_t sub_249E75FEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E75FF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E75FF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E76000(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientIdentity.CodingKeys()
{
  return &type metadata for ClientIdentity.CodingKeys;
}

unint64_t sub_249E76020()
{
  unint64_t result;

  result = qword_2578DC3B0;
  if (!qword_2578DC3B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CBEC, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC3B0);
  }
  return result;
}

unint64_t sub_249E76068()
{
  unint64_t result;

  result = qword_2578DC3B8;
  if (!qword_2578DC3B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CB5C, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC3B8);
  }
  return result;
}

unint64_t sub_249E760B0()
{
  unint64_t result;

  result = qword_2578DC3C0;
  if (!qword_2578DC3C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CB84, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC3C0);
  }
  return result;
}

uint64_t sub_249E760F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6580592 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_249E761C4(uint64_t a1, char *a2)
{
  sub_249E76544(a1, *a2);
}

void sub_249E761DC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E48);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E50);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_249F1E6B0();
  MEMORY[0x24BDAC7A8](v6);
  __asm { BR              X10 }
}

uint64_t sub_249E76338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  sub_249F1E6A4();
  sub_249F1E65C();
  *(_QWORD *)(v5 - 96) = 0x7D74706D6F72707BLL;
  *(_QWORD *)(v5 - 88) = 0xE800000000000000;
  v6 = sub_249F1E92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_249F1E650();
  sub_249E21848();
  sub_249D9E5BC();
  sub_249F1E758();
  sub_249DCC2FC(v4, &qword_2578D8E48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v1, 1, v2) == 1)
  {
    v7 = &qword_2578D8E50;
    v8 = v1;
  }
  else
  {
    sub_249E76CC0(v1, v3);
    sub_249E58288();
    sub_249F1E5A8();
    v7 = &qword_2578D6C30;
    v8 = v3;
  }
  sub_249DCC2FC(v8, v7);
  return sub_249E0B4D8(v5 - 96);
}

void sub_249E76544(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E48);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E50);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_249F1E6B0();
  MEMORY[0x24BDAC7A8](v6);
  __asm { BR              X10 }
}

uint64_t sub_249E766A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  sub_249F1E6A4();
  sub_249F1E65C();
  *(_QWORD *)(v5 - 96) = 0x7D74706D6F72707BLL;
  *(_QWORD *)(v5 - 88) = 0xE800000000000000;
  v6 = sub_249F1E92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_249F1E650();
  sub_249E21848();
  sub_249D9E5BC();
  sub_249F1E758();
  sub_249DCC2FC(v4, &qword_2578D8E48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v1, 1, v2) == 1)
  {
    v7 = &qword_2578D8E50;
    v8 = v1;
  }
  else
  {
    sub_249E76CC0(v1, v3);
    sub_249E58288();
    sub_249F1E5A8();
    v7 = &qword_2578D6C30;
    v8 = v3;
  }
  sub_249DCC2FC(v8, v7);
  return sub_249E0B4D8(v5 - 96);
}

void sub_249E768AC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E48);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E50);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_249F1E6B0();
  MEMORY[0x24BDAC7A8](v6);
  __asm { BR              X10 }
}

uint64_t sub_249E769F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  sub_249F1E6A4();
  sub_249F1E65C();
  *(_QWORD *)(v5 - 96) = 0x7D74706D6F72707BLL;
  *(_QWORD *)(v5 - 88) = 0xE800000000000000;
  v6 = sub_249F1E92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_249F1E650();
  sub_249E21848();
  sub_249D9E5BC();
  sub_249F1E758();
  sub_249DCC2FC(v4, &qword_2578D8E48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v1, 1, v2) == 1)
  {
    v7 = &qword_2578D8E50;
    v8 = v1;
  }
  else
  {
    sub_249E76CC0(v1, v3);
    sub_249E58288();
    sub_249F1E5A8();
    v7 = &qword_2578D6C30;
    v8 = v3;
  }
  sub_249DCC2FC(v8, v7);
  return sub_249E0B4D8(v5 - 96);
}

uint64_t sub_249E76C20(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char v5;

  v3 = *a1;
  v4 = sub_249E91414();
  v5 = sub_249E3A9F4(v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
    return 0;
  if (*(_QWORD *)(a2 + 16))
    return sub_249E3A9F4(v3, a2);
  return 1;
}

void sub_249E76C98(uint64_t a1, char *a2)
{
  sub_249E768AC(a1, *a2);
}

void sub_249E76CA4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
}

void sub_249E76CB8(uint64_t a1, char *a2)
{
  sub_249E761DC(a1, *a2);
}

uint64_t sub_249E76CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ResourcesUnavailableError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_249E76D3C()
{
  return 0xD000000000000015;
}

uint64_t sub_249E76D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E773A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249E76D80()
{
  sub_249E76EBC();
  return sub_249F20024();
}

uint64_t sub_249E76DA8()
{
  sub_249E76EBC();
  return sub_249F20030();
}

uint64_t ResourcesUnavailableError.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC3C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E76EBC();
  sub_249F20018();
  sub_249F1FD90();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_249E76EBC()
{
  unint64_t result;

  result = qword_2578DC3D0;
  if (!qword_2578DC3D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CEC0, &type metadata for ResourcesUnavailableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC3D0);
  }
  return result;
}

uint64_t ResourcesUnavailableError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC3D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E76EBC();
  sub_249F1FFF4();
  if (!v2)
  {
    v9 = sub_249F1FCC4();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_249E7701C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249E77050();
  a1[2] = sub_249E77094();
  result = sub_249E770D8();
  a1[3] = result;
  return result;
}

unint64_t sub_249E77050()
{
  unint64_t result;

  result = qword_2578DC3E0;
  if (!qword_2578DC3E0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ResourcesUnavailableError, &type metadata for ResourcesUnavailableError);
    atomic_store(result, (unint64_t *)&qword_2578DC3E0);
  }
  return result;
}

unint64_t sub_249E77094()
{
  unint64_t result;

  result = qword_2578DC3E8;
  if (!qword_2578DC3E8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ResourcesUnavailableError, &type metadata for ResourcesUnavailableError);
    atomic_store(result, (unint64_t *)&qword_2578DC3E8);
  }
  return result;
}

unint64_t sub_249E770D8()
{
  unint64_t result;

  result = qword_2578DC3F0;
  if (!qword_2578DC3F0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ResourcesUnavailableError, &type metadata for ResourcesUnavailableError);
    atomic_store(result, (unint64_t *)&qword_2578DC3F0);
  }
  return result;
}

uint64_t sub_249E77120@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ResourcesUnavailableError.init(from:)(a1, a2);
}

uint64_t sub_249E77134(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC3C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E76EBC();
  sub_249F20018();
  sub_249F1FD90();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for ResourcesUnavailableError()
{
  return &type metadata for ResourcesUnavailableError;
}

uint64_t storeEnumTagSinglePayload for ResourcesUnavailableError.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E77270 + 4 * asc_249F2CCB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E77290 + 4 * byte_249F2CCB5[v4]))();
}

_BYTE *sub_249E77270(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E77290(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E77298(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E772A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E772A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E772B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResourcesUnavailableError.CodingKeys()
{
  return &type metadata for ResourcesUnavailableError.CodingKeys;
}

unint64_t sub_249E772D0()
{
  unint64_t result;

  result = qword_2578DC3F8;
  if (!qword_2578DC3F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CE98, &type metadata for ResourcesUnavailableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC3F8);
  }
  return result;
}

unint64_t sub_249E77318()
{
  unint64_t result;

  result = qword_2578DC400;
  if (!qword_2578DC400)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CE08, &type metadata for ResourcesUnavailableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC400);
  }
  return result;
}

unint64_t sub_249E77360()
{
  unint64_t result;

  result = qword_2578DC408;
  if (!qword_2578DC408)
  {
    result = MEMORY[0x24BD06528](&unk_249F2CE30, &type metadata for ResourcesUnavailableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC408);
  }
  return result;
}

uint64_t sub_249E773A4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000249F37BA0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_249E77428(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0xD000000000000018;
}

unint64_t sub_249E77484()
{
  char *v0;

  return sub_249E77428(*v0);
}

uint64_t sub_249E7748C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E7B0BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E774B0()
{
  sub_249E77668();
  return sub_249F20024();
}

uint64_t sub_249E774D8()
{
  sub_249E77668();
  return sub_249F20030();
}

uint64_t GeneratorError.VersionTriple.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC410);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E77668();
  sub_249F20018();
  v14 = 0;
  v9 = v11[5];
  sub_249F1FD90();
  if (!v9)
  {
    v13 = 1;
    sub_249F1FD48();
    v12 = 2;
    sub_249F1FD48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_249E77668()
{
  unint64_t result;

  result = qword_2578DC418;
  if (!qword_2578DC418)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DD38, &type metadata for GeneratorError.VersionTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC418);
  }
  return result;
}

uint64_t GeneratorError.VersionTriple.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC420);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E77668();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_249F1FCC4();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_249F1FC7C();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_249F1FC7C();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E778D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return GeneratorError.VersionTriple.init(from:)(a1, a2);
}

uint64_t sub_249E778EC(_QWORD *a1)
{
  return GeneratorError.VersionTriple.encode(to:)(a1);
}

void GeneratorError.errorDescription.getter()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_249E779E0()
{
  char v0;
  uint64_t v1;

  sub_249F1F2D4();
  sub_249F1F2C8();
  *(_BYTE *)(v1 - 104) = v0;
  sub_249F1F3AC();
  sub_249F1F2BC();
  swift_bridgeObjectRelease();
  sub_249F1F2C8();
  sub_249F1F2BC();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  return sub_249F1F388();
}

void sub_249E77C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    *(_QWORD *)(v4 - 160) = v3;
    *(_QWORD *)(v4 - 152) = v1;
    *(_QWORD *)(v4 - 144) = v0;
    *(_QWORD *)(v4 - 88) = v6;
    sub_249DB673C(0, v5, 0);
    v6 = *(_QWORD *)(v4 - 88);
    v7 = v2 + 40;
    *(_QWORD *)(v4 - 136) = 0x8000000249F37BC0;
    do
    {
      *(_QWORD *)(v4 - 128) = *(_QWORD *)(v7 + 24);
      *(_QWORD *)(v4 - 104) = 0;
      *(_QWORD *)(v4 - 96) = 0xE000000000000000;
      sub_249F1FA84();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 - 104) = 40;
      *(_QWORD *)(v4 - 96) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      swift_bridgeObjectRetain();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      swift_bridgeObjectRetain();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      v8 = *(_QWORD *)(v4 - 104);
      v9 = *(_QWORD *)(v4 - 96);
      *(_QWORD *)(v4 - 88) = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_249DB673C(v10 > 1, v11 + 1, 1);
        v6 = *(_QWORD *)(v4 - 88);
      }
      *(_QWORD *)(v6 + 16) = v11 + 1;
      v12 = v6 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      v7 += 48;
      --v5;
    }
    while (v5);
  }
  *(_QWORD *)(v4 - 104) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249E11B3C();
  sub_249F1F280();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 104) = 8283;
  *(_QWORD *)(v4 - 96) = 0xE200000000000000;
  sub_249F1F460();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v4 - 96);
  *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 104);
  *(_QWORD *)(v4 - 96) = v13;
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F2D4();
  sub_249F1F2C8();
  sub_249F1F2BC();
  swift_bridgeObjectRelease();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  JUMPOUT(0x249E77C34);
}

uint64_t sub_249E77F38(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_249E77F74 + 4 * byte_249F2CF22[a1]))(0xD000000000000015, 0x8000000249F37DC0);
}

uint64_t sub_249E77F74()
{
  uint64_t v0;

  return v0 + 5;
}

unint64_t sub_249E77FD8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_249E78000()
{
  unsigned __int8 *v0;

  return sub_249E77F38(*v0);
}

uint64_t sub_249E78008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E7B1F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_249E7802C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_249E78038()
{
  sub_249E79A1C();
  return sub_249F20024();
}

uint64_t sub_249E78060()
{
  sub_249E79A1C();
  return sub_249F20030();
}

uint64_t sub_249E78088()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6F73616572;
  else
    return 0xD000000000000011;
}

uint64_t sub_249E780C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E7B544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E780EC()
{
  sub_249E79AE8();
  return sub_249F20024();
}

uint64_t sub_249E78114()
{
  sub_249E79AE8();
  return sub_249F20030();
}

unint64_t sub_249E7813C()
{
  return 0xD000000000000018;
}

uint64_t sub_249E78158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E7B630(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249E78180()
{
  sub_249E79BF8();
  return sub_249F20024();
}

uint64_t sub_249E781A8()
{
  sub_249E79BF8();
  return sub_249F20030();
}

uint64_t sub_249E781D4()
{
  sub_249E79B70();
  return sub_249F20024();
}

uint64_t sub_249E781FC()
{
  sub_249E79B70();
  return sub_249F20030();
}

uint64_t sub_249E78224()
{
  sub_249E79A60();
  return sub_249F20024();
}

uint64_t sub_249E7824C()
{
  sub_249E79A60();
  return sub_249F20030();
}

uint64_t sub_249E78274()
{
  sub_249E79B2C();
  return sub_249F20024();
}

uint64_t sub_249E7829C()
{
  sub_249E79B2C();
  return sub_249F20030();
}

uint64_t sub_249E782C4()
{
  sub_249E79BB4();
  return sub_249F20024();
}

uint64_t sub_249E782EC()
{
  sub_249E79BB4();
  return sub_249F20030();
}

uint64_t sub_249E78314()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000018;
  else
    return 12383;
}

uint64_t sub_249E78348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E7B6B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E7836C()
{
  sub_249E79CC4();
  return sub_249F20024();
}

uint64_t sub_249E78394()
{
  sub_249E79CC4();
  return sub_249F20030();
}

uint64_t sub_249E783BC()
{
  sub_249E79C80();
  return sub_249F20024();
}

uint64_t sub_249E783E4()
{
  sub_249E79C80();
  return sub_249F20030();
}

uint64_t sub_249E7840C()
{
  sub_249E79C3C();
  return sub_249F20024();
}

uint64_t sub_249E78434()
{
  sub_249E79C3C();
  return sub_249F20030();
}

void GeneratorError.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC428);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v33 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC430);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v35 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC438);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC440);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC448);
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v19 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC450);
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v17[2] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC458);
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v24 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC460);
  v17[1] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC468);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC470);
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v15 = *v1;
  v40 = v1[1];
  v41 = v15;
  v39 = v1[2];
  v16 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E79A1C();
  sub_249F20018();
  __asm { BR              X9 }
}

uint64_t sub_249E787A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 72) = 0;
  sub_249E79CC4();
  v5 = *(_QWORD *)(v4 - 112);
  sub_249F1FD3C();
  *(_BYTE *)(v4 - 72) = *(_QWORD *)(v4 - 128);
  *(_BYTE *)(v4 - 89) = 0;
  sub_249E0B6E4();
  v6 = *(_QWORD *)(v4 - 104);
  sub_249F1FDCC();
  if (!v6)
  {
    *(_BYTE *)(v4 - 72) = 1;
    sub_249F1FD90();
  }
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v2, v5);
}

uint64_t GeneratorError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD v32[6];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;

  v48 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC4E8);
  v4 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v44 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC4F0);
  v41 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v54 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC4F8);
  v42 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC500);
  v9 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  v40 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC508);
  v32[3] = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v45 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC510);
  v32[4] = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v46 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC518);
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v50 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC520);
  v32[5] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v47 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC528);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC530);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_249E79A1C();
  v25 = v56;
  sub_249F1FFF4();
  if (!v25)
  {
    v32[2] = v19;
    v32[0] = v17;
    v32[1] = v16;
    v56 = 0;
    v26 = sub_249F1FD24();
    if (*(_QWORD *)(v26 + 16) == 1)
      __asm { BR              X10 }
    v27 = sub_249F1FAF0();
    swift_allocError();
    v28 = v23;
    v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v30 = &type metadata for GeneratorError;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

void sub_249E794A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 72) = 6;
  sub_249E79B2C();
  v6 = *(_QWORD *)(v5 - 104);
  sub_249F1FC64();
  if (!v6)
  {
    sub_249F1FCC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 216) + 8))(v0, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    JUMPOUT(0x249E799D4);
  }
  JUMPOUT(0x249E79460);
}

void sub_249E79520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 128) = a1;
  *(_BYTE *)(v5 - 72) = 7;
  sub_249E79AE8();
  v6 = *(_QWORD *)(v5 - 104);
  sub_249F1FC64();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
    JUMPOUT(0x249E79478);
  }
  *(_BYTE *)(v5 - 72) = 0;
  v7 = *(_QWORD *)(v5 - 264);
  *(_QWORD *)(v5 - 136) = sub_249F1FCC4();
  *(_QWORD *)(v5 - 104) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  *(_BYTE *)(v5 - 89) = 1;
  sub_249E79DB4(&qword_2578DC548, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_249F1FD00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 224) + 8))(v3, v7);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  JUMPOUT(0x249E799DCLL);
}

uint64_t sub_249E799F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GeneratorError.init(from:)(a1, a2);
}

void sub_249E79A08(_QWORD *a1)
{
  GeneratorError.encode(to:)(a1);
}

unint64_t sub_249E79A1C()
{
  unint64_t result;

  result = qword_2578DC478;
  if (!qword_2578DC478)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DCE8, &type metadata for GeneratorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC478);
  }
  return result;
}

unint64_t sub_249E79A60()
{
  unint64_t result;

  result = qword_2578DC480;
  if (!qword_2578DC480)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DC98, &type metadata for GeneratorError.MismatchedModelCatalogAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC480);
  }
  return result;
}

unint64_t sub_249E79AA4()
{
  unint64_t result;

  result = qword_2578DC498;
  if (!qword_2578DC498)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GeneratorError.VersionTriple, &type metadata for GeneratorError.VersionTriple);
    atomic_store(result, (unint64_t *)&qword_2578DC498);
  }
  return result;
}

unint64_t sub_249E79AE8()
{
  unint64_t result;

  result = qword_2578DC4A0;
  if (!qword_2578DC4A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DC48, &type metadata for GeneratorError.GenerativeModelsNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4A0);
  }
  return result;
}

unint64_t sub_249E79B2C()
{
  unint64_t result;

  result = qword_2578DC4B0;
  if (!qword_2578DC4B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DBF8, &type metadata for GeneratorError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4B0);
  }
  return result;
}

unint64_t sub_249E79B70()
{
  unint64_t result;

  result = qword_2578DC4B8;
  if (!qword_2578DC4B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DBA8, &type metadata for GeneratorError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4B8);
  }
  return result;
}

unint64_t sub_249E79BB4()
{
  unint64_t result;

  result = qword_2578DC4C0;
  if (!qword_2578DC4C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DB58, &type metadata for GeneratorError.UnspecifiedGoalsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4C0);
  }
  return result;
}

unint64_t sub_249E79BF8()
{
  unint64_t result;

  result = qword_2578DC4C8;
  if (!qword_2578DC4C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DB08, &type metadata for GeneratorError.ImageStyleRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4C8);
  }
  return result;
}

unint64_t sub_249E79C3C()
{
  unint64_t result;

  result = qword_2578DC4D0;
  if (!qword_2578DC4D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DAB8, &type metadata for GeneratorError.UnsupportedRetonedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4D0);
  }
  return result;
}

unint64_t sub_249E79C80()
{
  unint64_t result;

  result = qword_2578DC4D8;
  if (!qword_2578DC4D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DA68, &type metadata for GeneratorError.UnsupportedPersonalizedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4D8);
  }
  return result;
}

unint64_t sub_249E79CC4()
{
  unint64_t result;

  result = qword_2578DC4E0;
  if (!qword_2578DC4E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2DA18, &type metadata for GeneratorError.UnsupportedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC4E0);
  }
  return result;
}

uint64_t sub_249E79D08(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578DC488);
    v8 = a2();
    result = MEMORY[0x24BD06528](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E79D70()
{
  unint64_t result;

  result = qword_2578DC540;
  if (!qword_2578DC540)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GeneratorError.VersionTriple, &type metadata for GeneratorError.VersionTriple);
    atomic_store(result, (unint64_t *)&qword_2578DC540);
  }
  return result;
}

uint64_t sub_249E79DB4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8E30);
    v8 = a2;
    result = MEMORY[0x24BD06528](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E79E18(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249E79E4C();
  a1[2] = sub_249E79E90();
  result = sub_249DD9530();
  a1[3] = result;
  return result;
}

unint64_t sub_249E79E4C()
{
  unint64_t result;

  result = qword_2578DC550;
  if (!qword_2578DC550)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GeneratorError, &type metadata for GeneratorError);
    atomic_store(result, (unint64_t *)&qword_2578DC550);
  }
  return result;
}

unint64_t sub_249E79E90()
{
  unint64_t result;

  result = qword_2578DC558;
  if (!qword_2578DC558)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GeneratorError, &type metadata for GeneratorError);
    atomic_store(result, (unint64_t *)&qword_2578DC558);
  }
  return result;
}

uint64_t sub_249E79ED4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      goto LABEL_3;
    case 6:
      swift_bridgeObjectRetain();
LABEL_3:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for GeneratorError(uint64_t a1)
{
  return sub_249E79F4C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_249E79F4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      goto LABEL_3;
    case 6:
      swift_bridgeObjectRelease();
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for GeneratorError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_249E79ED4(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for GeneratorError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_249E79ED4(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_249E79F4C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GeneratorError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_249E79F4C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratorError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneratorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 248;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_249E7A154(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 7u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_249E7A16C(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 8;
  if (a2 >= 8)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 8;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GeneratorError()
{
  return &type metadata for GeneratorError;
}

uint64_t destroy for GeneratorError.VersionTriple()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for GeneratorError.VersionTriple(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GeneratorError.VersionTriple(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for GeneratorError.VersionTriple(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratorError.VersionTriple(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneratorError.VersionTriple(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneratorError.VersionTriple()
{
  return &type metadata for GeneratorError.VersionTriple;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionAdapter(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneratorError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_249E7A490 + 4 * byte_249F2CF65[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_249E7A4C4 + 4 * byte_249F2CF60[v4]))();
}

uint64_t sub_249E7A4C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7A4CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E7A4D4);
  return result;
}

uint64_t sub_249E7A4E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E7A4E8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_249E7A4EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7A4F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneratorError.CodingKeys()
{
  return &type metadata for GeneratorError.CodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.UnsupportedImageStyleCodingKeys()
{
  return &type metadata for GeneratorError.UnsupportedImageStyleCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.UnsupportedPersonalizedImageStyleCodingKeys()
{
  return &type metadata for GeneratorError.UnsupportedPersonalizedImageStyleCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.UnsupportedRetonedImageStyleCodingKeys()
{
  return &type metadata for GeneratorError.UnsupportedRetonedImageStyleCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.ImageStyleRequiredCodingKeys()
{
  return &type metadata for GeneratorError.ImageStyleRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.UnspecifiedGoalsCodingKeys()
{
  return &type metadata for GeneratorError.UnspecifiedGoalsCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.InvalidConfigurationCodingKeys()
{
  return &type metadata for GeneratorError.InvalidConfigurationCodingKeys;
}

ValueMetadata *type metadata accessor for GeneratorError.UnexpectedConditionCodingKeys()
{
  return &type metadata for GeneratorError.UnexpectedConditionCodingKeys;
}

uint64_t _s16VisualGeneration14GeneratorErrorO31UnsupportedImageStyleCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E7A5D4 + 4 * byte_249F2CF6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E7A608 + 4 * byte_249F2CF6A[v4]))();
}

uint64_t sub_249E7A608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7A610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E7A618);
  return result;
}

uint64_t sub_249E7A624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E7A62CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E7A630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7A638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneratorError.GenerativeModelsNotAvailableCodingKeys()
{
  return &type metadata for GeneratorError.GenerativeModelsNotAvailableCodingKeys;
}

uint64_t _s16VisualGeneration14GeneratorErrorO28ImageStyleRequiredCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E7A694 + 4 * byte_249F2CF74[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E7A6B4 + 4 * byte_249F2CF79[v4]))();
}

_BYTE *sub_249E7A694(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E7A6B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E7A6BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E7A6C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E7A6CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E7A6D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GeneratorError.MismatchedModelCatalogAssetsCodingKeys()
{
  return &type metadata for GeneratorError.MismatchedModelCatalogAssetsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for GeneratorError.VersionTriple.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E7A73C + 4 * byte_249F2CF83[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E7A770 + 4 * byte_249F2CF7E[v4]))();
}

uint64_t sub_249E7A770(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7A778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E7A780);
  return result;
}

uint64_t sub_249E7A78C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E7A794);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E7A798(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7A7A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneratorError.VersionTriple.CodingKeys()
{
  return &type metadata for GeneratorError.VersionTriple.CodingKeys;
}

unint64_t sub_249E7A7C0()
{
  unint64_t result;

  result = qword_2578DC560;
  if (!qword_2578DC560)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D328, &type metadata for GeneratorError.VersionTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC560);
  }
  return result;
}

unint64_t sub_249E7A808()
{
  unint64_t result;

  result = qword_2578DC568;
  if (!qword_2578DC568)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D3E0, &type metadata for GeneratorError.MismatchedModelCatalogAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC568);
  }
  return result;
}

unint64_t sub_249E7A850()
{
  unint64_t result;

  result = qword_2578DC570;
  if (!qword_2578DC570)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D498, &type metadata for GeneratorError.GenerativeModelsNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC570);
  }
  return result;
}

unint64_t sub_249E7A898()
{
  unint64_t result;

  result = qword_2578DC578;
  if (!qword_2578DC578)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D550, &type metadata for GeneratorError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC578);
  }
  return result;
}

unint64_t sub_249E7A8E0()
{
  unint64_t result;

  result = qword_2578DC580;
  if (!qword_2578DC580)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D608, &type metadata for GeneratorError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC580);
  }
  return result;
}

unint64_t sub_249E7A928()
{
  unint64_t result;

  result = qword_2578DC588;
  if (!qword_2578DC588)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D710, &type metadata for GeneratorError.ImageStyleRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC588);
  }
  return result;
}

unint64_t sub_249E7A970()
{
  unint64_t result;

  result = qword_2578DC590;
  if (!qword_2578DC590)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D7C8, &type metadata for GeneratorError.UnsupportedRetonedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC590);
  }
  return result;
}

unint64_t sub_249E7A9B8()
{
  unint64_t result;

  result = qword_2578DC598;
  if (!qword_2578DC598)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D880, &type metadata for GeneratorError.UnsupportedPersonalizedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC598);
  }
  return result;
}

unint64_t sub_249E7AA00()
{
  unint64_t result;

  result = qword_2578DC5A0;
  if (!qword_2578DC5A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D938, &type metadata for GeneratorError.UnsupportedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5A0);
  }
  return result;
}

unint64_t sub_249E7AA48()
{
  unint64_t result;

  result = qword_2578DC5A8;
  if (!qword_2578DC5A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D9F0, &type metadata for GeneratorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5A8);
  }
  return result;
}

unint64_t sub_249E7AA90()
{
  unint64_t result;

  result = qword_2578DC5B0;
  if (!qword_2578DC5B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D8A8, &type metadata for GeneratorError.UnsupportedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5B0);
  }
  return result;
}

unint64_t sub_249E7AAD8()
{
  unint64_t result;

  result = qword_2578DC5B8;
  if (!qword_2578DC5B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D8D0, &type metadata for GeneratorError.UnsupportedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5B8);
  }
  return result;
}

unint64_t sub_249E7AB20()
{
  unint64_t result;

  result = qword_2578DC5C0;
  if (!qword_2578DC5C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D7F0, &type metadata for GeneratorError.UnsupportedPersonalizedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5C0);
  }
  return result;
}

unint64_t sub_249E7AB68()
{
  unint64_t result;

  result = qword_2578DC5C8;
  if (!qword_2578DC5C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D818, &type metadata for GeneratorError.UnsupportedPersonalizedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5C8);
  }
  return result;
}

unint64_t sub_249E7ABB0()
{
  unint64_t result;

  result = qword_2578DC5D0;
  if (!qword_2578DC5D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D738, &type metadata for GeneratorError.UnsupportedRetonedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5D0);
  }
  return result;
}

unint64_t sub_249E7ABF8()
{
  unint64_t result;

  result = qword_2578DC5D8;
  if (!qword_2578DC5D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D760, &type metadata for GeneratorError.UnsupportedRetonedImageStyleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5D8);
  }
  return result;
}

unint64_t sub_249E7AC40()
{
  unint64_t result;

  result = qword_2578DC5E0;
  if (!qword_2578DC5E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D680, &type metadata for GeneratorError.ImageStyleRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5E0);
  }
  return result;
}

unint64_t sub_249E7AC88()
{
  unint64_t result;

  result = qword_2578DC5E8;
  if (!qword_2578DC5E8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D6A8, &type metadata for GeneratorError.ImageStyleRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5E8);
  }
  return result;
}

unint64_t sub_249E7ACD0()
{
  unint64_t result;

  result = qword_2578DC5F0;
  if (!qword_2578DC5F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D630, &type metadata for GeneratorError.UnspecifiedGoalsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5F0);
  }
  return result;
}

unint64_t sub_249E7AD18()
{
  unint64_t result;

  result = qword_2578DC5F8;
  if (!qword_2578DC5F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D658, &type metadata for GeneratorError.UnspecifiedGoalsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC5F8);
  }
  return result;
}

unint64_t sub_249E7AD60()
{
  unint64_t result;

  result = qword_2578DC600;
  if (!qword_2578DC600)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D578, &type metadata for GeneratorError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC600);
  }
  return result;
}

unint64_t sub_249E7ADA8()
{
  unint64_t result;

  result = qword_2578DC608;
  if (!qword_2578DC608)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D5A0, &type metadata for GeneratorError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC608);
  }
  return result;
}

unint64_t sub_249E7ADF0()
{
  unint64_t result;

  result = qword_2578DC610;
  if (!qword_2578DC610)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D4C0, &type metadata for GeneratorError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC610);
  }
  return result;
}

unint64_t sub_249E7AE38()
{
  unint64_t result;

  result = qword_2578DC618;
  if (!qword_2578DC618)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D4E8, &type metadata for GeneratorError.UnexpectedConditionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC618);
  }
  return result;
}

unint64_t sub_249E7AE80()
{
  unint64_t result;

  result = qword_2578DC620;
  if (!qword_2578DC620)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D408, &type metadata for GeneratorError.GenerativeModelsNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC620);
  }
  return result;
}

unint64_t sub_249E7AEC8()
{
  unint64_t result;

  result = qword_2578DC628;
  if (!qword_2578DC628)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D430, &type metadata for GeneratorError.GenerativeModelsNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC628);
  }
  return result;
}

unint64_t sub_249E7AF10()
{
  unint64_t result;

  result = qword_2578DC630;
  if (!qword_2578DC630)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D350, &type metadata for GeneratorError.MismatchedModelCatalogAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC630);
  }
  return result;
}

unint64_t sub_249E7AF58()
{
  unint64_t result;

  result = qword_2578DC638;
  if (!qword_2578DC638)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D378, &type metadata for GeneratorError.MismatchedModelCatalogAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC638);
  }
  return result;
}

unint64_t sub_249E7AFA0()
{
  unint64_t result;

  result = qword_2578DC640;
  if (!qword_2578DC640)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D960, &type metadata for GeneratorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC640);
  }
  return result;
}

unint64_t sub_249E7AFE8()
{
  unint64_t result;

  result = qword_2578DC648;
  if (!qword_2578DC648)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D988, &type metadata for GeneratorError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC648);
  }
  return result;
}

unint64_t sub_249E7B030()
{
  unint64_t result;

  result = qword_2578DC650;
  if (!qword_2578DC650)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D298, &type metadata for GeneratorError.VersionTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC650);
  }
  return result;
}

unint64_t sub_249E7B078()
{
  unint64_t result;

  result = qword_2578DC658;
  if (!qword_2578DC658)
  {
    result = MEMORY[0x24BD06528](&unk_249F2D2C0, &type metadata for GeneratorError.VersionTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC658);
  }
  return result;
}

uint64_t sub_249E7B0BC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000249F37D60 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249F37D80 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249F37DA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249E7B1F8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000249F37DC0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000249F37DE0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249F37E10 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249F37E30 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249F37E50 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249F37E70 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249F35020 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249F37E90 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249F37EB0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_249E7B544(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000249F37ED0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F73616572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249E7B630(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x8000000249F37EF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_249E7B6B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249F37EF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249E7B790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = v3;
  v4[13] = a1;
  v5 = sub_249F1E8D8();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E7B7F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 120)
                + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v5 = (_OWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 112);
    type metadata accessor for UnsupportedArchitectureImageGenerator();
    v7 = swift_allocObject();
    *(_QWORD *)(v0 + 152) = v7;
    *(_OWORD *)(v7 + 16) = xmmword_249F27E00;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(_QWORD *)(v6 + 16);
    if (v8)
    {
      *(_QWORD *)(v0 + 40) = &type metadata for ImageGeneratorDelegateOperationProgressHandler;
      *(_QWORD *)(v0 + 48) = &off_251B532C8;
      *(_QWORD *)(v0 + 16) = v8;
      *(_QWORD *)(v0 + 24) = v9;
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *v5 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    v10 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 16))(v10, v11 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__id, *(_QWORD *)(v0 + 128));
    *(_QWORD *)(v0 + 80) = type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation();
    *(_QWORD *)(v0 + 88) = &off_251B58258;
    *(_QWORD *)(v0 + 56) = v11;
    sub_249DC09B8(v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v13;
    v13[2] = v10;
    v13[3] = v10;
    v13[4] = v0 + 56;
    v13[5] = v5;
    v13[6] = v12;
    v13[7] = v7;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v14;
    *v14 = v0;
    v14[1] = sub_249E7BA30;
    return sub_249F1FC58();
  }
}

uint64_t sub_249E7BA30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E7BA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_249DD94CC(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_249E7BB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  sub_249DD94CC(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E7BBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__canceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249E7BC00()
{
  return type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation();
}

uint64_t type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation()
{
  uint64_t result;

  result = qword_2578DC698;
  if (!qword_2578DC698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E7BC44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249E7BCB8@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation();
  v6 = swift_allocObject();
  v7 = v6 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__id;
  v8 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  result = sub_249D9E174(a2, v6 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__canceller);
  *a3 = v6;
  return result;
}

uint64_t sub_249E7BD48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_249E7BD68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 32)
                + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
  }
  else
  {
    sub_249F1F670();
    sub_249DFB638(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E7BE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_249DDB798;
  return sub_249E7B790(a1, v7, a3);
}

uint64_t sub_249E7BE98(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F2DE80, a1);
  return sub_249D9E63C();
}

uint64_t sub_249E7BECC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E7BF14()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E7BF68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC16VisualGeneration50InProcessUnsupportedArchitectureGeneratorOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_249E7BFB8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249D9BBEC(&qword_2578DC758, (uint64_t (*)(uint64_t))type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation, (uint64_t)&unk_249F2DE58);
  result = sub_249D9BBEC(qword_2578DC760, (uint64_t (*)(uint64_t))type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation, (uint64_t)&unk_249F2DE20);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249E7C014(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578DC778, (uint64_t (*)(uint64_t))type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation, (uint64_t)&unk_249F2DE80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249E7C050(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578D9418, (uint64_t (*)(uint64_t))type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation, (uint64_t)&unk_249F2DE9C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t GenerationState.save(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_249F1E470();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8];
  MEMORY[0x24BDAC7A8](v1);
  sub_249F1E4B8();
  swift_allocObject();
  sub_249F1E4AC();
  sub_249D9BBEC(&qword_2578D9F90, v2, MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9F98);
  sub_249E34FE0();
  sub_249F1FA0C();
  sub_249F1E47C();
  type metadata accessor for GenerationState();
  sub_249D9BBEC(&qword_2578DC780, (uint64_t (*)(uint64_t))type metadata accessor for GenerationState, (uint64_t)&protocol conformance descriptor for GenerationState);
  v3 = sub_249F1E488();
  if (!v0)
  {
    v5 = v3;
    v6 = v4;
    sub_249F1E848();
    sub_249DC3C24(v5, v6);
  }
  return swift_release();
}

uint64_t static GenerationState.load(from:)()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result = sub_249F1E800();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    sub_249F1E44C();
    swift_allocObject();
    sub_249F1E440();
    type metadata accessor for GenerationState();
    sub_249D9BBEC(&qword_2578DC788, (uint64_t (*)(uint64_t))type metadata accessor for GenerationState, (uint64_t)&protocol conformance descriptor for GenerationState);
    sub_249F1E428();
    swift_release();
    return sub_249DC3C24(v3, v4);
  }
  return result;
}

uint64_t GenerationState.definitionSessionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t GenerationState.generationID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for GenerationState() + 20);
  return sub_249E70728(v3, a1);
}

uint64_t type metadata accessor for GenerationState()
{
  uint64_t result;

  result = qword_2578DC800;
  if (!qword_2578DC800)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t GenerationState.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _WORD v13[8];
  uint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249F1E8D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0x206E6F6973736553;
  v15 = 0xE800000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, v9, MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  v10 = v14;
  v11 = type metadata accessor for GenerationState();
  sub_249E70728(v1 + *(int *)(v11 + 20), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_249E70770((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    strcpy((char *)v13, ", Generation ");
    v13[7] = -4864;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v14;
  }
  return v10;
}

uint64_t GenerationState.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GenerationState();
  v5 = (uint64_t *)(v0 + *(int *)(v4 + 24));
  v6 = v5[1];
  v8 = *v5;
  v9 = v6;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC098);
  sub_249F1F3AC();
  sub_249E70728(v0 + *(int *)(v4 + 20), (uint64_t)v3);
  sub_249F1F3AC();
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  v8 = 0x203A746E65696C43;
  v9 = 0xE800000000000000;
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t GenerationState.radarDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1E8D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v14 - v9;
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  v15 = 0x203A746E65696C43;
  v16 = 0xE800000000000000;
  v11 = type metadata accessor for GenerationState();
  if (*(_QWORD *)(v0 + *(int *)(v11 + 24) + 8))
  {
    v14[0] = 34;
    v14[1] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_249F1F460();
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v0, v4);
  sub_249F1F3AC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E70728(v0 + *(int *)(v11 + 20), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_249E70770((uint64_t)v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    v12(v10, (uint64_t)v8, v4);
    sub_249F1F3AC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E056CC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_249E7C9E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_249E7CA18 + 4 * byte_249F2DF00[*v0]))(0xD000000000000013, 0x8000000249F37F90);
}

uint64_t sub_249E7CA18()
{
  return 0x69746172656E6567;
}

uint64_t sub_249E7CA38()
{
  return 0x614E746E65696C63;
}

unint64_t sub_249E7CA54()
{
  return 0xD000000000000010;
}

uint64_t sub_249E7CA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E7FA1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E7CA94()
{
  sub_249E7CCD8();
  return sub_249F20024();
}

uint64_t sub_249E7CABC()
{
  sub_249E7CCD8();
  return sub_249F20030();
}

uint64_t GenerationState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC790);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E7CCD8();
  sub_249F20018();
  v12 = 0;
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D8108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_249F1FDCC();
  if (!v1)
  {
    type metadata accessor for GenerationState();
    v11 = 1;
    sub_249F1FD84();
    v10 = 2;
    sub_249F1FD48();
    v9 = 3;
    type metadata accessor for GenerationRecipe(0);
    sub_249D9BBEC(&qword_2578DC0A8, type metadata accessor for GenerationRecipe, (uint64_t)&unk_249F272E0);
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_249E7CCD8()
{
  unint64_t result;

  result = qword_2578DC798;
  if (!qword_2578DC798)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E10C, &type metadata for GenerationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC798);
  }
  return result;
}

uint64_t GenerationState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v31 = a2;
  v32 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x24BDAC7A8](v32);
  v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC7A0);
  v34 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GenerationState();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 20)];
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v36 = v6;
  v16(v15, 1, 1, v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E7CCD8();
  v38 = v10;
  v17 = (uint64_t)v40;
  sub_249F1FFF4();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_249E70770(v15);
  }
  else
  {
    v18 = v34;
    v19 = (uint64_t)v35;
    v30 = v11;
    v40 = a1;
    v44 = 0;
    sub_249D9BBEC(&qword_2578D8160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v20 = v36;
    sub_249F1FD00();
    v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v29 = v14;
    v21(v14, v37, v20);
    v43 = 1;
    sub_249F1FCB8();
    sub_249DC02EC(v19, v15);
    v42 = 2;
    v22 = sub_249F1FC7C();
    v24 = (uint64_t)v29;
    v23 = v30;
    v25 = (uint64_t *)&v29[*(int *)(v30 + 24)];
    *v25 = v22;
    v25[1] = v26;
    v41 = 3;
    sub_249D9BBEC(&qword_2578DC078, type metadata accessor for GenerationRecipe, (uint64_t)&unk_249F272B8);
    v27 = (uint64_t)v33;
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v38, v39);
    sub_249E0FA34(v27, v24 + *(int *)(v23 + 28));
    sub_249E7D11C(v24, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return sub_249DC05A8(v24, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  }
}

uint64_t sub_249E7D11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenerationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E7D160@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GenerationState.init(from:)(a1, a2);
}

uint64_t sub_249E7D174(_QWORD *a1)
{
  return GenerationState.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for GenerationState(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, int *);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void *v53;
  uint64_t v54;
  id v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void *v60;
  uint64_t v61;
  id v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void *v67;
  uint64_t v68;
  id v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void *v81;
  uint64_t v82;
  id v83;
  __int128 v84;
  _OWORD *v85;
  _OWORD *v86;
  void *v87;
  uint64_t v88;
  id v89;
  __int128 v90;
  uint64_t v91;
  char *v92;
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *__dst;
  char *v108;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v15 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_249F1E8D8();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = &a1[v16];
    v19 = &a2[v16];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v108 = a1;
    v21 = &a1[v17];
    v22 = &a2[v17];
    *v21 = a2[v17];
    v23 = *(_QWORD *)&a2[v17 + 16];
    *((_QWORD *)v21 + 1) = *(_QWORD *)&a2[v17 + 8];
    *((_QWORD *)v21 + 2) = v23;
    v21[40] = a2[v17 + 40];
    *(_OWORD *)(v21 + 24) = *(_OWORD *)&a2[v17 + 24];
    *((_QWORD *)v21 + 6) = *(_QWORD *)&a2[v17 + 48];
    *((_DWORD *)v21 + 14) = *(_DWORD *)&a2[v17 + 56];
    v21[60] = a2[v17 + 60];
    v21[61] = a2[v17 + 61];
    v21[62] = a2[v17 + 62];
    v25 = *(_QWORD *)&a2[v17 + 64];
    v24 = *(_QWORD *)&a2[v17 + 72];
    v21[80] = a2[v17 + 80];
    *((_QWORD *)v21 + 8) = v25;
    *((_QWORD *)v21 + 9) = v24;
    v26 = (int *)type metadata accessor for GenerationRecipe(0);
    v27 = v26[8];
    __dst = &v21[v27];
    v28 = &v22[v27];
    v29 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v30 = *((_QWORD *)v29 - 1);
    v31 = *(unsigned int (**)(char *, uint64_t, int *))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      v34(__dst, v28, v33);
      v34(&__dst[v29[5]], &v28[v29[5]], v33);
      v35 = v29[6];
      v36 = (uint64_t *)&__dst[v35];
      v37 = (uint64_t *)&v28[v35];
      if (*(_QWORD *)&v28[v35 + 16])
      {
        v38 = *v37;
        v39 = v37[1];
        sub_249DC3928(*v37, v39);
        *v36 = v38;
        v36[1] = v39;
        v36[2] = v37[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v36 = *(_OWORD *)v37;
        v36[2] = v37[2];
      }
      __dst[v29[7]] = v28[v29[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v30 + 56))(__dst, 0, 1, v29);
    }
    v15 = v108;
    v40 = v26[9];
    v41 = &v21[v40];
    v42 = &v22[v40];
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v43 = v26[10];
    v44 = &v21[v43];
    v45 = &v22[v43];
    v44[4] = v45[4];
    *(_DWORD *)v44 = *(_DWORD *)v45;
    v46 = v26[11];
    v47 = &v21[v46];
    v48 = &v22[v46];
    *(_WORD *)v47 = *(_WORD *)v48;
    v47[2] = v48[2];
    v49 = *((_QWORD *)v48 + 2);
    *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
    *((_QWORD *)v47 + 2) = v49;
    *(_QWORD *)&v21[v26[12]] = *(_QWORD *)&v22[v26[12]];
    *(_QWORD *)&v21[v26[13]] = *(_QWORD *)&v22[v26[13]];
    v50 = v26[14];
    v51 = &v21[v50];
    v52 = &v22[v50];
    v53 = *(void **)&v22[v50 + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53)
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_DWORD *)v51 + 4) = *((_DWORD *)v52 + 4);
      v54 = *((_QWORD *)v52 + 4);
      *((_QWORD *)v51 + 3) = v53;
      *((_QWORD *)v51 + 4) = v54;
      v55 = v53;
      swift_retain();
    }
    else
    {
      v56 = *((_OWORD *)v52 + 1);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v56;
      *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
    }
    v57 = v26[15];
    v58 = &v21[v57];
    v59 = &v22[v57];
    v60 = (void *)*((_QWORD *)v59 + 3);
    if (v60)
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_DWORD *)v58 + 4) = *((_DWORD *)v59 + 4);
      v61 = *((_QWORD *)v59 + 4);
      *((_QWORD *)v58 + 3) = v60;
      *((_QWORD *)v58 + 4) = v61;
      v62 = v60;
      swift_retain();
    }
    else
    {
      v63 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v63;
      *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
    }
    v64 = v26[16];
    v65 = &v21[v64];
    v66 = &v22[v64];
    v67 = (void *)*((_QWORD *)v66 + 3);
    if (v67)
    {
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_DWORD *)v65 + 4) = *((_DWORD *)v66 + 4);
      v68 = *((_QWORD *)v66 + 4);
      *((_QWORD *)v65 + 3) = v67;
      *((_QWORD *)v65 + 4) = v68;
      v69 = v67;
      swift_retain();
    }
    else
    {
      v70 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v70;
      *((_QWORD *)v65 + 4) = *((_QWORD *)v66 + 4);
    }
    v71 = v26[17];
    v72 = &v21[v71];
    v73 = &v22[v71];
    v74 = (void *)*((_QWORD *)v73 + 3);
    if (v74)
    {
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_DWORD *)v72 + 4) = *((_DWORD *)v73 + 4);
      v75 = *((_QWORD *)v73 + 4);
      *((_QWORD *)v72 + 3) = v74;
      *((_QWORD *)v72 + 4) = v75;
      v76 = v74;
      swift_retain();
    }
    else
    {
      v77 = *((_OWORD *)v73 + 1);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_OWORD *)v72 + 1) = v77;
      *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
    }
    v78 = v26[18];
    v79 = &v21[v78];
    v80 = &v22[v78];
    v81 = *(void **)&v22[v78 + 24];
    if (v81)
    {
      *(_OWORD *)v79 = *(_OWORD *)v80;
      *((_DWORD *)v79 + 4) = *((_DWORD *)v80 + 4);
      v82 = *((_QWORD *)v80 + 4);
      *((_QWORD *)v79 + 3) = v81;
      *((_QWORD *)v79 + 4) = v82;
      v83 = v81;
      swift_retain();
    }
    else
    {
      v84 = *((_OWORD *)v80 + 1);
      *(_OWORD *)v79 = *(_OWORD *)v80;
      *((_OWORD *)v79 + 1) = v84;
      *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
    }
    v85 = v79 + 40;
    v86 = v80 + 40;
    v87 = (void *)*((_QWORD *)v80 + 8);
    if (v87)
    {
      *v85 = *v86;
      *((_DWORD *)v79 + 14) = *((_DWORD *)v80 + 14);
      v88 = *((_QWORD *)v80 + 9);
      *((_QWORD *)v79 + 8) = v87;
      *((_QWORD *)v79 + 9) = v88;
      v89 = v87;
      swift_retain();
    }
    else
    {
      v90 = *(_OWORD *)(v80 + 56);
      *v85 = *v86;
      *(_OWORD *)(v79 + 56) = v90;
      *((_QWORD *)v79 + 9) = *((_QWORD *)v80 + 9);
    }
    v79[80] = v80[80];
    *(_QWORD *)&v21[v26[19]] = *(_QWORD *)&v22[v26[19]];
    v91 = v26[20];
    v92 = &v21[v91];
    v93 = &v22[v91];
    v94 = *(void **)&v22[v91 + 24];
    swift_bridgeObjectRetain();
    if (v94)
    {
      *(_OWORD *)v92 = *(_OWORD *)v93;
      *((_DWORD *)v92 + 4) = *((_DWORD *)v93 + 4);
      v95 = *((_QWORD *)v93 + 4);
      v96 = *((_QWORD *)v93 + 5);
      *((_QWORD *)v92 + 3) = v94;
      *((_QWORD *)v92 + 4) = v95;
      v97 = *((_QWORD *)v93 + 6);
      v98 = *((_QWORD *)v93 + 7);
      *((_QWORD *)v92 + 5) = v96;
      *((_QWORD *)v92 + 6) = v97;
      *((_QWORD *)v92 + 7) = v98;
      v99 = v94;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v100 = *((_OWORD *)v93 + 1);
      *(_OWORD *)v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v100;
      v101 = *((_OWORD *)v93 + 3);
      *((_OWORD *)v92 + 2) = *((_OWORD *)v93 + 2);
      *((_OWORD *)v92 + 3) = v101;
    }
    v102 = v26[21];
    v103 = &v21[v102];
    v104 = &v22[v102];
    v105 = *((_QWORD *)v104 + 1);
    *(_QWORD *)v103 = *(_QWORD *)v104;
    *((_QWORD *)v103 + 1) = v105;
    *((_QWORD *)v103 + 2) = *((_QWORD *)v104 + 2);
    *(_QWORD *)&v21[v26[22]] = *(_QWORD *)&v22[v26[22]];
    v21[v26[23]] = v22[v26[23]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t destroy for GenerationState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;

  v4 = sub_249F1E8D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for GenerationRecipe(0);
  v10 = v8 + v9[8];
  v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v13(v10, v12);
    v13(v10 + *(int *)(v11 + 20), v12);
    v14 = (uint64_t *)(v10 + *(int *)(v11 + 24));
    if (v14[2])
    {
      sub_249DC3C24(*v14, v14[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = *(void **)(v8 + v9[14] + 24);
  if (v15)
  {

    swift_release();
  }
  v16 = *(void **)(v8 + v9[15] + 24);
  if (v16)
  {

    swift_release();
  }
  v17 = *(void **)(v8 + v9[16] + 24);
  if (v17)
  {

    swift_release();
  }
  v18 = *(void **)(v8 + v9[17] + 24);
  if (v18)
  {

    swift_release();
  }
  v19 = v8 + v9[18];
  v20 = *(void **)(v19 + 24);
  if (v20)
  {

    swift_release();
  }
  v21 = *(void **)(v19 + 64);
  if (v21)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  v22 = *(void **)(v8 + v9[20] + 24);
  if (v22)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerationState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  int *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  __int128 v81;
  _OWORD *v82;
  _OWORD *v83;
  void *v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  char *__dst;
  uint64_t v105;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v105 = a1;
  v18 = a1 + v14;
  v19 = a2 + v14;
  *(_BYTE *)v18 = *(_BYTE *)(a2 + v14);
  v20 = *(_QWORD *)(a2 + v14 + 16);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  *(_BYTE *)(v18 + 40) = *(_BYTE *)(a2 + v14 + 40);
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(a2 + v14 + 24);
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(a2 + v14 + 48);
  *(_DWORD *)(v18 + 56) = *(_DWORD *)(a2 + v14 + 56);
  *(_BYTE *)(v18 + 60) = *(_BYTE *)(a2 + v14 + 60);
  *(_BYTE *)(v18 + 61) = *(_BYTE *)(a2 + v14 + 61);
  *(_BYTE *)(v18 + 62) = *(_BYTE *)(a2 + v14 + 62);
  v22 = *(_QWORD *)(a2 + v14 + 64);
  v21 = *(_QWORD *)(a2 + v14 + 72);
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(a2 + v14 + 80);
  *(_QWORD *)(v18 + 64) = v22;
  *(_QWORD *)(v18 + 72) = v21;
  v23 = (int *)type metadata accessor for GenerationRecipe(0);
  v24 = v23[8];
  __dst = (char *)(v18 + v24);
  v25 = (char *)(v19 + v24);
  v26 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(unsigned int (**)(char *, uint64_t, int *))(v27 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(__dst, v25, v30);
    v31(&__dst[v26[5]], &v25[v26[5]], v30);
    v32 = v26[6];
    v33 = (uint64_t *)&__dst[v32];
    v34 = (uint64_t *)&v25[v32];
    if (*(_QWORD *)&v25[v32 + 16])
    {
      v35 = *v34;
      v36 = v34[1];
      sub_249DC3928(*v34, v36);
      *v33 = v35;
      v33[1] = v36;
      v33[2] = v34[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v33[2] = v34[2];
    }
    __dst[v26[7]] = v25[v26[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(__dst, 0, 1, v26);
  }
  v37 = v23[9];
  v38 = v18 + v37;
  v39 = v19 + v37;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v39 + 4);
  v40 = v23[10];
  v41 = v18 + v40;
  v42 = v19 + v40;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_DWORD *)v41 = *(_DWORD *)v42;
  v43 = v23[11];
  v44 = v18 + v43;
  v45 = v19 + v43;
  *(_WORD *)v44 = *(_WORD *)v45;
  *(_BYTE *)(v44 + 2) = *(_BYTE *)(v45 + 2);
  v46 = *(_QWORD *)(v45 + 16);
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v44 + 16) = v46;
  *(_QWORD *)(v18 + v23[12]) = *(_QWORD *)(v19 + v23[12]);
  *(_QWORD *)(v18 + v23[13]) = *(_QWORD *)(v19 + v23[13]);
  v47 = v23[14];
  v48 = v18 + v47;
  v49 = v19 + v47;
  v50 = *(void **)(v19 + v47 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50)
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_DWORD *)(v48 + 16) = *(_DWORD *)(v49 + 16);
    v51 = *(_QWORD *)(v49 + 32);
    *(_QWORD *)(v48 + 24) = v50;
    *(_QWORD *)(v48 + 32) = v51;
    v52 = v50;
    swift_retain();
  }
  else
  {
    v53 = *(_OWORD *)(v49 + 16);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v53;
    *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  }
  v54 = v23[15];
  v55 = v18 + v54;
  v56 = v19 + v54;
  v57 = *(void **)(v56 + 24);
  if (v57)
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_DWORD *)(v55 + 16) = *(_DWORD *)(v56 + 16);
    v58 = *(_QWORD *)(v56 + 32);
    *(_QWORD *)(v55 + 24) = v57;
    *(_QWORD *)(v55 + 32) = v58;
    v59 = v57;
    swift_retain();
  }
  else
  {
    v60 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v60;
    *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  }
  v61 = v23[16];
  v62 = v18 + v61;
  v63 = v19 + v61;
  v64 = *(void **)(v63 + 24);
  if (v64)
  {
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_DWORD *)(v62 + 16) = *(_DWORD *)(v63 + 16);
    v65 = *(_QWORD *)(v63 + 32);
    *(_QWORD *)(v62 + 24) = v64;
    *(_QWORD *)(v62 + 32) = v65;
    v66 = v64;
    swift_retain();
  }
  else
  {
    v67 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v67;
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  }
  v68 = v23[17];
  v69 = v18 + v68;
  v70 = v19 + v68;
  v71 = *(void **)(v70 + 24);
  if (v71)
  {
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *(_DWORD *)(v69 + 16) = *(_DWORD *)(v70 + 16);
    v72 = *(_QWORD *)(v70 + 32);
    *(_QWORD *)(v69 + 24) = v71;
    *(_QWORD *)(v69 + 32) = v72;
    v73 = v71;
    swift_retain();
  }
  else
  {
    v74 = *(_OWORD *)(v70 + 16);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *(_OWORD *)(v69 + 16) = v74;
    *(_QWORD *)(v69 + 32) = *(_QWORD *)(v70 + 32);
  }
  v75 = v23[18];
  v76 = v18 + v75;
  v77 = v19 + v75;
  v78 = *(void **)(v19 + v75 + 24);
  if (v78)
  {
    *(_OWORD *)v76 = *(_OWORD *)v77;
    *(_DWORD *)(v76 + 16) = *(_DWORD *)(v77 + 16);
    v79 = *(_QWORD *)(v77 + 32);
    *(_QWORD *)(v76 + 24) = v78;
    *(_QWORD *)(v76 + 32) = v79;
    v80 = v78;
    swift_retain();
  }
  else
  {
    v81 = *(_OWORD *)(v77 + 16);
    *(_OWORD *)v76 = *(_OWORD *)v77;
    *(_OWORD *)(v76 + 16) = v81;
    *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
  }
  v82 = (_OWORD *)(v76 + 40);
  v83 = (_OWORD *)(v77 + 40);
  v84 = *(void **)(v77 + 64);
  if (v84)
  {
    *v82 = *v83;
    *(_DWORD *)(v76 + 56) = *(_DWORD *)(v77 + 56);
    v85 = *(_QWORD *)(v77 + 72);
    *(_QWORD *)(v76 + 64) = v84;
    *(_QWORD *)(v76 + 72) = v85;
    v86 = v84;
    swift_retain();
  }
  else
  {
    v87 = *(_OWORD *)(v77 + 56);
    *v82 = *v83;
    *(_OWORD *)(v76 + 56) = v87;
    *(_QWORD *)(v76 + 72) = *(_QWORD *)(v77 + 72);
  }
  *(_BYTE *)(v76 + 80) = *(_BYTE *)(v77 + 80);
  *(_QWORD *)(v18 + v23[19]) = *(_QWORD *)(v19 + v23[19]);
  v88 = v23[20];
  v89 = v18 + v88;
  v90 = v19 + v88;
  v91 = *(void **)(v19 + v88 + 24);
  swift_bridgeObjectRetain();
  if (v91)
  {
    *(_OWORD *)v89 = *(_OWORD *)v90;
    *(_DWORD *)(v89 + 16) = *(_DWORD *)(v90 + 16);
    v92 = *(_QWORD *)(v90 + 32);
    v93 = *(_QWORD *)(v90 + 40);
    *(_QWORD *)(v89 + 24) = v91;
    *(_QWORD *)(v89 + 32) = v92;
    v94 = *(_QWORD *)(v90 + 48);
    v95 = *(_QWORD *)(v90 + 56);
    *(_QWORD *)(v89 + 40) = v93;
    *(_QWORD *)(v89 + 48) = v94;
    *(_QWORD *)(v89 + 56) = v95;
    v96 = v91;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v97 = *(_OWORD *)(v90 + 16);
    *(_OWORD *)v89 = *(_OWORD *)v90;
    *(_OWORD *)(v89 + 16) = v97;
    v98 = *(_OWORD *)(v90 + 48);
    *(_OWORD *)(v89 + 32) = *(_OWORD *)(v90 + 32);
    *(_OWORD *)(v89 + 48) = v98;
  }
  v99 = v23[21];
  v100 = (_QWORD *)(v18 + v99);
  v101 = (_QWORD *)(v19 + v99);
  v102 = v101[1];
  *v100 = *v101;
  v100[1] = v102;
  v100[2] = v101[2];
  *(_QWORD *)(v18 + v23[22]) = *(_QWORD *)(v19 + v23[22]);
  *(_BYTE *)(v18 + v23[23]) = *(_BYTE *)(v19 + v23[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v105;
}

uint64_t assignWithCopy for GenerationState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  int *v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, uint64_t, int *);
  int v31;
  int v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  __int128 v74;
  void *v75;
  id v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  id v86;
  __int128 v87;
  void *v88;
  id v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  __int128 *v95;
  void *v96;
  uint64_t v97;
  void *v98;
  id v99;
  __int128 v100;
  void *v101;
  id v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  __int128 *v108;
  void *v109;
  uint64_t v110;
  void *v111;
  id v112;
  __int128 v113;
  void *v114;
  id v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  __int128 *v121;
  void *v122;
  uint64_t v123;
  void *v124;
  id v125;
  __int128 v126;
  void *v127;
  id v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  _OWORD *v132;
  _OWORD *v133;
  void *v134;
  uint64_t v135;
  void *v136;
  id v137;
  __int128 v138;
  void *v139;
  id v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  __int128 *v146;
  void *v147;
  uint64_t v148;
  void *v149;
  id v150;
  __int128 v151;
  void *v152;
  id v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v163;
  uint64_t v164;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v164 = a1;
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)(a2 + v19);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(a2 + v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = *(_OWORD *)(v21 + 24);
  *(_BYTE *)(v20 + 40) = *(_BYTE *)(v21 + 40);
  *(_OWORD *)(v20 + 24) = v22;
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
  *(_BYTE *)(v20 + 56) = *(_BYTE *)(v21 + 56);
  *(_BYTE *)(v20 + 57) = *(_BYTE *)(v21 + 57);
  *(_BYTE *)(v20 + 58) = *(_BYTE *)(v21 + 58);
  *(_BYTE *)(v20 + 59) = *(_BYTE *)(v21 + 59);
  *(_BYTE *)(v20 + 60) = *(_BYTE *)(v21 + 60);
  *(_BYTE *)(v20 + 61) = *(_BYTE *)(v21 + 61);
  *(_BYTE *)(v20 + 62) = *(_BYTE *)(v21 + 62);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v21 + 72);
  *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
  *(_QWORD *)(v20 + 72) = v23;
  v24 = (int *)type metadata accessor for GenerationRecipe(0);
  v25 = v24[8];
  v26 = (_BYTE *)(v20 + v25);
  v27 = (_BYTE *)(v21 + v25);
  v28 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v29 = *((_QWORD *)v28 - 1);
  v30 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      v34(v26, v27, v33);
      v34(&v26[v28[5]], &v27[v28[5]], v33);
      v35 = v28[6];
      v36 = (uint64_t *)&v26[v35];
      v37 = (uint64_t *)&v27[v35];
      if (*(_QWORD *)&v27[v35 + 16])
      {
        v38 = v37[1];
        v163 = *v37;
        sub_249DC3928(*v37, v38);
        *v36 = v163;
        v36[1] = v38;
        v36[2] = v37[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v51 = *(_OWORD *)v37;
        v36[2] = v37[2];
        *(_OWORD *)v36 = v51;
      }
      v26[v28[7]] = v27[v28[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_25;
    }
LABEL_13:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  if (v32)
  {
    sub_249DC05A8((uint64_t)v26, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_13;
  }
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v41 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 24);
  v41(v26, v27, v40);
  v41(&v26[v28[5]], &v27[v28[5]], v40);
  v42 = v28[6];
  v43 = (uint64_t *)&v26[v42];
  v44 = (uint64_t *)&v27[v42];
  v45 = *(_QWORD *)&v26[v42 + 16];
  v46 = *(_QWORD *)&v27[v42 + 16];
  if (v45)
  {
    if (v46)
    {
      v47 = *v44;
      v48 = v44[1];
      sub_249DC3928(*v44, v48);
      v49 = *v43;
      v50 = v43[1];
      *v43 = v47;
      v43[1] = v48;
      sub_249DC3C24(v49, v50);
      v43[2] = v44[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02528((uint64_t)v43);
      v54 = v44[2];
      *(_OWORD *)v43 = *(_OWORD *)v44;
      v43[2] = v54;
    }
  }
  else if (v46)
  {
    v52 = *v44;
    v53 = v44[1];
    sub_249DC3928(*v44, v53);
    *v43 = v52;
    v43[1] = v53;
    v43[2] = v44[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = *(_OWORD *)v44;
    v43[2] = v44[2];
    *(_OWORD *)v43 = v55;
  }
  v26[v28[7]] = v27[v28[7]];
LABEL_25:
  v56 = v24[9];
  v57 = v20 + v56;
  v58 = (int *)(v21 + v56);
  v59 = *v58;
  *(_BYTE *)(v57 + 4) = *((_BYTE *)v58 + 4);
  *(_DWORD *)v57 = v59;
  v60 = v24[10];
  v61 = v20 + v60;
  v62 = (int *)(v21 + v60);
  v63 = *v62;
  *(_BYTE *)(v61 + 4) = *((_BYTE *)v62 + 4);
  *(_DWORD *)v61 = v63;
  v64 = v24[11];
  v65 = v20 + v64;
  v66 = v21 + v64;
  *(_BYTE *)v65 = *(_BYTE *)v66;
  *(_BYTE *)(v65 + 1) = *(_BYTE *)(v66 + 1);
  *(_BYTE *)(v65 + 2) = *(_BYTE *)(v66 + 2);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + v24[12]) = *(_QWORD *)(v21 + v24[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + v24[13]) = *(_QWORD *)(v21 + v24[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = v24[14];
  v68 = v20 + v67;
  v69 = (__int128 *)(v21 + v67);
  v70 = *(void **)(v20 + v67 + 24);
  v71 = *(_QWORD *)(v21 + v67 + 24);
  if (v70)
  {
    if (v71)
    {
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_QWORD *)(v68 + 8) = *((_QWORD *)v69 + 1);
      *(_DWORD *)(v68 + 16) = *((_DWORD *)v69 + 4);
      v72 = (void *)*((_QWORD *)v69 + 3);
      *(_QWORD *)(v68 + 24) = v72;
      v73 = v72;

      *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v68);
      v77 = *((_QWORD *)v69 + 4);
      v78 = v69[1];
      *(_OWORD *)v68 = *v69;
      *(_OWORD *)(v68 + 16) = v78;
      *(_QWORD *)(v68 + 32) = v77;
    }
  }
  else
  {
    v74 = *v69;
    if (v71)
    {
      *(_DWORD *)(v68 + 16) = *((_DWORD *)v69 + 4);
      *(_OWORD *)v68 = v74;
      v75 = (void *)*((_QWORD *)v69 + 3);
      *(_QWORD *)(v68 + 24) = v75;
      *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
      v76 = v75;
      swift_retain();
    }
    else
    {
      v79 = v69[1];
      *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
      *(_OWORD *)v68 = v74;
      *(_OWORD *)(v68 + 16) = v79;
    }
  }
  v80 = v24[15];
  v81 = v20 + v80;
  v82 = (__int128 *)(v21 + v80);
  v83 = *(void **)(v20 + v80 + 24);
  v84 = *(_QWORD *)(v21 + v80 + 24);
  if (v83)
  {
    if (v84)
    {
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *(_QWORD *)(v81 + 8) = *((_QWORD *)v82 + 1);
      *(_DWORD *)(v81 + 16) = *((_DWORD *)v82 + 4);
      v85 = (void *)*((_QWORD *)v82 + 3);
      *(_QWORD *)(v81 + 24) = v85;
      v86 = v85;

      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v81);
      v90 = *((_QWORD *)v82 + 4);
      v91 = v82[1];
      *(_OWORD *)v81 = *v82;
      *(_OWORD *)(v81 + 16) = v91;
      *(_QWORD *)(v81 + 32) = v90;
    }
  }
  else
  {
    v87 = *v82;
    if (v84)
    {
      *(_DWORD *)(v81 + 16) = *((_DWORD *)v82 + 4);
      *(_OWORD *)v81 = v87;
      v88 = (void *)*((_QWORD *)v82 + 3);
      *(_QWORD *)(v81 + 24) = v88;
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      v89 = v88;
      swift_retain();
    }
    else
    {
      v92 = v82[1];
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      *(_OWORD *)v81 = v87;
      *(_OWORD *)(v81 + 16) = v92;
    }
  }
  v93 = v24[16];
  v94 = v20 + v93;
  v95 = (__int128 *)(v21 + v93);
  v96 = *(void **)(v20 + v93 + 24);
  v97 = *(_QWORD *)(v21 + v93 + 24);
  if (v96)
  {
    if (v97)
    {
      *(_QWORD *)v94 = *(_QWORD *)v95;
      *(_QWORD *)(v94 + 8) = *((_QWORD *)v95 + 1);
      *(_DWORD *)(v94 + 16) = *((_DWORD *)v95 + 4);
      v98 = (void *)*((_QWORD *)v95 + 3);
      *(_QWORD *)(v94 + 24) = v98;
      v99 = v98;

      *(_QWORD *)(v94 + 32) = *((_QWORD *)v95 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v94);
      v103 = *((_QWORD *)v95 + 4);
      v104 = v95[1];
      *(_OWORD *)v94 = *v95;
      *(_OWORD *)(v94 + 16) = v104;
      *(_QWORD *)(v94 + 32) = v103;
    }
  }
  else
  {
    v100 = *v95;
    if (v97)
    {
      *(_DWORD *)(v94 + 16) = *((_DWORD *)v95 + 4);
      *(_OWORD *)v94 = v100;
      v101 = (void *)*((_QWORD *)v95 + 3);
      *(_QWORD *)(v94 + 24) = v101;
      *(_QWORD *)(v94 + 32) = *((_QWORD *)v95 + 4);
      v102 = v101;
      swift_retain();
    }
    else
    {
      v105 = v95[1];
      *(_QWORD *)(v94 + 32) = *((_QWORD *)v95 + 4);
      *(_OWORD *)v94 = v100;
      *(_OWORD *)(v94 + 16) = v105;
    }
  }
  v106 = v24[17];
  v107 = v20 + v106;
  v108 = (__int128 *)(v21 + v106);
  v109 = *(void **)(v20 + v106 + 24);
  v110 = *(_QWORD *)(v21 + v106 + 24);
  if (v109)
  {
    if (v110)
    {
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *(_QWORD *)(v107 + 8) = *((_QWORD *)v108 + 1);
      *(_DWORD *)(v107 + 16) = *((_DWORD *)v108 + 4);
      v111 = (void *)*((_QWORD *)v108 + 3);
      *(_QWORD *)(v107 + 24) = v111;
      v112 = v111;

      *(_QWORD *)(v107 + 32) = *((_QWORD *)v108 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v107);
      v116 = *((_QWORD *)v108 + 4);
      v117 = v108[1];
      *(_OWORD *)v107 = *v108;
      *(_OWORD *)(v107 + 16) = v117;
      *(_QWORD *)(v107 + 32) = v116;
    }
  }
  else
  {
    v113 = *v108;
    if (v110)
    {
      *(_DWORD *)(v107 + 16) = *((_DWORD *)v108 + 4);
      *(_OWORD *)v107 = v113;
      v114 = (void *)*((_QWORD *)v108 + 3);
      *(_QWORD *)(v107 + 24) = v114;
      *(_QWORD *)(v107 + 32) = *((_QWORD *)v108 + 4);
      v115 = v114;
      swift_retain();
    }
    else
    {
      v118 = v108[1];
      *(_QWORD *)(v107 + 32) = *((_QWORD *)v108 + 4);
      *(_OWORD *)v107 = v113;
      *(_OWORD *)(v107 + 16) = v118;
    }
  }
  v119 = v24[18];
  v120 = v20 + v119;
  v121 = (__int128 *)(v21 + v119);
  v122 = *(void **)(v20 + v119 + 24);
  v123 = *(_QWORD *)(v21 + v119 + 24);
  if (v122)
  {
    if (v123)
    {
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *(_QWORD *)(v120 + 8) = *((_QWORD *)v121 + 1);
      *(_DWORD *)(v120 + 16) = *((_DWORD *)v121 + 4);
      v124 = (void *)*((_QWORD *)v121 + 3);
      *(_QWORD *)(v120 + 24) = v124;
      v125 = v124;

      *(_QWORD *)(v120 + 32) = *((_QWORD *)v121 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v120);
      v129 = *((_QWORD *)v121 + 4);
      v130 = v121[1];
      *(_OWORD *)v120 = *v121;
      *(_OWORD *)(v120 + 16) = v130;
      *(_QWORD *)(v120 + 32) = v129;
    }
  }
  else
  {
    v126 = *v121;
    if (v123)
    {
      *(_DWORD *)(v120 + 16) = *((_DWORD *)v121 + 4);
      *(_OWORD *)v120 = v126;
      v127 = (void *)*((_QWORD *)v121 + 3);
      *(_QWORD *)(v120 + 24) = v127;
      *(_QWORD *)(v120 + 32) = *((_QWORD *)v121 + 4);
      v128 = v127;
      swift_retain();
    }
    else
    {
      v131 = v121[1];
      *(_QWORD *)(v120 + 32) = *((_QWORD *)v121 + 4);
      *(_OWORD *)v120 = v126;
      *(_OWORD *)(v120 + 16) = v131;
    }
  }
  v132 = (_OWORD *)(v120 + 40);
  v133 = (__int128 *)((char *)v121 + 40);
  v134 = *(void **)(v120 + 64);
  v135 = *((_QWORD *)v121 + 8);
  if (v134)
  {
    if (v135)
    {
      *(_QWORD *)(v120 + 40) = *((_QWORD *)v121 + 5);
      *(_QWORD *)(v120 + 48) = *((_QWORD *)v121 + 6);
      *(_DWORD *)(v120 + 56) = *((_DWORD *)v121 + 14);
      v136 = (void *)*((_QWORD *)v121 + 8);
      *(_QWORD *)(v120 + 64) = v136;
      v137 = v136;

      *(_QWORD *)(v120 + 72) = *((_QWORD *)v121 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v120 + 40);
      v141 = *((_QWORD *)v121 + 9);
      v142 = *(__int128 *)((char *)v121 + 56);
      *v132 = *v133;
      *(_OWORD *)(v120 + 56) = v142;
      *(_QWORD *)(v120 + 72) = v141;
    }
  }
  else
  {
    v138 = *v133;
    if (v135)
    {
      *(_DWORD *)(v120 + 56) = *((_DWORD *)v121 + 14);
      *v132 = v138;
      v139 = (void *)*((_QWORD *)v121 + 8);
      *(_QWORD *)(v120 + 64) = v139;
      *(_QWORD *)(v120 + 72) = *((_QWORD *)v121 + 9);
      v140 = v139;
      swift_retain();
    }
    else
    {
      v143 = *(__int128 *)((char *)v121 + 56);
      *(_QWORD *)(v120 + 72) = *((_QWORD *)v121 + 9);
      *v132 = v138;
      *(_OWORD *)(v120 + 56) = v143;
    }
  }
  *(_BYTE *)(v120 + 80) = *((_BYTE *)v121 + 80);
  *(_QWORD *)(v20 + v24[19]) = *(_QWORD *)(v21 + v24[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v144 = v24[20];
  v145 = v20 + v144;
  v146 = (__int128 *)(v21 + v144);
  v147 = *(void **)(v20 + v144 + 24);
  v148 = *(_QWORD *)(v21 + v144 + 24);
  if (v147)
  {
    if (v148)
    {
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *(_QWORD *)(v145 + 8) = *((_QWORD *)v146 + 1);
      *(_DWORD *)(v145 + 16) = *((_DWORD *)v146 + 4);
      v149 = (void *)*((_QWORD *)v146 + 3);
      *(_QWORD *)(v145 + 24) = v149;
      v150 = v149;

      *(_QWORD *)(v145 + 32) = *((_QWORD *)v146 + 4);
      swift_retain();
      swift_release();
      *(_QWORD *)(v145 + 40) = *((_QWORD *)v146 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v145 + 48) = *((_QWORD *)v146 + 6);
      *(_QWORD *)(v145 + 56) = *((_QWORD *)v146 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02590(v145);
      v154 = v146[3];
      v156 = *v146;
      v155 = v146[1];
      *(_OWORD *)(v145 + 32) = v146[2];
      *(_OWORD *)(v145 + 48) = v154;
      *(_OWORD *)v145 = v156;
      *(_OWORD *)(v145 + 16) = v155;
    }
  }
  else
  {
    v151 = *v146;
    if (v148)
    {
      *(_DWORD *)(v145 + 16) = *((_DWORD *)v146 + 4);
      *(_OWORD *)v145 = v151;
      v152 = (void *)*((_QWORD *)v146 + 3);
      *(_QWORD *)(v145 + 24) = v152;
      *(_QWORD *)(v145 + 32) = *((_QWORD *)v146 + 4);
      *(_QWORD *)(v145 + 40) = *((_QWORD *)v146 + 5);
      *(_QWORD *)(v145 + 48) = *((_QWORD *)v146 + 6);
      *(_QWORD *)(v145 + 56) = *((_QWORD *)v146 + 7);
      v153 = v152;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v157 = v146[1];
      v158 = v146[3];
      *(_OWORD *)(v145 + 32) = v146[2];
      *(_OWORD *)(v145 + 48) = v158;
      *(_OWORD *)v145 = v151;
      *(_OWORD *)(v145 + 16) = v157;
    }
  }
  v159 = v24[21];
  v160 = (_QWORD *)(v20 + v159);
  v161 = v21 + v159;
  *v160 = *(_QWORD *)(v21 + v159);
  v160[1] = *(_QWORD *)(v21 + v159 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v160[2] = *(_QWORD *)(v161 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + v24[22]) = *(_QWORD *)(v21 + v24[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v24[23]) = *(_BYTE *)(v21 + v24[23]);
  return v164;
}

uint64_t initializeWithTake for GenerationState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)(a2 + v13);
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(a2 + v13 + 8);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(a2 + v13 + 40);
  *(_QWORD *)(v14 + 55) = *(_QWORD *)(a2 + v13 + 55);
  *(_BYTE *)(v14 + 80) = *(_BYTE *)(a2 + v13 + 80);
  v16 = *(_QWORD *)(a2 + v13 + 64);
  v17 = *(_QWORD *)(a2 + v13 + 72);
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 72) = v17;
  v18 = (int *)type metadata accessor for GenerationRecipe(0);
  v19 = v18[8];
  v20 = (char *)(v14 + v19);
  v21 = (char *)(v15 + v19);
  v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v23 = *((_QWORD *)v22 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
    v26(v20, v21, v25);
    v26(&v20[v22[5]], &v21[v22[5]], v25);
    v27 = v22[6];
    v28 = &v20[v27];
    v29 = &v21[v27];
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
    v20[v22[7]] = v21[v22[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  }
  v30 = v18[9];
  v31 = v14 + v30;
  v32 = v15 + v30;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  v33 = v18[10];
  v34 = v14 + v33;
  v35 = v15 + v33;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  *(_DWORD *)v34 = *(_DWORD *)v35;
  v36 = v18[11];
  v37 = v14 + v36;
  v38 = v15 + v36;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v14 + v18[12]) = *(_QWORD *)(v15 + v18[12]);
  *(_QWORD *)(v14 + v18[13]) = *(_QWORD *)(v15 + v18[13]);
  v39 = v18[14];
  v40 = v14 + v39;
  v41 = v15 + v39;
  v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
  v43 = v18[15];
  v44 = v14 + v43;
  v45 = v15 + v43;
  *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  v47 = v18[16];
  v48 = v14 + v47;
  v49 = v15 + v47;
  v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  v51 = v18[17];
  v52 = v14 + v51;
  v53 = v15 + v51;
  v54 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_OWORD *)(v52 + 16) = v54;
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  v55 = v18[18];
  v56 = v14 + v55;
  v57 = v15 + v55;
  v58 = *(_OWORD *)(v57 + 48);
  *(_OWORD *)(v56 + 32) = *(_OWORD *)(v57 + 32);
  *(_OWORD *)(v56 + 48) = v58;
  *(_OWORD *)(v56 + 64) = *(_OWORD *)(v57 + 64);
  *(_BYTE *)(v56 + 80) = *(_BYTE *)(v57 + 80);
  v59 = *(_OWORD *)(v57 + 16);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_OWORD *)(v56 + 16) = v59;
  *(_QWORD *)(v14 + v18[19]) = *(_QWORD *)(v15 + v18[19]);
  v60 = v18[20];
  v61 = (_OWORD *)(v14 + v60);
  v62 = (_OWORD *)(v15 + v60);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  v64 = v62[3];
  v61[2] = v62[2];
  v61[3] = v64;
  v65 = v18[21];
  v66 = v14 + v65;
  v67 = v15 + v65;
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *(_QWORD *)(v66 + 16) = *(_QWORD *)(v67 + 16);
  *(_QWORD *)(v14 + v18[22]) = *(_QWORD *)(v15 + v18[22]);
  *(_BYTE *)(v14 + v18[23]) = *(_BYTE *)(v15 + v18[23]);
  return a1;
}

uint64_t assignWithTake for GenerationState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  int *v29;
  uint64_t v30;
  uint64_t (*v31)(_BYTE *, uint64_t, int *);
  int v32;
  int v33;
  uint64_t v34;
  void (*v35)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  __int128 v80;
  void *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  void (*v98)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)(a2 + v21);
  v24 = *(_QWORD *)(a2 + v21 + 16);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(a2 + v21 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
  *(_BYTE *)(v22 + 40) = *(_BYTE *)(v23 + 40);
  *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
  *(_BYTE *)(v22 + 56) = *(_BYTE *)(v23 + 56);
  *(_BYTE *)(v22 + 57) = *(_BYTE *)(v23 + 57);
  *(_BYTE *)(v22 + 58) = *(_BYTE *)(v23 + 58);
  *(_BYTE *)(v22 + 59) = *(_BYTE *)(v23 + 59);
  *(_BYTE *)(v22 + 60) = *(_BYTE *)(v23 + 60);
  *(_BYTE *)(v22 + 61) = *(_BYTE *)(v23 + 61);
  *(_BYTE *)(v22 + 62) = *(_BYTE *)(v23 + 62);
  *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
  *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
  v25 = (int *)type metadata accessor for GenerationRecipe(0);
  v26 = v25[8];
  v27 = (_BYTE *)(v22 + v26);
  v28 = (_BYTE *)(v23 + v26);
  v29 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v30 = *((_QWORD *)v29 - 1);
  v31 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v35 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
      v35(v27, v28, v34);
      v35(&v27[v29[5]], &v28[v29[5]], v34);
      v36 = v29[6];
      v37 = &v27[v36];
      v38 = &v28[v36];
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      v27[v29[7]] = v28[v29[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_249DC05A8((uint64_t)v27, type metadata accessor for PipelineConfiguration.InputConditioning);
LABEL_12:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v98 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v97 - 8) + 40);
  v98(v27, v28, v97);
  v98(&v27[v29[5]], &v28[v29[5]], v97);
  v99 = v29[6];
  v100 = (uint64_t)&v27[v99];
  v101 = &v28[v99];
  if (!*(_QWORD *)&v27[v99 + 16])
    goto LABEL_54;
  if (!*((_QWORD *)v101 + 2))
  {
    sub_249E02528(v100);
LABEL_54:
    *(_OWORD *)v100 = *(_OWORD *)v101;
    *(_QWORD *)(v100 + 16) = *((_QWORD *)v101 + 2);
    goto LABEL_55;
  }
  v102 = *(_QWORD *)v100;
  v103 = *(_QWORD *)(v100 + 8);
  *(_OWORD *)v100 = *(_OWORD *)v101;
  sub_249DC3C24(v102, v103);
  *(_QWORD *)(v100 + 16) = *((_QWORD *)v101 + 2);
  swift_bridgeObjectRelease();
LABEL_55:
  v27[v29[7]] = v28[v29[7]];
LABEL_13:
  v40 = v25[9];
  v41 = v22 + v40;
  v42 = v23 + v40;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  v43 = v25[10];
  v44 = v22 + v43;
  v45 = v23 + v43;
  *(_BYTE *)(v44 + 4) = *(_BYTE *)(v45 + 4);
  *(_DWORD *)v44 = *(_DWORD *)v45;
  v46 = v25[11];
  v47 = v22 + v46;
  v48 = v23 + v46;
  *(_WORD *)v47 = *(_WORD *)v48;
  *(_BYTE *)(v47 + 2) = *(_BYTE *)(v48 + 2);
  v50 = *(_QWORD *)(v48 + 8);
  v49 = *(_QWORD *)(v48 + 16);
  *(_QWORD *)(v47 + 8) = v50;
  *(_QWORD *)(v47 + 16) = v49;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + v25[12]) = *(_QWORD *)(v23 + v25[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + v25[13]) = *(_QWORD *)(v23 + v25[13]);
  swift_bridgeObjectRelease();
  v51 = v25[14];
  v52 = v22 + v51;
  v53 = v23 + v51;
  v54 = *(void **)(v22 + v51 + 24);
  if (v54)
  {
    v55 = *(_QWORD *)(v53 + 24);
    if (v55)
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
      *(_DWORD *)(v52 + 16) = *(_DWORD *)(v53 + 16);
      *(_QWORD *)(v52 + 24) = v55;

      *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
      swift_release();
      goto LABEL_18;
    }
    sub_249E0255C(v52);
  }
  v56 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_OWORD *)(v52 + 16) = v56;
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
LABEL_18:
  v57 = v25[15];
  v58 = v22 + v57;
  v59 = v23 + v57;
  v60 = *(void **)(v22 + v57 + 24);
  if (v60)
  {
    v61 = *(_QWORD *)(v59 + 24);
    if (v61)
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *(_DWORD *)(v58 + 16) = *(_DWORD *)(v59 + 16);
      *(_QWORD *)(v58 + 24) = v61;

      *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
      swift_release();
      goto LABEL_23;
    }
    sub_249E0255C(v58);
  }
  v62 = *(_OWORD *)(v59 + 16);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_OWORD *)(v58 + 16) = v62;
  *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
LABEL_23:
  v63 = v25[16];
  v64 = v22 + v63;
  v65 = v23 + v63;
  v66 = *(void **)(v22 + v63 + 24);
  if (v66)
  {
    v67 = *(_QWORD *)(v65 + 24);
    if (v67)
    {
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *(_DWORD *)(v64 + 16) = *(_DWORD *)(v65 + 16);
      *(_QWORD *)(v64 + 24) = v67;

      *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
      swift_release();
      goto LABEL_28;
    }
    sub_249E0255C(v64);
  }
  v68 = *(_OWORD *)(v65 + 16);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *(_OWORD *)(v64 + 16) = v68;
  *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
LABEL_28:
  v69 = v25[17];
  v70 = v22 + v69;
  v71 = v23 + v69;
  v72 = *(void **)(v22 + v69 + 24);
  if (v72)
  {
    v73 = *(_QWORD *)(v71 + 24);
    if (v73)
    {
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *(_DWORD *)(v70 + 16) = *(_DWORD *)(v71 + 16);
      *(_QWORD *)(v70 + 24) = v73;

      *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
      swift_release();
      goto LABEL_33;
    }
    sub_249E0255C(v70);
  }
  v74 = *(_OWORD *)(v71 + 16);
  *(_OWORD *)v70 = *(_OWORD *)v71;
  *(_OWORD *)(v70 + 16) = v74;
  *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
LABEL_33:
  v75 = v25[18];
  v76 = v22 + v75;
  v77 = v23 + v75;
  v78 = *(void **)(v22 + v75 + 24);
  if (v78)
  {
    v79 = *(_QWORD *)(v77 + 24);
    if (v79)
    {
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *(_DWORD *)(v76 + 16) = *(_DWORD *)(v77 + 16);
      *(_QWORD *)(v76 + 24) = v79;

      *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
      swift_release();
      goto LABEL_38;
    }
    sub_249E0255C(v76);
  }
  v80 = *(_OWORD *)(v77 + 16);
  *(_OWORD *)v76 = *(_OWORD *)v77;
  *(_OWORD *)(v76 + 16) = v80;
  *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
LABEL_38:
  v81 = *(void **)(v76 + 64);
  if (v81)
  {
    v82 = *(_QWORD *)(v77 + 64);
    if (v82)
    {
      *(_OWORD *)(v76 + 40) = *(_OWORD *)(v77 + 40);
      *(_DWORD *)(v76 + 56) = *(_DWORD *)(v77 + 56);
      *(_QWORD *)(v76 + 64) = v82;

      *(_QWORD *)(v76 + 72) = *(_QWORD *)(v77 + 72);
      swift_release();
      goto LABEL_43;
    }
    sub_249E0255C(v76 + 40);
  }
  v83 = *(_OWORD *)(v77 + 56);
  *(_OWORD *)(v76 + 40) = *(_OWORD *)(v77 + 40);
  *(_OWORD *)(v76 + 56) = v83;
  *(_QWORD *)(v76 + 72) = *(_QWORD *)(v77 + 72);
LABEL_43:
  *(_BYTE *)(v76 + 80) = *(_BYTE *)(v77 + 80);
  *(_QWORD *)(v22 + v25[19]) = *(_QWORD *)(v23 + v25[19]);
  swift_bridgeObjectRelease();
  v84 = v25[20];
  v85 = v22 + v84;
  v86 = v23 + v84;
  v87 = *(void **)(v22 + v84 + 24);
  if (!v87)
  {
LABEL_47:
    v90 = *(_OWORD *)(v86 + 16);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 16) = v90;
    v91 = *(_OWORD *)(v86 + 48);
    *(_OWORD *)(v85 + 32) = *(_OWORD *)(v86 + 32);
    *(_OWORD *)(v85 + 48) = v91;
    goto LABEL_48;
  }
  v88 = *(_QWORD *)(v86 + 24);
  if (!v88)
  {
    sub_249E02590(v85);
    goto LABEL_47;
  }
  *(_OWORD *)v85 = *(_OWORD *)v86;
  *(_DWORD *)(v85 + 16) = *(_DWORD *)(v86 + 16);
  *(_QWORD *)(v85 + 24) = v88;

  *(_QWORD *)(v85 + 32) = *(_QWORD *)(v86 + 32);
  swift_release();
  *(_QWORD *)(v85 + 40) = *(_QWORD *)(v86 + 40);
  swift_bridgeObjectRelease();
  v89 = *(_QWORD *)(v86 + 56);
  *(_QWORD *)(v85 + 48) = *(_QWORD *)(v86 + 48);
  *(_QWORD *)(v85 + 56) = v89;
  swift_bridgeObjectRelease();
LABEL_48:
  v92 = v25[21];
  v93 = (_QWORD *)(v22 + v92);
  v94 = v23 + v92;
  v95 = *(_QWORD *)(v23 + v92 + 8);
  *v93 = *(_QWORD *)(v23 + v92);
  v93[1] = v95;
  swift_bridgeObjectRelease();
  v93[2] = *(_QWORD *)(v94 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + v25[22]) = *(_QWORD *)(v23 + v25[22]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + v25[23]) = *(_BYTE *)(v23 + v25[23]);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E7F520(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = type metadata accessor for GenerationRecipe(0);
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E7F60C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = a2;
        return result;
      }
      v10 = type metadata accessor for GenerationRecipe(0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_249E7F6DC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_249F1E8D8();
  if (v0 <= 0x3F)
  {
    sub_249E2FCF4();
    if (v1 <= 0x3F)
    {
      type metadata accessor for GenerationRecipe(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t dispatch thunk of GenerationStateProviding.currentGenerationState.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DAFCF8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of GenerationStateApplying.apply(generationState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DAFCF8;
  return v9(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for GenerationState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249E7F8C4 + 4 * byte_249F2DF09[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249E7F8F8 + 4 * byte_249F2DF04[v4]))();
}

uint64_t sub_249E7F8F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7F900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E7F908);
  return result;
}

uint64_t sub_249E7F914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E7F91CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249E7F920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E7F928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GenerationState.CodingKeys()
{
  return &type metadata for GenerationState.CodingKeys;
}

unint64_t sub_249E7F948()
{
  unint64_t result;

  result = qword_2578DC850;
  if (!qword_2578DC850)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E0E4, &type metadata for GenerationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC850);
  }
  return result;
}

unint64_t sub_249E7F990()
{
  unint64_t result;

  result = qword_2578DC858;
  if (!qword_2578DC858)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E054, &type metadata for GenerationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC858);
  }
  return result;
}

unint64_t sub_249E7F9D8()
{
  unint64_t result;

  result = qword_2578DC860;
  if (!qword_2578DC860)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E07C, &type metadata for GenerationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DC860);
  }
  return result;
}

uint64_t sub_249E7FA1C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000249F37F90 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69746172656E6567 && a2 == 0xEC00000044496E6FLL || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E746E65696C63 && a2 == 0xEA0000000000656DLL || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249F33A60)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t GenerativePlayground.GenerationTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState;
  v7 = type metadata accessor for GenerationState();
  sub_249DCC274(v6 + *(int *)(v7 + 20), (uint64_t)v5, &qword_2578D6288);
  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  __break(1u);
  return result;
}

uint64_t sub_249E7FCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[46] = a3;
  v4[47] = v3;
  v4[44] = a1;
  v4[45] = a2;
  v4[48] = sub_249F1E584();
  v4[49] = swift_task_alloc();
  type metadata accessor for AugmentedPrompt();
  v4[50] = swift_task_alloc();
  v4[51] = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  v4[52] = swift_task_alloc();
  v4[53] = type metadata accessor for GenerationState();
  v4[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v4[55] = swift_task_alloc();
  v4[56] = type metadata accessor for GenerationRecipe(0);
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E7FDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_signpost_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  os_signpost_id_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  _QWORD *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, char);
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t (*v50)(uint64_t, uint64_t, char);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  void (*v75)(uint64_t, _QWORD *);
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_signpost_type_t v82;
  char v83;
  uint64_t v84;
  void (*v85)(void);
  uint8_t *v86;
  os_signpost_id_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(void);
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106[2];

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 376)
     + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState;
  v4 = v3 + *(int *)(v2 + 28);
  sub_249DC091C(v4, *(_QWORD *)(v0 + 464), type metadata accessor for GenerationRecipe);
  v100 = v3;
  v101 = v2;
  sub_249DCC274(v3 + *(int *)(v2 + 20), v1, &qword_2578D6288);
  v5 = sub_249F1E8D8();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 464);
    v9 = *(_QWORD *)(v0 + 440);
    v10 = *(_QWORD *)(v0 + 376);
    v11 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller;
    *(_QWORD *)(v0 + 472) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller;
    v102 = *(_OWORD *)(v10 + v11 + 24);
    v12 = *(_QWORD *)(v10 + v11 + 24);
    v99 = (_QWORD *)(v10 + v11);
    v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 + v11), v12);
    *(_OWORD *)(v0 + 184) = v102;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_1, v13, v12);
    sub_249E0ED70(v8, v9, v0 + 160, v0 + 120);
    sub_249DC05A8(v8, type metadata accessor for GenerationRecipe);
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    if (!*(_QWORD *)(v0 + 144))
    {
      sub_249DCC2FC(v0 + 120, &qword_2578D7DE0);
      v22 = *(_QWORD *)(v4 + 8);
      v23 = *(_QWORD *)(v4 + 16);
      sub_249D9D9B0();
      swift_allocError();
      *(_QWORD *)v24 = v22;
      *(_QWORD *)(v24 + 8) = v23;
      *(_BYTE *)(v24 + 16) = 0;
      swift_bridgeObjectRetain();
      swift_willThrow();
LABEL_33:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    sub_249D9E174((__int128 *)(v0 + 120), v0 + 80);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
    v15 = sub_249E14D88();
    v17 = v16;
    v103 = v15;
    *(_QWORD *)(v0 + 480) = v15;
    *(_QWORD *)(v0 + 488) = v16;
    if (qword_2578D5CE8 != -1)
      swift_once();
    v98 = sub_249F1EF38();
    *(_QWORD *)(v0 + 496) = __swift_project_value_buffer(v98, (uint64_t)qword_2578FF300);
    swift_bridgeObjectRetain_n();
    v18 = sub_249F1EF20();
    v19 = sub_249F1F82C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v106[0] = v21;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 344) = sub_249E68CA8(v103, v17, v106);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v18, v19, "generating images with %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v21, -1, -1);
      MEMORY[0x24BD06618](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v25 = sub_249F1EE9C();
    *(_QWORD *)(v0 + 504) = v25;
    v26 = *(_QWORD *)(v25 - 8);
    *(_QWORD *)(v0 + 512) = v26;
    *(_QWORD *)(v0 + 520) = *(_QWORD *)(v26 + 64);
    v27 = swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v27;
    if (qword_2578D5D80 != -1)
      swift_once();
    v28 = sub_249F1EED8();
    *(_QWORD *)(v0 + 536) = __swift_project_value_buffer(v28, (uint64_t)qword_2578FF408);
    sub_249F1EEC0();
    sub_249F1EE78();
    swift_bridgeObjectRetain_n();
    v29 = sub_249F1EEC0();
    v30 = sub_249F1F8A4();
    v96 = v25;
    v95 = v26;
    if ((sub_249F1F958() & 1) != 0)
    {
      v31 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v31, v27, v25);
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v106[0] = v33;
      *(_DWORD *)v32 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 336) = sub_249E68CA8(v103, v17, v106);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      v34 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v29, v30, v34, "generateImagesTask", "%{public}s", v32, 0xCu);
      swift_arrayDestroy();
      v35 = v33;
      v26 = v95;
      MEMORY[0x24BD06618](v35, -1, -1);
      MEMORY[0x24BD06618](v32, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v31, v96);
      swift_task_dealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v36 = *(_QWORD *)(v0 + 432);
    v37 = *(_QWORD *)(v0 + 360);
    swift_task_alloc();
    v38 = *(void (**)(void))(v26 + 16);
    *(_QWORD *)(v0 + 544) = v38;
    v97 = v38;
    v38();
    *(_QWORD *)(v0 + 552) = sub_249F1EF08();
    swift_allocObject();
    *(_QWORD *)(v0 + 560) = sub_249F1EEFC();
    swift_task_dealloc();
    sub_249DC091C(v100, v36, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    if (v37)
    {
      v39 = *(_QWORD *)(v0 + 432);
      v40 = *(_QWORD *)(v0 + 416);
      v41 = *(_QWORD *)(v0 + 368);
      v42 = *(_QWORD *)(v0 + 376);
      v43 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
      v44 = (_QWORD *)swift_allocObject();
      v44[2] = v43;
      v44[3] = v41;
      v44[4] = v42;
      swift_storeEnumTagMultiPayload();
      sub_249DC09B8((uint64_t)v43);
      sub_249DC09B8((uint64_t)v43);
      v45 = swift_retain();
      v43(v45, v40);
      sub_249DC05A8(v40, type metadata accessor for GenerativePlayground.GenerationEvent);
      sub_249DC091C(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
      swift_storeEnumTagMultiPayload();
      v43(v42, v40);
      sub_249DC05A8(v40, type metadata accessor for GenerativePlayground.GenerationEvent);
      *(_QWORD *)v40 = 0;
      *(_QWORD *)(v40 + 8) = 0;
      *(_BYTE *)(v40 + 16) = 1;
      *(_QWORD *)(v40 + 24) = 0;
      swift_storeEnumTagMultiPayload();
      v43(v42, v40);
      sub_249DC0A2C((uint64_t)v43);
      sub_249DC05A8(v40, type metadata accessor for GenerativePlayground.GenerationEvent);
      v46 = sub_249E87FB4;
    }
    else
    {
      v46 = 0;
      v44 = 0;
    }
    *(_QWORD *)(v0 + 576) = v44;
    *(_QWORD *)(v0 + 568) = v46;
    swift_bridgeObjectRetain_n();
    v47 = sub_249F1EF20();
    v48 = sub_249F1F82C();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = v46;
      v51 = swift_slowAlloc();
      v106[0] = v51;
      *(_DWORD *)v49 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 328) = sub_249E68CA8(v103, v17, v106);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v47, v48, "unprepared generation recipe policy check for %s", v49, 0xCu);
      swift_arrayDestroy();
      v52 = v51;
      v46 = v50;
      MEMORY[0x24BD06618](v52, -1, -1);
      MEMORY[0x24BD06618](v49, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v53 = *(_QWORD *)(v0 + 376);
    v54 = *(void **)(v53
                   + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__mediaAnalysisService);
    *(_QWORD *)(v0 + 584) = v54;
    v104 = *(_QWORD *)(v0 + 432);
    *(_QWORD *)(v0 + 592) = *(_QWORD *)(v53
                                      + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__visionSession);
    v55 = *(int *)(v101 + 28);
    *(_DWORD *)(v0 + 260) = v55;
    v56 = qword_2578D5D78;
    v57 = v54;
    swift_retain();
    if (v56 != -1)
      swift_once();
    *(_QWORD *)(v0 + 600) = __swift_project_value_buffer(v98, (uint64_t)qword_2578FF3F0);
    v58 = sub_249F1EF20();
    v59 = sub_249F1F82C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_249D98000, v58, v59, "no policies to evaluate for an unprepared generation recipe", v60, 2u);
      MEMORY[0x24BD06618](v60, -1, -1);
    }

    v61 = v99[3];
    v62 = v99[4];
    __swift_project_boxed_opaque_existential_1(v99, v61);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v61, v62) & 1) != 0)
    {
      sub_249F1F5D4();
      sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v63 = (void *)swift_allocError();
      sub_249F1F1E4();
      swift_willThrow();
      sub_249DC0A2C((uint64_t)v46);
      swift_release();
      swift_bridgeObjectRelease();

      sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
      v64 = v63;
      v65 = v63;
      v66 = sub_249F1EF20();
      v67 = sub_249F1F820();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v68 = 138412290;
        v70 = v63;
        v71 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 272) = v71;
        sub_249F1F9AC();
        *v69 = v71;

        _os_log_impl(&dword_249D98000, v66, v67, "image generation failed - %@", v68, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v69, -1, -1);
        MEMORY[0x24BD06618](v68, -1, -1);
      }
      else
      {

      }
      v72 = *(_QWORD *)(v0 + 360);

      if (v72)
      {
        v73 = *(_QWORD **)(v0 + 416);
        v74 = *(_QWORD *)(v0 + 376);
        v75 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
        *v73 = v63;
        swift_storeEnumTagMultiPayload();
        v76 = v63;
        v75(v74, v73);
        sub_249DC05A8((uint64_t)v73, type metadata accessor for GenerativePlayground.GenerationEvent);
      }
      v77 = *(_QWORD *)(v0 + 528);
      v78 = *(_QWORD *)(v0 + 504);
      v79 = *(_QWORD *)(v0 + 512);
      swift_willThrow();
      sub_249DDDF68("generateImagesTask", 18, 2);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
      swift_task_dealloc();
      __swift_destroy_boxed_opaque_existential_1(v0 + 80);
      goto LABEL_33;
    }
    sub_249F1F670();
    v80 = swift_task_alloc();
    *(_QWORD *)(v0 + 608) = v80;
    sub_249F1EEC0();
    sub_249F1EE78();
    v81 = sub_249F1EEC0();
    v82 = sub_249F1F8A4();
    v83 = sub_249F1F958();
    if ((v83 & 1) != 0)
    {
      v84 = swift_task_alloc();
      v85 = v97;
      ((void (*)(uint64_t, uint64_t, uint64_t))v97)(v84, v80, v96);
      v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v86 = 0;
      v87 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v81, v82, v87, "prepareRecipe", "", v86, 2u);
      MEMORY[0x24BD06618](v86, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v84, v96);
      swift_task_dealloc();
      v88 = (_QWORD *)(v0 + 80);
    }
    else
    {

      v88 = (_QWORD *)(v0 + 80);
      v85 = v97;
    }
    v89 = v104 + v55;
    v90 = *(_QWORD *)(v0 + 376);
    swift_task_alloc();
    v85();
    swift_allocObject();
    *(_QWORD *)(v0 + 616) = sub_249F1EEFC();
    swift_task_dealloc();
    v91 = *(_QWORD *)(v0 + 104);
    v92 = *(_QWORD *)(v0 + 112);
    __swift_project_boxed_opaque_existential_1(v88, v91);
    v93 = v90 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__recipePreparer;
    v105 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v92 + 32)
                                                                              + *(_QWORD *)(v92 + 32));
    v94 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 624) = v94;
    *v94 = v0;
    v94[1] = sub_249E80B9C;
    return v105(*(_QWORD *)(v0 + 456), v89, v93, v91, v92);
  }
  return result;
}

uint64_t sub_249E80B9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 632) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_249E80C08()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD *);
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  unint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  NSObject *v75;
  os_log_type_t v76;
  _BOOL4 v77;
  unint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  Swift::Bool v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_signpost_type_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint8_t *v99;
  os_signpost_id_t v100;
  uint8_t *v101;
  void (*v102)(void);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int *v110;
  _QWORD *v111;
  Swift::Bool v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t (*v118)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122[2];
  int v123;

  sub_249DE6E0C(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 432) + *(int *)(v0 + 260));
  v1 = sub_249F1EEC0();
  v2 = swift_task_alloc();
  sub_249F1EEF0();
  v3 = sub_249F1F898();
  if ((sub_249F1F958() & 1) != 0)
  {
    v4 = sub_249F1EEE4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x24BEE7808] && v7 == *MEMORY[0x24BEE7808])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      v8 = "";
    }
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
    v14 = *(_QWORD *)(v0 + 504);
    v13 = *(_QWORD *)(v0 + 512);
    swift_task_dealloc();
    v15 = swift_task_alloc();
    v12(v15, v2, v14);
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v1, v3, v17, "prepareRecipe", v8, v16, 2u);
    MEMORY[0x24BD06618](v16, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v11(v2, v14);
    v11(v15, v14);
    swift_task_dealloc();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 504);
    v9 = *(_QWORD *)(v0 + 512);

    v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v11(v2, v10);
  }
  *(_QWORD *)(v0 + 640) = v11;
  v18 = (_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 472));
  swift_task_dealloc();
  v19 = v18[3];
  v20 = v18[4];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v21 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_11:
    v23 = *(_QWORD *)(v0 + 608);
    v24 = *(void **)(v0 + 584);
    v25 = *(_QWORD *)(v0 + 568);
    v26 = *(_QWORD *)(v0 + 504);
    swift_bridgeObjectRelease();
    sub_249DC0A2C(v25);

    swift_release();
    swift_release();
    v27 = v23;
    v28 = v26;
LABEL_12:
    v11(v27, v28);
    goto LABEL_13;
  }
  v22 = *(void **)(v0 + 632);
  sub_249F1F670();
  v21 = v22;
  if (v22)
    goto LABEL_11;
  v46 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
  if (v46)
  {
    v47 = *(_QWORD *)(v0 + 416);
    v48 = *(_QWORD *)(v0 + 376);
    sub_249DC091C(*(_QWORD *)(v0 + 432), v47, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v46(v48, v47);
    sub_249DC0A2C((uint64_t)v46);
    sub_249DC05A8(v47, type metadata accessor for GenerativePlayground.GenerationEvent);
  }
  swift_bridgeObjectRetain_n();
  v49 = sub_249F1EF20();
  v50 = sub_249F1F82C();
  v51 = os_log_type_enabled(v49, v50);
  v52 = *(_QWORD *)(v0 + 488);
  if (v51)
  {
    v53 = *(_QWORD *)(v0 + 480);
    v54 = (uint8_t *)swift_slowAlloc();
    v119 = v11;
    v55 = swift_slowAlloc();
    v122[0] = v55;
    *(_DWORD *)v54 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 320) = sub_249E68CA8(v53, v52, v122);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v49, v50, "prepared recipe policy check for %s", v54, 0xCu);
    swift_arrayDestroy();
    v56 = v55;
    v11 = v119;
    MEMORY[0x24BD06618](v56, -1, -1);
    MEMORY[0x24BD06618](v54, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v57 = sub_249F1EF20();
  v58 = sub_249F1F82C();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v59 = 0;
    _os_log_impl(&dword_249D98000, v57, v58, "no policies to evaluate for a prepared recipe", v59, 2u);
    MEMORY[0x24BD06618](v59, -1, -1);
  }
  v60 = *(_QWORD *)(v0 + 472);
  v61 = *(_QWORD *)(v0 + 376);

  v62 = (_QWORD *)(v61 + v60);
  v63 = *(_QWORD *)(v61 + v60 + 24);
  v64 = v62[4];
  __swift_project_boxed_opaque_existential_1(v62, v63);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64) & 1) != 0)
  {
LABEL_27:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v21 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    v65 = *(_QWORD *)(v0 + 608);
    v66 = *(void **)(v0 + 584);
    v67 = *(_QWORD *)(v0 + 568);
    v68 = *(_QWORD *)(v0 + 504);
    swift_bridgeObjectRelease();
    sub_249DC0A2C(v67);

    swift_release();
    swift_release();
    v27 = v65;
    v28 = v68;
    goto LABEL_12;
  }
  sub_249F1F670();
  v69 = *(_QWORD *)(v0 + 376);
  v70 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__options;
  *(_QWORD *)(v0 + 648) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__options;
  v71 = (uint64_t *)(v69 + v70);
  v72 = *(_QWORD *)(v69 + v70 + 8);
  if (!v72)
  {
    v82 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
    if (!v82)
      goto LABEL_35;
LABEL_34:
    v83 = *(_QWORD *)(v0 + 416);
    swift_storeEnumTagMultiPayload();
    v82(v69, v83);
    sub_249DC05A8(v83, type metadata accessor for GenerativePlayground.GenerationEvent);
    v69 = *(_QWORD *)(v0 + 376);
    goto LABEL_35;
  }
  v73 = v71[2];
  v74 = *((_DWORD *)v71 + 6);
  swift_bridgeObjectRetain_n();
  v75 = sub_249F1EF20();
  v76 = sub_249F1F82C();
  v77 = os_log_type_enabled(v75, v76);
  v78 = *(_QWORD *)(v0 + 488);
  if (v77)
  {
    v116 = *(_QWORD *)(v0 + 480);
    v79 = (uint8_t *)swift_slowAlloc();
    v117 = v71;
    v80 = swift_slowAlloc();
    v122[0] = v80;
    *(_DWORD *)v79 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 312) = sub_249E68CA8(v116, v78, v122);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v75, v76, "engineered prompt language check for %s", v79, 0xCu);
    swift_arrayDestroy();
    v81 = v80;
    v71 = v117;
    MEMORY[0x24BD06618](v81, -1, -1);
    MEMORY[0x24BD06618](v79, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_249E030D8(*(_QWORD *)(v0 + 400));
  sub_249F1E56C();
  sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
  v87._countAndFlagsBits = sub_249F1F4C0();
  v122[0] = v72;
  v122[1] = v73;
  v123 = v74;
  v88 = LanguageCheckingParameters.check(text:)(v87);
  if (v89)
  {
    v21 = v89;
    sub_249DC05A8(*(_QWORD *)(v0 + 400), (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    swift_bridgeObjectRelease();
    v90 = *(void **)(v0 + 584);
    v91 = *(_QWORD *)(v0 + 568);
    v11(*(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 504));
    sub_249DC0A2C(v91);

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_13:
    swift_task_dealloc();
    sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    v29 = v21;
    v30 = v21;
    v31 = sub_249F1EF20();
    v32 = sub_249F1F820();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v33 = 138412290;
      v35 = v21;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 272) = v36;
      sub_249F1F9AC();
      *v34 = v36;

      _os_log_impl(&dword_249D98000, v31, v32, "image generation failed - %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v34, -1, -1);
      MEMORY[0x24BD06618](v33, -1, -1);
    }
    else
    {

    }
    v37 = *(_QWORD *)(v0 + 360);

    if (v37)
    {
      v38 = *(_QWORD **)(v0 + 416);
      v39 = *(_QWORD *)(v0 + 376);
      v40 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
      *v38 = v21;
      swift_storeEnumTagMultiPayload();
      v41 = v21;
      v40(v39, v38);
      sub_249DC05A8((uint64_t)v38, type metadata accessor for GenerativePlayground.GenerationEvent);
    }
    v42 = *(_QWORD *)(v0 + 528);
    v43 = *(_QWORD *)(v0 + 504);
    v44 = *(_QWORD *)(v0 + 512);
    swift_willThrow();
    sub_249DDDF68("generateImagesTask", 18, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v112 = v88;
  v113 = (_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 472));
  sub_249DC05A8(*(_QWORD *)(v0 + 400), (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  swift_bridgeObjectRelease();
  v114 = v113[3];
  v115 = v113[4];
  __swift_project_boxed_opaque_existential_1(v113, v114);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v115 + 8))(v114, v115) & 1) != 0)
    goto LABEL_27;
  sub_249F1F670();
  v82 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
  v69 = *(_QWORD *)(v0 + 376);
  if (!v112 && v82 != 0)
    goto LABEL_34;
LABEL_35:
  v84 = v69 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__forensicsReporter;
  v85 = *(_QWORD *)(v69 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__forensicsReporter);
  *(_QWORD *)(v0 + 656) = v85;
  *(_QWORD *)(v0 + 664) = *(_QWORD *)(v84 + 8);
  if (v85)
  {
    type metadata accessor for ForensicsHandler();
    v86 = swift_allocObject();
    *(_QWORD *)(v86 + 16) = 0;
  }
  else
  {
    v86 = 0;
  }
  *(_QWORD *)(v0 + 672) = v86;
  v92 = swift_task_alloc();
  *(_QWORD *)(v0 + 680) = v92;
  sub_249F1EEC0();
  sub_249F1EE78();
  v93 = sub_249F1EEC0();
  v94 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
    v96 = *(_QWORD *)(v0 + 504);
    v97 = swift_task_alloc();
    v95(v97, v92, v96);
    v98 = v71;
    v99 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v99 = 0;
    v100 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v93, v94, v100, "generateImages", "", v99, 2u);
    v101 = v99;
    v71 = v98;
    MEMORY[0x24BD06618](v101, -1, -1);

    v11(v97, v96);
    swift_task_dealloc();
  }
  else
  {

  }
  v102 = *(void (**)(void))(v0 + 544);
  swift_task_alloc();
  v102();
  swift_allocObject();
  *(_QWORD *)(v0 + 688) = sub_249F1EEFC();
  swift_task_dealloc();
  v103 = *v71;
  if (v86)
  {
    *(_QWORD *)(v0 + 224) = type metadata accessor for ForensicsHandler();
    *(_QWORD *)(v0 + 232) = &off_251B4FC48;
    *(_QWORD *)(v0 + 200) = v86;
  }
  else
  {
    *(_QWORD *)(v0 + 232) = 0;
    *(_OWORD *)(v0 + 200) = 0u;
    *(_OWORD *)(v0 + 216) = 0u;
  }
  *(_QWORD *)(v0 + 696) = v86;
  v121 = *(int *)(v0 + 260);
  v104 = *(_QWORD *)(v0 + 576);
  v105 = *(_QWORD *)(v0 + 568);
  v120 = *(_QWORD *)(v0 + 432);
  v106 = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v0 + 16) = v103;
  *(_QWORD *)(v0 + 24) = v105;
  *(_QWORD *)(v0 + 32) = v104;
  sub_249DCB1B0(v0 + 200, v0 + 40, &qword_2578D7DF8);
  v107 = *(_QWORD *)(v0 + 104);
  v108 = *(_QWORD *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v107);
  v109 = *(_DWORD *)(v106 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__client + 16);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v106
                                    + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__client);
  *(_DWORD *)(v0 + 256) = v109;
  v110 = *(int **)(v108 + 40);
  swift_retain();
  swift_retain();
  sub_249DC09B8(v105);
  v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v110 + *v110);
  v111 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 704) = v111;
  *v111 = v0;
  v111[1] = sub_249E819E0;
  return v118(v120 + v121, v0 + 240, v0 + 16, v107, v108);
}

uint64_t sub_249E819E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 712) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v4 + 720) = a1;
  return swift_task_switch();
}

uint64_t sub_249E81A5C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *);
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, _QWORD *);
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  unint64_t v80;
  uint64_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94[2];
  uint64_t v95;

  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 720);
  v1 = sub_249F1EEC0();
  v2 = swift_task_alloc();
  sub_249F1EEF0();
  v3 = sub_249F1F898();
  if ((sub_249F1F958() & 1) != 0)
  {
    v4 = sub_249F1EEE4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x24BEE7808] && v7 == *MEMORY[0x24BEE7808])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      v8 = "";
    }
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
    v13 = *(_QWORD *)(v0 + 504);
    swift_task_dealloc();
    v14 = swift_task_alloc();
    v12(v14, v2, v13);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v1, v3, v16, "generateImages", v8, v15, 2u);
    MEMORY[0x24BD06618](v15, -1, -1);

    v11(v2, v13);
    v11(v14, v13);
    swift_task_dealloc();
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v10 = *(_QWORD *)(v0 + 504);

    v9(v2, v10);
  }
  v92 = v0 + 16;
  v17 = *(_QWORD *)(v0 + 672);
  swift_task_dealloc();
  if (v17)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + 16);
    if (v18)
    {
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = *(void (**)(uint64_t *))(v0 + 656);
        swift_bridgeObjectRetain();
        v21 = (uint64_t *)(v18 + 40);
        do
        {
          if (*(_QWORD *)(v0 + 656))
          {
            v22 = *v21;
            LOBYTE(v94[0]) = *((_BYTE *)v21 - 8);
            v94[1] = v22;
            swift_bridgeObjectRetain();
            v20(v94);
            swift_bridgeObjectRelease();
          }
          v21 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
      }
    }
  }
  v23 = (_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 472));
  v24 = v23[3];
  v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v26 = swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_19:
    v93 = (id)v26;
    v28 = *(_QWORD *)(v0 + 680);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v30 = *(_QWORD *)(v0 + 608);
    v31 = *(void **)(v0 + 584);
    v91 = *(_QWORD *)(v0 + 568);
    v32 = *(_QWORD *)(v0 + 504);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    sub_249DC0A2C(v91);
    sub_249DE6E98(v92);
    v29(v28, v32);
    v29(v30, v32);
LABEL_20:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    v33 = v93;
    v34 = v93;
    v35 = v93;
    v36 = sub_249F1EF20();
    v37 = sub_249F1F820();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v38 = 138412290;
      v40 = v93;
      v41 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 272) = v41;
      sub_249F1F9AC();
      *v39 = v41;
      v33 = v93;

      _os_log_impl(&dword_249D98000, v36, v37, "image generation failed - %@", v38, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v39, -1, -1);
      MEMORY[0x24BD06618](v38, -1, -1);
    }
    else
    {

    }
    v42 = *(_QWORD *)(v0 + 360);

    if (v42)
    {
      v43 = *(_QWORD **)(v0 + 416);
      v44 = *(_QWORD *)(v0 + 376);
      v45 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
      *v43 = v33;
      swift_storeEnumTagMultiPayload();
      v46 = v33;
      v45(v44, v43);
      sub_249DC05A8((uint64_t)v43, type metadata accessor for GenerativePlayground.GenerationEvent);
    }
    v47 = *(_QWORD *)(v0 + 528);
    v49 = *(_QWORD *)(v0 + 504);
    v48 = *(_QWORD *)(v0 + 512);
    swift_willThrow();
    sub_249DDDF68("generateImagesTask", 18, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v27 = *(_QWORD *)(v0 + 712);
  sub_249F1F670();
  v26 = v27;
  if (v27)
    goto LABEL_19;
  v51 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 260) + *(int *)(*(_QWORD *)(v0 + 448) + 72);
  if (*(_BYTE *)(v51 + 80) == 1)
  {
    v52 = *(_QWORD *)v51;
    *(_QWORD *)(v0 + 728) = *(_QWORD *)v51;
    v53 = *(_QWORD *)(v51 + 8);
    *(_QWORD *)(v0 + 736) = v53;
    v54 = *(_QWORD *)(v51 + 16);
    *(_QWORD *)(v0 + 744) = v54;
    v55 = *(void **)(v51 + 24);
    *(_QWORD *)(v0 + 752) = v55;
    *(_QWORD *)(v0 + 760) = *(_QWORD *)(v51 + 32);
    if (v55)
    {
      v56 = *(_QWORD *)(v51 + 40);
      *(_QWORD *)(v0 + 768) = v56;
      v57 = *(_QWORD *)(v51 + 48);
      *(_QWORD *)(v0 + 776) = v57;
      v58 = *(_QWORD *)(v51 + 56);
      *(_QWORD *)(v0 + 784) = v58;
      v59 = *(void **)(v51 + 64);
      *(_QWORD *)(v0 + 792) = v59;
      *(_QWORD *)(v0 + 800) = *(_QWORD *)(v51 + 72);
      if (v59)
      {
        v60 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(v0 + 808) = v60;
        sub_249DCA64C(v52, v53, v54, v55);
        sub_249DCA64C(v56, v57, v58, v59);
        v61 = v55;
        v62 = v59;
        swift_bridgeObjectRetain();
        v63 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 816) = v63;
        *v63 = v0;
        v63[1] = sub_249E824D8;
        return sub_249E864F4(v60, (uint64_t)v55, (uint64_t)v59);
      }
    }
    v69 = *(_QWORD *)(v0 + 680);
    v70 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v71 = *(_QWORD *)(v0 + 608);
    v72 = *(void **)(v0 + 584);
    v90 = *(_QWORD *)(v0 + 568);
    v73 = *(_QWORD *)(v0 + 504);
    swift_bridgeObjectRelease();
    sub_249DD9530();
    v74 = swift_allocError();
    *(_QWORD *)v75 = 0xD000000000000029;
    *(_QWORD *)(v75 + 8) = 0x8000000249F38020;
    *(_QWORD *)(v75 + 16) = 0;
    *(_BYTE *)(v75 + 24) = 5;
    v93 = (id)v74;
    swift_willThrow();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_249DC0A2C(v90);
    sub_249DE6E98(v92);
    v70(v69, v73);
    v70(v71, v73);
    goto LABEL_20;
  }
  *(_QWORD *)(v0 + 840) = 0;
  v64 = *(_QWORD *)(v0 + 376);
  if (*(_BYTE *)(v64 + *(_QWORD *)(v0 + 648) + 64) == 1)
  {
    v65 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v0 + 848) = v65;
    swift_bridgeObjectRetain();
    type metadata accessor for GeneratedImage();
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    v67 = swift_task_alloc();
    *(_QWORD *)(v0 + 856) = v67;
    *(_QWORD *)(v67 + 16) = v65;
    *(_QWORD *)(v67 + 24) = v64;
    v68 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 864) = v68;
    *v68 = v0;
    v68[1] = sub_249E82CC4;
    v95 = v66;
    return sub_249F1FB14();
  }
  else
  {
    v76 = v0 + 264;
    swift_bridgeObjectRetain_n();
    v77 = sub_249F1EF20();
    v78 = sub_249F1F82C();
    v79 = os_log_type_enabled(v77, v78);
    v80 = *(_QWORD *)(v0 + 488);
    if (v79)
    {
      v81 = *(_QWORD *)(v0 + 480);
      v82 = (uint8_t *)swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      v83 = v94[0];
      *(_DWORD *)v82 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 296) = sub_249E68CA8(v81, v80, v94);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v77, v78, "generated images policy check of %s", v82, 0xCu);
      swift_arrayDestroy();
      v84 = v83;
      v76 = v0 + 264;
      MEMORY[0x24BD06618](v84, -1, -1);
      MEMORY[0x24BD06618](v82, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v85 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 260);
    type metadata accessor for GeneratedImage();
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    v87 = swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v87;
    v88 = *(_OWORD *)(v0 + 584);
    *(_QWORD *)(v87 + 16) = v76;
    *(_QWORD *)(v87 + 24) = v85;
    *(_OWORD *)(v87 + 32) = v88;
    v89 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 880) = v89;
    *v89 = v0;
    v89[1] = sub_249E832E0;
    v95 = v86;
    return sub_249F1FC58();
  }
}

uint64_t sub_249E824D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 824) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v4 + 832) = a1;
  return swift_task_switch();
}

uint64_t sub_249E82564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(uint64_t, _QWORD *);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  unint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = *(_QWORD *)(v0 + 832);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 376);
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(v3 + v2);
  *(_QWORD *)(v0 + 264) = v1;
  v5 = *(_QWORD *)(v3 + v2 + 24);
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v7 = swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_4:
    v9 = *(void **)(v0 + 792);
    v10 = (void *)v7;
    v11 = *(_QWORD *)(v0 + 784);
    v12 = *(_QWORD *)(v0 + 776);
    v13 = *(_QWORD *)(v0 + 768);
    v14 = *(void **)(v0 + 752);
    v63 = *(_QWORD *)(v0 + 744);
    v15 = *(_QWORD *)(v0 + 736);
    v16 = *(_QWORD *)(v0 + 728);
    v66 = *(_QWORD *)(v0 + 680);
    v67 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v68 = *(_QWORD *)(v0 + 608);
    v65 = *(_QWORD *)(v0 + 504);
    v64 = *(_QWORD *)(v0 + 568);

    swift_release();
    v17 = v11;
    v18 = v10;
    sub_249DC0768(v13, v12, v17, v9);
    sub_249DC0768(v16, v15, v63, v14);
    swift_release();
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    sub_249DC0A2C(v64);
    sub_249DE6E98(v0 + 16);
    v67(v66, v65);
    v67(v68, v65);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    v19 = v10;
    v20 = v10;
    v21 = sub_249F1EF20();
    v22 = sub_249F1F820();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v25 = v18;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 272) = v26;
      sub_249F1F9AC();
      *v24 = v26;

      _os_log_impl(&dword_249D98000, v21, v22, "image generation failed - %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v24, -1, -1);
      MEMORY[0x24BD06618](v23, -1, -1);
    }
    else
    {

    }
    v27 = *(_QWORD *)(v0 + 360);

    if (v27)
    {
      v28 = *(_QWORD **)(v0 + 416);
      v29 = *(_QWORD *)(v0 + 376);
      v30 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
      *v28 = v18;
      swift_storeEnumTagMultiPayload();
      v31 = v18;
      v30(v29, v28);
      sub_249DC05A8((uint64_t)v28, type metadata accessor for GenerativePlayground.GenerationEvent);
    }
    v32 = *(_QWORD *)(v0 + 528);
    v33 = *(_QWORD *)(v0 + 504);
    v34 = *(_QWORD *)(v0 + 512);
    swift_willThrow();
    sub_249DDDF68("generateImagesTask", 18, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 824);
  sub_249F1F670();
  v7 = v8;
  if (v8)
    goto LABEL_4;
  v36 = *(void **)(v0 + 792);
  v37 = *(_QWORD *)(v0 + 784);
  v38 = *(_QWORD *)(v0 + 776);
  v39 = *(_QWORD *)(v0 + 768);
  v40 = *(void **)(v0 + 752);
  v41 = *(_QWORD *)(v0 + 744);
  v42 = *(_QWORD *)(v0 + 736);
  v43 = *(_QWORD *)(v0 + 728);

  sub_249DC0768(v39, v38, v37, v36);
  sub_249DC0768(v43, v42, v41, v40);
  *(_QWORD *)(v0 + 840) = 0;
  v44 = *(_QWORD *)(v0 + 376);
  if (*(_BYTE *)(v44 + *(_QWORD *)(v0 + 648) + 64) == 1)
  {
    v45 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v0 + 848) = v45;
    swift_bridgeObjectRetain();
    type metadata accessor for GeneratedImage();
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    v47 = swift_task_alloc();
    *(_QWORD *)(v0 + 856) = v47;
    *(_QWORD *)(v47 + 16) = v45;
    *(_QWORD *)(v47 + 24) = v44;
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 864) = v48;
    *v48 = v0;
    v48[1] = sub_249E82CC4;
    v70 = v46;
    return sub_249F1FB14();
  }
  else
  {
    v49 = v0 + 264;
    swift_bridgeObjectRetain_n();
    v50 = sub_249F1EF20();
    v51 = sub_249F1F82C();
    v52 = os_log_type_enabled(v50, v51);
    v53 = *(_QWORD *)(v0 + 488);
    if (v52)
    {
      v54 = *(_QWORD *)(v0 + 480);
      v55 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      v56 = v69;
      *(_DWORD *)v55 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 296) = sub_249E68CA8(v54, v53, &v69);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v50, v51, "generated images policy check of %s", v55, 0xCu);
      swift_arrayDestroy();
      v57 = v56;
      v49 = v0 + 264;
      MEMORY[0x24BD06618](v57, -1, -1);
      MEMORY[0x24BD06618](v55, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v58 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 260);
    type metadata accessor for GeneratedImage();
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    v60 = swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v60;
    v61 = *(_OWORD *)(v0 + 584);
    *(_QWORD *)(v60 + 16) = v49;
    *(_QWORD *)(v60 + 24) = v58;
    *(_OWORD *)(v60 + 32) = v61;
    v62 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 880) = v62;
    *v62 = v0;
    v62[1] = sub_249E832E0;
    v70 = v59;
    return sub_249F1FC58();
  }
}

uint64_t sub_249E82CC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E82D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD *);
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  unint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[14];

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 376);
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)(v2 + v1);
  v4 = *(_QWORD *)(v0 + 304);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 264) = v4;
  v5 = v3[3];
  v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v7 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_4:
    v46 = *(_QWORD *)(v0 + 680);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v47 = *(_QWORD *)(v0 + 608);
    v10 = *(void **)(v0 + 584);
    v11 = *(_QWORD *)(v0 + 568);
    v12 = *(_QWORD *)(v0 + 504);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    v13 = v11;
    v14 = v7;
    sub_249DC0A2C(v13);
    sub_249DE6E98(v0 + 16);
    v9(v46, v12);
    v9(v47, v12);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    v15 = v7;
    v16 = v7;
    v17 = sub_249F1EF20();
    v18 = sub_249F1F820();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = v7;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 272) = v22;
      sub_249F1F9AC();
      *v20 = v22;

      _os_log_impl(&dword_249D98000, v17, v18, "image generation failed - %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v20, -1, -1);
      MEMORY[0x24BD06618](v19, -1, -1);
    }
    else
    {

    }
    v23 = *(_QWORD *)(v0 + 360);

    if (v23)
    {
      v24 = *(_QWORD **)(v0 + 416);
      v25 = *(_QWORD *)(v0 + 376);
      v26 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
      *v24 = v14;
      swift_storeEnumTagMultiPayload();
      v27 = v14;
      v26(v25, v24);
      sub_249DC05A8((uint64_t)v24, type metadata accessor for GenerativePlayground.GenerationEvent);
    }
    v28 = *(_QWORD *)(v0 + 528);
    v29 = *(_QWORD *)(v0 + 504);
    v30 = *(_QWORD *)(v0 + 512);
    swift_willThrow();
    sub_249DDDF68("generateImagesTask", 18, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(void **)(v0 + 840);
  sub_249F1F670();
  v7 = v8;
  if (v8)
    goto LABEL_4;
  v32 = v0 + 264;
  swift_bridgeObjectRetain_n();
  v33 = sub_249F1EF20();
  v34 = sub_249F1F82C();
  v35 = os_log_type_enabled(v33, v34);
  v36 = *(_QWORD *)(v0 + 488);
  if (v35)
  {
    v37 = *(_QWORD *)(v0 + 480);
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v48[0] = v39;
    *(_DWORD *)v38 = 136315138;
    swift_bridgeObjectRetain();
    v40 = v37;
    v32 = v0 + 264;
    *(_QWORD *)(v0 + 296) = sub_249E68CA8(v40, v36, v48);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v33, v34, "generated images policy check of %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v39, -1, -1);
    MEMORY[0x24BD06618](v38, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v41 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 260);
  type metadata accessor for GeneratedImage();
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
  v43 = swift_task_alloc();
  *(_QWORD *)(v0 + 872) = v43;
  v44 = *(_OWORD *)(v0 + 584);
  *(_QWORD *)(v43 + 16) = v32;
  *(_QWORD *)(v43 + 24) = v41;
  *(_OWORD *)(v43 + 32) = v44;
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 880) = v45;
  *v45 = v0;
  v45[1] = sub_249E832E0;
  v48[12] = v42;
  return sub_249F1FC58();
}

uint64_t sub_249E832E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 888) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E83368()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(uint64_t, _QWORD *);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  void (*v37)(uint64_t, _QWORD *);
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 472));
  v2 = *(_QWORD *)(v0 + 280);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 264) = v2;
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v52 = v0 + 16;
  v53 = v0 + 80;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v5 = swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_4:
    v54 = (id)v5;
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
    v50 = *(_QWORD *)(v0 + 680);
    v51 = *(_QWORD *)(v0 + 608);
    v8 = *(void **)(v0 + 584);
    v9 = *(_QWORD *)(v0 + 568);
    v10 = *(_QWORD *)(v0 + 504);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    v11 = v9;
    v12 = v54;
    sub_249DC0A2C(v11);
    sub_249DE6E98(v52);
    v7(v50, v10);
    v7(v51, v10);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    v13 = v54;
    v14 = v54;
    v15 = sub_249F1EF20();
    v16 = sub_249F1F820();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v19 = v54;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 272) = v20;
      sub_249F1F9AC();
      *v18 = v20;
      v12 = v54;

      _os_log_impl(&dword_249D98000, v15, v16, "image generation failed - %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v18, -1, -1);
      MEMORY[0x24BD06618](v17, -1, -1);
    }
    else
    {

    }
    v21 = *(_QWORD *)(v0 + 360);

    if (v21)
    {
      v22 = *(_QWORD **)(v0 + 416);
      v23 = *(_QWORD *)(v0 + 376);
      v24 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
      *v22 = v12;
      swift_storeEnumTagMultiPayload();
      v25 = v12;
      v24(v23, v22);
      sub_249DC05A8((uint64_t)v22, type metadata accessor for GenerativePlayground.GenerationEvent);
    }
    v26 = *(_QWORD *)(v0 + 528);
    v27 = *(_QWORD *)(v0 + 504);
    v28 = *(_QWORD *)(v0 + 512);
    swift_willThrow();
    sub_249DDDF68("generateImagesTask", 18, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v53);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 888);
  sub_249F1F670();
  v5 = v6;
  if (v6)
    goto LABEL_4;
  swift_bridgeObjectRetain();
  v30 = sub_249F1EF20();
  v31 = sub_249F1F82C();
  v32 = os_log_type_enabled(v30, v31);
  v33 = *(_QWORD *)(v0 + 488);
  if (v32)
  {
    v34 = *(_QWORD *)(v0 + 480);
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v56 = v36;
    *(_DWORD *)v35 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 288) = sub_249E68CA8(v34, v33, &v56);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v30, v31, "generated images with %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v36, -1, -1);
    MEMORY[0x24BD06618](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v37 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
  v38 = *(void **)(v0 + 584);
  v39 = *(_QWORD *)(v0 + 568);
  if (v37)
  {
    v55 = *(id *)(v0 + 568);
    v40 = *(_QWORD **)(v0 + 416);
    v41 = *(_QWORD *)(v0 + 376);
    *v40 = *(_QWORD *)(v0 + 264);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v37(v41, v40);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_249DC0A2C((uint64_t)v55);
    sub_249DC05A8((uint64_t)v40, type metadata accessor for GenerativePlayground.GenerationEvent);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_249DC0A2C(v39);
  }
  v42 = *(_QWORD *)(v0 + 680);
  v43 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
  v44 = *(_QWORD *)(v0 + 608);
  v45 = *(_QWORD *)(v0 + 528);
  v46 = *(_QWORD *)(v0 + 504);
  v47 = *(_QWORD *)(v0 + 432);
  v48 = *(_QWORD *)(v0 + 352);
  sub_249DE6E98(v52);
  v43(v42, v46);
  v43(v44, v46);
  sub_249DC091C(v47, v48, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v49 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DC05A8(v47, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249DDDF68("generateImagesTask", 18, 2);
  swift_release();
  v43(v45, v46);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v53);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v49);
}

uint64_t sub_249E83A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD *);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 568);
  v3 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 512);

  swift_release();
  swift_release();
  sub_249DC0A2C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  v5 = *(void **)(v0 + 632);
  sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v6 = v5;
  v7 = v5;
  v8 = sub_249F1EF20();
  v9 = sub_249F1F820();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v5;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 272) = v13;
    sub_249F1F9AC();
    *v11 = v13;

    _os_log_impl(&dword_249D98000, v8, v9, "image generation failed - %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v11, -1, -1);
    MEMORY[0x24BD06618](v10, -1, -1);
  }
  else
  {

  }
  v14 = *(_QWORD *)(v0 + 360);

  if (v14)
  {
    v15 = *(_QWORD **)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 376);
    v17 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
    *v15 = v5;
    swift_storeEnumTagMultiPayload();
    v18 = v5;
    v17(v16, v15);
    sub_249DC05A8((uint64_t)v15, type metadata accessor for GenerativePlayground.GenerationEvent);
  }
  v19 = *(_QWORD *)(v0 + 528);
  v20 = *(_QWORD *)(v0 + 504);
  v21 = *(_QWORD *)(v0 + 512);
  swift_willThrow();
  sub_249DDDF68("generateImagesTask", 18, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E83D20()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD *);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
  v3 = *(_QWORD *)(v0 + 608);
  v4 = *(_QWORD *)(v0 + 568);
  v5 = *(_QWORD *)(v0 + 504);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_249DC0A2C(v4);
  sub_249DE6E98(v0 + 16);
  v2(v1, v5);
  v2(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(void **)(v0 + 712);
  sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v7 = v6;
  v8 = v6;
  v9 = sub_249F1EF20();
  v10 = sub_249F1F820();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v6;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 272) = v14;
    sub_249F1F9AC();
    *v12 = v14;

    _os_log_impl(&dword_249D98000, v9, v10, "image generation failed - %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v12, -1, -1);
    MEMORY[0x24BD06618](v11, -1, -1);
  }
  else
  {

  }
  v15 = *(_QWORD *)(v0 + 360);

  if (v15)
  {
    v16 = *(_QWORD **)(v0 + 416);
    v17 = *(_QWORD *)(v0 + 376);
    v18 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
    *v16 = v6;
    swift_storeEnumTagMultiPayload();
    v19 = v6;
    v18(v17, v16);
    sub_249DC05A8((uint64_t)v16, type metadata accessor for GenerativePlayground.GenerationEvent);
  }
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 504);
  v22 = *(_QWORD *)(v0 + 512);
  swift_willThrow();
  sub_249DDDF68("generateImagesTask", 18, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E84020()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD *);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  v1 = *(void **)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 776);
  v4 = *(_QWORD *)(v0 + 768);
  v5 = *(void **)(v0 + 752);
  v27 = *(_QWORD *)(v0 + 744);
  v6 = *(_QWORD *)(v0 + 736);
  v7 = *(_QWORD *)(v0 + 728);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
  v31 = *(_QWORD *)(v0 + 608);
  v28 = *(_QWORD *)(v0 + 568);
  v8 = *(_QWORD *)(v0 + 504);

  swift_release();
  sub_249DC0768(v4, v3, v2, v1);
  sub_249DC0768(v7, v6, v27, v5);
  swift_release();
  swift_release();

  swift_release();
  sub_249DC0A2C(v28);
  sub_249DE6E98(v0 + 16);
  v30(v29, v8);
  v30(v31, v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  v9 = *(void **)(v0 + 824);
  sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v10 = v9;
  v11 = v9;
  v12 = sub_249F1EF20();
  v13 = sub_249F1F820();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    v16 = v9;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 272) = v17;
    sub_249F1F9AC();
    *v15 = v17;

    _os_log_impl(&dword_249D98000, v12, v13, "image generation failed - %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v15, -1, -1);
    MEMORY[0x24BD06618](v14, -1, -1);
  }
  else
  {

  }
  v18 = *(_QWORD *)(v0 + 360);

  if (v18)
  {
    v19 = *(_QWORD **)(v0 + 416);
    v20 = *(_QWORD *)(v0 + 376);
    v21 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
    *v19 = v9;
    swift_storeEnumTagMultiPayload();
    v22 = v9;
    v21(v20, v19);
    sub_249DC05A8((uint64_t)v19, type metadata accessor for GenerativePlayground.GenerationEvent);
  }
  v23 = *(_QWORD *)(v0 + 528);
  v24 = *(_QWORD *)(v0 + 504);
  v25 = *(_QWORD *)(v0 + 512);
  swift_willThrow();
  sub_249DDDF68("generateImagesTask", 18, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E843A4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD *);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 640);
  v23 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 568);
  v4 = *(_QWORD *)(v0 + 504);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_249DC0A2C(v3);
  sub_249DE6E98(v0 + 16);
  v2(v1, v4);
  v2(v23, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  v5 = *(void **)(v0 + 888);
  sub_249DC05A8(*(_QWORD *)(v0 + 432), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v6 = v5;
  v7 = v5;
  v8 = sub_249F1EF20();
  v9 = sub_249F1F820();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v5;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 272) = v13;
    sub_249F1F9AC();
    *v11 = v13;

    _os_log_impl(&dword_249D98000, v8, v9, "image generation failed - %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v11, -1, -1);
    MEMORY[0x24BD06618](v10, -1, -1);
  }
  else
  {

  }
  v14 = *(_QWORD *)(v0 + 360);

  if (v14)
  {
    v15 = *(_QWORD **)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 376);
    v17 = *(void (**)(uint64_t, _QWORD *))(v0 + 360);
    *v15 = v5;
    swift_storeEnumTagMultiPayload();
    v18 = v5;
    v17(v16, v15);
    sub_249DC05A8((uint64_t)v15, type metadata accessor for GenerativePlayground.GenerationEvent);
  }
  v19 = *(_QWORD *)(v0 + 528);
  v20 = *(_QWORD *)(v0 + 504);
  v21 = *(_QWORD *)(v0 + 512);
  swift_willThrow();
  sub_249DDDF68("generateImagesTask", 18, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall GenerativePlayground.GenerationTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t GenerativePlayground.GenerationTask.Progress.currentStep.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t GenerativePlayground.GenerationTask.Progress.totalSteps.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

unint64_t GenerativePlayground.GenerationTask.Progress.completionPercentage.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  float v4;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16) | (v1 < 1);
  if (*(_BYTE *)(v0 + 16) & 1 | (v1 < 1))
  {
    v3 = 0;
  }
  else
  {
    v4 = (float)*(uint64_t *)v0 / (float)v1;
    if (v4 > 1.0)
      v4 = 1.0;
    v3 = LODWORD(v4);
  }
  return v3 | ((unint64_t)(v2 & 1) << 32);
}

uint64_t GenerativePlayground.GenerationTask.Progress.generatedImages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.GenerationTask.Progress.images.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for GeneratedImage();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 24);
  if (!v5)
    return 0;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v19 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB68F0(0, v6, 0);
    v8 = *(unsigned __int8 *)(v2 + 80);
    v18 = v5;
    v9 = v5 + ((v8 + 32) & ~v8);
    v10 = *(_QWORD *)(v2 + 72);
    v7 = v19;
    do
    {
      sub_249DC091C(v9, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v11 = *(id *)v4;
      v12 = v4[8];
      v13 = *(id *)v4;
      sub_249DC05A8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB68F0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v19;
      }
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_249DB68F0(v14 > 1, v15 + 1, 1);
        v7 = v19;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_BYTE *)(v16 + 40) = v12;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t GenerativePlayground.GenerationTask.Progress.description.getter()
{
  uint64_t v0;
  char v1;
  uint64_t result;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 16);
  result = sub_249F1FE08();
  v3 = result;
  if ((v1 & 1) == 0)
  {
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t sub_249E849B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  _UNKNOWN **v68;

  v62 = a3;
  v63 = a8;
  v58 = a7;
  v60 = a5;
  v61 = a6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v43[-v17];
  v19 = type metadata accessor for GenerationState();
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v43[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = *a1;
  v45 = a1[1];
  v44 = *((_DWORD *)a1 + 4);
  v22 = *a4;
  v56 = a4[1];
  v57 = v22;
  v55 = a4[2];
  v54 = *((_DWORD *)a4 + 6);
  v53 = a4[4];
  v52 = a4[5];
  v51 = *((unsigned __int8 *)a4 + 48);
  v23 = a4[7];
  v49 = *((unsigned __int8 *)a4 + 64);
  v48 = *((_DWORD *)a4 + 17);
  v47 = *((unsigned __int8 *)a4 + 72);
  v59 = a9;
  sub_249DCC274(a9, (uint64_t)&v64, &qword_2578D6E80);
  if (v65)
  {
    sub_249D9E174(&v64, (uint64_t)&v66);
  }
  else
  {
    v24 = type metadata accessor for _InternalCanceller();
    v25 = v23;
    v26 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
    v27 = swift_allocObject();
    *(_BYTE *)(v27 + 16) = 0;
    *(_QWORD *)(v26 + 16) = v27;
    v67 = v24;
    v68 = &off_251B54510;
    *(_QWORD *)&v66 = v26;
    v23 = v25;
    sub_249DCC2FC((uint64_t)&v64, &qword_2578D6E80);
  }
  v50 = a2;
  sub_249DC091C(a2, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  *(_QWORD *)&v21[*(int *)(v19 + 28) + 48] = v23;
  v28 = (uint64_t)&v21[*(int *)(v19 + 20)];
  sub_249DCC274(v28, (uint64_t)v18, &qword_2578D6288);
  v29 = sub_249F1E8D8();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v29);
  sub_249DCC2FC((uint64_t)v18, &qword_2578D6288);
  if (v31 == 1)
  {
    sub_249F1E8CC();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v16, 0, 1, v29);
    sub_249DC02EC((uint64_t)v16, v28);
  }
  sub_249DC091C((uint64_t)v21, v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v32 = v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__client;
  v33 = v45;
  *(_QWORD *)v32 = v46;
  *(_QWORD *)(v32 + 8) = v33;
  *(_DWORD *)(v32 + 16) = v44;
  v34 = v58;
  if (!v58)
    v34 = objc_msgSend((id)objc_opt_self(), sel_service);
  v35 = v50;
  sub_249DCC2FC(v59, &qword_2578D6E80);
  sub_249DC05A8(v35, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__mediaAnalysisService) = v34;
  v36 = v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__options;
  v37 = v56;
  *(_QWORD *)v36 = v57;
  *(_QWORD *)(v36 + 8) = v37;
  *(_QWORD *)(v36 + 16) = v55;
  *(_DWORD *)(v36 + 24) = v54;
  v38 = v52;
  *(_QWORD *)(v36 + 32) = v53;
  *(_QWORD *)(v36 + 40) = v38;
  *(_BYTE *)(v36 + 48) = v51;
  *(_QWORD *)(v36 + 56) = v23;
  *(_BYTE *)(v36 + 64) = v49;
  *(_DWORD *)(v36 + 68) = v48;
  *(_BYTE *)(v36 + 72) = v47;
  sub_249D9E174(&v66, v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller);
  v39 = (_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__forensicsReporter);
  v41 = v61;
  v40 = v62;
  *v39 = v60;
  v39[1] = v41;
  sub_249DCB1B0(v40, v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__recipePreparer, &qword_2578D6448);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__visionSession) = v63;
  sub_249DC05A8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  return v9;
}

uint64_t sub_249E84DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  type metadata accessor for GeneratedImage();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E84E60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t inited;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 192);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60E0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 224) = inited;
  *(_OWORD *)(inited + 16) = xmmword_249F21760;
  v3 = *(void **)(v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__mediaAnalysisService);
  type metadata accessor for MediaAnalysisServiceImageScaler();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(inited + 32) = v4;
  sub_249F1F55C();
  *(int64x2_t *)(v0 + 56) = vdupq_n_s64(0x400uLL);
  v5 = v3;
  v6 = sub_249E474D4(inited);
  *(_QWORD *)(v0 + 232) = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v7;
  *v7 = v0;
  v7[1] = sub_249E84F54;
  return sub_249E24D00(*(_QWORD *)(v0 + 216), (_OWORD *)(v0 + 56), v6);
}

uint64_t sub_249E84F54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

id sub_249E84FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id result;
  double v12;
  double v13;
  size_t Width;
  uint64_t v15;
  CGImage *v16;
  size_t Height;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if (qword_2578D5CE8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = sub_249F1EF38();
  __swift_project_value_buffer(v3, (uint64_t)qword_2578FF300);
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v4 = sub_249F1EF20();
  v5 = sub_249F1F82C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 208);
  if (!v6)
  {
    sub_249DC05A8(*(_QWORD *)(v0 + 208), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);

LABEL_18:
    sub_249D9E308(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = swift_slowAlloc();
  v9 = swift_slowAlloc();
  v22 = v9;
  *(_DWORD *)v8 = 136315394;
  v10 = *(void **)v7;
  v21 = v5;
  if (!*(_BYTE *)(v7 + 8))
  {
    v16 = v10;
    Width = CGImageGetWidth(v16);
    Height = CGImageGetHeight(v16);
LABEL_16:
    v15 = Height;

    goto LABEL_17;
  }
  if (*(_BYTE *)(v7 + 8) != 1)
  {
    v16 = v10;
    Width = CVPixelBufferGetWidth(v16);
    Height = CVPixelBufferGetHeight(v16);
    goto LABEL_16;
  }
  result = objc_msgSend(v10, sel_extent);
  if (v12 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((*(_QWORD *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_21;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v13 < 9.22337204e18)
  {
    Width = (uint64_t)v12;
    v15 = (uint64_t)v13;
LABEL_17:
    v18 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 128) = Width;
    v23 = sub_249F1FE08();
    v24 = v19;
    sub_249F1F460();
    *(_QWORD *)(v0 + 136) = v15;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_249E68CA8(v23, v24, &v22);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DC05A8(v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 152) = 1024;
    v23 = sub_249F1FE08();
    v24 = v20;
    sub_249F1F460();
    *(_QWORD *)(v0 + 160) = 1024;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 168) = sub_249E68CA8(v23, v24, &v22);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v4, v21, "resized %s generated image to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v9, -1, -1);
    MEMORY[0x24BD06618](v8, -1, -1);

    goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

id sub_249E853C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id result;
  double v15;
  double v16;
  size_t Width;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  CGImage *v21;
  size_t Height;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  NSObject *log;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  swift_bridgeObjectRelease();
  if (qword_2578D5CE8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF300);
  sub_249DC091C(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v5 = v1;
  v6 = v1;
  v7 = sub_249F1EF20();
  v8 = sub_249F1F820();
  if (!os_log_type_enabled(v7, v8))
  {
    v19 = *(void **)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 200);

    sub_249DC05A8(v20, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
LABEL_18:
    sub_249DC091C(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(v0 + 200);
  v10 = swift_slowAlloc();
  v11 = (_QWORD *)swift_slowAlloc();
  v12 = swift_slowAlloc();
  v32 = v12;
  *(_DWORD *)v10 = 136315650;
  v13 = *(void **)v9;
  v30 = v12;
  log = v7;
  v29 = v8;
  if (!*(_BYTE *)(v9 + 8))
  {
    v21 = v13;
    Width = CGImageGetWidth(v21);
    Height = CGImageGetHeight(v21);
LABEL_16:
    v18 = Height;

    goto LABEL_17;
  }
  if (*(_BYTE *)(v9 + 8) != 1)
  {
    v21 = v13;
    Width = CVPixelBufferGetWidth(v21);
    Height = CVPixelBufferGetHeight(v21);
    goto LABEL_16;
  }
  result = objc_msgSend(v13, sel_extent);
  if (v15 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((*(_QWORD *)&v15 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v16 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_21;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v16 < 9.22337204e18)
  {
    Width = (uint64_t)v15;
    v18 = (uint64_t)v16;
LABEL_17:
    v23 = *(void **)(v0 + 248);
    v28 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 72) = Width;
    v33 = sub_249F1FE08();
    v34 = v24;
    sub_249F1F460();
    *(_QWORD *)(v0 + 80) = v18;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = sub_249E68CA8(v33, v34, &v32);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DC05A8(v28, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)(v0 + 96) = 1024;
    v33 = sub_249F1FE08();
    v34 = v25;
    sub_249F1F460();
    *(_QWORD *)(v0 + 104) = 1024;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 112) = sub_249E68CA8(v33, v34, &v32);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2112;
    v26 = v23;
    v27 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v27;
    sub_249F1F9AC();
    *v11 = v27;

    _os_log_impl(&dword_249D98000, log, v29, "could not resize %s generated image to %s: %@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v30, -1, -1);
    MEMORY[0x24BD06618](v10, -1, -1);

    goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_249E85898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  v4[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC9C8);
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v6 = type metadata accessor for GeneratedImage();
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v4[19] = *(_QWORD *)(v7 + 64);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E85994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(unsigned __int8 *)(v3 + 80);
    v5 = v1 + ((v4 + 32) & ~v4);
    v24 = (v4 + 40) & ~v4;
    v25 = *(_QWORD *)(v3 + 72);
    v6 = sub_249F1F604();
    v23 = *(_QWORD *)(v6 - 8);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v26 = v2;
      v8 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 184);
      v10 = *(_QWORD *)(v0 + 168);
      v11 = *(_QWORD *)(v0 + 96);
      v22(v9, 1, 1, v6);
      sub_249DC091C(v5, v10, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = 0;
      v12[3] = 0;
      v12[4] = v11;
      sub_249D9E308(v10, (uint64_t)v12 + v24, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DCC274(v9, v8, &qword_2578D62B8);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v8, 1, v6);
      swift_retain();
      v13 = *(_QWORD *)(v0 + 176);
      if ((_DWORD)v8 == 1)
      {
        sub_249DCC2FC(*(_QWORD *)(v0 + 176), &qword_2578D62B8);
      }
      else
      {
        sub_249F1F5F8();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v6);
      }
      if (v12[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v14 = sub_249F1F5B0();
        v16 = v15;
        swift_unknownObjectRelease();
      }
      else
      {
        v14 = 0;
        v16 = 0;
      }
      v17 = **(_QWORD **)(v0 + 80);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = &unk_2578DC9E0;
      *(_QWORD *)(v18 + 24) = v12;
      v19 = v16 | v14;
      if (v16 | v14)
      {
        v19 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v14;
        *(_QWORD *)(v0 + 40) = v16;
      }
      v7 = *(_QWORD *)(v0 + 184);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v19;
      *(_QWORD *)(v0 + 64) = v17;
      swift_task_create();
      swift_release();
      sub_249DCC2FC(v7, &qword_2578D62B8);
      v5 += v25;
      v2 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
  sub_249F1F5E0();
  *(_QWORD *)(v0 + 192) = MEMORY[0x24BEE4AF8];
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v20;
  *v20 = v0;
  v20[1] = sub_249E85C8C;
  return sub_249F1F5EC();
}

uint64_t sub_249E85C8C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E85CE0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 48))(v1, 1, *(_QWORD *)(v0 + 136));
  v3 = *(_QWORD *)(v0 + 192);
  if (v2 == 1)
  {
    v4 = *(_QWORD **)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    *v4 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249D9E308(v1, *(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *(_QWORD *)(v0 + 192);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v7 = sub_249DB292C(0, *(_QWORD *)(v7 + 16) + 1, 1, *(_QWORD *)(v0 + 192));
    v9 = *(_QWORD *)(v7 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    if (v9 >= v8 >> 1)
      v7 = sub_249DB292C(v8 > 1, v9 + 1, 1, v7);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v7 + 16) = v9 + 1;
    sub_249D9E308(v10, v7+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v9, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    *(_QWORD *)(v0 + 192) = v7;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v12;
    *v12 = v0;
    v12[1] = sub_249E85C8C;
    return sub_249F1F5EC();
  }
}

uint64_t sub_249E85E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_249E85EB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  _QWORD *v10;

  if (qword_2578D5D80 != -1)
    swift_once();
  v1 = sub_249F1EED8();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF408);
  v2 = sub_249F1EE9C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  sub_249F1EE90();
  v5 = sub_249F1EEC0();
  v6 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v7 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v4, v2);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v5, v6, v9, "upscaleImage", "", v8, 2u);
    MEMORY[0x24BD06618](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    swift_task_dealloc();
  }
  else
  {

  }
  swift_task_alloc();
  (*(void (**)(void))(v3 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[5] = sub_249F1EEFC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  v10 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_249E860A0;
  return sub_249E84DE8(v0[2], v0[4]);
}

uint64_t sub_249E860A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E860F4()
{
  uint64_t v0;

  sub_249DDDF68("upscaleImage", 12, 2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E86140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

id sub_249E8615C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  id result;
  double v11;
  double v12;
  size_t Width;
  size_t Height;
  CGImage *v16;
  __CVBuffer *v17;
  uint64_t (*v18)(void);
  __CVBuffer *v19;
  __CVBuffer *v20;
  __CVBuffer *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  if (!MTLCreateSystemDefaultDevice())
  {
    if (qword_2578D5CE8 != -1)
      swift_once();
    v2 = sub_249F1EF38();
    __swift_project_value_buffer(v2, (uint64_t)qword_2578FF300);
    v3 = sub_249F1EF20();
    v4 = sub_249F1F820();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_249D98000, v3, v4, "could not create MTLDevice", v5, 2u);
      MEMORY[0x24BD06618](v5, -1, -1);
    }

    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v6 = 0xD000000000000015;
    *(_QWORD *)(v6 + 8) = 0x8000000249F36DE0;
    *(_QWORD *)(v6 + 16) = 0;
    *(_BYTE *)(v6 + 24) = 5;
    swift_willThrow();
    v18 = (uint64_t (*)(void))v0[1];
    return (id)v18();
  }
  type metadata accessor for ImageBlendingRenderer();
  swift_allocObject();
  v1 = (void *)swift_unknownObjectRetain();
  sub_249E5508C(v1);
  v7 = v0[3];
  v8 = *(void **)v7;
  v9 = *(unsigned __int8 *)(v7 + 8);
  LOBYTE(v31) = v9;
  if (!v9)
  {
    v16 = v8;
    Width = CGImageGetWidth(v16);
    Height = CGImageGetHeight(v16);
    goto LABEL_21;
  }
  if (v9 != 1)
  {
    v17 = v8;
    Width = CVPixelBufferGetWidth(v17);
    Height = CVPixelBufferGetHeight(v17);
    goto LABEL_21;
  }
  result = objc_msgSend(v8, sel_extent, v8, v31);
  if (v11 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((*(_QWORD *)&v11 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_25;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v12 < 9.22337204e18)
  {
    Width = (uint64_t)v11;
    Height = (uint64_t)v12;
LABEL_21:
    v32[0] = Width;
    v32[1] = Height;
    v19 = sub_249E468DC(v32, 0x42475241u);
    v21 = (__CVBuffer *)v0[4];
    v20 = (__CVBuffer *)v0[5];

    sub_249E558EC(v21, v19, v20);
    v23 = v22;
    v25 = v0[2];
    v24 = v0[3];
    v26 = type metadata accessor for GeneratedImage();
    sub_249DC091C(v24 + *(int *)(v26 + 20), v25 + *(int *)(v26 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    *(_QWORD *)v25 = v23;
    *(_BYTE *)(v25 + 8) = 1;
    v27 = (_BYTE *)(v25 + *(int *)(v26 + 24));
    *v27 = 2;
    v28 = type metadata accessor for GeneratedImageIndications();
    v29 = &v27[*(int *)(v28 + 20)];
    v30 = sub_249F1F13C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    swift_unknownObjectRelease();
    swift_release();

    *(_QWORD *)&v27[*(int *)(v28 + 24)] = 0;
    v18 = (uint64_t (*)(void))v0[1];
    return (id)v18();
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249E864F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(_QWORD *)(type metadata accessor for GeneratedImage() - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E86570()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_signpost_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v1 = *(void **)(v0 + 24);
  if (v1 && (v2 = *(void **)(v0 + 32)) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v0 + 80) = v4;
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + 48);
      v6 = *(_DWORD *)(v5 + 80);
      *(_DWORD *)(v0 + 136) = v6;
      v7 = MEMORY[0x24BEE4AF8];
      v8 = *(_QWORD *)(v5 + 72);
      *(_QWORD *)(v0 + 96) = 0;
      *(_QWORD *)(v0 + 104) = v7;
      *(_QWORD *)(v0 + 88) = v8;
      v9 = *(_QWORD *)(v0 + 72);
      v10 = v3 + ((v6 + 32) & ~(unint64_t)v6);
      v11 = v1;
      v12 = v2;
      swift_bridgeObjectRetain();
      sub_249DC091C(v10, v9, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if (qword_2578D5D80 != -1)
        swift_once();
      v13 = sub_249F1EED8();
      __swift_project_value_buffer(v13, (uint64_t)qword_2578FF408);
      v14 = sub_249F1EE9C();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = swift_task_alloc();
      sub_249F1EE90();
      v17 = sub_249F1EEC0();
      v18 = sub_249F1F8A4();
      if ((sub_249F1F958() & 1) != 0)
      {
        v19 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v16, v14);
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        v21 = sub_249F1EE84();
        _os_signpost_emit_with_name_impl(&dword_249D98000, v17, v18, v21, "blendImage", "", v20, 2u);
        MEMORY[0x24BD06618](v20, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
        swift_task_dealloc();
      }
      else
      {

      }
      v25 = *(_QWORD *)(v0 + 24);
      v24 = *(_QWORD *)(v0 + 32);
      swift_task_alloc();
      (*(void (**)(void))(v15 + 16))();
      sub_249F1EF08();
      swift_allocObject();
      *(_QWORD *)(v0 + 112) = sub_249F1EEFC();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
      swift_task_dealloc();
      swift_task_dealloc();
      v26 = swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v26;
      *(_QWORD *)v26 = v0;
      *(_QWORD *)(v26 + 8) = sub_249E868D4;
      v27 = *(_OWORD *)(v0 + 64);
      *(_QWORD *)(v26 + 32) = v25;
      *(_QWORD *)(v26 + 40) = v24;
      *(_OWORD *)(v26 + 16) = v27;
      return swift_task_switch();
    }
    else
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
    }
  }
  else
  {
    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v22 = 0xD000000000000029;
    *(_QWORD *)(v22 + 8) = 0x8000000249F38020;
    *(_QWORD *)(v22 + 16) = 0;
    *(_BYTE *)(v22 + 24) = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249E868D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_249E8694C()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  os_signpost_id_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  sub_249DC091C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *(_QWORD *)(v0 + 104);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v2 = sub_249DB292C(0, *(_QWORD *)(v2 + 16) + 1, 1, *(_QWORD *)(v0 + 104));
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_249DB292C(v3 > 1, v4 + 1, 1, v2);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(unsigned __int8 *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 96) + 1;
  *(_QWORD *)(v2 + 16) = v4 + 1;
  sub_249D9E308(v9, v2 + ((v6 + 32) & ~v6) + v5 * v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DC05A8(v10, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DDDF68("blendImage", 10, 2);
  swift_release();
  sub_249DC05A8(v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  if (v11 == v8)
  {
    v13 = *(void **)(v0 + 24);
    v12 = *(void **)(v0 + 32);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96) + 1;
    *(_QWORD *)(v0 + 96) = v16;
    *(_QWORD *)(v0 + 104) = v2;
    sub_249DC091C(*(_QWORD *)(v0 + 16)+ ((*(unsigned __int8 *)(v0 + 136) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 136))+ v15 * v16, *(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    if (qword_2578D5D80 != -1)
      swift_once();
    v17 = sub_249F1EED8();
    __swift_project_value_buffer(v17, (uint64_t)qword_2578FF408);
    v18 = sub_249F1EE9C();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = swift_task_alloc();
    sub_249F1EE90();
    v21 = sub_249F1EEC0();
    v22 = sub_249F1F8A4();
    if ((sub_249F1F958() & 1) != 0)
    {
      v23 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v23, v20, v18);
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      v25 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v21, v22, v25, "blendImage", "", v24, 2u);
      MEMORY[0x24BD06618](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
      swift_task_dealloc();
    }
    else
    {

    }
    v27 = *(_QWORD *)(v0 + 24);
    v26 = *(_QWORD *)(v0 + 32);
    swift_task_alloc();
    (*(void (**)(void))(v19 + 16))();
    sub_249F1EF08();
    swift_allocObject();
    *(_QWORD *)(v0 + 112) = sub_249F1EEFC();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    v28 = swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v28;
    *(_QWORD *)v28 = v0;
    *(_QWORD *)(v28 + 8) = sub_249E868D4;
    v29 = *(_OWORD *)(v0 + 64);
    *(_QWORD *)(v28 + 32) = v27;
    *(_QWORD *)(v28 + 40) = v26;
    *(_OWORD *)(v28 + 16) = v29;
    return swift_task_switch();
  }
}

uint64_t sub_249E86CD0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  sub_249DDDF68("blendImage", 10, 2);

  swift_release();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E86D64(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, char *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v11 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v13[16] = a3 & 1;
  *((_QWORD *)v13 + 3) = 0;
  swift_storeEnumTagMultiPayload();
  a4(a6, v13);
  return sub_249DC05A8((uint64_t)v13, type metadata accessor for GenerativePlayground.GenerationEvent);
}

uint64_t sub_249E86E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  v6[15] = swift_task_alloc();
  v7 = *(_QWORD *)(type metadata accessor for GenerationRecipe(0) - 8);
  v6[16] = v7;
  v6[17] = *(_QWORD *)(v7 + 64);
  v6[18] = swift_task_alloc();
  v8 = type metadata accessor for GeneratedImage();
  v6[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 + 64);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v6[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E86F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 128);
    v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v5 = *(_QWORD *)v1 + v4;
    v31 = v4;
    v29 = v4 + *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v3 + 72);
    v28 = *(_QWORD *)(v0 + 136) + 7;
    v27 = sub_249F1F604();
    v6 = *(_QWORD *)(v27 - 8);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v26 = v6;
    do
    {
      v34 = v2;
      v8 = *(_QWORD *)(v0 + 200);
      v9 = *(_QWORD *)(v0 + 208);
      v10 = *(_QWORD *)(v0 + 192);
      v11 = *(_QWORD *)(v0 + 144);
      v12 = *(_QWORD *)(v0 + 96);
      v35 = *(void **)(v0 + 104);
      v36 = *(_QWORD *)(v0 + 112);
      v25(v9, 1, 1, v27);
      v33 = v5;
      sub_249DC091C(v5, v10, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC091C(v12, v11, type metadata accessor for GenerationRecipe);
      v13 = (v29 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = 0;
      sub_249D9E308(v10, v14 + v31, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249D9E308(v11, v14 + v13, type metadata accessor for GenerationRecipe);
      v15 = (_QWORD *)(v14 + ((v28 + v13) & 0xFFFFFFFFFFFFFFF8));
      *v15 = v35;
      v15[1] = v36;
      sub_249DCC274(v9, v8, &qword_2578D62B8);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v8, 1, v27);
      v16 = v35;
      swift_retain();
      v17 = *(_QWORD *)(v0 + 200);
      if ((_DWORD)v8 == 1)
      {
        sub_249DCC2FC(*(_QWORD *)(v0 + 200), &qword_2578D62B8);
      }
      else
      {
        sub_249F1F5F8();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v17, v27);
      }
      if (*(_QWORD *)(v14 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v18 = sub_249F1F5B0();
        v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        v18 = 0;
        v20 = 0;
      }
      v21 = **(_QWORD **)(v0 + 80);
      v22 = v20 | v18;
      if (v20 | v18)
      {
        v22 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v18;
        *(_QWORD *)(v0 + 40) = v20;
      }
      v7 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v22;
      *(_QWORD *)(v0 + 64) = v21;
      swift_task_create();
      swift_release();
      sub_249DCC2FC(v7, &qword_2578D62B8);
      v5 = v33 + v30;
      v2 = v34 - 1;
    }
    while (v34 != 1);
    swift_bridgeObjectRelease();
  }
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCA08);
  *v23 = v0;
  v23[1] = sub_249E87270;
  return sub_249F1F688();
}

uint64_t sub_249E87270()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 248) = v0;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v2 + 224) = MEMORY[0x24BEE4AF8];
  }
  return swift_task_switch();
}

uint64_t sub_249E872EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 48))(v1, 1, *(_QWORD *)(v0 + 152));
  v3 = *(_QWORD *)(v0 + 224);
  if (v2 == 1)
  {
    v4 = *(_QWORD **)(v0 + 72);
    sub_249DCC2FC(v1, &qword_2578D6E70);
    *v4 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    sub_249D9E308(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC091C(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *(_QWORD *)(v0 + 224);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v9 = sub_249DB292C(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    v11 = *(_QWORD *)(v9 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    if (v11 >= v10 >> 1)
      v9 = sub_249DB292C(v10 > 1, v11 + 1, 1, v9);
    *(_QWORD *)(v0 + 232) = v9;
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v9 + 16) = v11 + 1;
    sub_249D9E308(v12, v9+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v11, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC05A8(v13, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCA08);
    *v15 = v0;
    v15[1] = sub_249E874EC;
    return sub_249F1F688();
  }
}

uint64_t sub_249E874EC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[31] = v0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[28] = v2[29];
  }
  return swift_task_switch();
}

uint64_t sub_249E8755C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E875E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v13;
  *v13 = v7;
  v13[1] = sub_249DAFCF8;
  return sub_249D9CB50(a1, a4, a5, a6, a7);
}

uint64_t GenerativePlayground.GenerationTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t GenerativePlayground.GenerationTask.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1E8D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  v11 = 0x69746172656E6547;
  v12 = 0xEF206B7361546E6FLL;
  v8 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState;
  v9 = type metadata accessor for GenerationState();
  sub_249DCC274(v8 + *(int *)(v9 + 20), (uint64_t)v3, &qword_2578D6288);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_249F1F460();
    return v11;
  }
  return result;
}

uint64_t GenerativePlayground.GenerationTask.deinit()
{
  uint64_t v0;

  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__mediaAnalysisService));
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller);
  sub_249DCC2FC(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__recipePreparer, &qword_2578D6448);
  sub_249DC0A2C(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__forensicsReporter));
  swift_release();
  return v0;
}

uint64_t GenerativePlayground.GenerationTask.__deallocating_deinit()
{
  GenerativePlayground.GenerationTask.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_249E87940@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState;
  v7 = type metadata accessor for GenerationState();
  sub_249DCC274(v6 + *(int *)(v7 + 20), (uint64_t)v5, &qword_2578D6288);
  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  __break(1u);
  return result;
}

uint64_t sub_249E87A14()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E87A68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_249E87AB8()
{
  return GenerativePlayground.GenerationTask.description.getter();
}

uint64_t sub_249E87AD8()
{
  return type metadata accessor for GenerativePlayground.GenerationTask();
}

uint64_t type metadata accessor for GenerativePlayground.GenerationTask()
{
  uint64_t result;

  result = qword_2578DC8D0;
  if (!qword_2578DC8D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E87B1C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.GenerationTask()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for GenerativePlayground.GenerationTask.Progress()
{
  return &type metadata for GenerativePlayground.GenerationTask.Progress;
}

uint64_t _s14GenerationTaskC7OptionsVwxx()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s14GenerationTaskC7OptionsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v4 = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14GenerationTaskC7OptionsVwca(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v5;
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14GenerationTaskC7OptionsVwta(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t _s14GenerationTaskC7OptionsVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 73))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s14GenerationTaskC7OptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s14GenerationTaskC7OptionsVMa()
{
  return &_s14GenerationTaskC7OptionsVN;
}

uint64_t sub_249E87E9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_249DCC420;
  return sub_249E86E24(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_249E87F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_249DCC420;
  return sub_249E85898(a1, a2, v7, v6);
}

uint64_t sub_249E87F88()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E87FB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_249E86D64(a1, a2, a3 & 1, *(void (**)(uint64_t, char *))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_249E87FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for GeneratedImage();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = (id *)(v0 + ((v2 + 40) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = &v4[*(int *)(type metadata accessor for ImageProvenance() + 20)];
  v6 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = (char *)v3 + *(int *)(v1 + 24);
  v8 = &v7[*(int *)(type metadata accessor for GeneratedImageIndications() + 20)];
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249E880F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratedImage() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 40) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_249DAFCF8;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_249E8817C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E881A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2578DC9D8 + dword_2578DC9D8))(a1, v4);
}

uint64_t sub_249E88210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t);
  uint64_t *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v30;

  v1 = type metadata accessor for GeneratedImage();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for GenerationRecipe(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v30 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease();

  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = v8 + *(int *)(type metadata accessor for ImageProvenance() + 20);
  v10 = sub_249F1E8D8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  v11 = v0 + v3 + *(int *)(v1 + 24);
  v12 = v11 + *(int *)(type metadata accessor for GeneratedImageIndications() + 20);
  v13 = sub_249F1F13C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  v15 = v0 + v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v0 + v7 + v5[8];
  v17 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v19 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
    v19(v16, v18);
    v19(v16 + *(int *)(v17 + 20), v18);
    v20 = (uint64_t *)(v16 + *(int *)(v17 + 24));
    if (v20[2])
    {
      sub_249DC3C24(*v20, v20[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = *(void **)(v15 + v5[14] + 24);
  if (v21)
  {

    swift_release();
  }
  v22 = *(void **)(v15 + v5[15] + 24);
  if (v22)
  {

    swift_release();
  }
  v23 = *(void **)(v15 + v5[16] + 24);
  if (v23)
  {

    swift_release();
  }
  v24 = *(void **)(v15 + v5[17] + 24);
  if (v24)
  {

    swift_release();
  }
  v25 = v15 + v5[18];
  v26 = *(void **)(v25 + 24);
  if (v26)
  {

    swift_release();
  }
  v27 = *(void **)(v25 + 64);
  if (v27)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  v28 = *(void **)(v15 + v5[20] + 24);
  if (v28)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E88548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for GeneratedImage() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for GenerationRecipe(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1 + v5;
  v10 = v1 + v8;
  v11 = (uint64_t *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_249DAFCF8;
  v15 = (_QWORD *)swift_task_alloc();
  v14[2] = v15;
  *v15 = v14;
  v15[1] = sub_249DAFCF8;
  return sub_249D9CB50(a1, v9, v10, v12, v13);
}

uint64_t sub_249E8862C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_249F1E8D8();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E886A0()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  os_signpost_id_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  os_signpost_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 16);
  v1(v0[13], v0[9] + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask_id, v0[10]);
  v46 = 0x206B736154;
  v47 = 0xE500000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v0[14] = 0x206B736154;
  v0[15] = 0xE500000000000000;
  if (qword_2578D5D40 != -1)
    swift_once();
  v2 = sub_249F1EF38();
  v0[16] = __swift_project_value_buffer(v2, (uint64_t)qword_2578FF378);
  swift_bridgeObjectRetain_n();
  v3 = sub_249F1EF20();
  v4 = sub_249F1F82C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v46 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_249E68CA8(0x206B736154, 0xE500000000000000, &v46);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v3, v4, "%s assigning conditioning image", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v6, -1, -1);
    MEMORY[0x24BD06618](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7 = sub_249F1EE9C();
  v0[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v0[18] = v8;
  v9 = v8;
  v10 = swift_task_alloc();
  v0[19] = v10;
  if (qword_2578D5D80 != -1)
    swift_once();
  v12 = v0[12];
  v11 = v0[13];
  v13 = v0[10];
  v14 = sub_249F1EED8();
  __swift_project_value_buffer(v14, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v1(v12, v11, v13);
  v15 = v10;
  v16 = sub_249F1EEC0();
  v17 = sub_249F1F8A4();
  v18 = sub_249F1F958();
  v20 = v0[11];
  v19 = v0[12];
  v21 = v0[10];
  if ((v18 & 1) != 0)
  {
    v45 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v45, v15, v7);
    v43 = v20;
    v22 = (uint8_t *)swift_slowAlloc();
    v44 = v17;
    v23 = swift_slowAlloc();
    v46 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_249F1FE08();
    v0[4] = sub_249E68CA8(v24, v25, &v46);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v26(v19, v21);
    v27 = sub_249F1EE84();
    v28 = v9;
    _os_signpost_emit_with_name_impl(&dword_249D98000, v16, v44, v27, "conditioningImageAssignment", "%{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v23, -1, -1);
    MEMORY[0x24BD06618](v22, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v45, v7);
    swift_task_dealloc();
  }
  else
  {

    v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v26(v19, v21);
    v28 = v9;
  }
  v0[20] = v26;
  v29 = v0[9];
  v30 = v0[7];
  swift_task_alloc();
  (*(void (**)(void))(v28 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[21] = sub_249F1EEFC();
  swift_task_dealloc();
  v31 = *(void **)(v29 + 16);
  v32 = *(_BYTE *)(v29 + 24);
  if (v30)
  {
    v33 = v0[9];
    v34 = (void (*)(uint64_t, uint64_t *))v0[7];
    v46 = *(_QWORD *)(v29 + 16);
    LOBYTE(v47) = v32;
    v35 = v31;
    v34(v33, &v46);

  }
  v37 = v0[8];
  v36 = v0[9];
  v38 = v0[7];
  v39 = swift_task_alloc();
  v0[22] = v39;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v31;
  *(_BYTE *)(v39 + 32) = v32;
  *(_QWORD *)(v39 + 40) = 0x206B736154;
  *(_QWORD *)(v39 + 48) = 0xE500000000000000;
  *(_QWORD *)(v39 + 56) = v38;
  *(_QWORD *)(v39 + 64) = v37;
  v40 = swift_task_alloc();
  v0[23] = v40;
  *(_QWORD *)(v40 + 16) = 0x206B736154;
  *(_QWORD *)(v40 + 24) = 0xE500000000000000;
  v41 = (_QWORD *)swift_task_alloc();
  v0[24] = v41;
  type metadata accessor for DefinitionSession();
  *v41 = v0;
  v41[1] = sub_249E88C5C;
  return sub_249F1FE38();
}

uint64_t sub_249E88C5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249E88CE4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  sub_249DDDF68("conditioningImageAssignment", 27, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E88D90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t *);
  void *v18;
  uint64_t v19;
  id v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v1 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DDDF68("conditioningImageAssignment", 27, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  v5 = v1;
  swift_bridgeObjectRetain();
  v6 = v1;
  v7 = sub_249F1EF20();
  v8 = sub_249F1F820();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_249E68CA8(v11, v10, &v26);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    v14 = v9;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v15;
    sub_249F1F9AC();
    *v13 = v15;

    _os_log_impl(&dword_249D98000, v7, v8, "%s conditioning image rejected - %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v25, -1, -1);
    MEMORY[0x24BD06618](v12, -1, -1);
  }
  else
  {
    v16 = *(void **)(v0 + 200);
    swift_bridgeObjectRelease_n();

  }
  v17 = *(void (**)(uint64_t, uint64_t *))(v0 + 56);
  if (v17)
  {
    v18 = *(void **)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 72);
    v26 = (uint64_t)v18;
    v27 = 64;
    v20 = v18;
    v17(v19, &v26);

  }
  v21 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 80);
  swift_willThrow();
  v21(v22, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id KeyboardEmojiGenerator.ConditioningImageAssignmentTask.conditioningImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

uint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall KeyboardEmojiGenerator.ConditioningImageAssignmentTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0xD000000000000020;
}

uint64_t sub_249E89208(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = a8;
  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 72) = a6;
  *(_BYTE *)(v8 + 25) = a4;
  *(_QWORD *)(v8 + 48) = a2;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_249E89230()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 48)
                + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
    goto LABEL_2;
  sub_249F1F670();
  v4 = *(_BYTE *)(v0 + 25);
  v5 = *(_QWORD *)(v0 + 56);
  type metadata accessor for ImageChecker();
  swift_initStaticObject();
  v15 = v5;
  v16 = v4;
  sub_249DDD43C((uint64_t)&v15, &v14);
  swift_bridgeObjectRelease();
  v7 = v1[3];
  v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v7);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) != 0)
  {
LABEL_2:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v9 = *(_BYTE *)(v0 + 25);
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 40);
    sub_249DE98FC(v10+ OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__definitionSession, v12);
    LOBYTE(v10) = *(_BYTE *)(v10
                           + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__options);
    *(_BYTE *)(v12 + *(int *)(type metadata accessor for DefinitionSession() + 56) + 60) = v10;
    *(_QWORD *)(v0 + 16) = v11;
    *(_BYTE *)(v0 + 24) = v9;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v13;
    *v13 = v0;
    v13[1] = sub_249E89414;
    return sub_249E9B970((uint64_t *)(v0 + 16));
  }
}

uint64_t sub_249E89414()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E89478()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  void *v8;
  void (*v9)(uint64_t, id *);
  uint64_t v10;
  char v11;
  id v12;
  id v14;
  char v15;

  if (qword_2578D5D40 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF378);
  swift_bridgeObjectRetain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 72);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 64);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (void *)swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_249E68CA8(v6, v5, (uint64_t *)&v14);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v2, v3, "%s accepted conditioning image", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void (**)(uint64_t, id *))(v0 + 80);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(_BYTE *)(v0 + 25) | 0x80;
    v14 = *(id *)(v0 + 56);
    v15 = v11;
    v12 = v14;
    v9(v10, &v14);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller);
  return v0;
}

uint64_t KeyboardEmojiGenerator.ConditioningImageAssignmentTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249E89748@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E89790()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E897E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator31ConditioningImageAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249E89834()
{
  return KeyboardEmojiGenerator.ConditioningImageAssignmentTask.description.getter();
}

uint64_t sub_249E89854()
{
  return type metadata accessor for KeyboardEmojiGenerator.ConditioningImageAssignmentTask();
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.ConditioningImageAssignmentTask()
{
  uint64_t result;

  result = qword_2578DCA50;
  if (!qword_2578DCA50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E89898()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for KeyboardEmojiGenerator.ConditioningImageAssignmentTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_249E8994C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v4 = *(_BYTE *)(v1 + 32);
  v9 = *(_OWORD *)(v1 + 40);
  v10 = *(_OWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_249DAFCF8;
  *(_QWORD *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 88) = v5;
  *(_BYTE *)(v7 + 25) = v4;
  *(_OWORD *)(v7 + 48) = v10;
  *(_OWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 40) = a1;
  return swift_task_switch();
}

BOOL static PixelDimensions.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t PixelDimensions.description.getter()
{
  uint64_t v1;

  v1 = sub_249F1FE08();
  sub_249F1F460();
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PixelDimensions.hash(into:)()
{
  sub_249F1FF70();
  return sub_249F1FF70();
}

uint64_t sub_249E89ACC()
{
  _BYTE *v0;

  if (*v0)
    return 0x746867696568;
  else
    return 0x6874646977;
}

uint64_t sub_249E89B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E8A290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E89B24()
{
  sub_249E8A050();
  return sub_249F20024();
}

uint64_t sub_249E89B4C()
{
  sub_249E8A050();
  return sub_249F20030();
}

uint64_t PixelDimensions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCB10);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E8A050();
  sub_249F20018();
  v11 = 0;
  sub_249F1FDC0();
  if (!v2)
  {
    v10 = 1;
    sub_249F1FDC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PixelDimensions.hashValue.getter()
{
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t PixelDimensions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCB20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E8A050();
  sub_249F1FFF4();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_249F1FCF4();
    v13 = 1;
    v10 = sub_249F1FCF4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249E89E34()
{
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t sub_249E89E8C()
{
  sub_249F1FF70();
  return sub_249F1FF70();
}

uint64_t sub_249E89EC4()
{
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t sub_249E89F18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PixelDimensions.init(from:)(a1, a2);
}

uint64_t sub_249E89F2C(_QWORD *a1)
{
  return PixelDimensions.encode(to:)(a1);
}

uint64_t sub_249E89F44(uint64_t *a1, uint64_t *a2)
{
  return sub_249E89F58(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_249E89F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  unsigned int v9;

  if (a4 >= a3)
    v4 = a3;
  else
    v4 = a4;
  if (a2 >= a1)
    v5 = a1;
  else
    v5 = a2;
  if (a4 <= a3)
    v6 = a3;
  else
    v6 = a4;
  if (a2 <= a1)
    v7 = a1;
  else
    v7 = a2;
  v8 = v6 >= v7;
  v9 = v5 < v4 || v8;
  if (v4 >= v5)
    return v9;
  else
    return 0;
}

uint64_t sub_249E89F98(uint64_t *a1, uint64_t *a2)
{
  return sub_249E89FAC(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_249E89FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  unsigned int v9;

  if (a2 >= a1)
    v4 = a1;
  else
    v4 = a2;
  if (a4 >= a3)
    v5 = a3;
  else
    v5 = a4;
  if (a2 <= a1)
    v6 = a1;
  else
    v6 = a2;
  if (a4 <= a3)
    v7 = a3;
  else
    v7 = a4;
  v8 = v6 >= v7;
  v9 = v5 < v4 || v8;
  if (v4 >= v5)
    return v9;
  else
    return 0;
}

uint64_t sub_249E89FEC(uint64_t *a1, uint64_t *a2)
{
  return sub_249DD9918(*a1, a1[1], *a2, a2[1]);
}

uint64_t _s16VisualGeneration15PixelDimensionsV1loiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v3 >= *a1)
    v6 = *a1;
  else
    v6 = a1[1];
  if (v5 >= v4)
    v7 = *a2;
  else
    v7 = a2[1];
  if (v6 < v7)
    return 1;
  if (v3 > v2)
    v2 = a1[1];
  if (v5 > v4)
    v4 = a2[1];
  v9 = v2 < v4;
  return v7 >= v6 && v9;
}

unint64_t sub_249E8A050()
{
  unint64_t result;

  result = qword_2578DCB18;
  if (!qword_2578DCB18)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E5D4, &type metadata for PixelDimensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DCB18);
  }
  return result;
}

unint64_t sub_249E8A098()
{
  unint64_t result;

  result = qword_2578DCB28;
  if (!qword_2578DCB28)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PixelDimensions, &type metadata for PixelDimensions);
    atomic_store(result, (unint64_t *)&qword_2578DCB28);
  }
  return result;
}

ValueMetadata *type metadata accessor for PixelDimensions()
{
  return &type metadata for PixelDimensions;
}

uint64_t storeEnumTagSinglePayload for PixelDimensions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E8A138 + 4 * byte_249F2E3C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E8A16C + 4 * byte_249F2E3C0[v4]))();
}

uint64_t sub_249E8A16C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E8A174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E8A17CLL);
  return result;
}

uint64_t sub_249E8A188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E8A190);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E8A194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E8A19C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PixelDimensions.CodingKeys()
{
  return &type metadata for PixelDimensions.CodingKeys;
}

unint64_t sub_249E8A1BC()
{
  unint64_t result;

  result = qword_2578DCB30;
  if (!qword_2578DCB30)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E5AC, &type metadata for PixelDimensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DCB30);
  }
  return result;
}

unint64_t sub_249E8A204()
{
  unint64_t result;

  result = qword_2578DCB38;
  if (!qword_2578DCB38)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E51C, &type metadata for PixelDimensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DCB38);
  }
  return result;
}

unint64_t sub_249E8A24C()
{
  unint64_t result;

  result = qword_2578DCB40;
  if (!qword_2578DCB40)
  {
    result = MEMORY[0x24BD06528](&unk_249F2E544, &type metadata for PixelDimensions.CodingKeys);
    atomic_store(result, &qword_2578DCB40);
  }
  return result;
}

uint64_t sub_249E8A290(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249E8A370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_task_switch();
}

uint64_t sub_249E8A388()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;

  if (qword_2578D5D80 != -1)
    swift_once();
  v1 = sub_249F1EED8();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF408);
  v2 = sub_249F1EE9C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  sub_249F1EEC0();
  sub_249F1EE78();
  v5 = sub_249F1EEC0();
  v6 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v7 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v4, v2);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v5, v6, v9, "sanitizeText", "", v8, 2u);
    MEMORY[0x24BD06618](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    swift_task_dealloc();
  }
  else
  {

  }
  swift_task_alloc();
  (*(void (**)(void))(v3 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[10] = sub_249F1EEFC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  v10 = sub_249EA4798();
  v0[11] = v11;
  v12 = v11;
  v13 = v0[8];
  v14 = (uint64_t *)v0[9];
  v15 = v10 & 1;
  v16 = type metadata accessor for DefinitionSession();
  v0[12] = v16;
  v17 = *(_QWORD *)(v13 + *(int *)(v16 + 24));
  v0[13] = v17;
  if (v17)
    v18 = nullsub_1;
  else
    v18 = 0;
  if (v17)
    v19 = 3;
  else
    v19 = 1;
  v20 = *v14;
  v21 = v14[1];
  v0[14] = v21;
  v22 = v12;
  swift_bridgeObjectRetain();
  v23 = (_QWORD *)swift_task_alloc();
  v0[15] = v23;
  *v23 = v0;
  v23[1] = sub_249E8A650;
  return sub_249E6F00C(v20, v21, v19, (uint64_t)v18, 0, v15, (uint64_t)v22);
}

uint64_t sub_249E8A650(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

unint64_t sub_249E8A6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_249D9E5BC();
    v3 = (uint64_t *)(v1 + 56);
    while (1)
    {
      v4 = *(_QWORD **)(v0 + 72);
      v5 = *(v3 - 1);
      v6 = *v3;
      v7 = v4[1];
      *(_QWORD *)(v0 + 16) = *v4;
      *(_QWORD *)(v0 + 24) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = sub_249F1F418();
      v9 = v4[1];
      *(_QWORD *)(v0 + 32) = *v4;
      *(_QWORD *)(v0 + 40) = v9;
      swift_bridgeObjectRetain();
      result = sub_249F1F418();
      if (result >> 14 < v8 >> 14)
        break;
      *(_QWORD *)(v0 + 48) = v5;
      *(_QWORD *)(v0 + 56) = v6;
      sub_249E8A8F0();
      sub_249F1F3E8();
      swift_bridgeObjectRelease();
      v3 += 4;
      if (!--v2)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v11 = *(void **)(v0 + 88);
    v12 = *(uint64_t **)(v0 + 72);
    if (*(_QWORD *)(v0 + 104))
      v14 = nullsub_1;
    else
      v14 = 0;
    v16 = *v12;
    v15 = v12[1];
    v17 = *(int *)(*(_QWORD *)(v0 + 96) + 56);
    v13 = *(_QWORD *)(v0 + 64);
    v18 = v13 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_249DC0A2C((uint64_t)v14);

    *(_QWORD *)(v18 + 8) = v16;
    *(_QWORD *)(v18 + 16) = v15;
    sub_249DDDF68("sanitizeText", 12, 2);
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_249E8A87C()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(_QWORD);

  v1 = *(void **)(v0 + 88);
  if (*(_QWORD *)(v0 + 104))
    v2 = nullsub_1;
  else
    v2 = 0;
  sub_249DC0A2C((uint64_t)v2);

  sub_249DDDF68("sanitizeText", 12, 2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_249E8A8F0()
{
  unint64_t result;

  result = qword_2578DCB50;
  if (!qword_2578DCB50)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2578DCB50);
  }
  return result;
}

uint64_t sub_249E8A934(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_249DCA678((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_249DD1880(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_249F1FBBC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_249DCC2FC(a1, (uint64_t *)&unk_2578DD090);
    sub_249E90E60(a2, v9);
    v7 = sub_249F1FBBC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_249DCC2FC((uint64_t)v9, (uint64_t *)&unk_2578DD090);
  }
}

uint64_t sub_249E8AA18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _BYTE v7[48];

  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    sub_249DCC2FC(a1, &qword_2578DCE50);
    sub_249E91040(a2, (uint64_t)v7);
    return sub_249DCC2FC((uint64_t)v7, &qword_2578DCE50);
  }
  else
  {
    sub_249DCA734(a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_249DD2250((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249E8AAC8(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_249E3C5E0(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_249DBE370(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249E8AB34()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager();
  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 112) = sub_249DAE198(MEMORY[0x24BEE4AF8]);
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = -1;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_249E8ABAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  int64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int64_t v99;
  unint64_t v100;
  int64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  int64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  char v114;
  uint64_t v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  _BOOL8 v119;
  uint64_t v120;
  char v121;
  unint64_t v122;
  char v123;
  uint64_t *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  int v137;
  char *v138;
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  unint64_t v146;
  int64_t v147;
  unint64_t v148;
  uint64_t v149;
  int64_t v150;
  int64_t v151;
  unint64_t v152;
  _QWORD *v153;

  v134 = a6;
  v135 = a5;
  v132 = a4;
  v137 = a3;
  v136 = type metadata accessor for GeneratedImageIndications();
  MEMORY[0x24BDAC7A8](v136);
  v138 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for ImageProvenance();
  MEMORY[0x24BDAC7A8](v133);
  v12 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (__OFADD__(a1, 1))
      goto LABEL_144;
    v129 = a1 + 1;
    v130 = v12;
    v141 = a7;
    v131 = a2;
    v13 = a2;
    v148 = sub_249DAEC64(MEMORY[0x24BEE4AF8]);
    type metadata accessor for AppleDiffusionResourceFactory(0);
    v14 = 0;
    v15 = static AppleDiffusionResourceFactory.shared()();
    v27 = v15;
    v143 = OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_baseModelComponentVersions;
    v28 = *(_QWORD *)(v15 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_baseModelComponentVersions);
    v29 = *(_QWORD *)(v28 + 64);
    v139 = v28 + 64;
    v30 = 1 << *(_BYTE *)(v28 + 32);
    if (v30 < 64)
      v31 = ~(-1 << v30);
    else
      v31 = -1;
    v32 = v31 & v29;
    v140 = (unint64_t)(v30 + 63) >> 6;
    v144 = v28;
    swift_bridgeObjectRetain();
    v142 = v27;
LABEL_10:
    if (v32)
    {
      v38 = __clz(__rbit64(v32));
      v39 = (v32 - 1) & v32;
      v40 = v38 | (v14 << 6);
      goto LABEL_30;
    }
    v41 = v14 + 1;
    v42 = v141;
    if (__OFADD__(v14, 1))
      goto LABEL_143;
    if (v41 < v140)
    {
      v43 = *(_QWORD *)(v139 + 8 * v41);
      ++v14;
      if (v43)
        goto LABEL_29;
      v14 = v41 + 1;
      if (v41 + 1 >= v140)
        goto LABEL_83;
      v43 = *(_QWORD *)(v139 + 8 * v14);
      if (v43)
        goto LABEL_29;
      v14 = v41 + 2;
      if (v41 + 2 >= v140)
        goto LABEL_83;
      v43 = *(_QWORD *)(v139 + 8 * v14);
      if (v43)
        goto LABEL_29;
      v14 = v41 + 3;
      if (v41 + 3 >= v140)
        goto LABEL_83;
      v43 = *(_QWORD *)(v139 + 8 * v14);
      if (v43)
        goto LABEL_29;
      v14 = v41 + 4;
      if (v41 + 4 >= v140)
        goto LABEL_83;
      v43 = *(_QWORD *)(v139 + 8 * v14);
      if (v43)
        goto LABEL_29;
      v44 = v41 + 5;
      if (v44 >= v140)
        goto LABEL_83;
      v43 = *(_QWORD *)(v139 + 8 * v44);
      if (v43)
      {
        v14 = v44;
LABEL_29:
        v39 = (v43 - 1) & v43;
        v40 = __clz(__rbit64(v43)) + (v14 << 6);
LABEL_30:
        v45 = *(_QWORD *)(v27 + v143);
        if (*(_QWORD *)(v45 + 16))
        {
          v46 = *(unsigned __int8 *)(*(_QWORD *)(v144 + 48) + v40);
          v47 = sub_249DB8164(*(unsigned __int8 *)(*(_QWORD *)(v144 + 48) + v40));
          if ((v48 & 1) != 0)
          {
            v145 = v46;
            v146 = v39;
            v147 = v14;
            v49 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v47);
            swift_bridgeObjectRetain();
            v50 = (_QWORD *)sub_249DAE2C8(MEMORY[0x24BEE4AF8]);
            v51 = *(_QWORD *)(v49 + 64);
            v149 = v49 + 64;
            v52 = 1 << *(_BYTE *)(v49 + 32);
            if (v52 < 64)
              v53 = ~(-1 << v52);
            else
              v53 = -1;
            v54 = v53 & v51;
            v150 = (unint64_t)(v52 + 63) >> 6;
            swift_bridgeObjectRetain();
            v55 = 0;
            while (1)
            {
              if (v54)
              {
                v57 = __clz(__rbit64(v54));
                v42 = (v54 - 1) & v54;
                v58 = v57 | (v55 << 6);
              }
              else
              {
                v59 = v55 + 1;
                if (__OFADD__(v55, 1))
                {
                  __break(1u);
LABEL_136:
                  swift_release();
                  swift_bridgeObjectRelease();
                  __asm { BR              X10 }
                }
                if (v59 >= v150)
                {
LABEL_9:
                  swift_release();
                  swift_bridgeObjectRelease();
                  v33 = AppleDiffusionPipeline.ComponentModel.rawValue.getter(v145);
                  v35 = v34;
                  v36 = v148;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v153 = (_QWORD *)v36;
                  sub_249DD2360((uint64_t)v50, v33, v35, isUniquelyReferenced_nonNull_native);
                  v148 = (unint64_t)v153;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v27 = v142;
                  v32 = v146;
                  v14 = v147;
                  goto LABEL_10;
                }
                v60 = *(_QWORD *)(v149 + 8 * v59);
                ++v55;
                if (!v60)
                {
                  v55 = v59 + 1;
                  if (v59 + 1 >= v150)
                    goto LABEL_9;
                  v60 = *(_QWORD *)(v149 + 8 * v55);
                  if (!v60)
                  {
                    v55 = v59 + 2;
                    if (v59 + 2 >= v150)
                      goto LABEL_9;
                    v60 = *(_QWORD *)(v149 + 8 * v55);
                    if (!v60)
                    {
                      v55 = v59 + 3;
                      if (v59 + 3 >= v150)
                        goto LABEL_9;
                      v60 = *(_QWORD *)(v149 + 8 * v55);
                      if (!v60)
                      {
                        v55 = v59 + 4;
                        if (v59 + 4 >= v150)
                          goto LABEL_9;
                        v60 = *(_QWORD *)(v149 + 8 * v55);
                        if (!v60)
                        {
                          v61 = v59 + 5;
                          if (v61 >= v150)
                            goto LABEL_9;
                          v60 = *(_QWORD *)(v149 + 8 * v61);
                          if (!v60)
                          {
                            while (1)
                            {
                              v55 = v61 + 1;
                              if (__OFADD__(v61, 1))
                                break;
                              if (v55 >= v150)
                                goto LABEL_9;
                              v60 = *(_QWORD *)(v149 + 8 * v55);
                              ++v61;
                              if (v60)
                                goto LABEL_57;
                            }
LABEL_139:
                            __break(1u);
LABEL_140:
                            __break(1u);
LABEL_141:
                            __break(1u);
LABEL_142:
                            __break(1u);
LABEL_143:
                            __break(1u);
LABEL_144:
                            __break(1u);
LABEL_145:
                            __break(1u);
LABEL_146:
                            __break(1u);
LABEL_147:
                            __break(1u);
LABEL_148:
                            __break(1u);
LABEL_149:
                            __break(1u);
                            goto LABEL_150;
                          }
                          v55 = v61;
                        }
                      }
                    }
                  }
                }
LABEL_57:
                v42 = (v60 - 1) & v60;
                v58 = __clz(__rbit64(v60)) + (v55 << 6);
              }
              v62 = *(_QWORD *)(v49 + 48);
              v63 = *(unsigned __int8 *)(v62 + v58);
              if (*(_BYTE *)(v62 + v58))
              {
                if (v63 == 1)
                  v64 = 0x676E696E69617274;
                else
                  v64 = 0x6365705361726F6CLL;
                if (v63 == 1)
                  v27 = 0xEB00000000676154;
                else
                  v27 = 0xE800000000000000;
                if (!*(_QWORD *)(v49 + 16))
                {
LABEL_80:
                  __break(1u);
LABEL_81:
                  __break(1u);
LABEL_82:
                  __break(1u);
                  goto LABEL_83;
                }
              }
              else
              {
                v27 = 0xE700000000000000;
                v64 = 0x676F6C61746163;
                if (!*(_QWORD *)(v49 + 16))
                  goto LABEL_80;
              }
              v65 = sub_249DB7FAC(v63);
              if ((v66 & 1) == 0)
                goto LABEL_81;
              v151 = v55;
              v152 = v42;
              v67 = v49;
              v68 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 16 * v65);
              v42 = *v68;
              v69 = v68[1];
              swift_bridgeObjectRetain();
              v70 = swift_isUniquelyReferenced_nonNull_native();
              v153 = v50;
              v71 = v64;
              v73 = sub_249DB7D8C(v64, v27);
              v74 = v50[2];
              v75 = (v72 & 1) == 0;
              v76 = v74 + v75;
              if (__OFADD__(v74, v75))
                goto LABEL_82;
              v77 = v72;
              if (v50[3] >= v76)
              {
                if ((v70 & 1) != 0)
                {
                  v50 = v153;
                  if ((v72 & 1) != 0)
                    goto LABEL_36;
                }
                else
                {
                  sub_249DBCA40();
                  v50 = v153;
                  if ((v77 & 1) != 0)
                    goto LABEL_36;
                }
              }
              else
              {
                sub_249DB9A1C(v76, v70);
                v78 = sub_249DB7D8C(v71, v27);
                if ((v77 & 1) != (v79 & 1))
                  goto LABEL_151;
                v73 = v78;
                v50 = v153;
                if ((v77 & 1) != 0)
                {
LABEL_36:
                  v56 = (uint64_t *)(v50[7] + 16 * v73);
                  swift_bridgeObjectRelease();
                  *v56 = v42;
                  v56[1] = v69;
                  goto LABEL_37;
                }
              }
              v50[(v73 >> 6) + 8] |= 1 << v73;
              v80 = (uint64_t *)(v50[6] + 16 * v73);
              *v80 = v71;
              v80[1] = v27;
              v81 = (uint64_t *)(v50[7] + 16 * v73);
              *v81 = v42;
              v81[1] = v69;
              v82 = v50[2];
              v83 = __OFADD__(v82, 1);
              v84 = v82 + 1;
              if (v83)
              {
                __break(1u);
LABEL_86:
                v85 = *(_QWORD *)(v27 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_adapterVersions);
                if (!*(_QWORD *)(v85 + 16))
                  goto LABEL_148;
                v86 = sub_249DB7F54(v132);
                if ((v87 & 1) == 0)
                  goto LABEL_149;
                v88 = *(_QWORD *)(*(_QWORD *)(v85 + 56) + 8 * v86);
                swift_bridgeObjectRetain();
                v89 = (_QWORD *)sub_249DAE2C8(MEMORY[0x24BEE4AF8]);
                v90 = *(_QWORD *)(v88 + 64);
                v150 = v88 + 64;
                v91 = 1 << *(_BYTE *)(v88 + 32);
                v92 = -1;
                if (v91 < 64)
                  v92 = ~(-1 << v91);
                v93 = v92 & v90;
                v151 = (unint64_t)(v91 + 63) >> 6;
                swift_bridgeObjectRetain();
                v94 = 0;
                while (2)
                {
                  if (v93)
                  {
                    v96 = __clz(__rbit64(v93));
                    v97 = (v93 - 1) & v93;
                    v98 = v96 | (v94 << 6);
                  }
                  else
                  {
                    v99 = v94 + 1;
                    if (__OFADD__(v94, 1))
                      goto LABEL_146;
                    if (v99 >= v151)
                      goto LABEL_136;
                    v100 = *(_QWORD *)(v150 + 8 * v99);
                    ++v94;
                    if (!v100)
                    {
                      v94 = v99 + 1;
                      if (v99 + 1 >= v151)
                        goto LABEL_136;
                      v100 = *(_QWORD *)(v150 + 8 * v94);
                      if (!v100)
                      {
                        v94 = v99 + 2;
                        if (v99 + 2 >= v151)
                          goto LABEL_136;
                        v100 = *(_QWORD *)(v150 + 8 * v94);
                        if (!v100)
                        {
                          v94 = v99 + 3;
                          if (v99 + 3 >= v151)
                            goto LABEL_136;
                          v100 = *(_QWORD *)(v150 + 8 * v94);
                          if (!v100)
                          {
                            v94 = v99 + 4;
                            if (v99 + 4 >= v151)
                              goto LABEL_136;
                            v100 = *(_QWORD *)(v150 + 8 * v94);
                            if (!v100)
                            {
                              v101 = v99 + 5;
                              if (v101 >= v151)
                                goto LABEL_136;
                              v100 = *(_QWORD *)(v150 + 8 * v101);
                              if (!v100)
                              {
                                while (1)
                                {
                                  v94 = v101 + 1;
                                  if (__OFADD__(v101, 1))
                                    break;
                                  if (v94 >= v151)
                                    goto LABEL_136;
                                  v100 = *(_QWORD *)(v150 + 8 * v94);
                                  ++v101;
                                  if (v100)
                                    goto LABEL_112;
                                }
LABEL_150:
                                __break(1u);
LABEL_151:
                                sub_249F1FF10();
                                __break(1u);
                                JUMPOUT(0x249E8B8D8);
                              }
                              v94 = v101;
                            }
                          }
                        }
                      }
                    }
LABEL_112:
                    v97 = (v100 - 1) & v100;
                    v98 = __clz(__rbit64(v100)) + (v94 << 6);
                  }
                  v102 = *(_QWORD *)(v88 + 48);
                  v103 = *(unsigned __int8 *)(v102 + v98);
                  if (*(_BYTE *)(v102 + v98))
                  {
                    if (v103 == 1)
                      v104 = 0x676E696E69617274;
                    else
                      v104 = 0x6365705361726F6CLL;
                    if (v103 == 1)
                      v105 = 0xEB00000000676154;
                    else
                      v105 = 0xE800000000000000;
                    if (!*(_QWORD *)(v88 + 16))
                      goto LABEL_140;
                  }
                  else
                  {
                    v105 = 0xE700000000000000;
                    v104 = 0x676F6C61746163;
                    if (!*(_QWORD *)(v88 + 16))
                      goto LABEL_140;
                  }
                  v106 = sub_249DB7FAC(v103);
                  if ((v107 & 1) == 0)
                    goto LABEL_141;
                  v152 = v97;
                  v108 = v94;
                  v109 = v88;
                  v110 = (uint64_t *)(*(_QWORD *)(v88 + 56) + 16 * v106);
                  v112 = *v110;
                  v111 = v110[1];
                  swift_bridgeObjectRetain();
                  v113 = v89;
                  v114 = swift_isUniquelyReferenced_nonNull_native();
                  v153 = v113;
                  v115 = v104;
                  v117 = sub_249DB7D8C(v104, v105);
                  v118 = v113[2];
                  v119 = (v116 & 1) == 0;
                  v120 = v118 + v119;
                  if (__OFADD__(v118, v119))
                    goto LABEL_142;
                  v121 = v116;
                  if (v113[3] >= v120)
                  {
                    if ((v114 & 1) != 0)
                    {
                      v89 = v153;
                      if ((v116 & 1) == 0)
                        goto LABEL_131;
                    }
                    else
                    {
                      sub_249DBCA40();
                      v89 = v153;
                      if ((v121 & 1) == 0)
                        goto LABEL_131;
                    }
                  }
                  else
                  {
                    sub_249DB9A1C(v120, v114);
                    v122 = sub_249DB7D8C(v115, v105);
                    if ((v121 & 1) != (v123 & 1))
                      goto LABEL_151;
                    v117 = v122;
                    v89 = v153;
                    if ((v121 & 1) == 0)
                    {
LABEL_131:
                      v89[(v117 >> 6) + 8] |= 1 << v117;
                      v124 = (uint64_t *)(v89[6] + 16 * v117);
                      *v124 = v115;
                      v124[1] = v105;
                      v125 = (_QWORD *)(v89[7] + 16 * v117);
                      *v125 = v112;
                      v125[1] = v111;
                      v126 = v89[2];
                      v83 = __OFADD__(v126, 1);
                      v127 = v126 + 1;
                      if (v83)
                        goto LABEL_145;
                      v89[2] = v127;
                      swift_bridgeObjectRetain();
                      goto LABEL_92;
                    }
                  }
                  v95 = (_QWORD *)(v89[7] + 16 * v117);
                  swift_bridgeObjectRelease();
                  *v95 = v112;
                  v95[1] = v111;
LABEL_92:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v88 = v109;
                  v94 = v108;
                  v93 = v152;
                  continue;
                }
              }
              v50[2] = v84;
              swift_bridgeObjectRetain();
LABEL_37:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v49 = v67;
              v55 = v151;
              v54 = v152;
            }
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_139;
      }
      while (1)
      {
        v14 = v44 + 1;
        if (__OFADD__(v44, 1))
          goto LABEL_147;
        if (v14 >= v140)
          break;
        v43 = *(_QWORD *)(v139 + 8 * v14);
        ++v44;
        if (v43)
          goto LABEL_29;
      }
    }
LABEL_83:
    swift_release();
    if (v132 != 9)
      goto LABEL_86;
    swift_release();
    v16 = v133;
    v17 = v130;
    v18 = &v130[*(int *)(v133 + 20)];
    v19 = sub_249F1E8D8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, v134, v19);
    *v17 = v135;
    *(_QWORD *)&v17[*(int *)(v16 + 24)] = v129;
    *(_QWORD *)&v17[*(int *)(v16 + 28)] = v148;
    v20 = v136;
    v21 = v138;
    v22 = &v138[*(int *)(v136 + 20)];
    v23 = sub_249F1F13C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *(_QWORD *)&v21[*(int *)(v20 + 24)] = 0;
    *v21 = v137;
    v24 = type metadata accessor for GeneratedImage();
    sub_249DC091C((uint64_t)v17, v42 + *(int *)(v24 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    sub_249DC091C((uint64_t)v21, v42 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
    *(_QWORD *)v42 = v131;
    *(_BYTE *)(v42 + 8) = 2;
    sub_249DC05A8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
    sub_249DC05A8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v42, 0, 1, v24);
  }
  else
  {
    v25 = type metadata accessor for GeneratedImage();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a7, 1, 1, v25);
  }
}

uint64_t sub_249E8B8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  type metadata accessor for PipelineConfiguration(0);
  v4[17] = swift_task_alloc();
  v5 = sub_249F1E8D8();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E8B99C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_BYTE *)(v0 + 200) = **(_BYTE **)(v0 + 104);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v1;
  *v1 = v0;
  v1[1] = sub_249E8BA14;
  v2 = *(_QWORD *)(v0 + 128);
  v1[8] = *(_QWORD *)(v0 + 104);
  v1[9] = v2;
  v1[7] = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_249E8BA14(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = v1;
  *(_BYTE *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 56) = v2;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8BA84()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68[2];

  v1 = (_QWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 16);
  ((void (*)(_QWORD))v2)(*(_QWORD *)(v0 + 176));
  if (qword_2578D5D78 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = sub_249F1EF38();
  __swift_project_value_buffer(v6, (uint64_t)qword_2578FF3F0);
  v63 = v2;
  v2(v3, v4, v5);
  v7 = sub_249F1EF20();
  v8 = sub_249F1F82C();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 152);
  if (v9)
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v68[0] = v14;
    *(_DWORD *)v13 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v15 = sub_249F1FE08();
    *(_QWORD *)(v0 + 96) = sub_249E68CA8(v15, v16, v68);
    sub_249F1F9AC();
    v1 = (_QWORD *)(v0 + 16);
    swift_bridgeObjectRelease();
    v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v17(v10, v12);
    _os_log_impl(&dword_249D98000, v7, v8, "Configuring pipeline for task %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v14, -1, -1);
    MEMORY[0x24BD06618](v13, -1, -1);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v17(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));
  }

  v18 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 104);
  type metadata accessor for AppleDiffusionImageGenerator();
  sub_249E8E44C(v20, (uint64_t)v1, v19);
  if (v18)
  {
    v21 = *(_QWORD *)(v0 + 176);
    v22 = *(_QWORD *)(v0 + 144);
LABEL_12:
    v17(v21, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v23 = *(_QWORD **)(v0 + 112);
  v24 = v23[5];
  v25 = v23[6];
  __swift_project_boxed_opaque_existential_1(v23 + 2, v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    v26 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);
LABEL_11:
    sub_249DC05A8(v27, type metadata accessor for PipelineConfiguration);
    v21 = v26;
    v22 = v28;
    goto LABEL_12;
  }
  sub_249F1F670();
  swift_retain_n();
  v30 = sub_249F1EF20();
  v31 = sub_249F1F82C();
  v66 = (uint64_t)v1;
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v62 = swift_slowAlloc();
    v68[0] = v62;
    *(_DWORD *)v32 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v33 = sub_249F1FE08();
    *(_QWORD *)(v0 + 88) = sub_249E68CA8(v33, v34, v68);
    sub_249F1F9AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v30, v31, "Running pipeline image generation for task %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v62, -1, -1);
    MEMORY[0x24BD06618](v32, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v36 = *(_QWORD *)(v0 + 128);
  v35 = *(_QWORD *)(v0 + 136);
  v37 = *(_QWORD *)(v0 + 40);
  v38 = *(_QWORD *)(v0 + 48);
  v67 = *(_OWORD *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1(v1, v37);
  v39 = v67 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_requestIdentifier;
  v40 = swift_task_alloc();
  *(_OWORD *)(v40 + 16) = v67;
  *(_QWORD *)(v40 + 32) = v36;
  (*(void (**)(uint64_t, uint64_t, BOOL (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v38 + 24))(v35, v39, sub_249E92914, v40, v37, v38);
  v41 = *(_QWORD *)(v0 + 176);
  v42 = *(_QWORD *)(v0 + 160);
  v43 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc();
  v63(v42, v41, v43);
  v44 = sub_249F1EF20();
  v45 = sub_249F1F82C();
  v46 = os_log_type_enabled(v44, v45);
  v47 = *(_QWORD *)(v0 + 160);
  v48 = *(_QWORD *)(v0 + 144);
  if (v46)
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v68[0] = v65;
    *(_DWORD *)v49 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v50 = sub_249F1FE08();
    *(_QWORD *)(v0 + 80) = sub_249E68CA8(v50, v51, v68);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v17(v47, v48);
    _os_log_impl(&dword_249D98000, v44, v45, "Completed pipeline image generation for task %{public}s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v65, -1, -1);
    MEMORY[0x24BD06618](v49, -1, -1);
  }
  else
  {
    v17(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  }

  v1 = (_QWORD *)v66;
  v52 = v23[5];
  v53 = v23[6];
  __swift_project_boxed_opaque_existential_1(v23 + 2, v52);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    v26 = *(_QWORD *)(v0 + 176);
    v54 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease();
    v27 = v54;
    goto LABEL_11;
  }
  sub_249F1F670();
  v55 = *(_BYTE *)(v0 + 64);
  v56 = *(_BYTE *)(v0 + 200);
  v57 = *(_QWORD *)(v0 + 176);
  v58 = *(_QWORD *)(v0 + 136);
  v64 = *(_QWORD *)(v0 + 144);
  v59 = swift_task_alloc();
  *(_BYTE *)(v59 + 16) = v55;
  *(_BYTE *)(v59 + 17) = v56;
  *(_QWORD *)(v59 + 24) = v57;
  v60 = swift_bridgeObjectRetain();
  v61 = sub_249E918FC(v60, (void (*)(uint64_t, void *, uint64_t))sub_249E92920);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  sub_249DC05A8(v58, type metadata accessor for PipelineConfiguration);
  v17(v57, v64);
  __swift_destroy_boxed_opaque_existential_1(v66);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v61);
}

uint64_t sub_249E8C2F0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_249E8C34C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  char v17;
  ValueMetadata *v18;
  _UNKNOWN **v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v8 = a2[5];
  v9 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  if ((v10 & 1) == 0)
  {
    sub_249DCC274(a3, (uint64_t)&v16, &qword_2578D73D8);
    if (v18)
    {
      sub_249D9E174(&v16, (uint64_t)v20);
      v11 = *(_QWORD *)(a1 + 56);
      v12 = *(_QWORD *)(a1 + 64);
      v13 = v21;
      v14 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      v18 = &type metadata for ProgressInfo;
      v19 = &off_251B58C18;
      *(_QWORD *)&v16 = v11;
      *((_QWORD *)&v16 + 1) = v12;
      v17 = 0;
      (*(void (**)(uint64_t, _QWORD *, __int128 *, uint64_t, uint64_t))(v14 + 16))(a4, a2, &v16, v13, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      sub_249DCC2FC((uint64_t)&v16, &qword_2578D73D8);
    }
  }
  return (v10 & 1) == 0;
}

uint64_t sub_249E8C468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_249F1E9E0();
  v0 = v5;
  v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v2 = MEMORY[0x24BD04698](v0, *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

void sub_249E8C4D0(_DWORD *a1@<X8>)
{
  *a1 = 7;
}

unint64_t sub_249E8C4DC()
{
  return 0xD000000000000029;
}

void sub_249E8C4F8(_QWORD *a1@<X8>)
{
  a1[3] = &type metadata for AppleDiffusionImageGenerator.Descriptor;
  a1[4] = &off_251B58BC0;
  *a1 = 0xD000000000000029;
  a1[1] = 0x8000000249F34090;
}

uint64_t sub_249E8C52C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 832) = v2;
  *(_BYTE *)(v3 + 65) = a2;
  *(_QWORD *)(v3 + 824) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  *(_QWORD *)(v3 + 840) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E8C590()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD v38[5];
  char v39;

  v1 = (_OWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 832) + 112;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v4 = *(unsigned __int8 *)(v0 + 65);
    swift_bridgeObjectRetain();
    v5 = sub_249DB7F54(v4);
    if ((v6 & 1) != 0)
    {
      sub_249DCA6F8(*(_QWORD *)(v3 + 56) + 48 * v5, v0 + 128);
    }
    else
    {
      *(_QWORD *)(v0 + 160) = 0;
      *v1 = 0u;
      *(_OWORD *)(v0 + 144) = 0u;
      *(_BYTE *)(v0 + 168) = -1;
    }
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v0 + 168) != 255)
    {
      sub_249DCA734(v0 + 128, v0 + 224);
      sub_249DCA6F8(v0 + 224, v0 + 512);
      if (*(_BYTE *)(v0 + 552) == 1)
      {
        sub_249D9E174((__int128 *)(v0 + 512), *(_QWORD *)(v0 + 824));
        sub_249E92598(v0 + 224);
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      *(_QWORD *)(v0 + 848) = *(_QWORD *)(v0 + 512);
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 856) = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
      *v29 = v0;
      v29[1] = sub_249E8CC4C;
      return sub_249F1F658();
    }
  }
  else
  {
    *(_QWORD *)(v0 + 160) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_BYTE *)(v0 + 168) = -1;
  }
  v7 = (_BYTE *)(v0 + 16);
  v33 = v0 + 640;
  v34 = v0 + 272;
  v35 = v0 + 320;
  sub_249DCC2FC(v0 + 128, &qword_2578DCE50);
  v8 = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 872) = *(_QWORD *)v2;
  v36 = v8 + 64;
  v9 = -1;
  v10 = -1 << *(_BYTE *)(v8 + 32);
  if (-v10 < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(63 - v10) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v11)
    goto LABEL_14;
LABEL_12:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v14 = v13 | (v12 << 6);
  while (2)
  {
    *v7 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v14);
    sub_249DCA6F8(*(_QWORD *)(v8 + 56) + 48 * v14, v0 + 24);
    while (1)
    {
      sub_249DCB1B0(v0 + 16, v0 + 72, &qword_2578DCE68);
      if (*(unsigned __int8 *)(v0 + 120) == 255)
      {
        v18 = *(_QWORD *)(v0 + 832);
        swift_release();
        swift_beginAccess();
        sub_249DCC274(v18 + 120, v35, &qword_2578DCE50);
        if (*(unsigned __int8 *)(v0 + 360) == 255)
        {
          *(_QWORD *)(v0 + 272) = sub_249E92364();
          *(_BYTE *)(v0 + 312) = 0;
          sub_249DCC2FC(v35, &qword_2578DCE50);
        }
        else
        {
          sub_249DCA734(v35, v34);
        }
        v19 = *(_QWORD *)(v0 + 840);
        v20 = *(_QWORD *)(v0 + 832);
        v21 = *(unsigned __int8 *)(v0 + 65);
        v22 = sub_249F1F604();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
        sub_249DCA6F8(v34, v0 + 416);
        v23 = sub_249D9BBEC(&qword_2578DCE78, (uint64_t (*)(uint64_t))type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager, (uint64_t)&unk_249F2E6F8);
        v24 = swift_allocObject();
        *(_QWORD *)(v24 + 16) = v20;
        *(_QWORD *)(v24 + 24) = v23;
        *(_QWORD *)(v24 + 32) = v20;
        sub_249DCA734(v0 + 416, v24 + 40);
        *(_BYTE *)(v24 + 81) = v21;
        swift_retain_n();
        v25 = sub_249E5FDB4(v19, (uint64_t)&unk_2578DCE80, v24);
        *(_QWORD *)(v0 + 904) = v25;
        v38[0] = v25;
        v39 = 0;
        swift_beginAccess();
        swift_retain();
        sub_249E8AA18((uint64_t)v38, v21);
        swift_endAccess();
        v26 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 912) = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
        *v26 = v0;
        v26[1] = sub_249E8CE84;
        return sub_249F1F658();
      }
      sub_249DCA734(v0 + 80, v0 + 464);
      if (*(_BYTE *)(v0 + 504) == 1)
      {
        v27 = *(unsigned __int8 *)(v0 + 65);
        sub_249D9E174((__int128 *)(v0 + 464), v33);
        v28 = sub_249E91B54(v27, v33);
        *(_QWORD *)(v0 + 880) = v28;
        v31 = *(unsigned __int8 *)(v0 + 65);
        v38[0] = v28;
        v39 = 0;
        swift_beginAccess();
        swift_retain();
        sub_249E8AA18((uint64_t)v38, v31);
        swift_endAccess();
        v32 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 888) = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
        *v32 = v0;
        v32[1] = sub_249E8CD40;
        return sub_249F1F658();
      }
      result = sub_249E92598(v0 + 464);
      if (v11)
        goto LABEL_12;
LABEL_14:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v15 < v37)
      {
        v16 = *(_QWORD *)(v36 + 8 * v15);
        if (v16)
          goto LABEL_17;
        v17 = v12 + 2;
        ++v12;
        if (v15 + 1 < v37)
        {
          v16 = *(_QWORD *)(v36 + 8 * v17);
          if (v16)
            goto LABEL_20;
          v12 = v15 + 1;
          if (v15 + 2 < v37)
          {
            v16 = *(_QWORD *)(v36 + 8 * (v15 + 2));
            if (v16)
            {
              v15 += 2;
              goto LABEL_17;
            }
            v17 = v15 + 3;
            v12 = v15 + 2;
            if (v15 + 3 < v37)
              break;
          }
        }
      }
LABEL_31:
      v11 = 0;
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)v7 = 0u;
      *(_BYTE *)(v0 + 64) = -1;
    }
    v16 = *(_QWORD *)(v36 + 8 * v17);
    if (v16)
    {
LABEL_20:
      v15 = v17;
LABEL_17:
      v11 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v15 << 6);
      v12 = v15;
      continue;
    }
    break;
  }
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v37)
    {
      v12 = v37 - 1;
      goto LABEL_31;
    }
    v16 = *(_QWORD *)(v36 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_249E8CC4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8CCB0()
{
  uint64_t v0;

  swift_release();
  sub_249E92598(v0 + 224);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8CCF8()
{
  uint64_t v0;

  swift_release();
  sub_249E92598(v0 + 224);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8CD40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 896) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8CDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(unsigned __int8 *)(v0 + 65);
  sub_249D9E1E4(v0 + 600, v0 + 368);
  *(_BYTE *)(v0 + 408) = 1;
  swift_beginAccess();
  sub_249E8AA18(v0 + 368, v2);
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 640);
  swift_release();
  sub_249D9E174((__int128 *)(v0 + 600), v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8CE84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 920) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8CEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(unsigned __int8 *)(v0 + 65);
  sub_249D9E1E4(v0 + 560, v0 + 176);
  *(_BYTE *)(v0 + 216) = 1;
  swift_beginAccess();
  sub_249E8AA18(v0 + 176, v2);
  swift_endAccess();
  swift_release();
  sub_249E92598(v0 + 272);
  sub_249D9E174((__int128 *)(v0 + 560), v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8CFB4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 640);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D008()
{
  uint64_t v0;

  swift_release();
  sub_249E92598(v0 + 272);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 57) = a6;
  *(_QWORD *)(v6 + 112) = a4;
  *(_QWORD *)(v6 + 120) = a5;
  *(_QWORD *)(v6 + 104) = a1;
  return swift_task_switch();
}

uint64_t sub_249E8D070()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_249DCA6F8(*(_QWORD *)(v0 + 120), v0 + 16);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    sub_249D9E174((__int128 *)(v0 + 16), v0 + 64);
    *(_QWORD *)(v0 + 152) = sub_249E91B54(*(unsigned __int8 *)(v0 + 57), v0 + 64);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    *v2 = v0;
    v2[1] = sub_249E8D23C;
  }
  else
  {
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 16);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    *v1 = v0;
    v1[1] = sub_249E8D1D8;
  }
  return sub_249F1F658();
}

uint64_t sub_249E8D1D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8D23C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_249E8D2AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  swift_release();
  v1 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 152) = sub_249E91B54(*(unsigned __int8 *)(v0 + 57), v0 + 64);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    *v3 = v0;
    v3[1] = sub_249E8D23C;
    return sub_249F1F658();
  }
}

uint64_t sub_249E8D380()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D3B4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D3E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 472) = a1;
  *(_QWORD *)(v2 + 480) = v1;
  return swift_task_switch();
}

uint64_t sub_249E8D434()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 480) + 120;
  swift_beginAccess();
  sub_249DCC274(v1, v0 + 16, &qword_2578DCE50);
  v2 = *(unsigned __int8 *)(v0 + 56);
  sub_249DCC2FC(v0 + 16, &qword_2578DCE50);
  if (v2 == 255)
  {
    *(_QWORD *)(v0 + 112) = sub_249E92364();
    *(_BYTE *)(v0 + 152) = 0;
    sub_249DCB1B0(v0 + 112, v0 + 160, &qword_2578DCE50);
    swift_beginAccess();
    sub_249E92550(v0 + 160, v1);
    swift_endAccess();
  }
  sub_249DCC274(v1, v0 + 304, &qword_2578DCE50);
  if (*(unsigned __int8 *)(v0 + 344) == 255)
  {
    sub_249DCC2FC(v0 + 304, &qword_2578DCE50);
    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v6 = 0xD00000000000001ELL;
    *(_QWORD *)(v6 + 8) = 0x8000000249F38280;
    *(_QWORD *)(v6 + 16) = 0;
    *(_BYTE *)(v6 + 24) = 5;
    swift_willThrow();
    v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  sub_249DCA734(v0 + 304, v0 + 256);
  sub_249DCA6F8(v0 + 256, v0 + 352);
  if (*(_BYTE *)(v0 + 392) == 1)
  {
    sub_249D9E174((__int128 *)(v0 + 352), *(_QWORD *)(v0 + 472));
    v3 = *(_QWORD *)(v0 + 472);
    v4 = *(_QWORD *)(v0 + 480) + 120;
    sub_249E92598(v0 + 256);
    sub_249D9E1E4(v3, v0 + 208);
    *(_BYTE *)(v0 + 248) = 1;
    sub_249DCB1B0(v0 + 208, v0 + 64, &qword_2578DCE50);
    swift_beginAccess();
    sub_249E92550(v0 + 64, v4);
    swift_endAccess();
    v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  *(_QWORD *)(v0 + 488) = *(_QWORD *)(v0 + 352);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 496) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  *v8 = v0;
  v8[1] = sub_249E8D6E0;
  return sub_249F1F658();
}

uint64_t sub_249E8D6E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 504) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8D744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 480) + 120;
  sub_249E92598(v0 + 256);
  sub_249D9E1E4(v1, v0 + 208);
  *(_BYTE *)(v0 + 248) = 1;
  sub_249DCB1B0(v0 + 208, v0 + 64, &qword_2578DCE50);
  swift_beginAccess();
  sub_249E92550(v0 + 64, v2);
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D7F8()
{
  uint64_t v0;

  swift_release();
  sub_249E92598(v0 + 256);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8D838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  v5[5] = swift_task_alloc();
  v5[6] = type metadata accessor for AppleDiffusionPipeline(0);
  v5[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E8D8B8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_1;

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_249D98000, v2, v3, "Creating base AppleDiffusionPipeline", v4, 2u);
    MEMORY[0x24BD06618](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 24);

  sub_249DC091C(v8, v6, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  AppleDiffusionPipeline.init(resources:configuration:reduceMemory:)(v6, v7, 1, v5);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(uint64_t **)(v0 + 16);
  v10[3] = *(_QWORD *)(v0 + 48);
  v10[4] = (uint64_t)&protocol witness table for AppleDiffusionPipeline;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  sub_249D9E308(v9, (uint64_t)boxed_opaque_existential_1, type metadata accessor for AppleDiffusionPipeline);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8DA40(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a6;
  *(_BYTE *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_249E8DA60()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  _DWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 48);
    v5 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v5 = 136446210;
    __asm { BR              X9 }
  }

  v6 = *(_QWORD **)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = v6[3];
  v9 = v6[4];
  v10 = *(unsigned __int8 *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v10, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8DD1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + 120, &qword_2578DCE50);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_249E8DD50(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  v4 = sub_249F1E734();
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  sub_249F1F2E0();
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  *(_QWORD *)(v3 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E8DE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 80);
  sub_249E8FA98(*(unsigned __int8 *)(v0 + 96), v1);
  v2 = sub_249F1E7F4();
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  sub_249DCC2FC(v1, &qword_2578D7E10);
  if (v3 == 1)
    __asm { BR              X10 }
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_249E8E0E4;
  return sub_249E8C52C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 96));
}

uint64_t sub_249E8DF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = sub_249E770D8();
  swift_allocError(&type metadata for ResourcesUnavailableError, v6, 0, 0);
  v8 = v7;
  sub_249F1F2D4(25, 1);
  sub_249F1F2C8(0xD000000000000018, 0x8000000249F38340);
  sub_249F1F2BC(0x696A6F6D65, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  sub_249F1F2C8(34, 0xE100000000000000);
  sub_249F1E728(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  v9 = sub_249F1F394(v3);
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  *v8 = v9;
  v8[1] = v11;
  swift_willThrow(v12);
  v13 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8DF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = sub_249E770D8();
  swift_allocError(&type metadata for ResourcesUnavailableError, v6, 0, 0);
  v8 = v7;
  sub_249F1F2D4(25, 1);
  sub_249F1F2C8(0xD000000000000018, 0x8000000249F38340);
  sub_249F1F2BC(0xD000000000000012, 0x8000000249F34560);
  swift_bridgeObjectRelease(0x8000000249F34560);
  sub_249F1F2C8(34, 0xE100000000000000);
  sub_249F1E728(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  v9 = sub_249F1F394(v3);
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  *v8 = v9;
  v8[1] = v11;
  swift_willThrow(v12);
  v13 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8DF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = sub_249E770D8();
  swift_allocError(&type metadata for ResourcesUnavailableError, v6, 0, 0);
  v8 = v7;
  sub_249F1F2D4(25, 1);
  sub_249F1F2C8(0xD000000000000018, 0x8000000249F38340);
  sub_249F1F2BC(0x61727473756C6C69, 0xEC0000006E6F6974);
  swift_bridgeObjectRelease(0xEC0000006E6F6974);
  sub_249F1F2C8(34, 0xE100000000000000);
  sub_249F1E728(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  v9 = sub_249F1F394(v3);
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  *v8 = v9;
  v8[1] = v11;
  swift_willThrow(v12);
  v13 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E8DF70()
{
  JUMPOUT(0x249E8DFCCLL);
}

uint64_t sub_249E8DF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = sub_249E770D8();
  swift_allocError(&type metadata for ResourcesUnavailableError, v6, 0, 0);
  v8 = v7;
  sub_249F1F2D4(25, 1);
  sub_249F1F2C8(0xD000000000000018, 0x8000000249F38340);
  sub_249F1F2BC(0x686374656B73, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  sub_249F1F2C8(34, 0xE100000000000000);
  sub_249F1E728(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  v9 = sub_249F1F394(v3);
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  *v8 = v9;
  v8[1] = v11;
  swift_willThrow(v12);
  v13 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E8DF94()
{
  JUMPOUT(0x249E8DFA0);
}

void sub_249E8DFAC()
{
  JUMPOUT(0x249E8DFCCLL);
}

uint64_t sub_249E8E0E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v4 = swift_task_dealloc();
  if (!v0)
    v4 = *(unsigned __int8 *)(v2 + 96);
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v4);
}

uint64_t sub_249E8E164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return swift_task_switch();
}

uint64_t sub_249E8E180()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_249E8E1E8;
  v2[59] = v0 + 16;
  v2[60] = v1;
  return swift_task_switch();
}

uint64_t sub_249E8E1E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E8E24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v8;
  _QWORD *v9;
  unsigned __int8 v10[9];

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v0 + 88);
    v10[0] = *(_BYTE *)(v2 + 32);
    v4 = sub_249E04E6C();
    v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 64) + 24) != 0;
    v6 = sub_249E911A0(v10, v4 & 1, v5);
    if (v3)
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v8 = v6;
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 96) = v9;
      *v9 = v0;
      v9[1] = sub_249E8E36C;
      return sub_249E8DD50(*(_QWORD *)(v0 + 56), v8);
    }
  }
  else
  {
    sub_249D9E174((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(9);
  }
}

uint64_t sub_249E8E360()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8E36C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 112) = a1;
  return swift_task_switch();
}

uint64_t sub_249E8E3E0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 112));
}

uint64_t sub_249E8E418()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8E44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  int v48;
  BOOL v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  unsigned int v55;
  unint64_t v56;
  id v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _BYTE *v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  void *v80;
  id v81;
  unint64_t v82;
  uint64_t *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t v94;
  void *v95;
  unsigned __int8 v96;
  id v97;
  unsigned int v98;
  _BYTE *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  float v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  int v120;
  char v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  _DWORD *v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  os_log_type_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  unsigned int v146;
  BOOL v147;
  uint64_t v148;
  _QWORD v150[4];
  uint64_t v151;
  void *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE *v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  int *v167;
  char *v168;
  id v169;
  double v170;
  __int128 v171;
  uint64_t v172;
  char *v173;
  _QWORD *v174;

  v154 = a2;
  v151 = a3;
  v4 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v4);
  v150[2] = (char *)v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v6);
  v150[1] = (char *)v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCEB0);
  MEMORY[0x24BDAC7A8](v8);
  v153 = (char *)v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for AppleDiffusionPipeline(0);
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v162 = (char *)v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ResolvedTextPrompt(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_249F1E584();
  MEMORY[0x24BDAC7A8](v160);
  v156 = (char *)v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for PipelineConfiguration(0);
  MEMORY[0x24BDAC7A8](v16);
  v164 = (uint64_t)v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for AugmentedPrompt();
  v174 = *(_QWORD **)(v163 - 8);
  v18 = MEMORY[0x24BDAC7A8](v163);
  v168 = (char *)v150 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v150 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v155 = (uint64_t)v150 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v166 = (uint64_t)v150 - v25;
  v167 = (int *)type metadata accessor for GenerationRecipe(0);
  v26 = *(_QWORD *)(a1 + v167[12]);
  v27 = *(_QWORD *)(v26 + 16);
  v28 = MEMORY[0x24BEE4AF8];
  v165 = v16;
  v161 = a1;
  v157 = v12;
  if (v27)
  {
    *(_QWORD *)&v171 = MEMORY[0x24BEE4AF8];
    v29 = v26;
    swift_bridgeObjectRetain();
    sub_249DB67B4(0, v27, 0);
    v30 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v150[3] = v29;
    v31 = v29 + v30;
    v32 = *(id *)(v12 + 72);
    v28 = v171;
    v169 = v32;
    do
    {
      sub_249DC091C(v31, (uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      sub_249DC091C((uint64_t)v14, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      sub_249DC05A8((uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB67B4(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v32 = v169;
        v28 = v171;
      }
      v34 = *(_QWORD *)(v28 + 16);
      v33 = *(_QWORD *)(v28 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_249DB67B4(v33 > 1, v34 + 1, 1);
        v32 = v169;
        v28 = v171;
      }
      *(_QWORD *)(v28 + 16) = v34 + 1;
      sub_249D9E308((uint64_t)v22, v28+ ((*((unsigned __int8 *)v174 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v174 + 80))+ v174[9] * v34, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      v31 += (uint64_t)v32;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a1 = v161;
    v16 = v165;
  }
  v35 = v166;
  sub_249EA4ABC(v28);
  swift_bridgeObjectRelease();
  v36 = v155;
  sub_249DC091C(v35, v155, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  sub_249F1E56C();
  sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
  v37 = sub_249F1F4C0();
  v39 = v38;
  sub_249DC05A8(v36, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v40 = v164;
  PipelineConfiguration.init(prompt:)(v37, v39, v164);
  v172 = v163;
  v156 = (char *)sub_249D9BBEC(&qword_2578D9618, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2ABEC);
  v173 = v156;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v171);
  sub_249DC091C(v35, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  __swift_destroy_boxed_opaque_existential_1(v40);
  sub_249D9E174(&v171, v40);
  *(_QWORD *)(v40 + v16[18]) = 20;
  v42 = v16[24];
  *(_WORD *)(v40 + v42) = 0;
  *(_BYTE *)(v40 + v16[23]) = 1;
  *(_QWORD *)(v40 + v16[17]) = *(_QWORD *)(a1 + 48);
  if ((*(_BYTE *)(a1 + 80) & 1) != 0)
    LODWORD(v43) = sub_249E91118(0x8000000000000000);
  else
    v43 = *(_QWORD *)(a1 + 72);
  v44 = v167;
  v45 = v157;
  *(_DWORD *)(v40 + v16[19]) = v43;
  v46 = *(void **)(a1 + v44[14] + 24);
  if (v46)
  {
    v47 = a1 + v44[9];
    v48 = *(_DWORD *)v47;
    v49 = *(_BYTE *)(v47 + 4) == 0;
    v50 = 1065353216;
    if (v49)
      v50 = v48;
    v51 = v40 + v16[14];
    v52 = v45;
    v53 = *(void **)v51;
    v54 = *(void **)(v51 + 8);
    *(_QWORD *)v51 = v46;
    *(_QWORD *)(v51 + 8) = 0;
    v55 = *(_DWORD *)(v51 + 16);
    v51 += 16;
    v56 = v55 | ((unint64_t)*(unsigned __int8 *)(v51 + 4) << 32);
    *(_BYTE *)(v51 + 4) = 0;
    *(_DWORD *)v51 = v50;
    v57 = v46;
    v58 = v53;
    v45 = v52;
    v59 = v54;
    v44 = v167;
    sub_249E92994(v58, v59, v56);
  }
  v160 = v42;
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v60 = *(_QWORD *)(a1 + 32);
    if (v60 <= *(_QWORD *)(a1 + 24))
      v60 = *(_QWORD *)(a1 + 24);
    *(float *)(v40 + v16[30]) = (float)v60;
  }
  v61 = *(_QWORD *)(a1 + v44[13]);
  v62 = *(_QWORD *)(v61 + 16);
  v63 = MEMORY[0x24BEE4AF8];
  if (v62)
  {
    *(_QWORD *)&v171 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB67B4(0, v62, 0);
    v64 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v155 = v61;
    v65 = v61 + v64;
    v169 = *(id *)(v45 + 72);
    v63 = v171;
    v66 = (uint64_t)v168;
    do
    {
      sub_249DC091C(v65, (uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      sub_249DC091C((uint64_t)v14, v66, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      sub_249DC05A8((uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB67B4(0, *(_QWORD *)(v63 + 16) + 1, 1);
        v66 = (uint64_t)v168;
        v63 = v171;
      }
      v68 = *(_QWORD *)(v63 + 16);
      v67 = *(_QWORD *)(v63 + 24);
      if (v68 >= v67 >> 1)
      {
        sub_249DB67B4(v67 > 1, v68 + 1, 1);
        v66 = (uint64_t)v168;
        v63 = v171;
      }
      *(_QWORD *)(v63 + 16) = v68 + 1;
      sub_249D9E308(v66, v63+ ((*((unsigned __int8 *)v174 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v174 + 80))+ v174[9] * v68, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      v65 += (uint64_t)v169;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
    a1 = v161;
    v40 = v164;
    v44 = v167;
  }
  v69 = v162;
  v70 = v165;
  v71 = v159;
  if (*(_QWORD *)(v63 + 16))
  {
    v172 = v163;
    v173 = v156;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v171);
    sub_249EA4ABC(v63);
    v44 = v167;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v40 + 40);
    sub_249D9E174(&v171, v40 + 40);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v72 = v154;
  v73 = (uint64_t)v153;
  *(_BYTE *)(v40 + v70[25]) = 1;
  *(_DWORD *)(v40 + v70[27]) = 1065353216;
  *(_DWORD *)(v40 + v70[26]) = 1065353216;
  v74 = v160;
  *(_WORD *)(v40 + v160) = 514;
  v75 = a1 + v44[10];
  if ((*(_BYTE *)(v75 + 4) & 1) == 0)
  {
    v76 = v40 + v70[12];
    *(_DWORD *)v76 = *(_DWORD *)v75;
    *(_BYTE *)(v76 + 4) = 0;
  }
  sub_249D9E1E4(v72, (uint64_t)&v171);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
  v77 = swift_dynamicCast();
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56);
  if ((v77 & 1) == 0)
  {
    v78(v73, 1, 1, v71);
    sub_249DC05A8(v166, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    sub_249DCC2FC(v73, &qword_2578DCEB0);
LABEL_111:
    v148 = a1 + v44[8];
    swift_beginAccess();
    sub_249E92930(v148, v40 + v70[8]);
    sub_249DC091C(v40, v151, type metadata accessor for PipelineConfiguration);
    v113 = v40;
    return sub_249DC05A8(v113, type metadata accessor for PipelineConfiguration);
  }
  v78(v73, 0, 1, v71);
  sub_249D9E308(v73, (uint64_t)v69, type metadata accessor for AppleDiffusionPipeline);
  v79 = v40 + v70[14];
  v81 = *(id *)v79;
  v80 = *(void **)(v79 + 8);
  v82 = *(unsigned int *)(v79 + 16) | ((unint64_t)*(unsigned __int8 *)(v79 + 20) << 32);
  if (*(unsigned __int8 *)(v79 + 20) == 255
    || (((unint64_t)*(unsigned __int8 *)(v79 + 20) << 32) & 0x100000000) != 0)
  {
    v91 = *(void **)(a1 + v167[16] + 24);
    if (v91)
    {
      *(_QWORD *)v79 = v91;
      *(_QWORD *)(v79 + 8) = 0;
      *(_DWORD *)(v79 + 16) = 0;
      *(_BYTE *)(v79 + 20) = 1;
      v92 = v91;
      sub_249E92994(v81, v80, v82);
    }
LABEL_42:
    v93 = *(void **)(a1 + v167[17] + 24);
    if (v93)
    {
      v94 = v40 + v70[13];
      v95 = *(void **)v94;
      *(_QWORD *)v94 = v93;
      v96 = *(_BYTE *)(v94 + 8);
      *(_BYTE *)(v94 + 8) = 0;
      v97 = v93;
      sub_249E92978(v95, v96);
      *(_DWORD *)(v40 + v70[15]) = 1050253722;
      v98 = *(unsigned __int16 *)(v40 + v74);
      if (v98 < 0x4000)
        LOWORD(v98) = *(_WORD *)(v40 + v74);
      *(_WORD *)(v40 + v74) = v98;
    }
    v99 = v162;
    v100 = v152;
    if (*v162 != 1 || (v101 = v40 + v70[12], (*(_BYTE *)(v101 + 4) & 1) == 0) && *(float *)v101 == 0.0)
    {
LABEL_83:
      if ((sub_249E04E6C() & 1) != 0)
      {
        sub_249DC05A8(v166, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
        swift_beginAccess();
        v133 = 0;
        *(_DWORD *)(v40 + v70[9]) = 0;
        v134 = v70[10];
        v135 = 0x3F80000000000000;
        goto LABEL_105;
      }
      if ((sub_249E05248() & 1) != 0)
      {
        v136 = 1;
        v137 = 5;
      }
      else if (*(_QWORD *)(a1 + v167[15] + 24))
      {
        if (*(_QWORD *)(a1 + v167[18] + 24))
          v137 = 6;
        else
          v137 = 7;
        if (*(_QWORD *)(a1 + v167[18] + 24))
          v136 = 2;
        else
          v136 = 3;
      }
      else
      {
        v136 = 0;
        v137 = 4;
      }
      v138 = *((_QWORD *)v99 + 1);
      if (*(_QWORD *)(v138 + 16))
      {
        swift_bridgeObjectRetain();
        v139 = sub_249DB81D8(v136);
        if ((v140 & 1) != 0)
        {
          v141 = *(_DWORD *)(*(_QWORD *)(v138 + 56) + 4 * v139);
          swift_bridgeObjectRelease();
          goto LABEL_100;
        }
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v141 = *(_DWORD *)(v40 + v70[9]);
LABEL_100:
      swift_beginAccess();
      *(_DWORD *)(v40 + v70[9]) = v141;
      v142 = *((_QWORD *)v99 + 2);
      if (*(_QWORD *)(v142 + 16))
      {
        swift_bridgeObjectRetain();
        v143 = sub_249DB81D8(v137);
        if ((v144 & 1) != 0)
        {
          v135 = *(_QWORD *)(*(_QWORD *)(v142 + 56) + 8 * v143);
          swift_bridgeObjectRelease();
          sub_249DC05A8(v166, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
          v133 = 0;
          v134 = v70[10];
          goto LABEL_105;
        }
        swift_bridgeObjectRelease();
      }
      sub_249DC05A8(v166, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      v134 = v70[10];
      v135 = *(_QWORD *)(v40 + v134);
      v133 = *(_BYTE *)(v40 + v134 + 8);
LABEL_105:
      v145 = v40 + v134;
      *(_QWORD *)v145 = v135;
      *(_BYTE *)(v145 + 8) = v133;
      v146 = v99[2];
      v147 = v146 <= 8 && ((1 << v146) & 0x10C) != 0 && (*(_BYTE *)(a1 + 59) & 1) != 0;
      swift_beginAccess();
      *(_BYTE *)(v40 + 80) = v147;
      sub_249DC05A8((uint64_t)v99, type metadata accessor for AppleDiffusionPipeline);
      *(_BYTE *)(v40 + 81) = (v146 < 9) & (0x10Cu >> v146);
      v44 = v167;
      goto LABEL_111;
    }
    type metadata accessor for AppleDiffusionResourceFactory(0);
    v102 = static AppleDiffusionResourceFactory.shared()();
    if (v100)
    {

    }
    else
    {
      v103 = *(_QWORD *)(v102 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_baseModelComponentMetadata);
      swift_bridgeObjectRetain();
      swift_release();
      if (*(_QWORD *)(v103 + 16))
      {
        v104 = sub_249DB8164(0);
        if ((v105 & 1) != 0)
        {
          v106 = *(_QWORD *)(v103 + 56) + 144 * v104;
          v107 = *(float *)(v106 + 136);
          v108 = *(unsigned __int8 *)(v106 + 140);
          swift_bridgeObjectRelease();
          if (v108)
            v107 = 0.0;
LABEL_59:
          v114 = v99[2];
          if ((_DWORD)v114 == 9)
          {
            v115 = v165[20];
            if ((v108 & 1) != 0)
            {
              *(_DWORD *)(v40 + v115) = 1069547520;
              if (qword_2578D5D78 != -1)
                swift_once();
              v126 = sub_249F1EF38();
              __swift_project_value_buffer(v126, (uint64_t)qword_2578FF3F0);
              swift_bridgeObjectRetain();
              v127 = sub_249F1EF20();
              v128 = sub_249F1F820();
              if (os_log_type_enabled(v127, v128))
              {
                v129 = swift_slowAlloc();
                v130 = swift_slowAlloc();
                *(_QWORD *)&v171 = v130;
                *(_DWORD *)v129 = 136446466;
                swift_bridgeObjectRetain();
                v170 = COERCE_DOUBLE(sub_249E68CA8(7104878, 0xE300000000000000, (uint64_t *)&v171));
                sub_249F1F9AC();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v129 + 12) = 2048;
                v131 = v164;
                swift_beginAccess();
                v170 = *(float *)(v131 + v165[20]);
                v70 = v165;
                sub_249F1F9AC();
                v132 = v128;
                v40 = v131;
                v99 = v162;
                _os_log_impl(&dword_249D98000, v127, v132, "Loaded adapter is %{public}s, no guidance scale found. Falling back to framework default (%f).", (uint8_t *)v129, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x24BD06618](v130, -1, -1);
                MEMORY[0x24BD06618](v129, -1, -1);

                goto LABEL_82;
              }

              swift_bridgeObjectRelease_n();
              v40 = v164;
            }
            else
            {
              *(float *)(v40 + v115) = v107;
            }
            v70 = v165;
            goto LABEL_82;
          }
          v116 = *(_QWORD *)(static AppleDiffusionResourceFactory.shared()()
                           + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_adapterMetadata);
          swift_bridgeObjectRetain();
          swift_release();
          if (*(_QWORD *)(v116 + 16) && (v117 = sub_249DB7F54(v114), (v118 & 1) != 0))
          {
            v119 = *(_QWORD *)(v116 + 56) + 144 * v117;
            v120 = *(_DWORD *)(v119 + 136);
            v121 = *(_BYTE *)(v119 + 140);
            swift_bridgeObjectRelease();
            if ((v121 & 1) == 0)
            {
              v70 = v165;
              *(_DWORD *)(v40 + v165[20]) = v120;
LABEL_82:
              swift_beginAccess();
              *(_WORD *)(v40 + v70[24]) = 16386;
              *(_QWORD *)(v40 + v70[18]) = 4;
              goto LABEL_83;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          if ((v108 & 1) != 0)
          {
            *(_DWORD *)(v40 + v165[20]) = 1069547520;
            __asm { BR              X9 }
          }
          if (qword_2578D5D78 != -1)
            swift_once();
          v122 = sub_249F1EF38();
          __swift_project_value_buffer(v122, (uint64_t)qword_2578FF3F0);
          v123 = sub_249F1EF20();
          v124 = sub_249F1F820();
          if (os_log_type_enabled(v123, v124))
          {
            v125 = (_DWORD *)swift_slowAlloc();
            *(_QWORD *)&v171 = swift_slowAlloc();
            *v125 = 136446466;
            __asm { BR              X9 }
          }

          v70 = v165;
          *(float *)(v40 + v165[20]) = v107;
          goto LABEL_82;
        }
      }
      swift_bridgeObjectRelease();
    }
    LOBYTE(v108) = 1;
    v107 = 0.0;
    goto LABEL_59;
  }
  v83 = (uint64_t *)(a1 + v167[15]);
  v84 = (void *)v83[3];
  if (v84)
  {
    v86 = v83[1];
    v85 = v83[2];
    v87 = *v83;
    sub_249E92A18(*(id *)v79, *(void **)(v79 + 8), *(unsigned int *)(v79 + 16) | ((unint64_t)*(unsigned __int8 *)(v79 + 20) << 32));
    sub_249DCA64C(v87, v86, v85, v84);
    v174 = v81;

    v169 = v84;
    v88 = v86;
    a1 = v161;
    v89 = v85;
    v74 = v160;
    v40 = v164;
    sub_249DC0768(v87, v88, v89, v84);
    *(_QWORD *)v79 = v81;
    *(_QWORD *)(v79 + 8) = v84;
    *(_BYTE *)(v79 + 20) = 0;
    *(_DWORD *)(v79 + 16) = v82;
    v90 = v169;
    sub_249E92994(v81, v80, v82);

    v70 = v165;
    goto LABEL_42;
  }
  sub_249E929F0(*(void **)v79, *(void **)(v79 + 8), *(unsigned int *)(v79 + 16) | ((unint64_t)*(unsigned __int8 *)(v79 + 20) << 32), 0);
  sub_249F1F2A4();
  sub_249F1E920();
  v109 = sub_249F1F388();
  v111 = v110;
  sub_249DD9530();
  swift_allocError();
  *(_QWORD *)v112 = v109;
  *(_QWORD *)(v112 + 8) = v111;
  *(_QWORD *)(v112 + 16) = 0;
  *(_BYTE *)(v112 + 24) = 4;
  swift_willThrow();

  sub_249DC05A8((uint64_t)v162, type metadata accessor for AppleDiffusionPipeline);
  sub_249DC05A8(v166, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v113 = v40;
  return sub_249DC05A8(v113, type metadata accessor for PipelineConfiguration);
}

uint64_t sub_249E8FA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2578DCEA8 + dword_2578DCEA8);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DDB798;
  return v9(a1, a2, a3);
}

uint64_t sub_249E8FA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE v19[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_249F1E7F4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(a2, 1, 1, v10);
  type metadata accessor for AppleDiffusionResourceFactory(0);
  v13 = static AppleDiffusionResourceFactory.shared()();
  sub_249DC091C(v13 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  swift_release();
  v14 = *(_QWORD *)&v9[*(int *)(v7 + 28)];
  swift_bridgeObjectRetain();
  sub_249DC05A8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_249DB7F54(a1), (v16 & 1) != 0))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, *(_QWORD *)(v14 + 56) + *(_QWORD *)(v11 + 72) * v15, v10);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  v12((uint64_t)v6, v17, 1, v10);
  swift_bridgeObjectRelease();
  sub_249DCC2FC(a2, &qword_2578D7E10);
  return sub_249DCB1B0((uint64_t)v6, a2, &qword_2578D7E10);
}

uint64_t sub_249E8FC78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v4 = sub_249F1E7F4();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E8FD44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  DiffusionBase::AppleDiffusionAdapter_optional v4;
  uint64_t v5;
  uint64_t v6;
  DiffusionBase::AppleDiffusionAdapter value;
  _QWORD *v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 104);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  v4.value = AppleDiffusionAdapter.init(modelCatalogInferenceAssetIdentifier:)(v3).value;
  *(DiffusionBase::AppleDiffusionAdapter_optional *)(v0 + 224) = v4;
  if (v4.value != DiffusionBase_AppleDiffusionAdapter_unknownDefault)
  {
    value = v4.value;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v8;
    *v8 = v0;
    v8[1] = sub_249E8FFC8;
    return sub_249E8C52C(v0 + 56, value);
  }
  v5 = sub_249E92A30();
  if (v6)
  {
    if (v5 == *(_QWORD *)(v0 + 96) && v6 == *(_QWORD *)(v0 + 104))
    {
      swift_bridgeObjectRelease();
LABEL_8:
      *(_QWORD *)(v0 + 200) = type metadata accessor for AppleDiffusionResourceFactory(0);
      *(_QWORD *)(*(_QWORD *)(v0 + 112) + 24) = static AppleDiffusionResourceFactory.shared()();
      v11 = *(_QWORD *)(v0 + 112);
      swift_release();
      v12 = *(_QWORD *)(v11 + 16);
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v13;
      *v13 = v0;
      v13[1] = sub_249E90228;
      v13[59] = v0 + 16;
      v13[60] = v12;
      return swift_task_switch();
    }
    v10 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_8;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E8FFC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  return swift_task_switch();
}

uint64_t sub_249E90034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 192);
  type metadata accessor for AppleDiffusionResourceFactory(0);
  v2 = static AppleDiffusionResourceFactory.shared()();
  if (!v1)
  {
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 128);
    sub_249DC091C(v2 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, v3, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    swift_release();
    v5 = *(_QWORD *)(v3 + *(int *)(v4 + 28));
    swift_bridgeObjectRetain();
    sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    if (*(_QWORD *)(v5 + 16) && (v6 = sub_249DB7F54(*(unsigned __int8 *)(v0 + 224)), (v7 & 1) != 0))
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v5 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 160) + 72) * v6, *(_QWORD *)(v0 + 152));
      v8 = 0;
    }
    else
    {
      v8 = 1;
    }
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v8, 1, v9);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
    {
      sub_249DCC2FC(*(_QWORD *)(v0 + 120), &qword_2578D7E10);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 152));
      sub_249E92B40();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E90228()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E9028C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD);

  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 8))(v3);
  if (!v1)
  {
    v4 = static AppleDiffusionResourceFactory.shared()();
    v7 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 136);
    sub_249DC091C(v4 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, v6, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    swift_release();
    v8 = *(void (**)(_QWORD))(v6 + *(int *)(v7 + 24));
    swift_retain();
    sub_249DC05A8(v6, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    v8(0);
    swift_release();
    sub_249E92B40();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E90428()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E90494()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E90500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  v3[23] = swift_task_alloc();
  v3[24] = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v4 = sub_249F1E7F4();
  v3[27] = v4;
  v3[28] = *(_QWORD *)(v4 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E905CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  LOBYTE(v4) = AppleDiffusionAdapter.init(modelCatalogInferenceAssetIdentifier:)(v3);
  *(_BYTE *)(v0 + 57) = v4;
  if (v4 != 9)
  {
    v7 = v4;
    type metadata accessor for AppleDiffusionResourceFactory(0);
    v8 = static AppleDiffusionResourceFactory.shared()();
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_249DC091C(v8 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, v9, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    swift_release();
    v11 = *(_QWORD *)(v9 + *(int *)(v10 + 28));
    swift_bridgeObjectRetain();
    sub_249DC05A8(v9, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    if (*(_QWORD *)(v11 + 16) && (v12 = sub_249DB7F54(v7), (v13 & 1) != 0))
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 16))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v11 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 224) + 72) * v12, *(_QWORD *)(v0 + 216));
      v14 = 0;
    }
    else
    {
      v14 = 1;
    }
    v23 = *(_QWORD *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 224);
    v25 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v25, v14, 1, v23);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) == 1)
    {
      sub_249DCC2FC(*(_QWORD *)(v0 + 184), &qword_2578D7E10);
    }
    else
    {
      v26 = *(_QWORD *)(v0 + 240);
      v27 = *(_QWORD *)(v0 + 216);
      v28 = *(_QWORD *)(v0 + 224);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 32))(v26, *(_QWORD *)(v0 + 184), v27);
      sub_249E92B40();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    *(_QWORD *)(v0 + 248) = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 16);
    return swift_task_switch();
  }
  v5 = sub_249E92A30();
  if (!v6)
    goto LABEL_11;
  if (v5 != *(_QWORD *)(v0 + 160) || v6 != *(_QWORD *)(v0 + 168))
  {
    v15 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_10;
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  type metadata accessor for AppleDiffusionResourceFactory(0);
  v16 = static AppleDiffusionResourceFactory.shared()();
  v18 = *(_QWORD *)(v0 + 224);
  v17 = *(_QWORD *)(v0 + 232);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 200);
  sub_249DC091C(v16 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, v20, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  swift_release();
  v22 = *(void (**)(_QWORD))(v20 + *(int *)(v21 + 24));
  swift_retain();
  sub_249DC05A8(v20, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  v22(0);
  swift_release();
  sub_249E92B40();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 16);
  return swift_task_switch();
}

uint64_t sub_249E90958()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 57);
  swift_beginAccess();
  sub_249E91040(v1, v0 + 64);
  sub_249DCC2FC(v0 + 64, &qword_2578DCE50);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E90A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 56) = -1;
  v2 = v1 + 120;
  swift_beginAccess();
  sub_249E92550(v0 + 16, v2);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_249E90A94()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 176) + 24) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E90B08()
{
  swift_release();
  return swift_release();
}

uint64_t sub_249E90B24()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppleDiffusionImageGenerator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager()
{
  return objc_opt_self();
}

uint64_t destroy for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  else
    return swift_release();
}

uint64_t initializeWithCopy for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  char v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    v5 = 1;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
    v5 = 0;
  }
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      swift_release();
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t assignWithTake for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      swift_release();
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_249E90E0C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_249E90E28(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry()
{
  return &type metadata for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry;
}

double sub_249E90E60@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_249DB7F04(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249DBC668();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_249F1FBBC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_249DCA678((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_249DBBD20(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_249E90F5C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_249DB7D8C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_249DBCBF8();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_249DBC16C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_249E91040@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_249DB7F54(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249DBDC0C();
      v9 = v11;
    }
    sub_249DCA734(*(_QWORD *)(v9 + 56) + 48 * v6, a2);
    sub_249DBC340(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_BYTE *)(a2 + 40) = -1;
  }
  return result;
}

unint64_t sub_249E91118(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x24BD06630](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x24BD06630](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249E911A0(unsigned __int8 *a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *a1;
  if ((a3 & 1) != 0)
  {
    if ((_DWORD)v3 == 1)
    {
      return 8;
    }
    else
    {
      sub_249DD9530();
      swift_allocError();
      *(_QWORD *)v5 = v3;
      *(_QWORD *)(v5 + 8) = 0xD000000000000029;
      *(_QWORD *)(v5 + 16) = 0x8000000249F34090;
      *(_BYTE *)(v5 + 24) = 2;
      return swift_willThrow();
    }
  }
  else if ((a2 & 1) != 0)
  {
    return (0x707050301uLL >> (8 * v3));
  }
  else
  {
    return (0x606040200uLL >> (8 * v3));
  }
}

unint64_t sub_249E91258()
{
  unint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  result = static AppleDiffusionPipeline.supportedImageResolutions()();
  v1 = result;
  if (!(result >> 62))
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    sub_249E8AAC8(&v12);
    return (unint64_t)v12;
  }
  swift_bridgeObjectRetain();
  v2 = sub_249F1FBEC();
  result = swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_15;
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x24BD056B8](v3, v1);
      else
        v5 = *(id *)(v1 + 8 * v3 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_pixelsWide);
      v8 = objc_msgSend(v6, sel_pixelsHigh);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_249DB20AC(0, v4[2] + 1, 1, v4);
      v10 = v4[2];
      v9 = v4[3];
      if (v10 >= v9 >> 1)
        v4 = sub_249DB20AC((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
      ++v3;
      v4[2] = v10 + 1;
      v11 = &v4[2 * v10];
      v11[4] = v7;
      v11[5] = v8;

    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    v12 = v4;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

char *sub_249E91414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);

  v28 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  MEMORY[0x24BDAC7A8](v28);
  v27 = (uint64_t)&v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v29 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  v9 = off_2578D7E08;
  v32 = *((_QWORD *)off_2578D7E08 + 2);
  if (!v32)
    return (char *)MEMORY[0x24BEE4AF8];
  v31 = type metadata accessor for AppleDiffusionResourceFactory(0);
  swift_bridgeObjectRetain();
  v10 = sub_249F1E7F4();
  v11 = 0;
  v33 = *(_QWORD *)(v10 - 8);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v30 = v9;
  v26 = v6;
  do
  {
    v13 = v9[v11 + 32];
    v34(v6, 1, 1, v10);
    v14 = static AppleDiffusionResourceFactory.shared()();
    v15 = v27;
    sub_249DC091C(v14 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, v27, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    swift_release();
    v16 = *(_QWORD *)(v15 + *(int *)(v28 + 28));
    swift_bridgeObjectRetain();
    sub_249DC05A8(v15, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = sub_249DB7F54(0x606040200uLL >> (8 * v13));
      if ((v18 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v29, *(_QWORD *)(v16 + 56) + *(_QWORD *)(v33 + 72) * v17, v10);
        v19 = 0;
      }
      else
      {
        v19 = 1;
      }
    }
    else
    {
      v19 = 1;
    }
    v6 = v26;
    v20 = (uint64_t)v29;
    v34(v29, v19, 1, v10);
    swift_bridgeObjectRelease();
    sub_249DCC2FC((uint64_t)v6, &qword_2578D7E10);
    sub_249DCB1B0(v20, (uint64_t)v6, &qword_2578D7E10);
    v9 = v30;
    sub_249DCB1B0((uint64_t)v6, (uint64_t)v8, &qword_2578D7E10);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v10);
    sub_249DCC2FC((uint64_t)v8, &qword_2578D7E10);
    if (v21 != 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_249DB22EC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
      v23 = *((_QWORD *)v12 + 2);
      v22 = *((_QWORD *)v12 + 3);
      if (v23 >= v22 >> 1)
        v12 = sub_249DB22EC((char *)(v22 > 1), v23 + 1, 1, v12);
      *((_QWORD *)v12 + 2) = v23 + 1;
      v12[v23 + 32] = v13;
      v9 = v30;
    }
    ++v11;
  }
  while (v32 != v11);
  swift_bridgeObjectRelease();
  return v12;
}

void sub_249E917B8(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_249E917F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v16[6];
  __int128 v17;
  _BYTE v18[29];

  type metadata accessor for AppleDiffusionResourceFactory(0);
  v1 = static AppleDiffusionResourceFactory.shared()();
  if (v0)
  {

    return 0;
  }
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_adapterMetadata);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(_QWORD *)(v2 + 16) || (v3 = sub_249DB7F54(2), (v4 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v5 = (_OWORD *)(*(_QWORD *)(v2 + 56) + 144 * v3);
  v16[0] = *v5;
  v6 = v5[3];
  v7 = v5[4];
  v8 = v5[2];
  v16[1] = v5[1];
  v16[2] = v8;
  v16[3] = v6;
  v16[4] = v7;
  v9 = v5[5];
  v10 = v5[6];
  v11 = v5[7];
  *(_OWORD *)&v18[13] = *(_OWORD *)((char *)v5 + 125);
  v17 = v10;
  *(_OWORD *)v18 = v11;
  v16[5] = v9;
  sub_249E93024((uint64_t *)v16);
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)&v17 + 1);
  v13 = *(_QWORD *)v18;
  sub_249E5DA84(*((uint64_t *)&v17 + 1), *(uint64_t *)v18);
  sub_249E9316C((uint64_t *)v16);
  if (v13 == 1)
    return 0;
  else
    return v12;
}

unint64_t sub_249E918FC(uint64_t a1, void (*a2)(uint64_t, void *, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, void *, uint64_t);

  v26 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for GeneratedImage();
  v7 = *(_QWORD *)(v25 - 8);
  v8 = MEMORY[0x24BDAC7A8](v25);
  v24 = (uint64_t)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v22 = (uint64_t)v21 - v10;
  v23 = *(_QWORD *)(a1 + 16);
  if (!v23)
    return MEMORY[0x24BEE4AF8];
  v21[1] = v2;
  swift_bridgeObjectRetain();
  v11 = 0;
  v21[0] = a1;
  v12 = (unsigned __int8 *)(a1 + 40);
  v13 = MEMORY[0x24BEE4AF8];
  do
  {
    v14 = (void *)*((_QWORD *)v12 - 1);
    v15 = *v12;
    v16 = v14;
    v26(v11, v14, v15);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v25) == 1)
    {
      sub_249DCC2FC((uint64_t)v6, &qword_2578D6E70);
    }
    else
    {
      v17 = v22;
      sub_249D9E308((uint64_t)v6, v22, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249D9E308(v17, v24, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_249DB292C(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
      v19 = *(_QWORD *)(v13 + 16);
      v18 = *(_QWORD *)(v13 + 24);
      if (v19 >= v18 >> 1)
        v13 = sub_249DB292C(v18 > 1, v19 + 1, 1, v13);
      *(_QWORD *)(v13 + 16) = v19 + 1;
      sub_249D9E308(v24, v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    }
    ++v11;
    v12 += 16;
  }
  while (v23 != v11);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_249E91B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  id v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48[2];
  uint64_t v49;
  __int128 v50[2];
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a1;
  v4 = sub_249F1E734();
  v47 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)v40 - v7;
  v8 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_249F1E7F4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v42 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v40 - v19;
  sub_249D9E1E4(a2, (uint64_t)v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCE88);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v49 = 0;
    memset(v48, 0, sizeof(v48));
    sub_249DCC2FC((uint64_t)v48, &qword_2578DCE90);
LABEL_7:
    v51 = 0;
    v52 = 0xE000000000000000;
    sub_249F1FA84();
    sub_249F1FB98();
    sub_249F1F460();
    v26 = v51;
    v27 = v52;
    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v28 = v26;
    *(_QWORD *)(v28 + 8) = v27;
    *(_QWORD *)(v28 + 16) = 0;
    *(_BYTE *)(v28 + 24) = 4;
    swift_willThrow();
    return v26;
  }
  v41 = v20;
  v40[1] = v4;
  v40[2] = v2;
  sub_249D9E174(v48, (uint64_t)&v51);
  v22 = v53;
  v21 = v54;
  __swift_project_boxed_opaque_existential_1(&v51, v53);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v22, v21) & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    goto LABEL_7;
  }
  type metadata accessor for AppleDiffusionImageGenerator();
  v23 = v55;
  sub_249E8FA98(v55, (uint64_t)v14);
  v24 = v16;
  v25 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_249DCC2FC((uint64_t)v14, &qword_2578D7E10);
    *(_QWORD *)&v50[0] = 0;
    *((_QWORD *)&v50[0] + 1) = 0xE000000000000000;
    sub_249F1FA84();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v50[0] = 0xD000000000000015;
    *((_QWORD *)&v50[0] + 1) = 0x8000000249F382C0;
    __asm { BR              X10 }
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v30 = v41;
  v29(v41, v14, v15);
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  sub_249F1E7AC();
  v32 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_fileExistsAtPath_, v32);

  if ((v33 & 1) == 0)
  {
    sub_249F1F2D4();
    sub_249F1F2C8();
    __asm { BR              X10 }
  }
  v34 = sub_249F1F604();
  v35 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v43, 1, 1, v34);
  sub_249D9E1E4((uint64_t)&v51, (uint64_t)v50);
  v36 = v42;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v42, v30, v25);
  v37 = (*(unsigned __int8 *)(v24 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v38 + 24) = 0;
  *(_BYTE *)(v38 + 32) = v55;
  sub_249D9E174(v50, v38 + 40);
  v29((char *)(v38 + v37), v36, v25);
  v26 = sub_249E5FDB4(v35, (uint64_t)&unk_2578DCEA0, v38);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  return v26;
}

char *sub_249E92364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - v9;
  type metadata accessor for AppleDiffusionResourceFactory(0);
  v11 = static AppleDiffusionResourceFactory.shared()();
  if (!v0)
  {
    sub_249DC091C(v11 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    swift_release();
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
    objc_msgSend(v12, sel_setComputeUnits_, 2);
    v13 = sub_249F1F604();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
    sub_249DC091C((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v15 = (v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = 0;
    sub_249D9E308((uint64_t)v8, v16 + v14, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    *(_QWORD *)(v16 + v15) = v12;
    v3 = (char *)sub_249E5FDB4((uint64_t)v3, (uint64_t)&unk_2578DCE60, v16);
    sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  }
  return v3;
}

uint64_t sub_249E92550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E92598(uint64_t a1)
{
  destroy for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(a1);
  return a1;
}

uint64_t sub_249E925C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_249F1E7F4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_249E9269C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for AppleDiffusionPipeline.ResourceURLs() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_249DCC420;
  return sub_249E8D838(a1, v6, v7, v8, v9);
}

uint64_t sub_249E92740()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  if ((*(_BYTE *)(v0 + 80) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  else
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E92788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = v1 + 40;
  v6 = *(_BYTE *)(v1 + 81);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_249DCC420;
  *(_BYTE *)(v7 + 57) = v6;
  *(_QWORD *)(v7 + 112) = v4;
  *(_QWORD *)(v7 + 120) = v5;
  *(_QWORD *)(v7 + 104) = a1;
  return swift_task_switch();
}

uint64_t sub_249E92804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_249F1E7F4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_249E92880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_249F1E7F4() - 8) + 80);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = v1 + 40;
  v7 = v1 + ((v4 + 80) & ~v4);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_249DCC420;
  *(_QWORD *)(v8 + 32) = v6;
  *(_QWORD *)(v8 + 40) = v7;
  *(_BYTE *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 24) = a1;
  return swift_task_switch();
}

BOOL sub_249E92914(uint64_t a1)
{
  uint64_t v1;

  return sub_249E8C34C(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_249E92920@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_249E8ABAC(a1, a2, a3, *(unsigned __int8 *)(v4 + 16), *(unsigned __int8 *)(v4 + 17), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_249E92930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_249E92978(id a1, unsigned __int8 a2)
{
  if (a2 != 255)

}

void sub_249E92994(void *a1, void *a2, uint64_t a3)
{
  if (BYTE4(a3) != 255)
    sub_249E929AC(a1, a2, a3, BYTE4(a3) & 1);
}

void sub_249E929AC(void *a1, void *a2, uint64_t a3, char a4)
{

  if ((a4 & 1) == 0)
}

id sub_249E929F0(void *a1, void *a2, uint64_t a3, char a4)
{
  id v4;
  id v6;

  if ((a4 & 1) == 0)
  {
    v6 = a1;
    v4 = a2;
    a1 = v6;
  }
  return a1;
}

id sub_249E92A18(id result, void *a2, uint64_t a3)
{
  if (BYTE4(a3) != 255)
    return sub_249E929F0(result, a2, a3, BYTE4(a3) & 1);
  return result;
}

uint64_t sub_249E92A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[40];
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[5];

  v8[3] = &type metadata for AppleDiffusionImageGenerator.Descriptor;
  v8[4] = &off_251B58BC0;
  v8[0] = 0xD000000000000029;
  v8[1] = 0x8000000249F34090;
  sub_249D9E1E4((uint64_t)v8, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DA268);
  if (swift_dynamicCast())
  {
    v0 = *((_QWORD *)&v6 + 1);
    v1 = v7;
    __swift_project_boxed_opaque_existential_1(&v5, *((uint64_t *)&v6 + 1));
    v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  }
  else
  {
    v7 = 0;
    v5 = 0u;
    v6 = 0u;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    sub_249DCC2FC((uint64_t)&v5, &qword_2578DA270);
    return 0;
  }
  return v2;
}

void sub_249E92B40()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  if (MEMORY[0x24BDFD208])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79D0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249F21770;
    *(_QWORD *)(inited + 32) = 0xD000000000000017;
    *(_QWORD *)(inited + 40) = 0x8000000249F38360;
    v1 = sub_249F1E7AC();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v1;
    *(_QWORD *)(inited + 56) = v2;
    sub_249DAE8D4(inited);
    v3 = (void *)sub_249F1F304();
    v4 = (void *)sub_249F1F1F0();
    swift_bridgeObjectRelease();
    sendAneSignal();

  }
}

uint64_t sub_249E92C44(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  void (*v27)(_QWORD);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  v8 = MEMORY[0x24BDAC7A8](v33);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v35 = sub_249F1E7F4();
  v34 = *(_QWORD *)(v35 - 8);
  v13 = MEMORY[0x24BDAC7A8](v35);
  v32 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - v15;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  LOBYTE(v18) = AppleDiffusionAdapter.init(modelCatalogInferenceAssetIdentifier:)(v17);
  if (v18 == 9)
  {
    result = sub_249E92A30();
    if (!v20)
      return result;
LABEL_3:
    if (result == a1 && v20 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_249F1FE2C();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return result;
    }
    type metadata accessor for AppleDiffusionResourceFactory(0);
    result = static AppleDiffusionResourceFactory.shared()();
    if (!v2)
    {
      sub_249DC091C(result + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
      swift_release();
      v27 = *(void (**)(_QWORD))&v10[*(int *)(v33 + 24)];
      swift_retain();
      sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
      v28 = v32;
      v27(0);
      swift_release();
      sub_249E92B40();
      v16 = v28;
      v29 = v35;
      v30 = v34;
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v29);
    }
    return result;
  }
  v21 = v18;
  type metadata accessor for AppleDiffusionResourceFactory(0);
  result = static AppleDiffusionResourceFactory.shared()();
  if (v2)
    return result;
  sub_249DC091C(result + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  swift_release();
  v22 = *(_QWORD *)&v12[*(int *)(v33 + 28)];
  swift_bridgeObjectRetain();
  sub_249DC05A8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_249DB7F54(v21), (v24 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v7, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v34 + 72) * v23, v35);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v30 = v34;
  v29 = v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v7, v25, 1, v35);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v29) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v7, v29);
    sub_249E92B40();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v29);
  }
  sub_249DCC2FC((uint64_t)v7, &qword_2578D7E10);
  result = sub_249E92A30();
  if (v20)
    goto LABEL_3;
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionImageGenerator.Descriptor()
{
  return &type metadata for AppleDiffusionImageGenerator.Descriptor;
}

ValueMetadata *type metadata accessor for ProgressInfo()
{
  return &type metadata for ProgressInfo;
}

uint64_t *sub_249E93024(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[5];
  v5 = a1[14];
  v6 = a1[13];
  sub_249E930E8(*a1, a1[1]);
  sub_249E9311C(v2, v3);
  swift_bridgeObjectRetain();
  sub_249E5DA84(v6, v5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249E930E8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249E9311C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_249E9316C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[5];
  v5 = a1[14];
  v6 = a1[13];
  sub_249E93230(*a1, a1[1]);
  sub_249E93264(v2, v3);
  swift_bridgeObjectRelease();
  sub_249DFBBC4(v6, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249E93230(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249E93264(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249E932B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249E932C0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_249E932C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCED8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249E938F8(a1, a2, v7, (uint64_t)v10);
  v11 = sub_249F1ECD4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_249DCC2FC((uint64_t)v10, &qword_2578DCED8);
    if (qword_2578D5D78 != -1)
      swift_once();
    v13 = sub_249F1EF38();
    __swift_project_value_buffer(v13, (uint64_t)qword_2578FF3F0);
    sub_249E5C9D4();
    sub_249E5C9D4();
    v14 = sub_249F1EF20();
    v15 = sub_249F1F820();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28 = a4;
      v29 = a1;
      v18 = v17;
      *(_DWORD *)v16 = 136315138;
      v32 = v17;
      v30 = a2;
      v31 = v7 != 0;
      sub_249E5C9D4();
      v19 = sub_249F1F3AC();
      v29 = sub_249E68CA8(v19, v20, &v32);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      sub_249E5C9EC();
      sub_249E5C9EC();
      _os_log_impl(&dword_249D98000, v14, v15, "%s could not be represented as a meaningful ModelManagerServices.InferenceError", v16, 0xCu);
      swift_arrayDestroy();
      v21 = v18;
      a4 = v28;
      MEMORY[0x24BD06618](v21, -1, -1);
      MEMORY[0x24BD06618](v16, -1, -1);
    }
    else
    {
      sub_249E5C9EC();
      sub_249E5C9EC();
    }

    v25 = *MEMORY[0x24BE68958];
    v26 = sub_249F1ECE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(a4, v25, v26);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v10, v11);
    v22 = *MEMORY[0x24BE68940];
    v23 = sub_249F1ECE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(a4, v22, v23);
  }
}

uint64_t sub_249E935CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCED8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249E93A44(a1, a2, a3, a4, (uint64_t)v12);
  v13 = sub_249F1ECD4();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_249DCC2FC((uint64_t)v12, &qword_2578DCED8);
    if (qword_2578D5D78 != -1)
      swift_once();
    v15 = sub_249F1EF38();
    __swift_project_value_buffer(v15, (uint64_t)qword_2578FF3F0);
    sub_249E79ED4(a1, a2, a3, a4);
    sub_249E79ED4(a1, a2, a3, a4);
    v16 = sub_249F1EF20();
    v17 = sub_249F1F820();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v30 = a5;
      v31 = a1;
      v20 = v19;
      *(_DWORD *)v18 = 136315138;
      v35 = v19;
      v29[1] = v18 + 4;
      v32 = a2;
      v33 = a3;
      v34 = a4;
      sub_249E79ED4(a1, a2, a3, a4);
      v21 = sub_249F1F3AC();
      v31 = sub_249E68CA8(v21, v22, &v35);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      sub_249E79F4C(a1, a2, a3, a4);
      sub_249E79F4C(a1, a2, a3, a4);
      _os_log_impl(&dword_249D98000, v16, v17, "%s could not be represented as a meaningful ModelManagerServices.InferenceError", v18, 0xCu);
      swift_arrayDestroy();
      v23 = v20;
      a5 = v30;
      MEMORY[0x24BD06618](v23, -1, -1);
      MEMORY[0x24BD06618](v18, -1, -1);
    }
    else
    {
      sub_249E79F4C(a1, a2, a3, a4);
      sub_249E79F4C(a1, a2, a3, a4);
    }

    v27 = *MEMORY[0x24BE68958];
    v28 = sub_249F1ECE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(a5, v27, v28);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v12, v13);
    v24 = *MEMORY[0x24BE68940];
    v25 = sub_249F1ECE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(a5, v24, v25);
  }
}

uint64_t sub_249E938F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[2];
  BOOL v12;
  ValueMetadata *v13;
  unint64_t v14;

  v7 = a3 & 1;
  if (sub_249E93BA8(a1, a2, a3 & 1))
  {
    v13 = &type metadata for FrameworkError;
    v14 = sub_249E94A10();
    v11[0] = a1;
    v11[1] = a2;
    v12 = v7 != 0;
    __swift_project_boxed_opaque_existential_1(v11, (uint64_t)&type metadata for FrameworkError);
    sub_249E5C9D4();
    FrameworkError.errorDescription.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    sub_249F1ECC8();
    v8 = sub_249F1ECD4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 0, 1, v8);
  }
  else
  {
    v10 = sub_249F1ECD4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
}

uint64_t sub_249E93A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[5];

  if (sub_249E93DB4(a1, a2, a3, a4))
  {
    v14[3] = &type metadata for GeneratorError;
    v14[4] = sub_249E949A0();
    v10 = swift_allocObject();
    v14[0] = v10;
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    *(_QWORD *)(v10 + 32) = a3;
    *(_BYTE *)(v10 + 40) = a4;
    __swift_project_boxed_opaque_existential_1(v14, (uint64_t)&type metadata for GeneratorError);
    sub_249E79ED4(a1, a2, a3, a4);
    GeneratorError.errorDescription.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    sub_249F1ECC8();
    v11 = sub_249F1ECD4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a5, 0, 1, v11);
  }
  else
  {
    v13 = sub_249F1ECD4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a5, 1, 1, v13);
  }
}

unint64_t sub_249E93BA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  _QWORD v24[17];
  char v25;

  v6 = sub_249F1F37C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[15] = a1;
  v24[16] = a2;
  v25 = a3 & 1;
  if (qword_2578D5D70 != -1)
    swift_once();
  sub_249E5C964();
  v10 = sub_249F1E488();
  v12 = v11;
  if (qword_2578D5D68 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v6, (uint64_t)qword_2578DCEB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  v14 = sub_249F1F340();
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    v24[13] = &type metadata for FrameworkError;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCF00);
    v18 = sub_249F1F3C4();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCEF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249F21910;
    *(_QWORD *)(inited + 32) = 0x54726F7272655F5FLL;
    *(_QWORD *)(inited + 40) = 0xEB00000000657079;
    *(_QWORD *)(inited + 48) = v18;
    *(_QWORD *)(inited + 56) = v20;
    *(_QWORD *)(inited + 64) = 0xD000000000000017;
    *(_QWORD *)(inited + 72) = 0x8000000249F383C0;
    *(_QWORD *)(inited + 80) = v16;
    *(_QWORD *)(inited + 88) = v17;
    v22 = sub_249DAE2C8(inited);
    sub_249DC3C24(v10, v12);
  }
  else
  {
    sub_249DC3C24(v10, v12);
    return 0;
  }
  return v22;
}

unint64_t sub_249E93DB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  unint64_t v24;
  _BYTE v26[96];
  ValueMetadata *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v8 = sub_249F1F37C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = a1;
  v29 = a2;
  v30 = a3;
  v31 = a4;
  if (qword_2578D5D70 != -1)
    swift_once();
  sub_249E79E90();
  v12 = sub_249F1E488();
  v14 = v13;
  if (qword_2578D5D68 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_2578DCEB8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  v16 = sub_249F1F340();
  if (v17)
  {
    v18 = v16;
    v19 = v17;
    v27 = &type metadata for GeneratorError;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCEE8);
    v20 = sub_249F1F3C4();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCEF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249F21910;
    *(_QWORD *)(inited + 32) = 0x54726F7272655F5FLL;
    *(_QWORD *)(inited + 40) = 0xEB00000000657079;
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = v22;
    *(_QWORD *)(inited + 64) = 0xD000000000000017;
    *(_QWORD *)(inited + 72) = 0x8000000249F383C0;
    *(_QWORD *)(inited + 80) = v18;
    *(_QWORD *)(inited + 88) = v19;
    v24 = sub_249DAE2C8(inited);
    sub_249DC3C24(v12, v14);
  }
  else
  {
    sub_249DC3C24(v12, v14);
    return 0;
  }
  return v24;
}

uint64_t sub_249E93FC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v29;
  unint64_t v30;
  __int128 *v31;
  uint64_t *v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, _QWORD *);
  char *v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  __int128 *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v4 = sub_249F1ECE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v77 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v69 - v8;
  v10 = sub_249F1ECD4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_249F1FFC4();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v80 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCF08);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v92 = a1;
  v18 = a1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  v20 = swift_dynamicCast();
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  if (v20)
  {
    v21(v17, 0, 1, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v17, v4);
  }
  v21(v17, 1, 1, v4);
  sub_249DCC2FC((uint64_t)v17, &qword_2578DCF08);
  *(_QWORD *)&v86 = a1;
  v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCF10);
  if (swift_dynamicCast())
  {
    sub_249D9E174(&v88, (uint64_t)&v92);
    v24 = v94;
    v25 = v95;
    __swift_project_boxed_opaque_existential_1(&v92, v94);
    (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
  }
  v69[1] = v19;
  v72 = v13;
  v73 = v11;
  v74 = v10;
  v75 = v9;
  v70 = v5;
  v76 = (_QWORD *)v4;
  v71 = a2;
  v90 = 0;
  v88 = 0u;
  v89 = 0u;
  sub_249DCC2FC((uint64_t)&v88, &qword_2578DCF18);
  swift_getErrorValue();
  v26 = v97;
  v27 = v98;
  v94 = v98;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v92);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(boxed_opaque_existential_1, v26, v27);
  sub_249F1FFAC();
  sub_249F1FFB8();
  v29 = sub_249F1FB8C();
  swift_release();
  swift_retain();
  v85 = v29;
  sub_249F1FC34();
  v30 = (unint64_t)a1;
  if (v96)
  {
    v31 = &v89;
    v84 = &v93;
    v32 = &v87;
    v33 = (_QWORD *)MEMORY[0x24BEE4B00];
    v83 = MEMORY[0x24BEE4AD8] + 8;
    v82 = (unint64_t)a1;
    v81 = &v89;
    do
    {
      v34 = v92;
      v88 = v92;
      sub_249DCA678(v84, v31);
      v86 = v34;
      sub_249DCA7E4((uint64_t)v31, (uint64_t)v32);
      if (*((_QWORD *)&v34 + 1))
      {
        swift_bridgeObjectRetain_n();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
        sub_249DCA7E4((uint64_t)v31, (uint64_t)v32);
        swift_bridgeObjectRelease();
        v35 = v32;
        v36 = sub_249F1F3AC();
        v38 = v37;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v86 = v33;
        v30 = sub_249DB7D8C(v34, *((uint64_t *)&v34 + 1));
        v41 = v33[2];
        v42 = (v40 & 1) == 0;
        v43 = v41 + v42;
        if (__OFADD__(v41, v42))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        a2 = v40;
        if (v33[3] >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_249DBCA40();
        }
        else
        {
          sub_249DB9A1C(v43, isUniquelyReferenced_nonNull_native);
          v44 = sub_249DB7D8C(v34, *((uint64_t *)&v34 + 1));
          if ((a2 & 1) != (v45 & 1))
          {
            result = sub_249F1FF10();
            __break(1u);
            return result;
          }
          v30 = v44;
        }
        v33 = (_QWORD *)v86;
        if ((a2 & 1) != 0)
        {
          v46 = (uint64_t *)(*(_QWORD *)(v86 + 56) + 16 * v30);
          swift_bridgeObjectRelease();
          *v46 = v36;
          v46[1] = v38;
        }
        else
        {
          *(_QWORD *)(v86 + 8 * (v30 >> 6) + 64) |= 1 << v30;
          *(_OWORD *)(v33[6] + 16 * v30) = v34;
          v47 = (uint64_t *)(v33[7] + 16 * v30);
          *v47 = v36;
          v47[1] = v38;
          v48 = v33[2];
          v49 = __OFADD__(v48, 1);
          v50 = v48 + 1;
          if (v49)
            goto LABEL_27;
          v33[2] = v50;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249DCC2FC((uint64_t)&v88, qword_2578DCF28);
        v30 = v82;
        v31 = v81;
        v32 = v35;
      }
      else
      {
        sub_249DCC2FC((uint64_t)&v88, qword_2578DCF28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      }
      sub_249F1FC34();
    }
    while (v96);
  }
  swift_release_n();
  swift_getErrorValue();
  *(_QWORD *)&v92 = swift_getDynamicType();
  *((_QWORD *)&v92 + 1) = v91;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DCF20);
  sub_249F1F3C4();
  *(_QWORD *)&v92 = v30;
  v51 = (id)v30;
  sub_249F1F3AC();
  v52 = v72;
  sub_249F1ECC8();
  v36 = (uint64_t)v75;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v75, v52, v74);
  a2 = v70;
  v33 = v76;
  (*(void (**)(uint64_t, _QWORD, _QWORD *))(v70 + 104))(v36, *MEMORY[0x24BE68940], v76);
  if (qword_2578D5D78 != -1)
LABEL_28:
    swift_once();
  v53 = sub_249F1EF38();
  __swift_project_value_buffer(v53, (uint64_t)qword_2578FF3F0);
  v54 = *(void (**)(char *, uint64_t, _QWORD *))(a2 + 16);
  v55 = v77;
  v54(v77, v36, v33);
  v56 = (id)v30;
  v57 = (id)v30;
  v58 = sub_249F1EF20();
  v59 = sub_249F1F814();
  v60 = v59;
  if (os_log_type_enabled(v58, v59))
  {
    v61 = swift_slowAlloc();
    LODWORD(v85) = v60;
    v62 = v61;
    v63 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v62 = 138412546;
    v64 = (id)v30;
    v65 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v92 = v65;
    sub_249F1F9AC();
    *v63 = v65;

    *(_WORD *)(v62 + 12) = 2112;
    sub_249E94A54();
    swift_allocError();
    v54(v66, (uint64_t)v55, v76);
    v67 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v92 = v67;
    v33 = v76;
    sub_249F1F9AC();
    v63[1] = v67;
    (*(void (**)(char *, _QWORD *))(a2 + 8))(v55, v33);
    _os_log_impl(&dword_249D98000, v58, (os_log_type_t)v85, "mapped %@ to %@", (uint8_t *)v62, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v63, -1, -1);
    MEMORY[0x24BD06618](v62, -1, -1);

  }
  else
  {

    (*(void (**)(char *, _QWORD *))(a2 + 8))(v55, v33);
  }
  v68 = v71;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v79);
  return (*(uint64_t (**)(uint64_t, char *, _QWORD *))(a2 + 32))(v68, v75, v33);
}

uint64_t sub_249E948C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249E935CC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_249E948D8()
{
  uint64_t v0;

  v0 = sub_249F1F37C();
  __swift_allocate_value_buffer(v0, qword_2578DCEB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2578DCEB8);
  return sub_249F1F364();
}

uint64_t sub_249E94920()
{
  uint64_t result;

  sub_249F1E4B8();
  swift_allocObject();
  result = sub_249F1E4AC();
  qword_2578DCED0 = result;
  return result;
}

uint64_t sub_249E9495C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE68988];
  v3 = sub_249F1ECE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

unint64_t sub_249E949A0()
{
  unint64_t result;

  result = qword_2578DCEE0;
  if (!qword_2578DCEE0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GeneratorError, &type metadata for GeneratorError);
    atomic_store(result, (unint64_t *)&qword_2578DCEE0);
  }
  return result;
}

uint64_t sub_249E949E4()
{
  uint64_t v0;

  sub_249E79F4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

unint64_t sub_249E94A10()
{
  unint64_t result;

  result = qword_2578DCEF8;
  if (!qword_2578DCEF8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for FrameworkError, &type metadata for FrameworkError);
    atomic_store(result, (unint64_t *)&qword_2578DCEF8);
  }
  return result;
}

unint64_t sub_249E94A54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578DB730;
  if (!qword_2578DB730)
  {
    v1 = sub_249F1ECE0();
    result = MEMORY[0x24BD06528](MEMORY[0x24BE68A00], v1);
    atomic_store(result, (unint64_t *)&qword_2578DB730);
  }
  return result;
}

void sub_249E94A9C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  oslog = sub_249F1EF20();
  v8 = sub_249F1F820();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_249E68CA8(a1, a2, &v12);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_249E68CA8(a3, a4, &v12);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v10, -1, -1);
    MEMORY[0x24BD06618](v9, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

void sub_249E94C78(uint64_t a1, unint64_t a2)
{
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  NSObject *oslog;
  uint64_t v8;

  swift_bridgeObjectRetain_n();
  oslog = sub_249F1EF20();
  v4 = sub_249F1F820();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v8 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    sub_249E68CA8(a1, a2, &v8);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v6, -1, -1);
    MEMORY[0x24BD06618](v5, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_249E94DF0()
{
  uint64_t v0;

  v0 = sub_249F1EF38();
  __swift_allocate_value_buffer(v0, qword_2578FF3F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2578FF3F0);
  return sub_249F1EF2C();
}

uint64_t sub_249E94E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_249F1EED8();
  __swift_allocate_value_buffer(v0, qword_2578FF408);
  __swift_project_value_buffer(v0, (uint64_t)qword_2578FF408);
  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_249F1EEB4();
}

uint64_t sub_249E94F44()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249E94F64()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_249E94F84()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_249E94FA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  __CVBuffer *v3;
  IOSurfaceRef IOSurface;
  __IOSurface *v5;
  IOSurfaceID ID;
  char v7;
  IOSurfaceID v8;

  if (*(_BYTE *)(v1 + 8) != 2)
    goto LABEL_5;
  v3 = (__CVBuffer *)*(id *)v1;
  IOSurface = CVPixelBufferGetIOSurface(v3);
  if (!IOSurface)
  {

LABEL_5:
    v8 = 0;
    v7 = 1;
    goto LABEL_6;
  }
  v5 = IOSurface;

  ID = IOSurfaceGetID(v5);
  v7 = 0;
  v8 = ID;
LABEL_6:
  *(_BYTE *)(a1 + 4) = 0;
  *(_DWORD *)a1 = v8;
  *(_BYTE *)(a1 + 5) = v7;
}

uint64_t sub_249E95028@<X0>(uint64_t a1@<X8>)
{
  return sub_249E95058(a1);
}

uint64_t sub_249E95058@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  __IOSurface *v3;
  __IOSurface *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(qword_2578DD0B0);
  sub_249F1EF50();
  if (v8)
  {
    v2 = (void *)swift_unknownObjectRetain();
    v3 = IOSurfaceLookupFromXPCObject(v2);
    if (v3)
    {
      v4 = v3;
      sub_249DCD2E8(v3, a1);

    }
    else
    {
      sub_249DCD4BC();
      swift_allocError();
      *(_DWORD *)v7 = 1;
      *(_BYTE *)(v7 + 4) = 1;
      swift_willThrow();
    }
    return swift_unknownObjectRelease_n();
  }
  else
  {
    sub_249DCD4BC();
    swift_allocError();
    *(_DWORD *)v5 = 0;
    *(_BYTE *)(v5 + 4) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_249E95184@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  __IOSurface *v3;
  __IOSurface *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(qword_2578DD0B0);
  sub_249F1EF50();
  if (v8)
  {
    v2 = (void *)swift_unknownObjectRetain();
    v3 = IOSurfaceLookupFromXPCObject(v2);
    if (v3)
    {
      v4 = v3;
      sub_249DDF704(v3, a1);

    }
    else
    {
      sub_249DCD4BC();
      swift_allocError();
      *(_DWORD *)v7 = 1;
      *(_BYTE *)(v7 + 4) = 1;
      swift_willThrow();
    }
    return swift_unknownObjectRelease_n();
  }
  else
  {
    sub_249DCD4BC();
    swift_allocError();
    *(_DWORD *)v5 = 0;
    *(_BYTE *)(v5 + 4) = 1;
    return swift_willThrow();
  }
}

void sub_249E952B0(uint64_t a1)
{
  uint64_t v1;

  sub_249E952CC(a1, *(void **)v1, *(_BYTE *)(v1 + 8));
}

void sub_249E952CC(uint64_t a1, void *a2, char a3)
{
  __CVBuffer *v3;
  IOSurfaceRef IOSurface;
  __IOSurface *v5;
  xpc_object_t XPCObject;

  if (a3 == 2)
  {
    v3 = a2;
    IOSurface = CVPixelBufferGetIOSurface(v3);
    if (IOSurface)
    {
      v5 = IOSurface;

      IOSurfaceGetID(v5);
      XPCObject = IOSurfaceCreateXPCObject(v5);
      MEMORY[0x24BDAC7A8](XPCObject);
      sub_249F1EF50();
      swift_unknownObjectRelease();

    }
    else
    {

    }
  }
}

BOOL sub_249E953A4(uint64_t a1, uint64_t a2)
{
  return sub_249E953BC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE4630]);
}

BOOL sub_249E953B0(uint64_t a1, uint64_t a2)
{
  return sub_249E953BC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE4600]);
}

BOOL sub_249E953BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _BOOL8 v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  __int128 v18;
  __int128 v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249F1FBBC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1FBB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_249DCC2FC((uint64_t)v8, &qword_2578DC0E8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v14 = a3(a1, a2);
    if (*(_QWORD *)(v14 + 16) && (v15 = sub_249DB7F04((uint64_t)v12), (v16 & 1) != 0))
    {
      sub_249DCA7E4(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v18);
    }
    else
    {
      v18 = 0u;
      v19 = 0u;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v13 = *((_QWORD *)&v19 + 1) != 0;
    sub_249DCC2FC((uint64_t)&v18, (uint64_t *)&unk_2578DD090);
  }
  return v13;
}

void sub_249E9554C(uint64_t a1@<X8>)
{
  uint64_t v1;
  IOSurfaceRef IOSurface;
  IOSurfaceRef v4;
  __IOSurface *v5;
  IOSurfaceID ID;
  IOSurfaceID v7;

  IOSurface = CVPixelBufferGetIOSurface(*(CVPixelBufferRef *)(v1 + 24));
  v4 = IOSurface;
  if (IOSurface)
  {
    v5 = IOSurface;
    ID = IOSurfaceGetID(v5);

    v7 = ID;
  }
  else
  {
    v7 = 0;
  }
  *(_BYTE *)(a1 + 4) = 0;
  *(_DWORD *)a1 = v7;
  *(_BYTE *)(a1 + 5) = v4 == 0;
}

uint64_t sub_249E955B4@<X0>(uint64_t a1@<X8>)
{
  return sub_249E95184(a1);
}

void sub_249E955E4()
{
  uint64_t v0;
  IOSurfaceRef IOSurface;
  __IOSurface *v2;
  xpc_object_t XPCObject;

  IOSurface = CVPixelBufferGetIOSurface(*(CVPixelBufferRef *)(v0 + 24));
  if (IOSurface)
  {
    v2 = IOSurface;
    IOSurfaceGetID(v2);
    XPCObject = IOSurfaceCreateXPCObject(v2);
    MEMORY[0x24BDAC7A8](XPCObject);
    sub_249F1EF50();
    swift_unknownObjectRelease();

  }
}

uint64_t sub_249E956A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v4);
  if ((a1 & 0x100000000) != 0)
  {
    sub_249F1F2A4();
  }
  else
  {
    sub_249F1F2D4();
    sub_249F1F2C8();
    sub_249F1F2B0();
    sub_249F1F2C8();
    sub_249F1F2EC();
  }
  sub_249F1E920();
  return sub_249F1F388();
}

unint64_t sub_249E95860(char a1)
{
  if (!a1)
    return 0xD00000000000001ALL;
  if (a1 == 1)
    return 0xD000000000000015;
  return 0xD000000000000024;
}

uint64_t sub_249E958BC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v25 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD180);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD188);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD190);
  v19 = *(_QWORD *)(v9 - 8);
  v20 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD198);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E98C40();
  v16 = v25;
  sub_249F20018();
  if ((v16 & 0x100000000) != 0)
  {
    if ((_DWORD)v16)
    {
      v27 = 1;
      sub_249E98CC8();
      sub_249F1FD3C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      v26 = 0;
      sub_249E98D0C();
      sub_249F1FD3C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
    }
  }
  else
  {
    v28 = 2;
    sub_249E98C84();
    sub_249F1FD3C();
    v17 = v24;
    sub_249F1FDD8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_249E95B2C()
{
  char *v0;

  return sub_249E95860(*v0);
}

uint64_t sub_249E95B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E986CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E95B58()
{
  sub_249E98C40();
  return sub_249F20024();
}

uint64_t sub_249E95B80()
{
  sub_249E98C40();
  return sub_249F20030();
}

uint64_t sub_249E95BA8()
{
  return 0x6E72757465527663;
}

uint64_t sub_249E95BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E72757465527663 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249E95C54()
{
  sub_249E98C84();
  return sub_249F20024();
}

uint64_t sub_249E95C7C()
{
  sub_249E98C84();
  return sub_249F20030();
}

uint64_t sub_249E95CA4()
{
  sub_249E98CC8();
  return sub_249F20024();
}

uint64_t sub_249E95CCC()
{
  sub_249E98CC8();
  return sub_249F20030();
}

uint64_t sub_249E95CF4()
{
  sub_249E98D0C();
  return sub_249F20024();
}

uint64_t sub_249E95D1C()
{
  sub_249E98D0C();
  return sub_249F20030();
}

uint64_t sub_249E95D44()
{
  unsigned int *v0;

  return sub_249E956A0(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

unint64_t sub_249E95D64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_249E9880C(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  }
  return result;
}

uint64_t sub_249E95D94(_QWORD *a1)
{
  unsigned int *v1;

  return sub_249E958BC(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_249E95DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a1);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 56))(v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
}

uint64_t sub_249E95EE0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(a2 + 64))();
  if (!v3)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a3, 0, 1, a1);
  return result;
}

uint64_t sub_249E95F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a2);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(a1, v10, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
}

uint64_t sub_249E96024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_249E95DC4(a1, *(_QWORD *)(a2 - 8), a3);
}

uint64_t sub_249E9602C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_249E95EE0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8), a3);
}

uint64_t sub_249E96048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249E95F38(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_249E96060(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = *a3;
  v8 = *(_QWORD *)(*a3 + 8);
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BD06528](MEMORY[0x24BEE4AC0], a2, &v8);
  v7 = *(_QWORD *)(v5 + 16);
  result = MEMORY[0x24BD06528](MEMORY[0x24BEE4AA8], a2, &v7);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249E960D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_249E960D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1F970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249E96154(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  void *v13;
  const void *v14;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if ((v7 | 3uLL) > 7 || v9 != 0 || ((v7 + 4) & ~v7) + v8 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 + 16) & ~(v7 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v13 = (void *)(((unint64_t)a1 + v7 + 4) & ~v7);
    v14 = (const void *)(((unint64_t)a2 + v7 + 4) & ~v7);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
    {
      memcpy(v13, v14, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v13, v14, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_249E9625C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  return result;
}

_DWORD *sub_249E962C8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 4) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 4) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
  }
  return a1;
}

_DWORD *sub_249E96384(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 4) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 4) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
  return a1;
}

_DWORD *sub_249E9648C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 4) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 4) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
  }
  return a1;
}

_DWORD *sub_249E96548(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 4) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 4) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
  return a1;
}

uint64_t sub_249E96650(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (v5)
  {
    v7 = *(_QWORD *)(v4 + 64);
  }
  else
  {
    v6 = 0;
    v7 = *(_QWORD *)(v4 + 64) + 1;
  }
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = a2 - v6;
  if (a2 > v6)
  {
    v10 = v7 + ((v8 + 4) & ~v8);
    v11 = 8 * v10;
    if (v10 > 3)
      goto LABEL_7;
    v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (v12)
        goto LABEL_14;
    }
    else
    {
      if (v13 <= 0xFF)
      {
        if (v13 < 2)
          goto LABEL_21;
LABEL_7:
        v12 = *(unsigned __int8 *)(a1 + v10);
        if (!*(_BYTE *)(a1 + v10))
          goto LABEL_21;
LABEL_14:
        v14 = (v12 - 1) << v11;
        if (v10 > 3)
          v14 = 0;
        if ((_DWORD)v10)
        {
          if (v10 > 3)
            LODWORD(v10) = 4;
          __asm { BR              X12 }
        }
        return v6 + v14 + 1;
      }
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (*(_WORD *)(a1 + v10))
        goto LABEL_14;
    }
  }
LABEL_21:
  if (v5 < 2)
    return 0;
  v16 = (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v8 + 4) & ~v8);
  if (v16 >= 2)
    return v16 - 1;
  else
    return 0;
}

void sub_249E967A8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  size_t v11;
  BOOL v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12 = a3 >= v9;
  v13 = a3 - v9;
  if (v13 != 0 && v12)
  {
    if (v11 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_16;
      goto LABEL_23;
    }
    v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_16:
        v15 = ~v9 + a2;
        if (v11 < 4)
        {
          if ((_DWORD)v11)
          {
            v16 = v15 & ~(-1 << (8 * v11));
            bzero(a1, v11);
            if ((_DWORD)v11 == 3)
            {
              *a1 = v16;
              *((_BYTE *)a1 + 2) = BYTE2(v16);
            }
            else if ((_DWORD)v11 == 2)
            {
              *a1 = v16;
            }
            else
            {
              *(_BYTE *)a1 = v16;
            }
          }
        }
        else
        {
          bzero(a1, v11);
          *(_DWORD *)a1 = v15;
        }
        __asm { BR              X10 }
      }
LABEL_23:
      __asm { BR              X13 }
    }
    if (v14 >= 0x100)
      v6 = 2;
    else
      v6 = v14 > 1;
  }
  if (v9 < a2)
    goto LABEL_16;
  goto LABEL_23;
}

void sub_249E9696C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_249E96974()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void type metadata accessor for ProxyWithAnIOSurface()
{
  JUMPOUT(0x24BD064D4);
}

uint64_t sub_249E969A4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_249E969AC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249E96A18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_249E96A88(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_249E96A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_249E96AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_249E96AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_249E96B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_249E96B58(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_249E96C08 + 4 * byte_249F2E86E[(v7 - 1)]))();
}

void sub_249E96C58(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for XPCReferenceShareableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCReferenceShareableWrapper);
}

uint64_t sub_249E96E14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t AssociatedTypeWitness;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  _QWORD v79[3];
  uint64_t v80;
  char *v81;

  v70 = a4;
  v71 = sub_249F1FAF0();
  v66 = *(_QWORD *)(v71 - 8);
  v7 = MEMORY[0x24BDAC7A8](v71);
  v68 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)&v55 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DD080);
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_249F1EF68();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v58 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_249F1FBBC();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v64 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v63 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v73 = (char *)&v55 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v55 - v21;
  v75 = a3;
  v76 = a2;
  v24 = type metadata accessor for XPCReferenceShareableWrapper(0, a2, a3, v23);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v55 - v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v28 = (uint64_t)v81;
  sub_249F1FFDC();
  if (v28)
    goto LABEL_15;
  v57 = v20;
  v55 = v27;
  v56 = v25;
  sub_249F1FBB0();
  __swift_project_boxed_opaque_existential_1(v79, v80);
  swift_getAssociatedConformanceWitness();
  v29 = v73;
  sub_249F1FE80();
  v30 = v29;
  v31 = (uint64_t)v57;
  sub_249E983F0((uint64_t)v22, (uint64_t)v57);
  v32 = v65;
  v33 = v67;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v31, 1, v67) == 1)
  {
    v62 = 0;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v30, AssociatedTypeWitness);
    sub_249DCC2FC((uint64_t)v22, &qword_2578DC0E8);
    sub_249DCC2FC(v31, &qword_2578DC0E8);
    v71 = (uint64_t)a1;
    v34 = v69;
    v35 = v70;
    v36 = v76;
    v37 = v72;
  }
  else
  {
    v81 = v22;
    v38 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v64, v31, v33);
    v39 = a1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v40 = sub_249F1FFE8();
    v41 = v72;
    if (*(_QWORD *)(v40 + 16) && (v42 = sub_249DB7F04(v38), (v43 & 1) != 0))
    {
      sub_249DCA7E4(*(_QWORD *)(v40 + 56) + 32 * v42, (uint64_t)&v77);
    }
    else
    {
      v77 = 0u;
      v78 = 0u;
    }
    v44 = v62;
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v78 + 1))
    {
      v45 = (uint64_t)v61;
      v46 = swift_dynamicCast();
      v47 = v60;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v45, v46 ^ 1u, 1, v44);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v44) != 1)
      {
        v71 = v24;
        v48 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v58, v45, v44);
        v49 = v73;
        (*(void (**)(char *, char *))(v75 + 64))(v73, v48);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v62);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v67);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v49, AssociatedTypeWitness);
        sub_249DCC2FC((uint64_t)v81, &qword_2578DC0E8);
        v34 = v69;
        v35 = v70;
        v36 = v76;
        v53 = v59;
        v24 = v71;
LABEL_17:
        v54 = v55;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v55, v53, v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
        (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v35, v54, v24);
        v51 = (uint64_t)v39;
        return __swift_destroy_boxed_opaque_existential_1(v51);
      }
    }
    else
    {
      sub_249DCC2FC((uint64_t)&v77, (uint64_t *)&unk_2578DD090);
      v45 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, 1, 1, v44);
    }
    v62 = 0;
    v71 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v64, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v73, AssociatedTypeWitness);
    sub_249DCC2FC((uint64_t)v81, &qword_2578DC0E8);
    sub_249DCC2FC(v45, (uint64_t *)&unk_2578DD080);
    v36 = v76;
    v37 = v41;
    v34 = v69;
    v35 = v70;
  }
  __swift_project_boxed_opaque_existential_1(v79, v80);
  v50 = v62;
  sub_249F1FE80();
  v53 = v37;
  v39 = (_QWORD *)v71;
  if (!v50)
    goto LABEL_17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  a1 = v39;
LABEL_15:
  v51 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v51);
}

uint64_t sub_249E976F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[24];
  uint64_t v59;
  uint64_t v60;

  v3 = *(_QWORD *)(a2 + 16);
  v55 = *(_QWORD *)(a2 + 24);
  v60 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = sub_249F1F970();
  v43 = *(_QWORD *)(v44 - 8);
  v5 = MEMORY[0x24BDAC7A8](v44);
  v50 = (char *)&v40 - v6;
  v46 = AssociatedTypeWitness;
  v48 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v40 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DD080);
  MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249F1EF68();
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_249F1FBBC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v40 - v20;
  sub_249F1FBB0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249F20000();
  sub_249E983F0((uint64_t)v21, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v19, 1, v12) == 1)
  {
    sub_249DCC2FC((uint64_t)v19, &qword_2578DC0E8);
    v22 = (uint64_t)v21;
LABEL_13:
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
    sub_249F1FEBC();
    goto LABEL_14;
  }
  v41 = v13;
  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v42 = v12;
  v23(v15, v19, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24 = sub_249F1FFE8();
  v25 = v60;
  if (*(_QWORD *)(v24 + 16) && (v26 = sub_249DB7F04((uint64_t)v15), (v27 & 1) != 0))
  {
    sub_249DCA7E4(*(_QWORD *)(v24 + 56) + 32 * v26, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  v29 = v51;
  v28 = v52;
  v22 = (uint64_t)v21;
  v30 = (uint64_t)v49;
  v31 = v50;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v57 + 1))
  {
    sub_249DCC2FC((uint64_t)&v56, (uint64_t *)&unk_2578DD090);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v30, 1, 1, v28);
    goto LABEL_12;
  }
  v32 = swift_dynamicCast();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, v32 ^ 1u, 1, v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28) == 1)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
    sub_249DCC2FC(v30, (uint64_t *)&unk_2578DD080);
    goto LABEL_13;
  }
  v54 = v15;
  v33 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v47, v30, v28);
  v34 = v55;
  (*(void (**)(uint64_t, uint64_t))(v55 + 56))(v25, v55);
  v35 = v29;
  v36 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v31, 1, v46) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v28);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v42);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v44);
    goto LABEL_13;
  }
  v38 = v45;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v31, v36);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
  swift_getAssociatedConformanceWitness();
  v39 = v53;
  sub_249F1FEBC();
  if (!v39)
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 72))(v47, v25, v34);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v36);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v52);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v42);
LABEL_14:
  sub_249DCC2FC(v22, &qword_2578DC0E8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t sub_249E97C90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_249E96E14(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_249E97CAC(_QWORD *a1, uint64_t a2)
{
  return sub_249E976F4(a1, a2);
}

BOOL sub_249E97CC0(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_249E97CD0()
{
  return sub_249F1FF70();
}

uint64_t sub_249E97CF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4965636166727573 && a2 == 0xE900000000000044;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7250746E65696C63 && a2 == 0xEF6174614479786FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249E97E14()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t sub_249E97E58(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7250746E65696C63;
  else
    return 0x4965636166727573;
}

void sub_249E97EA0()
{
  type metadata accessor for ProxyWithAnIOSurface.CodingKeys();
}

uint64_t sub_249E97EE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x24BD06528](&unk_249F2EC60, a1);
  v3 = sub_249F1FDF0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_249F20018();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_249F1FDE4();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_249F1FD84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_249E98000(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[14];

  v11[3] = a5;
  v9 = sub_249F1F970();
  v11[1] = *(_QWORD *)(v9 - 8);
  v11[2] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11[5] = (char *)v11 - v10;
  v11[10] = a1;
  v11[11] = a2;
  v11[12] = a3;
  v11[13] = a4;
  type metadata accessor for ProxyWithAnIOSurface.CodingKeys();
}

void sub_249E98088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x24BD06528](&unk_249F2EC60, a1);
  v6 = sub_249F1FD30();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 144) = v4;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for ProxyWithAnIOSurface();
}

uint64_t sub_249E980FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v3 - 192) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 136) = v2;
  v7 = *(_QWORD *)(v3 - 72);
  sub_249F1FFF4();
  if (v7)
  {
    v14 = (uint64_t)v1;
  }
  else
  {
    *(_QWORD *)(v3 - 72) = v4;
    v8 = *(_QWORD *)(v3 - 152);
    v9 = v1;
    v10 = *(_QWORD *)(v3 - 160);
    *(_BYTE *)(v3 - 112) = 0;
    v11 = *(_QWORD *)(v3 - 136);
    *(_DWORD *)v6 = sub_249F1FD18();
    *(_BYTE *)(v3 - 112) = 1;
    sub_249F1FCB8();
    (*(void (**)(uint64_t, _QWORD))(v10 + 8))(v11, *(_QWORD *)(v3 - 120));
    v13 = *(_QWORD *)(v3 - 192);
    (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v3 - 184) + 32))(&v6[*(int *)(v13 + 52)], v8, *(_QWORD *)(v3 - 176));
    (*(void (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v3 - 72) + 32))(*(_QWORD *)(v3 - 168), v6, v13);
    v14 = (uint64_t)v9;
  }
  return __swift_destroy_boxed_opaque_existential_1(v14);
}

BOOL sub_249E98258(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249E97CC0(*a1, *a2);
}

uint64_t sub_249E98270()
{
  return sub_249E97E14();
}

uint64_t sub_249E98284()
{
  return sub_249E97CD0();
}

uint64_t sub_249E98298()
{
  sub_249F1FF64();
  sub_249E97CD0();
  return sub_249F1FFA0();
}

uint64_t sub_249E982E0()
{
  char *v0;

  return sub_249E97E58(*v0);
}

uint64_t sub_249E982F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E97CF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E98324@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249E98C38();
  *a1 = result;
  return result;
}

uint64_t sub_249E98354(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F2EC60, a1);
  return sub_249F20024();
}

uint64_t sub_249E98388(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F2EC60, a1);
  return sub_249F20030();
}

void sub_249E983BC(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_249E98000(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_249E983DC()
{
  sub_249E97EA0();
}

uint64_t sub_249E983F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DC0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E98438(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;

  sub_249F1FE08();
  v5 = sub_249F1F3D0();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(a1, (const char *)(v5 + 32), a3);
  return swift_release();
}

void type metadata accessor for ProxyWithAnIOSurface.CodingKeys()
{
  JUMPOUT(0x24BD064D4);
}

uint64_t sub_249E984C4(void *a1)
{
  uint64_t v1;

  return sub_249E98438(a1, *(unsigned int *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_249E984E0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  xpc_object_t v5;
  uint64_t result;

  sub_249F1FE08();
  v4 = sub_249F1F3D0();
  swift_bridgeObjectRelease();
  v5 = xpc_dictionary_get_value(a1, (const char *)(v4 + 32));
  result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_249E98570@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_249E984E0(a1, a2);
}

uint64_t sub_249E98588(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_249E985A4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCReferenceShareableDecodingError()
{
  return &type metadata for XPCReferenceShareableDecodingError;
}

uint64_t sub_249E985D4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_249E985DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249E98628 + 4 * byte_249F2E881[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249E9865C + 4 * byte_249F2E87C[v4]))();
}

uint64_t sub_249E9865C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E98664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E9866CLL);
  return result;
}

uint64_t sub_249E98678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E98680);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249E98684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E9868C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_249E98698()
{
  JUMPOUT(0x24BD06528);
}

void sub_249E986AC()
{
  JUMPOUT(0x24BD06528);
}

void sub_249E986BC()
{
  JUMPOUT(0x24BD06528);
}

uint64_t sub_249E986CC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249F38440 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000249F38460 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x8000000249F38480)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_249E9880C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  unsigned __int8 v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  unsigned __int8 v40;
  char v41;
  char v42;
  char v43;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD140);
  v3 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v34 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD148);
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD150);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD158);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_249E98C40();
  v15 = v39;
  sub_249F1FFF4();
  if (!v15)
  {
    v31 = v7;
    v39 = v6;
    v17 = v36;
    v16 = v37;
    v18 = v11;
    v19 = sub_249F1FD24();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      if (*(_BYTE *)(v19 + 32))
      {
        if (*(_BYTE *)(v19 + 32) != 1)
        {
          v43 = 2;
          sub_249E98C84();
          sub_249F1FC64();
          v27 = v16;
          v28 = v33;
          v29 = sub_249F1FD0C();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
          v25 = (uint64_t)v38;
          v24 = 0;
          v20 = v29;
          goto LABEL_9;
        }
        v42 = 1;
        sub_249E98CC8();
        sub_249F1FC64();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        v20 = 1;
      }
      else
      {
        v41 = 0;
        sub_249E98D0C();
        sub_249F1FC64();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        v20 = 0;
      }
      v24 = 1;
      v25 = (uint64_t)v38;
LABEL_9:
      __swift_destroy_boxed_opaque_existential_1(v25);
      v40 = v24;
      return v20 | ((unint64_t)v24 << 32);
    }
    v21 = sub_249F1FAF0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v23 = &type metadata for XPCReferenceShareableDecodingError;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_249E98C38()
{
  return 2;
}

unint64_t sub_249E98C40()
{
  unint64_t result;

  result = qword_2578DD160;
  if (!qword_2578DD160)
  {
    result = MEMORY[0x24BD06528](&unk_249F2F030, &type metadata for XPCReferenceShareableDecodingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD160);
  }
  return result;
}

unint64_t sub_249E98C84()
{
  unint64_t result;

  result = qword_2578DD168;
  if (!qword_2578DD168)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EFE0, &type metadata for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD168);
  }
  return result;
}

unint64_t sub_249E98CC8()
{
  unint64_t result;

  result = qword_2578DD170;
  if (!qword_2578DD170)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EF90, &type metadata for XPCReferenceShareableDecodingError.FailedIOSurfaceLookupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD170);
  }
  return result;
}

unint64_t sub_249E98D0C()
{
  unint64_t result;

  result = qword_2578DD178;
  if (!qword_2578DD178)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EF40, &type metadata for XPCReferenceShareableDecodingError.MissingIOSurfaceIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD178);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for XPCReferenceShareableDecodingError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E98D9C + 4 * byte_249F2E88B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E98DD0 + 4 * byte_249F2E886[v4]))();
}

uint64_t sub_249E98DD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E98DD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E98DE0);
  return result;
}

uint64_t sub_249E98DEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E98DF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E98DF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E98E00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCReferenceShareableDecodingError.CodingKeys()
{
  return &type metadata for XPCReferenceShareableDecodingError.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCReferenceShareableDecodingError.MissingIOSurfaceIdentifierCodingKeys()
{
  return &type metadata for XPCReferenceShareableDecodingError.MissingIOSurfaceIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for XPCReferenceShareableDecodingError.FailedIOSurfaceLookupCodingKeys()
{
  return &type metadata for XPCReferenceShareableDecodingError.FailedIOSurfaceLookupCodingKeys;
}

uint64_t storeEnumTagSinglePayload for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E98E7C + 4 * byte_249F2E890[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E98E9C + 4 * byte_249F2E895[v4]))();
}

_BYTE *sub_249E98E7C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E98E9C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E98EA4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E98EAC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E98EB4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E98EBC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys()
{
  return &type metadata for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys;
}

unint64_t sub_249E98EDC()
{
  unint64_t result;

  result = qword_2578DD1A0;
  if (!qword_2578DD1A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EDC0, &type metadata for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1A0);
  }
  return result;
}

unint64_t sub_249E98F24()
{
  unint64_t result;

  result = qword_2578DD1A8;
  if (!qword_2578DD1A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EF18, &type metadata for XPCReferenceShareableDecodingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1A8);
  }
  return result;
}

unint64_t sub_249E98F6C()
{
  unint64_t result;

  result = qword_2578DD1B0;
  if (!qword_2578DD1B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EE38, &type metadata for XPCReferenceShareableDecodingError.MissingIOSurfaceIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1B0);
  }
  return result;
}

unint64_t sub_249E98FB4()
{
  unint64_t result;

  result = qword_2578DD1B8;
  if (!qword_2578DD1B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EE60, &type metadata for XPCReferenceShareableDecodingError.MissingIOSurfaceIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1B8);
  }
  return result;
}

unint64_t sub_249E98FFC()
{
  unint64_t result;

  result = qword_2578DD1C0;
  if (!qword_2578DD1C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EDE8, &type metadata for XPCReferenceShareableDecodingError.FailedIOSurfaceLookupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1C0);
  }
  return result;
}

unint64_t sub_249E99044()
{
  unint64_t result;

  result = qword_2578DD1C8;
  if (!qword_2578DD1C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EE10, &type metadata for XPCReferenceShareableDecodingError.FailedIOSurfaceLookupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1C8);
  }
  return result;
}

unint64_t sub_249E9908C()
{
  unint64_t result;

  result = qword_2578DD1D0;
  if (!qword_2578DD1D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2ED30, &type metadata for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1D0);
  }
  return result;
}

unint64_t sub_249E990D4()
{
  unint64_t result;

  result = qword_2578DD1D8;
  if (!qword_2578DD1D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2ED58, &type metadata for XPCReferenceShareableDecodingError.FailedCreatePixelBufferFromIOSurfaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1D8);
  }
  return result;
}

unint64_t sub_249E9911C()
{
  unint64_t result;

  result = qword_2578DD1E0;
  if (!qword_2578DD1E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EE88, &type metadata for XPCReferenceShareableDecodingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1E0);
  }
  return result;
}

unint64_t sub_249E99164()
{
  unint64_t result;

  result = qword_2578DD1E8;
  if (!qword_2578DD1E8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EEB0, &type metadata for XPCReferenceShareableDecodingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD1E8);
  }
  return result;
}

uint64_t sub_249E991A8(void *a1)
{
  return sub_249E984C4(a1);
}

uint64_t sub_249E991BC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_249E98570(a1, a2);
}

uint64_t sub_249E991D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_DWORD *)(a1 + 16);
  v12 = (int *)type metadata accessor for DefinitionSession();
  v13 = (_QWORD *)(a5 + v12[6]);
  *v13 = 0;
  v13[1] = 0;
  v14 = a5 + v12[7];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = -1;
  v15 = a5 + v12[8];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = -1;
  v16 = a5 + v12[9];
  *(_OWORD *)v16 = xmmword_249F21900;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_BYTE *)(v16 + 40) = 0;
  v17 = a5 + v12[10];
  *(_QWORD *)v17 = 0;
  *(_WORD *)(v17 + 8) = 255;
  v18 = v12[11];
  *(_QWORD *)(a5 + v18) = objc_msgSend((id)objc_opt_self(), sel_service);
  v19 = (_QWORD *)(a5 + v12[12]);
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)(a5 + v12[13]) = 0;
  *(_QWORD *)(a5 + v12[15]) = 0;
  *(_QWORD *)(a5 + v12[16]) = 0;
  if (v10 == 1)
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v21 = objc_msgSend(v20, sel_processName);
    v9 = sub_249F1F328();
    v10 = v22;

    v11 = objc_msgSend(v20, sel_processIdentifier);
  }
  if (a4)
    goto LABEL_6;
  v23 = sub_249DDCA70();
  if (*(_QWORD *)(v23 + 16))
  {
    v24 = *(_QWORD *)(v23 + 32);
    v25 = swift_bridgeObjectRelease();
    a3 = (*(uint64_t (**)(uint64_t))(v24 + 88))(v25);
    a4 = v26;
LABEL_6:
    sub_249F1E8CC();
    v27 = a5 + v12[5];
    *(_QWORD *)v27 = v9;
    *(_QWORD *)(v27 + 8) = v10;
    *(_DWORD *)(v27 + 16) = v11;
    sub_249E0ADC0(a2, a3, a4, a5 + v12[14]);
    return sub_249E9F018();
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t DefinitionSession.imageGeneratorIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefinitionSession() + 56) + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for DefinitionSession()
{
  uint64_t result;

  result = qword_2578DD2B8;
  if (!qword_2578DD2B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E99424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = qword_2578FF318;
  v8 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v8)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4)
        break;
      v14 = sub_249F1FE2C();
      v9 = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_14;
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v11 + 112))(v15);
  }
  else
  {
LABEL_12:
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E9954C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_249F1E584();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E90);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResolvedTextPrompt(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DefinitionSession();
  sub_249DC091C(v0 + *(int *)(v12 + 56), (uint64_t)v11, type metadata accessor for GenerationRecipe);
  v13 = *(_QWORD *)&v11[*(int *)(v9 + 48)];
  swift_bridgeObjectRetain();
  sub_249DC05A8((uint64_t)v11, type metadata accessor for GenerationRecipe);
  if (*(_QWORD *)(v13 + 16) == 1)
  {
    sub_249DC091C(v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v4, type metadata accessor for ResolvedTextPrompt);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      sub_249D9E308((uint64_t)v4, (uint64_t)v8, type metadata accessor for ResolvedTextPrompt);
      sub_249F1E56C();
      sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
      v14 = sub_249F1F4C0();
      sub_249DC05A8((uint64_t)v8, type metadata accessor for ResolvedTextPrompt);
      return v14;
    }
    sub_249DCC2FC((uint64_t)v4, &qword_2578D8E90);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t DefinitionSession.assignedImageStyles.getter()
{
  type metadata accessor for DefinitionSession();
  return swift_bridgeObjectRetain();
}

uint64_t sub_249E997C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_249E997E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_249E4C684(*(_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(v0 + 56) = v3;
  v4 = v2 + v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 64) = v1;
  v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 92);
  *(_DWORD *)(v0 + 60) = v5;
  *(_BYTE *)(v4 + v5) = 0;
  if (*(_QWORD *)(v1 + 16))
  {
    v6 = *(_QWORD *)(v0 + 16) + 32;
    swift_bridgeObjectRetain_n();
    __asm { BR              X9 }
  }
  sub_249E9F018();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E99970()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x249E99980);
}

uint64_t sub_249E99A04(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_BYTE *)(v4 + 64) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_249E99A9C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 24) + *(int *)(v0 + 56) + *(int *)(v0 + 60)) = *(_BYTE *)(v0 + 64);
  sub_249E9F018();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E99AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_249E99AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t i;
  char v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v1 + 16);
  if (!v11)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(char **)(v2 + *(int *)(type metadata accessor for DefinitionSession() + 56) + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (i = 0; i != v11; ++i)
  {
    v5 = *(_BYTE *)(v1 + 32 + i);
    if (*((_QWORD *)v3 + 2))
    {
      swift_bridgeObjectRetain_n();
      __asm { BR              X9 }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_249DB22EC(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    v7 = *((_QWORD *)v3 + 2);
    v6 = *((_QWORD *)v3 + 3);
    if (v7 >= v6 >> 1)
      v3 = sub_249DB22EC((char *)(v6 > 1), v7 + 1, 1, v3);
    *((_QWORD *)v3 + 2) = v7 + 1;
    v3[v7 + 32] = v5;
    *(_QWORD *)(v0 + 32) = v3;
  }
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v8;
  *v8 = v0;
  v8[1] = sub_249E99E38;
  v9 = *(_QWORD *)(v0 + 24);
  v8[2] = v3;
  v8[3] = v9;
  return swift_task_switch();
}

uint64_t sub_249E99E38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E99EAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E99EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_249E99EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v1 + 16))
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for DefinitionSession() + 56) + 64);
  *(_QWORD *)(v0 + 16) = v3;
  if (!*(_QWORD *)(v3 + 16))
    return (*(uint64_t (**)(void))(v0 + 8))();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v4 = sub_249EA4544(v3, v1);
  v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD *)(v3 + 16);
    v7 = v8;
    v10 = (_QWORD *)v0;
    goto LABEL_10;
  }
  v7 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v8 = v4;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (_QWORD *)v0;
  if (v7 != v9)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      v15 = *(_QWORD *)(v0 + 24) + 32;
      if (v7 < v9)
      {
        swift_bridgeObjectRetain();
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x249E9A2E8);
    }
LABEL_16:
    __break(1u);
    JUMPOUT(0x249E9A304);
  }
  if (v7 < v4)
  {
    __break(1u);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_10:
  sub_249E3C918(v8, v7);
  v12 = v10[2];
  v10[5] = v12;
  v13 = (_QWORD *)swift_task_alloc();
  v10[6] = v13;
  *v13 = v10;
  v13[1] = sub_249E9A32C;
  v14 = v10[4];
  v13[2] = v12;
  v13[3] = v14;
  return swift_task_switch();
}

uint64_t sub_249E9A32C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t DefinitionSession.genderDirective.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + 1);
}

uint64_t DefinitionSession.genderDirective.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *(_BYTE *)(v3 + *(int *)(result + 44) + 1) = a1;
  return result;
}

uint64_t DefinitionSession.forensicsReporter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefinitionSession() + 24));
  sub_249DC09B8(v1);
  return v1;
}

uint64_t sub_249E9A454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v6)
  {
LABEL_12:
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    swift_bridgeObjectRelease();
LABEL_16:
    sub_249DCC2FC((uint64_t)&v18, &qword_2578D62F0);
    return 0;
  }
  v7 = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
    if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
      break;
    v12 = sub_249F1FE2C();
    v7 = swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_14;
    if (v6 == ++v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v13 = swift_bridgeObjectRelease();
  (*(void (**)(__int128 *__return_ptr, uint64_t))(v9 + 112))(&v18, v13);
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)&v19 + 1);
  if (!*((_QWORD *)&v19 + 1))
    goto LABEL_16;
  v15 = v20;
  __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 72))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v16;
}

uint64_t DefinitionSession.generationSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefinitionSession() + 56) + 72);
}

uint64_t DefinitionSession.generationSeed.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for DefinitionSession();
  v6 = v2 + *(int *)(result + 56);
  *(_QWORD *)(v6 + 72) = a1;
  *(_BYTE *)(v6 + 80) = a2 & 1;
  return result;
}

uint64_t DefinitionSession.forceInProcessGeneration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DefinitionSession() + 56) + 58);
}

uint64_t DefinitionSession.forceInProcessGeneration.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DefinitionSession();
  *(_BYTE *)(v1 + *(int *)(result + 56) + 58) = a1;
  return result;
}

uint64_t sub_249E9A698(char a1)
{
  uint64_t v1;
  unint64_t v3;
  void *v4;
  uint64_t result;

  v3 = qword_2578D5DB0 & 0xFFFFFFFFFFFFFFFELL | a1 & 1;
  if (qword_2578D5DB0 != v3)
  {
    v4 = (void *)qword_2578D5DA8;
    qword_2578D5DA8 = 0;

  }
  qword_2578D5DB0 = v3;
  result = type metadata accessor for DefinitionSession();
  *(_BYTE *)(v1 + *(int *)(result + 56) + 56) = a1 & 1;
  return result;
}

void DefinitionSession.set(forensicsReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  unint64_t v13;
  void *v14;

  v5 = type metadata accessor for DefinitionSession();
  v6 = v5;
  v7 = (uint64_t *)(v2 + *(int *)(v5 + 24));
  v8 = *v7;
  if (*v7)
  {
    if (a1)
      goto LABEL_6;
  }
  else if (!a1)
  {
    goto LABEL_6;
  }
  v9 = v2 + *(int *)(v5 + 48);

  *(_QWORD *)v9 = 0;
  *(_QWORD *)(v9 + 8) = 0;
LABEL_6:
  *v7 = a1;
  v7[1] = a2;
  sub_249DC09B8(a1);
  sub_249DC0A2C(v8);
  if (a1)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    v11 = sub_249E0E908;
    v12 = 2;
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  sub_249DC09B8(a1);
  sub_249DC0A2C((uint64_t)v11);
  v13 = qword_2578D5DB0 & 0xFFFFFFFFFFFFFFFDLL | v12;
  if (qword_2578D5DB0 != v13)
  {
    v14 = (void *)qword_2578D5DA8;
    qword_2578D5DA8 = 0;

  }
  qword_2578D5DB0 = v13;
  *(_BYTE *)(v2 + *(int *)(v6 + 56) + 62) = a1 != 0;
}

uint64_t sub_249E9A824()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t DefinitionSession.skinToneDirective.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *a1 = *(_BYTE *)(v3 + *(int *)(result + 44) + 2);
  return result;
}

uint64_t DefinitionSession.skinToneDirective.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *(_BYTE *)(v3 + *(int *)(result + 44) + 2) = v2;
  return result;
}

uint64_t sub_249E9A8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v9[15] = a8;
  v9[16] = v8;
  v9[13] = a6;
  v9[14] = a7;
  v9[11] = a4;
  v9[12] = a5;
  v9[9] = a2;
  v9[10] = a3;
  v9[8] = a1;
  v9[17] = sub_249F1E584();
  v9[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v9[19] = swift_task_alloc();
  v10 = sub_249F1E8D8();
  v9[20] = v10;
  v9[21] = *(_QWORD *)(v10 - 8);
  v9[22] = swift_task_alloc();
  v9[23] = swift_task_alloc();
  v9[24] = *(_QWORD *)(type metadata accessor for ResolvedTextPrompt(0) - 8);
  v9[25] = swift_task_alloc();
  v9[26] = swift_task_alloc();
  type metadata accessor for TextPrompt();
  v9[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E9A9E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  void *v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v1 = v0[11];
  v2 = swift_allocObject();
  v3 = v2;
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  v5 = v0[13];
  v4 = v0[14];
  v6 = v0[12];
  if (v1 == 1)
    v7 = 0;
  else
    v7 = v0[13];
  if (v1 == 1)
    v8 = 0;
  else
    v8 = v0[14];
  if (v1 == 1)
    v9 = 0;
  else
    v9 = v1;
  v0[29] = v7;
  v0[30] = v8;
  v0[28] = v2;
  v21 = v7;
  sub_249E11B04(v1, v6, v5);
  sub_249DC0A2C(v9);
  v10 = (_QWORD *)swift_allocObject();
  v0[31] = (uint64_t)v10;
  v10[2] = v1;
  v10[3] = v6;
  v10[4] = v5;
  v10[5] = v4;
  v10[6] = v3;
  sub_249E11B04(v1, v6, v5);
  v11 = sub_249EA4798();
  v0[32] = (uint64_t)v12;
  v13 = v0[16];
  v14 = v11 & 1;
  v15 = v12;
  v0[33] = sub_249E9EF4C();
  v16 = type metadata accessor for DefinitionSession();
  v0[34] = v16;
  v17 = (uint64_t *)(v13 + *(int *)(v16 + 24));
  v18 = *v17;
  v0[35] = *v17;
  v0[36] = v17[1];
  sub_249DC09B8(v21);
  sub_249DC09B8(v18);
  v19 = (_QWORD *)swift_task_alloc();
  v0[37] = (uint64_t)v19;
  *v19 = v0;
  v19[1] = sub_249E9AC34;
  return sub_249E18550(v0[27], v0[8], v0[9], v14, (uint64_t)v15, v0[10], (uint64_t)sub_249EA4AA8, (uint64_t)v10);
}

uint64_t sub_249E9AC34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_retain();
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 280);
    v4 = *(_QWORD *)(v2 + 232);
    swift_retain();
    sub_249DC0A2C(v3);
    sub_249DC0A2C(v4);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_249E9ACE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(int *)(*(_QWORD *)(v0 + 272) + 56);
  *(_DWORD *)(v0 + 360) = v2;
  v3 = v1 + v2;
  v4 = (int *)type metadata accessor for GenerationRecipe(0);
  v5 = v4[12];
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x24BEE4AF8];
  v26 = v5;
  *(_QWORD *)(v3 + v5) = MEMORY[0x24BEE4AF8];
  v7 = (_QWORD *)(v3 + v4[19]);
  swift_bridgeObjectRelease();
  *v7 = v6;
  if (qword_2578D5D88 != -1)
    swift_once();
  v8 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 200);
  v9 = qword_2578FF430;
  v10 = *(_QWORD *)algn_2578FF438;
  v11 = qword_2578FF440;
  v12 = v4[21];
  *(_DWORD *)(v0 + 364) = v12;
  v13 = (uint64_t *)(v3 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v13 = v9;
  v13[1] = v10;
  v13[2] = v11;
  v14 = v4[23];
  *(_DWORD *)(v0 + 368) = v14;
  *(_BYTE *)(v3 + v14) = 0;
  sub_249DC091C(v24, v8, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  sub_249DC091C(v8, v25, type metadata accessor for ResolvedTextPrompt);
  v15 = sub_249DB20CC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v17 = *(_QWORD *)(v15 + 16);
  v16 = *(_QWORD *)(v15 + 24);
  if (v17 >= v16 >> 1)
    v15 = sub_249DB20CC(v16 > 1, v17 + 1, 1, v15);
  v18 = *(_QWORD *)(v0 + 200);
  v19 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v15 + 16) = v17 + 1;
  sub_249D9E308(v18, v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v17, type metadata accessor for ResolvedTextPrompt);
  *(_QWORD *)(v3 + v26) = v15;
  sub_249DC05A8(v19, type metadata accessor for ResolvedTextPrompt);
  swift_beginAccess();
  v21 = swift_bridgeObjectRetain();
  sub_249E5E03C(v21);
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v22;
  *v22 = v0;
  v22[1] = sub_249E9AF20;
  return sub_249E4DAB4(v0 + 40, *(_QWORD *)(v0 + 128));
}

uint64_t sub_249E9AF20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E9AF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  __int16 v23;
  char v24;
  __int16 v25;
  char v26;

  v1 = *(_QWORD *)(v0 + 128) + *(int *)(v0 + 360) + *(int *)(v0 + 364);
  v2 = *(_QWORD *)(v0 + 40);
  v22 = *(_OWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v2;
  *(_OWORD *)(v1 + 8) = v22;
  v3 = sub_249E57634();
  if (*(_QWORD *)(v3 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 16))(*(_QWORD *)(v0 + 152), v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 168) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 168) + 80)), *(_QWORD *)(v0 + 160));
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, v4, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_249DCC2FC(*(_QWORD *)(v0 + 152), &qword_2578D6288);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 32))(v10, *(_QWORD *)(v0 + 152), v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v10, v11);
    sub_249E469F0(v9, *(id *)(v13 + *(int *)(v8 + 44)), &v23);
    if (v23 == 3)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 184);
      v15 = *(_QWORD *)(v0 + 160);
      v16 = *(_QWORD *)(v0 + 168);
      v25 = v23;
      v26 = v24;
      sub_249E334F0((unsigned __int8 *)&v25, 0);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + *(int *)(v0 + 360) + 64);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain_n();
    __asm { BR              X9 }
  }
  v18 = *(void **)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  v20 = *(_QWORD *)(v0 + 216);
  sub_249E9F018();

  sub_249DC05A8(v20, (uint64_t (*)(_QWORD))type metadata accessor for TextPrompt);
  swift_release();
  sub_249DC0A2C(v19);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E9B2EC()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x249E9B2F8);
}

uint64_t sub_249E9B3B4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 352) = v1;
  swift_task_dealloc();
  v5 = *(void **)(v4 + 328);
  swift_bridgeObjectRelease();

  if (!v1)
    *(_BYTE *)(v4 + 372) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_249E9B438()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(*(_QWORD *)(v0 + 128) + *(int *)(v0 + 360) + *(int *)(v0 + 368)) = *(_BYTE *)(v0 + 372);
  v1 = *(void **)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  sub_249E9F018();

  sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for TextPrompt);
  swift_release();
  sub_249DC0A2C(v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9B534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 232);

  sub_249DC0A2C(v1);
  sub_249DC0A2C(v2);
  swift_release();
  swift_release();
  sub_249DC0A2C(v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9B60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);

  sub_249DC05A8(v2, (uint64_t (*)(_QWORD))type metadata accessor for TextPrompt);
  swift_release();
  sub_249DC0A2C(v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9B6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);

  sub_249DC05A8(v2, (uint64_t (*)(_QWORD))type metadata accessor for TextPrompt);
  swift_release();
  sub_249DC0A2C(v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DefinitionSession.lcmScale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  v5 = v3 + *(int *)(result + 40);
  *(_DWORD *)v5 = a1;
  *(_BYTE *)(v5 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t DefinitionSession.availableImageStyles.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v6)
  {
LABEL_12:
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    swift_bridgeObjectRelease();
LABEL_16:
    sub_249DCC2FC((uint64_t)&v18, &qword_2578D62F0);
    return MEMORY[0x24BEE4AF8];
  }
  v7 = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
    if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
      break;
    v12 = sub_249F1FE2C();
    v7 = swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_14;
    if (v6 == ++v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v13 = swift_bridgeObjectRelease();
  (*(void (**)(__int128 *__return_ptr, uint64_t))(v9 + 112))(&v18, v13);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
    goto LABEL_16;
  sub_249D9E174(&v18, (uint64_t)v21);
  v14 = v22;
  v15 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 32) + 8))(v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v16;
}

uint64_t sub_249E9B970(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 176) = v1;
  *(_QWORD *)(v2 + 184) = v3;
  *(_BYTE *)(v2 + 276) = *((_BYTE *)a1 + 8);
  return swift_task_switch();
}

uint64_t sub_249E9B994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  CVPixelBufferRef v35;
  _QWORD *v36;
  CVPixelBufferRef v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v42;
  _QWORD *v43;
  __int128 v44;
  OSType v45;
  char v46;
  uint64_t v47;
  char v48;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v0 + 192) = v2;
  v3 = *(int *)(v2 + 56);
  *(_DWORD *)(v0 + 272) = v3;
  v4 = v1 + v3;
  v6 = *(_QWORD *)(v4 + 8);
  v5 = *(_QWORD *)(v4 + 16);
  v7 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  v8 = qword_2578FF318;
  v9 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v9)
  {
LABEL_12:
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    swift_bridgeObjectRelease();
LABEL_20:
    sub_249DCC2FC(v0 + 56, &qword_2578D62F0);
    if (qword_2578D5D78 != -1)
      swift_once();
    v28 = sub_249F1EF38();
    __swift_project_value_buffer(v28, (uint64_t)qword_2578FF3F0);
    v29 = sub_249F1EF20();
    v30 = sub_249F1F820();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_QWORD *)&v44 = v32;
      *(_DWORD *)v31 = 136315138;
      *(_QWORD *)(v0 + 136) = sub_249E68CA8(0xD00000000000002FLL, 0x8000000249F384D0, (uint64_t *)&v44);
      sub_249F1F9AC();
      _os_log_impl(&dword_249D98000, v29, v30, "%s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v32, -1, -1);
      MEMORY[0x24BD06618](v31, -1, -1);
    }

    sub_249EA0D6C();
    swift_allocError();
    *v33 = 0xD00000000000002FLL;
    v33[1] = 0x8000000249F384D0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v42 = (_QWORD *)(v0 + 96);
  v43 = (_QWORD *)(v0 + 16);
  v10 = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    v12 = *(_QWORD *)(v8 + 8 * v11 + 32);
    if ((*(uint64_t (**)(uint64_t))(v12 + 88))(v10) == v6 && v13 == v5)
      break;
    v15 = sub_249F1FE2C();
    v10 = swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_14;
    if (v9 == ++v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v16 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v12 + 112))(v16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_20;
  sub_249D9E174((__int128 *)(v0 + 56), (uint64_t)v43);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1(v43, v17);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 56))(&v44, v17, v18);
  if ((v46 & 1) == 0)
  {
    v34 = *(_BYTE *)(v0 + 276);
    v47 = *(_QWORD *)(v0 + 184);
    v48 = v34;
    v35 = sub_249E468DC((uint64_t *)&v44, v45);
    *(_QWORD *)(v0 + 200) = v35;
    v37 = v35;
    v38 = *(_QWORD *)(v0 + 176);
    v39 = swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v39;
    *(_QWORD *)(v39 + 16) = v38;
    *(_QWORD *)(v39 + 24) = v37;
    v40 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8FE8);
    *v40 = v0;
    v40[1] = sub_249E9BF6C;
    return sub_249F1FEEC();
  }
  if (qword_2578D5D78 != -1)
    swift_once();
  v19 = sub_249F1EF38();
  __swift_project_value_buffer(v19, (uint64_t)qword_2578FF3F0);
  sub_249D9E1E4((uint64_t)v43, (uint64_t)v42);
  v20 = sub_249F1EF20();
  v21 = sub_249F1F820();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_QWORD *)&v44 = v23;
    *(_DWORD *)v22 = 136315138;
    v25 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1(v42, v25);
    v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v24 + 24) + 8))(v25);
    *(_QWORD *)(v0 + 144) = sub_249E68CA8(v26, v27, (uint64_t *)&v44);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    _os_log_impl(&dword_249D98000, v20, v21, "%s does not support a conditioning image", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v23, -1, -1);
    MEMORY[0x24BD06618](v22, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }

  sub_249EA0D6C();
  swift_allocError();
  *v36 = 0xD000000000000023;
  v36[1] = 0x8000000249F38520;
  swift_willThrow();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9BF6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E9BFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  __CVBuffer *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t Height;
  size_t Width;
  uint64_t v43;
  void *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v1 = *(_QWORD *)(v0 + 176) + *(int *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 232) = v2;
  if ((*(_BYTE *)(v1 + 61) & 1) != 0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v3;
    *v3 = v0;
    v3[1] = sub_249E9C4E4;
    v4 = *(_QWORD *)(v0 + 176);
    v3[7] = *(_QWORD *)(v0 + 200);
    v3[8] = v4;
    return swift_task_switch();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 224);
    v7 = *(void **)(v0 + 200);
    v47 = (uint64_t)v7;
    v48 = 2;
    v8 = v7;
    sub_249D9DE48((uint64_t)&v47, v2, 0, 0);
    v9 = *(_QWORD *)(v0 + 232);
    v10 = *(void **)(v0 + 200);
    if (v6)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      v11 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      v12 = *(int *)(v0 + 272);
      v45 = *(_BYTE *)(v0 + 276);
      v13 = *(_QWORD *)(v0 + 176);
      v43 = *(_QWORD *)(v0 + 192);
      v44 = *(void **)(v0 + 184);

      v40 = v9;
      v14 = v10;
      Width = CVPixelBufferGetWidth(v14);
      Height = CVPixelBufferGetHeight(v14);
      LODWORD(v14) = CVPixelBufferGetPixelFormatType(v14);
      type metadata accessor for ResolvedImage.HiddenBufferData();
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_249F21920;
      v38 = v14;
      v15 = (uint64_t *)(v13 + v12 + *(int *)(type metadata accessor for GenerationRecipe(0) + 80));
      v16 = *v15;
      v17 = v15[1];
      v18 = v15[2];
      v37 = (void *)v15[3];
      swift_bridgeObjectRetain();
      sub_249DC08D0(v16, v17, v18, v37);
      *v15 = Width;
      v15[1] = Height;
      v15[2] = v38;
      v15[3] = (uint64_t)v7;
      v15[4] = v39;
      v15[5] = v40;
      v15[6] = 0;
      v15[7] = 0;
      v19 = v13 + *(int *)(v43 + 32);
      v20 = *(void **)v19;
      *(_QWORD *)v19 = v44;
      v21 = *(_BYTE *)(v19 + 8);
      *(_BYTE *)(v19 + 8) = v45;
      v22 = v44;
      sub_249DC0794(v20, v21);
      if (qword_2578D5D78 != -1)
        swift_once();
      v23 = sub_249F1EF38();
      __swift_project_value_buffer(v23, (uint64_t)qword_2578FF3F0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v24 = sub_249F1EF20();
      v25 = sub_249F1F82C();
      v26 = os_log_type_enabled(v24, v25);
      v27 = *(_QWORD *)(v0 + 232);
      if (v26)
      {
        v28 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v47 = v46;
        *(_DWORD *)v28 = 134218243;
        v29 = *(_QWORD *)(v27 + 16);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 160) = v29;
        sub_249F1F9AC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2081;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 168) = sub_249E68CA8(7104878, 0xE300000000000000, &v47);
        sub_249F1F9AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_249D98000, v24, v25, "assigned prompt conditioning image with %ld faces, caption %{private}s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v46, -1, -1);
        MEMORY[0x24BD06618](v28, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      v30 = *(double **)(v0 + 232);
      if (*((_QWORD *)v30 + 2))
      {
        v31 = *(void **)(v0 + 200);
        v32 = v30[4];
        v33 = v30[5];
        v34 = v30[6];
        v35 = v30[7];
        swift_bridgeObjectRelease();
        sub_249DE078C(v31, (uint64_t)&v47, v32, v33, v34, v35);
        if (v47 != 3)
          sub_249E334F0((unsigned __int8 *)&v47, 1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v36 = *(void **)(v0 + 200);
      sub_249E9F018();

      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      v11 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v11();
  }
}

uint64_t sub_249E9C4A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 200);
  swift_task_dealloc();

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9C4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 248) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v6 + 256) = a2;
    *(_QWORD *)(v6 + 264) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_249E9C564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  __CVBuffer *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t Height;
  size_t Width;
  uint64_t v43;
  void *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(void **)(v0 + 200);
  v48 = (uint64_t)v5;
  LOBYTE(v49) = 2;
  v6 = v5;
  sub_249D9DE48((uint64_t)&v48, v4, v2, v1);
  v7 = *(_QWORD *)(v0 + 232);
  v8 = *(void **)(v0 + 200);
  if (v3)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 176);
    v11 = *(int *)(v0 + 272);
    v45 = *(_BYTE *)(v0 + 276);
    v43 = *(_QWORD *)(v0 + 192);
    v44 = *(void **)(v0 + 184);

    v12 = v8;
    Width = CVPixelBufferGetWidth(v12);
    Height = CVPixelBufferGetHeight(v12);
    LODWORD(v12) = CVPixelBufferGetPixelFormatType(v12);
    type metadata accessor for ResolvedImage.HiddenBufferData();
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_249F21920;
    v39 = v12;
    v13 = (uint64_t *)(v10 + v11 + *(int *)(type metadata accessor for GenerationRecipe(0) + 80));
    v14 = *v13;
    v46 = v2;
    v15 = v13[2];
    v37 = (void *)v13[3];
    v38 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249DC08D0(v14, v38, v15, v37);
    *v13 = Width;
    v13[1] = Height;
    v13[2] = v39;
    v13[3] = (uint64_t)v5;
    v13[4] = v40;
    v13[5] = v7;
    v13[6] = v46;
    v13[7] = v1;
    v16 = v10 + *(int *)(v43 + 32);
    v17 = *(void **)v16;
    *(_QWORD *)v16 = v44;
    v18 = *(_BYTE *)(v16 + 8);
    *(_BYTE *)(v16 + 8) = v45;
    v19 = v44;
    sub_249DC0794(v17, v18);
    if (v1)
    {
      v48 = 34;
      v49 = 0xE100000000000000;
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      v20 = v48;
      v21 = v49;
    }
    else
    {
      v21 = 0xE300000000000000;
      v20 = 7104878;
    }
    if (qword_2578D5D78 != -1)
      swift_once();
    v22 = sub_249F1EF38();
    __swift_project_value_buffer(v22, (uint64_t)qword_2578FF3F0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v23 = sub_249F1EF20();
    v24 = sub_249F1F82C();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(_QWORD *)(v0 + 232);
    if (v25)
    {
      v27 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v48 = v47;
      *(_DWORD *)v27 = 134218243;
      v28 = *(_QWORD *)(v26 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 160) = v28;
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 168) = sub_249E68CA8(v20, v21, &v48);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v23, v24, "assigned prompt conditioning image with %ld faces, caption %{private}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v47, -1, -1);
      MEMORY[0x24BD06618](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v29 = *(double **)(v0 + 232);
    if (*((_QWORD *)v29 + 2))
    {
      v30 = *(void **)(v0 + 200);
      v31 = v29[4];
      v32 = v29[5];
      v33 = v29[6];
      v34 = v29[7];
      swift_bridgeObjectRelease();
      sub_249DE078C(v30, (uint64_t)&v48, v31, v32, v33, v34);
      if (v48 != 3)
        sub_249E334F0((unsigned __int8 *)&v48, 1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v35 = *(void **)(v0 + 200);
    sub_249E9F018();

    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v9();
}

uint64_t sub_249E9CA0C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9CA4C(uint64_t *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 152) = v2;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(type metadata accessor for ResolvedTextPrompt(0) - 8);
  *(_QWORD *)(v3 + 168) = swift_task_alloc();
  *(_QWORD *)(v3 + 176) = swift_task_alloc();
  sub_249F1E6B0();
  *(_QWORD *)(v3 + 184) = swift_task_alloc();
  type metadata accessor for TextPrompt();
  v6 = swift_task_alloc();
  v7 = *a1;
  *(_QWORD *)(v3 + 192) = v6;
  *(_QWORD *)(v3 + 200) = v7;
  *(_BYTE *)(v3 + 256) = *((_BYTE *)a1 + 8);
  *(_BYTE *)(v3 + 257) = *a2;
  return swift_task_switch();
}

uint64_t sub_249E9CB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t *v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  _QWORD *v37;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  OSType v55;
  char v56;
  uint64_t v57;
  char v58;

  v2 = v0 + 152;
  v1 = *(_QWORD *)(v0 + 152);
  v3 = v0 + 56;
  v4 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v0 + 208) = v4;
  v5 = *(int *)(v4 + 56);
  *(_DWORD *)(v0 + 248) = v5;
  v6 = v1 + v5;
  v8 = *(_QWORD *)(v1 + v5 + 8);
  v7 = *(_QWORD *)(v1 + v5 + 16);
  v9 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = qword_2578FF318;
  v11 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v11)
  {
LABEL_12:
    *(_QWORD *)(v3 + 32) = 0;
    *(_OWORD *)v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    swift_bridgeObjectRelease();
LABEL_20:
    sub_249DCC2FC(v3, &qword_2578D62F0);
    if (qword_2578D5D78 != -1)
      swift_once();
    v29 = sub_249F1EF38();
    __swift_project_value_buffer(v29, (uint64_t)qword_2578FF3F0);
    v30 = sub_249F1EF20();
    v31 = sub_249F1F820();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint64_t *)(v2 - 16);
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_QWORD *)&v54 = v34;
      *(_DWORD *)v33 = 136315138;
      *v32 = sub_249E68CA8(0xD00000000000002FLL, 0x8000000249F384D0, (uint64_t *)&v54);
      sub_249F1F9AC();
      _os_log_impl(&dword_249D98000, v30, v31, "%s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v34, -1, -1);
      MEMORY[0x24BD06618](v33, -1, -1);
    }

    sub_249EA0D6C();
    swift_allocError();
    *v35 = 0xD00000000000002FLL;
    v35[1] = 0x8000000249F384D0;
    swift_willThrow();
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v52 = (_QWORD *)(v0 + 16);
  v53 = v0;
  v49 = v6;
  v51 = (_QWORD *)(v0 + 96);
  v12 = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    v14 = *(_QWORD *)(v10 + 8 * v13 + 32);
    if ((*(uint64_t (**)(uint64_t))(v14 + 88))(v12) == v8 && v15 == v7)
      break;
    v17 = sub_249F1FE2C();
    v12 = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_14;
    if (v11 == ++v13)
    {
      swift_bridgeObjectRelease();
      v0 = v53;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v18 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v14 + 112))(v18);
  swift_bridgeObjectRelease();
  v0 = v53;
  if (!*(_QWORD *)(v53 + 80))
    goto LABEL_20;
  sub_249D9E174((__int128 *)v3, (uint64_t)v52);
  v19 = *(_QWORD *)(v53 + 40);
  v20 = *(_QWORD *)(v53 + 48);
  __swift_project_boxed_opaque_existential_1(v52, v19);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 64))(&v54, v19, v20);
  if ((v56 & 1) != 0)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v21 = sub_249F1EF38();
    __swift_project_value_buffer(v21, (uint64_t)qword_2578FF3F0);
    sub_249D9E1E4((uint64_t)v52, (uint64_t)v51);
    v22 = sub_249F1EF20();
    v23 = sub_249F1F820();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      *(_QWORD *)&v54 = v50;
      *(_DWORD *)v24 = 136315138;
      v26 = *(_QWORD *)(v53 + 120);
      v25 = *(_QWORD *)(v53 + 128);
      __swift_project_boxed_opaque_existential_1(v51, v26);
      v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v25 + 24) + 8))(v26);
      *(_QWORD *)(v53 + 144) = sub_249E68CA8(v27, v28, (uint64_t *)&v54);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      _os_log_impl(&dword_249D98000, v22, v23, "%s does not support retoning", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v50, -1, -1);
      MEMORY[0x24BD06618](v24, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    }

    sub_249EA0D6C();
    swift_allocError();
    *v37 = 0xD00000000000001FLL;
    v37[1] = 0x8000000249F38500;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    goto LABEL_28;
  }
  v36 = *(_BYTE *)(v53 + 256);
  v57 = *(_QWORD *)(v53 + 200);
  v58 = v36;
  *(_QWORD *)(v53 + 216) = sub_249E468DC((uint64_t *)&v54, v55);
  v39 = (int *)type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)(v53 + 224) = v39;
  v40 = v39[12];
  *(_DWORD *)(v53 + 252) = v40;
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v49 + v40) = MEMORY[0x24BEE4AF8];
  v42 = v39[19];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + v42) = v41;
  if (qword_2578D5D88 != -1)
    swift_once();
  v44 = qword_2578FF430;
  v43 = *(_QWORD *)algn_2578FF438;
  v45 = qword_2578FF440;
  v46 = (uint64_t *)(v49 + v39[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v46 = v44;
  v46[1] = v43;
  v46[2] = v45;
  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v53 + 232) = v47;
  *v47 = v53;
  v47[1] = sub_249E9D19C;
  v48 = *(_QWORD *)(v53 + 152);
  v47[2] = &unk_251B4DAC8;
  v47[3] = v48;
  return swift_task_switch();
}

uint64_t sub_249E9D19C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E9D200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __CVBuffer *v16;
  size_t Width;
  size_t Height;
  OSType PixelFormatType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __int16 v29;
  uint64_t v30;

  v1 = *(int *)(v0 + 252);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152) + *(int *)(v0 + 248);
  sub_249E0D5E0();
  sub_249F1E6A4();
  sub_249F1E65C();
  sub_249DC091C(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  sub_249DC091C(v3, v4, type metadata accessor for ResolvedTextPrompt);
  v6 = *(_QWORD *)(v5 + v1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_249DB20CC(0, *(_QWORD *)(v6 + 16) + 1, 1, v6);
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  if (v8 >= v7 >> 1)
    v6 = sub_249DB20CC(v7 > 1, v8 + 1, 1, v6);
  v9 = *(void **)(v0 + 216);
  v10 = *(int *)(v0 + 252);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 192);
  v28 = *(void **)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 152);
  v15 = v14 + *(int *)(v0 + 248);
  v29 = *(_WORD *)(v0 + 256);
  *(_QWORD *)(v6 + 16) = v8 + 1;
  sub_249D9E308(v30, v6+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v8, type metadata accessor for ResolvedTextPrompt);
  *(_QWORD *)(v15 + v10) = v6;
  sub_249DC05A8(v12, type metadata accessor for ResolvedTextPrompt);
  sub_249DC05A8(v11, (uint64_t (*)(_QWORD))type metadata accessor for TextPrompt);
  v16 = v9;
  Width = CVPixelBufferGetWidth(v16);
  Height = CVPixelBufferGetHeight(v16);
  PixelFormatType = CVPixelBufferGetPixelFormatType(v16);
  type metadata accessor for ResolvedImage.HiddenBufferData();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_249F21920;
  v21 = v15 + *(int *)(v26 + 64);
  sub_249DC0768(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16), *(void **)(v21 + 24));
  *(_QWORD *)v21 = Width;
  *(_QWORD *)(v21 + 8) = Height;
  *(_QWORD *)(v21 + 16) = PixelFormatType;
  *(_QWORD *)(v21 + 24) = v16;
  *(_QWORD *)(v21 + 32) = v20;
  v22 = v14 + *(int *)(v27 + 40);
  v23 = *(void **)v22;
  LOWORD(v20) = *(_WORD *)(v22 + 8);
  v24 = v28;
  sub_249EA0C58(v23, v20);
  *(_QWORD *)v22 = v28;
  *(_WORD *)(v22 + 8) = v29;
  sub_249E9F018();

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9D480()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E9D4EC(uint64_t *a1, uint64_t *a2, uint64_t *a3, char a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v7 + 64) = a4;
  v8 = *a1;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v8;
  *(_BYTE *)(v7 + 65) = *((_BYTE *)a1 + 8);
  v9 = *a2;
  *(_BYTE *)(v7 + 66) = *((_BYTE *)a2 + 8);
  v10 = *a3;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  *(_BYTE *)(v7 + 67) = *((_BYTE *)a3 + 8);
  v11 = *a5;
  *(_BYTE *)(v7 + 68) = *((_BYTE *)a5 + 8);
  v12 = *a6;
  *(_QWORD *)(v7 + 48) = v11;
  *(_QWORD *)(v7 + 56) = v12;
  *(_BYTE *)(v7 + 69) = *((_BYTE *)a6 + 8);
  return swift_task_switch();
}

uint64_t sub_249E9D54C()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  CVPixelBufferRef v3;
  _QWORD *v4;
  char v5;
  CVPixelBufferRef v6;
  char v7;
  NSObject *v8;
  char v9;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t (*v24)(void);
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  OSType v33;
  char v34;
  uint64_t v35;
  char v36;

  sub_249E9E238((uint64_t)&v31);
  if ((v34 & 1) != 0)
  {
    sub_249EA0D6C();
    swift_allocError();
    *v1 = 0xD00000000000001FLL;
    v1[1] = 0x8000000249F38650;
    swift_willThrow();
LABEL_8:
    v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  v2 = *(_BYTE *)(v0 + 65);
  v35 = *(_QWORD *)(v0 + 24);
  v36 = v2;
  v3 = sub_249E468DC(&v31, v33);
  sub_249E9E238((uint64_t)&v31);
  if ((v34 & 1) != 0)
  {
    sub_249EA0D6C();
    swift_allocError();
    *v4 = 0xD000000000000020;
    v4[1] = 0x8000000249F38670;
    swift_willThrow();

    goto LABEL_8;
  }
  v5 = *(_BYTE *)(v0 + 67);
  v35 = *(_QWORD *)(v0 + 40);
  v36 = v5;
  v6 = sub_249E468DC(&v31, 0x4C303038u);
  v7 = *(_BYTE *)(v0 + 68);
  v31 = *(_QWORD *)(v0 + 48);
  v32 = v7;
  v8 = sub_249E9F1D0(&v31, 0xD000000000000020, 0x8000000249F38620);
  v9 = *(_BYTE *)(v0 + 69);
  v31 = *(_QWORD *)(v0 + 56);
  v32 = v9;
  v11 = sub_249E9F1D0(&v31, 0xD000000000000025, 0x8000000249F385F0);
  v30 = *(_BYTE *)(v0 + 67);
  v29 = *(unsigned __int8 *)(v0 + 66);
  v12 = *(void **)(v0 + 24);
  v26 = *(void **)(v0 + 40);
  v27 = *(void **)(v0 + 32);
  v28 = *(unsigned __int8 *)(v0 + 65);
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_BYTE *)(v0 + 64);
  v15 = type metadata accessor for DefinitionSession();
  sub_249E332D0(v3, v6, v14, v8, v11);

  v16 = v13 + *(int *)(v15 + 36);
  v17 = *(_QWORD *)(v16 + 8);
  v25 = *(void **)v16;
  v18 = *(void **)(v16 + 16);
  v19 = *(_QWORD *)(v16 + 24);
  v20 = *(void **)(v16 + 32);
  v21 = v26;
  v22 = v12;
  v23 = v27;
  sub_249DC0824(v25, v17, v18, v19, v20);
  *(_QWORD *)v16 = v12;
  *(_QWORD *)(v16 + 8) = v28;
  *(_QWORD *)(v16 + 16) = v27;
  *(_QWORD *)(v16 + 24) = v29;
  *(_QWORD *)(v16 + 32) = v26;
  *(_BYTE *)(v16 + 40) = v30;
  v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t DefinitionSession.personDescriptionDirective.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + 8);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DefinitionSession.personDescriptionDirective.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v6 = v5 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 8) = a1;
  *(_QWORD *)(v6 + 16) = a2;
  return result;
}

uint64_t DefinitionSession.Error.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_249E9D90C()
{
  return 0xD000000000000014;
}

uint64_t sub_249E9D928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249EA4870(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249E9D950()
{
  sub_249E9DB5C();
  return sub_249F20024();
}

uint64_t sub_249E9D978()
{
  sub_249E9DB5C();
  return sub_249F20030();
}

uint64_t sub_249E9D9A0()
{
  sub_249E9DBA0();
  return sub_249F20024();
}

uint64_t sub_249E9D9C8()
{
  sub_249E9DBA0();
  return sub_249F20030();
}

uint64_t DefinitionSession.Error.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD1F0);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD1F8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v12[1] = v1[1];
  v12[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E9DB5C();
  sub_249F20018();
  sub_249E9DBA0();
  sub_249F1FD3C();
  sub_249F1FD90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_249E9DB5C()
{
  unint64_t result;

  result = qword_2578DD200;
  if (!qword_2578DD200)
  {
    result = MEMORY[0x24BD06528](&unk_249F2F700, &type metadata for DefinitionSession.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD200);
  }
  return result;
}

unint64_t sub_249E9DBA0()
{
  unint64_t result;

  result = qword_2578DD208;
  if (!qword_2578DD208)
  {
    result = MEMORY[0x24BD06528](&unk_249F2F6B0, &type metadata for DefinitionSession.Error.ImageAssignmentErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD208);
  }
  return result;
}

uint64_t DefinitionSession.Error.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD210);
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD218);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E9DB5C();
  v10 = v30;
  sub_249F1FFF4();
  if (v10)
    goto LABEL_7;
  v26 = v3;
  v27 = a1;
  v30 = v7;
  v11 = v6;
  if (*(_QWORD *)(sub_249F1FD24() + 16) != 1)
  {
    v15 = v6;
    v16 = sub_249F1FAF0();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v18 = &type metadata for DefinitionSession.Error;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v19 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  sub_249E9DBA0();
  v12 = v5;
  sub_249F1FC64();
  v13 = v30;
  v14 = v29;
  v21 = sub_249F1FCC4();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v11);
  v24 = (uint64_t)v27;
  v25 = v28;
  *v28 = v21;
  v25[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_249E9DE94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DefinitionSession.Error.init(from:)(a1, a2);
}

uint64_t sub_249E9DEA8(_QWORD *a1)
{
  return DefinitionSession.Error.encode(to:)(a1);
}

uint64_t DefinitionSession.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

Swift::Bool __swiftcall DefinitionSession.imageStyle(_:canBeCombinedWith:)(VisualGeneration::ImageStyle _, Swift::OpaquePointer canBeCombinedWith)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v4 = *(_BYTE *)_;
  v5 = v2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v7 = *(_QWORD *)(v5 + 8);
  v6 = *(_QWORD *)(v5 + 16);
  v8 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = qword_2578FF318;
  v10 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v10)
  {
LABEL_12:
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
    swift_bridgeObjectRelease();
LABEL_16:
    sub_249DCC2FC((uint64_t)&v22, &qword_2578D62F0);
    v20 = 0;
    return v20 & 1;
  }
  v11 = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    v13 = *(_QWORD *)(v9 + 8 * v12 + 32);
    if ((*(uint64_t (**)(uint64_t))(v13 + 88))(v11) == v7 && v14 == v6)
      break;
    v16 = sub_249F1FE2C();
    v11 = swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      goto LABEL_14;
    if (v10 == ++v12)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v17 = swift_bridgeObjectRelease();
  (*(void (**)(__int128 *__return_ptr, uint64_t))(v13 + 112))(&v22, v17);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_16;
  sub_249D9E174(&v22, (uint64_t)v25);
  v18 = v26;
  v19 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  LOBYTE(v22) = v4;
  v20 = (*(uint64_t (**)(__int128 *, void *, uint64_t))(*(_QWORD *)(v19 + 40) + 8))(&v22, canBeCombinedWith._rawValue, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v20 & 1;
}

uint64_t DefinitionSession.directableDemographicCategories.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = qword_2578FF318;
  v8 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v8)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4)
        break;
      v14 = sub_249F1FE2C();
      v9 = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_14;
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(__int128 *__return_ptr, uint64_t))(v11 + 112))(&v19, v15);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v20 + 1))
    {
      sub_249D9E174(&v19, (uint64_t)v22);
      v17 = v23;
      v16 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      (*(void (**)(uint64_t))(*(_QWORD *)(v16 + 16) + 8))(v17);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
  }
  else
  {
LABEL_12:
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
  }
  result = sub_249DCC2FC((uint64_t)&v19, &qword_2578D62F0);
  *a1 = 0;
  return result;
}

uint64_t sub_249E9E238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = qword_2578FF318;
  v8 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v8)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4)
        break;
      v14 = sub_249F1FE2C();
      v9 = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_14;
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(__int128 *__return_ptr, uint64_t))(v11 + 112))(&v19, v15);
    swift_bridgeObjectRelease();
    v16 = *((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v17 = v21;
      __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    }
  }
  else
  {
LABEL_12:
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
  }
  result = sub_249DCC2FC((uint64_t)&v19, &qword_2578D62F0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
  return result;
}

uint64_t sub_249E9E3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = qword_2578FF318;
  v8 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v8)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4)
        break;
      v14 = sub_249F1FE2C();
      v9 = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_14;
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(__int128 *__return_ptr, uint64_t))(v11 + 112))(&v19, v15);
    swift_bridgeObjectRelease();
    v16 = *((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v17 = v21;
      __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      (*(void (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    }
  }
  else
  {
LABEL_12:
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
  }
  result = sub_249DCC2FC((uint64_t)&v19, &qword_2578D62F0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
  return result;
}

uint64_t (*DefinitionSession.generationSeed.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 72);
  LOBYTE(v4) = *(_BYTE *)(v4 + 80);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v4;
  return sub_249E9E5B8;
}

uint64_t sub_249E9E5B8(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16) + *(int *)(result + 12);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 80) = v2;
  return result;
}

uint64_t DefinitionSession.usesPORPipeline.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  if (*(_QWORD *)(v1 + 8) == 0xD000000000000029 && *(_QWORD *)(v1 + 16) == 0x8000000249F34090)
    return 1;
  else
    return sub_249F1FE2C();
}

uint64_t sub_249E9E650@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  if (*(_QWORD *)(v3 + 8) == 0xD000000000000029 && *(_QWORD *)(v3 + 16) == 0x8000000249F34090)
    result = 1;
  else
    result = sub_249F1FE2C();
  *a2 = result & 1;
  return result;
}

void sub_249E9E6DC(_BYTE *a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if ((*a1 & 1) == 0)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v1 = sub_249F1EF38();
    __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
    oslog = sub_249F1EF20();
    v2 = sub_249F1F820();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_249D98000, oslog, v2, "This property is no longer supported -- setting this value to false has no effect", v3, 2u);
      MEMORY[0x24BD06618](v3, -1, -1);
    }

  }
}

void DefinitionSession.usesPORPipeline.setter(char a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if ((a1 & 1) == 0)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v1 = sub_249F1EF38();
    __swift_project_value_buffer(v1, (uint64_t)qword_2578FF3F0);
    oslog = sub_249F1EF20();
    v2 = sub_249F1F820();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_249D98000, oslog, v2, "This property is no longer supported -- setting this value to false has no effect", v3, 2u);
      MEMORY[0x24BD06618](v3, -1, -1);
    }

  }
}

void (*DefinitionSession.usesPORPipeline.modify(_BYTE *a1))(_BYTE *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  if (*(_QWORD *)(v3 + 8) == 0xD000000000000029 && *(_QWORD *)(v3 + 16) == 0x8000000249F34090)
    v4 = 1;
  else
    v4 = sub_249F1FE2C();
  *a1 = v4 & 1;
  return sub_249E9E928;
}

void sub_249E9E928(_BYTE *a1, char a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if ((a2 & 1) != 0)
  {
    if ((*a1 & 1) == 0)
    {
      if (qword_2578D5D78 != -1)
        swift_once();
      v2 = sub_249F1EF38();
      __swift_project_value_buffer(v2, (uint64_t)qword_2578FF3F0);
      oslog = sub_249F1EF20();
      v3 = sub_249F1F820();
      if (!os_log_type_enabled(oslog, v3))
        goto LABEL_13;
      goto LABEL_12;
    }
  }
  else if ((*a1 & 1) == 0)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v4 = sub_249F1EF38();
    __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
    oslog = sub_249F1EF20();
    v3 = sub_249F1F820();
    if (!os_log_type_enabled(oslog, v3))
      goto LABEL_13;
LABEL_12:
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_249D98000, oslog, v3, "This property is no longer supported -- setting this value to false has no effect", v5, 2u);
    MEMORY[0x24BD06618](v5, -1, -1);
LABEL_13:

  }
}

uint64_t (*DefinitionSession.genderDirective.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 8) = v3;
  v4 = v1 + v3;
  v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v4 + v5 + 1);
  *(_DWORD *)(a1 + 12) = v5;
  return sub_249E9EAD4;
}

uint64_t sub_249E9EAD4(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8) + *(int *)(result + 12) + 1) = *(_BYTE *)(result + 16);
  return result;
}

uint64_t (*DefinitionSession.skinToneDirective.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 8) = v3;
  v4 = v1 + v3;
  v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v4 + v5 + 2);
  *(_DWORD *)(a1 + 12) = v5;
  return sub_249E9EB4C;
}

uint64_t sub_249E9EB4C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8) + *(int *)(result + 12) + 2) = *(_BYTE *)(result + 16);
  return result;
}

uint64_t sub_249E9EB68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v4 = v3 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  v5 = *(_QWORD *)(v4 + 16);
  *a2 = *(_QWORD *)(v4 + 8);
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249E9EBB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v5 = v4 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v2;
  return result;
}

uint64_t (*DefinitionSession.personDescriptionDirective.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  *(_DWORD *)(a1 + 28) = v5;
  v6 = v4 + v5;
  v7 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v6 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_249E9EC74;
}

uint64_t sub_249E9EC74(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2] + *((int *)a1 + 6) + *((int *)a1 + 7);
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
  }
  return result;
}

unint64_t DefinitionSession.scribbleStrength.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int *v2;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v2 = (unsigned int *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 36));
  return *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
}

uint64_t DefinitionSession.scribbleStrength.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  v5 = v3 + *(int *)(result + 36);
  *(_DWORD *)v5 = a1;
  *(_BYTE *)(v5 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*DefinitionSession.scribbleStrength.modify(_QWORD *a1))(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1;
  *a1 = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *((_DWORD *)v2 + 4) = v3;
  v4 = v1 + v3;
  v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 36);
  *((_DWORD *)v2++ + 2) = *(_DWORD *)(v4 + v5);
  *((_DWORD *)v2 + 3) = v5;
  *((_BYTE *)v2 + 4) = *(_BYTE *)(v4 + v5 + 4);
  return sub_249E9EDE4;
}

unint64_t DefinitionSession.lcmScale.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int *v2;

  v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  v2 = (unsigned int *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 40));
  return *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
}

uint64_t (*DefinitionSession.lcmScale.modify(_QWORD *a1))(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1;
  *a1 = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *((_DWORD *)v2 + 4) = v3;
  v4 = v1 + v3;
  v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 40);
  *((_DWORD *)v2++ + 2) = *(_DWORD *)(v4 + v5);
  *((_DWORD *)v2 + 3) = v5;
  *((_BYTE *)v2 + 4) = *(_BYTE *)(v4 + v5 + 4);
  return sub_249E9EDE4;
}

uint64_t sub_249E9EEA0(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)result + *(int *)(result + 16) + *(int *)(result + 20);
  v2 = *(_BYTE *)(result + 12);
  *(_DWORD *)v1 = *(_DWORD *)(result + 8);
  *(_BYTE *)(v1 + 4) = v2;
  return result;
}

uint64_t sub_249E9EEC4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  if ((unint64_t)a2 >= 2)
  {
    swift_retain();
    a2(a1);
    sub_249DC0A2C((uint64_t)a2);
  }
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  sub_249E5E03C(v4);
  return swift_endAccess();
}

uint64_t sub_249E9EF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v1 = type metadata accessor for DefinitionSession();
  v2 = *(int *)(v1 + 52);
  if (*(_QWORD *)(v0 + v2))
  {
    v3 = *(_QWORD *)(v0 + v2);
  }
  else
  {
    v4 = *(void **)(v0 + *(int *)(v1 + 44));
    type metadata accessor for GoalValidator();
    v5 = swift_allocObject();
    v3 = v5;
    if (MEMORY[0x24BE7BE90])
    {
      v6 = (void *)objc_opt_self();
      v7 = v4;
      v8 = objc_msgSend(v6, sel_visualGenerationManager);
      *(_QWORD *)(v3 + 16) = v7;
      *(_QWORD *)(v3 + 24) = v8;
      *(_QWORD *)(v0 + v2) = v3;
    }
    else
    {
      *(_QWORD *)(v5 + 16) = v4;
      *(_QWORD *)(v5 + 24) = 0;
      *(_QWORD *)(v0 + v2) = v5;
      v9 = v4;
    }
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_249E9F018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v1 = v0;
  v2 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (int *)type metadata accessor for DefinitionSession();
  v6 = v0 + v5[14];
  sub_249DC091C(v6, (uint64_t)v4, type metadata accessor for GenerationRecipe);
  v7 = v0 + v5[5];
  v9 = *(_QWORD *)v7;
  v8 = *(_QWORD *)(v7 + 8);
  v10 = *(_DWORD *)(v7 + 16);
  v16 = *(_QWORD *)v7;
  v17 = v8;
  v18 = v10;
  swift_bridgeObjectRetain();
  v11 = sub_249E384BC(v4, &v16);
  v12 = v5[15];
  swift_release();
  *(_QWORD *)(v1 + v12) = v11;
  result = sub_249F1EDAC();
  v14 = v5[16];
  if (!*(_QWORD *)(v1 + v14))
  {
    v16 = v9;
    v17 = v8;
    v18 = v10;
    result = sub_249E389CC(v6, &v16);
    *(_QWORD *)(v1 + v14) = result;
    if (result)
      return sub_249F1EDAC();
  }
  return result;
}

NSObject *sub_249E9F178(uint64_t *a1)
{
  return sub_249E9F1D0(a1, 0xD000000000000020, 0x8000000249F38620);
}

NSObject *sub_249E9F1A4(uint64_t *a1)
{
  return sub_249E9F1D0(a1, 0xD000000000000025, 0x8000000249F385F0);
}

NSObject *sub_249E9F1D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a3;
  v41 = a2;
  v4 = v3;
  v6 = type metadata accessor for DefinitionSession();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v38 = *((unsigned __int8 *)a1 + 8);
  v11 = v4 + *(int *)(v7 + 56);
  v13 = *(_QWORD *)(v11 + 8);
  v12 = *(_QWORD *)(v11 + 16);
  v14 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  v15 = qword_2578FF318;
  v16 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v16)
  {
LABEL_12:
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
    swift_bridgeObjectRelease();
LABEL_17:
    sub_249DCC2FC((uint64_t)&v44, &qword_2578D62F0);
    goto LABEL_18;
  }
  v37 = v10;
  v39 = v6;
  v40 = v4;
  v17 = swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    v19 = *(_QWORD *)(v15 + 8 * v18 + 32);
    if ((*(uint64_t (**)(uint64_t))(v19 + 88))(v17) == v13 && v20 == v12)
      break;
    v22 = sub_249F1FE2C();
    v17 = swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_14;
    if (v16 == ++v18)
    {
      swift_bridgeObjectRelease();
      v6 = v39;
      v4 = v40;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v23 = swift_bridgeObjectRelease();
  v4 = v40;
  (*(void (**)(__int128 *__return_ptr, uint64_t))(v19 + 112))(&v44, v23);
  swift_bridgeObjectRelease();
  v6 = v39;
  if (!*((_QWORD *)&v45 + 1))
    goto LABEL_17;
  sub_249D9E174(&v44, (uint64_t)v47);
  v24 = v48;
  v25 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v25 + 48))(&v44, v24, v25);
  if (BYTE4(v45) != 1)
  {
    v42 = v37;
    v43 = v38;
    v27 = sub_249E468DC((uint64_t *)&v44, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return v27;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v4 = v40;
LABEL_18:
  if (qword_2578D5D78 != -1)
    swift_once();
  v26 = sub_249F1EF38();
  __swift_project_value_buffer(v26, (uint64_t)qword_2578FF3F0);
  sub_249DC091C(v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v27 = sub_249F1EF20();
  v28 = sub_249F1F820();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    *(_DWORD *)v29 = 136315138;
    v47[0] = v30;
    v31 = &v9[*(int *)(v6 + 56)];
    v32 = *((_QWORD *)v31 + 1);
    v33 = *((_QWORD *)v31 + 2);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v44 = sub_249E68CA8(v32, v33, v47);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DC05A8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    _os_log_impl(&dword_249D98000, v27, v28, "%s does not support a guidance sketch", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v30, -1, -1);
    MEMORY[0x24BD06618](v29, -1, -1);
  }
  else
  {
    sub_249DC05A8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  }

  sub_249EA0D6C();
  swift_allocError();
  v34 = v50;
  *v35 = v41;
  v35[1] = v34;
  swift_willThrow();
  return v27;
}

uint64_t sub_249E9F5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_249E9F5E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = v0[8];
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DefinitionSession() + 44));
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2578D60C8 + dword_2578D60C8);
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_249E9F660;
  return v5(v0[7], v2);
}

uint64_t sub_249E9F660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 80) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_249E9F6E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v12;

  swift_getErrorValue();
  v1 = sub_249F1FF1C();
  v3 = v2;
  if (qword_2578D5D78 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v5 = sub_249F1EF20();
  v6 = sub_249F1F820();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_249E68CA8(v1, v3, &v12);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v5, v6, "%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 80);
  sub_249EA0D6C();
  swift_allocError();
  *v10 = v1;
  v10[1] = v3;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E9F8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD388);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE64260]), sel_init);
  v11 = *(void **)(a2 + *(int *)(type metadata accessor for DefinitionSession() + 44));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60E0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_249F21760;
  *(_QWORD *)(v12 + 32) = v10;
  aBlock[0] = v12;
  sub_249F1F55C();
  sub_249D9D9F4(0, &qword_2578D60E8);
  v13 = v10;
  v14 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v9, v6);
  *(_QWORD *)(v17 + v16) = v13;
  aBlock[4] = sub_249EA49BC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249E11B88;
  aBlock[3] = &block_descriptor_9;
  v18 = _Block_copy(aBlock);
  v19 = v13;
  swift_release();
  objc_msgSend(v11, sel_performRequests_onPixelBuffer_withOrientation_andIdentifier_completionHandler_, v14, a3, 1, 0, v18);
  _Block_release(v18);

}

uint64_t sub_249E9FAF8(int a1, void *a2, int a3, id a4)
{
  id v5;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;

  if (!a2)
  {
    v7 = objc_msgSend(a4, sel_error);
    if (v7)
    {

      v37 = 0;
      v38 = 0xE000000000000000;
      sub_249F1FA84();
      sub_249F1F460();
      objc_msgSend(a4, sel_error);
      goto LABEL_5;
    }
    v18 = objc_msgSend(a4, sel_gatingResult);
    v19 = objc_msgSend(v18, sel_faces);

    sub_249D9D9F4(0, &qword_2578DD390);
    v20 = sub_249F1F544();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_249F1FBEC();
      swift_bridgeObjectRelease();
      if (v21)
        goto LABEL_13;
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_13:
        v37 = MEMORY[0x24BEE4AF8];
        result = sub_249DB6928(0, v21 & ~(v21 >> 63), 0);
        if (v21 < 0)
        {
          __break(1u);
          return result;
        }
        v22 = 0;
        v23 = v37;
        do
        {
          if ((v20 & 0xC000000000000001) != 0)
            v24 = (id)MEMORY[0x24BD056B8](v22, v20);
          else
            v24 = *(id *)(v20 + 8 * v22 + 32);
          v25 = v24;
          objc_msgSend(v24, sel_normalizedCropRect);
          v27 = v26;
          v29 = v28;
          v31 = v30;
          v33 = v32;

          v37 = v23;
          v35 = *(_QWORD *)(v23 + 16);
          v34 = *(_QWORD *)(v23 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_249DB6928(v34 > 1, v35 + 1, 1);
            v23 = v37;
          }
          ++v22;
          *(_QWORD *)(v23 + 16) = v35 + 1;
          v36 = (_QWORD *)(v23 + 32 * v35);
          v36[4] = v27;
          v36[5] = v29;
          v36[6] = v31;
          v36[7] = v33;
        }
        while (v21 != v22);
        swift_bridgeObjectRelease();
LABEL_24:
        v37 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD388);
        return sub_249F1F5C8();
      }
    }
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_24;
  }
  v37 = 0;
  v38 = 0xE000000000000000;
  sub_249F1FA84();
  sub_249F1F460();
  v5 = a2;
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD398);
  sub_249F1F3AC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  v8 = v37;
  v9 = v38;
  if (qword_2578D5D78 != -1)
    swift_once();
  v10 = sub_249F1EF38();
  __swift_project_value_buffer(v10, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v11 = sub_249F1EF20();
  v12 = sub_249F1F820();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v37 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_249E68CA8(v8, v9, &v37);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v11, v12, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v14, -1, -1);
    MEMORY[0x24BD06618](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_249EA0D6C();
  v15 = swift_allocError();
  *v16 = v8;
  v16[1] = v9;
  v37 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD388);
  return sub_249F1F5BC();
}

id DefinitionSession.drawOnImageConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 36);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(v3 + 40);
  return sub_249EA0B8C(v4, v5, v6, v7, v8);
}

uint64_t sub_249E9FFE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249E392E4(*a1, *a2);
}

uint64_t sub_249E9FFF0()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249EA0084()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249EA00F4()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249EA0184@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249EA48F4();
  *a1 = result;
  return result;
}

void sub_249EA01B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE200000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x746E65696C63;
  if (v2 != 1)
  {
    v5 = 0xD000000000000010;
    v4 = 0x8000000249F33A60;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 25705;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_249EA0204()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x746E65696C63;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_249EA0254@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249EA48F4();
  *a1 = result;
  return result;
}

uint64_t sub_249EA0278()
{
  sub_249EA0BD0();
  return sub_249F20024();
}

uint64_t sub_249EA02A0()
{
  sub_249EA0BD0();
  return sub_249F20030();
}

uint64_t DefinitionSession.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  int v10;
  _BYTE v12[16];
  __int128 v13;
  int v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD220);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249EA0BD0();
  sub_249F20018();
  LOBYTE(v13) = 0;
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D8108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_249F1FDCC();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for DefinitionSession() + 20));
    v10 = *((_DWORD *)v9 + 4);
    v13 = *v9;
    v14 = v10;
    v12[15] = 1;
    sub_249EA0C14();
    sub_249F1FDCC();
    LOBYTE(v13) = 2;
    type metadata accessor for GenerationRecipe(0);
    sub_249D9BBEC(&qword_2578DC0A8, type metadata accessor for GenerationRecipe, (uint64_t)&unk_249F272E0);
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DefinitionSession.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int v49;
  char v50;

  v30 = a2;
  v31 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x24BDAC7A8](v31);
  v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_249F1E8D8();
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578DD238);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for DefinitionSession();
  v8 = (int *)MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)&v10[v8[6]];
  *v11 = 0;
  v11[1] = 0;
  v38 = v11;
  v12 = &v10[v8[7]];
  *(_QWORD *)v12 = 0;
  v43 = v12;
  v12[8] = -1;
  v13 = &v10[v8[8]];
  *(_QWORD *)v13 = 0;
  v40 = v13;
  v13[8] = -1;
  v14 = &v10[v8[9]];
  *(_OWORD *)v14 = xmmword_249F21900;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = 0;
  *((_QWORD *)v14 + 2) = 0;
  v14[40] = 0;
  v15 = &v10[v8[10]];
  *(_QWORD *)v15 = 0;
  v41 = v15;
  *((_WORD *)v15 + 4) = 255;
  v16 = v8[11];
  v17 = objc_msgSend((id)objc_opt_self(), sel_service);
  v42 = v16;
  *(_QWORD *)&v10[v16] = v17;
  v18 = &v10[v7[12]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v44 = v18;
  v45 = v7[13];
  *(_QWORD *)&v10[v45] = 0;
  v46 = v7[15];
  *(_QWORD *)&v10[v46] = 0;
  v39 = v7[16];
  *(_QWORD *)&v10[v39] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249EA0BD0();
  v19 = v6;
  v20 = v47;
  sub_249F1FFF4();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v23 = v42;
    v25 = v40;
    v24 = v41;
    sub_249DC0A2C(*v38);
    sub_249DC0794(*(id *)v43, v43[8]);
    sub_249DC0794(*(id *)v25, v25[8]);
    sub_249DC0824(*(void **)v14, *((_QWORD *)v14 + 1), *((void **)v14 + 2), *((_QWORD *)v14 + 3), *((void **)v14 + 4));
    sub_249EA0C58(*(id *)v24, *((_WORD *)v24 + 4));

    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(v48) = 0;
    sub_249D9BBEC(&qword_2578D8160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v21 = v35;
    v22 = v36;
    sub_249F1FD00();
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v10, v21, v22);
    v50 = 1;
    sub_249EA0C6C();
    sub_249F1FD00();
    v26 = v49;
    v27 = &v10[v7[5]];
    *(_OWORD *)v27 = v48;
    *((_DWORD *)v27 + 4) = v26;
    LOBYTE(v48) = 2;
    sub_249D9BBEC(&qword_2578DC078, type metadata accessor for GenerationRecipe, (uint64_t)&unk_249F272B8);
    v28 = (uint64_t)v32;
    sub_249F1FD00();
    sub_249D9E308(v28, (uint64_t)&v10[v7[14]], type metadata accessor for GenerationRecipe);
    sub_249E9F018();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v37);
    sub_249DC091C((uint64_t)v10, v30, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  }
}

uint64_t (*DefinitionSession.forceInProcessGeneration.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3 + 58);
  *(_DWORD *)(a1 + 8) = v3;
  return sub_249EA09C0;
}

uint64_t sub_249EA09C0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8) + 58) = *(_BYTE *)(result + 12);
  return result;
}

uint64_t sub_249EA09D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_249EA0A10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DefinitionSession.init(from:)(a1, a2);
}

uint64_t sub_249EA0A24(_QWORD *a1)
{
  return DefinitionSession.encode(to:)(a1);
}

uint64_t sub_249EA0A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_249E99424((uint64_t)v5);
  v2 = v6;
  if (v6)
  {
    v3 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    result = sub_249DCC2FC((uint64_t)v5, &qword_2578D62F0);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 20) = 1;
  }
  return result;
}

uint64_t sub_249EA0ACC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  sub_249E99424((uint64_t)v3);
  v0 = v4;
  if (v4)
  {
    v1 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 72))(v0, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_249DCC2FC((uint64_t)v3, &qword_2578D62F0);
  }
  return v0;
}

uint64_t sub_249EA0B4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 56) + 8);
  swift_bridgeObjectRetain();
  return v2;
}

id sub_249EA0B8C(id result, char a2, void *a3, uint64_t a4, void *a5)
{
  void *v5;
  id v6;
  id v7;

  if (a2 != -1)
  {
    v5 = result;
    v6 = a5;
    v7 = v5;
    return a3;
  }
  return result;
}

unint64_t sub_249EA0BD0()
{
  unint64_t result;

  result = qword_2578DD228;
  if (!qword_2578DD228)
  {
    result = MEMORY[0x24BD06528](&unk_249F2F660, &type metadata for DefinitionSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578DD228);
  }
  return result;
}

unint64_t sub_249EA0C14()
{
  unint64_t result;

  result = qword_2578DD230;
  if (!qword_2578DD230)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ClientIdentity, &type metadata for ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_2578DD230);
  }
  return result;
}

void sub_249EA0C58(id a1, char a2)
{
  if (a2 != -1)

}

unint64_t sub_249EA0C6C()
{
  unint64_t result;

  result = qword_2578DD240;
  if (!qword_2578DD240)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ClientIdentity, &type metadata for ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_2578DD240);
  }
  return result;
}

unint64_t sub_249EA0CB0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249EA0CE4();
  a1[2] = sub_249EA0D28();
  result = sub_249EA0D6C();
  a1[3] = result;
  return result;
}

unint64_t sub_249EA0CE4()
{
  unint64_t result;

  result = qword_2578DD248;
  if (!qword_2578DD248)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DefinitionSession.Error, &type metadata for DefinitionSession.Error);
    atomic_store(result, (unint64_t *)&qword_2578DD248);
  }
  return result;
}

unint64_t sub_249EA0D28()
{
  unint64_t result;

  result = qword_2578DD250;
  if (!qword_2578DD250)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DefinitionSession.Error, &type metadata for DefinitionSession.Error);
    atomic_store(result, (unint64_t *)&qword_2578DD250);
  }
  return result;
}

unint64_t sub_249EA0D6C()
{
  unint64_t result;

  result = qword_2578DD258;
  if (!qword_2578DD258)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for DefinitionSession.Error, &type metadata for DefinitionSession.Error);
    atomic_store(result, (unint64_t *)&qword_2578DD258);
  }
  return result;
}

uint64_t sub_249EA0DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = type metadata accessor for DefinitionSession();
  v5 = a1 + *(int *)(result + 56);
  v6 = *(_QWORD *)(v5 + 72);
  LOBYTE(v5) = *(_BYTE *)(v5 + 80);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_249EA0DF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for DefinitionSession();
  v6 = a2 + *(int *)(result + 56);
  *(_QWORD *)(v6 + 72) = v3;
  *(_BYTE *)(v6 + 80) = v4;
  return result;
}

uint64_t sub_249EA0E40@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *a2 = *(_BYTE *)(v3 + *(int *)(result + 44) + 1);
  return result;
}

uint64_t sub_249EA0E88(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *(_BYTE *)(v3 + *(int *)(result + 44) + 1) = v2;
  return result;
}

uint64_t sub_249EA0ECC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *a2 = *(_BYTE *)(v3 + *(int *)(result + 44) + 2);
  return result;
}

uint64_t sub_249EA0F14(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  *(_BYTE *)(v3 + *(int *)(result + 44) + 2) = v2;
  return result;
}

uint64_t sub_249EA0F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int *v5;
  int v6;

  v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  v5 = (int *)(v3 + *(int *)(result + 36));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 4);
  *(_DWORD *)a2 = v6;
  *(_BYTE *)(a2 + 4) = (_BYTE)v5;
  return result;
}

uint64_t sub_249EA0FB0(int *a1, uint64_t a2)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 4);
  v4 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  v6 = v4 + *(int *)(result + 36);
  *(_DWORD *)v6 = v2;
  *(_BYTE *)(v6 + 4) = v3;
  return result;
}

uint64_t sub_249EA1004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int *v5;
  int v6;

  v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  v5 = (int *)(v3 + *(int *)(result + 40));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 4);
  *(_DWORD *)a2 = v6;
  *(_BYTE *)(a2 + 4) = (_BYTE)v5;
  return result;
}

uint64_t sub_249EA1054(int *a1, uint64_t a2)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 4);
  v4 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  result = type metadata accessor for GenerationRecipe(0);
  v6 = v4 + *(int *)(result + 40);
  *(_DWORD *)v6 = v2;
  *(_BYTE *)(v6 + 4) = v3;
  return result;
}

uint64_t sub_249EA10A8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for DefinitionSession();
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 56) + 58);
  return result;
}

uint64_t sub_249EA10E0(char *a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  result = type metadata accessor for DefinitionSession();
  *(_BYTE *)(a2 + *(int *)(result + 56) + 58) = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DefinitionSession(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  void *v36;
  void *v37;
  char v38;
  void *v39;
  char v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int16 v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  int *v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, int *);
  id v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  uint64_t v91;
  id v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t v98;
  id v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void *v104;
  uint64_t v105;
  id v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void *v111;
  uint64_t v112;
  id v113;
  __int128 v114;
  uint64_t v115;
  char *v116;
  char *v117;
  void *v118;
  uint64_t v119;
  id v120;
  __int128 v121;
  _OWORD *v122;
  _OWORD *v123;
  void *v124;
  uint64_t v125;
  id v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void *v145;
  void *v146;
  uint64_t v147;
  char *__dst;
  int *v149;
  _QWORD *v150;
  _QWORD *v151;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    v18 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_249F1E8D8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_DWORD *)v10 + 4) = *((_DWORD *)v11 + 4);
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    if (v15)
    {
      v16 = *((_QWORD *)v14 + 1);
      *v13 = v15;
      v13[1] = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = v21[8];
    if (v22 == 255)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
    }
    else
    {
      v23 = *(void **)v21;
      *(_QWORD *)v20 = v23;
      v20[8] = v22;
      v24 = v23;
    }
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = v27[8];
    if (v28 == 255)
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
    }
    else
    {
      v29 = *(void **)v27;
      *(_QWORD *)v26 = v29;
      v26[8] = v28;
      v30 = v29;
    }
    v31 = a3[9];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = v33[8];
    if (v34 == 255)
    {
      v35 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v35;
      *(_OWORD *)(v32 + 25) = *(_OWORD *)(v33 + 25);
    }
    else
    {
      v36 = *(void **)v33;
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v34;
      v37 = (void *)*((_QWORD *)v33 + 2);
      v38 = v33[24];
      *((_QWORD *)v32 + 2) = v37;
      v32[24] = v38;
      v39 = (void *)*((_QWORD *)v33 + 4);
      v40 = v33[40];
      *((_QWORD *)v32 + 4) = v39;
      v32[40] = v40;
      v41 = v36;
      v42 = v37;
      v43 = v39;
    }
    v44 = a3[10];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = *((_WORD *)v46 + 4);
    if (v46[8] == -1)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_WORD *)v45 + 4) = *((_WORD *)v46 + 4);
    }
    else
    {
      v48 = *(void **)v46;
      *(_QWORD *)v45 = v48;
      *((_WORD *)v45 + 4) = v47;
      v49 = v48;
    }
    v50 = a3[11];
    v51 = a3[12];
    v146 = *(void **)((char *)a2 + v50);
    *(_QWORD *)((char *)a1 + v50) = v146;
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    *v52 = *v53;
    v145 = (void *)*((_QWORD *)v53 + 1);
    *((_QWORD *)v52 + 1) = v145;
    v54 = a3[14];
    v149 = a3;
    v150 = a2;
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    v151 = a1;
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    *v55 = *((_BYTE *)a2 + v54);
    v57 = *(_QWORD *)((char *)a2 + v54 + 16);
    *((_QWORD *)v55 + 1) = *(_QWORD *)((char *)a2 + v54 + 8);
    *((_QWORD *)v55 + 2) = v57;
    *(_OWORD *)(v55 + 24) = *(_OWORD *)((char *)a2 + v54 + 24);
    v55[40] = *((_BYTE *)a2 + v54 + 40);
    *((_QWORD *)v55 + 6) = *(_QWORD *)((char *)a2 + v54 + 48);
    *((_DWORD *)v55 + 14) = *(_DWORD *)((char *)a2 + v54 + 56);
    v55[60] = *((_BYTE *)a2 + v54 + 60);
    v55[61] = *((_BYTE *)a2 + v54 + 61);
    v55[62] = *((_BYTE *)a2 + v54 + 62);
    v59 = *(_QWORD *)((char *)a2 + v54 + 64);
    v58 = *(_QWORD *)((char *)a2 + v54 + 72);
    v55[80] = *((_BYTE *)a2 + v54 + 80);
    *((_QWORD *)v55 + 8) = v59;
    *((_QWORD *)v55 + 9) = v58;
    v60 = (int *)type metadata accessor for GenerationRecipe(0);
    v61 = v60[8];
    __dst = &v55[v61];
    v62 = &v56[v61];
    v63 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v64 = *((_QWORD *)v63 - 1);
    v65 = *(unsigned int (**)(char *, uint64_t, int *))(v64 + 48);
    v66 = v146;
    v67 = v145;
    swift_retain();
    swift_bridgeObjectRetain();
    v68 = v62;
    swift_bridgeObjectRetain();
    if (v65(v62, 1, v63))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      v147 = v64;
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
      v71(__dst, v62, v70);
      v71(&__dst[v63[5]], &v62[v63[5]], v70);
      v72 = v63[6];
      v73 = (uint64_t *)&__dst[v72];
      v74 = (uint64_t *)&v62[v72];
      if (*(_QWORD *)&v68[v72 + 16])
      {
        v75 = *v74;
        v76 = v74[1];
        sub_249DC3928(*v74, v76);
        *v73 = v75;
        v73[1] = v76;
        v73[2] = v74[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v73 = *(_OWORD *)v74;
        v73[2] = v74[2];
      }
      __dst[v63[7]] = v68[v63[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v147 + 56))(__dst, 0, 1, v63);
    }
    v77 = v60[9];
    v78 = &v55[v77];
    v79 = &v56[v77];
    *(_DWORD *)v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    v80 = v60[10];
    v81 = &v55[v80];
    v82 = &v56[v80];
    v81[4] = v82[4];
    *(_DWORD *)v81 = *(_DWORD *)v82;
    v83 = v60[11];
    v84 = &v55[v83];
    v85 = &v56[v83];
    *(_WORD *)v84 = *(_WORD *)v85;
    v84[2] = v85[2];
    v86 = *((_QWORD *)v85 + 2);
    *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
    *((_QWORD *)v84 + 2) = v86;
    *(_QWORD *)&v55[v60[12]] = *(_QWORD *)&v56[v60[12]];
    *(_QWORD *)&v55[v60[13]] = *(_QWORD *)&v56[v60[13]];
    v87 = v60[14];
    v88 = &v55[v87];
    v89 = &v56[v87];
    v90 = *(void **)&v56[v87 + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v90)
    {
      *(_OWORD *)v88 = *(_OWORD *)v89;
      *((_DWORD *)v88 + 4) = *((_DWORD *)v89 + 4);
      v91 = *((_QWORD *)v89 + 4);
      *((_QWORD *)v88 + 3) = v90;
      *((_QWORD *)v88 + 4) = v91;
      v92 = v90;
      swift_retain();
    }
    else
    {
      v93 = *((_OWORD *)v89 + 1);
      *(_OWORD *)v88 = *(_OWORD *)v89;
      *((_OWORD *)v88 + 1) = v93;
      *((_QWORD *)v88 + 4) = *((_QWORD *)v89 + 4);
    }
    v94 = v60[15];
    v95 = &v55[v94];
    v96 = &v56[v94];
    v97 = (void *)*((_QWORD *)v96 + 3);
    if (v97)
    {
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_DWORD *)v95 + 4) = *((_DWORD *)v96 + 4);
      v98 = *((_QWORD *)v96 + 4);
      *((_QWORD *)v95 + 3) = v97;
      *((_QWORD *)v95 + 4) = v98;
      v99 = v97;
      swift_retain();
    }
    else
    {
      v100 = *((_OWORD *)v96 + 1);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_OWORD *)v95 + 1) = v100;
      *((_QWORD *)v95 + 4) = *((_QWORD *)v96 + 4);
    }
    v101 = v60[16];
    v102 = &v55[v101];
    v103 = &v56[v101];
    v104 = (void *)*((_QWORD *)v103 + 3);
    if (v104)
    {
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_DWORD *)v102 + 4) = *((_DWORD *)v103 + 4);
      v105 = *((_QWORD *)v103 + 4);
      *((_QWORD *)v102 + 3) = v104;
      *((_QWORD *)v102 + 4) = v105;
      v106 = v104;
      swift_retain();
    }
    else
    {
      v107 = *((_OWORD *)v103 + 1);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_OWORD *)v102 + 1) = v107;
      *((_QWORD *)v102 + 4) = *((_QWORD *)v103 + 4);
    }
    v108 = v60[17];
    v109 = &v55[v108];
    v110 = &v56[v108];
    v111 = (void *)*((_QWORD *)v110 + 3);
    if (v111)
    {
      *(_OWORD *)v109 = *(_OWORD *)v110;
      *((_DWORD *)v109 + 4) = *((_DWORD *)v110 + 4);
      v112 = *((_QWORD *)v110 + 4);
      *((_QWORD *)v109 + 3) = v111;
      *((_QWORD *)v109 + 4) = v112;
      v113 = v111;
      swift_retain();
    }
    else
    {
      v114 = *((_OWORD *)v110 + 1);
      *(_OWORD *)v109 = *(_OWORD *)v110;
      *((_OWORD *)v109 + 1) = v114;
      *((_QWORD *)v109 + 4) = *((_QWORD *)v110 + 4);
    }
    v115 = v60[18];
    v116 = &v55[v115];
    v117 = &v56[v115];
    v118 = *(void **)&v56[v115 + 24];
    if (v118)
    {
      *(_OWORD *)v116 = *(_OWORD *)v117;
      *((_DWORD *)v116 + 4) = *((_DWORD *)v117 + 4);
      v119 = *((_QWORD *)v117 + 4);
      *((_QWORD *)v116 + 3) = v118;
      *((_QWORD *)v116 + 4) = v119;
      v120 = v118;
      swift_retain();
    }
    else
    {
      v121 = *((_OWORD *)v117 + 1);
      *(_OWORD *)v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v121;
      *((_QWORD *)v116 + 4) = *((_QWORD *)v117 + 4);
    }
    v122 = v116 + 40;
    v123 = v117 + 40;
    v124 = (void *)*((_QWORD *)v117 + 8);
    if (v124)
    {
      *v122 = *v123;
      *((_DWORD *)v116 + 14) = *((_DWORD *)v117 + 14);
      v125 = *((_QWORD *)v117 + 9);
      *((_QWORD *)v116 + 8) = v124;
      *((_QWORD *)v116 + 9) = v125;
      v126 = v124;
      swift_retain();
    }
    else
    {
      v127 = *(_OWORD *)(v117 + 56);
      *v122 = *v123;
      *(_OWORD *)(v116 + 56) = v127;
      *((_QWORD *)v116 + 9) = *((_QWORD *)v117 + 9);
    }
    v116[80] = v117[80];
    *(_QWORD *)&v55[v60[19]] = *(_QWORD *)&v56[v60[19]];
    v128 = v60[20];
    v129 = &v55[v128];
    v130 = &v56[v128];
    v131 = *(void **)&v56[v128 + 24];
    swift_bridgeObjectRetain();
    if (v131)
    {
      *(_OWORD *)v129 = *(_OWORD *)v130;
      *((_DWORD *)v129 + 4) = *((_DWORD *)v130 + 4);
      v132 = *((_QWORD *)v130 + 4);
      v133 = *((_QWORD *)v130 + 5);
      *((_QWORD *)v129 + 3) = v131;
      *((_QWORD *)v129 + 4) = v132;
      v134 = *((_QWORD *)v130 + 6);
      v135 = *((_QWORD *)v130 + 7);
      *((_QWORD *)v129 + 5) = v133;
      *((_QWORD *)v129 + 6) = v134;
      *((_QWORD *)v129 + 7) = v135;
      v136 = v131;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v137 = *((_OWORD *)v130 + 1);
      *(_OWORD *)v129 = *(_OWORD *)v130;
      *((_OWORD *)v129 + 1) = v137;
      v138 = *((_OWORD *)v130 + 3);
      *((_OWORD *)v129 + 2) = *((_OWORD *)v130 + 2);
      *((_OWORD *)v129 + 3) = v138;
    }
    v139 = v60[21];
    v140 = &v55[v139];
    v141 = &v56[v139];
    v142 = *((_QWORD *)v141 + 1);
    *(_QWORD *)v140 = *(_QWORD *)v141;
    *((_QWORD *)v140 + 1) = v142;
    *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);
    *(_QWORD *)&v55[v60[22]] = *(_QWORD *)&v56[v60[22]];
    v55[v60[23]] = v56[v60[23]];
    v143 = v149[16];
    v18 = v151;
    *(_QWORD *)((char *)v151 + v149[15]) = *(_QWORD *)((char *)v150 + v149[15]);
    *(_QWORD *)((char *)v151 + v143) = *(_QWORD *)((char *)v150 + v143);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v18;
}

uint64_t destroy for DefinitionSession(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;

  v4 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[6]))
    swift_release();
  v5 = a1 + a2[7];
  if (*(unsigned __int8 *)(v5 + 8) != 255)

  v6 = a1 + a2[8];
  if (*(unsigned __int8 *)(v6 + 8) != 255)

  v7 = a1 + a2[9];
  if (*(_BYTE *)(v7 + 8) != 0xFF)
  {

  }
  v8 = a1 + a2[10];
  if (*(unsigned __int8 *)(v8 + 8) != 0xFF)

  swift_release();
  v9 = a1 + a2[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for GenerationRecipe(0);
  v11 = v9 + v10[8];
  v12 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v14(v11 + *(int *)(v12 + 20), v13);
    v15 = (uint64_t *)(v11 + *(int *)(v12 + 24));
    if (v15[2])
    {
      sub_249DC3C24(*v15, v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(void **)(v9 + v10[14] + 24);
  if (v16)
  {

    swift_release();
  }
  v17 = *(void **)(v9 + v10[15] + 24);
  if (v17)
  {

    swift_release();
  }
  v18 = *(void **)(v9 + v10[16] + 24);
  if (v18)
  {

    swift_release();
  }
  v19 = *(void **)(v9 + v10[17] + 24);
  if (v19)
  {

    swift_release();
  }
  v20 = v9 + v10[18];
  v21 = *(void **)(v20 + 24);
  if (v21)
  {

    swift_release();
  }
  v22 = *(void **)(v20 + 64);
  if (v22)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  v23 = *(void **)(v9 + v10[20] + 24);
  if (v23)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DefinitionSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  void *v33;
  void *v34;
  char v35;
  void *v36;
  char v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _BYTE *v59;
  int *v60;
  uint64_t v61;
  unsigned int (*v62)(_BYTE *, uint64_t, int *);
  id v63;
  id v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, _BYTE *, uint64_t);
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  id v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  id v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  id v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  id v117;
  __int128 v118;
  _OWORD *v119;
  _OWORD *v120;
  void *v121;
  uint64_t v122;
  id v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  void *v142;
  void *v143;
  uint64_t v144;
  char *__dst;
  int *v146;
  uint64_t v147;
  uint64_t v148;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
  v12 = (_QWORD *)(a1 + v8);
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    v15 = *(_QWORD *)(v13 + 8);
    *v12 = v14;
    v12[1] = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 == 255)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  }
  else
  {
    v20 = *(void **)v18;
    *(_QWORD *)v17 = v20;
    *(_BYTE *)(v17 + 8) = v19;
    v21 = v20;
  }
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(unsigned __int8 *)(v24 + 8);
  if (v25 == 255)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  }
  else
  {
    v26 = *(void **)v24;
    *(_QWORD *)v23 = v26;
    *(_BYTE *)(v23 + 8) = v25;
    v27 = v26;
  }
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(unsigned __int8 *)(v30 + 8);
  if (v31 == 255)
  {
    v32 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v32;
    *(_OWORD *)(v29 + 25) = *(_OWORD *)(v30 + 25);
  }
  else
  {
    v33 = *(void **)v30;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_BYTE *)(v29 + 8) = v31;
    v34 = *(void **)(v30 + 16);
    v35 = *(_BYTE *)(v30 + 24);
    *(_QWORD *)(v29 + 16) = v34;
    *(_BYTE *)(v29 + 24) = v35;
    v36 = *(void **)(v30 + 32);
    v37 = *(_BYTE *)(v30 + 40);
    *(_QWORD *)(v29 + 32) = v36;
    *(_BYTE *)(v29 + 40) = v37;
    v38 = v33;
    v39 = v34;
    v40 = v36;
  }
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = *(_WORD *)(v43 + 8);
  if (*(_BYTE *)(v43 + 8) == 0xFF)
  {
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_WORD *)(v42 + 8) = *(_WORD *)(v43 + 8);
  }
  else
  {
    v45 = *(void **)v43;
    *(_QWORD *)v42 = v45;
    *(_WORD *)(v42 + 8) = v44;
    v46 = v45;
  }
  v47 = a3[11];
  v48 = a3[12];
  v143 = *(void **)(a2 + v47);
  *(_QWORD *)(a1 + v47) = v143;
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_BYTE *)v49 = *(_BYTE *)v50;
  v142 = *(void **)(v50 + 8);
  *(_QWORD *)(v49 + 8) = v142;
  v51 = a3[14];
  v146 = a3;
  v147 = a2;
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v148 = a1;
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_BYTE *)v52 = *(_BYTE *)(a2 + v51);
  v54 = *(_QWORD *)(a2 + v51 + 16);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(a2 + v51 + 8);
  *(_QWORD *)(v52 + 16) = v54;
  *(_OWORD *)(v52 + 24) = *(_OWORD *)(a2 + v51 + 24);
  *(_BYTE *)(v52 + 40) = *(_BYTE *)(a2 + v51 + 40);
  *(_QWORD *)(v52 + 48) = *(_QWORD *)(a2 + v51 + 48);
  *(_DWORD *)(v52 + 56) = *(_DWORD *)(a2 + v51 + 56);
  *(_BYTE *)(v52 + 60) = *(_BYTE *)(a2 + v51 + 60);
  *(_BYTE *)(v52 + 61) = *(_BYTE *)(a2 + v51 + 61);
  *(_BYTE *)(v52 + 62) = *(_BYTE *)(a2 + v51 + 62);
  v56 = *(_QWORD *)(a2 + v51 + 64);
  v55 = *(_QWORD *)(a2 + v51 + 72);
  *(_BYTE *)(v52 + 80) = *(_BYTE *)(a2 + v51 + 80);
  *(_QWORD *)(v52 + 64) = v56;
  *(_QWORD *)(v52 + 72) = v55;
  v57 = (int *)type metadata accessor for GenerationRecipe(0);
  v58 = v57[8];
  __dst = (char *)(v52 + v58);
  v59 = (_BYTE *)(v53 + v58);
  v60 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v61 = *((_QWORD *)v60 - 1);
  v62 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v61 + 48);
  v63 = v143;
  v64 = v142;
  swift_retain();
  swift_bridgeObjectRetain();
  v65 = v59;
  swift_bridgeObjectRetain();
  if (v62(v59, 1, v60))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v144 = v61;
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v68 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
    v68(__dst, v65, v67);
    v68(&__dst[v60[5]], &v65[v60[5]], v67);
    v69 = v60[6];
    v70 = (uint64_t *)&__dst[v69];
    v71 = (uint64_t *)&v65[v69];
    if (*(_QWORD *)&v65[v69 + 16])
    {
      v72 = *v71;
      v73 = v71[1];
      sub_249DC3928(*v71, v73);
      *v70 = v72;
      v70[1] = v73;
      v70[2] = v71[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v70 = *(_OWORD *)v71;
      v70[2] = v71[2];
    }
    __dst[v60[7]] = v65[v60[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v144 + 56))(__dst, 0, 1, v60);
  }
  v74 = v57[9];
  v75 = v52 + v74;
  v76 = v53 + v74;
  *(_DWORD *)v75 = *(_DWORD *)v76;
  *(_BYTE *)(v75 + 4) = *(_BYTE *)(v76 + 4);
  v77 = v57[10];
  v78 = v52 + v77;
  v79 = v53 + v77;
  *(_BYTE *)(v78 + 4) = *(_BYTE *)(v79 + 4);
  *(_DWORD *)v78 = *(_DWORD *)v79;
  v80 = v57[11];
  v81 = v52 + v80;
  v82 = v53 + v80;
  *(_WORD *)v81 = *(_WORD *)v82;
  *(_BYTE *)(v81 + 2) = *(_BYTE *)(v82 + 2);
  v83 = *(_QWORD *)(v82 + 16);
  *(_QWORD *)(v81 + 8) = *(_QWORD *)(v82 + 8);
  *(_QWORD *)(v81 + 16) = v83;
  *(_QWORD *)(v52 + v57[12]) = *(_QWORD *)(v53 + v57[12]);
  *(_QWORD *)(v52 + v57[13]) = *(_QWORD *)(v53 + v57[13]);
  v84 = v57[14];
  v85 = v52 + v84;
  v86 = v53 + v84;
  v87 = *(void **)(v53 + v84 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v87)
  {
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *(_DWORD *)(v85 + 16) = *(_DWORD *)(v86 + 16);
    v88 = *(_QWORD *)(v86 + 32);
    *(_QWORD *)(v85 + 24) = v87;
    *(_QWORD *)(v85 + 32) = v88;
    v89 = v87;
    swift_retain();
  }
  else
  {
    v90 = *(_OWORD *)(v86 + 16);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 16) = v90;
    *(_QWORD *)(v85 + 32) = *(_QWORD *)(v86 + 32);
  }
  v91 = v57[15];
  v92 = v52 + v91;
  v93 = v53 + v91;
  v94 = *(void **)(v93 + 24);
  if (v94)
  {
    *(_OWORD *)v92 = *(_OWORD *)v93;
    *(_DWORD *)(v92 + 16) = *(_DWORD *)(v93 + 16);
    v95 = *(_QWORD *)(v93 + 32);
    *(_QWORD *)(v92 + 24) = v94;
    *(_QWORD *)(v92 + 32) = v95;
    v96 = v94;
    swift_retain();
  }
  else
  {
    v97 = *(_OWORD *)(v93 + 16);
    *(_OWORD *)v92 = *(_OWORD *)v93;
    *(_OWORD *)(v92 + 16) = v97;
    *(_QWORD *)(v92 + 32) = *(_QWORD *)(v93 + 32);
  }
  v98 = v57[16];
  v99 = v52 + v98;
  v100 = v53 + v98;
  v101 = *(void **)(v100 + 24);
  if (v101)
  {
    *(_OWORD *)v99 = *(_OWORD *)v100;
    *(_DWORD *)(v99 + 16) = *(_DWORD *)(v100 + 16);
    v102 = *(_QWORD *)(v100 + 32);
    *(_QWORD *)(v99 + 24) = v101;
    *(_QWORD *)(v99 + 32) = v102;
    v103 = v101;
    swift_retain();
  }
  else
  {
    v104 = *(_OWORD *)(v100 + 16);
    *(_OWORD *)v99 = *(_OWORD *)v100;
    *(_OWORD *)(v99 + 16) = v104;
    *(_QWORD *)(v99 + 32) = *(_QWORD *)(v100 + 32);
  }
  v105 = v57[17];
  v106 = v52 + v105;
  v107 = v53 + v105;
  v108 = *(void **)(v107 + 24);
  if (v108)
  {
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *(_DWORD *)(v106 + 16) = *(_DWORD *)(v107 + 16);
    v109 = *(_QWORD *)(v107 + 32);
    *(_QWORD *)(v106 + 24) = v108;
    *(_QWORD *)(v106 + 32) = v109;
    v110 = v108;
    swift_retain();
  }
  else
  {
    v111 = *(_OWORD *)(v107 + 16);
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *(_OWORD *)(v106 + 16) = v111;
    *(_QWORD *)(v106 + 32) = *(_QWORD *)(v107 + 32);
  }
  v112 = v57[18];
  v113 = v52 + v112;
  v114 = v53 + v112;
  v115 = *(void **)(v53 + v112 + 24);
  if (v115)
  {
    *(_OWORD *)v113 = *(_OWORD *)v114;
    *(_DWORD *)(v113 + 16) = *(_DWORD *)(v114 + 16);
    v116 = *(_QWORD *)(v114 + 32);
    *(_QWORD *)(v113 + 24) = v115;
    *(_QWORD *)(v113 + 32) = v116;
    v117 = v115;
    swift_retain();
  }
  else
  {
    v118 = *(_OWORD *)(v114 + 16);
    *(_OWORD *)v113 = *(_OWORD *)v114;
    *(_OWORD *)(v113 + 16) = v118;
    *(_QWORD *)(v113 + 32) = *(_QWORD *)(v114 + 32);
  }
  v119 = (_OWORD *)(v113 + 40);
  v120 = (_OWORD *)(v114 + 40);
  v121 = *(void **)(v114 + 64);
  if (v121)
  {
    *v119 = *v120;
    *(_DWORD *)(v113 + 56) = *(_DWORD *)(v114 + 56);
    v122 = *(_QWORD *)(v114 + 72);
    *(_QWORD *)(v113 + 64) = v121;
    *(_QWORD *)(v113 + 72) = v122;
    v123 = v121;
    swift_retain();
  }
  else
  {
    v124 = *(_OWORD *)(v114 + 56);
    *v119 = *v120;
    *(_OWORD *)(v113 + 56) = v124;
    *(_QWORD *)(v113 + 72) = *(_QWORD *)(v114 + 72);
  }
  *(_BYTE *)(v113 + 80) = *(_BYTE *)(v114 + 80);
  *(_QWORD *)(v52 + v57[19]) = *(_QWORD *)(v53 + v57[19]);
  v125 = v57[20];
  v126 = v52 + v125;
  v127 = v53 + v125;
  v128 = *(void **)(v53 + v125 + 24);
  swift_bridgeObjectRetain();
  if (v128)
  {
    *(_OWORD *)v126 = *(_OWORD *)v127;
    *(_DWORD *)(v126 + 16) = *(_DWORD *)(v127 + 16);
    v129 = *(_QWORD *)(v127 + 32);
    v130 = *(_QWORD *)(v127 + 40);
    *(_QWORD *)(v126 + 24) = v128;
    *(_QWORD *)(v126 + 32) = v129;
    v131 = *(_QWORD *)(v127 + 48);
    v132 = *(_QWORD *)(v127 + 56);
    *(_QWORD *)(v126 + 40) = v130;
    *(_QWORD *)(v126 + 48) = v131;
    *(_QWORD *)(v126 + 56) = v132;
    v133 = v128;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v134 = *(_OWORD *)(v127 + 16);
    *(_OWORD *)v126 = *(_OWORD *)v127;
    *(_OWORD *)(v126 + 16) = v134;
    v135 = *(_OWORD *)(v127 + 48);
    *(_OWORD *)(v126 + 32) = *(_OWORD *)(v127 + 32);
    *(_OWORD *)(v126 + 48) = v135;
  }
  v136 = v57[21];
  v137 = (_QWORD *)(v52 + v136);
  v138 = (_QWORD *)(v53 + v136);
  v139 = v138[1];
  *v137 = *v138;
  v137[1] = v139;
  v137[2] = v138[2];
  *(_QWORD *)(v52 + v57[22]) = *(_QWORD *)(v53 + v57[22]);
  *(_BYTE *)(v52 + v57[23]) = *(_BYTE *)(v53 + v57[23]);
  v140 = v146[16];
  *(_QWORD *)(v148 + v146[15]) = *(_QWORD *)(v147 + v146[15]);
  *(_QWORD *)(v148 + v140) = *(_QWORD *)(v147 + v140);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v148;
}

uint64_t assignWithCopy for DefinitionSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  char v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  int v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  void *v50;
  void *v51;
  char v52;
  void *v53;
  char v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  char v62;
  void *v63;
  id v64;
  void *v65;
  char v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  int v72;
  __int16 v73;
  uint64_t v74;
  __int16 v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  int *v100;
  uint64_t v101;
  uint64_t (*v102)(_BYTE *, uint64_t, int *);
  int v103;
  int v104;
  uint64_t v105;
  void (*v106)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v114;
  uint64_t *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  __int128 v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  int *v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 *v141;
  void *v142;
  uint64_t v143;
  void *v144;
  id v145;
  __int128 v146;
  void *v147;
  id v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  __int128 *v154;
  void *v155;
  uint64_t v156;
  void *v157;
  id v158;
  __int128 v159;
  void *v160;
  id v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  __int128 *v167;
  void *v168;
  uint64_t v169;
  void *v170;
  id v171;
  __int128 v172;
  void *v173;
  id v174;
  uint64_t v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  __int128 *v180;
  void *v181;
  uint64_t v182;
  void *v183;
  id v184;
  __int128 v185;
  void *v186;
  id v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  __int128 *v193;
  void *v194;
  uint64_t v195;
  void *v196;
  id v197;
  __int128 v198;
  void *v199;
  id v200;
  uint64_t v201;
  __int128 v202;
  __int128 v203;
  _OWORD *v204;
  _OWORD *v205;
  void *v206;
  uint64_t v207;
  void *v208;
  id v209;
  __int128 v210;
  void *v211;
  id v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  uint64_t v216;
  uint64_t v217;
  __int128 *v218;
  void *v219;
  uint64_t v220;
  void *v221;
  id v222;
  __int128 v223;
  void *v224;
  id v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int *v239;
  uint64_t v240;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a1 + v10);
  v14 = *(_QWORD *)(a2 + v10);
  if (v13)
  {
    if (v14)
    {
      v15 = *(_QWORD *)(v12 + 8);
      *v11 = v14;
      v11[1] = v15;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v14)
  {
    v16 = *(_QWORD *)(v12 + 8);
    *v11 = v14;
    v11[1] = v16;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
LABEL_8:
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(unsigned __int8 *)(a1 + v17 + 8);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v20 == 255)
  {
    if (v21 == 255)
    {
      v28 = *(void **)v19;
      *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
      *(_QWORD *)v18 = v28;
    }
    else
    {
      v25 = *(void **)v19;
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_BYTE *)(v18 + 8) = v21;
      v26 = v25;
    }
  }
  else if (v21 == 255)
  {
    sub_249DC27C8((id *)v18);
    v27 = *(_BYTE *)(v19 + 8);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_BYTE *)(v18 + 8) = v27;
  }
  else
  {
    v22 = *(void **)v19;
    v23 = *(id *)v18;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_BYTE *)(v18 + 8) = v21;
    v24 = v22;

  }
  v29 = a3[8];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(unsigned __int8 *)(a1 + v29 + 8);
  v33 = *(unsigned __int8 *)(a2 + v29 + 8);
  if (v32 == 255)
  {
    if (v33 == 255)
    {
      v40 = *(void **)v31;
      *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
      *(_QWORD *)v30 = v40;
    }
    else
    {
      v37 = *(void **)v31;
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = v33;
      v38 = v37;
    }
  }
  else if (v33 == 255)
  {
    sub_249DC27C8((id *)v30);
    v39 = *(_BYTE *)(v31 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_BYTE *)(v30 + 8) = v39;
  }
  else
  {
    v34 = *(void **)v31;
    v35 = *(id *)v30;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_BYTE *)(v30 + 8) = v33;
    v36 = v34;

  }
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = (__int128 *)(a2 + v41);
  v44 = ~*(_DWORD *)(a1 + v41 + 8);
  v45 = *(unsigned __int8 *)(a2 + v41 + 8);
  if ((_BYTE)v44)
  {
    if (v45 == 255)
    {
      sub_249EA3050((id *)v42);
      v48 = *(__int128 *)((char *)v43 + 25);
      v49 = v43[1];
      *(_OWORD *)v42 = *v43;
      *(_OWORD *)(v42 + 16) = v49;
      *(_OWORD *)(v42 + 25) = v48;
    }
    else
    {
      v58 = *(void **)v43;
      v59 = *(id *)v42;
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *(_BYTE *)(v42 + 8) = v45;
      v60 = v58;

      v61 = (void *)*((_QWORD *)v43 + 2);
      v62 = *((_BYTE *)v43 + 24);
      v63 = *(void **)(v42 + 16);
      *(_QWORD *)(v42 + 16) = v61;
      *(_BYTE *)(v42 + 24) = v62;
      v64 = v61;

      v65 = (void *)*((_QWORD *)v43 + 4);
      v66 = *((_BYTE *)v43 + 40);
      v67 = *(void **)(v42 + 32);
      *(_QWORD *)(v42 + 32) = v65;
      *(_BYTE *)(v42 + 40) = v66;
      v68 = v65;

    }
  }
  else if (v45 == 255)
  {
    v46 = *v43;
    v47 = v43[1];
    *(_OWORD *)(v42 + 25) = *(__int128 *)((char *)v43 + 25);
    *(_OWORD *)v42 = v46;
    *(_OWORD *)(v42 + 16) = v47;
  }
  else
  {
    v50 = *(void **)v43;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_BYTE *)(v42 + 8) = v45;
    v51 = (void *)*((_QWORD *)v43 + 2);
    v52 = *((_BYTE *)v43 + 24);
    *(_QWORD *)(v42 + 16) = v51;
    *(_BYTE *)(v42 + 24) = v52;
    v53 = (void *)*((_QWORD *)v43 + 4);
    v54 = *((_BYTE *)v43 + 40);
    *(_QWORD *)(v42 + 32) = v53;
    *(_BYTE *)(v42 + 40) = v54;
    v55 = v50;
    v56 = v51;
    v57 = v53;
  }
  v69 = a3[10];
  v70 = a1 + v69;
  v71 = (uint64_t *)(a2 + v69);
  v72 = *(unsigned __int8 *)(a1 + v69 + 8);
  v73 = *(_WORD *)(a2 + v69 + 8);
  if (v72 != 0xFF)
  {
    if (v73 == 255)
    {
      sub_249EA307C((id *)v70);
      v75 = *((_WORD *)v71 + 4);
      *(_QWORD *)v70 = *v71;
      *(_WORD *)(v70 + 8) = v75;
    }
    else
    {
      v78 = (void *)*v71;
      v79 = *(id *)v70;
      *(_QWORD *)v70 = *v71;
      *(_BYTE *)(v70 + 8) = v73;
      v80 = v78;

      *(_BYTE *)(v70 + 9) = *((_BYTE *)v71 + 9);
    }
  }
  else if (v73 == 255)
  {
    v74 = *v71;
    *(_WORD *)(v70 + 8) = *((_WORD *)v71 + 4);
    *(_QWORD *)v70 = v74;
  }
  else
  {
    v76 = (void *)*v71;
    *(_QWORD *)v70 = *v71;
    *(_BYTE *)(v70 + 8) = v73;
    *(_BYTE *)(v70 + 9) = *((_BYTE *)v71 + 9);
    v77 = v76;
  }
  v81 = a3[11];
  v82 = *(void **)(a2 + v81);
  v83 = *(void **)(a1 + v81);
  *(_QWORD *)(a1 + v81) = v82;
  v84 = v82;

  v85 = a3[12];
  v86 = a1 + v85;
  v87 = a2 + v85;
  *(_BYTE *)v86 = *(_BYTE *)v87;
  v88 = *(void **)(v87 + 8);
  v89 = *(void **)(v86 + 8);
  *(_QWORD *)(v86 + 8) = v88;
  v90 = v88;

  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  v239 = a3;
  v240 = a2;
  v91 = a3[14];
  v92 = a1 + v91;
  v93 = a2 + v91;
  *(_BYTE *)v92 = *(_BYTE *)(a2 + v91);
  *(_QWORD *)(v92 + 8) = *(_QWORD *)(a2 + v91 + 8);
  *(_QWORD *)(v92 + 16) = *(_QWORD *)(a2 + v91 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = *(_OWORD *)(v93 + 24);
  *(_BYTE *)(v92 + 40) = *(_BYTE *)(v93 + 40);
  *(_OWORD *)(v92 + 24) = v94;
  *(_QWORD *)(v92 + 48) = *(_QWORD *)(v93 + 48);
  *(_BYTE *)(v92 + 56) = *(_BYTE *)(v93 + 56);
  *(_BYTE *)(v92 + 57) = *(_BYTE *)(v93 + 57);
  *(_BYTE *)(v92 + 58) = *(_BYTE *)(v93 + 58);
  *(_BYTE *)(v92 + 59) = *(_BYTE *)(v93 + 59);
  *(_BYTE *)(v92 + 60) = *(_BYTE *)(v93 + 60);
  *(_BYTE *)(v92 + 61) = *(_BYTE *)(v93 + 61);
  *(_BYTE *)(v92 + 62) = *(_BYTE *)(v93 + 62);
  *(_QWORD *)(v92 + 64) = *(_QWORD *)(v93 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95 = *(_QWORD *)(v93 + 72);
  *(_BYTE *)(v92 + 80) = *(_BYTE *)(v93 + 80);
  *(_QWORD *)(v92 + 72) = v95;
  v96 = (int *)type metadata accessor for GenerationRecipe(0);
  v97 = v96[8];
  v98 = (_BYTE *)(v92 + v97);
  v99 = (_BYTE *)(v93 + v97);
  v100 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v101 = *((_QWORD *)v100 - 1);
  v102 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v101 + 48);
  v103 = v102(v98, 1, v100);
  v104 = v102(v99, 1, v100);
  if (v103)
  {
    if (!v104)
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v106 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
      v106(v98, v99, v105);
      v106(&v98[v100[5]], &v99[v100[5]], v105);
      v107 = v100[6];
      v108 = (uint64_t *)&v98[v107];
      v109 = (uint64_t *)&v99[v107];
      if (*(_QWORD *)&v99[v107 + 16])
      {
        v235 = *v109;
        v236 = a1;
        v110 = v109[1];
        sub_249DC3928(*v109, v110);
        *v108 = v235;
        v108[1] = v110;
        a1 = v236;
        v108[2] = v109[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v123 = *(_OWORD *)v109;
        v108[2] = v109[2];
        *(_OWORD *)v108 = v123;
      }
      v98[v100[7]] = v99[v100[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v101 + 56))(v98, 0, 1, v100);
      goto LABEL_53;
    }
LABEL_42:
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    goto LABEL_53;
  }
  if (v104)
  {
    sub_249DC05A8((uint64_t)v98, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_42;
  }
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v113 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 24);
  v113(v98, v99, v112);
  v113(&v98[v100[5]], &v99[v100[5]], v112);
  v114 = v100[6];
  v115 = (uint64_t *)&v98[v114];
  v116 = (uint64_t *)&v99[v114];
  v117 = *(_QWORD *)&v98[v114 + 16];
  v118 = *(_QWORD *)&v99[v114 + 16];
  if (v117)
  {
    if (v118)
    {
      v237 = a1;
      v120 = *v116;
      v119 = v116[1];
      sub_249DC3928(*v116, v119);
      v121 = *v115;
      v122 = v115[1];
      *v115 = v120;
      v115[1] = v119;
      sub_249DC3C24(v121, v122);
      v115[2] = v116[2];
      swift_bridgeObjectRetain();
      a1 = v237;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02528((uint64_t)v115);
      v126 = v116[2];
      *(_OWORD *)v115 = *(_OWORD *)v116;
      v115[2] = v126;
    }
  }
  else if (v118)
  {
    v238 = a1;
    v125 = *v116;
    v124 = v116[1];
    sub_249DC3928(*v116, v124);
    *v115 = v125;
    v115[1] = v124;
    a1 = v238;
    v115[2] = v116[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v127 = *(_OWORD *)v116;
    v115[2] = v116[2];
    *(_OWORD *)v115 = v127;
  }
  v98[v100[7]] = v99[v100[7]];
LABEL_53:
  v128 = v96[9];
  v129 = v92 + v128;
  v130 = (int *)(v93 + v128);
  v131 = *v130;
  *(_BYTE *)(v129 + 4) = *((_BYTE *)v130 + 4);
  *(_DWORD *)v129 = v131;
  v132 = v96[10];
  v133 = v92 + v132;
  v134 = (int *)(v93 + v132);
  v135 = *v134;
  *(_BYTE *)(v133 + 4) = *((_BYTE *)v134 + 4);
  *(_DWORD *)v133 = v135;
  v136 = v96[11];
  v137 = v92 + v136;
  v138 = v93 + v136;
  *(_BYTE *)v137 = *(_BYTE *)v138;
  *(_BYTE *)(v137 + 1) = *(_BYTE *)(v138 + 1);
  *(_BYTE *)(v137 + 2) = *(_BYTE *)(v138 + 2);
  *(_QWORD *)(v137 + 8) = *(_QWORD *)(v138 + 8);
  *(_QWORD *)(v137 + 16) = *(_QWORD *)(v138 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v92 + v96[12]) = *(_QWORD *)(v93 + v96[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v92 + v96[13]) = *(_QWORD *)(v93 + v96[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139 = v96[14];
  v140 = v92 + v139;
  v141 = (__int128 *)(v93 + v139);
  v142 = *(void **)(v92 + v139 + 24);
  v143 = *(_QWORD *)(v93 + v139 + 24);
  if (v142)
  {
    if (v143)
    {
      *(_QWORD *)v140 = *(_QWORD *)v141;
      *(_QWORD *)(v140 + 8) = *((_QWORD *)v141 + 1);
      *(_DWORD *)(v140 + 16) = *((_DWORD *)v141 + 4);
      v144 = (void *)*((_QWORD *)v141 + 3);
      *(_QWORD *)(v140 + 24) = v144;
      v145 = v144;

      *(_QWORD *)(v140 + 32) = *((_QWORD *)v141 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v140);
      v149 = *((_QWORD *)v141 + 4);
      v150 = v141[1];
      *(_OWORD *)v140 = *v141;
      *(_OWORD *)(v140 + 16) = v150;
      *(_QWORD *)(v140 + 32) = v149;
    }
  }
  else
  {
    v146 = *v141;
    if (v143)
    {
      *(_DWORD *)(v140 + 16) = *((_DWORD *)v141 + 4);
      *(_OWORD *)v140 = v146;
      v147 = (void *)*((_QWORD *)v141 + 3);
      *(_QWORD *)(v140 + 24) = v147;
      *(_QWORD *)(v140 + 32) = *((_QWORD *)v141 + 4);
      v148 = v147;
      swift_retain();
    }
    else
    {
      v151 = v141[1];
      *(_QWORD *)(v140 + 32) = *((_QWORD *)v141 + 4);
      *(_OWORD *)v140 = v146;
      *(_OWORD *)(v140 + 16) = v151;
    }
  }
  v152 = v96[15];
  v153 = v92 + v152;
  v154 = (__int128 *)(v93 + v152);
  v155 = *(void **)(v92 + v152 + 24);
  v156 = *(_QWORD *)(v93 + v152 + 24);
  if (v155)
  {
    if (v156)
    {
      *(_QWORD *)v153 = *(_QWORD *)v154;
      *(_QWORD *)(v153 + 8) = *((_QWORD *)v154 + 1);
      *(_DWORD *)(v153 + 16) = *((_DWORD *)v154 + 4);
      v157 = (void *)*((_QWORD *)v154 + 3);
      *(_QWORD *)(v153 + 24) = v157;
      v158 = v157;

      *(_QWORD *)(v153 + 32) = *((_QWORD *)v154 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v153);
      v162 = *((_QWORD *)v154 + 4);
      v163 = v154[1];
      *(_OWORD *)v153 = *v154;
      *(_OWORD *)(v153 + 16) = v163;
      *(_QWORD *)(v153 + 32) = v162;
    }
  }
  else
  {
    v159 = *v154;
    if (v156)
    {
      *(_DWORD *)(v153 + 16) = *((_DWORD *)v154 + 4);
      *(_OWORD *)v153 = v159;
      v160 = (void *)*((_QWORD *)v154 + 3);
      *(_QWORD *)(v153 + 24) = v160;
      *(_QWORD *)(v153 + 32) = *((_QWORD *)v154 + 4);
      v161 = v160;
      swift_retain();
    }
    else
    {
      v164 = v154[1];
      *(_QWORD *)(v153 + 32) = *((_QWORD *)v154 + 4);
      *(_OWORD *)v153 = v159;
      *(_OWORD *)(v153 + 16) = v164;
    }
  }
  v165 = v96[16];
  v166 = v92 + v165;
  v167 = (__int128 *)(v93 + v165);
  v168 = *(void **)(v92 + v165 + 24);
  v169 = *(_QWORD *)(v93 + v165 + 24);
  if (v168)
  {
    if (v169)
    {
      *(_QWORD *)v166 = *(_QWORD *)v167;
      *(_QWORD *)(v166 + 8) = *((_QWORD *)v167 + 1);
      *(_DWORD *)(v166 + 16) = *((_DWORD *)v167 + 4);
      v170 = (void *)*((_QWORD *)v167 + 3);
      *(_QWORD *)(v166 + 24) = v170;
      v171 = v170;

      *(_QWORD *)(v166 + 32) = *((_QWORD *)v167 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v166);
      v175 = *((_QWORD *)v167 + 4);
      v176 = v167[1];
      *(_OWORD *)v166 = *v167;
      *(_OWORD *)(v166 + 16) = v176;
      *(_QWORD *)(v166 + 32) = v175;
    }
  }
  else
  {
    v172 = *v167;
    if (v169)
    {
      *(_DWORD *)(v166 + 16) = *((_DWORD *)v167 + 4);
      *(_OWORD *)v166 = v172;
      v173 = (void *)*((_QWORD *)v167 + 3);
      *(_QWORD *)(v166 + 24) = v173;
      *(_QWORD *)(v166 + 32) = *((_QWORD *)v167 + 4);
      v174 = v173;
      swift_retain();
    }
    else
    {
      v177 = v167[1];
      *(_QWORD *)(v166 + 32) = *((_QWORD *)v167 + 4);
      *(_OWORD *)v166 = v172;
      *(_OWORD *)(v166 + 16) = v177;
    }
  }
  v178 = v96[17];
  v179 = v92 + v178;
  v180 = (__int128 *)(v93 + v178);
  v181 = *(void **)(v92 + v178 + 24);
  v182 = *(_QWORD *)(v93 + v178 + 24);
  if (v181)
  {
    if (v182)
    {
      *(_QWORD *)v179 = *(_QWORD *)v180;
      *(_QWORD *)(v179 + 8) = *((_QWORD *)v180 + 1);
      *(_DWORD *)(v179 + 16) = *((_DWORD *)v180 + 4);
      v183 = (void *)*((_QWORD *)v180 + 3);
      *(_QWORD *)(v179 + 24) = v183;
      v184 = v183;

      *(_QWORD *)(v179 + 32) = *((_QWORD *)v180 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v179);
      v188 = *((_QWORD *)v180 + 4);
      v189 = v180[1];
      *(_OWORD *)v179 = *v180;
      *(_OWORD *)(v179 + 16) = v189;
      *(_QWORD *)(v179 + 32) = v188;
    }
  }
  else
  {
    v185 = *v180;
    if (v182)
    {
      *(_DWORD *)(v179 + 16) = *((_DWORD *)v180 + 4);
      *(_OWORD *)v179 = v185;
      v186 = (void *)*((_QWORD *)v180 + 3);
      *(_QWORD *)(v179 + 24) = v186;
      *(_QWORD *)(v179 + 32) = *((_QWORD *)v180 + 4);
      v187 = v186;
      swift_retain();
    }
    else
    {
      v190 = v180[1];
      *(_QWORD *)(v179 + 32) = *((_QWORD *)v180 + 4);
      *(_OWORD *)v179 = v185;
      *(_OWORD *)(v179 + 16) = v190;
    }
  }
  v191 = v96[18];
  v192 = v92 + v191;
  v193 = (__int128 *)(v93 + v191);
  v194 = *(void **)(v92 + v191 + 24);
  v195 = *(_QWORD *)(v93 + v191 + 24);
  if (v194)
  {
    if (v195)
    {
      *(_QWORD *)v192 = *(_QWORD *)v193;
      *(_QWORD *)(v192 + 8) = *((_QWORD *)v193 + 1);
      *(_DWORD *)(v192 + 16) = *((_DWORD *)v193 + 4);
      v196 = (void *)*((_QWORD *)v193 + 3);
      *(_QWORD *)(v192 + 24) = v196;
      v197 = v196;

      *(_QWORD *)(v192 + 32) = *((_QWORD *)v193 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v192);
      v201 = *((_QWORD *)v193 + 4);
      v202 = v193[1];
      *(_OWORD *)v192 = *v193;
      *(_OWORD *)(v192 + 16) = v202;
      *(_QWORD *)(v192 + 32) = v201;
    }
  }
  else
  {
    v198 = *v193;
    if (v195)
    {
      *(_DWORD *)(v192 + 16) = *((_DWORD *)v193 + 4);
      *(_OWORD *)v192 = v198;
      v199 = (void *)*((_QWORD *)v193 + 3);
      *(_QWORD *)(v192 + 24) = v199;
      *(_QWORD *)(v192 + 32) = *((_QWORD *)v193 + 4);
      v200 = v199;
      swift_retain();
    }
    else
    {
      v203 = v193[1];
      *(_QWORD *)(v192 + 32) = *((_QWORD *)v193 + 4);
      *(_OWORD *)v192 = v198;
      *(_OWORD *)(v192 + 16) = v203;
    }
  }
  v204 = (_OWORD *)(v192 + 40);
  v205 = (__int128 *)((char *)v193 + 40);
  v206 = *(void **)(v192 + 64);
  v207 = *((_QWORD *)v193 + 8);
  if (v206)
  {
    if (v207)
    {
      *(_QWORD *)(v192 + 40) = *((_QWORD *)v193 + 5);
      *(_QWORD *)(v192 + 48) = *((_QWORD *)v193 + 6);
      *(_DWORD *)(v192 + 56) = *((_DWORD *)v193 + 14);
      v208 = (void *)*((_QWORD *)v193 + 8);
      *(_QWORD *)(v192 + 64) = v208;
      v209 = v208;

      *(_QWORD *)(v192 + 72) = *((_QWORD *)v193 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v192 + 40);
      v213 = *((_QWORD *)v193 + 9);
      v214 = *(__int128 *)((char *)v193 + 56);
      *v204 = *v205;
      *(_OWORD *)(v192 + 56) = v214;
      *(_QWORD *)(v192 + 72) = v213;
    }
  }
  else
  {
    v210 = *v205;
    if (v207)
    {
      *(_DWORD *)(v192 + 56) = *((_DWORD *)v193 + 14);
      *v204 = v210;
      v211 = (void *)*((_QWORD *)v193 + 8);
      *(_QWORD *)(v192 + 64) = v211;
      *(_QWORD *)(v192 + 72) = *((_QWORD *)v193 + 9);
      v212 = v211;
      swift_retain();
    }
    else
    {
      v215 = *(__int128 *)((char *)v193 + 56);
      *(_QWORD *)(v192 + 72) = *((_QWORD *)v193 + 9);
      *v204 = v210;
      *(_OWORD *)(v192 + 56) = v215;
    }
  }
  *(_BYTE *)(v192 + 80) = *((_BYTE *)v193 + 80);
  *(_QWORD *)(v92 + v96[19]) = *(_QWORD *)(v93 + v96[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v216 = v96[20];
  v217 = v92 + v216;
  v218 = (__int128 *)(v93 + v216);
  v219 = *(void **)(v92 + v216 + 24);
  v220 = *(_QWORD *)(v93 + v216 + 24);
  if (v219)
  {
    if (v220)
    {
      *(_QWORD *)v217 = *(_QWORD *)v218;
      *(_QWORD *)(v217 + 8) = *((_QWORD *)v218 + 1);
      *(_DWORD *)(v217 + 16) = *((_DWORD *)v218 + 4);
      v221 = (void *)*((_QWORD *)v218 + 3);
      *(_QWORD *)(v217 + 24) = v221;
      v222 = v221;

      *(_QWORD *)(v217 + 32) = *((_QWORD *)v218 + 4);
      swift_retain();
      swift_release();
      *(_QWORD *)(v217 + 40) = *((_QWORD *)v218 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v217 + 48) = *((_QWORD *)v218 + 6);
      *(_QWORD *)(v217 + 56) = *((_QWORD *)v218 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02590(v217);
      v226 = v218[3];
      v228 = *v218;
      v227 = v218[1];
      *(_OWORD *)(v217 + 32) = v218[2];
      *(_OWORD *)(v217 + 48) = v226;
      *(_OWORD *)v217 = v228;
      *(_OWORD *)(v217 + 16) = v227;
    }
  }
  else
  {
    v223 = *v218;
    if (v220)
    {
      *(_DWORD *)(v217 + 16) = *((_DWORD *)v218 + 4);
      *(_OWORD *)v217 = v223;
      v224 = (void *)*((_QWORD *)v218 + 3);
      *(_QWORD *)(v217 + 24) = v224;
      *(_QWORD *)(v217 + 32) = *((_QWORD *)v218 + 4);
      *(_QWORD *)(v217 + 40) = *((_QWORD *)v218 + 5);
      *(_QWORD *)(v217 + 48) = *((_QWORD *)v218 + 6);
      *(_QWORD *)(v217 + 56) = *((_QWORD *)v218 + 7);
      v225 = v224;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v229 = v218[1];
      v230 = v218[3];
      *(_OWORD *)(v217 + 32) = v218[2];
      *(_OWORD *)(v217 + 48) = v230;
      *(_OWORD *)v217 = v223;
      *(_OWORD *)(v217 + 16) = v229;
    }
  }
  v231 = v96[21];
  v232 = (_QWORD *)(v92 + v231);
  v233 = v93 + v231;
  *v232 = *(_QWORD *)(v93 + v231);
  v232[1] = *(_QWORD *)(v93 + v231 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v232[2] = *(_QWORD *)(v233 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v92 + v96[22]) = *(_QWORD *)(v93 + v96[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v92 + v96[23]) = *(_BYTE *)(v93 + v96[23]);
  *(_QWORD *)(a1 + v239[15]) = *(_QWORD *)(v240 + v239[15]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v239[16]) = *(_QWORD *)(v240 + v239[16]);
  swift_retain();
  swift_release();
  return a1;
}

