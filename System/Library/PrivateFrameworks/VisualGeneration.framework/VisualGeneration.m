id InputImagePersonalizationPolicy.inputImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

uint64_t InputImagePersonalizationPolicy.allowedFaceCountRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t InputImagePersonalizationPolicy.detectedFaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputImagePersonalizationPolicy.inputImageCaptionViolationKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputImagePersonalizationPolicy.inputImageCaption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InputImagePersonalizationPolicy.inputImageCaptionKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputImagePersonalizationPolicy.description.getter()
{
  uint64_t v0;

  sub_249F1FA84();
  v0 = sub_249F1FE08();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1FB98();
  sub_249F1F460();
  sub_249F1FB98();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return v0;
}

id sub_249D9AD70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

unint64_t sub_249D9AD84(uint64_t a1)
{
  unint64_t result;

  result = sub_249D9ADA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249D9ADA8()
{
  unint64_t result;

  result = qword_2578D5DC8;
  if (!qword_2578D5DC8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for InputImagePersonalizationPolicy, &type metadata for InputImagePersonalizationPolicy);
    atomic_store(result, (unint64_t *)&qword_2578D5DC8);
  }
  return result;
}

unint64_t sub_249D9ADEC(uint64_t a1)
{
  unint64_t result;

  result = sub_249D9AE10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249D9AE10()
{
  unint64_t result;

  result = qword_2578D5DD0;
  if (!qword_2578D5DD0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for InputImagePersonalizationPolicy, &type metadata for InputImagePersonalizationPolicy);
    atomic_store(result, (unint64_t *)&qword_2578D5DD0);
  }
  return result;
}

uint64_t sub_249D9AE58()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_249F1F2E0();
  MEMORY[0x24BDAC7A8]();
  sub_249F1E92C();
  MEMORY[0x24BDAC7A8]();
  sub_249F1F2F8();
  result = MEMORY[0x24BDAC7A8]();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= 0)
  {
    sub_249F1F2A4();
LABEL_10:
    sub_249F1E920();
    return sub_249F1F388();
  }
  v4 = *(_QWORD *)(v0 + 16);
  if (!v4)
  {
    sub_249F1F2D4();
    sub_249F1F2C8();
    sub_249F1F2B0();
    goto LABEL_9;
  }
  if (__OFADD__(v4, v3))
    goto LABEL_12;
  if (!__OFSUB__(v4 + v3, 1))
  {
    sub_249F1F2D4();
    sub_249F1F2C8();
    sub_249F1F2B0();
    sub_249F1F2C8();
    sub_249F1F2B0();
LABEL_9:
    sub_249F1F2C8();
    sub_249F1F2B0();
    sub_249F1F2C8();
    sub_249F1F2EC();
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for InputImagePersonalizationPolicy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InputImagePersonalizationPolicy(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InputImagePersonalizationPolicy(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InputImagePersonalizationPolicy(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  v7 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for InputImagePersonalizationPolicy(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputImagePersonalizationPolicy(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputImagePersonalizationPolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InputImagePersonalizationPolicy()
{
  return &type metadata for InputImagePersonalizationPolicy;
}

void type metadata accessor for CGContext(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5DD8);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PixelDimensions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PixelDimensions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5DE0);
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5DE8);
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5DF0);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5DF8);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5E00);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5E08);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5E10);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5E18);
}

uint64_t sub_249D9B5A0(uint64_t a1, uint64_t a2)
{
  return sub_249D9C004(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_249D9B5C0(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F21710, a1);
  return sub_249F1EB48();
}

uint64_t sub_249D9B5FC()
{
  MEMORY[0x24BD06528](&unk_249F21710);
  return sub_249F1EB3C();
}

uint64_t sub_249D9B644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249D9B90C(a1, a2, a3, (uint64_t)&unk_249F21710);
}

BOOL sub_249D9B650(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_249D9B664(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_249F1F310();
  *a2 = 0;
  return result;
}

uint64_t sub_249D9B6D8(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_249F1F31C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_249D9B754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_249F1F328();
  v2 = sub_249F1F304();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_249D9B798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24BD06528](&unk_249F21710, a3);
  return sub_249F1EB30() & 1;
}

uint64_t sub_249D9B7EC(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F20F30, a1);
  return sub_249F1EB48();
}

uint64_t sub_249D9B828()
{
  MEMORY[0x24BD06528](&unk_249F20F30);
  return sub_249F1EB3C();
}

uint64_t sub_249D9B870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249D9B90C(a1, a2, a3, (uint64_t)&unk_249F20F30);
}

uint64_t sub_249D9B87C(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F20FC4, a1);
  return sub_249F1EB48();
}

uint64_t sub_249D9B8B8()
{
  MEMORY[0x24BD06528](&unk_249F20FC4);
  return sub_249F1EB3C();
}

uint64_t sub_249D9B900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249D9B90C(a1, a2, a3, (uint64_t)&unk_249F20FC4);
}

uint64_t sub_249D9B90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249F1FF64();
  MEMORY[0x24BD06528](a4, a2);
  sub_249F1EB3C();
  return sub_249F1FFA0();
}

_QWORD *sub_249D9B96C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_249D9B97C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_249D9B98C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_249F1F328();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249D9B9B4()
{
  sub_249D9BBEC(&qword_2578D5F58, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_249F215B4);
  sub_249D9BBEC(&qword_2578D5F60, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_249F21554);
  return sub_249F1FC40();
}

uint64_t sub_249D9BA38()
{
  sub_249D9BBEC((unint64_t *)&qword_2578D5F68, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_249F21644);
  sub_249D9BBEC((unint64_t *)&unk_2578D5F70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_249F21430);
  return sub_249F1FC40();
}

uint64_t sub_249D9BABC()
{
  sub_249D9BBEC((unint64_t *)&qword_2578D5F88, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_249F216CC);
  sub_249D9BBEC((unint64_t *)&unk_2578D5F90, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_249F211F0);
  return sub_249F1FC40();
}

uint64_t sub_249D9BB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24BD06528](&unk_249F20F30, a3);
  return sub_249F1EB30() & 1;
}

uint64_t sub_249D9BB94()
{
  return sub_249D9BBEC(&qword_2578D5E20, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_249F20EC0);
}

uint64_t sub_249D9BBC0()
{
  return sub_249D9BBEC(&qword_2578D5E28, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_249F20EEC);
}

uint64_t sub_249D9BBEC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BD06528](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249D9BC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24BD06528](&unk_249F20FC4, a3);
  return sub_249F1EB30() & 1;
}

uint64_t sub_249D9BC80()
{
  return sub_249D9BBEC(&qword_2578D5E30, (uint64_t (*)(uint64_t))type metadata accessor for CVBuffer, (uint64_t)&unk_249F20F5C);
}

uint64_t sub_249D9BCAC()
{
  return sub_249D9BBEC(&qword_2578D5E38, (uint64_t (*)(uint64_t))type metadata accessor for CVBuffer, (uint64_t)&unk_249F20F84);
}

uint64_t sub_249D9BCD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_249F1F304();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_249D9BD1C()
{
  sub_249D9BBEC((unint64_t *)&qword_2578DB020, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_249F21688);
  sub_249D9BBEC(&qword_2578D5F80, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_249F21310);
  return sub_249F1FC40();
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EA0);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EA8);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EB0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EB8);
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EC0);
}

void type metadata accessor for CIImageOption(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EC8);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5ED0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5ED8);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_249D9BE54(a1, &qword_2578D5EE0);
}

void sub_249D9BE54(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_249D9BE98()
{
  return sub_249D9BBEC(&qword_2578D5EE8, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_249F211B4);
}

uint64_t sub_249D9BEC4()
{
  return sub_249D9BBEC(&qword_2578D5EF0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_249F21188);
}

uint64_t sub_249D9BEF0()
{
  return sub_249D9BBEC(&qword_2578D5EF8, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_249F212D4);
}

uint64_t sub_249D9BF1C()
{
  return sub_249D9BBEC(&qword_2578D5F00, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_249F212A8);
}

uint64_t sub_249D9BF48()
{
  return sub_249D9BBEC(&qword_2578D5F08, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_249F213F4);
}

uint64_t sub_249D9BF74()
{
  return sub_249D9BBEC(&qword_2578D5F10, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_249F213C8);
}

uint64_t sub_249D9BFA0()
{
  return sub_249D9BBEC(&qword_2578D5F18, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_249F21518);
}

uint64_t sub_249D9BFCC()
{
  return sub_249D9BBEC(&qword_2578D5F20, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_249F214EC);
}

uint64_t sub_249D9BFF8(uint64_t a1, uint64_t a2)
{
  return sub_249D9C004(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BEE0CD8]);
}

uint64_t sub_249D9C004(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_249F1F328();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_249D9C040()
{
  sub_249F1F328();
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249D9C080()
{
  uint64_t v0;

  sub_249F1F328();
  sub_249F1FF64();
  sub_249F1F40C();
  v0 = sub_249F1FFA0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_249D9C0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_249F1F328();
  v2 = v1;
  if (v0 == sub_249F1F328() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_249D9C178()
{
  return sub_249D9BBEC(&qword_2578D5F28, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_249F21588);
}

uint64_t sub_249D9C1A4()
{
  return sub_249D9BBEC(&qword_2578D5F30, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_249F21464);
}

uint64_t sub_249D9C1D0()
{
  return sub_249D9BBEC(&qword_2578D5F38, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_249F21344);
}

uint64_t sub_249D9C1FC()
{
  return sub_249D9BBEC(&qword_2578D5F40, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_249F21224);
}

uint64_t sub_249D9C228()
{
  return sub_249D9BBEC((unint64_t *)&qword_2578D5F48, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_249F30AE0);
}

uint64_t sub_249D9C254()
{
  return sub_249D9BBEC(&qword_2578D5F50, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_249F30AA8);
}

uint64_t sub_249D9C294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_249F1F4D8();
  v1 = MEMORY[0x24BD04FE0](v0);
  v3 = v2;
  swift_bridgeObjectRelease();
  sub_249DB3450(&v5, v1, v3);
  swift_bridgeObjectRelease();
  return 1;
}

void sub_249D9C300(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60D8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE64250]), sel_initWithModelType_safetyType_, 3, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60E0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_249F21760;
  *(_QWORD *)(v11 + 32) = v10;
  aBlock[0] = v11;
  sub_249F1F55C();
  sub_249D9D9F4(0, &qword_2578D60E8);
  v12 = v10;
  v13 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = (v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  *(_QWORD *)(v16 + v15) = v12;
  aBlock[4] = sub_249D9D91C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249E11B88;
  aBlock[3] = &block_descriptor;
  v17 = _Block_copy(aBlock);
  v18 = v12;
  swift_release();
  objc_msgSend(a2, sel_performRequests_onPixelBuffer_withOrientation_andIdentifier_completionHandler_, v13, a3, 1, 0, v17);
  _Block_release(v17);

}

void sub_249D9C508(int a1, id a2, int a3, id a4)
{
  id v4;
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a2)
  {
    v20 = (uint64_t)a2;
    v4 = a2;
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60D8);
    sub_249F1F5BC();
    return;
  }
  v6 = objc_msgSend(a4, sel_error);
  if (v6)
  {
LABEL_20:
    v20 = (uint64_t)v6;
    goto LABEL_21;
  }
  v7 = objc_msgSend(a4, sel_results);
  if (!v7)
  {
LABEL_15:
    if (qword_2578D5D78 != -1)
      swift_once();
    v14 = sub_249F1EF38();
    __swift_project_value_buffer(v14, (uint64_t)qword_2578FF3F0);
    v15 = sub_249F1EF20();
    v16 = sub_249F1F820();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20 = v18;
      *(_DWORD *)v17 = 136315138;
      sub_249E68CA8(0xD000000000000075, 0x8000000249F33EE0, &v20);
      sub_249F1F9AC();
      _os_log_impl(&dword_249D98000, v15, v16, "%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v18, -1, -1);
      MEMORY[0x24BD06618](v17, -1, -1);
    }

    sub_249D9D9B0();
    v6 = (id)swift_allocError();
    *(_QWORD *)v19 = 0xD000000000000075;
    *(_QWORD *)(v19 + 8) = 0x8000000249F33EE0;
    *(_BYTE *)(v19 + 16) = 1;
    goto LABEL_20;
  }
  v8 = v7;
  sub_249D9D9F4(0, &qword_2578D60F8);
  v9 = sub_249F1F544();

  if (!(v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v13 = sub_249F1FBEC();
  swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x24BD056B8](0, v9);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_10:
    v11 = v10;
    swift_bridgeObjectRelease();
    objc_opt_self();
    v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      v20 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60D8);
      sub_249F1F5C8();
      return;
    }

    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_249D9C828()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_249D9DA2C((uint64_t)&unk_251B4D0D0);
  result = swift_arrayDestroy();
  qword_2578D60C0 = v0;
  return result;
}

uint64_t sub_249D9C870(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v12 = v11;
      if (!v8)
        break;
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v12 + 2;
      if (v12 + 2 >= v31)
        goto LABEL_48;
      v16 = *(_QWORD *)(v33 + 8 * v11);
      if (!v16)
      {
        v11 = v12 + 3;
        if (v12 + 3 >= v31)
          goto LABEL_48;
        v16 = *(_QWORD *)(v33 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_30:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      sub_249F1FF64();
      swift_bridgeObjectRetain();
      sub_249F1F40C();
      v21 = sub_249F1FFA0();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_249F1FE2C() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_45:
          sub_249D9E18C();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_249F1FE2C() & 1) != 0)
            goto LABEL_44;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_45;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_30;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_249D9CB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[31] = a4;
  v5[32] = a5;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  v5[33] = type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy();
  v5[34] = swift_task_alloc();
  type metadata accessor for GeneratedImage();
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249D9CBE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  void *v15;
  char v16;
  id v17;
  CVPixelBufferRef v18;
  CVPixelBufferRef v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0[36];
  v2 = v0[29];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6128);
  inited = swift_initStackObject();
  v0[37] = inited;
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  *(_QWORD *)(inited + 56) = &type metadata for GeneratedImageFaceDetectionPolicyEvaluator;
  *(_QWORD *)(inited + 64) = &off_251B51FF0;
  sub_249D9E1A0(v2, v1);
  v0[26] = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(inited + 16))
  {
    v1 = (uint64_t)(v0 + 11);
    v2 = (uint64_t)(v0 + 16);
    sub_249D9E1E4(inited + 32, (uint64_t)(v0 + 11));
    if (qword_2578D5D78 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  sub_249D9E1E4(v1, v2);
  v5 = sub_249F1EF20();
  v6 = sub_249F1F82C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_249D9E1E4(v2, (uint64_t)(v0 + 21));
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6138);
    v9 = sub_249F1F3AC();
    *(_QWORD *)(v7 + 4) = sub_249E68CA8(v9, v10, &v23);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v2);
    _os_log_impl(&dword_249D98000, v5, v6, "evaluating generated image with %s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v2);
  }

  if ((sub_249E04E6C() & 1) != 0)
    goto LABEL_14;
  sub_249E092B0((uint64_t)&v23);
  if (v23 != 5 || BYTE1(v23) != 3 || BYTE2(v23) != 10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v25)
  {
    swift_bridgeObjectRetain();
    v11 = sub_249F1F424();
    swift_bridgeObjectRelease_n();
    if (v11 <= 0)
      goto LABEL_16;
LABEL_14:
    v12 = (_QWORD *)swift_task_alloc();
    v0[38] = v12;
    *v12 = v0;
    v12[1] = sub_249D9D000;
    return sub_249DF7330(v0[36], 0, 2, v0[32]);
  }
  swift_bridgeObjectRelease_n();
LABEL_16:
  v14 = v0[36];
  v15 = *(void **)v14;
  v0[41] = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  v17 = v15;
  v23 = (uint64_t)v15;
  LOBYTE(v24) = v16;
  v18 = sub_249DDE218();
  v0[42] = v18;
  v19 = v18;
  v20 = v0[31];
  v21 = swift_task_alloc();
  v0[43] = v21;
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = v19;
  v22 = (_QWORD *)swift_task_alloc();
  v0[44] = v22;
  sub_249D9D9F4(0, &qword_2578D60D0);
  *v22 = v0;
  v22[1] = sub_249D9D1F4;
  return sub_249F1FEEC();
}

uint64_t sub_249D9D000(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 312) = a1;
  *(_QWORD *)(v3 + 320) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249D9D06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 312);
  if (v1)
    sub_249E5DAEC(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 288);
  if (*(_QWORD *)(v2 + 16))
  {
    sub_249D9E130();
    swift_allocError();
    *v4 = v2;
    swift_willThrow();
    sub_249D9E248(v3);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease();
    sub_249D9E308(v3, v5, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249D9D17C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRelease();
  sub_249D9E248(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249D9D1F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249D9D260()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  int *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 216);
  v2 = objc_msgSend(v1, sel_caption);
  if (v2)
  {
    v3 = v2;
    v4 = sub_249F1F328();
    v6 = v5;

  }
  else
  {

    v4 = 0;
    v6 = 0;
  }
  v7 = *(void **)(v0 + 328);

  v8 = sub_249D9D558(v4, v6);
  if (!v8)
    goto LABEL_9;
  v9 = v8;
  if (qword_2578D5CE0 != -1)
    swift_once();
  v10 = qword_2578D60C0;
  if ((sub_249D9C870(qword_2578D60C0, v9) & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  result = sub_249D9E1A0(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 280));
  if (!v6)
  {
    __break(1u);
    return result;
  }
  v12 = *(_QWORD *)(v0 + 272);
  v13 = *(int **)(v0 + 264);
  sub_249D9E308(*(_QWORD *)(v0 + 280), v12, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  *(_QWORD *)(v12 + v13[5]) = v10;
  v14 = (uint64_t *)(v12 + v13[6]);
  *v14 = v4;
  v14[1] = v6;
  *(_QWORD *)(v12 + v13[7]) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6110);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_249F21770;
  *(_QWORD *)(v15 + 56) = v13;
  *(_QWORD *)(v15 + 64) = sub_249D9E284();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  sub_249D9E308(v12, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy);
  swift_bridgeObjectRetain();
  sub_249E5DAEC(v15);
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v0 + 208);
  v18 = *(_QWORD *)(v0 + 288);
  if (*(_QWORD *)(v17 + 16))
  {
    sub_249D9E130();
    swift_allocError();
    *v19 = v17;
    swift_willThrow();
    sub_249D9E248(v18);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease();
    sub_249D9E308(v18, v20, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249D9D4CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 328);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRelease();
  sub_249D9E248(v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249D9D558(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;

  if (!a2)
    return 0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFD70]), sel_initWithUnit_, 0);
  v3 = (void *)sub_249F1F304();
  objc_msgSend(v2, sel_setString_, v3);

  v6 = MEMORY[0x24BEE4B08];
  MEMORY[0x24BDAC7A8](v4);
  sub_249F1F7A8();

  return v6;
}

uint64_t sub_249D9D660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_249D9D678()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_249D9D9F4(0, &qword_2578D60D0);
  *v2 = v0;
  v2[1] = sub_249D9D738;
  return sub_249F1FEEC();
}

uint64_t sub_249D9D738()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249D9D7A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_caption);
  if (v2)
  {
    v3 = v2;
    v4 = sub_249F1F328();
    v6 = v5;

  }
  else
  {

    v4 = 0;
    v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
}

uint64_t sub_249D9D828()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249D9D85C(uint64_t a1)
{
  uint64_t v1;

  sub_249D9C300(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD06510]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_249D9D8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60D8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_249D9D91C(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D60D8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_249D9C508(a1, a2, v2 + v6, *(id *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_249D9D9B0()
{
  unint64_t result;

  result = qword_2578D60F0;
  if (!qword_2578D60F0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for FrameworkError, &type metadata for FrameworkError);
    atomic_store(result, (unint64_t *)&qword_2578D60F0);
  }
  return result;
}

uint64_t sub_249D9D9F4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_249D9DA2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6118);
    v3 = sub_249F1FA60();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_249F1FF64();
      swift_bridgeObjectRetain();
      sub_249F1F40C();
      result = sub_249F1FFA0();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_249F1FE2C(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_249F1FE2C();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_249D9DBCC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  __int128 v24;
  ValueMetadata *v25;
  unint64_t v26;

  v5 = *(void **)result;
  v6 = *(_BYTE *)(result + 8);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    if (v7 == 1)
      return result;
    v8 = qword_2578D5CE0;
    v9 = v5;
    swift_bridgeObjectRetain();
    if (v8 != -1)
      swift_once();
    v10 = qword_2578D60C0;
    v25 = &type metadata for InputImagePersonalizationPolicy;
    v26 = sub_249D9ADA8();
    v11 = swift_allocObject();
    *(_QWORD *)&v24 = v11;
    *(_QWORD *)(v11 + 16) = v5;
    *(_BYTE *)(v11 + 24) = v6;
    *(_OWORD *)(v11 + 32) = xmmword_249F21780;
    *(_QWORD *)(v11 + 48) = a2;
    *(_QWORD *)(v11 + 56) = v10;
    sub_249D9E130();
    *(_QWORD *)(v11 + 72) = 0;
    *(_QWORD *)(v11 + 80) = 0;
    *(_QWORD *)(v11 + 64) = 0;
    swift_allocError();
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6110);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_249F21770;
    sub_249D9E174(&v24, v14 + 32);
    *v13 = v14;
  }
  else
  {
    result = sub_249D9D558(a3, a4);
    if (!result)
      return result;
    v17 = result;
    if (qword_2578D5CE0 != -1)
      swift_once();
    v18 = qword_2578D60C0;
    if ((sub_249D9C870(qword_2578D60C0, v17) & 1) != 0)
      return swift_bridgeObjectRelease();
    v25 = &type metadata for InputImagePersonalizationPolicy;
    v26 = sub_249D9ADA8();
    v19 = swift_allocObject();
    *(_QWORD *)&v24 = v19;
    *(_QWORD *)(v19 + 16) = v5;
    *(_BYTE *)(v19 + 24) = v6;
    *(_OWORD *)(v19 + 32) = xmmword_249F21780;
    *(_QWORD *)(v19 + 48) = a2;
    *(_QWORD *)(v19 + 56) = v18;
    *(_QWORD *)(v19 + 64) = a3;
    *(_QWORD *)(v19 + 72) = a4;
    *(_QWORD *)(v19 + 80) = v17;
    sub_249D9E130();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6110);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_249F21770;
    sub_249D9E174(&v24, v22 + 32);
    *v21 = v22;
    swift_bridgeObjectRetain();
    v23 = v5;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_249D9DE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  int v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _BYTE *v41;

  v35 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6100);
  MEMORY[0x24BDAC7A8](v8);
  v41 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_249F1F118();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v30[-v14];
  v36 = sub_249F1F130();
  v16 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v18 = &v30[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = *(_QWORD *)a1;
  v20 = *(unsigned __int8 *)(a1 + 8);
  v21 = *(_QWORD *)(a2 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  if (v21)
  {
    v31 = v20;
    v32 = v19;
    v33 = a4;
    v34 = v4;
    v39 = MEMORY[0x24BEE4AF8];
    sub_249DB66C8(0, v21, 0);
    v23 = a2 + 56;
    do
    {
      sub_249F1F10C();
      v25 = v37;
      v24 = v38;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16))(v13, v15, v38);
      v26 = sub_249F1F184();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v41, 1, 1, v26);
      sub_249F1F124();
      (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v15, v24);
      v22 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB66C8(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v39;
      }
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_249DB66C8(v27 > 1, v28 + 1, 1);
        v22 = v39;
      }
      *(_QWORD *)(v22 + 16) = v28 + 1;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v16 + 32))(v22+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v28, v18, v36);
      v39 = v22;
      v23 += 32;
      --v21;
    }
    while (v21);
    a4 = v33;
    v19 = v32;
    LOBYTE(v20) = v31;
  }
  v39 = v19;
  v40 = v20;
  sub_249D9DBCC((uint64_t)&v39, v22, v35, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249D9E0EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_249D9E130()
{
  unint64_t result;

  result = qword_2578D6108;
  if (!qword_2578D6108)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PolicyViolationError, &type metadata for PolicyViolationError);
    atomic_store(result, (unint64_t *)&qword_2578D6108);
  }
  return result;
}

uint64_t sub_249D9E174(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_249D9E18C()
{
  return swift_release();
}

uint64_t sub_249D9E194()
{
  return sub_249D9C294();
}

uint64_t sub_249D9E1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeneratedImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249D9E1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_249D9E248(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GeneratedImage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249D9E284()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D6130;
  if (!qword_2578D6130)
  {
    v1 = type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy();
    result = MEMORY[0x24BD06528](&unk_249F2817C, v1);
    atomic_store(result, (unint64_t *)&qword_2578D6130);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_249D9E308(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249D9E350(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v14 = type metadata accessor for Concept(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v33 = a7;
    v34 = a6;
    v17 = sub_249F1F328();
    v19 = v18;
    if (v17 == sub_249F1F328() && v19 == v20)
    {
      v23 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v22 = sub_249F1FE2C();
      v32 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {

        return 1;
      }
    }
    v24 = sub_249F1F4D8();
    v25 = MEMORY[0x24BD04FE0](v24);
    v27 = v26;
    swift_bridgeObjectRelease();
    *v16 = v25;
    v16[1] = v27;
    swift_storeEnumTagMultiPayload();
    v37 = a2;
    v38 = a3;
    v35 = a4;
    v36 = a5;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6140);
    sub_249D9E52C();
    sub_249D9E5BC();
    v28 = sub_249F1F94C();
    v34(v16, v28, v29);

    sub_249D9E600((uint64_t)v16);
  }
  return 1;
}

unint64_t sub_249D9E52C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D6148;
  if (!qword_2578D6148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D6140);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D6148);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD0651C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_249D9E5BC()
{
  unint64_t result;

  result = qword_2578D6150;
  if (!qword_2578D6150)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2578D6150);
  }
  return result;
}

uint64_t sub_249D9E600(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Concept(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249D9E63C()
{
  swift_getDynamicType();
  return sub_249F2003C();
}

uint64_t sub_249D9E660()
{
  return 1;
}

uint64_t sub_249D9E668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249D9E6CC()
{
  return type metadata accessor for ModelManagerOperation();
}

uint64_t type metadata accessor for ModelManagerOperation()
{
  uint64_t result;

  result = qword_2578D6188;
  if (!qword_2578D6188)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249D9E710()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249D9E790(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F218A8, a1);
  return sub_249D9E63C();
}

uint64_t sub_249D9E7C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249D9E80C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled);
}

void sub_249D9E820()
{
  _QWORD *v0;

  *(_BYTE *)(*v0 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled) = 1;
}

uint64_t sub_249D9E838()
{
  return sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_249D9E864(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249D9BBEC(&qword_2578D6268, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerOperation, (uint64_t)&unk_249F21880);
  result = sub_249D9BBEC(&qword_2578D6270, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerOperation, (uint64_t)&unk_249F21848);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249D9E8C0(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578D6278, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerOperation, (uint64_t)&unk_249F218A8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t GenerativePlayground.Error.errorDescription.getter()
{
  sub_249F1E92C();
  MEMORY[0x24BDAC7A8]();
  sub_249F1F2F8();
  MEMORY[0x24BDAC7A8]();
  sub_249F1F2A4();
  sub_249F1E920();
  return sub_249F1F388();
}

uint64_t GenerativePlayground.__allocating_init()()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  int v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_processName);
  v2 = sub_249F1F328();
  v4 = v3;

  LODWORD(v1) = objc_msgSend(v0, sel_processIdentifier);
  v6[0] = v2;
  v6[1] = v4;
  v7 = (int)v1;
  return _s16VisualGeneration20GenerativePlaygroundC6clientAcA14ClientIdentityV_tcfC_0((uint64_t)v6);
}

uint64_t sub_249D9EAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  char v49;
  uint64_t v50;
  _BYTE v52[12];
  int v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v2 = v1;
  v4 = (int *)type metadata accessor for DefinitionSession();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = &v52[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v52[-v11];
  if (qword_2578D5D78 != -1)
    swift_once();
  v56 = v7;
  v13 = sub_249F1EF38();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_2578FF3F0);
  sub_249DC091C(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v15 = sub_249F1EF20();
  v16 = sub_249F1F82C();
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    v57 = v54;
    *(_DWORD *)v18 = 136315394;
    v19 = &v12[v4[5]];
    v21 = *(_QWORD *)v19;
    v20 = *((_QWORD *)v19 + 1);
    LODWORD(v19) = *((_DWORD *)v19 + 4);
    *(_QWORD *)&v58 = v21;
    *((_QWORD *)&v58 + 1) = v20;
    LODWORD(v59) = (_DWORD)v19;
    swift_bridgeObjectRetain();
    v53 = v17;
    v22 = sub_249F1F3AC();
    v55 = v14;
    *(_QWORD *)&v58 = sub_249E68CA8(v22, v23, &v57);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DC05A8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    *(_WORD *)(v18 + 12) = 2080;
    v24 = &v10[v4[14]];
    v26 = *((_QWORD *)v24 + 1);
    v25 = *((_QWORD *)v24 + 2);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v58 = sub_249E68CA8(v26, v25, &v57);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    _os_log_impl(&dword_249D98000, v15, (os_log_type_t)v53, "Creating generator for %s targeting %s", (uint8_t *)v18, 0x16u);
    v27 = v54;
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v27, -1, -1);
    MEMORY[0x24BD06618](v18, -1, -1);
  }
  else
  {
    sub_249DC05A8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    sub_249DC05A8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  }

  type metadata accessor for AppleDiffusionResourceFactory(0);
  *(_QWORD *)(v2 + 176) = static AppleDiffusionResourceFactory.shared()();
  v28 = *(void **)(a1 + v4[11]);
  *(_QWORD *)(v2 + 96) = v28;
  sub_249F1F1B4();
  v29 = v28;
  *(_QWORD *)(v2 + 104) = sub_249F1F1A8();
  v30 = a1 + v4[14];
  v32 = *(_QWORD *)(v30 + 8);
  v31 = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v2 + 112) = v32;
  *(_QWORD *)(v2 + 120) = v31;
  v33 = qword_2578D5CF0;
  swift_bridgeObjectRetain_n();
  if (v33 != -1)
    swift_once();
  v34 = qword_2578FF318;
  v35 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v35)
  {
    v36 = swift_bridgeObjectRetain();
    v37 = 0;
    while (1)
    {
      v38 = *(_QWORD *)(v34 + 8 * v37 + 32);
      if ((*(uint64_t (**)(uint64_t))(v38 + 88))(v36) == v32 && v39 == v31)
        break;
      v41 = sub_249F1FE2C();
      v36 = swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
        goto LABEL_19;
      if (v35 == ++v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
LABEL_19:
    v42 = swift_bridgeObjectRelease();
    (*(void (**)(__int128 *__return_ptr, uint64_t))(v38 + 112))(&v58, v42);
  }
  else
  {
LABEL_17:
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
  }
  v43 = (uint64_t)v56;
  swift_bridgeObjectRelease();
  sub_249DCB1B0((uint64_t)&v58, v2 + 128, &qword_2578D62F0);
  sub_249E9E238((uint64_t)&v58);
  v44 = v59;
  v45 = BYTE4(v59);
  *(_OWORD *)(v2 + 16) = v58;
  *(_DWORD *)(v2 + 32) = v44;
  *(_BYTE *)(v2 + 36) = v45;
  sub_249E9E238((uint64_t)&v58);
  v46 = BYTE4(v59);
  if ((BYTE4(v59) & 1) != 0)
    v47 = v59;
  else
    v47 = 1278226488;
  *(_OWORD *)(v2 + 40) = v58;
  *(_DWORD *)(v2 + 56) = v47;
  *(_BYTE *)(v2 + 60) = v46;
  sub_249E9E238((uint64_t)&v58);
  v48 = v59;
  v49 = BYTE4(v59);
  *(_OWORD *)(v2 + 64) = v58;
  *(_DWORD *)(v2 + 80) = v48;
  *(_BYTE *)(v2 + 84) = v49;
  *(_QWORD *)(v2 + 88) = sub_249DBFF2C();
  sub_249DC091C(a1, v43, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  type metadata accessor for DefinitionSessionAccessor();
  v50 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_249D9E308(v43, v50 + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC05A8(a1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v2 + 168) = v50;
  return v2;
}

uint64_t GenerativePlayground.hasRequiredResources.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249D9F0B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249D9F0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249D9F140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
        break;
      v12 = sub_249F1FE2C();
      v7 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        goto LABEL_14;
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    v18 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    sub_249DC05A8(v18, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    v16 = 1;
  }
  else
  {
LABEL_12:
    sub_249D9D9B0();
    v13 = (void *)swift_allocError();
    *(_QWORD *)v14 = v3;
    *(_QWORD *)(v14 + 8) = v2;
    *(_BYTE *)(v14 + 16) = 0;
    swift_willThrow();
    sub_249DC05A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);

    v16 = 0;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowPersonalizations.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowPersonalizations.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.allowPersonalizations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowTextRejection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowTextRejection.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.allowTextRejection.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.personalizationUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  return sub_249DCC274(v1 + *(int *)(v3 + 24), a1, &qword_2578D6288);
}

uint64_t GenerativePlayground.PromptAssignmentOptions.personalizationUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 24);
  return sub_249DC02EC(a1, v3);
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.personalizationUUID.modify())(_QWORD)
{
  type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.performLanguageCheck.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 28));
}

uint64_t GenerativePlayground.PromptAssignmentOptions.performLanguageCheck.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.performLanguageCheck.modify())(_QWORD)
{
  type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.languageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 32);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_DWORD *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.PromptAssignmentOptions.languageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  v5 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_DWORD *)(v5 + 16) = v4;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.languageCheckingParameters.modify())(_QWORD)
{
  type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.init()@<X0>(_WORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char *v8;

  *a1 = 257;
  v2 = (int *)type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  v3 = (char *)a1 + v2[6];
  v4 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *((_BYTE *)a1 + v2[7]) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6290);
  sub_249F1E8F0();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_249F21770;
  sub_249F1E8E4();
  v6 = sub_249DC0334(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  v8 = (char *)a1 + v2[8];
  *(_QWORD *)v8 = v6;
  *((_QWORD *)v8 + 1) = 5;
  *((_DWORD *)v8 + 4) = 1064514355;
  return result;
}

uint64_t sub_249D9F610@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_249DCAC7C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_249DC09B8(v3);
}

uint64_t sub_249D9F674(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_249DCAC4C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  sub_249DC09B8(v3);
  result = sub_249DC0A2C(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.eventsHandler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249DC09B8(*v0);
  return v1;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.eventsHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_249DC0A2C(*v2);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentInteractable.eventsHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_249D9F774@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = &unk_2578D6D38;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_249DC09B8(v3);
}

uint64_t sub_249D9F7D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = &unk_2578D6D30;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 16);
  sub_249DC09B8(v3);
  result = sub_249DC0A2C(v7);
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.ambiguityResolver.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_249DC09B8(v1);
  return v1;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.ambiguityResolver.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249DC0A2C(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentInteractable.ambiguityResolver.modify())()
{
  return nullsub_1;
}

double GenerativePlayground.PromptAssignmentInteractable.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t GenerativePlayground.assign(prompt:options:interactable:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  type metadata accessor for DefinitionSession();
  *(_QWORD *)(v5 + 48) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62A0);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  v7 = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  v8 = a4[1];
  *(_OWORD *)(v5 + 88) = *a4;
  *(_OWORD *)(v5 + 104) = v8;
  return swift_task_switch();
}

uint64_t sub_249D9F99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _WORD *v5;
  uint64_t v6;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  sub_249DCC274(*(_QWORD *)(v0 + 32), v3, &qword_2578D62A0);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  v5 = *(_WORD **)(v0 + 80);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(int **)(v0 + 64);
    *v5 = 257;
    v8 = (char *)v5 + v7[6];
    v9 = sub_249F1E8D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    *((_BYTE *)v5 + v7[7]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6290);
    sub_249F1E8F0();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_249F21770;
    sub_249F1E8E4();
    v11 = sub_249DC0334(v10);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v12 = (char *)v5 + v7[8];
    *(_QWORD *)v12 = v11;
    *((_QWORD *)v12 + 1) = 5;
    *((_DWORD *)v12 + 4) = 1064514355;
    sub_249DCC2FC(v6, &qword_2578D62A0);
  }
  else
  {
    sub_249D9E308(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80), type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  }
  v13 = *(_QWORD *)(v0 + 112);
  v18 = *(_OWORD *)(v0 + 80);
  v19 = *(_OWORD *)(v0 + 96);
  v17 = *(_OWORD *)(v0 + 16);
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v14;
  *(_OWORD *)(v14 + 16) = v17;
  *(_OWORD *)(v14 + 32) = v18;
  *(_OWORD *)(v14 + 48) = v19;
  *(_QWORD *)(v14 + 64) = v13;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v15;
  *v15 = v0;
  v15[1] = sub_249D9FBB0;
  return sub_249DEA4FC(*(_QWORD *)(v0 + 48), (uint64_t)&unk_2578D62B0, v14);
}

uint64_t sub_249D9FBB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_249DC05A8(*(_QWORD *)(v2 + 48), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249D9FC40()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 80), type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249D9FCA4()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 80), type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249D9FD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[18] = a8;
  v8[19] = v11;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a2;
  v8[13] = a3;
  v8[11] = a1;
  type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  v8[20] = swift_task_alloc();
  v9 = type metadata accessor for DefinitionSession();
  v8[21] = v9;
  v8[22] = *(_QWORD *)(v9 - 8);
  v8[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249D9FD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  sub_249E48CDC();
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 152);
  v13 = *(_OWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  v6 = type metadata accessor for _InternalCanceller();
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 192) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  sub_249DC091C(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(v4, v2, type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v7;
  type metadata accessor for GenerativePlayground.PromptAssignmentTask();
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 200) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249F1E8CC();
  sub_249D9E308(v1, v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 24) = v3;
  sub_249D9E174((__int128 *)(v0 + 16), v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  sub_249D9E308(v2, v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__assignmentOptions, type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  *(_OWORD *)(v0 + 56) = v13;
  *(_QWORD *)(v0 + 72) = v14;
  *(_QWORD *)(v0 + 80) = v15;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v10;
  *v10 = v0;
  v10[1] = sub_249D9FFAC;
  return sub_249E22C98(*(_QWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
}

uint64_t sub_249D9FFAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA0010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA0090()
{
  uint64_t v0;
  void *v1;
  id v2;
  unsigned __int8 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unsigned __int8 v9;

  v1 = *(void **)(v0 + 216);
  v2 = v1;
  sub_249E21DCC(v1, (uint64_t)&v8);
  v3 = v9;
  v4 = *(void **)(v0 + 216);
  if (v9 == 255)
  {
    swift_willThrow();
  }
  else
  {
    v5 = v8;
    sub_249DCC3CC();
    swift_allocError();
    *(_QWORD *)v6 = v5;
    *(_BYTE *)(v6 + 8) = v3;
    swift_willThrow();

  }
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall GenerativePlayground.dropPromptAssignment()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD000000000000016, 0x8000000249F33FF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D62C8;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D62E0, (uint64_t)v9);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249DA0320()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropPromptAssignment()();
}

uint64_t GenerativePlayground.dropPromptAssignment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA03C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA03E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = v0[11];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA0450()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 80) + *(int *)(*(_QWORD *)(v0 + 72) + 56);
  v2 = (int *)type metadata accessor for GenerationRecipe(0);
  v3 = v2[12];
  swift_bridgeObjectRelease();
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + v3) = MEMORY[0x24BEE4AF8];
  v5 = v2[19];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v5) = v4;
  if (qword_2578D5D88 != -1)
    swift_once();
  v7 = qword_2578FF430;
  v6 = *(_QWORD *)algn_2578FF438;
  v8 = qword_2578FF440;
  v9 = (uint64_t *)(v1 + v2[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v9 = v7;
  v9[1] = v6;
  v9[2] = v8;
  v10 = v2[22];
  if (*(_QWORD *)(*(_QWORD *)(v1 + v10) + 16))
  {
    sub_249DB7EA8(0);
    if ((v11 & 1) != 0)
    {
      v12 = sub_249DB7EA8(0);
      if ((v13 & 1) != 0)
      {
        v14 = v12;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v16 = *(_QWORD *)(v1 + v10);
        *(_QWORD *)(v1 + v10) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_249DBC8A4();
        sub_249DBBFA4(v14, v16);
        *(_QWORD *)(v1 + v10) = v16;
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_249E9F018();
  return swift_task_switch();
}

uint64_t sub_249DA05D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 96);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.recommendedPromptGuidanceSketchDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  __int128 v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;

  sub_249DCC274(v1 + 128, (uint64_t)v8, &qword_2578D62F0);
  v3 = v9;
  if (!v9)
  {
    result = sub_249DCC2FC((uint64_t)v8, &qword_2578D62F0);
    goto LABEL_5;
  }
  v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v11, v3, v4);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if ((v12 & 1) != 0)
  {
LABEL_5:
    v7 = 0uLL;
    v6 = 1;
    goto LABEL_6;
  }
  v6 = 0;
  v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(_BYTE *)(a1 + 16) = v6;
  return result;
}

uint64_t GenerativePlayground.promptGuidanceSketchDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  __int128 v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;

  sub_249DCC274(v1 + 128, (uint64_t)v8, &qword_2578D62F0);
  v3 = v9;
  if (!v9)
  {
    result = sub_249DCC2FC((uint64_t)v8, &qword_2578D62F0);
    goto LABEL_5;
  }
  v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v11, v3, v4);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if ((v12 & 1) != 0)
  {
LABEL_5:
    v7 = 0uLL;
    v6 = 1;
    goto LABEL_6;
  }
  v6 = 0;
  v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(_BYTE *)(a1 + 16) = v6;
  return result;
}

unint64_t GenerativePlayground.PromptGuidanceSketchAssignmentOptions.scribbleStrength.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentOptions.scribbleStrength.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.PromptGuidanceSketchAssignmentOptions.scribbleStrength.modify())()
{
  return nullsub_1;
}

void __swiftcall GenerativePlayground.PromptGuidanceSketchAssignmentOptions.init()(VisualGeneration::GenerativePlayground::PromptGuidanceSketchAssignmentOptions *__return_ptr retstr)
{
  retstr->scribbleStrength.value = 0.0;
  retstr->scribbleStrength.is_nil = 1;
}

uint64_t GenerativePlayground.assign(promptGuidanceSketch:options:eventsHandler:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 16) = a3;
  type metadata accessor for DefinitionSession();
  v8 = swift_task_alloc();
  v9 = *a1;
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 48) = v9;
  *(_BYTE *)(v5 + 80) = *((_BYTE *)a1 + 8);
  LODWORD(v9) = *(_DWORD *)a2;
  *(_BYTE *)(v5 + 60) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(v5 + 56) = v9;
  *(_BYTE *)(v5 + 81) = *(_BYTE *)(a2 + 5);
  return swift_task_switch();
}

uint64_t sub_249DA0894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v0 + 81))
    v2 = 0;
  else
    v2 = *(unsigned int *)(v0 + 56);
  v3 = *(_BYTE *)(v0 + 81) | *(_BYTE *)(v0 + 60) & 1;
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 168);
  v5 = *(id *)(v0 + 48);
  sub_249DC09B8(v1);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2578D8040
                                                                                          + dword_2578D8040);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_249DA0958;
  return v8(*(_QWORD *)(v0 + 40), v4, *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 80), v2 | ((unint64_t)v3 << 32), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249DA0958()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_249DC05A8(*(_QWORD *)(v2 + 40), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA09CC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA0A00()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA0A34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 88) = a7;
  *(_BYTE *)(v7 + 152) = a4;
  *(_QWORD *)(v7 + 64) = a2;
  *(_QWORD *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 56) = a1;
  v8 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA0AA0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  sub_249E48CDC();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_BYTE *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(void **)(v0 + 72);
  v5 = type metadata accessor for _InternalCanceller();
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 0;
  *(_QWORD *)(v6 + 16) = v7;
  sub_249DC091C(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v6;
  type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentTask();
  v8 = swift_allocObject();
  *(_QWORD *)(v0 + 128) = v8;
  v9 = v4;
  swift_retain();
  sub_249F1E8CC();
  sub_249D9E308(v1, v8+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v8 + 16) = v4;
  *(_BYTE *)(v8 + 24) = v2;
  sub_249D9E174((__int128 *)(v0 + 16), v8+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v10;
  *v10 = v0;
  v10[1] = sub_249DA0C40;
  return sub_249DE8270(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_249DA0C40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA0CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA0D1C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall GenerativePlayground.dropPromptGuidanceSketchAssignment()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD000000000000024, 0x8000000249F34010);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D6308;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D6310, (uint64_t)v9);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249DA0F04()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropPromptGuidanceSketchAssignment()();
}

uint64_t GenerativePlayground.dropPromptGuidanceSketchAssignment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA0FA8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA0FC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = v0[11];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA1034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(int *)(v2 + 56);
  v4 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 56) + v3;
  sub_249DC0768(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
  *(_QWORD *)(v4 + 32) = 0;
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  v5 = v1 + *(int *)(v2 + 28);
  sub_249DC0794(*(id *)v5, *(_BYTE *)(v5 + 8));
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = -1;
  return swift_task_switch();
}

void GenerativePlayground.drawOnImageBaseImageDimensions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;

  v2 = *(_BYTE *)(v1 + 36);
  v3 = 0uLL;
  if ((v2 & 1) == 0)
    v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v2;
}

void GenerativePlayground.drawOnImageSketchImageDimensions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;

  v2 = *(_BYTE *)(v1 + 84);
  v3 = 0uLL;
  if ((v2 & 1) == 0)
    v3 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v2;
}

void GenerativePlayground.drawOnImageSketchMaskDimensions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;

  v2 = *(_BYTE *)(v1 + 60);
  v3 = 0uLL;
  if ((v2 & 1) == 0)
    v3 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v2;
}

id GenerativePlayground.DrawOnImageConfiguration.baseImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

id GenerativePlayground.DrawOnImageConfiguration.sketchImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

id GenerativePlayground.DrawOnImageConfiguration.sketchMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

BOOL static GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode.hash(into:)()
{
  return sub_249F1FF70();
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC5ErrorO9hashValueSivg_0()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

BOOL sub_249DA11E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_249DA11FC()
{
  return sub_249F1FF70();
}

uint64_t sub_249DA1224()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

void GenerativePlayground.DrawOnImageAssignmentOptions.renderMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *GenerativePlayground.DrawOnImageAssignmentOptions.renderMode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*GenerativePlayground.DrawOnImageAssignmentOptions.renderMode.modify())()
{
  return nullsub_1;
}

VisualGeneration::GenerativePlayground::DrawOnImageAssignmentOptions __swiftcall GenerativePlayground.DrawOnImageAssignmentOptions.init(renderMode:)(VisualGeneration::GenerativePlayground::DrawOnImageAssignmentOptions::RenderMode renderMode)
{
  uint64_t v1;
  VisualGeneration::GenerativePlayground::DrawOnImageAssignmentOptions result;

  *(_BYTE *)v1 = *(_BYTE *)renderMode;
  *(_DWORD *)(v1 + 4) = 0;
  *(_BYTE *)(v1 + 8) = 1;
  result.renderMode = renderMode;
  return result;
}

unint64_t GenerativePlayground.DrawOnImageAssignmentOptions.scribbleStrength.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t GenerativePlayground.DrawOnImageAssignmentOptions.scribbleStrength.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  *(_BYTE *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.DrawOnImageAssignmentOptions.scribbleStrength.modify())()
{
  return nullsub_1;
}

id GenerativePlayground.DrawnOnImageAssignmentEventInfo.baseImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_249DC07A8(v2, v3);
}

id GenerativePlayground.DrawnOnImageAssignmentEventInfo.sketchMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)a1 = v2;
  v3 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_249DC07A8(v2, v3);
}

uint64_t GenerativePlayground.assign(baseImage:sketchImage:sketchMask:options:eventsHandler:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v7 + 24) = a6;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 16) = a5;
  type metadata accessor for DefinitionSession();
  v12 = swift_task_alloc();
  v13 = *a1;
  *(_QWORD *)(v7 + 40) = v12;
  *(_QWORD *)(v7 + 48) = v13;
  *(_BYTE *)(v7 + 96) = *((_BYTE *)a1 + 8);
  v14 = *a2;
  *(_BYTE *)(v7 + 97) = *((_BYTE *)a2 + 8);
  v15 = *a3;
  *(_QWORD *)(v7 + 56) = v14;
  *(_QWORD *)(v7 + 64) = v15;
  *(_BYTE *)(v7 + 98) = *((_BYTE *)a3 + 8);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)a4;
  *(_BYTE *)(v7 + 99) = *(_BYTE *)(a4 + 8);
  return swift_task_switch();
}

void sub_249DA13C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(void **)(v0 + 48);
  v1 = *(void **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(id *)(v0 + 64);
  v5 = v2;
  v6 = v1;
  sub_249DC09B8(v3);
  v7 = dword_2578D8038;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v8;
  *v8 = v0;
  v8[1] = sub_249DA14A8;
  __asm { BR              X10; sub_249DE9C78 }
}

uint64_t sub_249DA14A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_249DC05A8(*(_QWORD *)(v2 + 40), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA151C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA1550(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 104) = v12;
  *(_QWORD *)(v8 + 112) = v13;
  *(_BYTE *)(v8 + 178) = a8;
  *(_QWORD *)(v8 + 88) = a7;
  *(_QWORD *)(v8 + 96) = v11;
  *(_BYTE *)(v8 + 177) = a6;
  *(_BYTE *)(v8 + 176) = a4;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 80) = a5;
  *(_QWORD *)(v8 + 56) = a1;
  *(_QWORD *)(v8 + 64) = a2;
  v9 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA15D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  char v15;
  char v16;
  char v17;
  char v18;

  sub_249E48CDC();
  v1 = *(_QWORD *)(v0 + 136);
  v17 = *(_BYTE *)(v0 + 178);
  v18 = *(_BYTE *)(v0 + 96);
  v2 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 88);
  v15 = *(_BYTE *)(v0 + 176);
  v16 = *(_BYTE *)(v0 + 177);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v6 = type metadata accessor for _InternalCanceller();
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  sub_249DC091C(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v7;
  type metadata accessor for GenerativePlayground.DrawOnImageAssignmentTask();
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 152) = v9;
  v10 = v3;
  swift_retain();
  v11 = v5;
  v12 = v2;
  sub_249F1E8CC();
  sub_249D9E308(v1, v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v9 + 16) = v5;
  *(_BYTE *)(v9 + 24) = v15;
  *(_QWORD *)(v9 + 32) = v2;
  *(_BYTE *)(v9 + 40) = v16;
  *(_QWORD *)(v9 + 48) = v3;
  *(_BYTE *)(v9 + 56) = v17;
  sub_249D9E174((__int128 *)(v0 + 16), v9 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller);
  *(_BYTE *)(v9 + 57) = v18 & 1;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v13;
  *v13 = v0;
  v13[1] = sub_249DA17B8;
  return sub_249E4EB9C(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_249DA17B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA181C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA1894()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall GenerativePlayground.dropDrawOnImageAssignment()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD00000000000001BLL, 0x8000000249F34040);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D6330;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D6338, (uint64_t)v9);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249DA1A7C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropDrawOnImageAssignment()();
}

uint64_t GenerativePlayground.dropDrawOnImageAssignment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA1B20()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA1B3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = v0[11];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA1BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = v1 + *(int *)(v2 + 56);
  v4 = (int *)type metadata accessor for GenerationRecipe(0);
  v5 = v3 + v4[14];
  sub_249DC0768(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(void **)(v5 + 24));
  *(_QWORD *)(v5 + 32) = 0;
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  v6 = v3 + v4[15];
  sub_249DC0768(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(void **)(v6 + 24));
  *(_QWORD *)(v6 + 32) = 0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  v7 = v3 + v4[18];
  sub_249DC0768(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(void **)(v7 + 24));
  *(_QWORD *)(v7 + 32) = 0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  sub_249DC0768(*(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(void **)(v7 + 64));
  *(_OWORD *)(v7 + 65) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  v8 = v1 + *(int *)(v2 + 36);
  sub_249DC0824(*(void **)v8, *(_QWORD *)(v8 + 8), *(void **)(v8 + 16), *(_QWORD *)(v8 + 24), *(void **)(v8 + 32));
  *(_OWORD *)v8 = xmmword_249F21900;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 40) = 0;
  return swift_task_switch();
}

uint64_t GenerativePlayground.promptConditioningImage.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA1D28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA1D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA1DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = v1 + *(int *)(*(_QWORD *)(v0 + 56) + 32);
  v4 = *(void **)v3;
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)v2 = *(_QWORD *)v3;
  *(_BYTE *)(v2 + 8) = v5;
  sub_249DC07A8(v4, v5);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double GenerativePlayground.PromptConditioningImageFaceInfo.normalizedQuartzCoordinateCropRect.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t GenerativePlayground.promptConditioningImageFaces.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA1E7C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA1E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA1F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(int *)(*(_QWORD *)(v0 + 48) + 56);
  v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 80) + v2;
  if (*(_QWORD *)(v3 + 24))
  {
    v4 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v18 = MEMORY[0x24BEE4AF8];
      sub_249DB6758(0, v5, 0);
      v6 = 0;
      v7 = v18;
      v8 = *(_QWORD *)(v18 + 16);
      v9 = 32 * v8;
      do
      {
        v10 = *(_OWORD *)(v4 + v6 + 32);
        v11 = *(_OWORD *)(v4 + v6 + 48);
        v12 = *(_QWORD *)(v18 + 24);
        v13 = v8 + 1;
        if (v8 >= v12 >> 1)
        {
          v16 = *(_OWORD *)(v4 + v6 + 48);
          v17 = *(_OWORD *)(v4 + v6 + 32);
          sub_249DB6758(v12 > 1, v8 + 1, 1);
          v11 = v16;
          v10 = v17;
        }
        *(_QWORD *)(v18 + 16) = v13;
        v14 = v18 + v9 + v6;
        *(_OWORD *)(v14 + 32) = v10;
        *(_OWORD *)(v14 + 48) = v11;
        v6 += 32;
        v8 = v13;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    v7 = 0;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t GenerativePlayground.recommendedPromptConditioningImageDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  __int128 v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;

  sub_249DCC274(v1 + 128, (uint64_t)v8, &qword_2578D62F0);
  v3 = v9;
  if (!v9)
  {
    result = sub_249DCC2FC((uint64_t)v8, &qword_2578D62F0);
    goto LABEL_5;
  }
  v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 56))(&v11, v3, v4);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if ((v12 & 1) != 0)
  {
LABEL_5:
    v7 = 0uLL;
    v6 = 1;
    goto LABEL_6;
  }
  v6 = 0;
  v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(_BYTE *)(a1 + 16) = v6;
  return result;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowPersonalizations.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowPersonalizations.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.allowPersonalizations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowImageRejection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowImageRejection.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.allowImageRejection.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.generateCaptionFromImage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.generateCaptionFromImage.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.generateCaptionFromImage.modify())()
{
  return nullsub_1;
}

VisualGeneration::GenerativePlayground::PromptConditioningImageAssignmentOptions __swiftcall GenerativePlayground.PromptConditioningImageAssignmentOptions.init()()
{
  uint64_t v0;
  VisualGeneration::GenerativePlayground::PromptConditioningImageAssignmentOptions result;

  *(_WORD *)v0 = 257;
  *(_BYTE *)(v0 + 2) = 1;
  return result;
}

uint64_t GenerativePlayground.assign(promptConditioningImage:options:eventsHandler:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 16) = a3;
  type metadata accessor for DefinitionSession();
  v8 = swift_task_alloc();
  v9 = *a1;
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 48) = v9;
  *(_BYTE *)(v5 + 76) = *((_BYTE *)a1 + 8);
  LOWORD(v9) = *(_WORD *)a2;
  *(_BYTE *)(v5 + 74) = *(_BYTE *)(a2 + 2);
  *(_WORD *)(v5 + 72) = v9;
  return swift_task_switch();
}

uint64_t sub_249DA220C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  char *v9;

  if (*(_WORD *)(v0 + 72) == 2)
    v1 = 1;
  else
    v1 = *(_WORD *)(v0 + 72) & 1;
  if (*(_WORD *)(v0 + 72) == 2)
    v2 = 256;
  else
    v2 = *(_WORD *)(v0 + 72) & 0x100;
  if (*(_WORD *)(v0 + 72) == 2)
    v3 = 0x10000;
  else
    v3 = (*(unsigned __int16 *)(v0 + 72) | (*(unsigned __int8 *)(v0 + 74) << 16)) & 0x10000;
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 168);
  v6 = *(id *)(v0 + 48);
  sub_249DC09B8(v4);
  v9 = (char *)&dword_2578D8030 + dword_2578D8030;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v7;
  *v7 = v0;
  v7[1] = sub_249DA22EC;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v9)(*(_QWORD *)(v0 + 40), v5, *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 76), v2 | v1 | v3, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249DA22EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_249DC05A8(*(_QWORD *)(v2 + 40), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA2360()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA2394(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 88) = a7;
  *(_DWORD *)(v7 + 152) = a5;
  *(_BYTE *)(v7 + 156) = a4;
  *(_QWORD *)(v7 + 64) = a2;
  *(_QWORD *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 56) = a1;
  v8 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA2404()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  _QWORD *v12;

  sub_249E48CDC();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_DWORD *)(v0 + 152);
  v3 = *(_BYTE *)(v0 + 156);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v6 = type metadata accessor for _InternalCanceller();
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  sub_249DC091C(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v7;
  type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentTask();
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 128) = v9;
  v10 = v5;
  swift_retain();
  sub_249F1E8CC();
  sub_249D9E308(v1, v9+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v9 + 16) = v5;
  *(_BYTE *)(v9 + 24) = v3;
  sub_249D9E174((__int128 *)(v0 + 16), v9+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  v11 = (_BYTE *)(v9
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__options);
  *v11 = v2 & 1;
  v11[1] = BYTE1(v2) & 1;
  v11[2] = BYTE2(v2) & 1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  *v12 = v0;
  v12[1] = sub_249DA0C40;
  return sub_249E33958(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

Swift::Void __swiftcall GenerativePlayground.dropPromptConditioningImageAssignment()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94C78(0xD000000000000027, 0x8000000249F34060);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D6368;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D6370, (uint64_t)v9);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249DA2770()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropPromptConditioningImageAssignment()();
}

uint64_t GenerativePlayground.dropPromptConditioningImageAssignment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA2814()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA2830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = v0[11];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA28A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = v1 + *(int *)(v2 + 56);
  v4 = type metadata accessor for GenerationRecipe(0);
  v5 = v3 + *(int *)(v4 + 80);
  sub_249DC08D0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(void **)(v5 + 24));
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  v6 = v1 + *(int *)(v2 + 32);
  sub_249DC0794(*(id *)v6, *(_BYTE *)(v6 + 8));
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = -1;
  v7 = *(int *)(v4 + 88);
  if (*(_QWORD *)(*(_QWORD *)(v3 + v7) + 16))
  {
    sub_249DB7EA8(1);
    if ((v8 & 1) != 0)
    {
      v9 = sub_249DB7EA8(1);
      if ((v10 & 1) != 0)
      {
        v11 = v9;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v13 = *(_QWORD *)(v3 + v7);
        *(_QWORD *)(v3 + v7) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_249DBC8A4();
        sub_249DBBFA4(v11, v13);
        *(_QWORD *)(v3 + v7) = v13;
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_249E9F018();
  return swift_task_switch();
}

uint64_t GenerativePlayground.availableImageStyles.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_249DCC274(v0 + 128, (uint64_t)&v5, &qword_2578D62F0);
  if (v6)
  {
    sub_249D9E174(&v5, (uint64_t)v7);
    v1 = v8;
    v2 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 32) + 8))(v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_249DCC2FC((uint64_t)&v5, &qword_2578D62F0);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t GenerativePlayground._gmsFilteredAvailableImageStyles.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[35] = v0;
  v2 = sub_249F1EBC0();
  v1[36] = v2;
  v1[37] = *(_QWORD *)(v2 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v3 = sub_249F1EBD8();
  v1[40] = v3;
  v1[41] = *(_QWORD *)(v3 - 8);
  v1[42] = swift_task_alloc();
  v4 = sub_249F1EBFC();
  v1[43] = v4;
  v1[44] = *(_QWORD *)(v4 - 8);
  v1[45] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v1[46] = swift_task_alloc();
  v1[47] = type metadata accessor for DefinitionSession();
  v1[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA2B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (geteuid())
  {
    v1 = *(_QWORD *)(v0 + 280);
    v2 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 392) = v2;
    v3 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v0 + 400) = v3;
    if (v2 == 0xD000000000000029 && v3 == 0x8000000249F34090)
    {
LABEL_6:
      sub_249DCC274(v1 + 128, v0 + 136, &qword_2578D62F0);
      if (*(_QWORD *)(v0 + 160))
      {
        sub_249D9E174((__int128 *)(v0 + 136), v0 + 96);
        v5 = *(_QWORD *)(v0 + 120);
        v4 = *(_QWORD *)(v0 + 128);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v5);
        v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 32) + 8))(v5);
        __swift_destroy_boxed_opaque_existential_1(v0 + 96);
      }
      else
      {
        sub_249DCC2FC(v0 + 136, &qword_2578D62F0);
        v6 = MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)(v0 + 408) = v6;
      v14 = *(_QWORD *)(v6 + 16);
      *(_QWORD *)(v0 + 416) = v14;
      if (v14)
      {
        v15 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
        *(_QWORD *)(v0 + 424) = *(_QWORD *)(*(_QWORD *)(v0 + 280) + 168);
        *(_QWORD *)(v0 + 432) = v15;
        swift_beginAccess();
        *(_DWORD *)(v0 + 212) = *MEMORY[0x24BE3C018];
        v16 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(v0 + 440) = 0;
        *(_QWORD *)(v0 + 448) = v16;
        *(_BYTE *)(v0 + 209) = *(_BYTE *)(*(_QWORD *)(v0 + 408) + 32);
        return swift_task_switch();
      }
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    if ((sub_249F1FE2C() & 1) != 0)
    {
      v1 = *(_QWORD *)(v0 + 280);
      goto LABEL_6;
    }
  }
  if (!geteuid())
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v7 = sub_249F1EF38();
    __swift_project_value_buffer(v7, (uint64_t)qword_2578FF3F0);
    v8 = sub_249F1EF20();
    v9 = sub_249F1F820();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_249D98000, v8, v9, "GenerativeModelsAvailability can not be queried as root. Try again when runing as the logged in user (or mobile).", v10, 2u);
      MEMORY[0x24BD06618](v10, -1, -1);
    }

  }
  sub_249DCC274(*(_QWORD *)(v0 + 280) + 128, v0 + 56, &qword_2578D62F0);
  if (!*(_QWORD *)(v0 + 80))
  {
    sub_249DCC2FC(v0 + 56, &qword_2578D62F0);
LABEL_21:
    v13 = MEMORY[0x24BEE4AF8];
    goto LABEL_22;
  }
  sub_249D9E174((__int128 *)(v0 + 56), v0 + 16);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v11);
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 32) + 8))(v11);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_249DA2E84()
{
  uint64_t *v0;

  sub_249DC091C(v0[53] + v0[54], v0[48], (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

void sub_249DA2ED0()
{
  _QWORD *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;

  v1 = v0[48];
  v2 = (unsigned __int8 *)v0[46];
  sub_249DC091C(v1 + *(int *)(v0[47] + 56), (uint64_t)v2, type metadata accessor for GenerationRecipe);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v3 = *v2;
  sub_249DC05A8((uint64_t)v2, type metadata accessor for GenerationRecipe);
  __asm { BR              X9 }
}

uint64_t sub_249DA2F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t);
  char v11;
  void (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;

  v3 = v1 + 2;
  v4 = *(_BYTE *)(v0 + 209);
  v35 = *(_DWORD *)(v0 + 212);
  v27 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 344);
  *(_QWORD *)(v2 - 88) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v2 - 80) = v5;
  v28 = *(_QWORD *)(v0 + 328);
  v29 = *(_QWORD *)(v0 + 320);
  v31 = *(_QWORD *)(v0 + 312);
  v32 = *(_QWORD *)(v0 + 296);
  v33 = *(_QWORD *)(v0 + 304);
  v34 = *(_QWORD *)(v0 + 288);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  *(_BYTE *)(inited + 32) = v4;
  swift_bridgeObjectRetain();
  sub_249E0B0C0(v3, 0x8000000249F340F0, inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_249F21770;
  *(_BYTE *)(v8 + 32) = v4;
  swift_bridgeObjectRetain();
  sub_249E0B0C0(v3, 0x8000000249F340F0, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_249F1EBCC();
  sub_249F1EBF0();
  v9 = v29;
  v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v30(v6, v9);
  sub_249F1EBE4();
  v10 = *(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 104);
  v10(v33, v35, v34);
  v11 = sub_249F1EBB4();
  v12 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v12(v33, v34);
  v12(v31, v34);
  v13 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 88) + 8);
  v13(v27, *(_QWORD *)(v2 - 80));
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    *(_DWORD *)(v2 - 88) = *(_DWORD *)(v0 + 212);
    v14 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v2 - 80) = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 312);
    v36 = *(_QWORD *)(v0 + 320);
    v17 = *(_QWORD *)(v0 + 304);
    v18 = *(_QWORD *)(v0 + 288);
    swift_bridgeObjectRetain();
    sub_249F1EBCC();
    sub_249F1EBF0();
    v30(v15, v36);
    sub_249F1EBE4();
    v10(v17, *(unsigned int *)(v2 - 88), v18);
    v19 = sub_249F1EBB4();
    v12(v17, v18);
    v12(v16, v18);
    v13(v14, *(_QWORD *)(v2 - 80));
    swift_bridgeObjectRelease();
    v20 = *(char **)(v0 + 448);
    if ((v19 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v20 = *(char **)(v0 + 448);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v20 = sub_249DB22EC(0, *((_QWORD *)v20 + 2) + 1, 1, *(char **)(v0 + 448));
      v23 = *((_QWORD *)v20 + 2);
      v22 = *((_QWORD *)v20 + 3);
      if (v23 >= v22 >> 1)
        v20 = sub_249DB22EC((char *)(v22 > 1), v23 + 1, 1, v20);
      v24 = *(_BYTE *)(v0 + 209);
      *((_QWORD *)v20 + 2) = v23 + 1;
      v20[v23 + 32] = v24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(char **)(v0 + 448);
  }
  v25 = *(_QWORD *)(v0 + 440) + 1;
  if (v25 == *(_QWORD *)(v0 + 416))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(char *))(v0 + 8))(v20);
  }
  else
  {
    *(_QWORD *)(v0 + 440) = v25;
    *(_QWORD *)(v0 + 448) = v20;
    *(_BYTE *)(v0 + 209) = *(_BYTE *)(*(_QWORD *)(v0 + 408) + v25 + 32);
    return swift_task_switch();
  }
}

uint64_t GenerativePlayground.definitionSession.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_249DA3388()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA33A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Bool __swiftcall GenerativePlayground.imageStyle(_:canBeCombinedWith:)(VisualGeneration::ImageStyle _, Swift::OpaquePointer canBeCombinedWith)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v4 = *(_BYTE *)_;
  sub_249DCC274(v2 + 128, (uint64_t)&v9, &qword_2578D62F0);
  if (v10)
  {
    sub_249D9E174(&v9, (uint64_t)v11);
    v5 = v12;
    v6 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    LOBYTE(v9) = v4;
    v7 = (*(uint64_t (**)(__int128 *, void *, uint64_t))(*(_QWORD *)(v6 + 40) + 8))(&v9, canBeCombinedWith._rawValue, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_249DCC2FC((uint64_t)&v9, &qword_2578D62F0);
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t GenerativePlayground.assignedImageStyles.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA351C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA3538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA35A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + *(int *)(*(_QWORD *)(v0 + 48) + 56) + 64);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t GenerativePlayground.assign_async(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA365C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA3678()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA36E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;

  v1 = v0[11] + *(int *)(v0[10] + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
        break;
      v12 = sub_249F1FE2C();
      v7 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        goto LABEL_14;
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    swift_bridgeObjectRelease();
    v17 = (_QWORD *)swift_task_alloc();
    v0[14] = (uint64_t)v17;
    *v17 = v0;
    v17[1] = sub_249DA389C;
    return sub_249E997C8(v0[8]);
  }
  else
  {
LABEL_12:
    sub_249D9D9B0();
    v13 = swift_allocError();
    *(_QWORD *)v14 = v3;
    *(_QWORD *)(v14 + 8) = v2;
    *(_BYTE *)(v14 + 16) = 0;
    swift_willThrow();
    v0[15] = v13;
    return swift_task_switch();
  }
}

uint64_t sub_249DA389C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_249DA3904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 104);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA3990()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.add(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA3A34()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA3A50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA3AC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;

  v1 = v0[11] + *(int *)(v0[10] + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
        break;
      v12 = sub_249F1FE2C();
      v7 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        goto LABEL_14;
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    swift_bridgeObjectRelease();
    v17 = (_QWORD *)swift_task_alloc();
    v0[14] = (uint64_t)v17;
    *v17 = v0;
    v17[1] = sub_249DA3C74;
    return sub_249E99AE4(v0[8]);
  }
  else
  {
LABEL_12:
    sub_249D9D9B0();
    v13 = swift_allocError();
    *(_QWORD *)v14 = v3;
    *(_QWORD *)(v14 + 8) = v2;
    *(_BYTE *)(v14 + 16) = 0;
    swift_willThrow();
    v0[15] = v13;
    return swift_task_switch();
  }
}

uint64_t sub_249DA3C74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 120) = v0;
  return swift_task_switch();
}

uint64_t GenerativePlayground.remove(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA3D38()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA3D54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA3DC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;

  v1 = v0[11] + *(int *)(v0[10] + 56);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = qword_2578FF318;
  v6 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2)
        break;
      v12 = sub_249F1FE2C();
      v7 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        goto LABEL_14;
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    swift_bridgeObjectRelease();
    v17 = (_QWORD *)swift_task_alloc();
    v0[14] = (uint64_t)v17;
    *v17 = v0;
    v17[1] = sub_249DA3C74;
    return sub_249E99EE0(v0[8]);
  }
  else
  {
LABEL_12:
    sub_249D9D9B0();
    v13 = swift_allocError();
    *(_QWORD *)v14 = v3;
    *(_QWORD *)(v14 + 8) = v2;
    *(_BYTE *)(v14 + 16) = 0;
    swift_willThrow();
    v0[15] = v13;
    return swift_task_switch();
  }
}

uint64_t GenerativePlayground.removeAllImageStyles()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA3FD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA3FF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = v0[11];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA4060()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80) + *(int *)(*(_QWORD *)(v0 + 72) + 56);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 64) + 16))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 64) = MEMORY[0x24BEE4AF8];
    sub_249E9F018();
  }
  return swift_task_switch();
}

uint64_t GenerativePlayground.findPersonIndications()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for GenerationRecipe(0);
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for DefinitionSession();
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA4140()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA415C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA41C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD **)(v0 + 40);
  sub_249DC091C(v1 + *(int *)(*(_QWORD *)(v0 + 72) + 56), v2, type metadata accessor for GenerationRecipe);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v5 = (_QWORD *)(v2 + *(int *)(v3 + 84));
  v6 = v5[1];
  v7 = v5[2];
  *v4 = *v5;
  v4[1] = v6;
  v4[2] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249DC05A8(v2, type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.directableDemographicCategories.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_249DCC274(v1 + 128, (uint64_t)&v6, &qword_2578D62F0);
  if (v7)
  {
    sub_249D9E174(&v6, (uint64_t)v8);
    v4 = v9;
    v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 8))(v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    result = sub_249DCC2FC((uint64_t)&v6, &qword_2578D62F0);
    *a1 = 0;
  }
  return result;
}

uint64_t sub_249DA4318(int *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  int v7;
  int *v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  sub_249DCC274(v1 + 128, (uint64_t)&v9, &qword_2578D62F0);
  if (v10)
  {
    sub_249D9E174(&v9, (uint64_t)v11);
    v4 = v12;
    v3 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v3 + 16) + 8))(&v14, v4);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v6 = v14;
    if ((v2 & ~(_DWORD)v14) == 0)
      return result;
  }
  else
  {
    result = sub_249DCC2FC((uint64_t)&v9, &qword_2578D62F0);
    v6 = 0;
    if (!v2)
      return result;
  }
  v7 = v6 & ~v2;
  sub_249DCC2B8();
  swift_allocError();
  *v8 = v7;
  return swift_willThrow();
}

uint64_t sub_249DA4400(int a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = v1;
  if (qword_2578D5D78 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF3F0);
  v5 = sub_249F1EF20();
  v6 = sub_249F1F82C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = sub_249F1F3AC();
    sub_249E68CA8(v9, v10, &v23);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v5, v6, "Assigning demographic directive '%{public}s'", v7, 0xCu);
    swift_arrayDestroy();
    v11 = v8;
    v2 = v1;
    MEMORY[0x24BD06618](v11, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }

  LODWORD(v23) = a1;
  result = sub_249DA4318((int *)&v23);
  if (v2)
  {
    v13 = v2;
    v14 = v2;
    v15 = sub_249F1EF20();
    v16 = sub_249F1F820();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136446466;
      v19 = sub_249F1F3AC();
      sub_249E68CA8(v19, v20, &v23);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_getErrorValue();
      v21 = sub_249F1FF1C();
      sub_249E68CA8(v21, v22, &v23);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      MEMORY[0x24BD06618](v18, -1, -1);
      MEMORY[0x24BD06618](v17, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_249DA4768(int a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  if (qword_2578D5D78 != -1)
    swift_once();
  v8 = sub_249F1EF38();
  __swift_project_value_buffer(v8, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v9 = sub_249F1EF20();
  v10 = sub_249F1F82C();
  v27 = a2;
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v30 = v12;
    *(_DWORD *)v11 = 136446210;
    v29 = a3;
    swift_bridgeObjectRetain();
    v13 = sub_249F1F3AC();
    v28 = sub_249E68CA8(v13, v14, &v30);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v9, v10, "Assigning demographic directive '%{public}s'", v11, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    v4 = v3;
    MEMORY[0x24BD06618](v15, -1, -1);
    MEMORY[0x24BD06618](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LODWORD(v28) = a1;
  result = sub_249DA4318((int *)&v28);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v17 = v4;
    swift_bridgeObjectRetain();
    v18 = v4;
    v19 = sub_249F1EF20();
    v20 = sub_249F1F820();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v30 = v22;
      *(_DWORD *)v21 = 136446466;
      v28 = v27;
      v29 = a3;
      swift_bridgeObjectRetain();
      v23 = sub_249F1F3AC();
      v28 = sub_249E68CA8(v23, v24, &v30);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      v25 = sub_249F1FF1C();
      v28 = sub_249E68CA8(v25, v26, &v30);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      MEMORY[0x24BD06618](v22, -1, -1);
      MEMORY[0x24BD06618](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    return swift_willThrow();
  }
  return result;
}

uint64_t GenerativePlayground.genderDirective.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA4B94()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA4BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA4C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(int *)(*(_QWORD *)(v0 + 48) + 56);
  v3 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2 + 1);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t GenerativePlayground.specifyGenderDirective(_:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA4CE0()
{
  uint64_t v0;

  sub_249DA4400(1);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA4D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 104);
  v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v6 = v2 + v5;
  swift_beginAccess();
  sub_249DC091C(v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v7 = *(int *)(v3 + 56);
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v7 + 1) = v4;
  return swift_task_switch();
}

uint64_t sub_249DA4E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 96);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.dropGenderDirective()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA4EF4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA4F10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[10];
  v2 = v0[11];
  v3 = v0[9];
  v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v5 = v2 + v4;
  swift_beginAccess();
  sub_249DC091C(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v6 = *(int *)(v3 + 56);
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v6 + 1) = 3;
  return swift_task_switch();
}

uint64_t GenerativePlayground.skinToneDirective.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA5008()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA5024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA5090()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE **)(v0 + 40);
  v3 = *(int *)(*(_QWORD *)(v0 + 56) + 56);
  *v2 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 2);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.specifySkinToneDirective(_:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_BYTE *)(v2 + 104) = *a1;
  return swift_task_switch();
}

uint64_t sub_249DA5168()
{
  uint64_t v0;

  sub_249DA4400(2);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA51F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_BYTE *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v6 = v2 + v5;
  swift_beginAccess();
  sub_249DC091C(v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v7 = *(int *)(v4 + 56);
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v7 + 2) = v3;
  return swift_task_switch();
}

uint64_t GenerativePlayground.dropSkinToneDirective()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA52F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA530C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[10];
  v2 = v0[11];
  v3 = v0[9];
  v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v5 = v2 + v4;
  swift_beginAccess();
  sub_249DC091C(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v6 = *(int *)(v3 + 56);
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v6 + 2) = 10;
  return swift_task_switch();
}

uint64_t GenerativePlayground.personDescriptionDirective.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA5404()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA5420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA548C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(int *)(*(_QWORD *)(v0 + 48) + 56);
  v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v5);
}

uint64_t GenerativePlayground.specifyPersonDescriptionDirective(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_249DA5520()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_249DA4768(4, v0[2], v0[3]);
  v1 = *(_QWORD *)(v0[4] + 168);
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2578D6408 + dword_2578D6408);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_249DA55CC;
  return v4(v0[2], v0[3], v1);
}

uint64_t sub_249DA55CC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249DA5614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  type metadata accessor for DefinitionSession();
  v4[16] = swift_task_alloc();
  v5 = sub_249F1E4DC();
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA5698()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v0[10] = v0[12];
  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  v0[11] = v0[13];
  sub_249F1E4D0();
  sub_249D9E5BC();
  v4 = sub_249F1F9C4();
  v6 = v5;
  v0[20] = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[8] = v4;
  v0[9] = v6;
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (v7)
    return swift_task_switch();
  v9 = (_QWORD *)swift_task_alloc();
  v0[21] = v9;
  *v9 = v0;
  v9[1] = sub_249DA5788;
  return GenerativePlayground.dropPersonDescriptionDirective()();
}

uint64_t sub_249DA5788()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA57DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA5824()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  v2 = v0[14];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[22] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v2 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v5 = (_QWORD *)swift_task_alloc();
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_249DA58C0;
  return sub_249E8A370(v0[16], (uint64_t)(v0 + 8));
}

uint64_t sub_249DA58C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA5924()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[16];
  v2 = v0[14] + v0[22];
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA59B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA5A00()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA5A44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA5A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  type metadata accessor for DefinitionSession();
  v4[16] = swift_task_alloc();
  v5 = sub_249F1E4DC();
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA5B14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v0[10] = v0[12];
  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  v0[11] = v0[13];
  sub_249F1E4D0();
  sub_249D9E5BC();
  v4 = sub_249F1F9C4();
  v6 = v5;
  v0[20] = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[8] = v4;
  v0[9] = v6;
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (v7)
    return swift_task_switch();
  v9 = (_QWORD *)swift_task_alloc();
  v0[21] = v9;
  *v9 = v0;
  v9[1] = sub_249DA5C08;
  return KeyboardEmojiGenerator.dropPersonDescriptionDirective()();
}

uint64_t sub_249DA5C08()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA5C5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  v2 = v0[14];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[22] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v2 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v5 = (_QWORD *)swift_task_alloc();
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_249DA5CF8;
  return sub_249E8A370(v0[16], (uint64_t)(v0 + 8));
}

uint64_t sub_249DA5CF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA5D5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[16];
  v2 = v0[14] + v0[22];
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA5DEC()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t GenerativePlayground.dropPersonDescriptionDirective()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA5E8C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA5EA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = v0[11];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA5F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(int *)(*(_QWORD *)(v0 + 72) + 56);
  v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  return swift_task_switch();
}

uint64_t GenerativePlayground.currentGenerationState.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for GenerationRecipe(0);
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for GenerationState();
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for DefinitionSession();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA6054()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA6070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA60DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(int **)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 40);
  sub_249DC091C(v16, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v2, 1, 1, v6);
  v9 = v4 + v5[5];
  v8(v9, 1, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v1, v6);
  sub_249DC02EC(v2, v9);
  v10 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)(v4 + v5[6]);
  *v13 = v11;
  v13[1] = v12;
  sub_249DC091C(v1 + *(int *)(v3 + 56), v15, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249D9E308(v15, v4 + v5[7], type metadata accessor for GenerationRecipe);
  sub_249D9E308(v4, v17, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249DC05A8(v16, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.apply(generationState:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA62C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA62E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA6350()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[11];
  v2 = v0[10];
  v3 = v0[8];
  v4 = type metadata accessor for GenerationState();
  sub_249DC0960(v3 + *(int *)(v4 + 28), v1 + *(int *)(v2 + 56), type metadata accessor for GenerationRecipe);
  return swift_task_switch();
}

uint64_t GenerativePlayground.PreviewGenerationOptions.maximumRepresentations.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t GenerativePlayground.PreviewGenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.PreviewGenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PreviewGenerationOptions.engineeredPromptLanguageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_DWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.PreviewGenerationOptions.engineeredPromptLanguageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_DWORD *)(v1 + 24) = v4;
  return result;
}

uint64_t (*GenerativePlayground.PreviewGenerationOptions.engineeredPromptLanguageCheckingParameters.modify())()
{
  return nullsub_1;
}

void GenerativePlayground.PreviewGenerationOptions.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 1;
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t GenerativePlayground.PreviewGenerationSession.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_DWORD *)(a1 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.PreviewGenerationSession.eventStream.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.PreviewGenerationSession.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 24);
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.PreviewGenerationSession.isCancelled.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 28));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

Swift::Void __swiftcall GenerativePlayground.PreviewGenerationSession.cancel()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 28));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_249DA65A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_249DA65E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 28));
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1;
}

uint64_t sub_249DA6634(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 28));
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
}

uint64_t GenerativePlayground.PreviewRepresentation.generatedImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249DC091C(v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, a1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
}

uint64_t GenerativePlayground.PreviewRepresentation.deinit()
{
  uint64_t v0;

  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  return v0;
}

uint64_t GenerativePlayground.PreviewRepresentation.__deallocating_deinit()
{
  uint64_t v0;

  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  return swift_deallocClassInstance();
}

uint64_t GenerativePlayground.generatePreviews(options:generationID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 208) = a3;
  *(_QWORD *)(v4 + 216) = v3;
  *(_QWORD *)(v4 + 200) = a1;
  *(_QWORD *)(v4 + 224) = type metadata accessor for GenerativePlayground.PreviewGenerationSession(0);
  *(_QWORD *)(v4 + 232) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6440);
  *(_QWORD *)(v4 + 240) = v6;
  *(_QWORD *)(v4 + 248) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 256) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  *(_QWORD *)(v4 + 264) = v7;
  *(_QWORD *)(v4 + 272) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 280) = swift_task_alloc();
  *(_QWORD *)(v4 + 288) = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  *(_QWORD *)(v4 + 304) = type metadata accessor for GenerationState();
  *(_QWORD *)(v4 + 312) = swift_task_alloc();
  *(_QWORD *)(v4 + 320) = swift_task_alloc();
  *(_QWORD *)(v4 + 328) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v4 + 336) = swift_task_alloc();
  *(_QWORD *)(v4 + 344) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  *(_QWORD *)(v4 + 352) = swift_task_alloc();
  *(_QWORD *)(v4 + 360) = swift_task_alloc();
  v8 = sub_249F1E8D8();
  *(_QWORD *)(v4 + 368) = v8;
  *(_QWORD *)(v4 + 376) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 384) = swift_task_alloc();
  *(_QWORD *)(v4 + 392) = swift_task_alloc();
  *(_OWORD *)(v4 + 400) = *(_OWORD *)a2;
  *(_QWORD *)(v4 + 416) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(v4 + 432) = *(_DWORD *)(a2 + 24);
  return swift_task_switch();
}

uint64_t sub_249DA6914()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[46];
  v2 = v0[47];
  v3 = v0[45];
  sub_249DCC274(v0[26], v3, &qword_2578D6288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[45];
    sub_249F1E8CC();
    sub_249DCC2FC(v4, &qword_2578D6288);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[47] + 32))(v0[49], v0[45], v0[46]);
  }
  v0[53] = *(_QWORD *)(v0[27] + 168);
  return swift_task_switch();
}

uint64_t sub_249DA69C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 424) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA6A38()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *boxed_opaque_existential_1;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;

  v59 = (uint64_t *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(int **)(v0 + 328);
  v3 = v2[6];
  v4 = (uint64_t *)(v1 + v2[5]);
  v39 = *v4;
  v54 = v4[1];
  v40 = *((_DWORD *)v4 + 4);
  v60 = *(_QWORD *)(v1 + v3);
  v61 = *(_QWORD *)(v1 + v3 + 8);
  v5 = *(void **)(v1 + v2[11]);
  v6 = v1 + v2[14];
  if (*(_QWORD *)(v6 + 8) == 0xD000000000000029 && *(_QWORD *)(v6 + 16) == 0x8000000249F34090
    || (sub_249F1FE2C() & 1) != 0)
  {
    v7 = type metadata accessor for InputConditioner();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)(v0 + 80) = v7;
    *(_QWORD *)(v0 + 88) = &off_251B53448;
    *(_QWORD *)(v0 + 56) = v8;
    v9 = v5;
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  v58 = *(_DWORD *)(v0 + 432);
  v56 = *(_QWORD *)(v0 + 416);
  v51 = *(_QWORD *)(v0 + 408);
  v10 = *(_QWORD *)(v0 + 392);
  v53 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD **)(v0 + 376);
  v46 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 368);
  v14 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 352);
  v57 = v14;
  v15 = *(_QWORD *)(v0 + 336);
  v48 = *(_QWORD *)(v0 + 312);
  v42 = *(int **)(v0 + 304);
  v43 = *(_QWORD *)(v0 + 320);
  v50 = *(_QWORD *)(v0 + 296);
  v49 = *(_QWORD *)(v0 + 272);
  v47 = *(_QWORD *)(v0 + 264);
  v44 = *(_QWORD *)(v0 + 256);
  v45 = *(_QWORD *)(v0 + 288);
  v34 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 240);
  v37 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 280);
  v36 = *(int **)(v0 + 224);
  v33 = *(_QWORD *)(v0 + 216);
  v41 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRetain();
  v52 = v5;
  sub_249DC09B8(v60);
  sub_249DA7068(v0 + 56, v59);
  sub_249DCC2FC(v0 + 56, &qword_2578D6448);
  sub_249DC091C(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v16 = (void (*)(uint64_t, uint64_t, uint64_t))v11[2];
  v17 = v13;
  v16(v13, v10, v12);
  v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11[7];
  v18(v13, 0, 1, v12);
  v19 = v48 + v42[5];
  v18(v19, 1, 1, v12);
  v16(v48, v15, v12);
  sub_249DC02EC(v17, v19);
  v20 = (uint64_t *)(v15 + v2[5]);
  v21 = *v20;
  v22 = v20[1];
  v23 = (_QWORD *)(v48 + v42[6]);
  *v23 = v21;
  v23[1] = v22;
  sub_249DC091C(v15 + v2[14], v50, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v15, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249D9E308(v50, v48 + v42[7], type metadata accessor for GenerationRecipe);
  sub_249D9E308(v48, v43, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v24 = type metadata accessor for _InternalCanceller();
  v25 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = 0;
  *(_QWORD *)(v25 + 16) = v26;
  v27 = swift_task_alloc();
  *(_QWORD *)(v27 + 16) = v25;
  *(_QWORD *)(v27 + 24) = v57;
  *(_QWORD *)(v27 + 32) = v53;
  *(_QWORD *)(v27 + 40) = v51;
  *(_QWORD *)(v27 + 48) = v56;
  *(_DWORD *)(v27 + 56) = v58;
  *(_QWORD *)(v27 + 64) = v39;
  *(_QWORD *)(v27 + 72) = v54;
  *(_DWORD *)(v27 + 80) = v40;
  *(_QWORD *)(v27 + 88) = v43;
  *(_QWORD *)(v27 + 96) = v59;
  *(_QWORD *)(v27 + 104) = v60;
  *(_QWORD *)(v27 + 112) = v61;
  *(_QWORD *)(v27 + 120) = v52;
  *(_QWORD *)(v27 + 128) = v33;
  type metadata accessor for GenerativePlayground.PreviewGenerationEvent(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v44, *MEMORY[0x24BEE6A10], v35);
  sub_249F1F64C();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v16(v46, v10, v12);
  *(_QWORD *)(v0 + 120) = v24;
  *(_QWORD *)(v0 + 128) = &off_251B54510;
  *(_QWORD *)(v0 + 96) = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v38, v45, v47);
  v16(v37 + v36[6], v46, v12);
  v55 = *(_OWORD *)(v0 + 120);
  v28 = *(_QWORD *)(v0 + 120);
  v29 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v28);
  *(_OWORD *)(v0 + 160) = v55;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 136));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(boxed_opaque_existential_1, v29, v28);
  v31 = (void (*)(uint64_t, uint64_t))v11[1];
  swift_bridgeObjectRetain();
  swift_retain();
  v31(v46, v12);
  sub_249D9E174((__int128 *)(v0 + 136), v37 + v36[7]);
  *(_QWORD *)v37 = v53;
  *(_QWORD *)(v37 + 8) = v51;
  *(_QWORD *)(v37 + 16) = v56;
  *(_DWORD *)(v37 + 24) = v58;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v37 + v36[5], v38, v47);
  sub_249D9E308(v37, v41, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  sub_249DC0A2C(v60);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v47);
  v31(v10, v12);
  sub_249DC05A8(v43, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  sub_249DC05A8(v57, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA7068@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _UNKNOWN **v5;
  ValueMetadata *v6;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[40];

  sub_249DCC274(a1, (uint64_t)&v7, &qword_2578D6448);
  if (v8)
  {
    sub_249D9E174(&v7, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6EA8);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_249F21910;
    *(_QWORD *)(v3 + 56) = &type metadata for GenerationSeedAssigningRecipePreparer;
    *(_QWORD *)(v3 + 64) = &off_251B529A0;
    sub_249D9E1E4((uint64_t)v9, v3 + 72);
    *a2 = v3;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    v5 = &off_251B533A8;
    v6 = &type metadata for RecipePreparationSequence;
  }
  else
  {
    result = sub_249DCC2FC((uint64_t)&v7, &qword_2578D6448);
    v5 = &off_251B529A0;
    v6 = &type metadata for GenerationSeedAssigningRecipePreparer;
  }
  a2[3] = (uint64_t)v6;
  a2[4] = (uint64_t)v5;
  return result;
}

uint64_t sub_249DA713C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  __int128 v75[3];

  v69 = a7;
  v67 = a5;
  v68 = a6;
  v59 = a3;
  v73 = a15;
  v74 = a16;
  v72 = a14;
  v70 = a8;
  v71 = a13;
  v66 = a10;
  v64 = a9;
  v65 = a4;
  v61 = a12;
  v58 = a11;
  v18 = type metadata accessor for GenerationState();
  v62 = *(_QWORD *)(v18 - 8);
  v60 = *(_QWORD *)(v62 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v20;
  v21 = type metadata accessor for DefinitionSession();
  v57 = *(_QWORD *)(v21 - 8);
  v22 = *(_QWORD *)(v57 + 64);
  MEMORY[0x24BDAC7A8](v21);
  v54 = (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E88);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v23);
  v53 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v28;
  v56 = a2;
  swift_retain();
  v52 = v23;
  sub_249F1F610();
  v29 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v23);
  sub_249DC091C(v59, (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249DC091C(v58, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249D9E1E4(v61, (uint64_t)v75);
  v31 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v32 = (v25 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (*(unsigned __int8 *)(v57 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v34 = (v22 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 35) & 0xFFFFFFFFFFFFFFF8;
  v36 = (*(unsigned __int8 *)(v62 + 80) + v35 + 20) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  v37 = (v60 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v62 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v61 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v39 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v39 + v31, v53, v52);
  *(_QWORD *)(v39 + v32) = v56;
  sub_249D9E308(v54, v39 + v33, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v40 = v39 + v34;
  v41 = v64;
  v42 = v67;
  *(_QWORD *)v40 = v65;
  *(_QWORD *)(v40 + 8) = v42;
  *(_QWORD *)(v40 + 16) = v68;
  *(_DWORD *)(v40 + 24) = v69;
  v43 = v39 + v35;
  *(_QWORD *)v43 = v70;
  *(_QWORD *)(v43 + 8) = v41;
  *(_DWORD *)(v43 + 16) = v66;
  sub_249D9E308((uint64_t)v55, v39 + v36, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249D9E174(v75, v39 + v37);
  v44 = (uint64_t *)(v39 + v38);
  v46 = v71;
  v45 = v72;
  *v44 = v71;
  v44[1] = v45;
  v48 = v73;
  v47 = v74;
  *(_QWORD *)(v39 + v62) = v73;
  *(_QWORD *)(v39 + v61) = v47;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_249DC09B8(v46);
  v49 = v48;
  swift_retain();
  sub_249DA85E4((uint64_t)v63, (uint64_t)&unk_2578D6E98, v39);
  return swift_release();
}

uint64_t sub_249DA7524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v7 + 280) = v17;
  *(_QWORD *)(v7 + 288) = v18;
  *(_OWORD *)(v7 + 264) = v16;
  *(_OWORD *)(v7 + 248) = v15;
  *(_DWORD *)(v7 + 92) = v14;
  *(_OWORD *)(v7 + 232) = v13;
  *(_QWORD *)(v7 + 216) = a6;
  *(_QWORD *)(v7 + 224) = a7;
  *(_QWORD *)(v7 + 200) = a4;
  *(_QWORD *)(v7 + 208) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  *(_QWORD *)(v7 + 296) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  *(_QWORD *)(v7 + 304) = swift_task_alloc();
  v8 = type metadata accessor for GeneratedImage();
  *(_QWORD *)(v7 + 312) = v8;
  *(_QWORD *)(v7 + 320) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 328) = swift_task_alloc();
  *(_QWORD *)(v7 + 336) = swift_task_alloc();
  *(_QWORD *)(v7 + 344) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E88);
  *(_QWORD *)(v7 + 352) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 360) = v10;
  *(_QWORD *)(v7 + 368) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v7 + 376) = swift_task_alloc();
  type metadata accessor for GenerationState();
  *(_QWORD *)(v7 + 384) = swift_task_alloc();
  *(_QWORD *)(v7 + 392) = swift_task_alloc();
  *(_QWORD *)(v7 + 400) = type metadata accessor for GenerativePlayground.PreviewGenerationEvent(0);
  *(_QWORD *)(v7 + 408) = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6EA0);
  *(_QWORD *)(v7 + 416) = v11;
  *(_QWORD *)(v7 + 424) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 432) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA76C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unsigned __int8 v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 208);
  swift_storeEnumTagMultiPayload();
  sub_249F1F61C();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 440) = v5;
  v6 = v5(v1, v3);
  v7 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 448) = v7;
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 136);
  *(_QWORD *)(v0 + 456) = v8;
  v9 = atomic_load((unsigned __int8 *)v8(v6));
  if ((v9 & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v38 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_7:
    v39 = *(_QWORD *)(v0 + 432);
    v40 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
    v41 = *(_QWORD *)(v0 + 416);
    **(_QWORD **)(v0 + 408) = v38;
    swift_storeEnumTagMultiPayload();
    v42 = v38;
    sub_249F1F61C();
    v40(v39, v41);
    sub_249F1F628();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v10 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 408);
  v45 = *(_QWORD *)(v0 + 416);
  v13 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 224);
  *(_BYTE *)(v0 + 544) = 1;
  *(_BYTE *)(v0 + 528) = 1;
  *(_QWORD *)(v0 + 464) = *(_QWORD *)(v13 + *(int *)(type metadata accessor for DefinitionSession() + 60));
  *(_BYTE *)(v0 + 536) = 0;
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = v12;
  *(_BYTE *)(v11 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_249F1F61C();
  result = v5(v10, v45);
  if (v12 >= 1)
  {
    v15 = atomic_load((unsigned __int8 *)v8(result));
    if ((v15 & 1) == 0)
    {
      sub_249F1F670();
      v16 = *(_QWORD *)(v0 + 232);
      v17 = *(_QWORD *)(v0 + 224) == 1;
      *(_QWORD *)(v0 + 472) = 1;
      *(_BYTE *)(v0 + 89) = v17;
      v18 = *(_QWORD *)(v0 + 464);
      v19 = *(_QWORD *)(v0 + 392);
      v20 = *(_QWORD *)(v0 + 288);
      v44 = v19;
      v46 = *(void **)(v0 + 280);
      v21 = *(_QWORD *)(v0 + 264);
      v43 = *(_QWORD *)(v0 + 272);
      v22 = *(_QWORD *)(v0 + 248);
      v23 = *(_QWORD *)(v0 + 256);
      v24 = *(_QWORD *)(v0 + 240);
      v25 = *(_DWORD *)(v0 + 92);
      v26 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v0 + 176) = v16;
      *(_QWORD *)(v0 + 184) = v24;
      *(_DWORD *)(v0 + 192) = v25;
      sub_249DC091C(v22, v19, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
      sub_249D9E1E4(v23, v0 + 136);
      v27 = *(_BYTE *)(v0 + 544);
      v28 = *(_BYTE *)(v0 + 536);
      *(_QWORD *)(v0 + 16) = v18;
      v29 = *(_BYTE *)(v0 + 528);
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = 0;
      *(_DWORD *)(v0 + 40) = 0;
      *(_QWORD *)(v0 + 48) = 0;
      *(_QWORD *)(v0 + 56) = 0;
      *(_BYTE *)(v0 + 64) = v27;
      *(_QWORD *)(v0 + 72) = 1;
      *(_BYTE *)(v0 + 80) = v28;
      *(_DWORD *)(v0 + 84) = 0;
      *(_BYTE *)(v0 + 88) = v29;
      v30 = *(_QWORD *)(v20 + 104);
      *(_QWORD *)(v0 + 120) = type metadata accessor for _InternalCanceller();
      *(_QWORD *)(v0 + 128) = &off_251B54510;
      *(_QWORD *)(v0 + 96) = v26;
      type metadata accessor for GenerativePlayground.GenerationTask();
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_249DC09B8(v21);
      swift_retain();
      swift_retain();
      v31 = v46;
      *(_QWORD *)(v0 + 480) = sub_249E849B4((uint64_t *)(v0 + 176), v44, v0 + 136, (uint64_t *)(v0 + 16), v21, v43, v46, v30, v0 + 96);
      v32 = *(_QWORD *)(v0 + 376);
      v33 = *(_QWORD *)(v0 + 352);
      v34 = *(_QWORD *)(v0 + 360);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 16))(v32, *(_QWORD *)(v0 + 200), v33);
      v35 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v36 = swift_allocObject();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v36 + v35, v32, v33);
      *(_QWORD *)(v0 + 488) = sub_249DCC204;
      *(_QWORD *)(v0 + 496) = v36;
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 504) = v37;
      *v37 = v0;
      v37[1] = sub_249DA7BA8;
      return sub_249E7FCC0(*(_QWORD *)(v0 + 384), (uint64_t)sub_249DCC204, v36);
    }
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v38 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DA7BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 512) = a1;
  *(_QWORD *)(v3 + 520) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DA7C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  id v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v5 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)v5 = *(_QWORD *)(v0 + 472);
  *(_QWORD *)(v5 + 8) = v6;
  *(_BYTE *)(v5 + 16) = 0;
  v7 = 1;
  swift_storeEnumTagMultiPayload();
  sub_249F1F61C();
  v3(v2, v4);
  if (*(_QWORD *)(v1 + 16))
  {
    v8 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 320) + 80);
    sub_249DC091C(*(_QWORD *)(v0 + 512) + ((v8 + 32) & ~v8), *(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v7 = 0;
  }
  v9 = *(_QWORD *)(v0 + 312);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v7, 1, v9);
  swift_bridgeObjectRelease();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
  v13 = *(_QWORD *)(v0 + 488);
  if (v12 == 1)
  {
    v14 = *(_QWORD *)(v0 + 304);
    sub_249DC05A8(*(_QWORD *)(v0 + 384), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    sub_249DC0A2C(v13);
    swift_release();
    result = sub_249DCC2FC(v14, &qword_2578D6E70);
    if ((*(_BYTE *)(v0 + 89) & 1) == 0)
      goto LABEL_5;
LABEL_12:
    sub_249F1F628();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v42 = *(_QWORD *)(v0 + 472);
  v43 = *(uint64_t **)(v0 + 408);
  v61 = *(_QWORD *)(v0 + 416);
  v62 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v44 = *(_QWORD *)(v0 + 392);
  v60 = *(_QWORD *)(v0 + 488);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 344);
  v58 = *(_QWORD *)(v0 + 432);
  v47 = *(_QWORD *)(v0 + 328);
  v48 = *(_QWORD *)(v0 + 336);
  v49 = *(_QWORD *)(v0 + 296);
  sub_249D9E308(*(_QWORD *)(v0 + 304), v46, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v50 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
  sub_249E7039C(4, v49, v42, 0, 0, v48);
  sub_249DCC2FC(v49, &qword_2578D6288);
  sub_249DC091C(v48, v47, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DC091C(v45, v44, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  type metadata accessor for GenerativePlayground.PreviewRepresentation(0);
  v51 = swift_allocObject();
  sub_249D9E308(v47, v51 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249D9E308(v44, v51 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  *v43 = v51;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_249F1F61C();
  swift_release();
  swift_release();
  sub_249DC0A2C(v60);
  v62(v58, v61);
  sub_249DC05A8(v48, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DC05A8(v46, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  result = sub_249DC05A8(v45, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  if ((*(_BYTE *)(v0 + 89) & 1) != 0)
    goto LABEL_12;
LABEL_5:
  v16 = *(_QWORD *)(v0 + 472);
  v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  v18 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(uint64_t))(v0 + 456))(result));
  if ((v18 & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v21 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    goto LABEL_14;
  }
  v19 = *(void **)(v0 + 520);
  v20 = *(_QWORD *)(v0 + 224);
  sub_249F1F670();
  v21 = v19;
  if (v19)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    v52 = *(_QWORD *)(v0 + 432);
    v53 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
    v54 = *(_QWORD *)(v0 + 416);
    **(_QWORD **)(v0 + 408) = v21;
    swift_storeEnumTagMultiPayload();
    v55 = v21;
    sub_249F1F61C();
    v53(v52, v54);
    sub_249F1F628();

    goto LABEL_15;
  }
  *(_QWORD *)(v0 + 472) = v17;
  *(_BYTE *)(v0 + 89) = v17 == v20;
  v22 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 288);
  v59 = *(void **)(v0 + 280);
  v24 = *(_QWORD *)(v0 + 264);
  v56 = *(_QWORD *)(v0 + 272);
  v57 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 256);
  v27 = *(_DWORD *)(v0 + 92);
  v28 = *(_QWORD *)(v0 + 240);
  v29 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 184) = v28;
  *(_DWORD *)(v0 + 192) = v27;
  sub_249DC091C(v25, v57, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249D9E1E4(v26, v0 + 136);
  v30 = *(_BYTE *)(v0 + 544);
  v31 = *(_BYTE *)(v0 + 536);
  v32 = *(_BYTE *)(v0 + 528);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 16) = v22;
  *(_DWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = v30;
  *(_QWORD *)(v0 + 72) = 1;
  *(_BYTE *)(v0 + 80) = v31;
  *(_DWORD *)(v0 + 84) = 0;
  *(_BYTE *)(v0 + 88) = v32;
  v33 = *(_QWORD *)(v23 + 104);
  *(_QWORD *)(v0 + 120) = type metadata accessor for _InternalCanceller();
  *(_QWORD *)(v0 + 128) = &off_251B54510;
  *(_QWORD *)(v0 + 96) = v29;
  type metadata accessor for GenerativePlayground.GenerationTask();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249DC09B8(v24);
  swift_retain();
  swift_retain();
  v34 = v59;
  v35 = 0;
  v36 = 0;
  *(_QWORD *)(v0 + 480) = sub_249E849B4((uint64_t *)(v0 + 176), v57, v0 + 136, (uint64_t *)(v0 + 16), v24, v56, v59, v33, v0 + 96);
  if (v17 == 1)
  {
    v37 = *(_QWORD *)(v0 + 376);
    v38 = *(_QWORD *)(v0 + 352);
    v39 = *(_QWORD *)(v0 + 360);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 16))(v37, *(_QWORD *)(v0 + 200), v38);
    v40 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v36 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))(v36 + v40, v37, v38);
    v35 = sub_249DCC204;
  }
  *(_QWORD *)(v0 + 488) = v35;
  *(_QWORD *)(v0 + 496) = v36;
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v41;
  *v41 = v0;
  v41[1] = sub_249DA7BA8;
  return sub_249E7FCC0(*(_QWORD *)(v0 + 384), (uint64_t)v35, v36);
}

uint64_t sub_249DA829C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  id v5;

  sub_249DC0A2C(*(_QWORD *)(v0 + 488));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v4 = *(_QWORD *)(v0 + 416);
  **(_QWORD **)(v0 + 408) = v1;
  swift_storeEnumTagMultiPayload();
  v5 = v1;
  sub_249F1F61C();
  v3(v2, v4);
  sub_249F1F628();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DA83D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;

  v3 = type metadata accessor for GenerationState();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GenerativePlayground.PreviewGenerationEvent(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6EA0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a2, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_249D9E308((uint64_t)v15, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    sub_249DC091C((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E88);
    sub_249F1F61C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v19 = (uint64_t)v5;
    v20 = (uint64_t (*)(_QWORD))type metadata accessor for GenerationState;
  }
  else
  {
    if (EnumCaseMultiPayload == 5)
    {
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E88);
      sub_249F1F61C();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v20 = type metadata accessor for GenerativePlayground.GenerationEvent;
    v19 = (uint64_t)v15;
  }
  return sub_249DC05A8(v19, v20);
}

uint64_t sub_249DA85E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_249F1F604();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_249F1F5F8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_249DCC2FC(a1, &qword_2578D62B8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_249F1F5B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t GenerativePlayground.supportedImageDimensions.getter()
{
  return swift_bridgeObjectRetain();
}

void GenerativePlayground.defaultImageDimensions.getter(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 88);
  if (*(_QWORD *)(v2 + 16))
    *a1 = *(_OWORD *)(v2 + 32);
  else
    __break(1u);
}

uint64_t GenerativePlayground.generationSeed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v5 = sub_249F1EF38();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x69746172656E6567, 0xEE00646565536E6FLL, 0xD000000000000016, 0x8000000249F34150);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6468);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_WORD *)(v6 + 24) = 256;
  *(_QWORD *)(v6 + 32) = 0;
  swift_retain();
  v7 = dispatch_semaphore_create(0);
  v8 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = &unk_2578D6460;
  v9[6] = v1;
  v9[7] = v6;
  v10 = v7;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v4, (uint64_t)&unk_2578D6478, (uint64_t)v9);
  swift_release();
  result = sub_249F1F8E0();
  if ((*(_BYTE *)(v6 + 25) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 16);
    swift_release();
    swift_release();

    return v12;
  }
  return result;
}

void GenerativePlayground.generationSeed.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  dispatch_semaphore_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v8 = sub_249F1EF38();
  __swift_project_value_buffer(v8, (uint64_t)qword_2578FF3F0);
  sub_249E94A9C(0x69746172656E6567, 0xEE00646565536E6FLL, 0xD000000000000017, 0x8000000249F34170);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v2;
  *(_QWORD *)(v9 + 24) = a1;
  *(_BYTE *)(v9 + 32) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62D0);
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 1;
  *(_QWORD *)(v10 + 24) = 0;
  swift_retain();
  v11 = dispatch_semaphore_create(0);
  v12 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v11;
  v13[5] = &unk_2578D6488;
  v13[6] = v9;
  v13[7] = v10;
  v14 = v11;
  swift_retain();
  swift_retain();
  sub_249DA85E4((uint64_t)v7, (uint64_t)&unk_2578D6490, (uint64_t)v13);
  swift_release();
  sub_249F1F8E0();
  if ((*(_BYTE *)(v10 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_249DA8B1C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA8B78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA8B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA8C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 64) + *(int *)(*(_QWORD *)(v0 + 56) + 56);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(_BYTE *)(v2 + 80);
  sub_249DC05A8(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)v1 = v3;
  *(_BYTE *)(v1 + 8) = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.assignedGenerationSeed.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA8CC4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA8CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA8D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(unsigned __int8 *)(v1 + 80);
  sub_249DC05A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
}

uint64_t sub_249DA8DB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 112) = a4;
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 80) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA8E10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA8E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_BYTE *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v7 = v2 + v6;
  swift_beginAccess();
  sub_249DC091C(v7, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v8 = v1 + *(int *)(v4 + 56);
  *(_QWORD *)(v8 + 72) = v5;
  *(_BYTE *)(v8 + 80) = v3 & 1;
  return swift_task_switch();
}

uint64_t sub_249DA8EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 104);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.assign(generationSeed:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 80) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA8FB0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA8FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_BYTE *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v7 = v2 + v6;
  swift_beginAccess();
  sub_249DC091C(v7, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v8 = v1 + *(int *)(v3 + 56);
  *(_QWORD *)(v8 + 72) = v5;
  *(_BYTE *)(v8 + 80) = v4 & 1;
  return swift_task_switch();
}

void (*GenerativePlayground.generationSeed.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)a1 = GenerativePlayground.generationSeed.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return sub_249DA90A8;
}

void sub_249DA90A8(uint64_t a1)
{
  GenerativePlayground.generationSeed.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t GenerativePlayground.GenerationOptions.enableUpscaling.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t GenerativePlayground.GenerationOptions.enableUpscaling.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.enableUpscaling.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.maximumRepresentations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t GenerativePlayground.GenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.allowImageRejection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t GenerativePlayground.GenerationOptions.allowImageRejection.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.allowImageRejection.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.excludeIdentifyingStamp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t GenerativePlayground.GenerationOptions.excludeIdentifyingStamp.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.excludeIdentifyingStamp.modify())()
{
  return nullsub_1;
}

unint64_t GenerativePlayground.GenerationOptions.scribbleStrength.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

uint64_t GenerativePlayground.GenerationOptions.scribbleStrength.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  *(_BYTE *)(v1 + 24) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.scribbleStrength.modify())()
{
  return nullsub_1;
}

unint64_t GenerativePlayground.GenerationOptions.lcmScale.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32);
}

uint64_t GenerativePlayground.GenerationOptions.lcmScale.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  *(_BYTE *)(v1 + 32) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.lcmScale.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.engineeredPromptLanguageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_DWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.GenerationOptions.engineeredPromptLanguageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_DWORD *)(v1 + 56) = v4;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.engineeredPromptLanguageCheckingParameters.modify())()
{
  return nullsub_1;
}

void GenerativePlayground.GenerationOptions.init()(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1;
  *(_WORD *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 20) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
}

uint64_t GenerativePlayground.generatedImages(options:eventsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 96) = v3;
  *(_QWORD *)(v4 + 80) = a2;
  v6 = sub_249F1E8D8();
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 144) = v7;
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 176) = *(_QWORD *)(a1 + 48);
  *(_DWORD *)(v4 + 76) = *(_DWORD *)(a1 + 56);
  return swift_task_switch();
}

uint64_t sub_249DA92E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_DWORD *)(v0 + 76);
  v2 = *(_QWORD *)(v0 + 176);
  v6 = *(_OWORD *)(v0 + 144);
  v7 = *(_OWORD *)(v0 + 160);
  v5 = *(_OWORD *)(v0 + 128);
  sub_249F1E8CC();
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v2;
  *(_DWORD *)(v0 + 72) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v3;
  *v3 = v0;
  v3[1] = sub_249DA9388;
  return GenerativePlayground.generatedImages(options:generationID:eventsHandler:)(v0 + 16, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_249DA9388(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 200) = a1;
  return swift_task_switch();
}

uint64_t sub_249DA93FC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
}

uint64_t sub_249DA9448()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.generatedImages(options:generationID:eventsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v5 + 216) = a4;
  *(_QWORD *)(v5 + 224) = v4;
  *(_QWORD *)(v5 + 200) = a2;
  *(_QWORD *)(v5 + 208) = a3;
  v7 = sub_249F1F5D4();
  *(_QWORD *)(v5 + 232) = v7;
  *(_QWORD *)(v5 + 240) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 248) = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)(v5 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  *(_QWORD *)(v5 + 264) = swift_task_alloc();
  *(_QWORD *)(v5 + 272) = type metadata accessor for GenerationState();
  *(_QWORD *)(v5 + 280) = swift_task_alloc();
  *(_QWORD *)(v5 + 288) = swift_task_alloc();
  *(_QWORD *)(v5 + 296) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v5 + 304) = swift_task_alloc();
  *(_QWORD *)(v5 + 312) = swift_task_alloc();
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 320) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 336) = v8;
  *(_OWORD *)(v5 + 352) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v5 + 368) = *(_QWORD *)(a1 + 48);
  *(_DWORD *)(v5 + 76) = *(_DWORD *)(a1 + 56);
  return swift_task_switch();
}

uint64_t sub_249DA95C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 376) = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 168);
  return swift_task_switch();
}

uint64_t sub_249DA95E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 376) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DA9650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = v1 + *(int *)(*(_QWORD *)(v0 + 296) + 56);
  v52 = *(_QWORD *)(v0 + 296);
  if (*(_QWORD *)(v2 + 8) == 0xD000000000000029)
  {
    v3 = *(_QWORD *)(v0 + 296);
    if (*(_QWORD *)(v2 + 16) == 0x8000000249F34090)
      goto LABEL_5;
  }
  if ((sub_249F1FE2C() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 296);
LABEL_5:
    v50 = v3;
    v4 = *(void **)(v1 + *(int *)(v3 + 44));
    v5 = type metadata accessor for InputConditioner();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v0 + 144) = v5;
    *(_QWORD *)(v0 + 152) = &off_251B53448;
    *(_QWORD *)(v0 + 120) = v6;
    v7 = v4;
    goto LABEL_7;
  }
  *(_QWORD *)(v0 + 152) = 0;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  v1 = *(_QWORD *)(v0 + 312);
  v50 = *(_QWORD *)(v0 + 296);
LABEL_7:
  v8 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 280);
  v47 = *(_QWORD *)(v0 + 288);
  v48 = *(_QWORD *)(v0 + 360);
  v10 = *(_QWORD *)(v0 + 264);
  v11 = *(int **)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 256);
  v13 = *(_QWORD *)(v0 + 200);
  sub_249DA7068(v0 + 120, (uint64_t *)(v0 + 80));
  sub_249DCC2FC(v0 + 120, &qword_2578D6448);
  sub_249DC091C(v1, v8, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v14 = sub_249F1E8D8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v16(v10, v13, v14);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v17(v10, 0, 1, v14);
  v18 = v9 + v11[5];
  v17(v18, 1, 1, v14);
  v16(v9, v8, v14);
  sub_249DC02EC(v10, v18);
  v19 = (uint64_t *)(v8 + *(int *)(v50 + 20));
  v20 = *v19;
  v21 = v19[1];
  v22 = (_QWORD *)(v9 + v11[6]);
  *v22 = v20;
  v22[1] = v21;
  sub_249DC091C(v8 + *(int *)(v52 + 56), v12, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v8, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  sub_249D9E308(v12, v9 + v11[7], type metadata accessor for GenerationRecipe);
  sub_249D9E308(v9, v47, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  if (v48 == 1)
  {
    v23 = 0;
    LOBYTE(v24) = 0;
    LODWORD(v25) = 0;
    LODWORD(v26) = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v46 = *(_QWORD *)(v0 + 360);
    v45 = *(_QWORD *)(v0 + 352);
    v51 = *(_QWORD *)(v0 + 344);
    v30 = *(_QWORD *)(v0 + 328);
    v49 = *(_QWORD *)(v0 + 336);
    v31 = 1;
    v32 = 1;
    v33 = 1;
    v34 = 1;
    v44 = *(_QWORD *)(v0 + 320);
  }
  else
  {
    v35 = *(_QWORD *)(v0 + 336);
    v25 = HIDWORD(v35);
    v26 = HIDWORD(*(_QWORD *)(v0 + 344));
    v30 = *(_QWORD *)(v0 + 328);
    v44 = *(_QWORD *)(v0 + 320);
    v23 = v44 & 1;
    v32 = v35 & 1;
    v49 = v35;
    v51 = *(_QWORD *)(v0 + 344);
    v24 = (v35 >> 8) & 1;
    v33 = v51 & 1;
    v27 = *(_QWORD *)(v0 + 360);
    v45 = *(_QWORD *)(v0 + 352);
    v46 = v27;
    v34 = v45 & 1;
    v29 = *(_DWORD *)(v0 + 76);
    v28 = *(_QWORD *)(v0 + 368);
    v31 = v30;
  }
  *(_QWORD *)(v0 + 384) = v27;
  v36 = *(_QWORD *)(v0 + 312);
  v37 = *(_QWORD *)(v0 + 288);
  v39 = *(_QWORD *)(v0 + 216);
  v38 = *(_QWORD *)(v0 + 224);
  v40 = *(_QWORD *)(v0 + 208);
  *(_BYTE *)(v0 + 16) = v23;
  *(_QWORD *)(v0 + 24) = v31;
  *(_BYTE *)(v0 + 32) = v32;
  *(_BYTE *)(v0 + 33) = v24;
  *(_DWORD *)(v0 + 36) = v25;
  *(_BYTE *)(v0 + 40) = v33;
  *(_DWORD *)(v0 + 44) = v26;
  *(_BYTE *)(v0 + 48) = v34;
  *(_QWORD *)(v0 + 56) = v27;
  *(_QWORD *)(v0 + 64) = v28;
  *(_DWORD *)(v0 + 72) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v41;
  v41[2] = v0 + 16;
  v41[3] = v36;
  v41[4] = v37;
  v41[5] = v0 + 80;
  v41[6] = v38;
  v41[7] = v40;
  v41[8] = v39;
  sub_249DC0CA4(v44, v30, v49, v51, v45, v46);
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v42;
  *v42 = v0;
  v42[1] = sub_249DA9A3C;
  return sub_249F1FC58();
}

uint64_t sub_249DA9A3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249DA9AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 312);
  sub_249DC05A8(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_249DA9B70()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(void **)(v0 + 408);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 192) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 312);
    v4 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 232);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_249DC05A8(v4, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 312);
    sub_249DC05A8(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    sub_249DC05A8(v9, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249DA9D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[13] = a8;
  v8[14] = v10;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v8[7] = a1;
  v8[8] = a3;
  type metadata accessor for GenerationState();
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DA9DC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];
  int v31;
  uint64_t v32[3];
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  int v39;
  char v40;
  _QWORD v41[6];

  v1 = v0[16];
  v28 = v1;
  v29 = v0[12];
  v2 = v0[9];
  v3 = v0[8];
  v27 = *(_BYTE *)v3;
  v25 = v0[11];
  v26 = *(_QWORD *)(v3 + 8);
  v21 = v0[10];
  v22 = *(_QWORD *)(v3 + 40);
  v0[17] = v22;
  v24 = *(_QWORD *)(v3 + 48);
  v23 = *(_DWORD *)(v3 + 56);
  v4 = (int *)type metadata accessor for DefinitionSession();
  v5 = *(_QWORD *)(v2 + v4[15]);
  v0[18] = v5;
  v6 = v5;
  v7 = type metadata accessor for _InternalCanceller();
  v8 = swift_allocObject();
  v0[19] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 0;
  *(_QWORD *)(v8 + 16) = v9;
  v10 = v2 + v4[5];
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  LODWORD(v10) = *(_DWORD *)(v10 + 16);
  v30[0] = v11;
  v30[1] = v12;
  v31 = v10;
  sub_249DC091C(v21, v1, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249D9E1E4(v25, (uint64_t)(v0 + 2));
  v32[0] = v6;
  v32[1] = v22;
  v32[2] = v24;
  v33 = v23;
  v34 = 0;
  v35 = 0;
  v36 = 1;
  v37 = v26;
  v38 = v27;
  v39 = 0;
  v40 = 1;
  v13 = (uint64_t *)(v2 + v4[6]);
  v15 = *v13;
  v14 = v13[1];
  v16 = *(void **)(v2 + v4[11]);
  v17 = *(_QWORD *)(v29 + 104);
  v41[3] = v7;
  v41[4] = &off_251B54510;
  v41[0] = v8;
  type metadata accessor for GenerativePlayground.GenerationTask();
  swift_allocObject();
  sub_249DCB914(v3);
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_249DC09B8(v15);
  v18 = v16;
  swift_retain();
  swift_retain();
  v0[20] = sub_249E849B4(v30, v28, (uint64_t)(v0 + 2), v32, v15, v14, v16, v17, (uint64_t)v41);
  v19 = (_QWORD *)swift_task_alloc();
  v0[21] = v19;
  *v19 = v0;
  v19[1] = sub_249DAA010;
  return sub_249E7FCC0(v0[15], v0[13], v0[14]);
}

uint64_t sub_249DAA010(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = *(_QWORD *)(v4 + 120);
    *(_QWORD *)(v4 + 184) = a1;
    sub_249DC05A8(v5, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  }
  return swift_task_switch();
}

uint64_t sub_249DAA094()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD **)(v0 + 56);
  swift_release();
  swift_release();
  *v2 = v1;
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DAA11C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.ImageGenerationOptions.maximumRepresentations.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t GenerativePlayground.ImageGenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.ImageGenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

VisualGeneration::GenerativePlayground::ImageGenerationOptions __swiftcall GenerativePlayground.ImageGenerationOptions.init()()
{
  _QWORD *v0;
  VisualGeneration::GenerativePlayground::ImageGenerationOptions result;

  *v0 = 1;
  return result;
}

void GenerativePlayground.ImageGenerationSession.options.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

uint64_t GenerativePlayground.ImageGenerationSession.eventStream.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.ImageGenerationSession.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__identifier;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.ImageGenerationSession.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall GenerativePlayground.ImageGenerationSession.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t GenerativePlayground.ImageGenerationSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__identifier;
  v4 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  return v0;
}

uint64_t GenerativePlayground.ImageGenerationSession.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__identifier;
  v4 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249DAA3FC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__identifier;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249DAA444()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249DAA498()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t GenerativePlayground.generateImages(from:generationID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64F8);
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D8);
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 - 8);
  v3[18] = swift_task_alloc();
  type metadata accessor for DefinitionSession();
  v3[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v3[20] = swift_task_alloc();
  v6 = sub_249F1E8D8();
  v3[21] = v6;
  v3[22] = *(_QWORD *)(v6 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DAA5F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[21];
  v2 = v0[22];
  v3 = v0[20];
  sub_249DCC274(v0[11], v3, &qword_2578D6288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[20];
    sub_249F1E8CC();
    sub_249DCC2FC(v4, &qword_2578D6288);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[22] + 32))(v0[24], v0[20], v0[21]);
  }
  v0[25] = *(_QWORD *)(v0[12] + 168);
  return swift_task_switch();
}

uint64_t sub_249DAA6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 200) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DAA71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 168);
  v17 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = type metadata accessor for _InternalCanceller();
  v8 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6450);
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 0;
  *(_QWORD *)(v8 + 16) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v2;
  v10[4] = v6;
  v10[5] = v1;
  v10[6] = v5;
  type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BEE6A10], v13);
  sub_249F1F64C();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v17, v1, v16);
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = &off_251B54510;
  *(_QWORD *)(v0 + 16) = v8;
  type metadata accessor for GenerativePlayground.ImageGenerationSession(0);
  v11 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v11 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__identifier, v17, v16);
  sub_249D9E174((__int128 *)(v0 + 16), v11 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  *(_QWORD *)(v11 + 16) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v11 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream, v14, v19);
  sub_249DC05A8(v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_249DAA948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;

  v60 = a4;
  v61 = a6;
  v57 = a5;
  v64 = sub_249F1E8D8();
  v62 = *(_QWORD *)(v64 - 8);
  v59 = *(_QWORD *)(v62 + 64);
  MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for DefinitionSession();
  v50 = *((_QWORD *)v10 - 1);
  v11 = *(_QWORD *)(v50 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38);
  v46 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v46 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v16;
  v49 = a2;
  swift_retain();
  v17 = v12;
  v45 = v12;
  sub_249F1F610();
  v18 = v10[6];
  v19 = a3 + v10[5];
  v20 = *(_QWORD *)v19;
  v51 = *(_QWORD *)(v19 + 8);
  v52 = v20;
  v54 = *(_DWORD *)(v19 + 16);
  v21 = *(_QWORD *)(a3 + v18 + 8);
  v55 = *(_QWORD *)(a3 + v18);
  v56 = v21;
  v53 = *(void **)(a3 + v10[11]);
  v22 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 1, 1, v22);
  v23 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v17);
  sub_249DC091C(a3, (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v24 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v63, v57, v64);
  v25 = v23;
  v26 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v27 = (v13 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v50 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v29 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (*(unsigned __int8 *)(v24 + 80) + v29 + 8) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v31 = (v59 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 27) & 0xFFFFFFFFFFFFFFF8;
  v59 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0;
  *(_QWORD *)(v34 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v34 + v26, v47, v45);
  v35 = (uint64_t)v48;
  *(_QWORD *)(v34 + v27) = v49;
  sub_249D9E308(v35, v34 + v28, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_QWORD *)(v34 + v29) = v60;
  (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v34 + v30, v63, v64);
  v36 = v34 + v31;
  v37 = v51;
  *(_QWORD *)v36 = v52;
  *(_QWORD *)(v36 + 8) = v37;
  *(_DWORD *)(v36 + 16) = v54;
  v38 = (uint64_t *)(v34 + v32);
  v40 = v55;
  v39 = v56;
  *v38 = v55;
  v38[1] = v39;
  v41 = v53;
  *(_QWORD *)(v34 + v59) = v53;
  *(_QWORD *)(v34 + v33) = v61;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249DC09B8(v40);
  swift_bridgeObjectRetain();
  v42 = v41;
  swift_retain();
  sub_249DA85E4((uint64_t)v58, (uint64_t)&unk_2578D6E68, v34);
  return swift_release();
}

uint64_t sub_249DAACBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 272) = v17;
  *(_QWORD *)(v8 + 280) = v18;
  *(_DWORD *)(v8 + 92) = v15;
  *(_OWORD *)(v8 + 240) = v14;
  *(_OWORD *)(v8 + 256) = v16;
  *(_QWORD *)(v8 + 224) = a7;
  *(_QWORD *)(v8 + 232) = a8;
  *(_QWORD *)(v8 + 208) = a5;
  *(_QWORD *)(v8 + 216) = a6;
  *(_QWORD *)(v8 + 200) = a4;
  type metadata accessor for GeneratedImageIndications();
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  v9 = type metadata accessor for GeneratedImage();
  *(_QWORD *)(v8 + 312) = v9;
  *(_QWORD *)(v8 + 320) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  *(_QWORD *)(v8 + 344) = swift_task_alloc();
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  *(_QWORD *)(v8 + 360) = type metadata accessor for ImageProvenance();
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38);
  *(_QWORD *)(v8 + 376) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 384) = v11;
  *(_QWORD *)(v8 + 392) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 400) = swift_task_alloc();
  *(_QWORD *)(v8 + 408) = type metadata accessor for GenerationState();
  *(_QWORD *)(v8 + 416) = swift_task_alloc();
  *(_QWORD *)(v8 + 424) = swift_task_alloc();
  *(_QWORD *)(v8 + 432) = swift_task_alloc();
  *(_QWORD *)(v8 + 440) = swift_task_alloc();
  *(_QWORD *)(v8 + 448) = type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  *(_QWORD *)(v8 + 456) = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E58);
  *(_QWORD *)(v8 + 464) = v12;
  *(_QWORD *)(v8 + 472) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 480) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DAAEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  unsigned __int8 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  void *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _QWORD, uint64_t, uint64_t);
  __CVBuffer *v39;
  size_t Width;
  size_t Height;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  v2 = *(_QWORD *)(v0 + 472);
  v1 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 208);
  swift_storeEnumTagMultiPayload();
  sub_249F1F61C();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 488) = v5;
  v6 = v5(v1, v3);
  v7 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 496) = v7;
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 136);
  *(_QWORD *)(v0 + 504) = v8;
  v9 = atomic_load((unsigned __int8 *)v8(v6));
  if ((v9 & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v22 = (void *)swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_12:
    v23 = *(_QWORD *)(v0 + 480);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    v25 = *(_QWORD *)(v0 + 464);
    **(_QWORD **)(v0 + 456) = v22;
    swift_storeEnumTagMultiPayload();
    v26 = v22;
    sub_249F1F61C();
    v24(v23, v25);
    sub_249F1F628();

LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v10 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 224);
  *(_BYTE *)(v0 + 648) = 1;
  *(_BYTE *)(v0 + 632) = 1;
  *(_QWORD *)(v0 + 512) = *(_QWORD *)(v10 + *(int *)(type metadata accessor for DefinitionSession() + 60));
  *(_BYTE *)(v0 + 640) = 1;
  v67 = v11;
  v69 = v11 >> 62;
  if (v11 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v12 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  *(_QWORD *)(v0 + 520) = v12;
  v13 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 456);
  v14 = *(_QWORD *)(v0 + 464);
  *(_QWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = v12;
  *(_BYTE *)(v15 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  sub_249F1F61C();
  v5(v13, v14);
  if (!v69)
  {
    v16 = v67;
    v17 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 528) = v17;
    if (v17)
      goto LABEL_6;
LABEL_15:
    swift_bridgeObjectRelease();
    sub_249F1F628();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = v67;
  swift_bridgeObjectRetain();
  result = sub_249F1FBEC();
  *(_QWORD *)(v0 + 528) = result;
  if (!result)
    goto LABEL_15;
LABEL_6:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v20 = MEMORY[0x24BD056B8](0, *(_QWORD *)(v0 + 224));
    v19 = v20;
LABEL_9:
    v21 = atomic_load((unsigned __int8 *)v8(v20));
    if ((v21 & 1) != 0)
    {
      sub_249F1F5D4();
      sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v22 = (void *)swift_allocError();
      sub_249F1F1E4();
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)(v0 + 544) = 1;
      *(_QWORD *)(v0 + 536) = v19;
      sub_249F1F670();
      v27 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
      *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
      v28 = v19 + v27;
      if (*(_BYTE *)(v28 + 8) == 2)
      {
        v62 = *(_QWORD *)(v0 + 512);
        v29 = *(_QWORD *)(v0 + 440);
        v66 = *(_QWORD *)(v0 + 432);
        v68 = *(_QWORD *)(v0 + 424);
        v30 = *(_QWORD *)(v0 + 408);
        v64 = *(_QWORD *)(v0 + 264);
        v65 = *(void **)(v0 + 272);
        v61 = *(_DWORD *)(v0 + 92);
        v63 = *(_QWORD *)(v0 + 256);
        v60 = *(_QWORD *)(v0 + 248);
        v31 = *(_QWORD *)(v0 + 232);
        v58 = *(_QWORD *)(v0 + 280);
        v59 = *(_QWORD *)(v0 + 240);
        v70 = *(_QWORD *)(v0 + 208);
        v32 = *(void **)v28;
        v33 = v19 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState;
        *(_QWORD *)(v0 + 560) = *(_QWORD *)v28;
        sub_249DC091C(v33, v29, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
        v34 = v29 + *(int *)(v30 + 20);
        v35 = v32;
        sub_249DCC2FC(v34, &qword_2578D6288);
        v36 = sub_249F1E8D8();
        *(_QWORD *)(v0 + 568) = v36;
        v37 = *(_QWORD *)(v36 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v34, v31, v36);
        v38 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56);
        *(_QWORD *)(v0 + 576) = v38;
        v38(v34, 0, 1, v36);
        v39 = (__CVBuffer *)v35;
        Width = CVPixelBufferGetWidth(v39);
        Height = CVPixelBufferGetHeight(v39);
        LODWORD(v36) = CVPixelBufferGetPixelFormatType(v39);

        type metadata accessor for ResolvedImage.HiddenBufferData();
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_249F21920;
        v43 = v36;
        v44 = v29 + *(int *)(v30 + 28);
        v45 = type metadata accessor for GenerationRecipe(0);
        v46 = v44 + *(int *)(v45 + 68);
        sub_249DC0768(*(_QWORD *)v46, *(_QWORD *)(v46 + 8), *(_QWORD *)(v46 + 16), *(void **)(v46 + 24));
        *(_QWORD *)v46 = Width;
        *(_QWORD *)(v46 + 8) = Height;
        *(_QWORD *)(v46 + 16) = v43;
        *(_QWORD *)(v46 + 24) = v32;
        *(_QWORD *)(v46 + 32) = v42;
        v47 = v44 + *(int *)(v45 + 40);
        *(_DWORD *)v47 = 0;
        *(_BYTE *)(v47 + 4) = 0;
        sub_249DC091C(v29, v66, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
        LOBYTE(v46) = *(_BYTE *)(v0 + 648);
        LOBYTE(v43) = *(_BYTE *)(v0 + 640);
        LOBYTE(v32) = *(_BYTE *)(v0 + 632);
        v48 = *(_QWORD *)(v58 + 104);
        v49 = type metadata accessor for _InternalCanceller();
        *(_QWORD *)(v0 + 136) = v70;
        *(_QWORD *)(v0 + 160) = v49;
        *(_QWORD *)(v0 + 168) = &off_251B54510;
        *(_QWORD *)(v0 + 176) = v59;
        *(_QWORD *)(v0 + 184) = v60;
        *(_DWORD *)(v0 + 192) = v61;
        sub_249DC091C(v66, v68, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
        v72 = 0;
        memset(v71, 0, sizeof(v71));
        *(_QWORD *)(v0 + 16) = v62;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = 0;
        *(_DWORD *)(v0 + 40) = 0;
        *(_QWORD *)(v0 + 48) = 0;
        *(_QWORD *)(v0 + 56) = 0;
        *(_BYTE *)(v0 + 64) = v46;
        *(_QWORD *)(v0 + 72) = 1;
        *(_BYTE *)(v0 + 80) = v43;
        *(_DWORD *)(v0 + 84) = 0;
        *(_BYTE *)(v0 + 88) = (_BYTE)v32;
        sub_249DCC274(v0 + 136, v0 + 96, &qword_2578D6E80);
        type metadata accessor for GenerativePlayground.GenerationTask();
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_249DC09B8(v63);
        swift_retain();
        swift_retain();
        v50 = v65;
        *(_QWORD *)(v0 + 584) = sub_249E849B4((uint64_t *)(v0 + 176), v68, (uint64_t)v71, (uint64_t *)(v0 + 16), v63, v64, v65, v48, v0 + 96);
        sub_249DCC2FC(v0 + 136, &qword_2578D6E80);
        sub_249DC05A8(v66, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
        v51 = *(_QWORD *)(v0 + 400);
        v52 = *(_QWORD *)(v0 + 376);
        v53 = *(_QWORD *)(v0 + 384);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 16))(v51, *(_QWORD *)(v0 + 200), v52);
        v54 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        v55 = swift_allocObject();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 32))(v55 + v54, v51, v52);
        *(_QWORD *)(v0 + 600) = v55;
        *(_QWORD *)(v0 + 592) = sub_249DCB900;
        v56 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 608) = v56;
        *v56 = v0;
        v56[1] = sub_249DAB708;
        return sub_249E7FCC0(*(_QWORD *)(v0 + 416), (uint64_t)sub_249DCB900, v55);
      }
      swift_bridgeObjectRelease();
      sub_249DC1324();
      v22 = (void *)swift_allocError();
      *v57 = 1;
      swift_willThrow();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    goto LABEL_12;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 32);
    v20 = swift_retain();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DAB708(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[77] = a1;
  v3[78] = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    sub_249DC05A8(v3[52], (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  return swift_task_switch();
}

uint64_t sub_249DAB790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  char v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unsigned __int8 v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t, uint64_t);
  __CVBuffer *v64;
  size_t Height;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  _BYTE *v80;
  size_t Width;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[32];
  uint64_t v101;

  v97 = *(_QWORD *)(v0 + 616);
  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 480);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
  v6 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 464);
  sub_249DC091C(*(_QWORD *)(v0 + 536) + *(_QWORD *)(v0 + 552) + *(int *)(*(_QWORD *)(v0 + 312) + 20), *(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = v2;
  *(_BYTE *)(v6 + 16) = 0;
  v7 = 1;
  swift_storeEnumTagMultiPayload();
  sub_249F1F61C();
  v4(v3, v5);
  if (*(_QWORD *)(v97 + 16))
  {
    v8 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 320) + 80);
    sub_249DC091C(*(_QWORD *)(v0 + 616) + ((v8 + 32) & ~v8), *(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v7 = 0;
  }
  v9 = *(_QWORD *)(v0 + 312);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v7, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v12 = *(void **)(v0 + 560);
    v13 = *(_QWORD *)(v0 + 368);
    v14 = *(_QWORD *)(v0 + 304);
    sub_249DC0A2C(*(_QWORD *)(v0 + 592));

    swift_release();
    swift_release();
    sub_249DC05A8(v13, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    sub_249DCC2FC(v14, &qword_2578D6E70);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 576);
    v16 = *(_QWORD *)(v0 + 568);
    v18 = *(_QWORD *)(v0 + 360);
    v17 = *(_QWORD *)(v0 + 368);
    v19 = *(_QWORD *)(v0 + 344);
    v20 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 296);
    sub_249D9E308(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 352), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    v15(v21, 1, 1, v16);
    sub_249E7039C(4, v21, *(_QWORD *)(v17 + *(int *)(v18 + 24)), 0, *(_QWORD *)(v17 + *(int *)(v18 + 28)), v19);
    sub_249DCC2FC(v21, &qword_2578D6288);
    if (*(_BYTE *)(v19 + *(int *)(v20 + 24)) == 2)
    {
      v22 = *(_QWORD *)(v0 + 336);
      v23 = *(_QWORD *)(v0 + 344);
      v24 = *(_QWORD *)(v0 + 328);
      v25 = *(_QWORD *)(v0 + 312);
      v26 = *(_BYTE **)(v0 + 288);
      v27 = *(_QWORD *)(v0 + 536) + *(_QWORD *)(v0 + 552);
      sub_249DC091C(v23, v24, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v28 = *(int *)(v25 + 24);
      v29 = *(_BYTE *)(v27 + v28);
      sub_249DC091C(v24 + v28, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
      *v26 = v29;
      v30 = *(void **)v24;
      v31 = *(_BYTE *)(v24 + 8);
      sub_249DC091C(v24 + *(int *)(v25 + 20), v22 + *(int *)(v25 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
      *(_QWORD *)v22 = v30;
      *(_BYTE *)(v22 + 8) = v31;
      sub_249DC091C((uint64_t)v26, v22 + *(int *)(v25 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
      v32 = v30;
      sub_249DC05A8((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
      sub_249DC05A8(v24, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8(v23, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249D9E308(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    }
    v92 = *(_QWORD *)(v0 + 592);
    v33 = *(void **)(v0 + 560);
    v34 = *(_QWORD *)(v0 + 480);
    v90 = *(_QWORD *)(v0 + 464);
    v98 = *(_QWORD *)(v0 + 368);
    v35 = *(_QWORD *)(v0 + 344);
    v94 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    v95 = *(_QWORD *)(v0 + 352);
    sub_249DC091C(v35, *(_QWORD *)(v0 + 456), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    swift_storeEnumTagMultiPayload();
    sub_249F1F61C();
    swift_release();
    swift_release();

    sub_249DC0A2C(v92);
    v94(v34, v90);
    sub_249DC05A8(v35, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC05A8(v95, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC05A8(v98, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  }
  v36 = *(_QWORD *)(v0 + 544);
  v37 = *(_QWORD *)(v0 + 528);
  result = sub_249DC05A8(*(_QWORD *)(v0 + 440), (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v39 = *(_QWORD *)(v0 + 224);
  if (v36 == v37)
  {
    swift_bridgeObjectRelease();
    sub_249F1F628();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v40 = *(_QWORD *)(v0 + 544);
  if ((v39 & 0xC000000000000001) != 0)
  {
    v41 = MEMORY[0x24BD056B8](*(_QWORD *)(v0 + 544));
    v42 = *(_QWORD *)(v0 + 544);
    v43 = v42 + 1;
    if (!__OFADD__(v42, 1))
    {
LABEL_12:
      v44 = atomic_load((unsigned __int8 *)(*(uint64_t (**)(void))(v0 + 504))());
      if ((v44 & 1) != 0)
      {
        sub_249F1F5D4();
        sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        v46 = (void *)swift_allocError();
        sub_249F1F1E4();
        swift_willThrow();
        goto LABEL_16;
      }
      v45 = *(void **)(v0 + 624);
      *(_QWORD *)(v0 + 544) = v43;
      *(_QWORD *)(v0 + 536) = v41;
      sub_249F1F670();
      if (v45)
      {
        v46 = v45;
LABEL_16:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_17:
        swift_release();
        swift_bridgeObjectRelease();
        v47 = *(_QWORD *)(v0 + 480);
        v48 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
        v49 = *(_QWORD *)(v0 + 464);
        **(_QWORD **)(v0 + 456) = v46;
        swift_storeEnumTagMultiPayload();
        v50 = v46;
        sub_249F1F61C();
        v48(v47, v49);
        sub_249F1F628();

        goto LABEL_18;
      }
      goto LABEL_23;
    }
  }
  else
  {
    if (v40 >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v41 = *(_QWORD *)(v39 + 8 * v40 + 32);
    swift_retain();
    v43 = v40 + 1;
    if (!__OFADD__(v40, 1))
      goto LABEL_12;
  }
  __break(1u);
LABEL_23:
  v51 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  v52 = v41 + v51;
  v53 = *(_QWORD *)(v0 + 512);
  if (*(_BYTE *)(v52 + 8) != 2)
  {
    swift_bridgeObjectRelease();
    sub_249DC1324();
    v46 = (void *)swift_allocError();
    *v80 = 1;
    swift_willThrow();
    swift_release();
    goto LABEL_17;
  }
  v54 = *(_QWORD *)(v0 + 440);
  v96 = *(_QWORD *)(v0 + 432);
  v99 = *(_QWORD *)(v0 + 424);
  v55 = *(_QWORD *)(v0 + 408);
  v83 = *(_QWORD *)(v0 + 280);
  v91 = *(_QWORD *)(v0 + 264);
  v93 = *(void **)(v0 + 272);
  v88 = *(_DWORD *)(v0 + 92);
  v89 = *(_QWORD *)(v0 + 256);
  v56 = *(_QWORD *)(v0 + 232);
  v86 = *(_QWORD *)(v0 + 240);
  v87 = *(_QWORD *)(v0 + 248);
  v85 = *(_QWORD *)(v0 + 208);
  v57 = *(void **)v52;
  v58 = v41 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState;
  *(_QWORD *)(v0 + 560) = *(_QWORD *)v52;
  sub_249DC091C(v58, v54, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v59 = v54 + *(int *)(v55 + 20);
  v60 = v57;
  sub_249DCC2FC(v59, &qword_2578D6288);
  v61 = sub_249F1E8D8();
  *(_QWORD *)(v0 + 568) = v61;
  v82 = v53;
  v62 = *(_QWORD *)(v61 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v59, v56, v61);
  v63 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56);
  *(_QWORD *)(v0 + 576) = v63;
  v63(v59, 0, 1, v61);
  v64 = (__CVBuffer *)v60;
  Width = CVPixelBufferGetWidth(v64);
  Height = CVPixelBufferGetHeight(v64);
  LODWORD(v56) = CVPixelBufferGetPixelFormatType(v64);

  type metadata accessor for ResolvedImage.HiddenBufferData();
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_249F21920;
  v67 = v56;
  v68 = v54 + *(int *)(v55 + 28);
  v69 = type metadata accessor for GenerationRecipe(0);
  v70 = v68 + *(int *)(v69 + 68);
  sub_249DC0768(*(_QWORD *)v70, *(_QWORD *)(v70 + 8), *(_QWORD *)(v70 + 16), *(void **)(v70 + 24));
  *(_QWORD *)v70 = Width;
  *(_QWORD *)(v70 + 8) = Height;
  *(_QWORD *)(v70 + 16) = v67;
  *(_QWORD *)(v70 + 24) = v57;
  *(_QWORD *)(v70 + 32) = v66;
  v71 = v68 + *(int *)(v69 + 40);
  *(_DWORD *)v71 = 0;
  *(_BYTE *)(v71 + 4) = 0;
  sub_249DC091C(v54, v96, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  LOBYTE(v67) = *(_BYTE *)(v0 + 648);
  LOBYTE(v57) = *(_BYTE *)(v0 + 640);
  LOBYTE(v68) = *(_BYTE *)(v0 + 632);
  v84 = *(_QWORD *)(v83 + 104);
  *(_QWORD *)(v0 + 160) = type metadata accessor for _InternalCanceller();
  *(_QWORD *)(v0 + 168) = &off_251B54510;
  *(_QWORD *)(v0 + 136) = v85;
  *(_QWORD *)(v0 + 176) = v86;
  *(_QWORD *)(v0 + 184) = v87;
  *(_DWORD *)(v0 + 192) = v88;
  sub_249DC091C(v96, v99, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v101 = 0;
  memset(v100, 0, sizeof(v100));
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 16) = v82;
  *(_DWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = v67;
  *(_QWORD *)(v0 + 72) = 1;
  *(_BYTE *)(v0 + 80) = (_BYTE)v57;
  *(_DWORD *)(v0 + 84) = 0;
  *(_BYTE *)(v0 + 88) = v68;
  sub_249DCC274(v0 + 136, v0 + 96, &qword_2578D6E80);
  type metadata accessor for GenerativePlayground.GenerationTask();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249DC09B8(v89);
  swift_retain();
  swift_retain();
  v72 = v93;
  *(_QWORD *)(v0 + 584) = sub_249E849B4((uint64_t *)(v0 + 176), v99, (uint64_t)v100, (uint64_t *)(v0 + 16), v89, v91, v93, v84, v0 + 96);
  sub_249DCC2FC(v0 + 136, &qword_2578D6E80);
  sub_249DC05A8(v96, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v73 = 0;
  v74 = 0;
  if (v43 == 1)
  {
    v75 = *(_QWORD *)(v0 + 400);
    v76 = *(_QWORD *)(v0 + 376);
    v77 = *(_QWORD *)(v0 + 384);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 16))(v75, *(_QWORD *)(v0 + 200), v76);
    v78 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    v74 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v77 + 32))(v74 + v78, v75, v76);
    v73 = sub_249DCB900;
  }
  *(_QWORD *)(v0 + 600) = v74;
  *(_QWORD *)(v0 + 592) = v73;
  v79 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 608) = v79;
  *v79 = v0;
  v79[1] = sub_249DAB708;
  return sub_249E7FCC0(*(_QWORD *)(v0 + 416), (uint64_t)v73, v74);
}

uint64_t sub_249DAC1CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  id v7;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 440);
  sub_249DC0A2C(*(_QWORD *)(v0 + 592));

  swift_release();
  swift_release();
  sub_249DC05A8(v2, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = *(void **)(v0 + 624);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
  v6 = *(_QWORD *)(v0 + 464);
  **(_QWORD **)(v0 + 456) = v3;
  swift_storeEnumTagMultiPayload();
  v7 = v3;
  sub_249F1F61C();
  v5(v4, v6);
  sub_249F1F628();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DAC374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v20;

  v3 = type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E58);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GenerationState();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a2, (uint64_t)v15, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_249D9E308((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    sub_249DC091C((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38);
    sub_249F1F61C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = (uint64_t)v12;
    v18 = (uint64_t (*)(_QWORD))type metadata accessor for GenerationState;
  }
  else
  {
    v18 = type metadata accessor for GenerativePlayground.GenerationEvent;
    v17 = (uint64_t)v15;
  }
  return sub_249DC05A8(v17, v18);
}

uint64_t GenerativePlayground.generateImages(options:generationID:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[25] = a2;
  v3[26] = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64F8);
  v3[27] = v5;
  v3[28] = *(_QWORD *)(v5 - 8);
  v3[29] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D8);
  v3[30] = v6;
  v3[31] = *(_QWORD *)(v6 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v3[34] = swift_task_alloc();
  v3[35] = type metadata accessor for GenerationState();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = type metadata accessor for DefinitionSession();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v7 = sub_249F1E8D8();
  v3[44] = v7;
  v3[45] = *(_QWORD *)(v7 - 8);
  v3[46] = swift_task_alloc();
  v8 = swift_task_alloc();
  v9 = *a1;
  v3[47] = v8;
  v3[48] = v9;
  return swift_task_switch();
}

uint64_t sub_249DAC6E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = v0[44];
  v2 = v0[45];
  v3 = v0[43];
  sub_249DCC274(v0[25], v3, &qword_2578D6288);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[49] = (uint64_t)v4;
  if (v4(v3, 1, v1) == 1)
  {
    v5 = v0[43];
    sub_249F1E8CC();
    sub_249DCC2FC(v5, &qword_2578D6288);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[45] + 32))(v0[47], v0[43], v0[44]);
  }
  v0[50] = *(_QWORD *)(v0[26] + 168);
  return swift_task_switch();
}

uint64_t sub_249DAC7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 400) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DAC810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  int *v69;
  uint64_t *v70;
  uint64_t v71[2];
  int v72;
  uint64_t v73[3];
  int v74;
  int64x2_t v75;
  char v76;
  uint64_t v77;
  char v78;
  int v79;
  char v80;
  _BYTE v81[32];
  uint64_t v82;

  v1 = *(_QWORD *)(v0 + 376);
  v70 = (uint64_t *)(v0 + 16);
  v68 = v0 + 96;
  v3 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v48 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 288);
  v63 = *(_QWORD *)(v0 + 320);
  v65 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 272);
  v7 = *(int **)(v0 + 280);
  sub_249DC091C(v63, v5, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v9(v4, v1, v3);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v10(v4, 0, 1, v3);
  v11 = v6 + v7[5];
  v10(v11, 1, 1, v3);
  v9(v6, v5, v3);
  sub_249DC02EC(v4, v11);
  v12 = (uint64_t *)(v5 + *(int *)(v48 + 20));
  v13 = *v12;
  v14 = v12[1];
  v15 = (_QWORD *)(v6 + v7[6]);
  *v15 = v13;
  v15[1] = v14;
  sub_249DC091C(v5 + *(int *)(v48 + 56), v8, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v5, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v69 = v7;
  sub_249D9E308(v8, v6 + v7[7], type metadata accessor for GenerationRecipe);
  sub_249D9E308(v6, v65, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v16 = v63 + *(int *)(v48 + 56);
  if (*(_QWORD *)(v16 + 8) == 0xD000000000000029 && *(_QWORD *)(v16 + 16) == 0x8000000249F34090
    || (sub_249F1FE2C() & 1) != 0)
  {
    v17 = *(_QWORD *)(v0 + 320);
    v18 = *(int **)(v0 + 304);
    v19 = *(void **)(v17 + v18[11]);
    v20 = type metadata accessor for InputConditioner();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v19;
    *(_QWORD *)(v0 + 80) = v20;
    *(_QWORD *)(v0 + 88) = &off_251B53448;
    *(_QWORD *)(v0 + 56) = v21;
    v22 = v19;
    v23 = v0 + 56;
  }
  else
  {
    v23 = v0 + 56;
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    v17 = *(_QWORD *)(v0 + 320);
    v18 = *(int **)(v0 + 304);
  }
  v24 = *(_QWORD *)(v0 + 384);
  v66 = *(_QWORD *)(v0 + 352);
  v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
  v26 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 296);
  v62 = *(_QWORD *)(v0 + 256);
  v64 = *(_QWORD *)(v0 + 328);
  v57 = *(_QWORD *)(v0 + 264);
  v59 = *(_QWORD *)(v0 + 248);
  v61 = *(_QWORD *)(v0 + 240);
  v49 = v26;
  v51 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 208);
  v53 = *(_QWORD *)(v0 + 232);
  v55 = *(_QWORD *)(v0 + 216);
  sub_249DA7068(v23, v70);
  sub_249DCC2FC(v23, &qword_2578D6448);
  v28 = *(_QWORD *)(v17 + v18[15]);
  v29 = v17 + *(int *)(v48 + 20);
  v30 = *(_QWORD *)v29;
  v31 = *(_QWORD *)(v29 + 8);
  LODWORD(v29) = *(_DWORD *)(v29 + 16);
  v71[0] = v30;
  v71[1] = v31;
  v72 = v29;
  sub_249DC091C(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249D9E1E4((uint64_t)v70, v68);
  v73[1] = 0;
  v73[2] = 0;
  v73[0] = v28;
  v74 = 0;
  v75 = vdupq_n_s64(0x200uLL);
  v76 = 0;
  v77 = v24;
  v78 = 1;
  v79 = 0;
  v80 = 1;
  v32 = (uint64_t *)(v17 + v18[6]);
  v34 = *v32;
  v33 = v32[1];
  v35 = *(void **)(v17 + v18[11]);
  v36 = *(_QWORD *)(v27 + 104);
  v37 = type metadata accessor for GenerativePlayground.GenerationTask();
  memset(v81, 0, sizeof(v81));
  v82 = 0;
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_249DC09B8(v34);
  v38 = v35;
  swift_retain();
  v39 = sub_249E849B4(v71, v49, v68, v73, v34, v33, v35, v36, (uint64_t)v81);
  type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 104))(v53, *MEMORY[0x24BEE6A10], v55);
  sub_249F1F64C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v62, v57, v61);
  sub_249DCC274(v39 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState + v69[5], v64, &qword_2578D6288);
  result = v67(v64, 1, v66);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v41 = *(_QWORD *)(v0 + 368);
    v43 = *(_QWORD *)(v0 + 352);
    v42 = *(_QWORD *)(v0 + 360);
    v60 = *(_QWORD *)(v0 + 376);
    v58 = *(_QWORD *)(v0 + 320);
    v54 = *(_QWORD *)(v0 + 384);
    v56 = *(_QWORD *)(v0 + 296);
    v44 = *(_QWORD *)(v0 + 248);
    v50 = *(_QWORD *)(v0 + 256);
    v52 = *(_QWORD *)(v0 + 264);
    v45 = *(_QWORD *)(v0 + 240);
    v46 = *(void (**)(uint64_t))(v42 + 32);
    v46(v41);
    *(_QWORD *)(v0 + 160) = v37;
    *(_QWORD *)(v0 + 168) = &protocol witness table for GenerativePlayground.GenerationTask;
    *(_QWORD *)(v0 + 136) = v39;
    type metadata accessor for GenerativePlayground.ImageGenerationSession(0);
    v47 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v47 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__identifier, v41, v43);
    sub_249D9E174((__int128 *)(v0 + 136), v47 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
    *(_QWORD *)(v47 + 16) = v54;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v47 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream, v50, v45);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v52, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    sub_249DC05A8(v56, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    sub_249DC05A8(v58, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v60, v43);
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v47);
  }
  return result;
}

uint64_t sub_249DACE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  swift_retain();
  sub_249F1F610();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v12 = sub_249F1F604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = sub_249DCB24C;
  v13[6] = v11;
  swift_retain();
  sub_249E5FC80((uint64_t)v6, (uint64_t)&unk_2578D6E48, (uint64_t)v13);
  return swift_release();
}

void sub_249DACF94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v3 = type metadata accessor for GenerationState();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E58);
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x24BDAC7A8](v6);
  sub_249DC091C(a2, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_249DAD0D8 + 4 * byte_249F21934[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_249DAD0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v5 = *(_BYTE *)(v3 + 16);
  *(_OWORD *)v2 = *(_OWORD *)v3;
  *(_BYTE *)(v2 + 16) = v5;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38);
  sub_249F1F61C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
}

uint64_t sub_249DAD368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;

  type metadata accessor for GenerationState();
  v9 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v10;
  *v10 = v6;
  v10[1] = sub_249DAD3F8;
  return sub_249E7FCC0(v9, a5, a6);
}

uint64_t sub_249DAD3F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 32) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  }
  return swift_task_switch();
}

uint64_t sub_249DAD484()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DAD4B8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.possibleImageScalings.getter()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  unint64_t v100;
  uint64_t v101;
  _BOOL8 v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  char v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t result;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  int64_t v118;
  uint64_t v119;
  __int128 v120;
  _QWORD *v121;
  _QWORD v122[3];
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  _QWORD v126[11];

  v1 = (_QWORD *)sub_249DC11C8(MEMORY[0x24BEE4AF8]);
  v125 = xmmword_249F21910;
  v126[3] = &type metadata for NoOpImageScaler;
  v126[4] = &off_251B52178;
  v2 = *(void **)(v0 + 96);
  v3 = type metadata accessor for MediaAnalysisServiceImageScaler();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  v126[8] = v3;
  v126[9] = &off_251B55288;
  v126[5] = v4;
  v5 = v2;
  v6 = 0;
  v7 = 0;
  while (1)
  {
    if (v7 >= (unint64_t)v125)
      goto LABEL_128;
    v112 = v6;
    sub_249D9E1E4((uint64_t)&v126[5 * v7], (uint64_t)v122);
    v8 = v123;
    v9 = v124;
    __swift_project_boxed_opaque_existential_1(v122, v123);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    if (v10)
      break;
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
    v6 = 1;
    v7 = 1;
    if ((v112 & 1) != 0)
    {
LABEL_120:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6508);
      swift_arrayDestroy();
      return (uint64_t)v1;
    }
  }
  v11 = v10;
  v12 = 0;
  v115 = v10 + 64;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v15 = v14 & *(_QWORD *)(v10 + 64);
  v116 = (unint64_t)(v13 + 63) >> 6;
  v113 = v10;
  if (v15)
  {
LABEL_10:
    v119 = (v15 - 1) & v15;
    v16 = __clz(__rbit64(v15)) | (v12 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v17 = __OFADD__(v12++, 1);
    if (v17)
      break;
    if (v12 >= v116)
      goto LABEL_2;
    v18 = *(_QWORD *)(v115 + 8 * v12);
    if (!v18)
    {
      v19 = v12 + 1;
      if (v12 + 1 >= v116)
        goto LABEL_2;
      v18 = *(_QWORD *)(v115 + 8 * v19);
      if (!v18)
      {
        v19 = v12 + 2;
        if (v12 + 2 >= v116)
          goto LABEL_2;
        v18 = *(_QWORD *)(v115 + 8 * v19);
        if (!v18)
        {
          v19 = v12 + 3;
          if (v12 + 3 >= v116)
          {
LABEL_2:
            swift_release();
            goto LABEL_3;
          }
          v18 = *(_QWORD *)(v115 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v12 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_127;
              if (v12 >= v116)
                goto LABEL_2;
              v18 = *(_QWORD *)(v115 + 8 * v12);
              ++v19;
              if (v18)
                goto LABEL_21;
            }
          }
        }
      }
      v12 = v19;
    }
LABEL_21:
    v119 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
    v20 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v16);
    v120 = *(_OWORD *)(*(_QWORD *)(v11 + 48) + 16 * v16);
    v21 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v16 + 8);
    if (v1[2] && (v22 = sub_249DB8068(v120, v21), (v23 & 1) != 0))
    {
      v117 = v21;
      v24 = *(_QWORD *)(v1[7] + 8 * v22);
      sub_249DC12DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = sub_249F1F70C();
      v26 = *(_QWORD *)(v24 + 16);
      v118 = v12;
      v114 = v20;
      if (v26)
      {
        v27 = 0;
        v28 = v24 + 32;
        while (2)
        {
          v29 = v25 + 56;
          while (1)
          {
            v30 = (uint64_t *)(v28 + 16 * v27);
            v31 = *v30;
            v32 = v30[1];
            ++v27;
            sub_249F1FF64();
            sub_249F1FF70();
            sub_249F1FF70();
            v33 = sub_249F1FFA0();
            v34 = -1 << *(_BYTE *)(v25 + 32);
            v35 = v33 & ~v34;
            if (((*(_QWORD *)(v29 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
              break;
            v36 = ~v34;
            while (1)
            {
              v37 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v35);
              v39 = *v37;
              v38 = v37[1];
              if (v39 == v31 && v38 == v32)
                break;
              v35 = (v35 + 1) & v36;
              if (((*(_QWORD *)(v29 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
                goto LABEL_37;
            }
            if (v27 == v26)
              goto LABEL_52;
          }
LABEL_37:
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (*(_QWORD *)(v25 + 24) <= *(_QWORD *)(v25 + 16))
          {
            if (isUniquelyReferenced_nonNull_native)
              sub_249DB40C8();
            else
              sub_249DB5DF8();
            sub_249F1FF64();
            sub_249F1FF70();
            sub_249F1FF70();
            v42 = sub_249F1FFA0();
            v43 = -1 << *(_BYTE *)(v25 + 32);
            v35 = v42 & ~v43;
            if (((*(_QWORD *)(v25 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
            {
              v44 = ~v43;
              do
              {
                v45 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v35);
                v47 = *v45;
                v46 = v45[1];
                if (v47 == v31 && v46 == v32)
                  goto LABEL_129;
                v35 = (v35 + 1) & v44;
              }
              while (((*(_QWORD *)(v25 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_249DB5574();
          }
          *(_QWORD *)(v25 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v35;
          v49 = (_QWORD *)(*(_QWORD *)(v25 + 48) + 16 * v35);
          *v49 = v31;
          v49[1] = v32;
          v50 = *(_QWORD *)(v25 + 16);
          v17 = __OFADD__(v50, 1);
          v51 = v50 + 1;
          if (v17)
          {
            __break(1u);
LABEL_119:
            __break(1u);
            goto LABEL_120;
          }
          *(_QWORD *)(v25 + 16) = v51;
          swift_bridgeObjectRelease();
          if (v27 != v26)
            continue;
          break;
        }
LABEL_52:
        swift_bridgeObjectRelease();
        v12 = v118;
        v20 = v114;
        v52 = *(_QWORD *)(v114 + 16);
        if (!v52)
          goto LABEL_98;
LABEL_53:
        v53 = 0;
        v54 = v20 + 32;
        do
        {
          v55 = v25 + 56;
          while (1)
          {
            v56 = (uint64_t *)(v54 + 16 * v53);
            v57 = *v56;
            v58 = v56[1];
            ++v53;
            sub_249F1FF64();
            sub_249F1FF70();
            sub_249F1FF70();
            v59 = sub_249F1FFA0();
            v60 = -1 << *(_BYTE *)(v25 + 32);
            v61 = v59 & ~v60;
            if (((*(_QWORD *)(v55 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
              break;
            v62 = ~v60;
            while (1)
            {
              v63 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v61);
              v65 = *v63;
              v64 = v63[1];
              if (v65 == v57 && v64 == v58)
                break;
              v61 = (v61 + 1) & v62;
              if (((*(_QWORD *)(v55 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
                goto LABEL_65;
            }
            if (v53 == v52)
              goto LABEL_80;
          }
LABEL_65:
          v67 = swift_isUniquelyReferenced_nonNull_native();
          if (*(_QWORD *)(v25 + 24) <= *(_QWORD *)(v25 + 16))
          {
            if (v67)
              sub_249DB40C8();
            else
              sub_249DB5DF8();
            sub_249F1FF64();
            sub_249F1FF70();
            sub_249F1FF70();
            v68 = sub_249F1FFA0();
            v69 = -1 << *(_BYTE *)(v25 + 32);
            v61 = v68 & ~v69;
            if (((*(_QWORD *)(v25 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) != 0)
            {
              v70 = ~v69;
              do
              {
                v71 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v61);
                v73 = *v71;
                v72 = v71[1];
                if (v73 == v57 && v72 == v58)
                  goto LABEL_129;
                v61 = (v61 + 1) & v70;
              }
              while (((*(_QWORD *)(v25 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) != 0);
            }
          }
          else if ((v67 & 1) == 0)
          {
            sub_249DB5574();
          }
          *(_QWORD *)(v25 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v61;
          v75 = (_QWORD *)(*(_QWORD *)(v25 + 48) + 16 * v61);
          *v75 = v57;
          v75[1] = v58;
          v76 = *(_QWORD *)(v25 + 16);
          v17 = __OFADD__(v76, 1);
          v77 = v76 + 1;
          if (v17)
            goto LABEL_119;
          *(_QWORD *)(v25 + 16) = v77;
          swift_bridgeObjectRelease();
        }
        while (v53 != v52);
LABEL_80:
        swift_bridgeObjectRelease();
        v12 = v118;
        v78 = *(_QWORD *)(v25 + 16);
        if (!v78)
          goto LABEL_99;
        goto LABEL_81;
      }
      swift_bridgeObjectRelease();
      v52 = *(_QWORD *)(v20 + 16);
      if (v52)
        goto LABEL_53;
LABEL_98:
      swift_bridgeObjectRelease();
      v78 = *(_QWORD *)(v25 + 16);
      if (!v78)
      {
LABEL_99:
        swift_bridgeObjectRetain();
        v79 = MEMORY[0x24BEE4AF8];
        goto LABEL_100;
      }
LABEL_81:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6518);
      v79 = swift_allocObject();
      v80 = _swift_stdlib_malloc_size((const void *)v79);
      v81 = v80 - 32;
      if (v80 < 32)
        v81 = v80 - 17;
      *(_QWORD *)(v79 + 16) = v78;
      *(_QWORD *)(v79 + 24) = 2 * (v81 >> 4);
      v82 = sub_249DBEFE4(&v121, (_OWORD *)(v79 + 32), v78, v25);
      swift_bridgeObjectRetain_n();
      sub_249D9E18C();
      if (v82 != (_QWORD *)v78)
        goto LABEL_125;
      swift_bridgeObjectRelease();
      v12 = v118;
LABEL_100:
      v121 = (_QWORD *)v79;
      sub_249DB1D54((uint64_t *)&v121);
      swift_bridgeObjectRelease();
      v97 = (uint64_t)v121;
      swift_bridgeObjectRelease();
      v98 = swift_isUniquelyReferenced_nonNull_native();
      v121 = v1;
      v100 = sub_249DB8068(v120, v117);
      v101 = v1[2];
      v102 = (v99 & 1) == 0;
      v103 = v101 + v102;
      if (__OFADD__(v101, v102))
        goto LABEL_124;
      v104 = v99;
      if (v1[3] >= v103)
      {
        v107 = v120;
        if ((v98 & 1) != 0)
          goto LABEL_106;
        sub_249DBCF60();
      }
      else
      {
        sub_249DBA35C(v103, v98);
        v105 = sub_249DB8068(v120, v117);
        if ((v104 & 1) != (v106 & 1))
          goto LABEL_130;
        v100 = v105;
      }
      v107 = v120;
LABEL_106:
      v1 = v121;
      if ((v104 & 1) != 0)
      {
        v108 = v121[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v108 + 8 * v100) = v97;
      }
      else
      {
        v121[(v100 >> 6) + 8] |= 1 << v100;
        *(_OWORD *)(v1[6] + 16 * v100) = v107;
        *(_QWORD *)(v1[7] + 8 * v100) = v97;
        v109 = v1[2];
        v17 = __OFADD__(v109, 1);
        v110 = v109 + 1;
        if (v17)
          goto LABEL_126;
        v1[2] = v110;
      }
      swift_bridgeObjectRelease();
      v11 = v113;
      v15 = v119;
      if (v119)
        goto LABEL_10;
    }
    else
    {
      swift_bridgeObjectRetain();
      v83 = swift_isUniquelyReferenced_nonNull_native();
      v121 = v1;
      v84 = v21;
      v86 = sub_249DB8068(v120, v21);
      v87 = v1[2];
      v88 = (v85 & 1) == 0;
      v89 = v87 + v88;
      if (__OFADD__(v87, v88))
      {
        __break(1u);
        break;
      }
      v90 = v85;
      if (v1[3] >= v89)
      {
        v93 = v120;
        if ((v83 & 1) != 0)
          goto LABEL_91;
        sub_249DBCF60();
      }
      else
      {
        sub_249DBA35C(v89, v83);
        v91 = sub_249DB8068(v120, v84);
        if ((v90 & 1) != (v92 & 1))
          goto LABEL_130;
        v86 = v91;
      }
      v93 = v120;
LABEL_91:
      v1 = v121;
      if ((v90 & 1) != 0)
      {
        v94 = v121[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v94 + 8 * v86) = v20;
      }
      else
      {
        v121[(v86 >> 6) + 8] |= 1 << v86;
        *(_OWORD *)(v1[6] + 16 * v86) = v93;
        *(_QWORD *)(v1[7] + 8 * v86) = v20;
        v95 = v1[2];
        v17 = __OFADD__(v95, 1);
        v96 = v95 + 1;
        if (v17)
          goto LABEL_123;
        v1[2] = v96;
      }
      swift_bridgeObjectRelease();
      v15 = v119;
      if (v119)
        goto LABEL_10;
    }
  }
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  sub_249F1FF04();
  __break(1u);
LABEL_130:
  sub_249F1FF10();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_249DADF2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C98);
  v2 = sub_249F1FC1C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249DCC274(v6, (uint64_t)v15, &qword_2578D6CA0);
    result = sub_249DB7E78((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_249DCA678(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE06C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C80);
  v2 = sub_249F1FC1C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249DCC274(v6, (uint64_t)&v13, &qword_2578D6C88);
    v7 = v13;
    result = sub_249DB7DF0(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_249DCA678(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE198(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[8];
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CB8);
  v2 = sub_249F1FC1C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249DCC274(v6, (uint64_t)v13, &qword_2578D6D48);
    v7 = v13[0];
    result = sub_249DB7F54(v13[0]);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v7;
    result = sub_249DCA734((uint64_t)&v14, v3[7] + 48 * result);
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE2C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CD0);
  v2 = (_QWORD *)sub_249F1FC1C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_249DB7D8C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE3E8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D08);
  v2 = (_QWORD *)sub_249F1FC1C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_249DB7D8C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE508(uint64_t a1)
{
  return sub_249DAEB40(a1, &qword_2578D6CF0, &qword_2578D6CF8);
}

unint64_t sub_249DAE51C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C70);
  v2 = sub_249F1FC1C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v20 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *(v5 - 1);
    v7 = *v5;
    v8 = v5[1];
    v9 = v5[2];
    v10 = v5[3];
    v11 = (void *)v5[4];
    v12 = v5[5];
    swift_bridgeObjectRetain();
    sub_249DCA64C(v8, v9, v10, v11);
    result = sub_249DB7D8C(v6, v7);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v15 = (uint64_t *)(v3[6] + 16 * result);
    *v15 = v6;
    v15[1] = v7;
    v16 = (uint64_t *)(v3[7] + 40 * result);
    *v16 = v8;
    v16[1] = v9;
    v16[2] = v10;
    v16[3] = (uint64_t)v11;
    v16[4] = v12;
    v17 = v3[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v3[2] = v19;
    v5 += 7;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE674(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C68);
  v2 = (_QWORD *)sub_249F1FC1C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_249DB7D8C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE78C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E00);
  v2 = sub_249F1FC1C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249DCC274(v6, (uint64_t)&v15, &qword_2578D6E08);
    v7 = v15;
    v8 = v16;
    result = sub_249DB7D8C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_249DCB1B0((uint64_t)&v17, v3[7] + 32 * result, (uint64_t *)&unk_2578DD090);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAE8D4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CE0);
  v2 = sub_249F1FC1C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249DCC274(v6, (uint64_t)&v15, &qword_2578D6CE8);
    v7 = v15;
    v8 = v16;
    result = sub_249DB7D8C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_249DCA678(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAEA08(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D10);
  v2 = (_QWORD *)sub_249F1FC1C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_249DB7D8C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAEB18(uint64_t a1)
{
  return sub_249DAEB40(a1, &qword_2578D6D20, &qword_2578D6D28);
}

unint64_t sub_249DAEB2C(uint64_t a1)
{
  return sub_249DAEB40(a1, &qword_2578D6CA8, &qword_2578D6CB0);
}

unint64_t sub_249DAEB40(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_249F1FC1C();
  v6 = (_QWORD *)v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  v8 = v5 + 64;
  v9 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249DCC274(v9, (uint64_t)&v16, a3);
    v10 = v16;
    result = sub_249DB80D8(v16);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v6[6] + 8 * result) = v10;
    result = (unint64_t)sub_249DCA678(&v17, (_OWORD *)(v6[7] + 32 * result));
    v13 = v6[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6[2] = v15;
    v9 += 40;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249DAEC64(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CC8);
  v2 = (_QWORD *)sub_249F1FC1C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_249DB7D8C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.possibleImageScalingDimensions(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[10];
  __int128 v42;
  _QWORD v43[11];

  v2 = *a1;
  v3 = a1[1];
  v42 = xmmword_249F21910;
  v43[3] = &type metadata for NoOpImageScaler;
  v43[4] = &off_251B52178;
  v4 = *(void **)(v1 + 96);
  v5 = type metadata accessor for MediaAnalysisServiceImageScaler();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  v43[8] = v5;
  v43[9] = &off_251B55288;
  v43[5] = v6;
  v7 = v4;
  v8 = 0;
  v9 = 0;
  v10 = MEMORY[0x24BEE4B08];
  v40 = v2;
  v39 = v3;
  while (1)
  {
    v11 = v8;
    if (v9 >= (unint64_t)v42)
      break;
    v12 = &v43[5 * v9];
    v13 = v12[3];
    v14 = v12[4];
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    if (v15)
    {
      v16 = v15;
      if (*(_QWORD *)(v15 + 16)
        && (v17 = sub_249DB8068(v2, v3), (v18 & 1) != 0)
        && (v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (v20 = *(_QWORD *)(v19 + 16)) != 0))
      {
        v21 = 0;
        v22 = v19 + 32;
        v23 = v10 + 56;
        do
        {
          while (1)
          {
            v24 = (uint64_t *)(v22 + 16 * v21);
            v25 = *v24;
            v26 = v24[1];
            ++v21;
            sub_249F1FF64();
            sub_249F1FF70();
            sub_249F1FF70();
            v27 = sub_249F1FFA0();
            v28 = -1 << *(_BYTE *)(v10 + 32);
            v29 = v27 & ~v28;
            if (((*(_QWORD *)(v23 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
              break;
LABEL_18:
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v41[0] = v10;
            sub_249DB4E38(v25, v26, v29, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            if (v21 == v20)
              goto LABEL_2;
            v23 = v10 + 56;
          }
          v30 = ~v28;
          while (1)
          {
            v31 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v29);
            v33 = *v31;
            v32 = v31[1];
            if (v33 == v25 && v32 == v26)
              break;
            v29 = (v29 + 1) & v30;
            if (((*(_QWORD *)(v23 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
              goto LABEL_18;
          }
        }
        while (v21 != v20);
LABEL_2:
        swift_bridgeObjectRelease();
        v2 = v40;
        v3 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v8 = 1;
    v9 = 1;
    if ((v11 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6508);
      swift_arrayDestroy();
      swift_bridgeObjectRetain_n();
      v36 = sub_249DBDDF4(v10, &qword_2578D6518, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_249DBEFE4);
      swift_bridgeObjectRelease();
      v41[0] = (uint64_t)v36;
      sub_249DB1D54(v41);
      swift_bridgeObjectRelease();
      v37 = v41[0];
      swift_bridgeObjectRelease();
      return v37;
    }
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.scale(_:to:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 152) = a2;
  *(_QWORD *)(v4 + 160) = v3;
  *(_QWORD *)(v4 + 144) = a1;
  type metadata accessor for ImageProvenance();
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  *(_OWORD *)(v4 + 176) = *a3;
  return swift_task_switch();
}

uint64_t sub_249DAF0C8()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v1 = *(_BYTE **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = type metadata accessor for GeneratedImage();
  sub_249DC091C(v2 + *(int *)(v3 + 20), (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  if (*v1 == 1)
  {
    sub_249F1F670();
    *(_QWORD *)(v0 + 192) = 0;
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 168);
    sub_249DC1324();
    swift_allocError();
    *v5 = 1;
    swift_willThrow();
    sub_249DC05A8(v4, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249DAF1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  char v16;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 200) = type metadata accessor for ImageChecker();
  swift_initStaticObject();
  v3 = *(_BYTE *)(v2 + 8);
  v15 = *(id *)v2;
  v16 = v3;
  v4 = v15;
  sub_249DDD43C((uint64_t)&v15, &v14);
  if (v1)
  {
    v5 = *(_QWORD *)(v0 + 168);

    sub_249DC05A8(v5, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    swift_bridgeObjectRelease();
    sub_249F1F670();
    v7 = *(_QWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 176);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6530);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 208) = inited;
    *(_OWORD *)(inited + 16) = xmmword_249F21910;
    *(_QWORD *)(inited + 56) = &type metadata for NoOpImageScaler;
    *(_QWORD *)(inited + 64) = &off_251B52178;
    v9 = *(void **)(v7 + 96);
    v10 = type metadata accessor for MediaAnalysisServiceImageScaler();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(inited + 96) = v10;
    *(_QWORD *)(inited + 104) = &off_251B55288;
    *(_QWORD *)(inited + 72) = v11;
    v12 = v9;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v13;
    *v13 = v0;
    v13[1] = sub_249DAF354;
    return sub_249E24D00(*(_QWORD *)(v0 + 144), (_OWORD *)(v0 + 128), inited);
  }
}

uint64_t sub_249DAF354()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6508);
  swift_arrayDestroy();
  return swift_task_switch();
}

uint64_t sub_249DAF418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  uint64_t v8;
  id v9;
  char v10;

  v1 = *(_QWORD *)(v0 + 224);
  sub_249F1F670();
  v2 = *(_QWORD *)(v0 + 144);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 168);
    sub_249DC05A8(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DC05A8(v3, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
  }
  else
  {
    swift_initStaticObject();
    v4 = *(_BYTE *)(v2 + 8);
    v9 = *(id *)v2;
    v10 = v4;
    v5 = v9;
    sub_249DDD43C((uint64_t)&v9, &v8);
    v6 = *(_QWORD *)(v0 + 168);

    swift_bridgeObjectRelease();
    sub_249DC05A8(v6, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DAF52C()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.ideallyScaled(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  type metadata accessor for GeneratedImage();
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

id sub_249DAF5CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  id result;
  double v5;
  double v6;
  size_t Width;
  size_t Height;
  CGImage *v10;
  __CVBuffer *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15[3];

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)v1;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  *(_BYTE *)(v0 + 96) = v3;
  if (v3)
  {
    if (v3 == 1)
    {
      result = objc_msgSend(v2, sel_extent);
      if (v5 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v5 < 9.22337204e18)
      {
        if ((*(_QWORD *)&v5 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(_QWORD *)&v6 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v6 > -9.22337204e18)
          {
            if (v6 < 9.22337204e18)
            {
              Width = (uint64_t)v5;
              Height = (uint64_t)v6;
              goto LABEL_14;
            }
LABEL_21:
            __break(1u);
            return result;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      __break(1u);
      goto LABEL_19;
    }
    v11 = v2;
    Width = CVPixelBufferGetWidth(v11);
    Height = CVPixelBufferGetHeight(v11);
  }
  else
  {
    v10 = v2;
    Width = CGImageGetWidth(v10);
    Height = CGImageGetHeight(v10);
  }
LABEL_14:
  v15[0] = Width;
  v15[1] = Height;
  v15[0] = GenerativePlayground.possibleImageScalingDimensions(for:)(v15);
  swift_bridgeObjectRetain();
  sub_249DB1D54(v15);
  *(_QWORD *)(v0 + 72) = 0;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v15[0] + 16))
  {
    v12 = *(_QWORD *)(v15[0] + 32);
    v13 = *(_QWORD *)(v15[0] + 40);
    swift_release();
    *(_QWORD *)(v0 + 16) = v12;
    *(_QWORD *)(v0 + 24) = v13;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v14;
    *v14 = v0;
    v14[1] = sub_249DAF7AC;
    return (id)GenerativePlayground.scale(_:to:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40), (_OWORD *)(v0 + 16));
  }
  else
  {
    swift_release();
    return (id)swift_task_switch();
  }
}

uint64_t sub_249DAF7AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DAF810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);

  sub_249D9E308(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DAF864()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v1 = *(_BYTE *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  type metadata accessor for ImageChecker();
  swift_initStaticObject();
  v9 = v3;
  v10 = v1;
  sub_249DDD43C((uint64_t)&v9, &v8);
  v4 = *(void **)(v0 + 64);
  if (v2)
  {

  }
  else
  {
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRelease();

    sub_249DC091C(v6, v5, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DAF920()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + 128, &qword_2578D62F0);
  swift_release();
  swift_release();
  return v0;
}

uint64_t GenerativePlayground.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + 128, &qword_2578D62F0);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_249DAFA0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DAFA54;
  return GenerativePlayground.hasRequiredResources.getter();
}

uint64_t sub_249DAFA54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_249DAFAA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_249DCC274(*v0 + 128, (uint64_t)&v5, &qword_2578D62F0);
  if (v6)
  {
    sub_249D9E174(&v5, (uint64_t)v7);
    v1 = v8;
    v2 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 32) + 8))(v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_249DCC2FC((uint64_t)&v5, &qword_2578D62F0);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

BOOL sub_249DAFB40(VisualGeneration::ImageStyle a1, Swift::OpaquePointer a2)
{
  return GenerativePlayground.imageStyle(_:canBeCombinedWith:)(a1, a2);
}

uint64_t sub_249DAFB64()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249DAFBC0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 168);
  return swift_task_switch();
}

uint64_t sub_249DAFBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DAFC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + *(int *)(*(_QWORD *)(v0 + 40) + 56) + 64);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_249DAFCA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DAFCF8;
  return GenerativePlayground.assign_async(_:)(a1);
}

uint64_t sub_249DAFCF8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249DAFD40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return GenerativePlayground.add(_:)(a1);
}

uint64_t sub_249DAFD90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return GenerativePlayground.remove(_:)(a1);
}

uint64_t sub_249DAFDE0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.removeAllImageStyles()();
}

uint64_t sub_249DAFE28()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249DAFE84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 168);
  return swift_task_switch();
}

uint64_t sub_249DAFEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DAFF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48) + *(int *)(*(_QWORD *)(v0 + 40) + 56);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(unsigned __int8 *)(v1 + 80);
  sub_249DC05A8(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
}

uint64_t sub_249DAFF74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = type metadata accessor for DefinitionSession();
  v4 = swift_task_alloc();
  v5 = *v2;
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = v5;
  return swift_task_switch();
}

uint64_t sub_249DAFFD8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 168);
  return swift_task_switch();
}

uint64_t sub_249DAFFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_BYTE *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v7 = v1 + v6;
  swift_beginAccess();
  sub_249DC091C(v7, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v8 = v2 + *(int *)(v3 + 56);
  *(_QWORD *)(v8 + 72) = v5;
  *(_BYTE *)(v8 + 80) = v4 & 1;
  return swift_task_switch();
}

uint64_t sub_249DB0094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 104);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DB011C@<X0>(_DWORD *a1@<X8>)
{
  return GenerativePlayground.directableDemographicCategories.getter(a1);
}

uint64_t sub_249DB013C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249DB0198()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB01B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB0224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(int *)(*(_QWORD *)(v0 + 40) + 56);
  v3 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2 + 1);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_249DB0288(char a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return GenerativePlayground.specifyGenderDirective(_:)(a1);
}

uint64_t sub_249DB02D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropGenderDirective()();
}

uint64_t sub_249DB0320(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = type metadata accessor for DefinitionSession();
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[7] = v3;
  v2[8] = v4;
  return swift_task_switch();
}

uint64_t sub_249DB0380()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB039C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB040C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE **)(v0 + 40);
  v3 = *(int *)(*(_QWORD *)(v0 + 48) + 56);
  *v2 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 2);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DB047C(_BYTE *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return GenerativePlayground.specifySkinToneDirective(_:)(a1);
}

uint64_t sub_249DB04CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropSkinToneDirective()();
}

uint64_t sub_249DB0514()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249DB0570()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB058C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB05FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(int *)(*(_QWORD *)(v0 + 40) + 56);
  v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v5);
}

uint64_t sub_249DB0674(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_249DB0694()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  return GenerativePlayground.dropPersonDescriptionDirective()();
}

uint64_t sub_249DB06DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_249DCC420;
  return GenerativePlayground.currentGenerationState.getter(a1);
}

uint64_t sub_249DB0730(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[9] = type metadata accessor for DefinitionSession();
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[10] = v3;
  v2[11] = v4;
  return swift_task_switch();
}

uint64_t sub_249DB0790()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB07AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[12];
  v2 = v0[10];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB0820()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v4 = type metadata accessor for GenerationState();
  sub_249DC0960(v3 + *(int *)(v4 + 28), v1 + *(int *)(v2 + 56), type metadata accessor for GenerationRecipe);
  return swift_task_switch();
}

uint64_t sub_249DB088C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 104);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.__allocating_init(imageGeneratorIdentifier:client:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  __int128 v15;
  int v16;

  v6 = type metadata accessor for DefinitionSession();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = *((_DWORD *)a3 + 4);
  v15 = *a3;
  v16 = v12;
  sub_249E991D0((uint64_t)&v15, 1, a1, a2, (uint64_t)&v15 - v10);
  sub_249DC091C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v13 = sub_249D9EAD4((uint64_t)v9);
  sub_249DC05A8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return v13;
}

uint64_t GenerativePlayground.__allocating_init(definitionSession:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DefinitionSession();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v5 = sub_249D9EAD4((uint64_t)v4);
  sub_249DC05A8(a1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return v5;
}

uint64_t GenerativePlayground.usePORPipeline.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 112) == 0xD000000000000029 && *(_QWORD *)(v0 + 120) == 0x8000000249F34090)
    return 1;
  else
    return sub_249F1FE2C();
}

uint64_t sub_249DB0B0C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  if (*(_QWORD *)(*(_QWORD *)a1 + 112) == 0xD000000000000029
    && *(_QWORD *)(*(_QWORD *)a1 + 120) == 0x8000000249F34090)
  {
    result = 1;
  }
  else
  {
    result = sub_249F1FE2C();
  }
  *a2 = result & 1;
  return result;
}

uint64_t (*GenerativePlayground.usePORPipeline.modify(_BYTE *a1))(_QWORD)
{
  uint64_t v1;
  char v3;

  if (*(_QWORD *)(v1 + 112) == 0xD000000000000029 && *(_QWORD *)(v1 + 120) == 0x8000000249F34090)
    v3 = 1;
  else
    v3 = sub_249F1FE2C();
  *a1 = v3 & 1;
  return nullsub_1;
}

uint64_t GenerativePlayground.forceInProcessGeneration.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB0C5C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB0C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB0CE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56) + 58);
  sub_249DC05A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t GenerativePlayground.assign(forceInProcessGeneration:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB0D98()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB0DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 104);
  v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v6 = v2 + v5;
  swift_beginAccess();
  sub_249DC091C(v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_BYTE *)(v1 + *(int *)(v3 + 56) + 58) = v4;
  return swift_task_switch();
}

uint64_t sub_249DB0E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  int v18;

  v8 = type metadata accessor for DefinitionSession();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v14 = *((_DWORD *)a3 + 4);
  v17 = *a3;
  v18 = v14;
  sub_249E991D0((uint64_t)&v17, 1, a1, a2, (uint64_t)&v17 - v12);
  sub_249DC091C((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v15 = sub_249D9EAD4((uint64_t)v11);
  result = sub_249DC05A8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *a4 = v15;
  return result;
}

uint64_t sub_249DB0F50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = type metadata accessor for DefinitionSession();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_allocObject();
  v7 = sub_249D9EAD4((uint64_t)v6);
  result = sub_249DC05A8(a1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *a2 = v7;
  return result;
}

uint64_t sub_249DB1000()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249DB105C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB1078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB10E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 48) + *(int *)(*(_QWORD *)(v0 + 40) + 56) + 58);
  sub_249DC05A8(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_249DB113C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 64) = type metadata accessor for DefinitionSession();
  v3 = swift_task_alloc();
  v4 = *v1;
  *(_QWORD *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 80) = v4;
  return swift_task_switch();
}

uint64_t sub_249DB119C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB11B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 104);
  v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v6 = v1 + v5;
  swift_beginAccess();
  sub_249DC091C(v6, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_BYTE *)(v2 + *(int *)(v3 + 56) + 58) = v4;
  return swift_task_switch();
}

uint64_t sub_249DB124C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 96);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.allowImageRejection.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB1330()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB134C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB13B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56) + 56);
  sub_249DC05A8(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t GenerativePlayground.assign(allowImageRejection:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 96) = a1;
  type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB1468()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB1484()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[9];
  v1 = v0[10];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[11] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB14F4()
{
  uint64_t v0;

  sub_249E9A698(*(_BYTE *)(v0 + 96));
  return swift_task_switch();
}

uint64_t sub_249DB1534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80) + *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  sub_249DC0960(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenerativePlayground.enableGenerativeModelsAvailabilityCheck.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  type metadata accessor for GenerationRecipe(0);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for DefinitionSession();
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB1638()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB1654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB16C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  sub_249DC091C(v1 + *(int *)(*(_QWORD *)(v0 + 56) + 56), v2, type metadata accessor for GenerationRecipe);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v3 = *(unsigned __int8 *)(v2 + 57);
  sub_249DC05A8(v2, type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t GenerativePlayground.assign(enableGenerativeModelsAvailabilityCheck:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB17A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB17C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 104);
  v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v6 = v2 + v5;
  swift_beginAccess();
  sub_249DC091C(v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  *(_BYTE *)(v1 + *(int *)(v3 + 56) + 57) = v4;
  return swift_task_switch();
}

uint64_t GenerativePlayground.assignedForensicsReporter.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB18B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB18D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB193C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = (uint64_t *)(v1 + *(int *)(*(_QWORD *)(v0 + 48) + 24));
  v3 = *v2;
  v4 = v2[1];
  sub_249DC09B8(*v2);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v4);
}

uint64_t GenerativePlayground.assign(forensicsReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  type metadata accessor for DefinitionSession();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DB1A04()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB1A20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB1A90()
{
  uint64_t v0;

  DefinitionSession.set(forensicsReporter:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  return swift_task_switch();
}

uint64_t sub_249DB1AD0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = type metadata accessor for DefinitionSession();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_249DB1B2C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB1B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_249DC091C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB1BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = (uint64_t *)(v1 + *(int *)(*(_QWORD *)(v0 + 40) + 24));
  v3 = *v2;
  v4 = v2[1];
  sub_249DC09B8(*v2);
  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v4);
}

uint64_t sub_249DB1C24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[8] = a1;
  v3[9] = a2;
  type metadata accessor for DefinitionSession();
  v4 = swift_task_alloc();
  v5 = *v2;
  v3[10] = v4;
  v3[11] = v5;
  return swift_task_switch();
}

uint64_t sub_249DB1C80()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 168);
  return swift_task_switch();
}

uint64_t sub_249DB1C9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[12];
  v2 = v0[10];
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_249DC091C(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  return swift_task_switch();
}

uint64_t sub_249DB1D10()
{
  uint64_t v0;

  DefinitionSession.set(forensicsReporter:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  return swift_task_switch();
}

uint64_t sub_249DB1D54(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_249E753B0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_249DBE370(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249DB1DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v7[2] = a4;
  v7[3] = a7;
  v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc();
  v7[4] = v8;
  *v8 = v7;
  v8[1] = sub_249DB1E14;
  return v10();
}

uint64_t sub_249DB1E14()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DB1E68()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 24) + 16) = 0;
  sub_249F1F8EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DB1E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  v7[4] = a4;
  v7[5] = a7;
  v10 = (uint64_t (*)(_QWORD *))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc();
  v7[6] = v8;
  *v8 = v7;
  v8[1] = sub_249DB1F04;
  return v10(v7 + 2);
}

uint64_t sub_249DB1F04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DB1F58()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 24);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_WORD *)(v1 + 24) = v2;
  sub_249F1F8EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DB1F9C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_249DB2000;
  return v6(a1);
}

uint64_t sub_249DB2000()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249DB204C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6DF0);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_2578D60E0;
  else
    v2 = (uint64_t *)&unk_2578D6DF8;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

_QWORD *sub_249DB2098(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249DB2C90(a1, a2, a3, a4, &qword_2578D6110, &qword_2578D6E50);
}

_QWORD *sub_249DB20AC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249DB2FF4(a1, a2, a3, a4, &qword_2578D6518);
}

uint64_t sub_249DB20B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249DB20E0(a1, a2, a3, a4, &qword_2578D6D88, type metadata accessor for Concept);
}

uint64_t sub_249DB20CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249DB20E0(a1, a2, a3, a4, &qword_2578D6C48, type metadata accessor for ResolvedTextPrompt);
}

uint64_t sub_249DB20E0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_249F1FBC8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249DCADA8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

char *sub_249DB22EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6388);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249DC0CF8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DB23E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249DB20E0(a1, a2, a3, a4, &qword_2578D6C20, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_249DB23F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C38);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DBFC60(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB2504(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C40);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DC10D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DB2610(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C28);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_249F1FBC8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249DC0FBC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_249DB2820(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CD8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DBFD48(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DB292C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249DB20E0(a1, a2, a3, a4, &qword_2578D6CC0, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
}

_QWORD *sub_249DB2940(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E18);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249DCA910(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB2A64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C60);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DCA820(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB2B70(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D18);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DCAA1C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB2C7C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249DB2C90(a1, a2, a3, a4, &qword_2578D6530, &qword_2578D6508);
}

_QWORD *sub_249DB2C90(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249DCACA0(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DB2DBC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249DB20E0(a1, a2, a3, a4, &qword_2578D6DC8, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
}

_QWORD *sub_249DB2DD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DC0DDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB2EDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6DA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DC0ECC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB2FE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249DB2FF4(a1, a2, a3, a4, &qword_2578D6DB8);
}

_QWORD *sub_249DB2FF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DBFC60(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB30FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6DD0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249DCAEC0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB3220(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6DC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249DCAFCC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249DB332C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D40);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249DCB0BC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DB3450(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_249F1FF64();
  swift_bridgeObjectRetain();
  sub_249F1F40C();
  v8 = sub_249F1FFA0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_249F1FE2C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_249F1FE2C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_249DB4A4C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_249DB35FC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_249F1E8F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_249D9BBEC(&qword_2578D6EF8, v11, MEMORY[0x24BDCEB78]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_249F1F220();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_249D9BBEC(&qword_2578D6F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60], MEMORY[0x24BDCEB80]);
      v21 = sub_249F1F298();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_249DB4BE4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_249DB3858(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  __int128 v17;
  uint64_t result;
  uint64_t v19;

  v7 = *v3;
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  v8 = sub_249F1FFA0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v10);
      v14 = *v12;
      v13 = v12[1];
      if (v14 == a2 && v13 == a3)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_8;
    }
    result = 0;
    v17 = *(_OWORD *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_249DB4E38(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v17 = a2;
    *((_QWORD *)&v17 + 1) = a3;
    result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_249DB3994(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = v2;
  v6 = type metadata accessor for Concept(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_249F1FF64();
  swift_bridgeObjectRetain();
  Concept.hash(into:)((uint64_t)v23);
  v11 = sub_249F1FFA0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v21 = v2;
    v22 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_249DC091C(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for Concept);
      _s16VisualGeneration7ConceptO2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      v17 = v16;
      sub_249DC05A8((uint64_t)v9, type metadata accessor for Concept);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v21;
        a1 = v22;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_249DC05A8(a2, type metadata accessor for Concept);
    sub_249DC091C(*(_QWORD *)(*v21 + 48) + v15 * v13, v22, type metadata accessor for Concept);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_249DC091C(a2, (uint64_t)v9, type metadata accessor for Concept);
    v23[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_249DB4F94((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v23[0];
    swift_bridgeObjectRelease();
    sub_249D9E308(a2, a1, type metadata accessor for Concept);
    return 1;
  }
}

uint64_t sub_249DB3B90(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_249D9BBEC(&qword_2578D6260, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_249F1F220();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_249D9BBEC(&qword_2578D6DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_249F1F298();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_249DB5170((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_249DB3DEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6118);
  v3 = sub_249F1FA54();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_249F1FF64();
      sub_249F1F40C();
      result = sub_249F1FFA0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_249DB40C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E28);
  result = sub_249F1FA54();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9)
          goto LABEL_33;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_33;
          v16 = v29[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v9)
              goto LABEL_33;
            v16 = v29[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v9)
                    goto LABEL_33;
                  v16 = v29[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
      v19 = *v18;
      v20 = v18[1];
      sub_249F1FF64();
      sub_249F1FF70();
      sub_249F1FF70();
      result = sub_249F1FFA0();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
      *v12 = v19;
      v12[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_249DB439C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35[72];

  v1 = v0;
  v2 = type metadata accessor for Concept(0);
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D90);
  v6 = sub_249F1FA54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v0;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v33 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v32 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32)
          goto LABEL_33;
        v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v32)
            goto LABEL_33;
          v19 = v33[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v32)
              goto LABEL_33;
            v19 = v33[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 > 63)
                  bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v32)
                    goto LABEL_33;
                  v19 = v33[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(v34 + 72);
      sub_249D9E308(*(_QWORD *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for Concept);
      sub_249F1FF64();
      Concept.hash(into:)((uint64_t)v35);
      result = sub_249F1FFA0();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = sub_249D9E308((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v21, type metadata accessor for Concept);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_249DB46EC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_249F1FA54();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_249D9BBEC(v45, v44, v46);
      result = sub_249F1F220();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_249DB4A4C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_249DB3DEC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_249DB53C4();
      goto LABEL_22;
    }
    sub_249DB5B4C();
  }
  v11 = *v4;
  sub_249F1FF64();
  sub_249F1F40C();
  result = sub_249F1FFA0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_249F1FE2C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_249F1FF04();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_249F1FE2C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_249DB4BE4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_249F1E8F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_249DB46EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60], &qword_2578D6F08, &qword_2578D6EF8, MEMORY[0x24BDCEB78]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_249DB5928((uint64_t (*)(_QWORD))MEMORY[0x24BDCEB60], &qword_2578D6F08);
      goto LABEL_12;
    }
    sub_249DB63AC(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60], &qword_2578D6F08, &qword_2578D6EF8, MEMORY[0x24BDCEB78]);
  }
  v13 = *v3;
  sub_249D9BBEC(&qword_2578D6EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60], MEMORY[0x24BDCEB78]);
  v14 = sub_249F1F220();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_249D9BBEC(&qword_2578D6F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60], MEMORY[0x24BDCEB80]);
      v19 = sub_249F1F298();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_249F1FF04();
  __break(1u);
  return result;
}

uint64_t sub_249DB4E38(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_15;
  if ((a4 & 1) != 0)
  {
    sub_249DB40C8();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_249DB5574();
      goto LABEL_15;
    }
    sub_249DB5DF8();
  }
  v10 = *v4;
  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  result = sub_249F1FFA0();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      v13 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * a3);
      v15 = *v13;
      v14 = v13[1];
      if (v15 == v7 && v14 == a2)
        goto LABEL_18;
      a3 = (a3 + 1) & v12;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  v17 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v18 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * a3);
  *v18 = v7;
  v18[1] = a2;
  v19 = *(_QWORD *)(v17 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_18:
  result = sub_249F1FF04();
  __break(1u);
  return result;
}

uint64_t sub_249DB4F94(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  _BYTE v28[72];

  v4 = v3;
  v8 = type metadata accessor for Concept(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v27 = v9;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_249DB439C();
  }
  else
  {
    if (v13 > v12)
    {
      sub_249DB5708();
      goto LABEL_12;
    }
    sub_249DB6098();
  }
  v14 = *v4;
  sub_249F1FF64();
  Concept.hash(into:)((uint64_t)v28);
  v15 = sub_249F1FFA0();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v26[1] = v8;
    v17 = ~v16;
    v18 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_249DC091C(*(_QWORD *)(v14 + 48) + v18 * a2, (uint64_t)v11, type metadata accessor for Concept);
      _s16VisualGeneration7ConceptO2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
      v20 = v19;
      sub_249DC05A8((uint64_t)v11, type metadata accessor for Concept);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_249D9E308(a1, *(_QWORD *)(v21 + 48) + *(_QWORD *)(v27 + 72) * a2, type metadata accessor for Concept);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_249F1FF04();
  __break(1u);
  return result;
}

uint64_t sub_249DB5170(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_249DB46EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_2578D6DB0, &qword_2578D6260, MEMORY[0x24BDCEA88]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_249DB5928((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_2578D6DB0);
      goto LABEL_12;
    }
    sub_249DB63AC(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_2578D6DB0, &qword_2578D6260, MEMORY[0x24BDCEA88]);
  }
  v13 = *v3;
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_249F1F220();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_249D9BBEC(&qword_2578D6DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_249F1F298();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_249F1FF04();
  __break(1u);
  return result;
}

void *sub_249DB53C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6118);
  v2 = *v0;
  v3 = sub_249F1FA48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249DB5574()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E28);
  v2 = *v0;
  v3 = sub_249F1FA48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249DB5708()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for Concept(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D90);
  v6 = *v0;
  v7 = sub_249F1FA48();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_249DC091C(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5, type metadata accessor for Concept);
    result = (void *)sub_249D9E308((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20, type metadata accessor for Concept);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_249DB5928(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_249F1FA48();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_249DB5B4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6118);
  v3 = sub_249F1FA54();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_249F1FF64();
    swift_bridgeObjectRetain();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_249DB5DF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E28);
  result = sub_249F1FA54();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v19 = *v18;
    v20 = v18[1];
    sub_249F1FF64();
    sub_249F1FF70();
    sub_249F1FF70();
    result = sub_249F1FFA0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v19;
    v12[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_249DB6098()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  char v34[72];

  v1 = v0;
  v2 = type metadata accessor for Concept(0);
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D90);
  v6 = sub_249F1FA54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v30 = v0;
  v31 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32)
      goto LABEL_33;
    v19 = *(_QWORD *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v32)
        goto LABEL_33;
      v19 = *(_QWORD *)(v31 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v32)
          goto LABEL_33;
        v19 = *(_QWORD *)(v31 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(_QWORD *)(v33 + 72);
    sub_249DC091C(*(_QWORD *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for Concept);
    sub_249F1FF64();
    Concept.hash(into:)((uint64_t)v34);
    result = sub_249F1FFA0();
    v22 = -1 << *(_BYTE *)(v7 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    result = sub_249D9E308((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v21, type metadata accessor for Concept);
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v31 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v32)
      goto LABEL_33;
    v19 = *(_QWORD *)(v31 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_249DB63AC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_249F1FA54();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_249D9BBEC(v40, v39, v41);
    result = sub_249F1F220();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_249DB66C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249DB7750(a1, a2, a3, (_QWORD *)*v3, &qword_2578D6D70, (uint64_t (*)(_QWORD))MEMORY[0x24BDF99F0]);
  *v3 = result;
  return result;
}

uint64_t sub_249DB66F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249DB7750(a1, a2, a3, (_QWORD *)*v3, &qword_2578D6C48, type metadata accessor for ResolvedTextPrompt);
  *v3 = result;
  return result;
}

uint64_t sub_249DB6720(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB694C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB673C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB6AAC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB6758(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB7C34(a1, a2, a3, *v3, &qword_2578D6EC0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB677C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB6C20(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB6798(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB6D7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB67B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249DB7750(a1, a2, a3, (_QWORD *)*v3, &qword_2578D6C10, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  *v3 = result;
  return result;
}

uint64_t sub_249DB67E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249DB7750(a1, a2, a3, (_QWORD *)*v3, &qword_2578D6DE8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEEA8]);
  *v3 = result;
  return result;
}

uint64_t sub_249DB680C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB719C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB6828(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB7304(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB6844(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB746C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB6860(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB75F8(a1, a2, a3, *v3, &qword_2578D6518);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB6884(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249DB7750(a1, a2, a3, (_QWORD *)*v3, &qword_2578D6D88, type metadata accessor for Concept);
  *v3 = result;
  return result;
}

uint64_t sub_249DB68B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB7034(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB68CC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB7C34(a1, a2, a3, *v3, &qword_2578D6D80);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB68F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB7930(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB690C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249DB7A94(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_249DB6928(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249DB7C34(a1, a2, a3, *v3, &qword_2578D6D78);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249DB694C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_249DB204C();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB6AAC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C78);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB6C14(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249DB75F8(a1, a2, a3, a4, &qword_2578D6518);
}

uint64_t sub_249DB6C20(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB6D7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB6ED8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB7034(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB719C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB7304(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D98);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB746C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB75D8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249DB7750(a1, a2, a3, a4, &qword_2578D6CC0, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
}

uint64_t sub_249DB75EC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249DB75F8(a1, a2, a3, a4, &qword_2578D6DB8);
}

uint64_t sub_249DB75F8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB7750(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB7930(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D68);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB7A94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6530);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6508);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DB7C34(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9])
      memmove(v14, v15, 32 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v9] || v14 >= &v15[32 * v9])
  {
    memcpy(v14, v15, 32 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

unint64_t sub_249DB7D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_249F1FF64();
  sub_249F1F40C();
  v4 = sub_249F1FFA0();
  return sub_249DB8208(a1, a2, v4);
}

unint64_t sub_249DB7DF0(uint64_t a1)
{
  uint64_t v2;

  sub_249F1FF64();
  type metadata accessor for CFString(0);
  sub_249D9BBEC(&qword_2578D6C90, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_249F21710);
  sub_249F1EB3C();
  v2 = sub_249F1FFA0();
  return sub_249DB82E8(a1, v2);
}

unint64_t sub_249DB7E78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249F1FA24();
  return sub_249DB8428(a1, v2);
}

unint64_t sub_249DB7EA8(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_249F1FF64();
  sub_249F1FF70();
  v2 = sub_249F1FFA0();
  return sub_249DB84EC(v1, v2);
}

unint64_t sub_249DB7F04(uint64_t a1)
{
  uint64_t v2;

  sub_249F1FBBC();
  v2 = sub_249F1F220();
  return sub_249DB85A8(a1, v2);
}

uint64_t sub_249DB7F54(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_249F1FF64();
  sub_249DBFA40((uint64_t)v4, a1);
  v2 = sub_249F1FFA0();
  return sub_249DB86D0(a1, v2);
}

unint64_t sub_249DB7FAC(unsigned __int8 a1)
{
  uint64_t v2;

  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  v2 = sub_249F1FFA0();
  return sub_249DB8A0C(a1, v2);
}

unint64_t sub_249DB8068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_249F1FF64();
  sub_249F1FF70();
  sub_249F1FF70();
  v4 = sub_249F1FFA0();
  return sub_249DB8BBC(a1, a2, v4);
}

unint64_t sub_249DB80D8(uint64_t a1)
{
  uint64_t v2;

  sub_249F1F328();
  sub_249F1FF64();
  sub_249F1F40C();
  v2 = sub_249F1FFA0();
  swift_bridgeObjectRelease();
  return sub_249DB8C38(a1, v2);
}

uint64_t sub_249DB8164(uint64_t a1)
{
  uint64_t v2;

  sub_249F1FF64();
  AppleDiffusionPipeline.ComponentModel.rawValue.getter(a1);
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  v2 = sub_249F1FFA0();
  return sub_249DB8DAC(a1, v2);
}

uint64_t sub_249DB81D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_249DBFB70(*(_QWORD *)(v1 + 40), a1);
  return sub_249DB914C(a1, v3);
}

unint64_t sub_249DB8208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_249F1FE2C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_249F1FE2C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_249DB82E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_249D9BBEC(&qword_2578D6C90, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_249F21710);
    v7 = v6;
    v8 = sub_249F1EB30();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_249F1EB30();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_249DB8428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_249DCA688(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24BD05634](v9, a1);
      sub_249DCA6C4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_249DB84EC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_249DB85A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_249F1FBBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_249F1F298();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_249DB86D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_249DB8A0C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x676E696E69617274;
          v8 = 0xEB00000000676154;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v8 = 0xE800000000000000;
          v7 = 0x6365705361726F6CLL;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE700000000000000;
            if (v7 != 0x676F6C61746163)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v8 = 0xE700000000000000;
        v7 = 0x676F6C61746163;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x676E696E69617274;
      else
        v10 = 0x6365705361726F6CLL;
      if (v9 == 1)
        v11 = 0xEB00000000676154;
      else
        v11 = 0xE800000000000000;
      if (v7 != v10)
        goto LABEL_19;
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      v12 = sub_249F1FE2C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_249DB8BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v10 = *v8;
      v9 = v8[1];
      if (v10 == a1 && v9 == a2)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_249DB8C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_249F1F328();
    v8 = v7;
    if (v6 == sub_249F1F328() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_249F1F328();
          v15 = v14;
          if (v13 == sub_249F1F328() && v15 == v16)
            break;
          v18 = sub_249F1FE2C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_249DB8DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_249DB914C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_249DB93AC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_249F1FBBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D00);
  v39 = a2;
  v10 = sub_249F1FC10();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_249DCA678((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_249DCA7E4(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    result = sub_249F1F220();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_249DCA678(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_249DB9730(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int64_t v34;
  _QWORD *v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C58);
  result = sub_249F1FC10();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v8 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v34)
          goto LABEL_31;
        v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v34)
            goto LABEL_31;
          v18 = v35[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v34)
                  goto LABEL_31;
                v18 = v35[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v21 = (char *)(*(_QWORD *)(v5 + 56) + 3 * v16);
      v22 = v21[2];
      v23 = v21[1];
      v24 = *v21;
      sub_249F1FF64();
      sub_249F1FF70();
      result = sub_249F1FFA0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v13) = v20;
      v14 = (_BYTE *)(*(_QWORD *)(v7 + 56) + 3 * v13);
      *v14 = v24;
      v14[1] = v23;
      v14[2] = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_249DB9A1C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CD0);
  v42 = a2;
  v6 = sub_249F1FC10();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249F1FF64();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249DB9D40(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D08);
  v6 = a2;
  v7 = sub_249F1FC10();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_249F1FF64();
      sub_249F1F40C();
      result = sub_249F1FFA0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_249DBA048(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CC8);
  v36 = a2;
  v6 = sub_249F1FC10();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249F1FF64();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249DBA35C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E30);
  result = sub_249F1FC10();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v12)
          goto LABEL_33;
        v22 = v30[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v12)
            goto LABEL_33;
          v22 = v30[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v30[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v22 = v30[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v20);
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_249F1FF64();
      sub_249F1FF70();
      sub_249F1FF70();
      result = sub_249F1FFA0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        v18 = v31;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        v18 = v31;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17) = v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_249DBA644(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C68);
  v37 = a2;
  v6 = sub_249F1FC10();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_249F1FF64();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249DBA954(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D10);
  v37 = a2;
  v6 = sub_249F1FC10();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_249F1FF64();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249DBAC5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  id v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C50);
  result = sub_249F1FC10();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v21 = v20 | (v8 << 6);
      }
      else
      {
        v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v8;
        if (!v23)
        {
          v8 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v8];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v34;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v8 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v23 = v36[v8];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v8 = v24;
          }
        }
LABEL_30:
        v11 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      v29 = 16 * v21;
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + v29);
      v30 = *(_QWORD *)(v5 + 56) + v29;
      v31 = *(void **)v30;
      v32 = *(_BYTE *)(v30 + 8);
      if ((a2 & 1) == 0)
        v33 = v31;
      sub_249F1FF64();
      sub_249F1FF70();
      sub_249F1FF70();
      result = sub_249F1FFA0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        v17 = v37;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v13) >> 6;
        v17 = v37;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v15 == v26;
          if (v15 == v26)
            v15 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v18 = 16 * v16;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + v18) = v17;
      v19 = *(_QWORD *)(v7 + 56) + v18;
      *(_QWORD *)v19 = v31;
      *(_BYTE *)(v19 + 8) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_249DBAF60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CE0);
  v6 = sub_249F1FC10();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_249DCA678(v24, v35);
      }
      else
      {
        sub_249DCA7E4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_249F1FF64();
      sub_249F1F40C();
      result = sub_249F1FFA0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_249DCA678(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249DBB25C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C98);
  v6 = sub_249F1FC10();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_249DCA678((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_249DCA688(v25, (uint64_t)&v38);
      sub_249DCA7E4(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_249F1FA24();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_249DCA678(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249DBB570(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  __int128 v40;

  v3 = v2;
  v5 = type metadata accessor for GeneratedImage();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D50);
  v39 = a2;
  result = sub_249F1FC10();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(v8 + 56);
      v40 = *(_OWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = v23 + v24 * v19;
      if ((v39 & 1) != 0)
        sub_249D9E308(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      else
        sub_249DC091C(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249F1FF64();
      sub_249F1FF70();
      sub_249F1FF70();
      result = sub_249F1FFA0();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17) = v40;
      result = sub_249D9E308((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_249DBB8C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  _BYTE v20[56];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CB8);
  v6 = sub_249F1FC10();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_29;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v19 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v19 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v19 <= 2)
    goto LABEL_22;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    v16 = *(_QWORD *)(v5 + 56) + 48 * v10;
    if ((a2 & 1) != 0)
      sub_249DCA734(v16, (uint64_t)v20);
    else
      sub_249DCA6F8(v16, (uint64_t)v20);
    sub_249F1FF64();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v19 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x249DBBCFCLL);
      }
      if (v13 >= v19)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_22:
  swift_release();
  if ((a2 & 1) == 0)
    goto LABEL_29;
LABEL_25:
  v17 = 1 << *(_BYTE *)(v5 + 32);
  if (v17 >= 64)
    bzero(v11, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v17;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_29:
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_249DBBD20(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_249F1FBBC();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_249F1FA18();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = sub_249F1F220();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249DBBFA4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int16 v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  unint64_t v15;
  __int16 *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_249F1FA18();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_249F1FF64();
        sub_249F1FF70();
        result = sub_249F1FFA0();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = v14 + 3 * v3;
          v16 = (__int16 *)(v14 + 3 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= (unint64_t)v16 + 3))
          {
            v9 = *v16;
            *(_BYTE *)(v15 + 2) = *((_BYTE *)v16 + 2);
            *(_WORD *)v15 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249DBC16C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_249F1FA18();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_249F1FF64();
        swift_bridgeObjectRetain();
        sub_249F1F40C();
        v9 = sub_249F1FFA0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249DBC340(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_249F1FA18();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_249F1FF64();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x249DBC644);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void *sub_249DBC668()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_249F1FBBC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D00);
  v6 = *v0;
  v7 = sub_249F1FC04();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_249DCA7E4(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_249DCA678(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249DBC8A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C58);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v12 = (v20 - 1) & v20;
    v15 = v22 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 3 * v15;
    v17 = *(_WORD *)v16;
    LOBYTE(v16) = *(_BYTE *)(v16 + 2);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v18 = *(_QWORD *)(v4 + 56) + 3 * v15;
    *(_WORD *)v18 = v17;
    *(_BYTE *)(v18 + 2) = v16;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBCA40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CD0);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBCBF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D08);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *v20 = v18;
    v20[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBCDAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CC8);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBCF60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E30);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBD104()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C68);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBD2BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D10);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_249DBD468()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C50);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56) + v16;
    v18 = *(void **)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v19 = v18;
    *(_BYTE *)(v19 + 8) = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBD618()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CE0);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_249DCA7E4(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_249DCA678(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249DBD7FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C98);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_249DCA688(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_249DCA7E4(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_249DCA678(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249DBD9E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27;

  v1 = v0;
  v2 = type metadata accessor for GeneratedImage();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D50);
  v5 = *v0;
  v6 = sub_249F1FC04();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = *(_QWORD *)(v26 + 72) * v18;
    v21 = *(_QWORD *)(v5 + 56) + v20;
    v27 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    sub_249DC091C(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + v19) = v27;
    result = (void *)sub_249D9E308((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249DBDC0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _BYTE v20[48];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CB8);
  v2 = *v0;
  v3 = sub_249F1FC04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_249DCA6F8(*(_QWORD *)(v2 + 56) + 48 * v15, (uint64_t)v20);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = (void *)sub_249DCA734((uint64_t)v20, *(_QWORD *)(v4 + 56) + 48 * v15);
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_249DBDDCC(uint64_t a1)
{
  return sub_249DBDDF4(a1, &qword_2578D6C78, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_249DBEDE8);
}

_QWORD *sub_249DBDDE0(uint64_t a1)
{
  return sub_249DBDDF4(a1, &qword_2578D6518, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_249DBEFE4);
}

_QWORD *sub_249DBDDF4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_249D9E18C();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

size_t sub_249DBDED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CC0);
  v3 = *(_QWORD *)(type metadata accessor for GeneratedImage() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_249DBF178(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_249D9E18C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_249DBDFF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D98);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

size_t sub_249DBE160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C20);
  v3 = *(_QWORD *)(sub_249F1E8D8() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_249DBF434(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_249D9E18C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_249DBE258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D88);
  v3 = *(_QWORD *)(type metadata accessor for Concept(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_249DBF784(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_249D9E18C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_249DBE370(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_181;
    if (v3)
      return sub_249DBEA74(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_189;
  v6 = result;
  if (v3 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v106 = MEMORY[0x24BEE4AF8];
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v12 < 2)
        goto LABEL_159;
      goto LABEL_147;
    }
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_249F1F58C();
    *(_QWORD *)(v8 + 16) = v7;
    v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v104 = v2;
  v11 = *v2;
  v105 = v11 - 16;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v107 = v6;
  v108 = v3;
  while (2)
  {
    v13 = v10 + 1;
    if (v10 + 1 >= v3)
      goto LABEL_66;
    v14 = (uint64_t *)(v11 + 16 * v13);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(v11 + 16 * v10);
    v18 = *v17;
    v19 = v17[1];
    if (v19 >= v18)
      v20 = v18;
    else
      v20 = v19;
    if (v16 >= v15)
      v21 = v15;
    else
      v21 = v16;
    if (v20 >= v21)
    {
      if (v21 >= v20)
      {
        if (v19 <= v18)
          v19 = v18;
        if (v16 <= v15)
          v23 = v15;
        else
          v23 = v16;
        v13 = v10 + 2;
        if (v19 < v23)
          goto LABEL_24;
      }
      else
      {
        v13 = v10 + 2;
      }
      if (v13 >= v3)
        goto LABEL_66;
      v22 = 0;
      goto LABEL_36;
    }
    v13 = v10 + 2;
LABEL_24:
    if (v13 >= v3)
      goto LABEL_60;
    v22 = 1;
LABEL_36:
    if (v3 <= v13 + 1)
      v24 = v13 + 1;
    else
      v24 = v3;
    v25 = (uint64_t *)(v11 + 8 + 16 * v13);
    while (1)
    {
      v26 = *(v25 - 1);
      v27 = *v25;
      if (v16 >= v15)
        v28 = v15;
      else
        v28 = v16;
      if (v27 >= v26)
        v29 = *(v25 - 1);
      else
        v29 = *v25;
      if (v28 < v29)
        goto LABEL_40;
      if (v29 >= v28)
      {
        if (v16 > v15)
          v15 = v16;
        v30 = v27 <= v26 ? *(v25 - 1) : *v25;
        if (v15 < v30)
        {
LABEL_40:
          if ((v22 & 1) == 0)
            goto LABEL_66;
          goto LABEL_41;
        }
      }
      if ((v22 & 1) != 0)
        break;
LABEL_41:
      v25 += 2;
      ++v13;
      v16 = v27;
      v15 = v26;
      if (v13 >= v3)
      {
        if (v22)
          goto LABEL_59;
        goto LABEL_76;
      }
    }
    v24 = v13;
LABEL_59:
    v13 = v24;
    if (v24 < v10)
      goto LABEL_182;
LABEL_60:
    if (v10 < v13)
    {
      v31 = (__int128 *)(v105 + 16 * v13);
      v32 = v13;
      v33 = v10;
      v34 = (__int128 *)(v11 + 16 * v10);
      do
      {
        if (v33 != --v32)
        {
          if (!v11)
            goto LABEL_187;
          v35 = *v34;
          *v34 = *v31;
          *v31 = v35;
        }
        ++v33;
        --v31;
        ++v34;
      }
      while (v33 < v32);
    }
LABEL_66:
    if (v13 >= v3)
      goto LABEL_75;
    if (__OFSUB__(v13, v10))
      goto LABEL_180;
    if (v13 - v10 >= v6)
    {
LABEL_75:
      v24 = v13;
      goto LABEL_76;
    }
    if (__OFADD__(v10, v6))
      goto LABEL_183;
    if (v10 + v6 >= v3)
      v24 = v3;
    else
      v24 = v10 + v6;
    if (v24 >= v10)
    {
      if (v13 == v24)
        goto LABEL_75;
      v85 = (_QWORD *)(v105 + 16 * v13);
      do
      {
        v86 = *(_OWORD *)(v11 + 16 * v13);
        v87 = *(_QWORD *)(v11 + 16 * v13 + 8);
        v88 = *(_QWORD *)(v11 + 16 * v13);
        if (v87 >= v88)
          v89 = *(_QWORD *)(v11 + 16 * v13);
        else
          v89 = *(_QWORD *)(v11 + 16 * v13 + 8);
        if (v87 <= v88)
          v87 = *(_QWORD *)(v11 + 16 * v13);
        v90 = v10;
        v91 = v85;
        do
        {
          v92 = *v91;
          v93 = v91[1];
          if (v93 >= *v91)
            v94 = *v91;
          else
            v94 = v91[1];
          if (v94 >= v89)
          {
            if (v93 > v92)
              v92 = v91[1];
            if (v89 < v94 || v92 >= v87)
              break;
          }
          if (!v11)
            goto LABEL_185;
          v96 = v91 + 2;
          v97 = *(_OWORD *)v91;
          *(_OWORD *)v91 = v86;
          v91 -= 2;
          *v96 = v97;
          ++v90;
        }
        while (v13 != v90);
        ++v13;
        v85 += 2;
      }
      while (v13 != v24);
LABEL_76:
      if (v24 < v10)
        goto LABEL_175;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_249E74C00(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v37 = *((_QWORD *)v9 + 2);
      v36 = *((_QWORD *)v9 + 3);
      v12 = v37 + 1;
      if (v37 >= v36 >> 1)
        v9 = sub_249E74C00((char *)(v36 > 1), v37 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v12;
      v38 = v9 + 32;
      v39 = &v9[16 * v37 + 32];
      *(_QWORD *)v39 = v10;
      *((_QWORD *)v39 + 1) = v24;
      v109 = v24;
      if (v37)
      {
        while (2)
        {
          v40 = v12 - 1;
          if (v12 >= 4)
          {
            v45 = &v38[16 * v12];
            v46 = *((_QWORD *)v45 - 8);
            v47 = *((_QWORD *)v45 - 7);
            v51 = __OFSUB__(v47, v46);
            v48 = v47 - v46;
            if (v51)
              goto LABEL_164;
            v50 = *((_QWORD *)v45 - 6);
            v49 = *((_QWORD *)v45 - 5);
            v51 = __OFSUB__(v49, v50);
            v43 = v49 - v50;
            v44 = v51;
            if (v51)
              goto LABEL_165;
            v52 = v12 - 2;
            v53 = &v38[16 * v12 - 32];
            v55 = *(_QWORD *)v53;
            v54 = *((_QWORD *)v53 + 1);
            v51 = __OFSUB__(v54, v55);
            v56 = v54 - v55;
            if (v51)
              goto LABEL_167;
            v51 = __OFADD__(v43, v56);
            v57 = v43 + v56;
            if (v51)
              goto LABEL_170;
            if (v57 >= v48)
            {
              v75 = &v38[16 * v40];
              v77 = *(_QWORD *)v75;
              v76 = *((_QWORD *)v75 + 1);
              v51 = __OFSUB__(v76, v77);
              v78 = v76 - v77;
              if (v51)
                goto LABEL_174;
              v68 = v43 < v78;
            }
            else
            {
LABEL_95:
              if ((v44 & 1) != 0)
                goto LABEL_166;
              v52 = v12 - 2;
              v58 = &v38[16 * v12 - 32];
              v60 = *(_QWORD *)v58;
              v59 = *((_QWORD *)v58 + 1);
              v61 = __OFSUB__(v59, v60);
              v62 = v59 - v60;
              v63 = v61;
              if (v61)
                goto LABEL_169;
              v64 = &v38[16 * v40];
              v66 = *(_QWORD *)v64;
              v65 = *((_QWORD *)v64 + 1);
              v51 = __OFSUB__(v65, v66);
              v67 = v65 - v66;
              if (v51)
                goto LABEL_172;
              if (__OFADD__(v62, v67))
                goto LABEL_173;
              if (v62 + v67 < v43)
                goto LABEL_107;
              v68 = v43 < v67;
            }
            if (v68)
              v40 = v52;
          }
          else
          {
            if (v12 == 3)
            {
              v42 = *((_QWORD *)v9 + 4);
              v41 = *((_QWORD *)v9 + 5);
              v51 = __OFSUB__(v41, v42);
              v43 = v41 - v42;
              v44 = v51;
              goto LABEL_95;
            }
            v69 = *((_QWORD *)v9 + 4);
            v70 = *((_QWORD *)v9 + 5);
            v51 = __OFSUB__(v70, v69);
            v62 = v70 - v69;
            v63 = v51;
LABEL_107:
            if ((v63 & 1) != 0)
              goto LABEL_168;
            v71 = &v38[16 * v40];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v51 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v51)
              goto LABEL_171;
            if (v74 < v62)
              goto LABEL_14;
          }
          v79 = v40 - 1;
          if (v40 - 1 >= v12)
          {
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
            goto LABEL_184;
          }
          if (!v11)
            goto LABEL_186;
          v80 = &v38[16 * v79];
          v81 = *(_QWORD *)v80;
          v82 = &v38[16 * v40];
          v83 = *((_QWORD *)v82 + 1);
          sub_249DBEB10((char *)(v11 + 16 * *(_QWORD *)v80), (char *)(v11 + 16 * *(_QWORD *)v82), v11 + 16 * v83, __dst);
          if (v1)
            goto LABEL_159;
          if (v83 < v81)
            goto LABEL_161;
          if (v40 > *((_QWORD *)v9 + 2))
            goto LABEL_162;
          *(_QWORD *)v80 = v81;
          *(_QWORD *)&v38[16 * v79 + 8] = v83;
          v84 = *((_QWORD *)v9 + 2);
          if (v40 >= v84)
            goto LABEL_163;
          v12 = v84 - 1;
          memmove(&v38[16 * v40], v82 + 16, 16 * (v84 - 1 - v40));
          *((_QWORD *)v9 + 2) = v84 - 1;
          if (v84 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v12 = 1;
LABEL_14:
      v3 = v108;
      v10 = v109;
      v6 = v107;
      if (v109 >= v108)
      {
        v2 = v104;
        if (v12 < 2)
        {
LABEL_159:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v106 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
LABEL_147:
        v98 = *v2;
        while (1)
        {
          v99 = v12 - 2;
          if (v12 < 2)
            goto LABEL_176;
          if (!v98)
            goto LABEL_188;
          v100 = *(_QWORD *)&v9[16 * v99 + 32];
          v101 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_249DBEB10((char *)(v98 + 16 * v100), (char *)(v98 + 16 * *(_QWORD *)&v9[16 * v12 + 16]), v98 + 16 * v101, __dst);
          if (v1)
            goto LABEL_159;
          if (v101 < v100)
            goto LABEL_177;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_249E750A8((uint64_t)v9);
          if (v99 >= *((_QWORD *)v9 + 2))
            goto LABEL_178;
          v102 = &v9[16 * v99 + 32];
          *(_QWORD *)v102 = v100;
          *((_QWORD *)v102 + 1) = v101;
          v103 = *((_QWORD *)v9 + 2);
          if (v12 > v103)
            goto LABEL_179;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v103 - v12));
          *((_QWORD *)v9 + 2) = v103 - 1;
          v12 = v103 - 1;
          if (v103 <= 2)
            goto LABEL_159;
        }
      }
      continue;
    }
    break;
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  result = sub_249F1FBC8();
  __break(1u);
  return result;
}

uint64_t sub_249DBEA74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v16;
  __int128 v17;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    v6 = *(_OWORD *)(v4 + 16 * a3);
    v7 = *(_QWORD *)(v4 + 16 * a3 + 8);
    v8 = *(_QWORD *)(v4 + 16 * a3);
    if (v7 >= v8)
      v9 = *(_QWORD *)(v4 + 16 * a3);
    else
      v9 = *(_QWORD *)(v4 + 16 * a3 + 8);
    if (v7 <= v8)
      v7 = *(_QWORD *)(v4 + 16 * a3);
    v10 = result;
    v11 = (_QWORD *)v5;
    while (1)
    {
      v12 = *v11;
      v13 = v11[1];
      if (v13 >= *v11)
        v14 = *v11;
      else
        v14 = v11[1];
      if (v14 >= v9)
      {
        if (v13 > v12)
          v12 = v11[1];
        if (v9 < v14 || v12 >= v7)
        {
LABEL_4:
          ++a3;
          v5 += 16;
          if (a3 == a2)
            return result;
          goto LABEL_5;
        }
      }
      if (!v4)
        break;
      v16 = v11 + 2;
      v17 = *(_OWORD *)v11;
      *(_OWORD *)v11 = v6;
      v11 -= 2;
      *v16 = v17;
      if (a3 == ++v10)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_249DBEB10(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  char *v34;
  char *v35;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v35 = __src;
  v34 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v22 = &v4[16 * v13];
      v33 = v22;
      v35 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v23 = (char *)(a3 - 16);
        v24 = v6;
        while (1)
        {
          v25 = v23 + 16;
          v26 = *((_QWORD *)v22 - 2);
          v27 = *((_QWORD *)v22 - 1);
          v28 = *((_QWORD *)v24 - 2);
          v29 = *((_QWORD *)v24 - 1);
          v24 -= 16;
          if (v29 >= v28)
            v30 = v28;
          else
            v30 = v29;
          if (v27 >= v26)
            v31 = *((_QWORD *)v22 - 2);
          else
            v31 = *((_QWORD *)v22 - 1);
          if (v30 < v31)
            goto LABEL_50;
          if (v31 < v30)
            goto LABEL_60;
          if (v29 > v28)
            v28 = v29;
          if (v27 > v26)
            v26 = *((_QWORD *)v22 - 1);
          if (v28 < v26)
          {
LABEL_50:
            if (v25 != v6 || v23 >= v6)
              *(_OWORD *)v23 = *(_OWORD *)v24;
            v35 = v24;
            if (v24 <= v7)
              goto LABEL_66;
          }
          else
          {
LABEL_60:
            v33 = v22 - 16;
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *(_OWORD *)v23 = *((_OWORD *)v22 - 1);
            v24 = v6;
            v22 -= 16;
            if (v6 <= v7)
              goto LABEL_66;
          }
          v23 -= 16;
          v6 = v24;
          if (v22 <= v4)
            goto LABEL_66;
        }
      }
      goto LABEL_66;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v33 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6;
        v16 = *((_QWORD *)v6 + 1);
        v17 = *(_QWORD *)v4;
        v18 = *((_QWORD *)v4 + 1);
        if (v18 >= *(_QWORD *)v4)
          v19 = *(_QWORD *)v4;
        else
          v19 = *((_QWORD *)v4 + 1);
        if (v16 >= v15)
          v20 = *(_QWORD *)v6;
        else
          v20 = *((_QWORD *)v6 + 1);
        if (v19 < v20)
          goto LABEL_19;
        if (v20 < v19)
          goto LABEL_29;
        if (v18 > v17)
          v17 = *((_QWORD *)v4 + 1);
        if (v16 > v15)
          v15 = *((_QWORD *)v6 + 1);
        if (v17 < v15)
        {
LABEL_19:
          v21 = v6 + 16;
          if (v7 < v6 || v7 >= v21 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        else
        {
LABEL_29:
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v34 = v4;
          v21 = v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v21;
      }
      while ((unint64_t)v21 < a3);
      v35 = v7;
    }
LABEL_66:
    sub_249E74CF8(&v35, &v34, &v33);
    return 1;
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DBEDE8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_249DBEFE4(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_OWORD *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_249DBF178(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for GeneratedImage();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_249DC091C(*(_QWORD *)(v36 + 56) + v29 * v25, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249D9E308((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    result = sub_249D9E308((uint64_t)v15, a2, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249DBF434(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_249F1E8D8();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_249DCC2FC((uint64_t)v10, &qword_2578D6288);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_249DBF784(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for Concept(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 24);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_249DC091C(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for Concept);
    sub_249D9E308((uint64_t)v12, (uint64_t)v15, type metadata accessor for Concept);
    result = sub_249D9E308((uint64_t)v15, a2, type metadata accessor for Concept);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_249DBFA40(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249DBFA8C()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

void sub_249DBFB70(uint64_t a1, char a2)
{
  sub_249F1FF64();
  __asm { BR              X10 }
}

uint64_t sub_249DBFBC4()
{
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

char *sub_249DBFC60(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DBFD48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

unint64_t sub_249DBFE38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  char v5;
  char v6;
  char v7;
  char v8;
  unint64_t result;
  char v10;
  _BYTE *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C58);
    v3 = (_QWORD *)sub_249F1FC1C();
    for (i = (char *)(a1 + 35); ; i += 4)
    {
      v5 = *(i - 3);
      v6 = *(i - 2);
      v7 = *(i - 1);
      v8 = *i;
      result = sub_249DB7EA8(v5);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      v11 = (_BYTE *)(v3[7] + 3 * result);
      *v11 = v6;
      v11[1] = v7;
      v11[2] = v8;
      v12 = v3[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v3[2] = v14;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

_QWORD *sub_249DBFF2C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v5;

  v0 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v1 = sub_249E9A454();
  if (v1)
  {
    sub_249E5DC60(v1);
    v0 = v5;
  }
  if (!v0[2])
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_249DB2FF4(0, 1, 1, v0, &qword_2578D6518);
    v3 = v0[2];
    v2 = v0[3];
    if (v3 >= v2 >> 1)
      v0 = sub_249DB2FF4((_QWORD *)(v2 > 1), v3 + 1, 1, v0, &qword_2578D6518);
    v0[2] = v3 + 1;
    *(int64x2_t *)&v0[2 * v3 + 4] = vdupq_n_s64(0x200uLL);
  }
  return v0;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC6clientAcA14ClientIdentityV_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  v2 = type metadata accessor for DefinitionSession();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - v6;
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v20 = *(_DWORD *)(a1 + 16);
  if (qword_2578D5D78 != -1)
    swift_once();
  v10 = sub_249F1EF38();
  __swift_project_value_buffer(v10, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v11 = sub_249F1EF20();
  v12 = sub_249F1F82C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v21 = v14;
    v22 = v9;
    v19[1] = v13 + 4;
    v23 = v8;
    v24 = v20;
    swift_bridgeObjectRetain();
    v15 = sub_249F1F3AC();
    v22 = sub_249E68CA8(v15, v16, &v21);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v11, v12, "Creating generator for %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v14, -1, -1);
    MEMORY[0x24BD06618](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for AppleDiffusionResourceFactory(0);
  static AppleDiffusionResourceFactory.shared()();
  v22 = v9;
  v23 = v8;
  v24 = v20;
  sub_249E991D0((uint64_t)&v22, 1, 0, 0, (uint64_t)v7);
  sub_249DC091C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  type metadata accessor for GenerativePlayground();
  swift_allocObject();
  v17 = sub_249D9EAD4((uint64_t)v5);
  sub_249DC05A8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_release();
  return v17;
}

uint64_t type metadata accessor for GenerativePlayground.PromptAssignmentOptions(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D6788);
}

uint64_t sub_249DC02EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DC0334(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_249F1E8F0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6EF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_249D9BBEC(&qword_2578D6EF8, v3, MEMORY[0x24BDCEB78]);
  v19 = sub_249F1F70C();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_249DB35FC((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_249DC0504(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_249DCC420;
  return sub_249D9FD08(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_249DC05A8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249DC05E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_249DCC420;
  return GenerativePlayground.dropPromptAssignment()();
}

uint64_t sub_249DC064C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v2 = v0[4];
  v3 = (int *)v0[5];
  v4 = v0[7];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_249DCC420;
  v5[2] = v2;
  v5[3] = v4;
  v8 = (uint64_t (*)(void))((char *)v3 + *v3);
  v6 = (_QWORD *)swift_task_alloc();
  v5[4] = v6;
  *v6 = v5;
  v6[1] = sub_249DB1E14;
  return v8();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_249DC0700()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_249DCC420;
  return GenerativePlayground.dropPromptGuidanceSketchAssignment()();
}

uint64_t sub_249DC0768(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result;

  if (a4)
  {

    return swift_release();
  }
  return result;
}

void sub_249DC0794(id a1, char a2)
{
  if (a2 != -1)

}

id sub_249DC07A8(id result, char a2)
{
  if (a2 != -1)
    return result;
  return result;
}

uint64_t sub_249DC07BC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_249DCC420;
  return GenerativePlayground.dropDrawOnImageAssignment()();
}

void sub_249DC0824(void *a1, char a2, void *a3, uint64_t a4, void *a5)
{
  if (a2 != -1)
  {

  }
}

uint64_t sub_249DC0868()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_249DCC420;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_249DCC420;
  return GenerativePlayground.dropPromptConditioningImageAssignment()();
}

uint64_t sub_249DC08D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result;

  if (a4)
  {

    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249DC091C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249DC0960(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for GenerativePlayground.PreviewGenerationSession(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D68E8);
}

uint64_t sub_249DC09B8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_249DC09C8(uint64_t a1)
{
  uint64_t v1;

  return sub_249DA713C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_DWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_DWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(void **)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t type metadata accessor for GenerativePlayground.PreviewGenerationEvent(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D6858);
}

uint64_t sub_249DC0A2C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_249DC0A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_249DCC420;
  return sub_249DA8B1C(a1, v1);
}

uint64_t sub_249DC0A94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD *);

  v2 = v0[4];
  v3 = (int *)v0[5];
  v4 = v0[7];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_249DAFCF8;
  v5[4] = v2;
  v5[5] = v4;
  v8 = (uint64_t (*)(_QWORD *))((char *)v3 + *v3);
  v6 = (_QWORD *)swift_task_alloc();
  v5[6] = v6;
  *v6 = v5;
  v6[1] = sub_249DB1F04;
  return v8(v5 + 2);
}

uint64_t sub_249DC0B30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DC0B54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_249DCC420;
  return sub_249DA8DB0(a1, v4, v5, v6);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DC0C00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_249DCC420;
  return sub_249DA9D4C(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_249DC0CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_249DC0CB8(uint64_t a1)
{
  uint64_t *v1;

  return sub_249DAA948(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t type metadata accessor for GenerativePlayground.ImageGenerationEvent(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D6B08);
}

uint64_t type metadata accessor for GenerativePlayground.ImageGenerationSession(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D6B68);
}

uint64_t sub_249DC0CF0(uint64_t a1)
{
  uint64_t v1;

  return sub_249DACE0C(a1, v1);
}

char *sub_249DC0CF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DC0DDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DC0ECC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DC0FBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DC10D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

unint64_t sub_249DC11C8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E30);
  v3 = (_QWORD *)sub_249F1FC1C();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_249DB8068(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v4;
    v10[1] = v5;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_249DB8068(v4, v5);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_249DC12DC()
{
  unint64_t result;

  result = qword_2578D6510;
  if (!qword_2578D6510)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PixelDimensions, &type metadata for PixelDimensions);
    atomic_store(result, (unint64_t *)&qword_2578D6510);
  }
  return result;
}

unint64_t sub_249DC1324()
{
  unint64_t result;

  result = qword_2578D6528;
  if (!qword_2578D6528)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenerativePlayground.Error, &type metadata for GenerativePlayground.Error);
    atomic_store(result, (unint64_t *)&qword_2578D6528);
  }
  return result;
}

unint64_t sub_249DC136C()
{
  unint64_t result;

  result = qword_2578D6580;
  if (!qword_2578D6580)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenerativePlayground.Error, &type metadata for GenerativePlayground.Error);
    atomic_store(result, (unint64_t *)&qword_2578D6580);
  }
  return result;
}

unint64_t sub_249DC13B8()
{
  unint64_t result;

  result = qword_2578D6588;
  if (!qword_2578D6588)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode, &type metadata for GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode);
    atomic_store(result, (unint64_t *)&qword_2578D6588);
  }
  return result;
}

uint64_t sub_249DC140C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = GenerativePlayground.generationSeed.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_249DC143C(uint64_t a1)
{
  GenerativePlayground.generationSeed.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t type metadata accessor for GenerativePlayground()
{
  return objc_opt_self();
}

uint64_t method lookup function for GenerativePlayground()
{
  return swift_lookUpClassMethod();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.Error()
{
  return &type metadata for GenerativePlayground.Error;
}

_QWORD *initializeBufferWithCopyOfBuffer for GenerativePlayground.PromptAssignmentOptions(_WORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_249F1E8D8();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for GenerativePlayground.PromptAssignmentOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_249F1E8D8();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_WORD *initializeWithCopy for GenerativePlayground.PromptAssignmentOptions(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_249F1E8D8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *assignWithCopy for GenerativePlayground.PromptAssignmentOptions(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1E8D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
  return a1;
}

_WORD *initializeWithTake for GenerativePlayground.PromptAssignmentOptions(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_249F1E8D8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  return a1;
}

_BYTE *assignWithTake for GenerativePlayground.PromptAssignmentOptions(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_249F1E8D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)&a1[v15] = *(_QWORD *)v17;
  swift_bridgeObjectRelease();
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptAssignmentOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DC1B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptAssignmentOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DC1B90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_249DC1C10()
{
  unint64_t v0;

  sub_249DC5A14(319, qword_2578D6798, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

id sub_249DC1CAC(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for GenerativePlayground.PromptAssignmentEvent(uint64_t a1)
{
  sub_249DC1CF8(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_249DC1CF8(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC21PromptAssignmentEventOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249DC1CAC(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.PromptAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249DC1CAC(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_249DC1CF8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.PromptAssignmentEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_249DC1CF8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptAssignmentEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptAssignmentEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_249DC1EB4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_249DC1ECC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptAssignmentEvent()
{
  return &type metadata for GenerativePlayground.PromptAssignmentEvent;
}

_QWORD *destroy for GenerativePlayground.PromptAssignmentInteractable(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release();
  if (v1[2])
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *initializeWithCopy for GenerativePlayground.PromptAssignmentInteractable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

_QWORD *assignWithCopy for GenerativePlayground.PromptAssignmentInteractable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for GenerativePlayground.PromptAssignmentInteractable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptAssignmentInteractable(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptAssignmentInteractable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptAssignmentInteractable()
{
  return &type metadata for GenerativePlayground.PromptAssignmentInteractable;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptGuidanceSketchAssignmentOptions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptGuidanceSketchAssignmentOptions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentOptions()
{
  return &type metadata for GenerativePlayground.PromptGuidanceSketchAssignmentOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for GenerativePlayground.PromptGuidanceSketchAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249DC2FA8(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for GenerativePlayground.PromptGuidanceSketchAssignmentEvent(uint64_t a1)
{
  sub_249DC2FCC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.PromptGuidanceSketchAssignmentEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_249DC2FCC(v4, v5);
  return a1;
}

uint64_t sub_249DC2324(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_249DC2330(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_249DC2340(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentEvent()
{
  return &type metadata for GenerativePlayground.PromptGuidanceSketchAssignmentEvent;
}

void destroy for DefinitionSession.DrawOnImageConfiguration(id *a1)
{

}

uint64_t initializeWithCopy for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  id v9;
  id v10;
  id v11;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  v9 = v3;
  v10 = v5;
  v11 = v7;
  return a1;
}

uint64_t assignWithCopy for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;
  void *v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  char v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  v7 = v4;

  v8 = *(void **)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v11 = v8;

  v12 = *(void **)(a2 + 32);
  v13 = *(_BYTE *)(a2 + 40);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v13;
  v15 = v12;

  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  void *v9;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  v6 = *(_BYTE *)(a2 + 24);
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;

  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DefinitionSession.DrawOnImageConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageConfiguration()
{
  return &type metadata for GenerativePlayground.DrawOnImageConfiguration;
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentOptions(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[9])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageAssignmentOptions()
{
  return &type metadata for GenerativePlayground.DrawOnImageAssignmentOptions;
}

uint64_t getEnumTagSinglePayload for TextSanitizer.Granularity(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC5ErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DC2728 + 4 * byte_249F21992[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DC275C + 4 * byte_249F2198D[v4]))();
}

uint64_t sub_249DC275C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DC2764(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DC276CLL);
  return result;
}

uint64_t sub_249DC2778(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DC2780);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DC2784(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DC278C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DC2798(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_249DC27A0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode()
{
  return &type metadata for GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode;
}

id *sub_249DC27C8(id *a1)
{
  destroy for Image(a1);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawnOnImageAssignmentEventInfo()
{
  return &type metadata for GenerativePlayground.DrawnOnImageAssignmentEventInfo;
}

void _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwxx_0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) != 255)

  if (*(unsigned __int8 *)(a1 + 24) != 255)
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwcp_0(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  id v6;
  _QWORD *v7;
  int v8;
  void *v9;
  id v10;

  v4 = *(unsigned __int8 *)(a2 + 8);
  if (v4 == 255)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  }
  else
  {
    v5 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v4;
    v6 = v5;
  }
  v7 = (_QWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 24);
  if (v8 == 255)
  {
    *(_QWORD *)(a1 + 16) = *v7;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  }
  else
  {
    v9 = (void *)*v7;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v8;
    v10 = v9;
  }
  return a1;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwca_0(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  void *v11;
  void **v12;
  void **v13;
  int v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  void *v21;

  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v4 == 255)
    {
      v11 = *(void **)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)a1 = v11;
    }
    else
    {
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = v4;
      v9 = v8;
    }
  }
  else if (v4 == 255)
  {
    sub_249DC27C8((id *)a1);
    v10 = *(_BYTE *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v10;
  }
  else
  {
    v5 = *(void **)a2;
    v6 = *(id *)a1;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v4;
    v7 = v5;

  }
  v12 = (void **)(a1 + 16);
  v13 = (void **)(a2 + 16);
  v14 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v14 == 255)
    {
      v21 = *v13;
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *v12 = v21;
    }
    else
    {
      v18 = *v13;
      *(_QWORD *)(a1 + 16) = *v13;
      *(_BYTE *)(a1 + 24) = v14;
      v19 = v18;
    }
  }
  else if (v14 == 255)
  {
    sub_249DC27C8((id *)(a1 + 16));
    v20 = *(_BYTE *)(a2 + 24);
    *v12 = *v13;
    *(_BYTE *)(a1 + 24) = v20;
  }
  else
  {
    v15 = *v13;
    v16 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = *v13;
    *(_BYTE *)(a1 + 24) = v14;
    v17 = v15;

  }
  return a1;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwta_0(uint64_t a1, uint64_t a2)
{
  int v4;
  id v5;
  _QWORD *v6;
  int v7;
  void *v8;

  if (*(unsigned __int8 *)(a1 + 8) != 255)
  {
    v4 = *(unsigned __int8 *)(a2 + 8);
    if (v4 != 255)
    {
      v5 = *(id *)a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = v4;

      goto LABEL_6;
    }
    sub_249DC27C8((id *)a1);
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
LABEL_6:
  v6 = (_QWORD *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
LABEL_10:
    *(_QWORD *)(a1 + 16) = *v6;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    return a1;
  }
  v7 = *(unsigned __int8 *)(a2 + 24);
  if (v7 == 255)
  {
    sub_249DC27C8((id *)(a1 + 16));
    goto LABEL_10;
  }
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *v6;
  *(_BYTE *)(a1 + 24) = v7;

  return a1;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = (v3 ^ 0xFF) - 1;
  return (v4 + 1);
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImagePromptSynthesisEventInfo()
{
  return &type metadata for GenerativePlayground.DrawOnImagePromptSynthesisEventInfo;
}

id sub_249DC2B98(id result, unint64_t a2, void *a3, char a4)
{
  switch(a2 >> 61)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 5uLL:
      sub_249DC07A8(result, a2);
      result = sub_249DC07A8(a3, a4);
      break;
    case 1uLL:
    case 4uLL:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1)
{
  sub_249DC2C14(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_249DC2C14(void *a1, unint64_t a2, void *a3, char a4)
{
  switch(a2 >> 61)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 5uLL:
      sub_249DC0794(a1, a2);
      sub_249DC0794(a3, a4);
      break;
    case 1uLL:
    case 4uLL:

      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_249DC2B98(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  void *v5;
  char v6;
  void *v7;
  unint64_t v8;
  void *v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_249DC2B98(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_249DC2C14(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_249DC2C14(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 9);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)-a2 << 8;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_249DC2E2C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 61;
}

uint64_t sub_249DC2E38(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_249DC2E48(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(unsigned __int8 *)(result + 8) | (unint64_t)(a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageAssignmentEvent()
{
  return &type metadata for GenerativePlayground.DrawOnImageAssignmentEvent;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageFaceInfo()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageFaceInfo;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptConditioningImageAssignmentOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptConditioningImageAssignmentOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentOptions()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageAssignmentOptions;
}

id sub_249DC2FA8(id result, unsigned __int8 a2)
{
  if ((a2 >> 6) <= 2u)
    return result;
  return result;
}

void sub_249DC2FCC(id a1, unsigned __int8 a2)
{
  if ((a2 >> 6) <= 2u)

}

uint64_t assignWithCopy for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249DC2FA8(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_249DC2FCC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentEvent()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageAssignmentEvent;
}

uint64_t destroy for ClientIdentity()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 28))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PreviewGenerationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 28) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 28) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PreviewGenerationOptions()
{
  return &type metadata for GenerativePlayground.PreviewGenerationOptions;
}

char *initializeBufferWithCopyOfBuffer for GenerativePlayground.PreviewGenerationEvent(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char **, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, int *);
  uint64_t v37;
  int *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void *v60;
  uint64_t v61;
  id v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void *v67;
  uint64_t v68;
  id v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void *v81;
  uint64_t v82;
  id v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  uint64_t v89;
  id v90;
  __int128 v91;
  _OWORD *v92;
  _OWORD *v93;
  void *v94;
  uint64_t v95;
  id v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *__dst;
  int *v115;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v18 = *a2;
      v19 = v18;
      *(_QWORD *)a1 = v18;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_249F1E8D8();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(char *, char **, uint64_t))(v9 + 16);
      v10(a1, a2, v8);
      v11 = (int *)type metadata accessor for GenerationState();
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))((char *)a2 + v12, 1, v8))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v10(v13, (char **)v14, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
      }
      v20 = v11[6];
      v21 = &a1[v20];
      v22 = (char **)((char *)a2 + v20);
      v23 = v22[1];
      *(_QWORD *)v21 = *v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = v11[7];
      v25 = &a1[v24];
      v26 = (char *)a2 + v24;
      *v25 = *((_BYTE *)a2 + v24);
      v27 = *(uint64_t *)((char *)a2 + v24 + 8);
      v28 = *((_QWORD *)v26 + 2);
      *((_QWORD *)v25 + 1) = v27;
      *((_QWORD *)v25 + 2) = v28;
      v25[40] = v26[40];
      *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
      *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
      *((_DWORD *)v25 + 14) = *((_DWORD *)v26 + 14);
      v25[60] = v26[60];
      v25[61] = v26[61];
      v25[62] = v26[62];
      v30 = *((_QWORD *)v26 + 8);
      v29 = *((_QWORD *)v26 + 9);
      v25[80] = v26[80];
      *((_QWORD *)v25 + 8) = v30;
      *((_QWORD *)v25 + 9) = v29;
      v31 = type metadata accessor for GenerationRecipe(0);
      v32 = *(int *)(v31 + 32);
      __dst = &v25[v32];
      v115 = (int *)v31;
      v33 = &v26[v32];
      v34 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v35 = *((_QWORD *)v34 - 1);
      v36 = *(unsigned int (**)(char *, uint64_t, int *))(v35 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36(v33, 1, v34))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v38 = v115;
      }
      else
      {
        v113 = v35;
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        v40(__dst, v33, v39);
        v40(&__dst[v34[5]], &v33[v34[5]], v39);
        v41 = v34[6];
        v42 = (uint64_t *)&__dst[v41];
        v43 = (uint64_t *)&v33[v41];
        if (*(_QWORD *)&v33[v41 + 16])
        {
          v44 = v33;
          v45 = *v43;
          v46 = v43[1];
          sub_249DC3928(*v43, v46);
          *v42 = v45;
          v42[1] = v46;
          v33 = v44;
          v42[2] = v43[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v42 = *(_OWORD *)v43;
          v42[2] = v43[2];
        }
        v38 = v115;
        __dst[v34[7]] = v33[v34[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v113 + 56))(__dst, 0, 1, v34);
      }
      v47 = v38[9];
      v48 = &v25[v47];
      v49 = &v26[v47];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v48[4] = v49[4];
      v50 = v38[10];
      v51 = &v25[v50];
      v52 = &v26[v50];
      v51[4] = v52[4];
      *(_DWORD *)v51 = *(_DWORD *)v52;
      v53 = v38[11];
      v54 = &v25[v53];
      v55 = &v26[v53];
      *(_WORD *)v54 = *(_WORD *)v55;
      v54[2] = v55[2];
      v56 = *((_QWORD *)v55 + 2);
      *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
      *((_QWORD *)v54 + 2) = v56;
      *(_QWORD *)&v25[v38[12]] = *(_QWORD *)&v26[v38[12]];
      *(_QWORD *)&v25[v38[13]] = *(_QWORD *)&v26[v38[13]];
      v57 = v38[14];
      v58 = &v25[v57];
      v59 = &v26[v57];
      v60 = *(void **)&v26[v57 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60)
      {
        *(_OWORD *)v58 = *(_OWORD *)v59;
        *((_DWORD *)v58 + 4) = *((_DWORD *)v59 + 4);
        v61 = *((_QWORD *)v59 + 4);
        *((_QWORD *)v58 + 3) = v60;
        *((_QWORD *)v58 + 4) = v61;
        v62 = v60;
        swift_retain();
      }
      else
      {
        v63 = *((_OWORD *)v59 + 1);
        *(_OWORD *)v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v63;
        *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
      }
      v64 = v38[15];
      v65 = &v25[v64];
      v66 = &v26[v64];
      v67 = (void *)*((_QWORD *)v66 + 3);
      if (v67)
      {
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_DWORD *)v65 + 4) = *((_DWORD *)v66 + 4);
        v68 = *((_QWORD *)v66 + 4);
        *((_QWORD *)v65 + 3) = v67;
        *((_QWORD *)v65 + 4) = v68;
        v69 = v67;
        swift_retain();
      }
      else
      {
        v70 = *((_OWORD *)v66 + 1);
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_OWORD *)v65 + 1) = v70;
        *((_QWORD *)v65 + 4) = *((_QWORD *)v66 + 4);
      }
      v71 = v38[16];
      v72 = &v25[v71];
      v73 = &v26[v71];
      v74 = (void *)*((_QWORD *)v73 + 3);
      if (v74)
      {
        *(_OWORD *)v72 = *(_OWORD *)v73;
        *((_DWORD *)v72 + 4) = *((_DWORD *)v73 + 4);
        v75 = *((_QWORD *)v73 + 4);
        *((_QWORD *)v72 + 3) = v74;
        *((_QWORD *)v72 + 4) = v75;
        v76 = v74;
        swift_retain();
      }
      else
      {
        v77 = *((_OWORD *)v73 + 1);
        *(_OWORD *)v72 = *(_OWORD *)v73;
        *((_OWORD *)v72 + 1) = v77;
        *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
      }
      v78 = v38[17];
      v79 = &v25[v78];
      v80 = &v26[v78];
      v81 = (void *)*((_QWORD *)v80 + 3);
      if (v81)
      {
        *(_OWORD *)v79 = *(_OWORD *)v80;
        *((_DWORD *)v79 + 4) = *((_DWORD *)v80 + 4);
        v82 = *((_QWORD *)v80 + 4);
        *((_QWORD *)v79 + 3) = v81;
        *((_QWORD *)v79 + 4) = v82;
        v83 = v81;
        swift_retain();
      }
      else
      {
        v84 = *((_OWORD *)v80 + 1);
        *(_OWORD *)v79 = *(_OWORD *)v80;
        *((_OWORD *)v79 + 1) = v84;
        *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
      }
      v85 = v38[18];
      v86 = &v25[v85];
      v87 = &v26[v85];
      v88 = *(void **)&v26[v85 + 24];
      if (v88)
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        *((_DWORD *)v86 + 4) = *((_DWORD *)v87 + 4);
        v89 = *((_QWORD *)v87 + 4);
        *((_QWORD *)v86 + 3) = v88;
        *((_QWORD *)v86 + 4) = v89;
        v90 = v88;
        swift_retain();
      }
      else
      {
        v91 = *((_OWORD *)v87 + 1);
        *(_OWORD *)v86 = *(_OWORD *)v87;
        *((_OWORD *)v86 + 1) = v91;
        *((_QWORD *)v86 + 4) = *((_QWORD *)v87 + 4);
      }
      v92 = v86 + 40;
      v93 = v87 + 40;
      v94 = (void *)*((_QWORD *)v87 + 8);
      if (v94)
      {
        *v92 = *v93;
        *((_DWORD *)v86 + 14) = *((_DWORD *)v87 + 14);
        v95 = *((_QWORD *)v87 + 9);
        *((_QWORD *)v86 + 8) = v94;
        *((_QWORD *)v86 + 9) = v95;
        v96 = v94;
        swift_retain();
      }
      else
      {
        v97 = *(_OWORD *)(v87 + 56);
        *v92 = *v93;
        *(_OWORD *)(v86 + 56) = v97;
        *((_QWORD *)v86 + 9) = *((_QWORD *)v87 + 9);
      }
      v86[80] = v87[80];
      *(_QWORD *)&v25[v38[19]] = *(_QWORD *)&v26[v38[19]];
      v98 = v38[20];
      v99 = &v25[v98];
      v100 = &v26[v98];
      v101 = *(void **)&v26[v98 + 24];
      swift_bridgeObjectRetain();
      if (v101)
      {
        *(_OWORD *)v99 = *(_OWORD *)v100;
        *((_DWORD *)v99 + 4) = *((_DWORD *)v100 + 4);
        v102 = *((_QWORD *)v100 + 4);
        v103 = *((_QWORD *)v100 + 5);
        *((_QWORD *)v99 + 3) = v101;
        *((_QWORD *)v99 + 4) = v102;
        v104 = *((_QWORD *)v100 + 6);
        v105 = *((_QWORD *)v100 + 7);
        *((_QWORD *)v99 + 5) = v103;
        *((_QWORD *)v99 + 6) = v104;
        *((_QWORD *)v99 + 7) = v105;
        v106 = v101;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v107 = *((_OWORD *)v100 + 1);
        *(_OWORD *)v99 = *(_OWORD *)v100;
        *((_OWORD *)v99 + 1) = v107;
        v108 = *((_OWORD *)v100 + 3);
        *((_OWORD *)v99 + 2) = *((_OWORD *)v100 + 2);
        *((_OWORD *)v99 + 3) = v108;
      }
      v109 = v38[21];
      v110 = &v25[v109];
      v111 = &v26[v109];
      v112 = *((_QWORD *)v111 + 1);
      *(_QWORD *)v110 = *(_QWORD *)v111;
      *((_QWORD *)v110 + 1) = v112;
      *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
      *(_QWORD *)&v25[v38[22]] = *(_QWORD *)&v26[v38[22]];
      v25[v38[23]] = v26[v38[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_249DC3928(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void destroy for GenerativePlayground.PreviewGenerationEvent(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(id *, uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:

      break;
    case 2:
      swift_release();
      break;
    case 0:
      v3 = sub_249F1E8D8();
      v4 = *(_QWORD *)(v3 - 8);
      v5 = *(void (**)(id *, uint64_t))(v4 + 8);
      v5(a1, v3);
      v6 = type metadata accessor for GenerationState();
      v7 = (char *)a1 + *(int *)(v6 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3))
        v5((id *)v7, v3);
      swift_bridgeObjectRelease();
      v8 = (char *)a1 + *(int *)(v6 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = (int *)type metadata accessor for GenerationRecipe(0);
      v10 = &v8[v9[8]];
      v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v13(v10, v12);
        v13(&v10[*(int *)(v11 + 20)], v12);
        v14 = (uint64_t *)&v10[*(int *)(v11 + 24)];
        if (v14[2])
        {
          sub_249DC3C24(*v14, v14[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(void **)&v8[v9[14] + 24];
      if (v15)
      {

        swift_release();
      }
      v16 = *(void **)&v8[v9[15] + 24];
      if (v16)
      {

        swift_release();
      }
      v17 = *(void **)&v8[v9[16] + 24];
      if (v17)
      {

        swift_release();
      }
      v18 = *(void **)&v8[v9[17] + 24];
      if (v18)
      {

        swift_release();
      }
      v19 = &v8[v9[18]];
      v20 = (void *)*((_QWORD *)v19 + 3);
      if (v20)
      {

        swift_release();
      }
      v21 = (void *)*((_QWORD *)v19 + 8);
      if (v21)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      v22 = *(void **)&v8[v9[20] + 24];
      if (v22)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_249DC3C24(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void **initializeWithCopy for GenerativePlayground.PreviewGenerationEvent(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void **, void **, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  int *v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void *v54;
  uint64_t v55;
  id v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  uint64_t v62;
  id v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  uint64_t v69;
  id v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void *v75;
  uint64_t v76;
  id v77;
  __int128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void *v82;
  uint64_t v83;
  id v84;
  __int128 v85;
  _OWORD *v86;
  _OWORD *v87;
  void *v88;
  uint64_t v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *__dst;
  void **v109;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v15 = *a2;
      v16 = v15;
      *a1 = v15;
LABEL_38:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      *a1 = *a2;
      swift_retain();
      goto LABEL_38;
    case 0:
      v7 = sub_249F1E8D8();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(void **, void **, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      v10 = (int *)type metadata accessor for GenerationState();
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)a2 + v11, 1, v7))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9((void **)v12, (void **)v13, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      v17 = v10[6];
      v18 = (void **)((char *)a1 + v17);
      v19 = (void **)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = v10[7];
      v109 = a1;
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      *v22 = *((_BYTE *)a2 + v21);
      v24 = *(uint64_t *)((char *)a2 + v21 + 16);
      *((_QWORD *)v22 + 1) = *(void **)((char *)a2 + v21 + 8);
      *((_QWORD *)v22 + 2) = v24;
      v22[40] = *((_BYTE *)a2 + v21 + 40);
      *(_OWORD *)(v22 + 24) = *(_OWORD *)((char *)a2 + v21 + 24);
      *((_QWORD *)v22 + 6) = *(void **)((char *)a2 + v21 + 48);
      *((_DWORD *)v22 + 14) = *(_DWORD *)((char *)a2 + v21 + 56);
      v22[60] = *((_BYTE *)a2 + v21 + 60);
      v22[61] = *((_BYTE *)a2 + v21 + 61);
      v22[62] = *((_BYTE *)a2 + v21 + 62);
      v26 = *(uint64_t *)((char *)a2 + v21 + 64);
      v25 = *(uint64_t *)((char *)a2 + v21 + 72);
      v22[80] = v23[80];
      *((_QWORD *)v22 + 8) = v26;
      *((_QWORD *)v22 + 9) = v25;
      v27 = (int *)type metadata accessor for GenerationRecipe(0);
      v28 = v27[8];
      __dst = &v22[v28];
      v29 = &v23[v28];
      v30 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v31 = *((_QWORD *)v30 - 1);
      v32 = *(unsigned int (**)(char *, uint64_t, int *))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32(v29, 1, v30))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
        v35(__dst, v29, v34);
        v35(&__dst[v30[5]], &v29[v30[5]], v34);
        v36 = v30[6];
        v37 = (uint64_t *)&__dst[v36];
        v38 = (uint64_t *)&v29[v36];
        if (*(_QWORD *)&v29[v36 + 16])
        {
          v39 = *v38;
          v40 = v38[1];
          sub_249DC3928(*v38, v40);
          *v37 = v39;
          v37[1] = v40;
          v37[2] = v38[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v37 = *(_OWORD *)v38;
          v37[2] = v38[2];
        }
        __dst[v30[7]] = v29[v30[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(__dst, 0, 1, v30);
      }
      v41 = v27[9];
      v42 = &v22[v41];
      v43 = &v23[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      v44 = v27[10];
      v45 = &v22[v44];
      v46 = &v23[v44];
      v45[4] = v46[4];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v47 = v27[11];
      v48 = &v22[v47];
      v49 = &v23[v47];
      *(_WORD *)v48 = *(_WORD *)v49;
      v48[2] = v49[2];
      v50 = *((_QWORD *)v49 + 2);
      *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
      *((_QWORD *)v48 + 2) = v50;
      *(_QWORD *)&v22[v27[12]] = *(_QWORD *)&v23[v27[12]];
      *(_QWORD *)&v22[v27[13]] = *(_QWORD *)&v23[v27[13]];
      v51 = v27[14];
      v52 = &v22[v51];
      v53 = &v23[v51];
      v54 = *(void **)&v23[v51 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v109;
      if (v54)
      {
        *(_OWORD *)v52 = *(_OWORD *)v53;
        *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
        v55 = *((_QWORD *)v53 + 4);
        *((_QWORD *)v52 + 3) = v54;
        *((_QWORD *)v52 + 4) = v55;
        v56 = v54;
        swift_retain();
      }
      else
      {
        v57 = *((_OWORD *)v53 + 1);
        *(_OWORD *)v52 = *(_OWORD *)v53;
        *((_OWORD *)v52 + 1) = v57;
        *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
      }
      v58 = v27[15];
      v59 = &v22[v58];
      v60 = &v23[v58];
      v61 = (void *)*((_QWORD *)v60 + 3);
      if (v61)
      {
        *(_OWORD *)v59 = *(_OWORD *)v60;
        *((_DWORD *)v59 + 4) = *((_DWORD *)v60 + 4);
        v62 = *((_QWORD *)v60 + 4);
        *((_QWORD *)v59 + 3) = v61;
        *((_QWORD *)v59 + 4) = v62;
        v63 = v61;
        swift_retain();
      }
      else
      {
        v64 = *((_OWORD *)v60 + 1);
        *(_OWORD *)v59 = *(_OWORD *)v60;
        *((_OWORD *)v59 + 1) = v64;
        *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
      }
      v65 = v27[16];
      v66 = &v22[v65];
      v67 = &v23[v65];
      v68 = (void *)*((_QWORD *)v67 + 3);
      if (v68)
      {
        *(_OWORD *)v66 = *(_OWORD *)v67;
        *((_DWORD *)v66 + 4) = *((_DWORD *)v67 + 4);
        v69 = *((_QWORD *)v67 + 4);
        *((_QWORD *)v66 + 3) = v68;
        *((_QWORD *)v66 + 4) = v69;
        v70 = v68;
        swift_retain();
      }
      else
      {
        v71 = *((_OWORD *)v67 + 1);
        *(_OWORD *)v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v71;
        *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
      }
      v72 = v27[17];
      v73 = &v22[v72];
      v74 = &v23[v72];
      v75 = (void *)*((_QWORD *)v74 + 3);
      if (v75)
      {
        *(_OWORD *)v73 = *(_OWORD *)v74;
        *((_DWORD *)v73 + 4) = *((_DWORD *)v74 + 4);
        v76 = *((_QWORD *)v74 + 4);
        *((_QWORD *)v73 + 3) = v75;
        *((_QWORD *)v73 + 4) = v76;
        v77 = v75;
        swift_retain();
      }
      else
      {
        v78 = *((_OWORD *)v74 + 1);
        *(_OWORD *)v73 = *(_OWORD *)v74;
        *((_OWORD *)v73 + 1) = v78;
        *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
      }
      v79 = v27[18];
      v80 = &v22[v79];
      v81 = &v23[v79];
      v82 = *(void **)&v23[v79 + 24];
      if (v82)
      {
        *(_OWORD *)v80 = *(_OWORD *)v81;
        *((_DWORD *)v80 + 4) = *((_DWORD *)v81 + 4);
        v83 = *((_QWORD *)v81 + 4);
        *((_QWORD *)v80 + 3) = v82;
        *((_QWORD *)v80 + 4) = v83;
        v84 = v82;
        swift_retain();
      }
      else
      {
        v85 = *((_OWORD *)v81 + 1);
        *(_OWORD *)v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v85;
        *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
      }
      v86 = v80 + 40;
      v87 = v81 + 40;
      v88 = (void *)*((_QWORD *)v81 + 8);
      if (v88)
      {
        *v86 = *v87;
        *((_DWORD *)v80 + 14) = *((_DWORD *)v81 + 14);
        v89 = *((_QWORD *)v81 + 9);
        *((_QWORD *)v80 + 8) = v88;
        *((_QWORD *)v80 + 9) = v89;
        v90 = v88;
        swift_retain();
      }
      else
      {
        v91 = *(_OWORD *)(v81 + 56);
        *v86 = *v87;
        *(_OWORD *)(v80 + 56) = v91;
        *((_QWORD *)v80 + 9) = *((_QWORD *)v81 + 9);
      }
      v80[80] = v81[80];
      *(_QWORD *)&v22[v27[19]] = *(_QWORD *)&v23[v27[19]];
      v92 = v27[20];
      v93 = &v22[v92];
      v94 = &v23[v92];
      v95 = *(void **)&v23[v92 + 24];
      swift_bridgeObjectRetain();
      if (v95)
      {
        *(_OWORD *)v93 = *(_OWORD *)v94;
        *((_DWORD *)v93 + 4) = *((_DWORD *)v94 + 4);
        v96 = *((_QWORD *)v94 + 4);
        v97 = *((_QWORD *)v94 + 5);
        *((_QWORD *)v93 + 3) = v95;
        *((_QWORD *)v93 + 4) = v96;
        v98 = *((_QWORD *)v94 + 6);
        v99 = *((_QWORD *)v94 + 7);
        *((_QWORD *)v93 + 5) = v97;
        *((_QWORD *)v93 + 6) = v98;
        *((_QWORD *)v93 + 7) = v99;
        v100 = v95;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v101 = *((_OWORD *)v94 + 1);
        *(_OWORD *)v93 = *(_OWORD *)v94;
        *((_OWORD *)v93 + 1) = v101;
        v102 = *((_OWORD *)v94 + 3);
        *((_OWORD *)v93 + 2) = *((_OWORD *)v94 + 2);
        *((_OWORD *)v93 + 3) = v102;
      }
      v103 = v27[21];
      v104 = &v22[v103];
      v105 = &v23[v103];
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *((_QWORD *)v104 + 1) = v106;
      *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
      *(_QWORD *)&v22[v27[22]] = *(_QWORD *)&v23[v27[22]];
      v22[v27[23]] = v23[v27[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **assignWithCopy for GenerativePlayground.PreviewGenerationEvent(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void **, void **, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  void *v56;
  id v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  void *v63;
  id v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  void *v70;
  id v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  void *v77;
  id v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  void *v84;
  id v85;
  __int128 v86;
  _OWORD *v87;
  __int128 v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  void *v97;
  id v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v105;
  uint64_t v106;
  char *__dst;

  if (a1 == a2)
    return a1;
  sub_249DC05A8((uint64_t)a1, type metadata accessor for GenerativePlayground.PreviewGenerationEvent);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v15 = *a2;
      v16 = v15;
      *a1 = v15;
LABEL_39:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      *a1 = *a2;
      swift_retain();
      goto LABEL_39;
    case 0:
      v7 = sub_249F1E8D8();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(void **, void **, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      v10 = (int *)type metadata accessor for GenerationState();
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)a2 + v11, 1, v7))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9((void **)v12, (void **)v13, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      v17 = v10[6];
      v18 = (void **)((char *)a1 + v17);
      v19 = (void **)((char *)a2 + v17);
      *v18 = *v19;
      v18[1] = v19[1];
      v20 = v10[7];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      *v21 = *((_BYTE *)a2 + v20);
      *((_QWORD *)v21 + 1) = *(void **)((char *)a2 + v20 + 8);
      *((_QWORD *)v21 + 2) = *(void **)((char *)a2 + v20 + 16);
      v23 = *(_OWORD *)((char *)a2 + v20 + 24);
      v21[40] = *((_BYTE *)a2 + v20 + 40);
      *(_OWORD *)(v21 + 24) = v23;
      *((_QWORD *)v21 + 6) = *(void **)((char *)a2 + v20 + 48);
      v21[56] = *((_BYTE *)a2 + v20 + 56);
      v21[57] = *((_BYTE *)a2 + v20 + 57);
      v21[58] = *((_BYTE *)a2 + v20 + 58);
      v21[59] = *((_BYTE *)a2 + v20 + 59);
      v21[60] = *((_BYTE *)a2 + v20 + 60);
      v21[61] = *((_BYTE *)a2 + v20 + 61);
      v21[62] = *((_BYTE *)a2 + v20 + 62);
      *((_QWORD *)v21 + 8) = *(void **)((char *)a2 + v20 + 64);
      v24 = *(uint64_t *)((char *)a2 + v20 + 72);
      v21[80] = v22[80];
      *((_QWORD *)v21 + 9) = v24;
      v25 = (int *)type metadata accessor for GenerationRecipe(0);
      v26 = v25[8];
      __dst = &v21[v26];
      v27 = &v22[v26];
      v28 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v29 = *((_QWORD *)v28 - 1);
      v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30(v27, 1, v28))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v106 = v29;
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        v33(__dst, v27, v32);
        v33(&__dst[v28[5]], &v27[v28[5]], v32);
        v34 = v28[6];
        v35 = (uint64_t *)&__dst[v34];
        v36 = (uint64_t *)&v27[v34];
        if (*(_QWORD *)&v27[v34 + 16])
        {
          v105 = v27;
          v37 = *v36;
          v38 = v36[1];
          sub_249DC3928(*v36, v38);
          *v35 = v37;
          v35[1] = v38;
          v27 = v105;
          v35[2] = v36[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v39 = *(_OWORD *)v36;
          v35[2] = v36[2];
          *(_OWORD *)v35 = v39;
        }
        __dst[v28[7]] = v27[v28[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v106 + 56))(__dst, 0, 1, v28);
      }
      v40 = v25[9];
      v41 = &v21[v40];
      v42 = &v22[v40];
      v43 = *(_DWORD *)v42;
      v41[4] = v42[4];
      *(_DWORD *)v41 = v43;
      v44 = v25[10];
      v45 = &v21[v44];
      v46 = &v22[v44];
      v47 = *(_DWORD *)v46;
      v45[4] = v46[4];
      *(_DWORD *)v45 = v47;
      v48 = v25[11];
      v49 = &v21[v48];
      v50 = &v22[v48];
      *v49 = *v50;
      v49[1] = v50[1];
      v49[2] = v50[2];
      *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
      *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
      *(_QWORD *)&v21[v25[12]] = *(_QWORD *)&v22[v25[12]];
      *(_QWORD *)&v21[v25[13]] = *(_QWORD *)&v22[v25[13]];
      v51 = v25[14];
      v52 = &v21[v51];
      v53 = &v22[v51];
      v54 = *(_QWORD *)&v22[v51 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = *(_OWORD *)v53;
      if (v54)
      {
        *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
        *(_OWORD *)v52 = v55;
        v56 = (void *)*((_QWORD *)v53 + 3);
        *((_QWORD *)v52 + 3) = v56;
        *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
        v57 = v56;
        swift_retain();
      }
      else
      {
        v58 = *((_OWORD *)v53 + 1);
        *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
        *(_OWORD *)v52 = v55;
        *((_OWORD *)v52 + 1) = v58;
      }
      v59 = v25[15];
      v60 = &v21[v59];
      v61 = &v22[v59];
      v62 = *(_OWORD *)v61;
      if (*((_QWORD *)v61 + 3))
      {
        *((_DWORD *)v60 + 4) = *((_DWORD *)v61 + 4);
        *(_OWORD *)v60 = v62;
        v63 = (void *)*((_QWORD *)v61 + 3);
        *((_QWORD *)v60 + 3) = v63;
        *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
        v64 = v63;
        swift_retain();
      }
      else
      {
        v65 = *((_OWORD *)v61 + 1);
        *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
        *(_OWORD *)v60 = v62;
        *((_OWORD *)v60 + 1) = v65;
      }
      v66 = v25[16];
      v67 = &v21[v66];
      v68 = &v22[v66];
      v69 = *(_OWORD *)v68;
      if (*((_QWORD *)v68 + 3))
      {
        *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
        *(_OWORD *)v67 = v69;
        v70 = (void *)*((_QWORD *)v68 + 3);
        *((_QWORD *)v67 + 3) = v70;
        *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
        v71 = v70;
        swift_retain();
      }
      else
      {
        v72 = *((_OWORD *)v68 + 1);
        *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
        *(_OWORD *)v67 = v69;
        *((_OWORD *)v67 + 1) = v72;
      }
      v73 = v25[17];
      v74 = &v21[v73];
      v75 = &v22[v73];
      v76 = *(_OWORD *)v75;
      if (*((_QWORD *)v75 + 3))
      {
        *((_DWORD *)v74 + 4) = *((_DWORD *)v75 + 4);
        *(_OWORD *)v74 = v76;
        v77 = (void *)*((_QWORD *)v75 + 3);
        *((_QWORD *)v74 + 3) = v77;
        *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
        v78 = v77;
        swift_retain();
      }
      else
      {
        v79 = *((_OWORD *)v75 + 1);
        *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
        *(_OWORD *)v74 = v76;
        *((_OWORD *)v74 + 1) = v79;
      }
      v80 = v25[18];
      v81 = &v21[v80];
      v82 = &v22[v80];
      v83 = *(_OWORD *)&v22[v80];
      if (*(_QWORD *)&v22[v80 + 24])
      {
        *((_DWORD *)v81 + 4) = *((_DWORD *)v82 + 4);
        *(_OWORD *)v81 = v83;
        v84 = (void *)*((_QWORD *)v82 + 3);
        *((_QWORD *)v81 + 3) = v84;
        *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
        v85 = v84;
        swift_retain();
      }
      else
      {
        v86 = *((_OWORD *)v82 + 1);
        *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
        *(_OWORD *)v81 = v83;
        *((_OWORD *)v81 + 1) = v86;
      }
      v87 = v81 + 40;
      v88 = *(_OWORD *)(v82 + 40);
      if (*((_QWORD *)v82 + 8))
      {
        *((_DWORD *)v81 + 14) = *((_DWORD *)v82 + 14);
        *v87 = v88;
        v89 = (void *)*((_QWORD *)v82 + 8);
        *((_QWORD *)v81 + 8) = v89;
        *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
        v90 = v89;
        swift_retain();
      }
      else
      {
        v91 = *(_OWORD *)(v82 + 56);
        *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
        *v87 = v88;
        *(_OWORD *)(v81 + 56) = v91;
      }
      v81[80] = v82[80];
      *(_QWORD *)&v21[v25[19]] = *(_QWORD *)&v22[v25[19]];
      v92 = v25[20];
      v93 = &v21[v92];
      v94 = &v22[v92];
      v95 = *(_QWORD *)&v22[v92 + 24];
      swift_bridgeObjectRetain();
      v96 = *(_OWORD *)v94;
      if (v95)
      {
        *((_DWORD *)v93 + 4) = *((_DWORD *)v94 + 4);
        *(_OWORD *)v93 = v96;
        v97 = (void *)*((_QWORD *)v94 + 3);
        *((_QWORD *)v93 + 3) = v97;
        *((_QWORD *)v93 + 4) = *((_QWORD *)v94 + 4);
        *((_QWORD *)v93 + 5) = *((_QWORD *)v94 + 5);
        *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
        *((_QWORD *)v93 + 7) = *((_QWORD *)v94 + 7);
        v98 = v97;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v99 = *((_OWORD *)v94 + 1);
        v100 = *((_OWORD *)v94 + 3);
        *((_OWORD *)v93 + 2) = *((_OWORD *)v94 + 2);
        *((_OWORD *)v93 + 3) = v100;
        *(_OWORD *)v93 = v96;
        *((_OWORD *)v93 + 1) = v99;
      }
      v101 = v25[21];
      v102 = &v21[v101];
      v103 = &v22[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
      *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
      *(_QWORD *)&v21[v25[22]] = *(_QWORD *)&v22[v25[22]];
      v21[v25[23]] = v22[v25[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_39;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *initializeWithTake for GenerativePlayground.PreviewGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_249F1E8D8();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v8(a1, a2, v6);
    v9 = (int *)type metadata accessor for GenerationState();
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
    }
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    v14 = v9[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    *v15 = a2[v14];
    *(_QWORD *)(v15 + 55) = *(_QWORD *)&a2[v14 + 55];
    *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
    *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
    *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
    v15[80] = a2[v14 + 80];
    v17 = *(_QWORD *)&a2[v14 + 72];
    *((_QWORD *)v15 + 8) = *(_QWORD *)&a2[v14 + 64];
    *((_QWORD *)v15 + 9) = v17;
    v18 = (int *)type metadata accessor for GenerationRecipe(0);
    v19 = v18[8];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v23 = *((_QWORD *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
      v26(v20, v21, v25);
      v26(&v20[v22[5]], &v21[v22[5]], v25);
      v27 = v22[6];
      v28 = &v20[v27];
      v29 = &v21[v27];
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
      v20[v22[7]] = v21[v22[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    }
    v30 = v18[9];
    v31 = &v15[v30];
    v32 = &v16[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = v18[10];
    v34 = &v15[v33];
    v35 = &v16[v33];
    v34[4] = v35[4];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v36 = v18[11];
    v37 = &v15[v36];
    v38 = &v16[v36];
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
    *(_QWORD *)&v15[v18[12]] = *(_QWORD *)&v16[v18[12]];
    *(_QWORD *)&v15[v18[13]] = *(_QWORD *)&v16[v18[13]];
    v39 = v18[14];
    v40 = &v15[v39];
    v41 = &v16[v39];
    v42 = *((_OWORD *)v41 + 1);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v42;
    *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
    v43 = v18[15];
    v44 = &v15[v43];
    v45 = &v16[v43];
    *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
    v46 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v46;
    v47 = v18[16];
    v48 = &v15[v47];
    v49 = &v16[v47];
    v50 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v50;
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    v51 = v18[17];
    v52 = &v15[v51];
    v53 = &v16[v51];
    v54 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v54;
    *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
    v55 = v18[18];
    v56 = &v15[v55];
    v57 = &v16[v55];
    v58 = *((_OWORD *)v57 + 3);
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    *((_OWORD *)v56 + 3) = v58;
    *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
    v56[80] = v57[80];
    v59 = *((_OWORD *)v57 + 1);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v59;
    *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
    v60 = v18[20];
    v61 = &v15[v60];
    v62 = &v16[v60];
    v63 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v63;
    v64 = *((_OWORD *)v62 + 3);
    *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
    *((_OWORD *)v61 + 3) = v64;
    v65 = v18[21];
    v66 = &v15[v65];
    v67 = &v16[v65];
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
    *(_QWORD *)&v15[v18[22]] = *(_QWORD *)&v16[v18[22]];
    v15[v18[23]] = v16[v18[23]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for GenerativePlayground.PreviewGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for GenerativePlayground.PreviewGenerationEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_249F1E8D8();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v8(a1, a2, v6);
      v9 = (int *)type metadata accessor for GenerationState();
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
      }
      *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
      v14 = v9[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      *v15 = a2[v14];
      *(_QWORD *)(v15 + 55) = *(_QWORD *)&a2[v14 + 55];
      *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
      *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
      v15[80] = a2[v14 + 80];
      v17 = *(_QWORD *)&a2[v14 + 72];
      *((_QWORD *)v15 + 8) = *(_QWORD *)&a2[v14 + 64];
      *((_QWORD *)v15 + 9) = v17;
      v18 = (int *)type metadata accessor for GenerationRecipe(0);
      v19 = v18[8];
      v20 = &v15[v19];
      v21 = &v16[v19];
      v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v23 = *((_QWORD *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
        v26(v20, v21, v25);
        v26(&v20[v22[5]], &v21[v22[5]], v25);
        v27 = v22[6];
        v28 = &v20[v27];
        v29 = &v21[v27];
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
        v20[v22[7]] = v21[v22[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v30 = v18[9];
      v31 = &v15[v30];
      v32 = &v16[v30];
      *(_DWORD *)v31 = *(_DWORD *)v32;
      v31[4] = v32[4];
      v33 = v18[10];
      v34 = &v15[v33];
      v35 = &v16[v33];
      v34[4] = v35[4];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v36 = v18[11];
      v37 = &v15[v36];
      v38 = &v16[v36];
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      *(_QWORD *)&v15[v18[12]] = *(_QWORD *)&v16[v18[12]];
      *(_QWORD *)&v15[v18[13]] = *(_QWORD *)&v16[v18[13]];
      v39 = v18[14];
      v40 = &v15[v39];
      v41 = &v16[v39];
      v42 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v42;
      *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      v43 = v18[15];
      v44 = &v15[v43];
      v45 = &v16[v43];
      *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v47 = v18[16];
      v48 = &v15[v47];
      v49 = &v16[v47];
      v50 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v50;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
      v51 = v18[17];
      v52 = &v15[v51];
      v53 = &v16[v51];
      v54 = *((_OWORD *)v53 + 1);
      *(_OWORD *)v52 = *(_OWORD *)v53;
      *((_OWORD *)v52 + 1) = v54;
      *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
      v55 = v18[18];
      v56 = &v15[v55];
      v57 = &v16[v55];
      v58 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v58;
      *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
      v56[80] = v57[80];
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
      v60 = v18[20];
      v61 = &v15[v60];
      v62 = &v16[v60];
      v63 = *((_OWORD *)v62 + 1);
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v63;
      v64 = *((_OWORD *)v62 + 3);
      *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
      *((_OWORD *)v61 + 3) = v64;
      v65 = v18[21];
      v66 = &v15[v65];
      v67 = &v16[v65];
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
      *(_QWORD *)&v15[v18[22]] = *(_QWORD *)&v16[v18[22]];
      v15[v18[23]] = v16[v18[23]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_249DC5138()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_249DC5148()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v8 = a3[5];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_249F1E8D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)(a1 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
  }
  return a1;
}

uint64_t destroy for GenerativePlayground.PreviewGenerationSession(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
}

uint64_t initializeWithCopy for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_OWORD *initializeWithTake for GenerativePlayground.PreviewGenerationSession(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_249F1E8D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  return a1;
}

uint64_t assignWithTake for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PreviewGenerationSession()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DC5804(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PreviewGenerationSession()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DC58BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6428);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_249F1E8D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7] + 24) = (a2 - 1);
  return result;
}

void sub_249DC5964()
{
  unint64_t v0;
  unint64_t v1;

  sub_249DC5A14(319, qword_2578D68F8, type metadata accessor for GenerativePlayground.PreviewGenerationEvent, MEMORY[0x24BEE6A98]);
  if (v0 <= 0x3F)
  {
    sub_249F1E8D8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_249DC5A14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_249DC5A6C()
{
  return type metadata accessor for GenerativePlayground.PreviewRepresentation(0);
}

uint64_t type metadata accessor for GenerativePlayground.PreviewRepresentation(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D6958);
}

uint64_t sub_249DC5A88()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for GeneratedImage();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GenerationState();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.PreviewRepresentation()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for GenerativePlayground.GenerationOptions()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerativePlayground.GenerationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.GenerationOptions(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 20) = v4;
  v5 = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy60_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.GenerationOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.GenerationOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 60))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.GenerationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 60) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 60) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.GenerationOptions()
{
  return &type metadata for GenerativePlayground.GenerationOptions;
}

_QWORD *initializeBufferWithCopyOfBuffer for GenerativePlayground.GenerationEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, int *);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  void *v70;
  uint64_t v71;
  id v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  uint64_t v78;
  id v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void *v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  _OWORD *v88;
  _OWORD *v89;
  void *v90;
  uint64_t v91;
  id v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *__dst;
  int *v111;
  uint64_t v112;
  uint64_t v113;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v10 = sub_249F1E8D8();
        v11 = *(_QWORD *)(v10 - 8);
        v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
        v12((char *)a1, (char *)a2, v10);
        v13 = (int *)type metadata accessor for GenerationState();
        v14 = v13[5];
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v12(v15, v16, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
        }
        v20 = v13[6];
        v21 = (_QWORD *)((char *)a1 + v20);
        v22 = (_QWORD *)((char *)a2 + v20);
        v112 = v22[1];
        *v21 = *v22;
        v21[1] = v112;
        v23 = v13[7];
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        *v24 = *v25;
        v26 = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
        *((_QWORD *)v24 + 2) = v26;
        v24[40] = v25[40];
        *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
        *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
        *((_DWORD *)v24 + 14) = *((_DWORD *)v25 + 14);
        v24[60] = v25[60];
        v24[61] = v25[61];
        v24[62] = v25[62];
        v28 = *((_QWORD *)v25 + 8);
        v27 = *((_QWORD *)v25 + 9);
        v24[80] = v25[80];
        *((_QWORD *)v24 + 8) = v28;
        *((_QWORD *)v24 + 9) = v27;
        v29 = type metadata accessor for GenerationRecipe(0);
        v30 = *(int *)(v29 + 32);
        __dst = &v24[v30];
        v111 = (int *)v29;
        v31 = &v25[v30];
        v32 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
        v33 = *((_QWORD *)v32 - 1);
        v34 = *(unsigned int (**)(char *, uint64_t, int *))(v33 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34(v31, 1, v32))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
          memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v113 = v33;
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
          v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          v37(__dst, v31, v36);
          v37(&__dst[v32[5]], &v31[v32[5]], v36);
          v38 = v32[6];
          v39 = (uint64_t *)&__dst[v38];
          v40 = (uint64_t *)&v31[v38];
          if (*(_QWORD *)&v31[v38 + 16])
          {
            v109 = v31;
            v41 = *v40;
            v42 = v40[1];
            sub_249DC3928(*v40, v42);
            *v39 = v41;
            v39[1] = v42;
            v31 = v109;
            v39[2] = v40[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v39[2] = v40[2];
          }
          __dst[v32[7]] = v31[v32[7]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v113 + 56))(__dst, 0, 1, v32);
        }
        v43 = v111[9];
        v44 = &v24[v43];
        v45 = &v25[v43];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        v46 = v111[10];
        v47 = &v24[v46];
        v48 = &v25[v46];
        v47[4] = v48[4];
        *(_DWORD *)v47 = *(_DWORD *)v48;
        v49 = v111[11];
        v50 = &v24[v49];
        v51 = &v25[v49];
        *(_WORD *)v50 = *(_WORD *)v51;
        v50[2] = v51[2];
        v52 = *((_QWORD *)v51 + 2);
        *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
        *((_QWORD *)v50 + 2) = v52;
        *(_QWORD *)&v24[v111[12]] = *(_QWORD *)&v25[v111[12]];
        *(_QWORD *)&v24[v111[13]] = *(_QWORD *)&v25[v111[13]];
        v53 = v111[14];
        v54 = &v24[v53];
        v55 = &v25[v53];
        v56 = *(void **)&v25[v53 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56)
        {
          *(_OWORD *)v54 = *(_OWORD *)v55;
          *((_DWORD *)v54 + 4) = *((_DWORD *)v55 + 4);
          v57 = *((_QWORD *)v55 + 4);
          *((_QWORD *)v54 + 3) = v56;
          *((_QWORD *)v54 + 4) = v57;
          v58 = v56;
          swift_retain();
        }
        else
        {
          v59 = *((_OWORD *)v55 + 1);
          *(_OWORD *)v54 = *(_OWORD *)v55;
          *((_OWORD *)v54 + 1) = v59;
          *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
        }
        v60 = v111[15];
        v61 = &v24[v60];
        v62 = &v25[v60];
        v63 = (void *)*((_QWORD *)v62 + 3);
        if (v63)
        {
          *(_OWORD *)v61 = *(_OWORD *)v62;
          *((_DWORD *)v61 + 4) = *((_DWORD *)v62 + 4);
          v64 = *((_QWORD *)v62 + 4);
          *((_QWORD *)v61 + 3) = v63;
          *((_QWORD *)v61 + 4) = v64;
          v65 = v63;
          swift_retain();
        }
        else
        {
          v66 = *((_OWORD *)v62 + 1);
          *(_OWORD *)v61 = *(_OWORD *)v62;
          *((_OWORD *)v61 + 1) = v66;
          *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
        }
        v67 = v111[16];
        v68 = &v24[v67];
        v69 = &v25[v67];
        v70 = (void *)*((_QWORD *)v69 + 3);
        if (v70)
        {
          *(_OWORD *)v68 = *(_OWORD *)v69;
          *((_DWORD *)v68 + 4) = *((_DWORD *)v69 + 4);
          v71 = *((_QWORD *)v69 + 4);
          *((_QWORD *)v68 + 3) = v70;
          *((_QWORD *)v68 + 4) = v71;
          v72 = v70;
          swift_retain();
        }
        else
        {
          v73 = *((_OWORD *)v69 + 1);
          *(_OWORD *)v68 = *(_OWORD *)v69;
          *((_OWORD *)v68 + 1) = v73;
          *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
        }
        v74 = v111[17];
        v75 = &v24[v74];
        v76 = &v25[v74];
        v77 = (void *)*((_QWORD *)v76 + 3);
        if (v77)
        {
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_DWORD *)v75 + 4) = *((_DWORD *)v76 + 4);
          v78 = *((_QWORD *)v76 + 4);
          *((_QWORD *)v75 + 3) = v77;
          *((_QWORD *)v75 + 4) = v78;
          v79 = v77;
          swift_retain();
        }
        else
        {
          v80 = *((_OWORD *)v76 + 1);
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_OWORD *)v75 + 1) = v80;
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
        }
        v81 = v111[18];
        v82 = &v24[v81];
        v83 = &v25[v81];
        v84 = *(void **)&v25[v81 + 24];
        if (v84)
        {
          *(_OWORD *)v82 = *(_OWORD *)v83;
          *((_DWORD *)v82 + 4) = *((_DWORD *)v83 + 4);
          v85 = *((_QWORD *)v83 + 4);
          *((_QWORD *)v82 + 3) = v84;
          *((_QWORD *)v82 + 4) = v85;
          v86 = v84;
          swift_retain();
        }
        else
        {
          v87 = *((_OWORD *)v83 + 1);
          *(_OWORD *)v82 = *(_OWORD *)v83;
          *((_OWORD *)v82 + 1) = v87;
          *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
        }
        v88 = v82 + 40;
        v89 = v83 + 40;
        v90 = (void *)*((_QWORD *)v83 + 8);
        if (v90)
        {
          *v88 = *v89;
          *((_DWORD *)v82 + 14) = *((_DWORD *)v83 + 14);
          v91 = *((_QWORD *)v83 + 9);
          *((_QWORD *)v82 + 8) = v90;
          *((_QWORD *)v82 + 9) = v91;
          v92 = v90;
          swift_retain();
        }
        else
        {
          v93 = *(_OWORD *)(v83 + 56);
          *v88 = *v89;
          *(_OWORD *)(v82 + 56) = v93;
          *((_QWORD *)v82 + 9) = *((_QWORD *)v83 + 9);
        }
        v82[80] = v83[80];
        *(_QWORD *)&v24[v111[19]] = *(_QWORD *)&v25[v111[19]];
        v94 = v111[20];
        v95 = &v24[v94];
        v96 = &v25[v94];
        v97 = *(void **)&v25[v94 + 24];
        swift_bridgeObjectRetain();
        if (v97)
        {
          *(_OWORD *)v95 = *(_OWORD *)v96;
          *((_DWORD *)v95 + 4) = *((_DWORD *)v96 + 4);
          v98 = *((_QWORD *)v96 + 4);
          v99 = *((_QWORD *)v96 + 5);
          *((_QWORD *)v95 + 3) = v97;
          *((_QWORD *)v95 + 4) = v98;
          v100 = *((_QWORD *)v96 + 6);
          v101 = *((_QWORD *)v96 + 7);
          *((_QWORD *)v95 + 5) = v99;
          *((_QWORD *)v95 + 6) = v100;
          *((_QWORD *)v95 + 7) = v101;
          v102 = v97;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v103 = *((_OWORD *)v96 + 1);
          *(_OWORD *)v95 = *(_OWORD *)v96;
          *((_OWORD *)v95 + 1) = v103;
          v104 = *((_OWORD *)v96 + 3);
          *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
          *((_OWORD *)v95 + 3) = v104;
        }
        v105 = v111[21];
        v106 = &v24[v105];
        v107 = &v25[v105];
        v108 = *((_QWORD *)v107 + 1);
        *(_QWORD *)v106 = *(_QWORD *)v107;
        *((_QWORD *)v106 + 1) = v108;
        *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
        *(_QWORD *)&v24[v111[22]] = *(_QWORD *)&v25[v111[22]];
        v24[v111[23]] = v25[v111[23]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v18 = (void *)*a2;
        v19 = v18;
        *a1 = v18;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for GenerativePlayground.GenerationEvent(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(id *, uint64_t);
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      goto LABEL_23;
    case 1u:
      v2 = sub_249F1E8D8();
      v3 = *(_QWORD *)(v2 - 8);
      v4 = *(void (**)(id *, uint64_t))(v3 + 8);
      v4(a1, v2);
      v5 = type metadata accessor for GenerationState();
      v6 = (char *)a1 + *(int *)(v5 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2))
        v4((id *)v6, v2);
      swift_bridgeObjectRelease();
      v7 = (char *)a1 + *(int *)(v5 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = (int *)type metadata accessor for GenerationRecipe(0);
      v9 = &v7[v8[8]];
      v10 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
        v12(v9, v11);
        v12(&v9[*(int *)(v10 + 20)], v11);
        v13 = (uint64_t *)&v9[*(int *)(v10 + 24)];
        if (v13[2])
        {
          sub_249DC3C24(*v13, v13[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *(void **)&v7[v8[14] + 24];
      if (v14)
      {

        swift_release();
      }
      v15 = *(void **)&v7[v8[15] + 24];
      if (v15)
      {

        swift_release();
      }
      v16 = *(void **)&v7[v8[16] + 24];
      if (v16)
      {

        swift_release();
      }
      v17 = *(void **)&v7[v8[17] + 24];
      if (v17)
      {

        swift_release();
      }
      v18 = &v7[v8[18]];
      v19 = (void *)*((_QWORD *)v18 + 3);
      if (v19)
      {

        swift_release();
      }
      v20 = (void *)*((_QWORD *)v18 + 8);
      if (v20)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      v21 = *(void **)&v7[v8[20] + 24];
      if (v21)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      swift_bridgeObjectRelease();
      break;
    case 2u:

      break;
    default:
      return;
  }
}

_QWORD *initializeWithCopy for GenerativePlayground.GenerationEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, int *);
  uint64_t v34;
  int *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  id v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void *v64;
  uint64_t v65;
  id v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void *v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void *v78;
  uint64_t v79;
  id v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void *v85;
  uint64_t v86;
  id v87;
  __int128 v88;
  _OWORD *v89;
  _OWORD *v90;
  void *v91;
  uint64_t v92;
  id v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v111;
  char *__dst;
  int *v113;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      goto LABEL_37;
    case 1u:
      v7 = sub_249F1E8D8();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v9((char *)a1, (char *)a2, v7);
      v10 = (int *)type metadata accessor for GenerationState();
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)a2 + v11, 1, v7))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      v17 = v10[6];
      v18 = (_QWORD *)((char *)a1 + v17);
      v19 = (_QWORD *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = v10[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      *v22 = *((_BYTE *)a2 + v21);
      v24 = *(_QWORD *)((char *)a2 + v21 + 8);
      v25 = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 1) = v24;
      *((_QWORD *)v22 + 2) = v25;
      v22[40] = v23[40];
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
      *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
      *((_DWORD *)v22 + 14) = *((_DWORD *)v23 + 14);
      v22[60] = v23[60];
      v22[61] = v23[61];
      v22[62] = v23[62];
      v27 = *((_QWORD *)v23 + 8);
      v26 = *((_QWORD *)v23 + 9);
      v22[80] = v23[80];
      *((_QWORD *)v22 + 8) = v27;
      *((_QWORD *)v22 + 9) = v26;
      v28 = type metadata accessor for GenerationRecipe(0);
      v29 = *(int *)(v28 + 32);
      __dst = &v22[v29];
      v113 = (int *)v28;
      v30 = &v23[v29];
      v31 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v32 = *((_QWORD *)v31 - 1);
      v33 = *(unsigned int (**)(char *, uint64_t, int *))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v35 = v113;
      }
      else
      {
        v111 = v32;
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        v37(__dst, v30, v36);
        v37(&__dst[v31[5]], &v30[v31[5]], v36);
        v38 = v31[6];
        v39 = (uint64_t *)&__dst[v38];
        v40 = (uint64_t *)&v30[v38];
        if (*(_QWORD *)&v30[v38 + 16])
        {
          v41 = v30;
          v42 = *v40;
          v43 = v40[1];
          sub_249DC3928(*v40, v43);
          *v39 = v42;
          v39[1] = v43;
          v30 = v41;
          v39[2] = v40[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v39[2] = v40[2];
        }
        v35 = v113;
        __dst[v31[7]] = v30[v31[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v111 + 56))(__dst, 0, 1, v31);
      }
      v44 = v35[9];
      v45 = &v22[v44];
      v46 = &v23[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      v47 = v35[10];
      v48 = &v22[v47];
      v49 = &v23[v47];
      v48[4] = v49[4];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v50 = v35[11];
      v51 = &v22[v50];
      v52 = &v23[v50];
      *(_WORD *)v51 = *(_WORD *)v52;
      v51[2] = v52[2];
      v53 = *((_QWORD *)v52 + 2);
      *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
      *((_QWORD *)v51 + 2) = v53;
      *(_QWORD *)&v22[v35[12]] = *(_QWORD *)&v23[v35[12]];
      *(_QWORD *)&v22[v35[13]] = *(_QWORD *)&v23[v35[13]];
      v54 = v35[14];
      v55 = &v22[v54];
      v56 = &v23[v54];
      v57 = *(void **)&v23[v54 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57)
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_DWORD *)v55 + 4) = *((_DWORD *)v56 + 4);
        v58 = *((_QWORD *)v56 + 4);
        *((_QWORD *)v55 + 3) = v57;
        *((_QWORD *)v55 + 4) = v58;
        v59 = v57;
        swift_retain();
      }
      else
      {
        v60 = *((_OWORD *)v56 + 1);
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v60;
        *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
      }
      v61 = v35[15];
      v62 = &v22[v61];
      v63 = &v23[v61];
      v64 = (void *)*((_QWORD *)v63 + 3);
      if (v64)
      {
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_DWORD *)v62 + 4) = *((_DWORD *)v63 + 4);
        v65 = *((_QWORD *)v63 + 4);
        *((_QWORD *)v62 + 3) = v64;
        *((_QWORD *)v62 + 4) = v65;
        v66 = v64;
        swift_retain();
      }
      else
      {
        v67 = *((_OWORD *)v63 + 1);
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_OWORD *)v62 + 1) = v67;
        *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
      }
      v68 = v35[16];
      v69 = &v22[v68];
      v70 = &v23[v68];
      v71 = (void *)*((_QWORD *)v70 + 3);
      if (v71)
      {
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_DWORD *)v69 + 4) = *((_DWORD *)v70 + 4);
        v72 = *((_QWORD *)v70 + 4);
        *((_QWORD *)v69 + 3) = v71;
        *((_QWORD *)v69 + 4) = v72;
        v73 = v71;
        swift_retain();
      }
      else
      {
        v74 = *((_OWORD *)v70 + 1);
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_OWORD *)v69 + 1) = v74;
        *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
      }
      v75 = v35[17];
      v76 = &v22[v75];
      v77 = &v23[v75];
      v78 = (void *)*((_QWORD *)v77 + 3);
      if (v78)
      {
        *(_OWORD *)v76 = *(_OWORD *)v77;
        *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
        v79 = *((_QWORD *)v77 + 4);
        *((_QWORD *)v76 + 3) = v78;
        *((_QWORD *)v76 + 4) = v79;
        v80 = v78;
        swift_retain();
      }
      else
      {
        v81 = *((_OWORD *)v77 + 1);
        *(_OWORD *)v76 = *(_OWORD *)v77;
        *((_OWORD *)v76 + 1) = v81;
        *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
      }
      v82 = v35[18];
      v83 = &v22[v82];
      v84 = &v23[v82];
      v85 = *(void **)&v23[v82 + 24];
      if (v85)
      {
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_DWORD *)v83 + 4) = *((_DWORD *)v84 + 4);
        v86 = *((_QWORD *)v84 + 4);
        *((_QWORD *)v83 + 3) = v85;
        *((_QWORD *)v83 + 4) = v86;
        v87 = v85;
        swift_retain();
      }
      else
      {
        v88 = *((_OWORD *)v84 + 1);
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_OWORD *)v83 + 1) = v88;
        *((_QWORD *)v83 + 4) = *((_QWORD *)v84 + 4);
      }
      v89 = v83 + 40;
      v90 = v84 + 40;
      v91 = (void *)*((_QWORD *)v84 + 8);
      if (v91)
      {
        *v89 = *v90;
        *((_DWORD *)v83 + 14) = *((_DWORD *)v84 + 14);
        v92 = *((_QWORD *)v84 + 9);
        *((_QWORD *)v83 + 8) = v91;
        *((_QWORD *)v83 + 9) = v92;
        v93 = v91;
        swift_retain();
      }
      else
      {
        v94 = *(_OWORD *)(v84 + 56);
        *v89 = *v90;
        *(_OWORD *)(v83 + 56) = v94;
        *((_QWORD *)v83 + 9) = *((_QWORD *)v84 + 9);
      }
      v83[80] = v84[80];
      *(_QWORD *)&v22[v35[19]] = *(_QWORD *)&v23[v35[19]];
      v95 = v35[20];
      v96 = &v22[v95];
      v97 = &v23[v95];
      v98 = *(void **)&v23[v95 + 24];
      swift_bridgeObjectRetain();
      if (v98)
      {
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_DWORD *)v96 + 4) = *((_DWORD *)v97 + 4);
        v99 = *((_QWORD *)v97 + 4);
        v100 = *((_QWORD *)v97 + 5);
        *((_QWORD *)v96 + 3) = v98;
        *((_QWORD *)v96 + 4) = v99;
        v101 = *((_QWORD *)v97 + 6);
        v102 = *((_QWORD *)v97 + 7);
        *((_QWORD *)v96 + 5) = v100;
        *((_QWORD *)v96 + 6) = v101;
        *((_QWORD *)v96 + 7) = v102;
        v103 = v98;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v104 = *((_OWORD *)v97 + 1);
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + 1) = v104;
        v105 = *((_OWORD *)v97 + 3);
        *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
        *((_OWORD *)v96 + 3) = v105;
      }
      v106 = v35[21];
      v107 = &v22[v106];
      v108 = &v23[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      *((_QWORD *)v107 + 2) = *((_QWORD *)v108 + 2);
      *(_QWORD *)&v22[v35[22]] = *(_QWORD *)&v23[v35[22]];
      v22[v35[23]] = v23[v35[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_37;
    case 2u:
      v15 = (void *)*a2;
      v16 = v15;
      *a1 = v15;
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_37:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for GenerativePlayground.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  void *v56;
  id v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  void *v63;
  id v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  void *v70;
  id v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  void *v77;
  id v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  void *v84;
  id v85;
  __int128 v86;
  _OWORD *v87;
  __int128 v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  void *v97;
  id v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v105;
  uint64_t v106;
  char *__dst;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for GenerativePlayground.GenerationEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v6;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 1u:
        v7 = sub_249F1E8D8();
        v8 = *(_QWORD *)(v7 - 8);
        v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v9(a1, a2, v7);
        v10 = (int *)type metadata accessor for GenerationState();
        v11 = v10[5];
        v12 = &a1[v11];
        v13 = &a2[v11];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
        }
        v17 = v10[6];
        v18 = &a1[v17];
        v19 = &a2[v17];
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        v20 = v10[7];
        v21 = &a1[v20];
        v22 = &a2[v20];
        *v21 = a2[v20];
        *((_QWORD *)v21 + 1) = *(_QWORD *)&a2[v20 + 8];
        *((_QWORD *)v21 + 2) = *(_QWORD *)&a2[v20 + 16];
        v23 = *(_OWORD *)&a2[v20 + 24];
        v21[40] = a2[v20 + 40];
        *(_OWORD *)(v21 + 24) = v23;
        *((_QWORD *)v21 + 6) = *(_QWORD *)&a2[v20 + 48];
        v21[56] = a2[v20 + 56];
        v21[57] = a2[v20 + 57];
        v21[58] = a2[v20 + 58];
        v21[59] = a2[v20 + 59];
        v21[60] = a2[v20 + 60];
        v21[61] = a2[v20 + 61];
        v21[62] = a2[v20 + 62];
        *((_QWORD *)v21 + 8) = *(_QWORD *)&a2[v20 + 64];
        v24 = *(_QWORD *)&a2[v20 + 72];
        v21[80] = v22[80];
        *((_QWORD *)v21 + 9) = v24;
        v25 = (int *)type metadata accessor for GenerationRecipe(0);
        v26 = v25[8];
        __dst = &v21[v26];
        v27 = &v22[v26];
        v28 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
        v29 = *((_QWORD *)v28 - 1);
        v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30(v27, 1, v28))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v106 = v29;
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
          v33(__dst, v27, v32);
          v33(&__dst[v28[5]], &v27[v28[5]], v32);
          v34 = v28[6];
          v35 = (uint64_t *)&__dst[v34];
          v36 = (uint64_t *)&v27[v34];
          if (*(_QWORD *)&v27[v34 + 16])
          {
            v105 = v27;
            v37 = *v36;
            v38 = v36[1];
            sub_249DC3928(*v36, v38);
            *v35 = v37;
            v35[1] = v38;
            v27 = v105;
            v35[2] = v36[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v39 = *(_OWORD *)v36;
            v35[2] = v36[2];
            *(_OWORD *)v35 = v39;
          }
          __dst[v28[7]] = v27[v28[7]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v106 + 56))(__dst, 0, 1, v28);
        }
        v40 = v25[9];
        v41 = &v21[v40];
        v42 = &v22[v40];
        v43 = *(_DWORD *)v42;
        v41[4] = v42[4];
        *(_DWORD *)v41 = v43;
        v44 = v25[10];
        v45 = &v21[v44];
        v46 = &v22[v44];
        v47 = *(_DWORD *)v46;
        v45[4] = v46[4];
        *(_DWORD *)v45 = v47;
        v48 = v25[11];
        v49 = &v21[v48];
        v50 = &v22[v48];
        *v49 = *v50;
        v49[1] = v50[1];
        v49[2] = v50[2];
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *(_QWORD *)&v21[v25[12]] = *(_QWORD *)&v22[v25[12]];
        *(_QWORD *)&v21[v25[13]] = *(_QWORD *)&v22[v25[13]];
        v51 = v25[14];
        v52 = &v21[v51];
        v53 = &v22[v51];
        v54 = *(_QWORD *)&v22[v51 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = *(_OWORD *)v53;
        if (v54)
        {
          *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
          *(_OWORD *)v52 = v55;
          v56 = (void *)*((_QWORD *)v53 + 3);
          *((_QWORD *)v52 + 3) = v56;
          *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
          v57 = v56;
          swift_retain();
        }
        else
        {
          v58 = *((_OWORD *)v53 + 1);
          *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
          *(_OWORD *)v52 = v55;
          *((_OWORD *)v52 + 1) = v58;
        }
        v59 = v25[15];
        v60 = &v21[v59];
        v61 = &v22[v59];
        v62 = *(_OWORD *)v61;
        if (*((_QWORD *)v61 + 3))
        {
          *((_DWORD *)v60 + 4) = *((_DWORD *)v61 + 4);
          *(_OWORD *)v60 = v62;
          v63 = (void *)*((_QWORD *)v61 + 3);
          *((_QWORD *)v60 + 3) = v63;
          *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
          v64 = v63;
          swift_retain();
        }
        else
        {
          v65 = *((_OWORD *)v61 + 1);
          *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
          *(_OWORD *)v60 = v62;
          *((_OWORD *)v60 + 1) = v65;
        }
        v66 = v25[16];
        v67 = &v21[v66];
        v68 = &v22[v66];
        v69 = *(_OWORD *)v68;
        if (*((_QWORD *)v68 + 3))
        {
          *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
          *(_OWORD *)v67 = v69;
          v70 = (void *)*((_QWORD *)v68 + 3);
          *((_QWORD *)v67 + 3) = v70;
          *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
          v71 = v70;
          swift_retain();
        }
        else
        {
          v72 = *((_OWORD *)v68 + 1);
          *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
          *(_OWORD *)v67 = v69;
          *((_OWORD *)v67 + 1) = v72;
        }
        v73 = v25[17];
        v74 = &v21[v73];
        v75 = &v22[v73];
        v76 = *(_OWORD *)v75;
        if (*((_QWORD *)v75 + 3))
        {
          *((_DWORD *)v74 + 4) = *((_DWORD *)v75 + 4);
          *(_OWORD *)v74 = v76;
          v77 = (void *)*((_QWORD *)v75 + 3);
          *((_QWORD *)v74 + 3) = v77;
          *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
          v78 = v77;
          swift_retain();
        }
        else
        {
          v79 = *((_OWORD *)v75 + 1);
          *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
          *(_OWORD *)v74 = v76;
          *((_OWORD *)v74 + 1) = v79;
        }
        v80 = v25[18];
        v81 = &v21[v80];
        v82 = &v22[v80];
        v83 = *(_OWORD *)&v22[v80];
        if (*(_QWORD *)&v22[v80 + 24])
        {
          *((_DWORD *)v81 + 4) = *((_DWORD *)v82 + 4);
          *(_OWORD *)v81 = v83;
          v84 = (void *)*((_QWORD *)v82 + 3);
          *((_QWORD *)v81 + 3) = v84;
          *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
          v85 = v84;
          swift_retain();
        }
        else
        {
          v86 = *((_OWORD *)v82 + 1);
          *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
          *(_OWORD *)v81 = v83;
          *((_OWORD *)v81 + 1) = v86;
        }
        v87 = v81 + 40;
        v88 = *(_OWORD *)(v82 + 40);
        if (*((_QWORD *)v82 + 8))
        {
          *((_DWORD *)v81 + 14) = *((_DWORD *)v82 + 14);
          *v87 = v88;
          v89 = (void *)*((_QWORD *)v82 + 8);
          *((_QWORD *)v81 + 8) = v89;
          *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
          v90 = v89;
          swift_retain();
        }
        else
        {
          v91 = *(_OWORD *)(v82 + 56);
          *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
          *v87 = v88;
          *(_OWORD *)(v81 + 56) = v91;
        }
        v81[80] = v82[80];
        *(_QWORD *)&v21[v25[19]] = *(_QWORD *)&v22[v25[19]];
        v92 = v25[20];
        v93 = &v21[v92];
        v94 = &v22[v92];
        v95 = *(_QWORD *)&v22[v92 + 24];
        swift_bridgeObjectRetain();
        v96 = *(_OWORD *)v94;
        if (v95)
        {
          *((_DWORD *)v93 + 4) = *((_DWORD *)v94 + 4);
          *(_OWORD *)v93 = v96;
          v97 = (void *)*((_QWORD *)v94 + 3);
          *((_QWORD *)v93 + 3) = v97;
          *((_QWORD *)v93 + 4) = *((_QWORD *)v94 + 4);
          *((_QWORD *)v93 + 5) = *((_QWORD *)v94 + 5);
          *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
          *((_QWORD *)v93 + 7) = *((_QWORD *)v94 + 7);
          v98 = v97;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v99 = *((_OWORD *)v94 + 1);
          v100 = *((_OWORD *)v94 + 3);
          *((_OWORD *)v93 + 2) = *((_OWORD *)v94 + 2);
          *((_OWORD *)v93 + 3) = v100;
          *(_OWORD *)v93 = v96;
          *((_OWORD *)v93 + 1) = v99;
        }
        v101 = v25[21];
        v102 = &v21[v101];
        v103 = &v22[v101];
        *(_QWORD *)v102 = *(_QWORD *)v103;
        *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
        *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
        *(_QWORD *)&v21[v25[22]] = *(_QWORD *)&v22[v25[22]];
        v21[v25[23]] = v22[v25[23]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 2u:
        v15 = *(void **)a2;
        v16 = v15;
        *(_QWORD *)a1 = v15;
        goto LABEL_38;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
LABEL_38:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for GenerativePlayground.GenerationEvent(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D6A58);
}

uint64_t sub_249DC74D0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

char *initializeWithTake for GenerativePlayground.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_249F1E8D8();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v8(a1, a2, v6);
    v9 = (int *)type metadata accessor for GenerationState();
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
    }
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    v14 = v9[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    *v15 = a2[v14];
    *(_QWORD *)(v15 + 55) = *(_QWORD *)&a2[v14 + 55];
    *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
    *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
    *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
    v15[80] = a2[v14 + 80];
    v17 = *(_QWORD *)&a2[v14 + 72];
    *((_QWORD *)v15 + 8) = *(_QWORD *)&a2[v14 + 64];
    *((_QWORD *)v15 + 9) = v17;
    v18 = (int *)type metadata accessor for GenerationRecipe(0);
    v19 = v18[8];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v23 = *((_QWORD *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
      v26(v20, v21, v25);
      v26(&v20[v22[5]], &v21[v22[5]], v25);
      v27 = v22[6];
      v28 = &v20[v27];
      v29 = &v21[v27];
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
      v20[v22[7]] = v21[v22[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    }
    v30 = v18[9];
    v31 = &v15[v30];
    v32 = &v16[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = v18[10];
    v34 = &v15[v33];
    v35 = &v16[v33];
    v34[4] = v35[4];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v36 = v18[11];
    v37 = &v15[v36];
    v38 = &v16[v36];
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
    *(_QWORD *)&v15[v18[12]] = *(_QWORD *)&v16[v18[12]];
    *(_QWORD *)&v15[v18[13]] = *(_QWORD *)&v16[v18[13]];
    v39 = v18[14];
    v40 = &v15[v39];
    v41 = &v16[v39];
    v42 = *((_OWORD *)v41 + 1);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v42;
    *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
    v43 = v18[15];
    v44 = &v15[v43];
    v45 = &v16[v43];
    *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
    v46 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v46;
    v47 = v18[16];
    v48 = &v15[v47];
    v49 = &v16[v47];
    v50 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v50;
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    v51 = v18[17];
    v52 = &v15[v51];
    v53 = &v16[v51];
    v54 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v54;
    *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
    v55 = v18[18];
    v56 = &v15[v55];
    v57 = &v16[v55];
    v58 = *((_OWORD *)v57 + 3);
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    *((_OWORD *)v56 + 3) = v58;
    *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
    v56[80] = v57[80];
    v59 = *((_OWORD *)v57 + 1);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v59;
    *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
    v60 = v18[20];
    v61 = &v15[v60];
    v62 = &v16[v60];
    v63 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v63;
    v64 = *((_OWORD *)v62 + 3);
    *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
    *((_OWORD *)v61 + 3) = v64;
    v65 = v18[21];
    v66 = &v15[v65];
    v67 = &v16[v65];
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
    *(_QWORD *)&v15[v18[22]] = *(_QWORD *)&v16[v18[22]];
    v15[v18[23]] = v16[v18[23]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for GenerativePlayground.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for GenerativePlayground.GenerationEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_249F1E8D8();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v8(a1, a2, v6);
      v9 = (int *)type metadata accessor for GenerationState();
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
      }
      *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
      v14 = v9[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      *v15 = a2[v14];
      *(_QWORD *)(v15 + 55) = *(_QWORD *)&a2[v14 + 55];
      *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
      *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
      v15[80] = a2[v14 + 80];
      v17 = *(_QWORD *)&a2[v14 + 72];
      *((_QWORD *)v15 + 8) = *(_QWORD *)&a2[v14 + 64];
      *((_QWORD *)v15 + 9) = v17;
      v18 = (int *)type metadata accessor for GenerationRecipe(0);
      v19 = v18[8];
      v20 = &v15[v19];
      v21 = &v16[v19];
      v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v23 = *((_QWORD *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
        v26(v20, v21, v25);
        v26(&v20[v22[5]], &v21[v22[5]], v25);
        v27 = v22[6];
        v28 = &v20[v27];
        v29 = &v21[v27];
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
        v20[v22[7]] = v21[v22[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v30 = v18[9];
      v31 = &v15[v30];
      v32 = &v16[v30];
      *(_DWORD *)v31 = *(_DWORD *)v32;
      v31[4] = v32[4];
      v33 = v18[10];
      v34 = &v15[v33];
      v35 = &v16[v33];
      v34[4] = v35[4];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v36 = v18[11];
      v37 = &v15[v36];
      v38 = &v16[v36];
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      *(_QWORD *)&v15[v18[12]] = *(_QWORD *)&v16[v18[12]];
      *(_QWORD *)&v15[v18[13]] = *(_QWORD *)&v16[v18[13]];
      v39 = v18[14];
      v40 = &v15[v39];
      v41 = &v16[v39];
      v42 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v42;
      *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      v43 = v18[15];
      v44 = &v15[v43];
      v45 = &v16[v43];
      *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v47 = v18[16];
      v48 = &v15[v47];
      v49 = &v16[v47];
      v50 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v50;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
      v51 = v18[17];
      v52 = &v15[v51];
      v53 = &v16[v51];
      v54 = *((_OWORD *)v53 + 1);
      *(_OWORD *)v52 = *(_OWORD *)v53;
      *((_OWORD *)v52 + 1) = v54;
      *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
      v55 = v18[18];
      v56 = &v15[v55];
      v57 = &v16[v55];
      v58 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v58;
      *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
      v56[80] = v57[80];
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
      v60 = v18[20];
      v61 = &v15[v60];
      v62 = &v16[v60];
      v63 = *((_OWORD *)v62 + 1);
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v63;
      v64 = *((_OWORD *)v62 + 3);
      *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
      *((_OWORD *)v61 + 3) = v64;
      v65 = v18[21];
      v66 = &v15[v65];
      v67 = &v16[v65];
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
      *(_QWORD *)&v15[v18[22]] = *(_QWORD *)&v16[v18[22]];
      v15[v18[23]] = v16[v18[23]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_249DC7CAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.ImageGenerationOptions()
{
  return &type metadata for GenerativePlayground.ImageGenerationOptions;
}

char *initializeBufferWithCopyOfBuffer for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v18;
  id v19;
  void *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int *v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, int *);
  uint64_t v61;
  int *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void *v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void *v91;
  uint64_t v92;
  id v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void *v98;
  uint64_t v99;
  id v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void *v105;
  uint64_t v106;
  id v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  void *v112;
  uint64_t v113;
  id v114;
  __int128 v115;
  _OWORD *v116;
  _OWORD *v117;
  void *v118;
  uint64_t v119;
  id v120;
  __int128 v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *__dst;
  uint64_t v139;
  int *v140;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v16[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v18 = *(void **)a2;
      v19 = v18;
      *(_QWORD *)a1 = v18;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v20 = *(void **)a2;
      v21 = a2[8];
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = v21;
      v139 = type metadata accessor for GeneratedImage();
      v22 = *(int *)(v139 + 20);
      v23 = &a1[v22];
      v24 = &a2[v22];
      a1[v22] = a2[v22];
      v25 = (int *)type metadata accessor for ImageProvenance();
      v26 = v25[5];
      v27 = &v23[v26];
      v28 = &v24[v26];
      v29 = sub_249F1E8D8();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      v31 = v20;
      v30(v27, v28, v29);
      *(_QWORD *)&v23[v25[6]] = *(_QWORD *)&v24[v25[6]];
      *(_QWORD *)&v23[v25[7]] = *(_QWORD *)&v24[v25[7]];
      v32 = *(int *)(v139 + 24);
      v33 = a1;
      v34 = &a1[v32];
      v35 = &a2[v32];
      a1[v32] = a2[v32];
      v36 = type metadata accessor for GeneratedImageIndications();
      v37 = *(int *)(v36 + 20);
      v38 = &v34[v37];
      v39 = &v35[v37];
      v40 = sub_249F1F13C();
      v41 = *(_QWORD *)(v40 - 8);
      v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      swift_bridgeObjectRetain();
      if (v42(v39, 1, v40))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      *(_QWORD *)&v34[*(int *)(v36 + 24)] = *(_QWORD *)&v35[*(int *)(v36 + 24)];
      swift_bridgeObjectRetain();
      a1 = v33;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_249F1E8D8();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v10(a1, a2, v8);
      v11 = (int *)type metadata accessor for GenerationState();
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a2[v12], 1, v8))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v10(v13, v14, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
      }
      v44 = v11[6];
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      v48 = v11[7];
      v49 = &a1[v48];
      v50 = &a2[v48];
      *v49 = a2[v48];
      v51 = *(_QWORD *)&a2[v48 + 8];
      v52 = *((_QWORD *)v50 + 2);
      *((_QWORD *)v49 + 1) = v51;
      *((_QWORD *)v49 + 2) = v52;
      v49[40] = v50[40];
      *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 24);
      *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
      *((_DWORD *)v49 + 14) = *((_DWORD *)v50 + 14);
      v49[60] = v50[60];
      v49[61] = v50[61];
      v49[62] = v50[62];
      v54 = *((_QWORD *)v50 + 8);
      v53 = *((_QWORD *)v50 + 9);
      v49[80] = v50[80];
      *((_QWORD *)v49 + 8) = v54;
      *((_QWORD *)v49 + 9) = v53;
      v55 = type metadata accessor for GenerationRecipe(0);
      v56 = *(int *)(v55 + 32);
      __dst = &v49[v56];
      v140 = (int *)v55;
      v57 = &v50[v56];
      v58 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v59 = *((_QWORD *)v58 - 1);
      v60 = *(unsigned int (**)(char *, uint64_t, int *))(v59 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60(v57, 1, v58))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        v62 = v140;
      }
      else
      {
        v137 = v59;
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        v64(__dst, v57, v63);
        v64(&__dst[v58[5]], &v57[v58[5]], v63);
        v65 = v58[6];
        v66 = (uint64_t *)&__dst[v65];
        v67 = (uint64_t *)&v57[v65];
        if (*(_QWORD *)&v57[v65 + 16])
        {
          v68 = v57;
          v69 = *v67;
          v70 = v67[1];
          sub_249DC3928(*v67, v70);
          *v66 = v69;
          v66[1] = v70;
          v57 = v68;
          v66[2] = v67[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v66 = *(_OWORD *)v67;
          v66[2] = v67[2];
        }
        v62 = v140;
        __dst[v58[7]] = v57[v58[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v137 + 56))(__dst, 0, 1, v58);
      }
      v71 = v62[9];
      v72 = &v49[v71];
      v73 = &v50[v71];
      *(_DWORD *)v72 = *(_DWORD *)v73;
      v72[4] = v73[4];
      v74 = v62[10];
      v75 = &v49[v74];
      v76 = &v50[v74];
      v75[4] = v76[4];
      *(_DWORD *)v75 = *(_DWORD *)v76;
      v77 = v62[11];
      v78 = &v49[v77];
      v79 = &v50[v77];
      *(_WORD *)v78 = *(_WORD *)v79;
      v78[2] = v79[2];
      v80 = *((_QWORD *)v79 + 2);
      *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
      *((_QWORD *)v78 + 2) = v80;
      *(_QWORD *)&v49[v62[12]] = *(_QWORD *)&v50[v62[12]];
      *(_QWORD *)&v49[v62[13]] = *(_QWORD *)&v50[v62[13]];
      v81 = v62[14];
      v82 = &v49[v81];
      v83 = &v50[v81];
      v84 = *(void **)&v50[v81 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v84)
      {
        *(_OWORD *)v82 = *(_OWORD *)v83;
        *((_DWORD *)v82 + 4) = *((_DWORD *)v83 + 4);
        v85 = *((_QWORD *)v83 + 4);
        *((_QWORD *)v82 + 3) = v84;
        *((_QWORD *)v82 + 4) = v85;
        v86 = v84;
        swift_retain();
      }
      else
      {
        v87 = *((_OWORD *)v83 + 1);
        *(_OWORD *)v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v87;
        *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
      }
      v88 = v62[15];
      v89 = &v49[v88];
      v90 = &v50[v88];
      v91 = (void *)*((_QWORD *)v90 + 3);
      if (v91)
      {
        *(_OWORD *)v89 = *(_OWORD *)v90;
        *((_DWORD *)v89 + 4) = *((_DWORD *)v90 + 4);
        v92 = *((_QWORD *)v90 + 4);
        *((_QWORD *)v89 + 3) = v91;
        *((_QWORD *)v89 + 4) = v92;
        v93 = v91;
        swift_retain();
      }
      else
      {
        v94 = *((_OWORD *)v90 + 1);
        *(_OWORD *)v89 = *(_OWORD *)v90;
        *((_OWORD *)v89 + 1) = v94;
        *((_QWORD *)v89 + 4) = *((_QWORD *)v90 + 4);
      }
      v95 = v62[16];
      v96 = &v49[v95];
      v97 = &v50[v95];
      v98 = (void *)*((_QWORD *)v97 + 3);
      if (v98)
      {
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_DWORD *)v96 + 4) = *((_DWORD *)v97 + 4);
        v99 = *((_QWORD *)v97 + 4);
        *((_QWORD *)v96 + 3) = v98;
        *((_QWORD *)v96 + 4) = v99;
        v100 = v98;
        swift_retain();
      }
      else
      {
        v101 = *((_OWORD *)v97 + 1);
        *(_OWORD *)v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + 1) = v101;
        *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
      }
      v102 = v62[17];
      v103 = &v49[v102];
      v104 = &v50[v102];
      v105 = (void *)*((_QWORD *)v104 + 3);
      if (v105)
      {
        *(_OWORD *)v103 = *(_OWORD *)v104;
        *((_DWORD *)v103 + 4) = *((_DWORD *)v104 + 4);
        v106 = *((_QWORD *)v104 + 4);
        *((_QWORD *)v103 + 3) = v105;
        *((_QWORD *)v103 + 4) = v106;
        v107 = v105;
        swift_retain();
      }
      else
      {
        v108 = *((_OWORD *)v104 + 1);
        *(_OWORD *)v103 = *(_OWORD *)v104;
        *((_OWORD *)v103 + 1) = v108;
        *((_QWORD *)v103 + 4) = *((_QWORD *)v104 + 4);
      }
      v109 = v62[18];
      v110 = &v49[v109];
      v111 = &v50[v109];
      v112 = *(void **)&v50[v109 + 24];
      if (v112)
      {
        *(_OWORD *)v110 = *(_OWORD *)v111;
        *((_DWORD *)v110 + 4) = *((_DWORD *)v111 + 4);
        v113 = *((_QWORD *)v111 + 4);
        *((_QWORD *)v110 + 3) = v112;
        *((_QWORD *)v110 + 4) = v113;
        v114 = v112;
        swift_retain();
      }
      else
      {
        v115 = *((_OWORD *)v111 + 1);
        *(_OWORD *)v110 = *(_OWORD *)v111;
        *((_OWORD *)v110 + 1) = v115;
        *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
      }
      v116 = v110 + 40;
      v117 = v111 + 40;
      v118 = (void *)*((_QWORD *)v111 + 8);
      if (v118)
      {
        *v116 = *v117;
        *((_DWORD *)v110 + 14) = *((_DWORD *)v111 + 14);
        v119 = *((_QWORD *)v111 + 9);
        *((_QWORD *)v110 + 8) = v118;
        *((_QWORD *)v110 + 9) = v119;
        v120 = v118;
        swift_retain();
      }
      else
      {
        v121 = *(_OWORD *)(v111 + 56);
        *v116 = *v117;
        *(_OWORD *)(v110 + 56) = v121;
        *((_QWORD *)v110 + 9) = *((_QWORD *)v111 + 9);
      }
      v110[80] = v111[80];
      *(_QWORD *)&v49[v62[19]] = *(_QWORD *)&v50[v62[19]];
      v122 = v62[20];
      v123 = &v49[v122];
      v124 = &v50[v122];
      v125 = *(void **)&v50[v122 + 24];
      swift_bridgeObjectRetain();
      if (v125)
      {
        *(_OWORD *)v123 = *(_OWORD *)v124;
        *((_DWORD *)v123 + 4) = *((_DWORD *)v124 + 4);
        v126 = *((_QWORD *)v124 + 4);
        v127 = *((_QWORD *)v124 + 5);
        *((_QWORD *)v123 + 3) = v125;
        *((_QWORD *)v123 + 4) = v126;
        v128 = *((_QWORD *)v124 + 6);
        v129 = *((_QWORD *)v124 + 7);
        *((_QWORD *)v123 + 5) = v127;
        *((_QWORD *)v123 + 6) = v128;
        *((_QWORD *)v123 + 7) = v129;
        v130 = v125;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v131 = *((_OWORD *)v124 + 1);
        *(_OWORD *)v123 = *(_OWORD *)v124;
        *((_OWORD *)v123 + 1) = v131;
        v132 = *((_OWORD *)v124 + 3);
        *((_OWORD *)v123 + 2) = *((_OWORD *)v124 + 2);
        *((_OWORD *)v123 + 3) = v132;
      }
      v133 = v62[21];
      v134 = &v49[v133];
      v135 = &v50[v133];
      v136 = *((_QWORD *)v135 + 1);
      *(_QWORD *)v134 = *(_QWORD *)v135;
      *((_QWORD *)v134 + 1) = v136;
      *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
      *(_QWORD *)&v49[v62[22]] = *(_QWORD *)&v50[v62[22]];
      v49[v62[23]] = v50[v62[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for GenerativePlayground.ImageGenerationEvent(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(id *, uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

  }
  else
  {
    if (EnumCaseMultiPayload == 2)
    {

      v23 = type metadata accessor for GeneratedImage();
      v24 = (char *)a1 + *(int *)(v23 + 20);
      v25 = &v24[*(int *)(type metadata accessor for ImageProvenance() + 20)];
      v26 = sub_249F1E8D8();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
      v27 = (char *)a1 + *(int *)(v23 + 24);
      v28 = &v27[*(int *)(type metadata accessor for GeneratedImageIndications() + 20)];
      v29 = sub_249F1F13C();
      v30 = *(_QWORD *)(v29 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
    }
    else
    {
      if (EnumCaseMultiPayload)
        return;
      v3 = sub_249F1E8D8();
      v4 = *(_QWORD *)(v3 - 8);
      v5 = *(void (**)(id *, uint64_t))(v4 + 8);
      v5(a1, v3);
      v6 = type metadata accessor for GenerationState();
      v7 = (char *)a1 + *(int *)(v6 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3))
        v5((id *)v7, v3);
      swift_bridgeObjectRelease();
      v8 = (char *)a1 + *(int *)(v6 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = (int *)type metadata accessor for GenerationRecipe(0);
      v10 = &v8[v9[8]];
      v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v13(v10, v12);
        v13(&v10[*(int *)(v11 + 20)], v12);
        v14 = (uint64_t *)&v10[*(int *)(v11 + 24)];
        if (v14[2])
        {
          sub_249DC3C24(*v14, v14[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(void **)&v8[v9[14] + 24];
      if (v15)
      {

        swift_release();
      }
      v16 = *(void **)&v8[v9[15] + 24];
      if (v16)
      {

        swift_release();
      }
      v17 = *(void **)&v8[v9[16] + 24];
      if (v17)
      {

        swift_release();
      }
      v18 = *(void **)&v8[v9[17] + 24];
      if (v18)
      {

        swift_release();
      }
      v19 = &v8[v9[18]];
      v20 = (void *)*((_QWORD *)v19 + 3);
      if (v20)
      {

        swift_release();
      }
      v21 = (void *)*((_QWORD *)v19 + 8);
      if (v21)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      v22 = *(void **)&v8[v9[20] + 24];
      if (v22)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
}

char *initializeWithCopy for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  int *v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, int *);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void *v78;
  uint64_t v79;
  id v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void *v85;
  uint64_t v86;
  id v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void *v92;
  uint64_t v93;
  id v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  void *v99;
  uint64_t v100;
  id v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void *v106;
  uint64_t v107;
  id v108;
  __int128 v109;
  _OWORD *v110;
  _OWORD *v111;
  void *v112;
  uint64_t v113;
  id v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v132;
  char *__dst;
  uint64_t v134;
  char *v135;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v15 = *(void **)a2;
      v16 = v15;
      *(_QWORD *)a1 = v15;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      v17 = *(void **)a2;
      v18 = a2[8];
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = v18;
      v134 = type metadata accessor for GeneratedImage();
      v19 = *(int *)(v134 + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      a1[v19] = a2[v19];
      v22 = (int *)type metadata accessor for ImageProvenance();
      v23 = v22[5];
      v24 = &v20[v23];
      v25 = &v21[v23];
      v26 = sub_249F1E8D8();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      v28 = v17;
      v27(v24, v25, v26);
      *(_QWORD *)&v20[v22[6]] = *(_QWORD *)&v21[v22[6]];
      *(_QWORD *)&v20[v22[7]] = *(_QWORD *)&v21[v22[7]];
      v29 = *(int *)(v134 + 24);
      v30 = a1;
      v31 = &a1[v29];
      v32 = &a2[v29];
      a1[v29] = a2[v29];
      v33 = type metadata accessor for GeneratedImageIndications();
      v34 = *(int *)(v33 + 20);
      v35 = &v31[v34];
      v36 = &v32[v34];
      v37 = sub_249F1F13C();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      if (v39(v36, 1, v37))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      *(_QWORD *)&v31[*(int *)(v33 + 24)] = *(_QWORD *)&v32[*(int *)(v33 + 24)];
      swift_bridgeObjectRetain();
      a1 = v30;
      goto LABEL_41;
    case 0:
      v7 = sub_249F1E8D8();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      v10 = (int *)type metadata accessor for GenerationState();
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      v41 = v10[6];
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = v10[7];
      v135 = a1;
      v46 = &a1[v45];
      v47 = &a2[v45];
      *v46 = a2[v45];
      v48 = *(_QWORD *)&a2[v45 + 16];
      *((_QWORD *)v46 + 1) = *(_QWORD *)&a2[v45 + 8];
      *((_QWORD *)v46 + 2) = v48;
      v46[40] = a2[v45 + 40];
      *(_OWORD *)(v46 + 24) = *(_OWORD *)&a2[v45 + 24];
      *((_QWORD *)v46 + 6) = *(_QWORD *)&a2[v45 + 48];
      *((_DWORD *)v46 + 14) = *(_DWORD *)&a2[v45 + 56];
      v46[60] = a2[v45 + 60];
      v46[61] = a2[v45 + 61];
      v46[62] = a2[v45 + 62];
      v50 = *(_QWORD *)&a2[v45 + 64];
      v49 = *(_QWORD *)&a2[v45 + 72];
      v46[80] = v47[80];
      *((_QWORD *)v46 + 8) = v50;
      *((_QWORD *)v46 + 9) = v49;
      v51 = (int *)type metadata accessor for GenerationRecipe(0);
      v52 = v51[8];
      __dst = &v46[v52];
      v53 = &v47[v52];
      v54 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v55 = *((_QWORD *)v54 - 1);
      v56 = *(unsigned int (**)(char *, uint64_t, int *))(v55 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v56(v53, 1, v54))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        a1 = v135;
      }
      else
      {
        v132 = v55;
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        v59(__dst, v53, v58);
        v59(&__dst[v54[5]], &v53[v54[5]], v58);
        v60 = v54[6];
        v61 = (uint64_t *)&__dst[v60];
        v62 = (uint64_t *)&v53[v60];
        if (*(_QWORD *)&v53[v60 + 16])
        {
          v63 = *v62;
          v64 = v62[1];
          sub_249DC3928(*v62, v64);
          *v61 = v63;
          v61[1] = v64;
          v61[2] = v62[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v61 = *(_OWORD *)v62;
          v61[2] = v62[2];
        }
        a1 = v135;
        __dst[v54[7]] = v53[v54[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v132 + 56))(__dst, 0, 1, v54);
      }
      v65 = v51[9];
      v66 = &v46[v65];
      v67 = &v47[v65];
      *(_DWORD *)v66 = *(_DWORD *)v67;
      v66[4] = v67[4];
      v68 = v51[10];
      v69 = &v46[v68];
      v70 = &v47[v68];
      v69[4] = v70[4];
      *(_DWORD *)v69 = *(_DWORD *)v70;
      v71 = v51[11];
      v72 = &v46[v71];
      v73 = &v47[v71];
      *(_WORD *)v72 = *(_WORD *)v73;
      v72[2] = v73[2];
      v74 = *((_QWORD *)v73 + 2);
      *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
      *((_QWORD *)v72 + 2) = v74;
      *(_QWORD *)&v46[v51[12]] = *(_QWORD *)&v47[v51[12]];
      *(_QWORD *)&v46[v51[13]] = *(_QWORD *)&v47[v51[13]];
      v75 = v51[14];
      v76 = &v46[v75];
      v77 = &v47[v75];
      v78 = *(void **)&v47[v75 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v78)
      {
        *(_OWORD *)v76 = *(_OWORD *)v77;
        *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
        v79 = *((_QWORD *)v77 + 4);
        *((_QWORD *)v76 + 3) = v78;
        *((_QWORD *)v76 + 4) = v79;
        v80 = v78;
        swift_retain();
      }
      else
      {
        v81 = *((_OWORD *)v77 + 1);
        *(_OWORD *)v76 = *(_OWORD *)v77;
        *((_OWORD *)v76 + 1) = v81;
        *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
      }
      v82 = v51[15];
      v83 = &v46[v82];
      v84 = &v47[v82];
      v85 = (void *)*((_QWORD *)v84 + 3);
      if (v85)
      {
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_DWORD *)v83 + 4) = *((_DWORD *)v84 + 4);
        v86 = *((_QWORD *)v84 + 4);
        *((_QWORD *)v83 + 3) = v85;
        *((_QWORD *)v83 + 4) = v86;
        v87 = v85;
        swift_retain();
      }
      else
      {
        v88 = *((_OWORD *)v84 + 1);
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_OWORD *)v83 + 1) = v88;
        *((_QWORD *)v83 + 4) = *((_QWORD *)v84 + 4);
      }
      v89 = v51[16];
      v90 = &v46[v89];
      v91 = &v47[v89];
      v92 = (void *)*((_QWORD *)v91 + 3);
      if (v92)
      {
        *(_OWORD *)v90 = *(_OWORD *)v91;
        *((_DWORD *)v90 + 4) = *((_DWORD *)v91 + 4);
        v93 = *((_QWORD *)v91 + 4);
        *((_QWORD *)v90 + 3) = v92;
        *((_QWORD *)v90 + 4) = v93;
        v94 = v92;
        swift_retain();
      }
      else
      {
        v95 = *((_OWORD *)v91 + 1);
        *(_OWORD *)v90 = *(_OWORD *)v91;
        *((_OWORD *)v90 + 1) = v95;
        *((_QWORD *)v90 + 4) = *((_QWORD *)v91 + 4);
      }
      v96 = v51[17];
      v97 = &v46[v96];
      v98 = &v47[v96];
      v99 = (void *)*((_QWORD *)v98 + 3);
      if (v99)
      {
        *(_OWORD *)v97 = *(_OWORD *)v98;
        *((_DWORD *)v97 + 4) = *((_DWORD *)v98 + 4);
        v100 = *((_QWORD *)v98 + 4);
        *((_QWORD *)v97 + 3) = v99;
        *((_QWORD *)v97 + 4) = v100;
        v101 = v99;
        swift_retain();
      }
      else
      {
        v102 = *((_OWORD *)v98 + 1);
        *(_OWORD *)v97 = *(_OWORD *)v98;
        *((_OWORD *)v97 + 1) = v102;
        *((_QWORD *)v97 + 4) = *((_QWORD *)v98 + 4);
      }
      v103 = v51[18];
      v104 = &v46[v103];
      v105 = &v47[v103];
      v106 = *(void **)&v47[v103 + 24];
      if (v106)
      {
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_DWORD *)v104 + 4) = *((_DWORD *)v105 + 4);
        v107 = *((_QWORD *)v105 + 4);
        *((_QWORD *)v104 + 3) = v106;
        *((_QWORD *)v104 + 4) = v107;
        v108 = v106;
        swift_retain();
      }
      else
      {
        v109 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v109;
        *((_QWORD *)v104 + 4) = *((_QWORD *)v105 + 4);
      }
      v110 = v104 + 40;
      v111 = v105 + 40;
      v112 = (void *)*((_QWORD *)v105 + 8);
      if (v112)
      {
        *v110 = *v111;
        *((_DWORD *)v104 + 14) = *((_DWORD *)v105 + 14);
        v113 = *((_QWORD *)v105 + 9);
        *((_QWORD *)v104 + 8) = v112;
        *((_QWORD *)v104 + 9) = v113;
        v114 = v112;
        swift_retain();
      }
      else
      {
        v115 = *(_OWORD *)(v105 + 56);
        *v110 = *v111;
        *(_OWORD *)(v104 + 56) = v115;
        *((_QWORD *)v104 + 9) = *((_QWORD *)v105 + 9);
      }
      v104[80] = v105[80];
      *(_QWORD *)&v46[v51[19]] = *(_QWORD *)&v47[v51[19]];
      v116 = v51[20];
      v117 = &v46[v116];
      v118 = &v47[v116];
      v119 = *(void **)&v47[v116 + 24];
      swift_bridgeObjectRetain();
      if (v119)
      {
        *(_OWORD *)v117 = *(_OWORD *)v118;
        *((_DWORD *)v117 + 4) = *((_DWORD *)v118 + 4);
        v120 = *((_QWORD *)v118 + 4);
        v121 = *((_QWORD *)v118 + 5);
        *((_QWORD *)v117 + 3) = v119;
        *((_QWORD *)v117 + 4) = v120;
        v122 = *((_QWORD *)v118 + 6);
        v123 = *((_QWORD *)v118 + 7);
        *((_QWORD *)v117 + 5) = v121;
        *((_QWORD *)v117 + 6) = v122;
        *((_QWORD *)v117 + 7) = v123;
        v124 = v119;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v125 = *((_OWORD *)v118 + 1);
        *(_OWORD *)v117 = *(_OWORD *)v118;
        *((_OWORD *)v117 + 1) = v125;
        v126 = *((_OWORD *)v118 + 3);
        *((_OWORD *)v117 + 2) = *((_OWORD *)v118 + 2);
        *((_OWORD *)v117 + 3) = v126;
      }
      v127 = v51[21];
      v128 = &v46[v127];
      v129 = &v47[v127];
      v130 = *((_QWORD *)v129 + 1);
      *(_QWORD *)v128 = *(_QWORD *)v129;
      *((_QWORD *)v128 + 1) = v130;
      *((_QWORD *)v128 + 2) = *((_QWORD *)v129 + 2);
      *(_QWORD *)&v46[v51[22]] = *(_QWORD *)&v47[v51[22]];
      v46[v51[23]] = v47[v51[23]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_41;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for GenerativePlayground.ImageGenerationEvent(uint64_t a1, char *a2, uint64_t a3)
{
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  int *v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, int *);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  void *v80;
  id v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  __int128 v86;
  void *v87;
  id v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  char *v92;
  __int128 v93;
  void *v94;
  id v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  __int128 v100;
  void *v101;
  id v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  void *v108;
  id v109;
  __int128 v110;
  _OWORD *v111;
  __int128 v112;
  void *v113;
  id v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  __int128 v120;
  void *v121;
  id v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v129;
  uint64_t v130;
  int *__dsta;
  char *__dst;

  v3 = (char *)a1;
  if ((char *)a1 != a2)
  {
    sub_249DC05A8(a1, type metadata accessor for GenerativePlayground.ImageGenerationEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v15 = *(void **)a2;
        v16 = v15;
        *(_QWORD *)v3 = v15;
LABEL_42:
        swift_storeEnumTagMultiPayload();
        return v3;
      case 2:
        v17 = *(void **)a2;
        v18 = a2[8];
        *(_QWORD *)v3 = *(_QWORD *)a2;
        v3[8] = v18;
        __dsta = (int *)type metadata accessor for GeneratedImage();
        v19 = __dsta[5];
        v20 = &v3[v19];
        v21 = &a2[v19];
        v3[v19] = a2[v19];
        v22 = (int *)type metadata accessor for ImageProvenance();
        v23 = v22[5];
        v24 = &v20[v23];
        v25 = &v21[v23];
        v26 = sub_249F1E8D8();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        v28 = v17;
        v27(v24, v25, v26);
        *(_QWORD *)&v20[v22[6]] = *(_QWORD *)&v21[v22[6]];
        *(_QWORD *)&v20[v22[7]] = *(_QWORD *)&v21[v22[7]];
        v29 = __dsta[6];
        v30 = v3;
        v31 = &v3[v29];
        v32 = &a2[v29];
        v3[v29] = a2[v29];
        v33 = type metadata accessor for GeneratedImageIndications();
        v34 = *(int *)(v33 + 20);
        v35 = &v31[v34];
        v36 = &v32[v34];
        v37 = sub_249F1F13C();
        v38 = *(_QWORD *)(v37 - 8);
        v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
        swift_bridgeObjectRetain();
        if (v39(v36, 1, v37))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        *(_QWORD *)&v31[*(int *)(v33 + 24)] = *(_QWORD *)&v32[*(int *)(v33 + 24)];
        swift_bridgeObjectRetain();
        v3 = v30;
        goto LABEL_42;
      case 0:
        v7 = sub_249F1E8D8();
        v8 = *(_QWORD *)(v7 - 8);
        v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v9(v3, a2, v7);
        v10 = (int *)type metadata accessor for GenerationState();
        v11 = v10[5];
        v12 = &v3[v11];
        v13 = &a2[v11];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
        }
        v41 = v10[6];
        v42 = &v3[v41];
        v43 = &a2[v41];
        *(_QWORD *)v42 = *(_QWORD *)v43;
        *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
        v44 = v10[7];
        v45 = &v3[v44];
        v46 = &a2[v44];
        *v45 = a2[v44];
        *((_QWORD *)v45 + 1) = *(_QWORD *)&a2[v44 + 8];
        *((_QWORD *)v45 + 2) = *(_QWORD *)&a2[v44 + 16];
        v47 = *(_OWORD *)&a2[v44 + 24];
        v45[40] = a2[v44 + 40];
        *(_OWORD *)(v45 + 24) = v47;
        *((_QWORD *)v45 + 6) = *(_QWORD *)&a2[v44 + 48];
        v45[56] = a2[v44 + 56];
        v45[57] = a2[v44 + 57];
        v45[58] = a2[v44 + 58];
        v45[59] = a2[v44 + 59];
        v45[60] = a2[v44 + 60];
        v45[61] = a2[v44 + 61];
        v45[62] = a2[v44 + 62];
        *((_QWORD *)v45 + 8) = *(_QWORD *)&a2[v44 + 64];
        v48 = *(_QWORD *)&a2[v44 + 72];
        v45[80] = v46[80];
        *((_QWORD *)v45 + 9) = v48;
        v49 = (int *)type metadata accessor for GenerationRecipe(0);
        v50 = v49[8];
        __dst = &v45[v50];
        v51 = &v46[v50];
        v52 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
        v53 = *((_QWORD *)v52 - 1);
        v54 = *(unsigned int (**)(char *, uint64_t, int *))(v53 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v54(v51, 1, v52))
        {
          v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
          memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v130 = v53;
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
          v57(__dst, v51, v56);
          v57(&__dst[v52[5]], &v51[v52[5]], v56);
          v58 = v52[6];
          v59 = (uint64_t *)&__dst[v58];
          v60 = (uint64_t *)&v51[v58];
          if (*(_QWORD *)&v51[v58 + 16])
          {
            v129 = v51;
            v61 = *v60;
            v62 = v60[1];
            sub_249DC3928(*v60, v62);
            *v59 = v61;
            v59[1] = v62;
            v51 = v129;
            v59[2] = v60[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v63 = *(_OWORD *)v60;
            v59[2] = v60[2];
            *(_OWORD *)v59 = v63;
          }
          __dst[v52[7]] = v51[v52[7]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v130 + 56))(__dst, 0, 1, v52);
        }
        v64 = v49[9];
        v65 = &v45[v64];
        v66 = &v46[v64];
        v67 = *(_DWORD *)v66;
        v65[4] = v66[4];
        *(_DWORD *)v65 = v67;
        v68 = v49[10];
        v69 = &v45[v68];
        v70 = &v46[v68];
        v71 = *(_DWORD *)v70;
        v69[4] = v70[4];
        *(_DWORD *)v69 = v71;
        v72 = v49[11];
        v73 = &v45[v72];
        v74 = &v46[v72];
        *v73 = *v74;
        v73[1] = v74[1];
        v73[2] = v74[2];
        *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
        *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
        *(_QWORD *)&v45[v49[12]] = *(_QWORD *)&v46[v49[12]];
        *(_QWORD *)&v45[v49[13]] = *(_QWORD *)&v46[v49[13]];
        v75 = v49[14];
        v76 = &v45[v75];
        v77 = &v46[v75];
        v78 = *(_QWORD *)&v46[v75 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79 = *(_OWORD *)v77;
        if (v78)
        {
          *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
          *(_OWORD *)v76 = v79;
          v80 = (void *)*((_QWORD *)v77 + 3);
          *((_QWORD *)v76 + 3) = v80;
          *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
          v81 = v80;
          swift_retain();
        }
        else
        {
          v82 = *((_OWORD *)v77 + 1);
          *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
          *(_OWORD *)v76 = v79;
          *((_OWORD *)v76 + 1) = v82;
        }
        v83 = v49[15];
        v84 = &v45[v83];
        v85 = &v46[v83];
        v86 = *(_OWORD *)v85;
        if (*((_QWORD *)v85 + 3))
        {
          *((_DWORD *)v84 + 4) = *((_DWORD *)v85 + 4);
          *(_OWORD *)v84 = v86;
          v87 = (void *)*((_QWORD *)v85 + 3);
          *((_QWORD *)v84 + 3) = v87;
          *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
          v88 = v87;
          swift_retain();
        }
        else
        {
          v89 = *((_OWORD *)v85 + 1);
          *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
          *(_OWORD *)v84 = v86;
          *((_OWORD *)v84 + 1) = v89;
        }
        v90 = v49[16];
        v91 = &v45[v90];
        v92 = &v46[v90];
        v93 = *(_OWORD *)v92;
        if (*((_QWORD *)v92 + 3))
        {
          *((_DWORD *)v91 + 4) = *((_DWORD *)v92 + 4);
          *(_OWORD *)v91 = v93;
          v94 = (void *)*((_QWORD *)v92 + 3);
          *((_QWORD *)v91 + 3) = v94;
          *((_QWORD *)v91 + 4) = *((_QWORD *)v92 + 4);
          v95 = v94;
          swift_retain();
        }
        else
        {
          v96 = *((_OWORD *)v92 + 1);
          *((_QWORD *)v91 + 4) = *((_QWORD *)v92 + 4);
          *(_OWORD *)v91 = v93;
          *((_OWORD *)v91 + 1) = v96;
        }
        v97 = v49[17];
        v98 = &v45[v97];
        v99 = &v46[v97];
        v100 = *(_OWORD *)v99;
        if (*((_QWORD *)v99 + 3))
        {
          *((_DWORD *)v98 + 4) = *((_DWORD *)v99 + 4);
          *(_OWORD *)v98 = v100;
          v101 = (void *)*((_QWORD *)v99 + 3);
          *((_QWORD *)v98 + 3) = v101;
          *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
          v102 = v101;
          swift_retain();
        }
        else
        {
          v103 = *((_OWORD *)v99 + 1);
          *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
          *(_OWORD *)v98 = v100;
          *((_OWORD *)v98 + 1) = v103;
        }
        v104 = v49[18];
        v105 = &v45[v104];
        v106 = &v46[v104];
        v107 = *(_OWORD *)&v46[v104];
        if (*(_QWORD *)&v46[v104 + 24])
        {
          *((_DWORD *)v105 + 4) = *((_DWORD *)v106 + 4);
          *(_OWORD *)v105 = v107;
          v108 = (void *)*((_QWORD *)v106 + 3);
          *((_QWORD *)v105 + 3) = v108;
          *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
          v109 = v108;
          swift_retain();
        }
        else
        {
          v110 = *((_OWORD *)v106 + 1);
          *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
          *(_OWORD *)v105 = v107;
          *((_OWORD *)v105 + 1) = v110;
        }
        v111 = v105 + 40;
        v112 = *(_OWORD *)(v106 + 40);
        if (*((_QWORD *)v106 + 8))
        {
          *((_DWORD *)v105 + 14) = *((_DWORD *)v106 + 14);
          *v111 = v112;
          v113 = (void *)*((_QWORD *)v106 + 8);
          *((_QWORD *)v105 + 8) = v113;
          *((_QWORD *)v105 + 9) = *((_QWORD *)v106 + 9);
          v114 = v113;
          swift_retain();
        }
        else
        {
          v115 = *(_OWORD *)(v106 + 56);
          *((_QWORD *)v105 + 9) = *((_QWORD *)v106 + 9);
          *v111 = v112;
          *(_OWORD *)(v105 + 56) = v115;
        }
        v105[80] = v106[80];
        *(_QWORD *)&v45[v49[19]] = *(_QWORD *)&v46[v49[19]];
        v116 = v49[20];
        v117 = &v45[v116];
        v118 = &v46[v116];
        v119 = *(_QWORD *)&v46[v116 + 24];
        swift_bridgeObjectRetain();
        v120 = *(_OWORD *)v118;
        if (v119)
        {
          *((_DWORD *)v117 + 4) = *((_DWORD *)v118 + 4);
          *(_OWORD *)v117 = v120;
          v121 = (void *)*((_QWORD *)v118 + 3);
          *((_QWORD *)v117 + 3) = v121;
          *((_QWORD *)v117 + 4) = *((_QWORD *)v118 + 4);
          *((_QWORD *)v117 + 5) = *((_QWORD *)v118 + 5);
          *((_QWORD *)v117 + 6) = *((_QWORD *)v118 + 6);
          *((_QWORD *)v117 + 7) = *((_QWORD *)v118 + 7);
          v122 = v121;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v123 = *((_OWORD *)v118 + 1);
          v124 = *((_OWORD *)v118 + 3);
          *((_OWORD *)v117 + 2) = *((_OWORD *)v118 + 2);
          *((_OWORD *)v117 + 3) = v124;
          *(_OWORD *)v117 = v120;
          *((_OWORD *)v117 + 1) = v123;
        }
        v125 = v49[21];
        v126 = &v45[v125];
        v127 = &v46[v125];
        *(_QWORD *)v126 = *(_QWORD *)v127;
        *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
        *((_QWORD *)v126 + 2) = *((_QWORD *)v127 + 2);
        *(_QWORD *)&v45[v49[22]] = *(_QWORD *)&v46[v49[22]];
        v45[v49[23]] = v46[v49[23]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_42;
    }
    memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return v3;
}

char *initializeWithTake for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[8] = a2[8];
    v15 = type metadata accessor for GeneratedImage();
    v16 = *(int *)(v15 + 20);
    v17 = &a1[v16];
    v18 = &a2[v16];
    a1[v16] = a2[v16];
    v19 = (int *)type metadata accessor for ImageProvenance();
    v20 = v19[5];
    v21 = &v17[v20];
    v22 = &v18[v20];
    v23 = sub_249F1E8D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    *(_QWORD *)&v17[v19[6]] = *(_QWORD *)&v18[v19[6]];
    *(_QWORD *)&v17[v19[7]] = *(_QWORD *)&v18[v19[7]];
    v24 = *(int *)(v15 + 24);
    v25 = &a1[v24];
    v26 = &a2[v24];
    a1[v24] = a2[v24];
    v27 = type metadata accessor for GeneratedImageIndications();
    v28 = *(int *)(v27 + 20);
    v29 = &v25[v28];
    v30 = &v26[v28];
    v31 = sub_249F1F13C();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
    goto LABEL_15;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_249F1E8D8();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v9(a1, a2, v7);
    v10 = (int *)type metadata accessor for GenerationState();
    v11 = v10[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
    }
    *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
    v34 = v10[7];
    v35 = &a1[v34];
    v36 = &a2[v34];
    *v35 = a2[v34];
    *(_QWORD *)(v35 + 55) = *(_QWORD *)&a2[v34 + 55];
    *(_OWORD *)(v35 + 40) = *(_OWORD *)&a2[v34 + 40];
    *(_OWORD *)(v35 + 24) = *(_OWORD *)&a2[v34 + 24];
    *(_OWORD *)(v35 + 8) = *(_OWORD *)&a2[v34 + 8];
    v35[80] = a2[v34 + 80];
    v37 = *(_QWORD *)&a2[v34 + 72];
    *((_QWORD *)v35 + 8) = *(_QWORD *)&a2[v34 + 64];
    *((_QWORD *)v35 + 9) = v37;
    v38 = (int *)type metadata accessor for GenerationRecipe(0);
    v39 = v38[8];
    v40 = &v35[v39];
    v41 = &v36[v39];
    v42 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v43 = *((_QWORD *)v42 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
      v46(v40, v41, v45);
      v46(&v40[v42[5]], &v41[v42[5]], v45);
      v47 = v42[6];
      v48 = &v40[v47];
      v49 = &v41[v47];
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
      v40[v42[7]] = v41[v42[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
    }
    v50 = v38[9];
    v51 = &v35[v50];
    v52 = &v36[v50];
    *(_DWORD *)v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
    v53 = v38[10];
    v54 = &v35[v53];
    v55 = &v36[v53];
    v54[4] = v55[4];
    *(_DWORD *)v54 = *(_DWORD *)v55;
    v56 = v38[11];
    v57 = &v35[v56];
    v58 = &v36[v56];
    *(_OWORD *)v57 = *(_OWORD *)v58;
    *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
    *(_QWORD *)&v35[v38[12]] = *(_QWORD *)&v36[v38[12]];
    *(_QWORD *)&v35[v38[13]] = *(_QWORD *)&v36[v38[13]];
    v59 = v38[14];
    v60 = &v35[v59];
    v61 = &v36[v59];
    v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
    v63 = v38[15];
    v64 = &v35[v63];
    v65 = &v36[v63];
    *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
    v66 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v66;
    v67 = v38[16];
    v68 = &v35[v67];
    v69 = &v36[v67];
    v70 = *((_OWORD *)v69 + 1);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v70;
    *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
    v71 = v38[17];
    v72 = &v35[v71];
    v73 = &v36[v71];
    v74 = *((_OWORD *)v73 + 1);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *((_OWORD *)v72 + 1) = v74;
    *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
    v75 = v38[18];
    v76 = &v35[v75];
    v77 = &v36[v75];
    v78 = *((_OWORD *)v77 + 3);
    *((_OWORD *)v76 + 2) = *((_OWORD *)v77 + 2);
    *((_OWORD *)v76 + 3) = v78;
    *((_OWORD *)v76 + 4) = *((_OWORD *)v77 + 4);
    v76[80] = v77[80];
    v79 = *((_OWORD *)v77 + 1);
    *(_OWORD *)v76 = *(_OWORD *)v77;
    *((_OWORD *)v76 + 1) = v79;
    *(_QWORD *)&v35[v38[19]] = *(_QWORD *)&v36[v38[19]];
    v80 = v38[20];
    v81 = &v35[v80];
    v82 = &v36[v80];
    v83 = *((_OWORD *)v82 + 1);
    *(_OWORD *)v81 = *(_OWORD *)v82;
    *((_OWORD *)v81 + 1) = v83;
    v84 = *((_OWORD *)v82 + 3);
    *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
    *((_OWORD *)v81 + 3) = v84;
    v85 = v38[21];
    v86 = &v35[v85];
    v87 = &v36[v85];
    *(_OWORD *)v86 = *(_OWORD *)v87;
    *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
    *(_QWORD *)&v35[v38[22]] = *(_QWORD *)&v36[v38[22]];
    v35[v38[23]] = v36[v38[23]];
LABEL_15:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for GenerativePlayground.ImageGenerationEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v15 = type metadata accessor for GeneratedImage();
      v16 = *(int *)(v15 + 20);
      v17 = &a1[v16];
      v18 = &a2[v16];
      a1[v16] = a2[v16];
      v19 = (int *)type metadata accessor for ImageProvenance();
      v20 = v19[5];
      v21 = &v17[v20];
      v22 = &v18[v20];
      v23 = sub_249F1E8D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      *(_QWORD *)&v17[v19[6]] = *(_QWORD *)&v18[v19[6]];
      *(_QWORD *)&v17[v19[7]] = *(_QWORD *)&v18[v19[7]];
      v24 = *(int *)(v15 + 24);
      v25 = &a1[v24];
      v26 = &a2[v24];
      a1[v24] = a2[v24];
      v27 = type metadata accessor for GeneratedImageIndications();
      v28 = *(int *)(v27 + 20);
      v29 = &v25[v28];
      v30 = &v26[v28];
      v31 = sub_249F1F13C();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_249F1E8D8();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v9(a1, a2, v7);
      v10 = (int *)type metadata accessor for GenerationState();
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
      v34 = v10[7];
      v35 = &a1[v34];
      v36 = &a2[v34];
      *v35 = a2[v34];
      *(_QWORD *)(v35 + 55) = *(_QWORD *)&a2[v34 + 55];
      *(_OWORD *)(v35 + 40) = *(_OWORD *)&a2[v34 + 40];
      *(_OWORD *)(v35 + 24) = *(_OWORD *)&a2[v34 + 24];
      *(_OWORD *)(v35 + 8) = *(_OWORD *)&a2[v34 + 8];
      v35[80] = a2[v34 + 80];
      v37 = *(_QWORD *)&a2[v34 + 72];
      *((_QWORD *)v35 + 8) = *(_QWORD *)&a2[v34 + 64];
      *((_QWORD *)v35 + 9) = v37;
      v38 = (int *)type metadata accessor for GenerationRecipe(0);
      v39 = v38[8];
      v40 = &v35[v39];
      v41 = &v36[v39];
      v42 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      v43 = *((_QWORD *)v42 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
        v46(v40, v41, v45);
        v46(&v40[v42[5]], &v41[v42[5]], v45);
        v47 = v42[6];
        v48 = &v40[v47];
        v49 = &v41[v47];
        *(_OWORD *)v48 = *(_OWORD *)v49;
        *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
        v40[v42[7]] = v41[v42[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
      }
      v50 = v38[9];
      v51 = &v35[v50];
      v52 = &v36[v50];
      *(_DWORD *)v51 = *(_DWORD *)v52;
      v51[4] = v52[4];
      v53 = v38[10];
      v54 = &v35[v53];
      v55 = &v36[v53];
      v54[4] = v55[4];
      *(_DWORD *)v54 = *(_DWORD *)v55;
      v56 = v38[11];
      v57 = &v35[v56];
      v58 = &v36[v56];
      *(_OWORD *)v57 = *(_OWORD *)v58;
      *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
      *(_QWORD *)&v35[v38[12]] = *(_QWORD *)&v36[v38[12]];
      *(_QWORD *)&v35[v38[13]] = *(_QWORD *)&v36[v38[13]];
      v59 = v38[14];
      v60 = &v35[v59];
      v61 = &v36[v59];
      v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v62;
      *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
      v63 = v38[15];
      v64 = &v35[v63];
      v65 = &v36[v63];
      *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
      v66 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v66;
      v67 = v38[16];
      v68 = &v35[v67];
      v69 = &v36[v67];
      v70 = *((_OWORD *)v69 + 1);
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v70;
      *((_QWORD *)v68 + 4) = *((_QWORD *)v69 + 4);
      v71 = v38[17];
      v72 = &v35[v71];
      v73 = &v36[v71];
      v74 = *((_OWORD *)v73 + 1);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_OWORD *)v72 + 1) = v74;
      *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
      v75 = v38[18];
      v76 = &v35[v75];
      v77 = &v36[v75];
      v78 = *((_OWORD *)v77 + 3);
      *((_OWORD *)v76 + 2) = *((_OWORD *)v77 + 2);
      *((_OWORD *)v76 + 3) = v78;
      *((_OWORD *)v76 + 4) = *((_OWORD *)v77 + 4);
      v76[80] = v77[80];
      v79 = *((_OWORD *)v77 + 1);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + 1) = v79;
      *(_QWORD *)&v35[v38[19]] = *(_QWORD *)&v36[v38[19]];
      v80 = v38[20];
      v81 = &v35[v80];
      v82 = &v36[v80];
      v83 = *((_OWORD *)v82 + 1);
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *((_OWORD *)v81 + 1) = v83;
      v84 = *((_OWORD *)v82 + 3);
      *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
      *((_OWORD *)v81 + 3) = v84;
      v85 = v38[21];
      v86 = &v35[v85];
      v87 = &v36[v85];
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
      *(_QWORD *)&v35[v38[22]] = *(_QWORD *)&v36[v38[22]];
      v35[v38[23]] = v36[v38[23]];
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Concept(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Concept(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_249DCA260()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GeneratedImage();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_249DCA2F0()
{
  return type metadata accessor for GenerativePlayground.ImageGenerationSession(0);
}

void sub_249DCA2F8()
{
  unint64_t v0;
  unint64_t v1;

  sub_249DC5A14(319, qword_2578D6B78, type metadata accessor for GenerativePlayground.ImageGenerationEvent, MEMORY[0x24BEE6A98]);
  if (v0 <= 0x3F)
  {
    sub_249F1E8D8();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for GenerativePlayground.ImageGenerationSession()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_249DCA3BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D50);
    v7 = (_QWORD *)sub_249F1FC1C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_249DCC274(v9, (uint64_t)v5, &qword_2578D6D58);
      v11 = *v5;
      v12 = v5[1];
      result = sub_249DB8068(*v5, v12);
      if ((v14 & 1) != 0)
        break;
      v15 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v16 = (uint64_t *)(v7[6] + 16 * result);
      *v16 = v11;
      v16[1] = v12;
      v17 = v7[7];
      v18 = type metadata accessor for GeneratedImage();
      result = sub_249D9E308(v8, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      v19 = v7[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_10;
      v7[2] = v21;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_249DCA52C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  unint64_t result;
  char v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  id v18;
  char v19;
  id v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C50);
  v3 = (_QWORD *)sub_249F1FC1C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  result = sub_249DB8068(v4, v5);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v20 = v6;
    return (unint64_t)v3;
  }
  v10 = (_BYTE *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v4;
    v11[1] = v5;
    v12 = v3[7] + 16 * result;
    *(_QWORD *)v12 = v6;
    *(_BYTE *)(v12 + 8) = v7;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      break;
    v3[2] = v15;
    if (!--v1)
      goto LABEL_8;
    v16 = v10 + 32;
    v4 = *((_QWORD *)v10 - 3);
    v5 = *((_QWORD *)v10 - 2);
    v17 = (void *)*((_QWORD *)v10 - 1);
    v7 = *v10;
    v18 = v6;
    result = sub_249DB8068(v4, v5);
    v10 = v16;
    v6 = v17;
    if ((v19 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DCA64C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;
  uint64_t result;

  if (a4)
  {
    v4 = a4;
    return swift_retain();
  }
  return result;
}

_OWORD *sub_249DCA678(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_249DCA688(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_249DCA6C4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_249DCA6F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(a2, a1);
  return a2;
}

uint64_t sub_249DCA734(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_249DCA770(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  __int128 v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  sub_249DC12DC();
  result = sub_249F1F70C();
  v6 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      sub_249DB3858(&v5, *(v4 - 1), *v4);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_249DCA7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_249DCA820(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCA910(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E20);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

char *sub_249DCAA1C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCAB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int *v14;
  _QWORD *v15;

  v14 = *(int **)(v6 + 16);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2578D9DA8
                                                                                              + dword_2578D9DA8))(a1, a2, a3, a4, a5, a6, v14);
}

uint64_t sub_249DCABB4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;

  v10 = *(int **)(v4 + 16);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *, uint64_t, int *))((char *)&dword_2578D9DB0
                                                                                + dword_2578D9DB0))(a1, a2, a3, a4, v10);
}

uint64_t sub_249DCAC4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_249DCAC7C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_249DCACA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCADA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCAEC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6DD8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCAFCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCB0BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

uint64_t sub_249DCB1B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249DCB1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_249DCB240()
{
  return objectdestroy_111Tm(&qword_2578D6E38);
}

uint64_t sub_249DCB24C(uint64_t a1, uint64_t a2)
{
  return sub_249DCC218(a1, a2, &qword_2578D6E38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_249DACF94);
}

uint64_t sub_249DCB260()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DCB294(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_249DAFCF8;
  return sub_249DAD368(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_249DCB318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  unint64_t v35;
  void *v36;
  uint64_t v38;
  void (*v39)(unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for DefinitionSession();
  v6 = *((_QWORD *)v5 - 1);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_249F1E8D8();
  v10 = *(_QWORD *)(v9 - 8);
  v41 = *(unsigned __int8 *)(v10 + 80);
  v38 = *(_QWORD *)(v10 + 64);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v11 = v0 + v7;
  v39 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v40 = v9;
  v39(v0 + v7, v9);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v7 + v5[6]))
    swift_release();
  v12 = v11 + v5[7];
  if (*(unsigned __int8 *)(v12 + 8) != 255)

  v13 = v8 + v7;
  v14 = v11 + v5[8];
  if (*(unsigned __int8 *)(v14 + 8) != 255)

  v15 = v13 + 7;
  v16 = v11 + v5[9];
  if (*(_BYTE *)(v16 + 8) != 0xFF)
  {

  }
  v17 = v11 + v5[10];
  if (*(unsigned __int8 *)(v17 + 8) != 0xFF)

  v18 = v41 + (v15 & 0xFFFFFFFFFFFFFFF8);
  v19 = v41;

  swift_release();
  v20 = v11 + v5[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = (int *)type metadata accessor for GenerationRecipe(0);
  v22 = v20 + v21[8];
  v23 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
    v25(v22, v24);
    v25(v22 + *(int *)(v23 + 20), v24);
    v19 = v41;
    v26 = (uint64_t *)(v22 + *(int *)(v23 + 24));
    if (v26[2])
    {
      sub_249DC3C24(*v26, v26[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = *(void **)(v20 + v21[14] + 24);
  if (v27)
  {

    swift_release();
  }
  v28 = (v18 + 8) & ~v19;
  v29 = *(void **)(v20 + v21[15] + 24);
  if (v29)
  {

    swift_release();
  }
  v30 = *(void **)(v20 + v21[16] + 24);
  if (v30)
  {

    swift_release();
  }
  v31 = *(void **)(v20 + v21[17] + 24);
  if (v31)
  {

    swift_release();
  }
  v32 = v20 + v21[18];
  v33 = *(void **)(v32 + 24);
  if (v33)
  {

    swift_release();
  }
  v34 = *(void **)(v32 + 64);
  if (v34)
  {

    swift_release();
  }
  v35 = (((v38 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) + 27) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v36 = *(void **)(v20 + v21[20] + 24);
  if (v36)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v39(v0 + v28, v40);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v35))
    swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DCB780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E38) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for DefinitionSession() - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(sub_249F1E8D8() - 8);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + v5);
  v13 = *(_QWORD *)(v1 + v8);
  v10 = v1 + ((*(unsigned __int8 *)(v9 + 80) + v8 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_249DCC420;
  return sub_249DAACBC(a1, v16, v15, v1 + v4, v14, v1 + v7, v13, v10);
}

uint64_t sub_249DCB8F4()
{
  return objectdestroy_111Tm(&qword_2578D6E38);
}

uint64_t sub_249DCB900(uint64_t a1, uint64_t a2)
{
  return sub_249DCC218(a1, a2, &qword_2578D6E38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_249DAC374);
}

uint64_t sub_249DCB914(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unsigned __int8 *sub_249DCB93C()
{
  uint64_t v0;
  unsigned __int8 *result;

  result = (unsigned __int8 *)(*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 136))();
  atomic_store(1u, result);
  return result;
}

uint64_t sub_249DCB96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  unint64_t v34;
  void *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, uint64_t);
  uint64_t *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  void *v49;
  unint64_t v50;
  void *v51;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  void (*v55)(unint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E88);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for DefinitionSession();
  v6 = *((_QWORD *)v5 - 1);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for GenerationState();
  v10 = *(_QWORD *)(v9 - 8);
  v59 = *(unsigned __int8 *)(v10 + 80);
  v57 = v9;
  v58 = *(_QWORD *)(v10 + 64);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v11 = v0 + v7;
  v12 = sub_249F1E8D8();
  v54 = *(_QWORD *)(v12 - 8);
  v13 = *(void (**)(unint64_t, uint64_t))(v54 + 8);
  v13(v0 + v7, v12);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v7 + v5[6]))
    swift_release();
  v14 = v11 + v5[7];
  if (*(unsigned __int8 *)(v14 + 8) != 255)

  v15 = v11 + v5[8];
  if (*(unsigned __int8 *)(v15 + 8) != 255)

  v16 = v11 + v5[9];
  if (*(_BYTE *)(v16 + 8) != 0xFF)
  {

  }
  v55 = v13;
  v56 = v12;
  v17 = v11 + v5[10];
  if (*(unsigned __int8 *)(v17 + 8) != 0xFF)

  v18 = v8 + v7;
  swift_release();
  v19 = v11 + v5[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = (int *)type metadata accessor for GenerationRecipe(0);
  v21 = v19 + v20[8];
  v22 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
  if (!v53(v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
    v24(v21, v23);
    v24(v21 + *(int *)(v22 + 20), v23);
    v25 = (uint64_t *)(v21 + *(int *)(v22 + 24));
    if (v25[2])
    {
      sub_249DC3C24(*v25, v25[1]);
      swift_bridgeObjectRelease();
    }
  }
  v26 = v18 + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = *(void **)(v19 + v20[14] + 24);
  if (v27)
  {

    swift_release();
  }
  v28 = *(void **)(v19 + v20[15] + 24);
  if (v28)
  {

    swift_release();
  }
  v29 = *(void **)(v19 + v20[16] + 24);
  if (v29)
  {

    swift_release();
  }
  v30 = *(void **)(v19 + v20[17] + 24);
  if (v30)
  {

    swift_release();
  }
  v31 = v19 + v20[18];
  v32 = *(void **)(v31 + 24);
  if (v32)
  {

    swift_release();
  }
  v33 = *(void **)(v31 + 64);
  if (v33)
  {

    swift_release();
  }
  v34 = (v59 + (((v26 & 0xFFFFFFFFFFFFFFF8) + 35) & 0xFFFFFFFFFFFFFFF8) + 20) & ~v59;
  swift_bridgeObjectRelease();
  v35 = *(void **)(v19 + v20[20] + 24);
  if (v35)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55(v0 + v34, v56);
  v36 = v0 + v34 + *(int *)(v57 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v54 + 48))(v36, 1, v56))
    v55(v36, v56);
  swift_bridgeObjectRelease();
  v37 = v0 + v34 + *(int *)(v57 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v37 + v20[8];
  if (!v53(v38, 1, v22))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v40 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
    v40(v38, v39);
    v40(v38 + *(int *)(v22 + 20), v39);
    v41 = (uint64_t *)(v38 + *(int *)(v22 + 24));
    if (v41[2])
    {
      sub_249DC3C24(*v41, v41[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = *(void **)(v37 + v20[14] + 24);
  if (v42)
  {

    swift_release();
  }
  v43 = *(void **)(v37 + v20[15] + 24);
  if (v43)
  {

    swift_release();
  }
  v44 = *(void **)(v37 + v20[16] + 24);
  if (v44)
  {

    swift_release();
  }
  v45 = *(void **)(v37 + v20[17] + 24);
  if (v45)
  {

    swift_release();
  }
  v46 = (v58 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = v37 + v20[18];
  v48 = *(void **)(v47 + 24);
  if (v48)
  {

    swift_release();
  }
  v49 = *(void **)(v47 + 64);
  if (v49)
  {

    swift_release();
  }
  v50 = (v46 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v51 = *(void **)(v37 + v20[20] + 24);
  if (v51)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v46);
  if (*(_QWORD *)(v0 + v50))
    swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DCBFF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E88) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(type metadata accessor for DefinitionSession() - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for GenerationState();
  v12 = *(_QWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + v7);
  v11 = *(_QWORD *)(v1 + v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v14 + 16) = v8;
  *v8 = v14;
  v8[1] = sub_249DCC420;
  return sub_249DA7524(a1, v13, v12, v1 + v3, v11, v1 + v6, v10);
}

uint64_t sub_249DCC19C()
{
  return objectdestroy_111Tm(&qword_2578D6E88);
}

uint64_t objectdestroy_111Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_249DCC204(uint64_t a1, uint64_t a2)
{
  return sub_249DCC218(a1, a2, &qword_2578D6E88, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_249DA83D0);
}

uint64_t sub_249DCC218(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, v4 + ((v7 + 16) & ~v7));
}

uint64_t sub_249DCC274(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_249DCC2B8()
{
  unint64_t result;

  result = qword_2578D6EB0;
  if (!qword_2578D6EB0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for UnsupportedDemographicCategories, &type metadata for UnsupportedDemographicCategories);
    atomic_store(result, &qword_2578D6EB0);
  }
  return result;
}

uint64_t sub_249DCC2FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249DCC338()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DCC35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2578D6ED8 + dword_2578D6ED8))(a1, v4);
}

unint64_t sub_249DCC3CC()
{
  unint64_t result;

  result = qword_2578D6EE8;
  if (!qword_2578D6EE8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PromptError, &type metadata for PromptError);
    atomic_store(result, (unint64_t *)&qword_2578D6EE8);
  }
  return result;
}

unint64_t _s13DiffusionBase21PipelineConfigurationV17InputConditioningV16VisualGeneration27RadarDescriptionConvertibleA2fGP05radarJ0SSvgTW_0()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  type metadata accessor for PipelineConfiguration.InputConditioning(0);
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

uint64_t dispatch thunk of ImageStyleAvailability.availableImageStyles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for CodableStringIndexRange()
{
  return &type metadata for CodableStringIndexRange;
}

uint64_t sub_249DCC54C(char *a1, char *a2)
{
  return sub_249E3915C(*a1, *a2);
}

uint64_t sub_249DCC558()
{
  return sub_249DCD5A0();
}

uint64_t sub_249DCC560()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249DCC5B8()
{
  return sub_249DCD870();
}

uint64_t sub_249DCC5C0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249F1FC4C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_249DCC61C(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x8000000249F339E0;
  if (*v1)
    v2 = 0x8000000249F33A00;
  *a1 = 0xD000000000000010;
  a1[1] = v2;
}

unint64_t sub_249DCC658()
{
  return 0xD000000000000010;
}

uint64_t sub_249DCC688@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249F1FC4C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_249DCC6E8()
{
  return 0;
}

void sub_249DCC6F4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_249DCC700()
{
  sub_249DCCA14();
  return sub_249F20024();
}

uint64_t sub_249DCC728()
{
  sub_249DCCA14();
  return sub_249F20030();
}

uint64_t sub_249DCC750(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6F18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DCCA14();
  sub_249F20018();
  v10 = 0;
  sub_249F1FDC0();
  if (!v1)
  {
    v9 = 1;
    sub_249F1FDC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_249DCC86C()
{
  sub_249F1FF64();
  sub_249F1FF94();
  sub_249F1FF94();
  return sub_249F1FFA0();
}

uint64_t sub_249DCC8C4()
{
  sub_249F1FF94();
  return sub_249F1FF94();
}

uint64_t sub_249DCC900()
{
  sub_249F1FF64();
  sub_249F1FF94();
  sub_249F1FF94();
  return sub_249F1FFA0();
}

_QWORD *sub_249DCC954@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_249DCCA58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_249DCC97C(_QWORD *a1)
{
  return sub_249DCC750(a1);
}

BOOL sub_249DCC994(_QWORD *a1, _QWORD *a2)
{
  return !((*a2 ^ *a1) >> 14) && (a1[1] ^ a2[1]) < 0x4000;
}

unint64_t sub_249DCC9D0()
{
  unint64_t result;

  result = qword_2578D6F10;
  if (!qword_2578D6F10)
  {
    result = MEMORY[0x24BD06528](&unk_249F222F8, &type metadata for CodableStringIndexRange);
    atomic_store(result, (unint64_t *)&qword_2578D6F10);
  }
  return result;
}

unint64_t sub_249DCCA14()
{
  unint64_t result;

  result = qword_2578D6F20;
  if (!qword_2578D6F20)
  {
    result = MEMORY[0x24BD06528](&unk_249F224AC, &type metadata for CodableStringIndexRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D6F20);
  }
  return result;
}

_QWORD *sub_249DCCA58(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6F28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DCCA14();
  sub_249F1FFF4();
  if (v1)
    goto LABEL_11;
  LOBYTE(v14) = 0;
  v8 = sub_249F1FCF4();
  if ((v8 & 0x8000000000000000) != 0)
  {
    v16 = 0;
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_249F1FA84();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000014;
    v15 = 0x8000000249F348A0;
    v13 = v8;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v14) = 1;
    v9 = sub_249F1FCF4();
    v10 = v9;
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (v9 >= v8)
      {
        v7 = (_QWORD *)(v8 << 16);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        return v7;
      }
      v16 = 1;
      v14 = 0;
      v15 = 0xE000000000000000;
      sub_249F1FA84();
      sub_249F1F460();
      v13 = v10;
      sub_249F1FE08();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      v13 = v8;
      sub_249F1FE08();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    v16 = 1;
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_249F1FA84();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000014;
    v15 = 0x8000000249F34830;
    v13 = v10;
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
LABEL_9:
  v7 = (_QWORD *)v14;
  sub_249F1FAF0();
  swift_allocError();
  sub_249DCCDE0();
  sub_249F1FACC();
  swift_bridgeObjectRelease();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_249DCCDE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D6F30;
  if (!qword_2578D6F30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D6F28);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE33F8], v1);
    atomic_store(result, (unint64_t *)&qword_2578D6F30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CodableStringIndexRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DCCE78 + 4 * byte_249F222D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DCCEAC + 4 * asc_249F222D0[v4]))();
}

uint64_t sub_249DCCEAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DCCEB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DCCEBCLL);
  return result;
}

uint64_t sub_249DCCEC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DCCED0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DCCED4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DCCEDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableStringIndexRange.CodingKeys()
{
  return &type metadata for CodableStringIndexRange.CodingKeys;
}

unint64_t sub_249DCCEFC()
{
  unint64_t result;

  result = qword_2578D6F38;
  if (!qword_2578D6F38)
  {
    result = MEMORY[0x24BD06528](&unk_249F22484, &type metadata for CodableStringIndexRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D6F38);
  }
  return result;
}

unint64_t sub_249DCCF44()
{
  unint64_t result;

  result = qword_2578D6F40;
  if (!qword_2578D6F40)
  {
    result = MEMORY[0x24BD06528](&unk_249F223BC, &type metadata for CodableStringIndexRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D6F40);
  }
  return result;
}

unint64_t sub_249DCCF8C()
{
  unint64_t result;

  result = qword_2578D6F48;
  if (!qword_2578D6F48)
  {
    result = MEMORY[0x24BD06528](&unk_249F223E4, &type metadata for CodableStringIndexRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D6F48);
  }
  return result;
}

unint64_t sub_249DCCFD4()
{
  unint64_t result;

  result = qword_2578D6F50;
  if (!qword_2578D6F50)
  {
    result = MEMORY[0x24BD06528](&unk_249F225EC, &_s19EmptyShareableProxyVN);
    atomic_store(result, (unint64_t *)&qword_2578D6F50);
  }
  return result;
}

unint64_t sub_249DCD01C()
{
  unint64_t result;

  result = qword_2578D6F58;
  if (!qword_2578D6F58)
  {
    result = MEMORY[0x24BD06528](&unk_249F225C4, &_s19EmptyShareableProxyVN);
    atomic_store(result, (unint64_t *)&qword_2578D6F58);
  }
  return result;
}

_UNKNOWN **sub_249DCD060()
{
  return &off_251B4F750;
}

unint64_t sub_249DCD06C(uint64_t a1)
{
  unint64_t result;

  result = sub_249DCD090();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249DCD090()
{
  unint64_t result;

  result = qword_2578D6FA8;
  if (!qword_2578D6FA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2256C, &type metadata for Image);
    atomic_store(result, (unint64_t *)&qword_2578D6FA8);
  }
  return result;
}

uint64_t sub_249DCD0D4()
{
  return sub_249DCD11C(&qword_2578D6FB0, (uint64_t)&unk_249F2EA08);
}

uint64_t sub_249DCD0F8()
{
  return sub_249DCD11C(qword_2578D6FC0, (uint64_t)&unk_249F2E9E0);
}

uint64_t sub_249DCD11C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D6FB8);
    result = MEMORY[0x24BD06528](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_249DCD160()
{
  return &off_251B58DD0;
}

uint64_t sub_249DCD16C()
{
  return 0;
}

uint64_t sub_249DCD178@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_249DCD1A4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_249DCD1B0()
{
  sub_249DCD478();
  return sub_249F20024();
}

uint64_t sub_249DCD1D8()
{
  sub_249DCD478();
  return sub_249F20030();
}

uint64_t sub_249DCD200(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_249DCD224(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7028);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DCD478();
  sub_249F20018();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249DCD2E8@<X0>(__IOSurface *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  CVPixelBufferRef v6[2];

  v6[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v6[0] = 0;
  result = CVPixelBufferCreateWithIOSurface((CFAllocatorRef)*MEMORY[0x24BDBD240], a1, 0, v6);
  v4 = result;
  if ((_DWORD)result || !v6[0])
  {
    sub_249DCD4BC();
    swift_allocError();
    *(_DWORD *)v5 = v4;
    *(_BYTE *)(v5 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    *(CVPixelBufferRef *)a2 = v6[0];
    *(_BYTE *)(a2 + 8) = 2;
  }
  return result;
}

unint64_t sub_249DCD3B4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249DCD3E0();
  result = sub_249DCD424();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_249DCD3E0()
{
  unint64_t result;

  result = qword_2578D7018;
  if (!qword_2578D7018)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Image, &type metadata for Image);
    atomic_store(result, (unint64_t *)&qword_2578D7018);
  }
  return result;
}

unint64_t sub_249DCD424()
{
  unint64_t result;

  result = qword_2578D7020;
  if (!qword_2578D7020)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Image, &type metadata for Image);
    atomic_store(result, (unint64_t *)&qword_2578D7020);
  }
  return result;
}

ValueMetadata *_s19EmptyShareableProxyVMa()
{
  return &_s19EmptyShareableProxyVN;
}

unint64_t sub_249DCD478()
{
  unint64_t result;

  result = qword_2578D7030;
  if (!qword_2578D7030)
  {
    result = MEMORY[0x24BD06528](&unk_249F22670, &_s19EmptyShareableProxyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7030);
  }
  return result;
}

unint64_t sub_249DCD4BC()
{
  unint64_t result;

  result = qword_2578D7038;
  if (!qword_2578D7038)
  {
    result = MEMORY[0x24BD06528](&unk_249F2EC20, &type metadata for XPCReferenceShareableDecodingError);
    atomic_store(result, (unint64_t *)&qword_2578D7038);
  }
  return result;
}

ValueMetadata *_s19EmptyShareableProxyV10CodingKeysOMa()
{
  return &_s19EmptyShareableProxyV10CodingKeysON;
}

unint64_t sub_249DCD514()
{
  unint64_t result;

  result = qword_2578D7040;
  if (!qword_2578D7040)
  {
    result = MEMORY[0x24BD06528](&unk_249F22620, &_s19EmptyShareableProxyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7040);
  }
  return result;
}

unint64_t sub_249DCD55C()
{
  unint64_t result;

  result = qword_2578D7048;
  if (!qword_2578D7048)
  {
    result = MEMORY[0x24BD06528](&unk_249F22648, &_s19EmptyShareableProxyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7048);
  }
  return result;
}

uint64_t sub_249DCD5A0()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249DCD61C()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

void sub_249DCD6BC(uint64_t a1, char a2)
{
  sub_249F1FF64();
  __asm { BR              X10 }
}

uint64_t sub_249DCD70C()
{
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249DCD7D4()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249DCD870()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

VisualGeneration::ForensicsReportType_optional __swiftcall ForensicsReportType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VisualGeneration::ForensicsReportType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_249F1FC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t ForensicsReportType.rawValue.getter()
{
  _BYTE *v0;
  int v1;
  unint64_t v2;

  v1 = *v0;
  if (v1 == 1)
    v2 = 0xD000000000000011;
  else
    v2 = 0xD000000000000010;
  if (*v0)
    return v2;
  else
    return 0xD000000000000010;
}

uint64_t sub_249DCD998(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249E391F8(*a1, *a2);
}

uint64_t sub_249DCD9A4()
{
  return sub_249DCD61C();
}

uint64_t sub_249DCD9AC()
{
  return sub_249E48F5C();
}

uint64_t sub_249DCD9B4()
{
  return sub_249DCD7D4();
}

VisualGeneration::ForensicsReportType_optional sub_249DCD9BC(Swift::String *a1)
{
  return ForensicsReportType.init(rawValue:)(*a1);
}

unint64_t sub_249DCD9C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = ForensicsReportType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249DCD9EC()
{
  sub_249DD3BE4();
  return sub_249F1F514();
}

uint64_t sub_249DCDA48()
{
  sub_249DD3BE4();
  return sub_249F1F4FC();
}

void ForensicsReport.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t JSONValue.init(_:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t DynamicType;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[2];
  uint64_t v34;
  _QWORD v35[4];
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v3 = v2;
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7050);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_249D9E174(v33, (uint64_t)v36);
    v6 = v37;
    v7 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v33, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v8 = *(_QWORD *)&v33[0];
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    *a2 = v8;
    return result;
  }
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_249DCC2FC((uint64_t)v33, &qword_2578D7058);
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v36);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v10 = v33[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = v10;
    *a2 = result;
    return result;
  }
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v36);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = *(_QWORD *)&v33[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v11;
    v12 = result | 0x2000000000000000;
LABEL_32:
    *a2 = v12;
    return result;
  }
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v36);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v13 = *(_QWORD *)&v33[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v13;
    v12 = result | 0x4000000000000000;
    goto LABEL_32;
  }
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v36);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v14 = v33[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    result = swift_allocObject();
    *(_BYTE *)(result + 16) = v14;
    v12 = result | 0x6000000000000000;
    goto LABEL_32;
  }
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7060);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v15 = *(_QWORD *)(*(_QWORD *)&v33[0] + 16);
    if (v15)
    {
      v16 = *(_QWORD *)&v33[0] + 32;
      swift_bridgeObjectRetain();
      v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        sub_249DCA7E4(v16, (uint64_t)v36);
        sub_249DCA7E4((uint64_t)v36, (uint64_t)v33);
        JSONValue.init(_:)(v35, v33);
        if (v3)
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
          v3 = 0;
        }
        else
        {
          v18 = v35[0];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_249DB2A64(0, v17[2] + 1, 1, v17);
          v19 = v17[2];
          v20 = v17[3];
          v21 = v19 + 1;
          if (v19 >= v20 >> 1)
          {
            v39 = v19 + 1;
            v22 = v17;
            v23 = v19;
            v24 = sub_249DB2A64((_QWORD *)(v20 > 1), v19 + 1, 1, v22);
            v19 = v23;
            v21 = v39;
            v17 = v24;
          }
          v17[2] = v21;
          v17[v19 + 4] = v18;
        }
        v16 += 32;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v29 = swift_allocObject();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + 16) = v17;
    v12 = v29 | 0x8000000000000000;
    goto LABEL_32;
  }
  sub_249DCA7E4((uint64_t)a1, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7068);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    DynamicType = swift_getDynamicType();
    sub_249DCDFD8();
    swift_allocError();
    *(_QWORD *)v28 = DynamicType;
    *(_BYTE *)(v28 + 8) = 0;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v25 = sub_249DCF404(*(uint64_t *)&v33[0]);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v25 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C68);
    v26 = sub_249F1FC1C();
  }
  else
  {
    v26 = MEMORY[0x24BEE4B00];
  }
  v36[0] = v26;
  v30 = (_QWORD *)swift_bridgeObjectRetain();
  sub_249DD248C(v30, 1, v36);
  if (!v2)
  {
    v31 = swift_allocObject();
    swift_bridgeObjectRelease();
    v32 = v36[0];
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(_QWORD *)(v31 + 16) = v32;
    v12 = v31 | 0xA000000000000000;
    goto LABEL_32;
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_249DCDFD8()
{
  unint64_t result;

  result = qword_2578D7070;
  if (!qword_2578D7070)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for JSONValueError, &type metadata for JSONValueError);
    atomic_store(result, (unint64_t *)&qword_2578D7070);
  }
  return result;
}

uint64_t ForensicsReport.append(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v10[4];
  uint64_t v11;

  sub_249DCA7E4(a1, (uint64_t)v10);
  result = JSONValue.init(_:)(v10, &v11);
  if (!v4)
  {
    v8 = v11;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10[0] = *(_QWORD *)(v3 + 8);
    *(_QWORD *)(v3 + 8) = 0x8000000000000000;
    sub_249DD1B3C(v8, a2, a3, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v3 + 8) = v10[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double ForensicsReport.value(forKey:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  char v7;
  double result;

  if (*(_QWORD *)(*(_QWORD *)(v3 + 8) + 16))
  {
    swift_bridgeObjectRetain();
    sub_249DB7D8C(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      JSONValue.value.getter();
      swift_release();
      return result;
    }
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

void JSONValue.value.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_249DCE1C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v1[3] = MEMORY[0x24BEE0D00];
  *v1 = v3;
  v1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_249DCE1F4(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  v1[3] = MEMORY[0x24BEE1768];
  *v1 = v2;
}

uint64_t ForensicsReport.value(forKeyPath:)@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _OWORD *v30;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = sub_249D9E5BC();
  v5 = (_QWORD *)MEMORY[0x24BD055EC](46, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v4);
  v6 = v5;
  v7 = v5[2];
  if (v7)
  {
    v8 = v5[4];
    v9 = v5[5];
    v10 = v5[6];
    v11 = v5[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x24BD04FE0](v8, v9, v10, v11);
    v14 = v13;
    swift_bridgeObjectRelease();
    v30 = a1;
    if (*(_QWORD *)(v3 + 16) && (v15 = sub_249DB7D8C(v12, v14), (v16 & 1) != 0))
    {
      v17 = v6 + 11;
      v18 = 0xF000000000000007;
      v19 = 1;
      while (1)
      {
        v20 = v18;
        v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v15);
        swift_retain_n();
        swift_bridgeObjectRelease();
        sub_249DD2AA4(v20);
        if (v18 >> 61 != 5)
          break;
        swift_bridgeObjectRelease();
        v3 = *(_QWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_bridgeObjectRetain();
        result = swift_release();
        if (v7 == v19)
          goto LABEL_15;
        if (v19 >= v6[2])
          goto LABEL_20;
        v22 = *(v17 - 1);
        v23 = *v17;
        v25 = *(v17 - 3);
        v24 = *(v17 - 2);
        swift_bridgeObjectRetain();
        v26 = MEMORY[0x24BD04FE0](v25, v24, v22, v23);
        v28 = v27;
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 16))
        {
          ++v19;
          v15 = sub_249DB7D8C(v26, v28);
          v17 += 4;
          if ((v29 & 1) != 0)
            continue;
        }
        goto LABEL_12;
      }
      result = swift_release();
      if (v7 == v19)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        JSONValue.value.getter();
        return swift_release();
      }
      if (v19 < v6[2])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v30 = 0u;
        v30[1] = 0u;
        return swift_release();
      }
LABEL_20:
      __break(1u);
    }
    else
    {
      v18 = 0xF000000000000007;
LABEL_12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v30 = 0u;
      v30[1] = 0u;
      return sub_249DD2AA4(v18);
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t ForensicsReport.value<A>(_:forKeyPath:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v4;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];

  ForensicsReport.value(forKeyPath:)(&v6);
  if (v7)
  {
    sub_249DCA678(&v6, v8);
    sub_249DCA678(v8, &v6);
    v4 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
  }
  else
  {
    sub_249DCC2FC((uint64_t)&v6, (uint64_t *)&unk_2578DD090);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1, a1);
  }
}

uint64_t sub_249DCE664(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  _QWORD v23[2];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v23[1] = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_retain();
    swift_bridgeObjectRetain();
    v18 = sub_249DB7D8C(v16, v17);
    v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    v23[0] = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v18);
    _s16VisualGeneration9JSONValueO2eeoiySbAC_ACtFZ_0((uint64_t)v23);
    v22 = v21;
    result = swift_release();
    if ((v22 & 1) == 0)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_249DCE834()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E65746E6F63;
  else
    return 1701869940;
}

uint64_t sub_249DCE868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DD3170(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DCE88C()
{
  sub_249DD2D34();
  return sub_249F20024();
}

uint64_t sub_249DCE8B4()
{
  sub_249DD2D34();
  return sub_249F20030();
}

uint64_t ForensicsReport.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7078);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DD2D34();
  sub_249F20018();
  v13 = v8;
  v12 = 0;
  sub_249DD2D78();
  sub_249F1FDCC();
  if (!v2)
  {
    v10[1] = v10[0];
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7090);
    sub_249DD2E44(&qword_2578D7098, (uint64_t (*)(void))sub_249DD2DBC, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ForensicsReport.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D70A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DD2D34();
  sub_249F1FFF4();
  if (!v2)
  {
    v14 = 0;
    sub_249DD2E00();
    sub_249F1FD00();
    v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7090);
    v13 = 1;
    sub_249DD2E44(&qword_2578D70B8, (uint64_t (*)(void))sub_249DD2EB8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249DCEC04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ForensicsReport.init(from:)(a1, a2);
}

uint64_t sub_249DCEC18(_QWORD *a1)
{
  return ForensicsReport.encode(to:)(a1);
}

Swift::Bool __swiftcall isForensicsReportingSupported()()
{
  return 1;
}

uint64_t ForensicRecord.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D70C8);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t ForensicRecord.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D70C8);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

void sub_249DCECCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  v4 = *(_BYTE *)a1;
  os_unfair_lock_lock(v3);
  sub_249DCED24(v1, v4, v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_249DCED24(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v6 = (_QWORD *)(a1 + 24);
  swift_beginAccess();
  v7 = *(_QWORD **)(a1 + 24);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_249DB2820(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_249DB2820((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  *((_BYTE *)v11 + 32) = a2;
  v11[5] = a3;
  return swift_endAccess();
}

uint64_t sub_249DCEE14()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_249DD2EFC(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

void (*sub_249DCEE5C())(uint64_t a1)
{
  swift_retain();
  return sub_249DD2F40;
}

void sub_249DCEE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  char v5;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  v5 = *(_BYTE *)a1;
  os_unfair_lock_lock(v4);
  sub_249DCED24(a2, v5, v3);
  os_unfair_lock_unlock(v4);
}

uint64_t ForensicRecord.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ForensicRecord.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249DCEF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = swift_bridgeObjectRetain();
    sub_249E5DEE8(v2);
  }
  else
  {
    *(_QWORD *)(v1 + 16) = a1;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249DCEF94()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249DCEFB8(uint64_t a1)
{
  return sub_249DCEF38(a1);
}

uint64_t sub_249DCEFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  swift_beginAccess();
  sub_249DCC274(v2 + 24, (uint64_t)v11, &qword_2578D73D8);
  if (!v12)
    return sub_249DCC2FC((uint64_t)v11, &qword_2578D73D8);
  sub_249D9E1E4((uint64_t)v11, (uint64_t)v8);
  sub_249DCC2FC((uint64_t)v11, &qword_2578D73D8);
  v5 = v9;
  v6 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_249DCF0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  swift_beginAccess();
  sub_249DCC274(v3 + 24, (uint64_t)v13, &qword_2578D73D8);
  if (!v14)
    return sub_249DCC2FC((uint64_t)v13, &qword_2578D73D8);
  sub_249D9E1E4((uint64_t)v13, (uint64_t)v10);
  sub_249DCC2FC((uint64_t)v13, &qword_2578D73D8);
  v7 = v11;
  v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_249DCF180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  swift_beginAccess();
  sub_249DCC274(v3 + 24, (uint64_t)v13, &qword_2578D73D8);
  if (!v14)
    return sub_249DCC2FC((uint64_t)v13, &qword_2578D73D8);
  sub_249D9E1E4((uint64_t)v13, (uint64_t)v10);
  sub_249DCC2FC((uint64_t)v13, &qword_2578D73D8);
  v7 = v11;
  v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_249DCF258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  swift_beginAccess();
  sub_249DCC274(v3 + 24, (uint64_t)v13, &qword_2578D73D8);
  if (!v14)
    return sub_249DCC2FC((uint64_t)v13, &qword_2578D73D8);
  sub_249D9E1E4((uint64_t)v13, (uint64_t)v10);
  sub_249DCC2FC((uint64_t)v13, &qword_2578D73D8);
  v7 = v11;
  v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_249DCF330()
{
  uint64_t v0;

  return sub_249DCC2FC(v0 + 24, &qword_2578D73D8);
}

uint64_t sub_249DCF350()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + 24, &qword_2578D73D8);
  return swift_deallocClassInstance();
}

uint64_t sub_249DCF384(uint64_t a1, uint64_t a2)
{
  return sub_249DCEFD8(a1, a2);
}

uint64_t sub_249DCF3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249DCF0A8(a1, a2, a3);
}

uint64_t sub_249DCF3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249DCF180(a1, a2, a3);
}

uint64_t sub_249DCF3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249DCF258(a1, a2, a3);
}

uint64_t sub_249DCF404(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t DynamicType;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v30;
  _BYTE v31[32];
  __int128 v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1;
  v27 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = *v13;
    v15 = v13[1];
    sub_249DCA7E4(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)&v35);
    *(_QWORD *)&v34 = v14;
    *((_QWORD *)&v34 + 1) = v15;
    v32 = v34;
    v33[0] = v35;
    v33[1] = v36;
    v16 = v15;
    v17 = v14;
    __swift_project_boxed_opaque_existential_1(v33, *((uint64_t *)&v36 + 1));
    DynamicType = swift_getDynamicType();
    v19 = swift_conformsToProtocol2();
    if (v19)
      v20 = v19;
    else
      v20 = 0;
    if (!v19)
      DynamicType = 0;
    if (DynamicType)
    {
      v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8);
      swift_bridgeObjectRetain();
      v17 = v21(v17, v15, DynamicType, v20);
      v16 = v22;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249DCA7E4((uint64_t)v33, (uint64_t)v31);
    JSONValue.init(_:)(&v37, v31);
    if (v2)
    {
      swift_bridgeObjectRelease();

      result = sub_249DCC2FC((uint64_t)&v32, &qword_2578D73F8);
      v2 = 0;
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v23 = v37;
      sub_249DCC2FC((uint64_t)&v32, &qword_2578D73F8);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_249DB2940(0, v30[2] + 1, 1, v30);
        v30 = (_QWORD *)result;
      }
      v25 = v30[2];
      v24 = v30[3];
      if (v25 >= v24 >> 1)
      {
        result = (uint64_t)sub_249DB2940((_QWORD *)(v24 > 1), v25 + 1, 1, v30);
        v30 = (_QWORD *)result;
      }
      v30[2] = v25 + 1;
      v26 = &v30[3 * v25];
      v26[4] = v17;
      v26[5] = v16;
      v26[6] = v23;
      if (v5)
        goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v7 >= v28)
      goto LABEL_39;
    v11 = *(_QWORD *)(v27 + 8 * v7);
    if (!v11)
      break;
LABEL_17:
    v5 = (v11 - 1) & v11;
  }
  v12 = v7 + 1;
  if (v7 + 1 >= v28)
    goto LABEL_39;
  v11 = *(_QWORD *)(v27 + 8 * v12);
  if (v11)
    goto LABEL_16;
  v12 = v7 + 2;
  if (v7 + 2 >= v28)
    goto LABEL_39;
  v11 = *(_QWORD *)(v27 + 8 * v12);
  if (v11)
    goto LABEL_16;
  v12 = v7 + 3;
  if (v7 + 3 >= v28)
    goto LABEL_39;
  v11 = *(_QWORD *)(v27 + 8 * v12);
  if (v11)
    goto LABEL_16;
  v12 = v7 + 4;
  if (v7 + 4 >= v28)
  {
LABEL_39:
    swift_release();
    return (uint64_t)v30;
  }
  v11 = *(_QWORD *)(v27 + 8 * v12);
  if (v11)
  {
LABEL_16:
    v7 = v12;
    goto LABEL_17;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v28)
      goto LABEL_39;
    v11 = *(_QWORD *)(v27 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_17;
  }
LABEL_41:
  __break(1u);
  return result;
}

void JSONValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249F20000();
  __asm { BR              X10 }
}

uint64_t sub_249DCF79C()
{
  uint64_t v1[13];

  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_249F1FE8C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
}

uint64_t JSONValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249F1FFDC();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v5 = sub_249F1FE50();
    v7 = v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)(v8 + 24) = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *a2 = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249DCFCD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return JSONValue.init(from:)(a1, a2);
}

void sub_249DCFCEC(_QWORD *a1)
{
  JSONValue.encode(to:)(a1);
}

uint64_t sub_249DCFD04(uint64_t a1)
{
  uint64_t v1;

  v1 = nullsub_1(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static JSONKeyValueConvertible.jsonKey(from:)(uint64_t a1)
{
  uint64_t v1;

  v1 = nullsub_1(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249DCFD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_249F1F424();
  if (v0)
  {
    v1 = v0;
    v18 = MEMORY[0x24BEE4AF8];
    result = sub_249DB6828(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      v3 = 0;
      if ((0x8000000249F348E0 & 0x2000000000000000) != 0)
        v4 = (0x8000000249F348E0 & 0xF00000000000000) >> 54;
      else
        v4 = 104;
      v17 = v1;
      while (v3 != v1)
      {
        v5 = sub_249F1F4B4();
        v7 = v6;
        if ((((unint64_t)"Swift/Dictionary.swift" >> 61) & ((0x8000000249F348E0 & 0xF00000000000000) >> 54 == 0)) == 0)
        {
          v8 = 15;
          while (sub_249F1F4B4() != v5 || v9 != v7)
          {
            v11 = sub_249F1FE2C();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              goto LABEL_18;
            v8 = sub_249F1F430();
            if (v4 == v8 >> 14)
              goto LABEL_23;
          }
          swift_bridgeObjectRelease();
LABEL_18:
          if (v8 >= 0x4000)
          {
            sub_249F1F43C();
            result = sub_249F1F4B4();
          }
          else
          {
            result = sub_249DCFFD4(0xD00000000000001ALL, 0x8000000249F348E0);
            if (!v12)
              goto LABEL_29;
          }
          v5 = result;
          v13 = v12;
          swift_bridgeObjectRelease();
          v7 = v13;
        }
LABEL_23:
        v15 = *(_QWORD *)(v18 + 16);
        v14 = *(_QWORD *)(v18 + 24);
        if (v15 >= v14 >> 1)
          sub_249DB6828(v14 > 1, v15 + 1, 1);
        ++v3;
        *(_QWORD *)(v18 + 16) = v15 + 1;
        v16 = v18 + 16 * v15;
        *(_QWORD *)(v16 + 32) = v5;
        *(_QWORD *)(v16 + 40) = v7;
        result = sub_249F1F430();
        v1 = v17;
        if (v3 == v17)
          goto LABEL_26;
      }
      __break(1u);
    }
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
LABEL_26:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D70E8);
    sub_249DD3250();
    return sub_249F1F4C0();
  }
  return result;
}

uint64_t sub_249DCFFD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_249F1F43C();
  return sub_249F1F4B4();
}

uint64_t sub_249DD004C@<X0>(unint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  v2 = v1;
  swift_getObjectType();
  v4 = objc_msgSend(v1, sel_label);
  if (v4)
  {
    v5 = v4;
    v6 = sub_249F1F328();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = objc_msgSend(v2, sel_label);
  if (v9)
  {
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_249F1F328();

    v6 = sub_249DCFD6C();
    v8 = v11;
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F22C20;
  *(_QWORD *)(inited + 32) = 1701208435;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v13 = objc_msgSend(v2, sel_safe);
  v14 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = v13;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = 0x6C6562616CLL;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  if (v8)
  {
    v15 = MEMORY[0x24BEE0D00];
  }
  else
  {
    v6 = 0;
    v15 = 0;
    *(_QWORD *)(inited + 112) = 0;
  }
  *(_QWORD *)(inited + 96) = v6;
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 120) = v15;
  *(_QWORD *)(inited + 128) = 0x65726F6373;
  *(_QWORD *)(inited + 136) = 0xE500000000000000;
  v16 = objc_msgSend(v2, sel_score);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_doubleValue);
    v19 = v18;

    v20 = MEMORY[0x24BEE13C8];
  }
  else
  {
    v20 = 0;
    *(_QWORD *)(inited + 152) = 0;
    *(_QWORD *)(inited + 160) = 0;
    v19 = 0;
  }
  *(_QWORD *)(inited + 144) = v19;
  *(_QWORD *)(inited + 168) = v20;
  v21 = sub_249DAE78C(inited);
  v22 = swift_allocObject();
  v23 = sub_249DD06EC(v21);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 16) = v23;
  *a1 = v22 | 0xA000000000000000;
  return result;
}

uint64_t sub_249DD0280(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[9];
  uint64_t v45;
  uint64_t v46;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 64);
  v42 = a1 + 64;
  v40 = MEMORY[0x24BEE4B00];
  v46 = MEMORY[0x24BEE4B00];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v41 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 40 * v10);
    v16 = *v14;
    v15 = v14[1];
    v18 = v14[2];
    v17 = (void *)v14[3];
    v19 = v14[4];
    if (v17)
    {
      v43 = v6;
      v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
      v22 = *v20;
      v21 = v20[1];
      v44[3] = &type metadata for ResolvedImage;
      v23 = swift_allocObject();
      v44[0] = v23;
      *(_QWORD *)(v23 + 16) = v16;
      *(_QWORD *)(v23 + 24) = v15;
      *(_DWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 40) = v17;
      *(_QWORD *)(v23 + 48) = v19;
      sub_249DCA64C(v16, v15, v18, v17);
      sub_249DCA64C(v16, v15, v18, v17);
      sub_249DCA64C(v16, v15, v18, v17);
      swift_bridgeObjectRetain();
      JSONValue.init(_:)(v44, &v45);
      if (v1)
      {

        sub_249DC0768(v16, v15, v18, v17);
        swift_bridgeObjectRelease();
        result = sub_249DC0768(v16, v15, v18, v17);
        v1 = 0;
        v6 = v43;
      }
      else
      {
        v39 = v22;
        v38 = v2;
        sub_249DC0768(v16, v15, v18, v17);
        v24 = v45;
        v25 = v40;
        v26 = *(_QWORD *)(v40 + 16);
        if (*(_QWORD *)(v40 + 24) <= v26)
        {
          sub_249DBA644(v26 + 1, 1);
          v25 = v46;
        }
        v40 = v25;
        sub_249F1FF64();
        sub_249F1F40C();
        result = sub_249F1FFA0();
        v27 = v40 + 64;
        v28 = -1 << *(_BYTE *)(v40 + 32);
        v29 = result & ~v28;
        v30 = v29 >> 6;
        v6 = v43;
        v31 = v24;
        if (((-1 << v29) & ~*(_QWORD *)(v40 + 64 + 8 * (v29 >> 6))) == 0)
        {
          v33 = 0;
          v34 = (unint64_t)(63 - v28) >> 6;
          v2 = v38;
          while (++v30 != v34 || (v33 & 1) == 0)
          {
            v35 = v30 == v34;
            if (v30 == v34)
              v30 = 0;
            v33 |= v35;
            v36 = *(_QWORD *)(v27 + 8 * v30);
            if (v36 != -1)
            {
              v32 = __clz(__rbit64(~v36)) + (v30 << 6);
              goto LABEL_40;
            }
          }
          goto LABEL_43;
        }
        v32 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v40 + 64 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
        v2 = v38;
LABEL_40:
        *(_QWORD *)(v27 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
        v37 = (_QWORD *)(*(_QWORD *)(v40 + 48) + 16 * v32);
        *v37 = v39;
        v37[1] = v21;
        *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v32) = v31;
        ++*(_QWORD *)(v40 + 16);
        result = sub_249DC0768(v16, v15, v18, v17);
        v1 = 0;
      }
    }
    else
    {
      result = sub_249DC0768(*v14, v14[1], v14[2], 0);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v11 >= v41)
    goto LABEL_41;
  v12 = *(_QWORD *)(v42 + 8 * v11);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v8 = v11;
    goto LABEL_21;
  }
  v13 = v8 + 2;
  if (v8 + 2 >= v41)
    goto LABEL_41;
  v12 = *(_QWORD *)(v42 + 8 * v13);
  if (v12)
    goto LABEL_19;
  v13 = v8 + 3;
  if (v8 + 3 >= v41)
    goto LABEL_41;
  v12 = *(_QWORD *)(v42 + 8 * v13);
  if (v12)
    goto LABEL_19;
  v13 = v8 + 4;
  if (v8 + 4 >= v41)
    goto LABEL_41;
  v12 = *(_QWORD *)(v42 + 8 * v13);
  if (v12)
    goto LABEL_19;
  v13 = v8 + 5;
  if (v8 + 5 >= v41)
  {
LABEL_41:
    sub_249D9E18C();
    return v40;
  }
  v12 = *(_QWORD *)(v42 + 8 * v13);
  if (v12)
  {
LABEL_19:
    v11 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v11 >= v41)
      goto LABEL_41;
    v12 = *(_QWORD *)(v42 + 8 * v11);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_249DD06EC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _OWORD v33[4];
  __int128 v34;
  _QWORD v35[4];
  uint64_t v36;
  __int128 v37;
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];
  uint64_t v41;
  _OWORD *v42;

  v2 = v1;
  v4 = MEMORY[0x24BEE4B00];
  v41 = MEMORY[0x24BEE4B00];
  v5 = a1 + 64;
  v6 = -1 << *(_BYTE *)(a1 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(63 - v6) >> 6;
  v42 = v38;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v31 = v5;
  if (!v8)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v12 = v11 | (v10 << 6);
  while (1)
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = *v16;
    v17 = v16[1];
    sub_249DCC274(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40, (uint64_t *)&unk_2578DD090);
    *(_QWORD *)&v39 = v18;
    *((_QWORD *)&v39 + 1) = v17;
    v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_249DCC274((uint64_t)v42, (uint64_t)&v34, (uint64_t *)&unk_2578DD090);
    if (!v35[1])
    {
      swift_bridgeObjectRetain();
      sub_249DCC2FC((uint64_t)&v34, (uint64_t *)&unk_2578DD090);
LABEL_23:
      result = sub_249DCC2FC((uint64_t)&v37, &qword_2578D73F0);
      if (v8)
        goto LABEL_5;
      goto LABEL_6;
    }
    sub_249DCA678(&v34, v33);
    sub_249DCA7E4((uint64_t)v33, (uint64_t)&v34);
    swift_bridgeObjectRetain();
    JSONValue.init(_:)(&v34, &v36);
    if (v2)
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      v2 = 0;
      goto LABEL_23;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    v19 = v36;
    v20 = v37;
    v34 = v37;
    sub_249DD3C28((uint64_t)v42, (uint64_t)v35);
    v21 = *(_QWORD *)(v4 + 16);
    if (*(_QWORD *)(v4 + 24) <= v21)
    {
      sub_249DBA644(v21 + 1, 1);
      v4 = v41;
    }
    sub_249F1FF64();
    sub_249F1F40C();
    result = sub_249F1FFA0();
    v22 = v4 + 64;
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v4 + 64 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v4 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v22 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v26) = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v26) = v19;
    ++*(_QWORD *)(v4 + 16);
    result = sub_249DCC2FC((uint64_t)v35, (uint64_t *)&unk_2578DD090);
    v5 = v31;
    if (v8)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v32)
      goto LABEL_43;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    if (!v14)
      break;
LABEL_18:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v13 << 6);
    v10 = v13;
  }
  v15 = v10 + 2;
  if (v10 + 2 >= v32)
    goto LABEL_43;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_17;
  v15 = v10 + 3;
  if (v10 + 3 >= v32)
    goto LABEL_43;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_17;
  v15 = v10 + 4;
  if (v10 + 4 >= v32)
    goto LABEL_43;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_17;
  v15 = v10 + 5;
  if (v10 + 5 >= v32)
  {
LABEL_43:
    sub_249D9E18C();
    return v4;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v32)
      goto LABEL_43;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t protocol witness for JSONKeyValueConvertible.jsonValue.getter in conformance SCMLTextSanitizationSignal@<X0>(unint64_t *a1@<X8>)
{
  return sub_249DD004C(a1);
}

uint64_t sub_249DD0AF8@<X0>(unint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t inited;
  unsigned __int8 v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21910;
  *(_QWORD *)(inited + 32) = 1701208435;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v5 = objc_msgSend(v2, sel_safe);
  v6 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = v5;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0x65726F6373;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  v7 = objc_msgSend(v2, sel_score);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_doubleValue);
    v10 = v9;

    v11 = MEMORY[0x24BEE13C8];
  }
  else
  {
    v11 = 0;
    *(_QWORD *)(inited + 104) = 0;
    *(_QWORD *)(inited + 112) = 0;
    v10 = 0;
  }
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 120) = v11;
  v12 = sub_249DAE78C(inited);
  v13 = swift_allocObject();
  v14 = sub_249DD06EC(v12);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 16) = v14;
  *a1 = v13 | 0xA000000000000000;
  return result;
}

uint64_t _sSo26SCMLTextSanitizationSignalC16VisualGeneration23JSONKeyValueConvertibleA2cDP7jsonKey4fromS2S_tFZTW_0(uint64_t a1, uint64_t a2)
{
  sub_249DD2FD8(a1, a2, 0xD00000000000001ALL, 0x8000000249F348E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D70E8);
  sub_249DD3250();
  return sub_249F1F4C0();
}

uint64_t protocol witness for JSONKeyValueConvertible.jsonValue.getter in conformance SCMLImageSanitizationSignal@<X0>(unint64_t *a1@<X8>)
{
  return sub_249DD0AF8(a1);
}

void Concept.jsonValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for Concept(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_249DD329C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_249DD0D90 + 4 * byte_249F226D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_249DD0D90()
{
  unint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  unint64_t result;

  v2 = *v1;
  v3 = v1[1];
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  *(_QWORD *)(inited + 32) = 1853189998;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(inited + 48) = v6;
  result = sub_249DAE674(inited);
  *(_QWORD *)(v4 + 16) = result;
  *v0 = v4 | 0xA000000000000000;
  return result;
}

uint64_t sub_249DD0FF4@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  __int128 v28;
  int *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  __int128 v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  unint64_t *v83;
  uint64_t v84;
  uint64_t v85;

  v83 = a1;
  v70 = sub_249F1E584();
  MEMORY[0x24BDAC7A8](v70);
  v69 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73B8);
  MEMORY[0x24BDAC7A8](v3);
  v81 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AugmentedPrompt();
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v71 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F22C30;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x8000000249F33B30;
  v8 = (int *)type metadata accessor for GenerationRecipe(0);
  v9 = (uint64_t *)(v1 + v8[14]);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = (void *)v9[3];
  v14 = v9[4];
  *(_QWORD *)(inited + 48) = *v9;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = v14;
  *(_QWORD *)(inited + 88) = 0xD000000000000012;
  *(_QWORD *)(inited + 96) = 0x8000000249F33B50;
  v15 = (uint64_t *)(v1 + v8[15]);
  v16 = *v15;
  v18 = v15[2];
  v19 = (void *)v15[3];
  v20 = v15[4];
  v77 = v15[1];
  v17 = v77;
  v78 = v16;
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  v75 = v19;
  v76 = v18;
  *(_QWORD *)(inited + 120) = v18;
  *(_QWORD *)(inited + 128) = v19;
  v74 = v20;
  *(_QWORD *)(inited + 136) = v20;
  *(_QWORD *)(inited + 144) = 0xD000000000000017;
  *(_QWORD *)(inited + 152) = 0x8000000249F34A00;
  v21 = (__int128 *)(v1 + v8[20]);
  v22 = (void *)*((_QWORD *)v21 + 3);
  if (v22)
  {
    v23 = *((_QWORD *)v21 + 4);
    v82 = (int *)*((unsigned int *)v21 + 4);
    v73 = *v21;
    v84 = v10;
    v24 = v11;
    v25 = v12;
    v26 = v13;
    v27 = v22;
    swift_retain();
    v28 = v73;
    v29 = v82;
    v13 = v26;
    v12 = v25;
    v11 = v24;
    v10 = v84;
  }
  else
  {
    v29 = 0;
    v23 = 0;
    v28 = 0uLL;
  }
  *(_OWORD *)(inited + 160) = v28;
  *(_QWORD *)(inited + 176) = v29;
  *(_QWORD *)(inited + 184) = v22;
  *(_QWORD *)(inited + 192) = v23;
  strcpy((char *)(inited + 200), "doiBaseImage");
  *(_BYTE *)(inited + 213) = 0;
  *(_WORD *)(inited + 214) = -5120;
  v82 = v8;
  v30 = (uint64_t *)(v1 + v8[18]);
  v31 = *v30;
  v32 = v30[1];
  v33 = v30[2];
  v72 = (void *)v30[3];
  v34 = v72;
  *(_QWORD *)&v73 = v33;
  v84 = v1;
  v35 = v30[4];
  *(_QWORD *)(inited + 216) = v31;
  *(_QWORD *)(inited + 224) = v32;
  v36 = v31;
  *(_QWORD *)(inited + 232) = v33;
  *(_QWORD *)(inited + 240) = v34;
  *(_QWORD *)(inited + 248) = v35;
  strcpy((char *)(inited + 256), "doiSketchMask");
  *(_WORD *)(inited + 270) = -4864;
  v38 = v30[5];
  v37 = v30[6];
  v40 = v30[7];
  v39 = (void *)v30[8];
  v41 = v30[9];
  *(_QWORD *)(inited + 272) = v38;
  *(_QWORD *)(inited + 280) = v37;
  *(_QWORD *)(inited + 288) = v40;
  *(_QWORD *)(inited + 296) = v39;
  *(_QWORD *)(inited + 304) = v41;
  sub_249DCA64C(v10, v11, v12, v13);
  sub_249DCA64C(v78, v77, v76, v75);
  v42 = v84;
  sub_249DCA64C(v36, v32, v73, v72);
  sub_249DCA64C(v38, v37, v40, v39);
  v43 = sub_249DAE51C(inited);
  v44 = sub_249DD0280(v43);
  swift_bridgeObjectRelease();
  v45 = v81;
  sub_249E030D8(v81);
  v47 = v79;
  v46 = v80;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v45, 0, 1, v80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
    sub_249DCC2FC(v45, &qword_2578D73B8);
  }
  else
  {
    v61 = v71;
    sub_249D9E308(v45, v71, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    v62 = swift_allocObject();
    sub_249F1E56C();
    sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
    *(_QWORD *)(v62 + 16) = sub_249F1F4C0();
    *(_QWORD *)(v62 + 24) = v63;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85 = v44;
    sub_249DD1B3C(v62, 0x656C626D65737361, 0xEF74706D6F725064, isUniquelyReferenced_nonNull_native);
    v65 = v85;
    swift_bridgeObjectRelease();
    v66 = swift_allocObject();
    sub_249F1E650();
    sub_249D9BBEC((unint64_t *)&qword_2578D73D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
    *(_QWORD *)(v66 + 16) = sub_249F1E74C();
    *(_QWORD *)(v66 + 24) = v67;
    v68 = swift_isUniquelyReferenced_nonNull_native();
    v85 = v65;
    sub_249DD1B3C(v66, 0xD000000000000018, 0x8000000249F34A20, v68);
    v44 = v85;
    swift_bridgeObjectRelease();
    sub_249DC05A8(v61, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  }
  v48 = *(_QWORD *)(v42 + 64);
  v49 = *(_QWORD *)(v48 + 16);
  v50 = MEMORY[0x24BEE4AF8];
  if (v49)
  {
    v81 = v44;
    v85 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB680C(0, v49, 0);
    __asm { BR              X9 }
  }
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v50;
  v52 = v51 | 0x8000000000000000;
  v53 = swift_isUniquelyReferenced_nonNull_native();
  v85 = v44;
  sub_249DD1B3C(v52, 0x7974536567616D69, 0xEB0000000073656CLL, v53);
  v54 = v85;
  swift_bridgeObjectRelease();
  v55 = v42 + v82[9];
  if ((*(_BYTE *)(v55 + 4) & 1) == 0)
  {
    v56 = *(float *)v55;
    v57 = swift_allocObject();
    *(double *)(v57 + 16) = v56;
    v58 = v57 | 0x4000000000000000;
    v59 = swift_isUniquelyReferenced_nonNull_native();
    v85 = v54;
    sub_249DD1B3C(v58, 0xD000000000000010, 0x8000000249F33C30, v59);
    v54 = v85;
    swift_bridgeObjectRelease();
  }
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v54;
  *v83 = result | 0xA000000000000000;
  return result;
}

uint64_t sub_249DD1768(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249DD179C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = sub_249EA6BF8();
  if (v3 >> 60 == 15)
  {
    result = swift_allocObject();
    v5 = result;
    *(_QWORD *)(result + 16) = 0xD000000000000017;
    v6 = 0x8000000249F34A40;
  }
  else
  {
    v7 = v2;
    v8 = v3;
    v5 = swift_allocObject();
    v9 = sub_249F1E830();
    v6 = v10;
    result = sub_249DD3B94(v7, v8);
    *(_QWORD *)(v5 + 16) = v9;
  }
  *(_QWORD *)(v5 + 24) = v6;
  *a1 = v5;
  return result;
}

_OWORD *sub_249DD1880(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_249F1FBBC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_249DB7F04(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_249DCA678(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_249DBC668();
      goto LABEL_7;
    }
    sub_249DB93AC(v17, a3 & 1);
    v23 = sub_249DB7F04(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_249DDB888(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249DD19FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_249DB7D8C(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_249DBCBF8();
      goto LABEL_7;
    }
    sub_249DB9D40(v17, a5 & 1);
    v23 = sub_249DB7D8C(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDB928(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249DD1B3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_249DB7D8C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_release();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_249DBD104();
      goto LABEL_7;
    }
    sub_249DBA644(v15, a4 & 1);
    v21 = sub_249DB7D8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDB978(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249DD1C6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_249DB7D8C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v18[7] + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_249DBD2BC();
      goto LABEL_7;
    }
    sub_249DBA954(result, a4 & 1);
    result = sub_249DB7D8C(a2, a3);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDB978(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

void sub_249DD1D8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_249DB8068(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;

        *(_QWORD *)v21 = a1;
        *(_BYTE *)(v21 + 8) = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_249DBD468();
      goto LABEL_7;
    }
    sub_249DBAC5C(v17, a5 & 1);
    v22 = sub_249DB8068(a3, a4);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDB9C0(v14, a3, a4, a1, a2, v20);
      return;
    }
  }
  sub_249F1FF10();
  __break(1u);
}

_OWORD *sub_249DD1EC8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_249DB7D8C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_249DCA678(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_249DBD618();
      goto LABEL_7;
    }
    sub_249DBAF60(v15, a4 & 1);
    v21 = sub_249DB7D8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDBA14(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_249F1FF10();
  __break(1u);
  return result;
}

_OWORD *sub_249DD1FF8(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_249DB7E78(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_249DCA678(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_249DBD7FC();
      goto LABEL_7;
    }
    sub_249DBB25C(v13, a3 & 1);
    v19 = sub_249DB7E78(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DCA688(a2, (uint64_t)v21);
      return sub_249DDBA7C(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249DD2130(int a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  char v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;

  v4 = (_QWORD **)v3;
  v7 = a2 & 1;
  v8 = (_QWORD *)*v3;
  v10 = sub_249DB7EA8(a2 & 1);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7] + 3 * v10;
        *(_WORD *)v17 = a1;
        *(_BYTE *)(v17 + 2) = BYTE2(a1);
        return result;
      }
      return sub_249DDBAF4(v10, v7, a1 & 0xFFFFFF, v16);
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_249DBC8A4();
      goto LABEL_7;
    }
    sub_249DB9730(result, a3 & 1);
    result = sub_249DB7EA8(v7);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_249DDBAF4(v10, v7, a1 & 0xFFFFFF, v16);
    }
  }
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249DD2250(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_249DB7F54(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_249DD3BA8(a1, v16[7] + 48 * v10);
      return sub_249DDBB54(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_249DBDC0C();
      goto LABEL_7;
    }
    sub_249DBB8C8(v13, a3 & 1);
    v18 = sub_249DB7F54(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_249DD3BA8(a1, v16[7] + 48 * v10);
      return sub_249DDBB54(v10, a2, a1, v16);
    }
  }
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

uint64_t sub_249DD2360(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_249DB7D8C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_249DBCDAC();
      goto LABEL_7;
    }
    sub_249DBA048(v15, a4 & 1);
    v21 = sub_249DB7D8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249DDB978(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_249F1FF10();
  __break(1u);
  return result;
}

void sub_249DD248C(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  LOBYTE(v4) = a2;
  v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_23;
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[4];
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v7)
    goto LABEL_23;
  v10 = (_QWORD *)*a3;
  v11 = sub_249DB7D8C(v9, v7);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = v12;
  if (v10[3] < v16)
  {
    sub_249DBA644(v16, v4 & 1);
    v11 = sub_249DB7D8C(v9, v7);
    if ((v17 & 1) == (v18 & 1))
      goto LABEL_8;
LABEL_6:
    v11 = sub_249F1FF10();
    __break(1u);
  }
  if ((v4 & 1) != 0)
  {
LABEL_8:
    if ((v17 & 1) != 0)
      goto LABEL_9;
    goto LABEL_12;
  }
  v21 = v11;
  sub_249DBD104();
  v11 = v21;
  if ((v17 & 1) != 0)
  {
LABEL_9:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  v22 = (_QWORD *)*a3;
  *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  v23 = (uint64_t *)(v22[6] + 16 * v11);
  *v23 = v9;
  v23[1] = v7;
  *(_QWORD *)(v22[7] + 8 * v11) = v8;
  v24 = v22[2];
  v15 = __OFADD__(v24, 1);
  v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_249F1FA84();
    sub_249F1F460();
    sub_249F1FB98();
    sub_249F1F460();
    sub_249F1FBD4();
    __break(1u);
    return;
  }
  v22[2] = v25;
  if (v6 != 1)
  {
    v4 = a1 + 9;
    v26 = 1;
    while (v26 < a1[2])
    {
      v7 = *(v4 - 1);
      v8 = *v4;
      v9 = *(v4 - 2);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v7)
        goto LABEL_23;
      v27 = (_QWORD *)*a3;
      v28 = sub_249DB7D8C(v9, v7);
      v30 = v27[2];
      v31 = (v29 & 1) == 0;
      v15 = __OFADD__(v30, v31);
      v32 = v30 + v31;
      if (v15)
        goto LABEL_25;
      v17 = v29;
      if (v27[3] < v32)
      {
        sub_249DBA644(v32, 1);
        v28 = sub_249DB7D8C(v9, v7);
        if ((v17 & 1) != (v33 & 1))
          goto LABEL_6;
      }
      if ((v17 & 1) != 0)
        goto LABEL_9;
      v34 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      v35 = (uint64_t *)(v34[6] + 16 * v28);
      *v35 = v9;
      v35[1] = v7;
      *(_QWORD *)(v34[7] + 8 * v28) = v8;
      v36 = v34[2];
      v15 = __OFADD__(v36, 1);
      v37 = v36 + 1;
      if (v15)
        goto LABEL_26;
      ++v26;
      v34[2] = v37;
      v4 += 3;
      if (v6 == v26)
        goto LABEL_23;
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_249DD2834()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249DD2858()
{
  return swift_deallocObject();
}

uint64_t sub_249DD2868()
{
  return swift_deallocObject();
}

uint64_t sub_249DD2878()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249DD289C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CE0);
  result = sub_249F1FC04();
  v3 = (_QWORD *)result;
  v4 = 0;
  v26 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v24 = v6;
  v25 = (unint64_t)(v8 + 63) >> 6;
  v11 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    v28 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    JSONValue.value.getter();
    *(_QWORD *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v20 = (_QWORD *)(v3[6] + 16 * i);
    *v20 = v18;
    v20[1] = v19;
    result = (uint64_t)sub_249DCA678(&v27, (_OWORD *)(v3[7] + 32 * i));
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v14 >= v25)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v24 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v25)
        return (uint64_t)v3;
      v15 = *(_QWORD *)(v24 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v25)
          return (uint64_t)v3;
        v15 = *(_QWORD *)(v24 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v25)
    return (uint64_t)v3;
  v15 = *(_QWORD *)(v24 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v25)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v24 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249DD2AA4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

void _s16VisualGeneration9JSONValueO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_249DD2AF0@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v4;

  if (a1 >> 61)
  {
    v4 = 0;
  }
  else
  {
    if (*(_QWORD *)(v1 + 16) != *(_QWORD *)(a1 + 16) || *(_QWORD *)(v1 + 24) != *(_QWORD *)(a1 + 24))
      return sub_249F1FE2C();
    v4 = 1;
  }
  return v4 & 1;
}

uint64_t _s16VisualGeneration15ForensicsReportV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *a2;
  v5 = *((_QWORD *)a2 + 1);
  v6 = 0x8000000249F33A40;
  if (v2 == 1)
    v7 = 0xD000000000000011;
  else
    v7 = 0xD000000000000010;
  if (v2 == 1)
    v8 = 0x8000000249F33A40;
  else
    v8 = 0x8000000249F33A60;
  if (*a1)
    v9 = v7;
  else
    v9 = 0xD000000000000010;
  if (v2)
    v10 = v8;
  else
    v10 = 0x8000000249F33A20;
  if (v4 == 1)
    v11 = 0xD000000000000011;
  else
    v11 = 0xD000000000000010;
  if (v4 != 1)
    v6 = 0x8000000249F33A60;
  if (*a2)
    v12 = v11;
  else
    v12 = 0xD000000000000010;
  if (*a2)
    v13 = v6;
  else
    v13 = 0x8000000249F33A20;
  if (v9 == v12 && v10 == v13)
  {
    swift_bridgeObjectRelease_n();
    return sub_249DCE664(v3, v5);
  }
  v14 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    return sub_249DCE664(v3, v5);
  return 0;
}

unint64_t sub_249DD2D34()
{
  unint64_t result;

  result = qword_2578D7080;
  if (!qword_2578D7080)
  {
    result = MEMORY[0x24BD06528](&unk_249F22BCC, &type metadata for ForensicsReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7080);
  }
  return result;
}

unint64_t sub_249DD2D78()
{
  unint64_t result;

  result = qword_2578D7088;
  if (!qword_2578D7088)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ForensicsReportType, &type metadata for ForensicsReportType);
    atomic_store(result, (unint64_t *)&qword_2578D7088);
  }
  return result;
}

unint64_t sub_249DD2DBC()
{
  unint64_t result;

  result = qword_2578D70A0;
  if (!qword_2578D70A0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for JSONValue, &type metadata for JSONValue);
    atomic_store(result, (unint64_t *)&qword_2578D70A0);
  }
  return result;
}

unint64_t sub_249DD2E00()
{
  unint64_t result;

  result = qword_2578D70B0;
  if (!qword_2578D70B0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ForensicsReportType, &type metadata for ForensicsReportType);
    atomic_store(result, (unint64_t *)&qword_2578D70B0);
  }
  return result;
}

uint64_t sub_249DD2E44(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D7090);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x24BD06528](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249DD2EB8()
{
  unint64_t result;

  result = qword_2578D70C0;
  if (!qword_2578D70C0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for JSONValue, &type metadata for JSONValue);
    atomic_store(result, (unint64_t *)&qword_2578D70C0);
  }
  return result;
}

uint64_t sub_249DD2EFC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

void sub_249DD2F40(uint64_t a1)
{
  uint64_t v1;

  sub_249DCEE8C(a1, v1);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_249DD2F70(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D70D0);
    v8 = a2();
    result = MEMORY[0x24BD06528](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249DD2FD8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v5 = sub_249F1F424();
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v7 = v5;
  v21 = MEMORY[0x24BEE4AF8];
  result = sub_249DB6828(0, v5 & ~(v5 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v6 = v21;
    do
    {
      v9 = sub_249F1F4B4();
      v11 = v10;
      v12 = sub_249DD5828(v9, v10, a3, a4);
      if ((v13 & 1) == 0)
      {
        if (v12 >= 0x4000)
        {
          sub_249F1F43C();
          v9 = sub_249F1F4B4();
          v15 = v16;
        }
        else
        {
          swift_bridgeObjectRetain();
          v9 = sub_249DCFFD4(a3, a4);
          v15 = v14;
          result = swift_bridgeObjectRelease();
          if (!v15)
            goto LABEL_15;
        }
        swift_bridgeObjectRelease();
        v11 = v15;
      }
      v18 = *(_QWORD *)(v21 + 16);
      v17 = *(_QWORD *)(v21 + 24);
      if (v18 >= v17 >> 1)
        sub_249DB6828(v17 > 1, v18 + 1, 1);
      *(_QWORD *)(v21 + 16) = v18 + 1;
      v19 = v21 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v9;
      *(_QWORD *)(v19 + 40) = v11;
      sub_249F1F430();
      --v7;
    }
    while (v7);
    return v6;
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_249DD3170(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_249DD3250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D70F0;
  if (!qword_2578D70F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D70E8);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2578D70F0);
  }
  return result;
}

uint64_t sub_249DD329C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Concept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_249DD32E4()
{
  unint64_t result;

  result = qword_2578D70F8;
  if (!qword_2578D70F8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ForensicsReportType, &type metadata for ForensicsReportType);
    atomic_store(result, (unint64_t *)&qword_2578D70F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ForensicsReportType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ForensicsReportType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249DD3404 + 4 * byte_249F226E9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249DD3438 + 4 * byte_249F226E4[v4]))();
}

uint64_t sub_249DD3438(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DD3440(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DD3448);
  return result;
}

uint64_t sub_249DD3454(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DD345CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249DD3460(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DD3468(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_249DD3474(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ForensicsReportType()
{
  return &type metadata for ForensicsReportType;
}

uint64_t initializeBufferWithCopyOfBuffer for ForensicsReport(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ForensicsReport(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForensicsReport(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForensicsReport(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForensicsReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForensicsReport()
{
  return &type metadata for ForensicsReport;
}

uint64_t type metadata accessor for ForensicRecord()
{
  return objc_opt_self();
}

uint64_t method lookup function for ForensicRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ForensicRecord.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ForensicRecord.record(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ForensicRecord.reports.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ForensicRecord.createForensicsReporter()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t type metadata accessor for ForensicsHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ForensicsReportingImageGenerationDelegate()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for JSONValueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249DD36A8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_249DD36A8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for JSONValueError(uint64_t a1)
{
  return sub_249DD36C4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_249DD36C4(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t assignWithCopy for JSONValueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_249DD36A8(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_249DD36C4(v5, v6);
  return a1;
}

uint64_t assignWithTake for JSONValueError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_249DD36C4(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration.LatentInitializer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration.LatentInitializer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_249DD37E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_249DD37F0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JSONValueError()
{
  return &type metadata for JSONValueError;
}

_QWORD *initializeBufferWithCopyOfBuffer for JSONValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for JSONValue()
{
  return swift_release();
}

_QWORD *assignWithCopy for JSONValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for JSONValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7B && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 123);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JSONValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7A)
  {
    *(_QWORD *)result = a2 - 123;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_249DD3974(_QWORD *a1)
{
  return *a1 >> 61;
}

_QWORD *sub_249DD3980(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_249DD3990(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for JSONValue()
{
  return &type metadata for JSONValue;
}

uint64_t dispatch thunk of static JSONKeyValueConvertible.jsonKey(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JSONKeyValueConvertible.jsonValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t storeEnumTagSinglePayload for ForensicsReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DD3A10 + 4 * byte_249F226F3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DD3A44 + 4 * byte_249F226EE[v4]))();
}

uint64_t sub_249DD3A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DD3A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DD3A54);
  return result;
}

uint64_t sub_249DD3A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DD3A68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DD3A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DD3A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForensicsReport.CodingKeys()
{
  return &type metadata for ForensicsReport.CodingKeys;
}

unint64_t sub_249DD3A94()
{
  unint64_t result;

  result = qword_2578D73A0;
  if (!qword_2578D73A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F22B64, &type metadata for ForensicsReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D73A0);
  }
  return result;
}

unint64_t sub_249DD3ADC()
{
  unint64_t result;

  result = qword_2578D73A8;
  if (!qword_2578D73A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F22AD4, &type metadata for ForensicsReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D73A8);
  }
  return result;
}

unint64_t sub_249DD3B24()
{
  unint64_t result;

  result = qword_2578D73B0;
  if (!qword_2578D73B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F22AFC, &type metadata for ForensicsReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D73B0);
  }
  return result;
}

uint64_t sub_249DD3B68()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DD3B94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_249DC3C24(a1, a2);
  return a1;
}

uint64_t sub_249DD3BA8(uint64_t a1, uint64_t a2)
{
  assignWithTake for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(a2, a1);
  return a2;
}

unint64_t sub_249DD3BE4()
{
  unint64_t result;

  result = qword_2578D73E0;
  if (!qword_2578D73E0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ForensicsReportType, &type metadata for ForensicsReportType);
    atomic_store(result, (unint64_t *)&qword_2578D73E0);
  }
  return result;
}

uint64_t sub_249DD3C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578DD090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DD3C84()
{
  sub_249F1FF64();
  sub_249F1F40C();
  return sub_249F1FFA0();
}

uint64_t sub_249DD3CD4()
{
  return sub_249F1F40C();
}

uint64_t sub_249DD3CEC()
{
  sub_249F1FF64();
  sub_249F1F40C();
  return sub_249F1FFA0();
}

uint64_t sub_249DD3D38@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_249F1FC4C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_249DD3D88(_QWORD *a1@<X8>)
{
  *a1 = 0x61746144676E70;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_249DD3DA4()
{
  return 0x61746144676E70;
}

uint64_t sub_249DD3DBC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_249F1FC4C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_249DD3E10()
{
  sub_249DD4B54();
  return sub_249F20024();
}

uint64_t sub_249DD3E38()
{
  sub_249DD4B54();
  return sub_249F20030();
}

uint64_t Image.CodingError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v1);
  sub_249F1F2A4();
  sub_249F1E920();
  return sub_249F1F388();
}

BOOL static Image.CodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Image.CodingError.hash(into:)()
{
  return sub_249F1FF70();
}

unint64_t sub_249DD3FCC(char a1)
{
  if (!a1)
    return 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0xD000000000000016;
}

BOOL sub_249DD402C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_249DD4040()
{
  char *v0;

  return sub_249DD3FCC(*v0);
}

uint64_t sub_249DD4048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DD552C(a1, a2);
  *a3 = result;
  return result;
}

void sub_249DD406C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_249DD4078()
{
  sub_249DD441C();
  return sub_249F20024();
}

uint64_t sub_249DD40A0()
{
  sub_249DD441C();
  return sub_249F20030();
}

uint64_t sub_249DD40C8()
{
  sub_249DD44E8();
  return sub_249F20024();
}

uint64_t sub_249DD40F0()
{
  sub_249DD44E8();
  return sub_249F20030();
}

uint64_t sub_249DD4118()
{
  sub_249DD44A4();
  return sub_249F20024();
}

uint64_t sub_249DD4140()
{
  sub_249DD44A4();
  return sub_249F20030();
}

uint64_t sub_249DD4168()
{
  sub_249DD4460();
  return sub_249F20024();
}

uint64_t sub_249DD4190()
{
  sub_249DD4460();
  return sub_249F20030();
}

uint64_t Image.CodingError.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7400);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7408);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7410);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7418);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DD441C();
  sub_249F20018();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_249DD44A4();
      sub_249F1FD3C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_249DD4460();
      v16 = v21;
      sub_249F1FD3C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_249DD44E8();
    sub_249F1FD3C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_249DD441C()
{
  unint64_t result;

  result = qword_2578D7420;
  if (!qword_2578D7420)
  {
    result = MEMORY[0x24BD06528](&unk_249F2326C, &_s11CodingErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7420);
  }
  return result;
}

unint64_t sub_249DD4460()
{
  unint64_t result;

  result = qword_2578D7428;
  if (!qword_2578D7428)
  {
    result = MEMORY[0x24BD06528](&unk_249F2321C, &_s11CodingErrorO32UnsupportedImageFormatCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7428);
  }
  return result;
}

unint64_t sub_249DD44A4()
{
  unint64_t result;

  result = qword_2578D7430;
  if (!qword_2578D7430)
  {
    result = MEMORY[0x24BD06528](&unk_249F231CC, &_s11CodingErrorO26InvalidImageDataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7430);
  }
  return result;
}

unint64_t sub_249DD44E8()
{
  unint64_t result;

  result = qword_2578D7438;
  if (!qword_2578D7438)
  {
    result = MEMORY[0x24BD06528](&unk_249F2317C, &_s11CodingErrorO31ImageDataNotAvailableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7438);
  }
  return result;
}

uint64_t Image.CodingError.hashValue.getter()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t Image.CodingError.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7440);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7448);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7450);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7458);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DD441C();
  v13 = v41;
  sub_249F1FFF4();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_249F1FD24();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_249F1FAF0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v25 = &type metadata for Image.CodingError;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_249DD44A4();
      v20 = v9;
      sub_249F1FC64();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_249DD4460();
      v28 = v15;
      sub_249F1FC64();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_249DD44E8();
    sub_249F1FC64();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_249DD49B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return Image.CodingError.init(from:)(a1, a2);
}

uint64_t sub_249DD49CC(_QWORD *a1)
{
  return Image.CodingError.encode(to:)(a1);
}

uint64_t Image.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7468);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  v8 = *(_BYTE *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DD4B54();
  sub_249F20018();
  v15 = v7;
  LOBYTE(v16) = v8;
  v9 = sub_249EA6BF8();
  if (v10 >> 60 == 15)
  {
    sub_249DD4B98();
    swift_allocError();
    *v11 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    v13 = v9;
    v14 = v10;
    v15 = v9;
    v16 = v10;
    sub_249DD4BDC();
    sub_249F1FDCC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_249DD3B94(v13, v14);
  }
}

unint64_t sub_249DD4B54()
{
  unint64_t result;

  result = qword_2578D7470;
  if (!qword_2578D7470)
  {
    result = MEMORY[0x24BD06528](&unk_249F2312C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7470);
  }
  return result;
}

unint64_t sub_249DD4B98()
{
  unint64_t result;

  result = qword_2578D7478;
  if (!qword_2578D7478)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Image.CodingError, &type metadata for Image.CodingError);
    atomic_store(result, (unint64_t *)&qword_2578D7478);
  }
  return result;
}

unint64_t sub_249DD4BDC()
{
  unint64_t result;

  result = qword_2578D7480;
  if (!qword_2578D7480)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578D7480);
  }
  return result;
}

uint64_t Image.init(from:)@<X0>(_QWORD *a1@<X0>, CGImageRef *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  const __CFData *v12;
  CGDataProvider *v13;
  CGImageSource *v14;
  CGImageSource *v15;
  size_t PrimaryImageIndex;
  CGImageRef v17;
  CGImageRef *v18;
  _BYTE *v19;
  uint64_t v21;
  CGImageRef ImageAtIndex;
  uint64_t v23;
  unint64_t v24;
  CGImageRef *v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7488);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DD4B54();
  sub_249F1FFF4();
  if (!v2)
  {
    sub_249DD4E4C();
    sub_249F1FCB8();
    v9 = v24;
    if (v24 >> 60 == 15)
    {
      sub_249DD4B98();
      swift_allocError();
      *v10 = 2;
      swift_willThrow();
LABEL_11:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    v25 = a2;
    v11 = v23;
    v12 = (const __CFData *)sub_249F1E824();
    v13 = CGDataProviderCreateWithCFData(v12);

    if (v13)
    {
      v14 = CGImageSourceCreateWithDataProvider(v13, 0);
      if (v14)
      {
        v15 = v14;
        PrimaryImageIndex = CGImageSourceGetPrimaryImageIndex(v14);
        ImageAtIndex = CGImageSourceCreateImageAtIndex(v15, PrimaryImageIndex, 0);

        v17 = ImageAtIndex;
        if (ImageAtIndex)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          sub_249DD3B94(v11, v9);
          v18 = v25;
          *v25 = v17;
          *((_BYTE *)v18 + 8) = 0;
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        }
      }
      else
      {

      }
    }
    sub_249DD4B98();
    swift_allocError();
    *v19 = 1;
    swift_willThrow();
    sub_249DD3B94(v11, v9);
    goto LABEL_11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_249DD4E4C()
{
  unint64_t result;

  result = qword_2578D7490;
  if (!qword_2578D7490)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578D7490);
  }
  return result;
}

unint64_t sub_249DD4E94()
{
  unint64_t result;

  result = qword_2578D7498;
  if (!qword_2578D7498)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Image.CodingError, &type metadata for Image.CodingError);
    atomic_store(result, (unint64_t *)&qword_2578D7498);
  }
  return result;
}

unint64_t sub_249DD4ED8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249DD4F0C();
  a1[2] = sub_249DD4F50();
  result = sub_249DD4B98();
  a1[3] = result;
  return result;
}

unint64_t sub_249DD4F0C()
{
  unint64_t result;

  result = qword_2578D74A0;
  if (!qword_2578D74A0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Image.CodingError, &type metadata for Image.CodingError);
    atomic_store(result, (unint64_t *)&qword_2578D74A0);
  }
  return result;
}

unint64_t sub_249DD4F50()
{
  unint64_t result;

  result = qword_2578D74A8;
  if (!qword_2578D74A8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Image.CodingError, &type metadata for Image.CodingError);
    atomic_store(result, (unint64_t *)&qword_2578D74A8);
  }
  return result;
}

uint64_t sub_249DD4F98@<X0>(_QWORD *a1@<X0>, CGImageRef *a2@<X8>)
{
  return Image.init(from:)(a1, a2);
}

uint64_t sub_249DD4FAC(_QWORD *a1)
{
  return Image.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Image.CodingError()
{
  return &type metadata for Image.CodingError;
}

uint64_t _s10CodingKeysOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249DD506C + 4 * byte_249F22C40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249DD508C + 4 * byte_249F22C45[v4]))();
}

_BYTE *sub_249DD506C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249DD508C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DD5094(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DD509C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DD50A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DD50AC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_249DD50B8()
{
  return 0;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

uint64_t _s11CodingErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249DD511C + 4 * byte_249F22C4F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249DD5150 + 4 * byte_249F22C4A[v4]))();
}

uint64_t sub_249DD5150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DD5158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DD5160);
  return result;
}

uint64_t sub_249DD516C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DD5174);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249DD5178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DD5180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11CodingErrorO10CodingKeysOMa()
{
  return &_s11CodingErrorO10CodingKeysON;
}

ValueMetadata *_s11CodingErrorO31ImageDataNotAvailableCodingKeysOMa()
{
  return &_s11CodingErrorO31ImageDataNotAvailableCodingKeysON;
}

ValueMetadata *_s11CodingErrorO26InvalidImageDataCodingKeysOMa()
{
  return &_s11CodingErrorO26InvalidImageDataCodingKeysON;
}

ValueMetadata *_s11CodingErrorO32UnsupportedImageFormatCodingKeysOMa()
{
  return &_s11CodingErrorO32UnsupportedImageFormatCodingKeysON;
}

unint64_t sub_249DD51D0()
{
  unint64_t result;

  result = qword_2578D74B0;
  if (!qword_2578D74B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F23014, &_s11CodingErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74B0);
  }
  return result;
}

unint64_t sub_249DD5218()
{
  unint64_t result;

  result = qword_2578D74B8;
  if (!qword_2578D74B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23104, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74B8);
  }
  return result;
}

unint64_t sub_249DD5260()
{
  unint64_t result;

  result = qword_2578D74C0;
  if (!qword_2578D74C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2303C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74C0);
  }
  return result;
}

unint64_t sub_249DD52A8()
{
  unint64_t result;

  result = qword_2578D74C8;
  if (!qword_2578D74C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23064, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74C8);
  }
  return result;
}

unint64_t sub_249DD52F0()
{
  unint64_t result;

  result = qword_2578D74D0;
  if (!qword_2578D74D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F22F34, &_s11CodingErrorO31ImageDataNotAvailableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74D0);
  }
  return result;
}

unint64_t sub_249DD5338()
{
  unint64_t result;

  result = qword_2578D74D8;
  if (!qword_2578D74D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F22F5C, &_s11CodingErrorO31ImageDataNotAvailableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74D8);
  }
  return result;
}

unint64_t sub_249DD5380()
{
  unint64_t result;

  result = qword_2578D74E0;
  if (!qword_2578D74E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F22EE4, &_s11CodingErrorO26InvalidImageDataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74E0);
  }
  return result;
}

unint64_t sub_249DD53C8()
{
  unint64_t result;

  result = qword_2578D74E8;
  if (!qword_2578D74E8)
  {
    result = MEMORY[0x24BD06528](&unk_249F22F0C, &_s11CodingErrorO26InvalidImageDataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74E8);
  }
  return result;
}

unint64_t sub_249DD5410()
{
  unint64_t result;

  result = qword_2578D74F0;
  if (!qword_2578D74F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F22E94, &_s11CodingErrorO32UnsupportedImageFormatCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74F0);
  }
  return result;
}

unint64_t sub_249DD5458()
{
  unint64_t result;

  result = qword_2578D74F8;
  if (!qword_2578D74F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F22EBC, &_s11CodingErrorO32UnsupportedImageFormatCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D74F8);
  }
  return result;
}

unint64_t sub_249DD54A0()
{
  unint64_t result;

  result = qword_2578D7500;
  if (!qword_2578D7500)
  {
    result = MEMORY[0x24BD06528](&unk_249F22F84, &_s11CodingErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7500);
  }
  return result;
}

unint64_t sub_249DD54E8()
{
  unint64_t result;

  result = qword_2578D7508;
  if (!qword_2578D7508)
  {
    result = MEMORY[0x24BD06528](&unk_249F22FAC, &_s11CodingErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7508);
  }
  return result;
}

uint64_t sub_249DD552C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000249F34B30 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249F34B50 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249F34B70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t dispatch thunk of PersonDescriptionDirectiveSpecifying.personDescriptionDirective.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DD56E0;
  return v7(a1, a2);
}

uint64_t sub_249DD56E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of PersonDescriptionDirectiveSpecifying.specifyPersonDescriptionDirective(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_249DAFCF8;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PersonDescriptionDirectiveSpecifying.dropPersonDescriptionDirective()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFCF8;
  return v7(a1, a2);
}

unint64_t sub_249DD5828(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_249F1F4B4() != a1 || v9 != a2)
  {
    v10 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_249F1F430();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_249DD5914(int64x2_t *a1@<X8>)
{
  *a1 = vdupq_n_s64(0x200uLL);
  strcpy(a1[1].i8, "800L");
}

void sub_249DD5934(int64x2_t *a1@<X8>)
{
  *a1 = vdupq_n_s64(0x200uLL);
  strcpy(a1[1].i8, "ARGB");
}

uint64_t sub_249DD5954()
{
  return 0;
}

unint64_t sub_249DD595C()
{
  return 0xD000000000000024;
}

uint64_t sub_249DD5978()
{
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_249DD59E8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_249DD59F0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_249DD59F8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_249DD5A04()
{
  return swift_deallocClassInstance();
}

void sub_249DD5A14(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for WordCloudImageGenerator.Descriptor;
  *(_QWORD *)(a1 + 32) = &off_251B50238;
}

uint64_t sub_249DD5A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  v4[35] = *(_QWORD *)(type metadata accessor for GeneratedImage() - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = type metadata accessor for ImageProvenance();
  v4[39] = swift_task_alloc();
  v5 = sub_249F1E8D8();
  v4[40] = v5;
  v4[41] = *(_QWORD *)(v5 - 8);
  v4[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DD5AE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 256);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v5 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v5 + 48);
    *(_QWORD *)(v0 + 344) = v6;
    if (v6 < 1)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
    }
    else
    {
      if (*(_BYTE *)(v5 + 80) == 1)
        v7 = sub_249E91118(0x8000000000000000);
      else
        v7 = *(_QWORD *)(v5 + 72);
      if ((v7 & 0x8000000000000000) != 0)
      {
        return sub_249F1FBC8();
      }
      else
      {
        *(_QWORD *)(v0 + 40) = &type metadata for WordCloudImageGenerator.RNG;
        *(_QWORD *)(v0 + 48) = sub_249DD8584();
        *(_QWORD *)(v0 + 16) = v7;
        v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2578D77D0 + dword_2578D77D0);
        v8 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 352) = v8;
        *v8 = v0;
        v8[1] = sub_249DD5D30;
        return v9(*(_QWORD *)(v0 + 248), v0 + 16);
      }
    }
  }
}

uint64_t sub_249DD5D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 360) = a1;
  *(_QWORD *)(v3 + 368) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DD5D9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  void *v22;
  id v23;
  char v24;
  void *v25;
  id v26;
  char v27;
  void *v28;
  id v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  _QWORD *v56;
  uint64_t v57;
  int *v58;
  uint64_t (*v59)(_BYTE *, uint64_t, _QWORD);
  uint64_t v60;
  uint64_t v61;
  __int8 v62;
  void *v63;
  char v64;
  void *v65;
  char v66;
  void *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  __int8 v75;
  uint64_t v76[2];
  void *v77;
  char v78;
  void *v79;
  char v80;
  void *v81;
  char v82;

  v1 = *(_QWORD *)(v0 + 360);
  if (v1 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v2 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v3 + 64);
  if (*(_QWORD *)(v4 + 16))
    v5 = *(_BYTE *)(v4 + 32);
  else
    v5 = 5;
  v62 = v5;
  v6 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40) == 0;
  v10 = 512;
  if (v9)
    v10 = v8;
  else
    v7 = 512;
  v60 = v10;
  v61 = v7;
  v59 = *(uint64_t (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 16);
  result = v59(*(_BYTE **)(v0 + 336), *(_QWORD *)(v0 + 256) + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_id, *(_QWORD *)(v0 + 320));
  v12 = v2 * v6;
  if ((unsigned __int128)(v2 * (__int128)v6) >> 64 == (v2 * v6) >> 63)
  {
    v13 = *(_QWORD *)(v0 + 264);
    type metadata accessor for WordCloudImageGenerator.RemainingProgressItems();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v12;
    *(_QWORD *)(inited + 24) = 0;
    v70 = inited;
    sub_249DD9484(v13, v0 + 96);
    if (*(_QWORD *)(v0 + 120))
    {
      v15 = *(_QWORD *)(v0 + 272);
      v16 = *(_QWORD *)(v0 + 256);
      sub_249D9E174((__int128 *)(v0 + 96), v0 + 56);
      v17 = *(_QWORD *)(v0 + 80);
      v18 = *(_QWORD *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v17);
      *(_QWORD *)(v0 + 200) = &type metadata for WordCloudImageGenerator.ProgressInfo;
      *(_QWORD *)(v0 + 208) = &off_251B50290;
      v19 = swift_allocObject();
      *(_QWORD *)(v0 + 176) = v19;
      *(_QWORD *)(v19 + 16) = 0;
      *(_QWORD *)(v19 + 24) = v12;
      *(_BYTE *)(v19 + 32) = 0;
      *(_QWORD *)(v19 + 40) = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16))(v15, v16, v0 + 176, v17, v18);
      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    }
    else
    {
      sub_249DD94CC(v0 + 96);
    }
    v20 = *(_QWORD *)(v0 + 248);
    v21 = (int *)type metadata accessor for GenerationRecipe(0);
    v22 = *(void **)(v20 + v21[14] + 24);
    if (v22)
    {
      v23 = v22;
      v24 = 2;
    }
    else
    {
      v24 = -1;
    }
    v68 = v24;
    v25 = *(void **)(v20 + v21[20] + 24);
    v67 = v25;
    if (v25)
    {
      v26 = v25;
      v27 = 2;
    }
    else
    {
      v27 = -1;
    }
    v66 = v27;
    v69 = v0 + 16;
    v56 = (_QWORD *)(v0 + 136);
    v28 = *(void **)(v20 + v21[16] + 24);
    v63 = v22;
    v65 = v28;
    if (v28)
    {
      v29 = v28;
      v30 = 2;
    }
    else
    {
      v30 = -1;
    }
    v64 = v30;
    v57 = *(_QWORD *)(v0 + 280);
    v58 = *(int **)(v0 + 304);
    v31 = MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(v0 + 368);
    v33 = 1;
    while (1)
    {
      v34 = *(_BYTE **)(v0 + 312);
      v71 = *(_QWORD *)(v0 + 296);
      v35 = *(_QWORD *)(v0 + 264);
      v73 = *(_QWORD *)(v0 + 360);
      v36 = *(_QWORD **)(v0 + 256);
      v37 = **(_BYTE **)(v0 + 248);
      v59(&v34[v58[5]], *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
      *v34 = v37;
      *(_QWORD *)&v34[v58[6]] = v33;
      *(_QWORD *)&v34[v58[7]] = 0;
      v75 = v62;
      v76[0] = v61;
      v76[1] = v60;
      v77 = v63;
      v78 = v68;
      v79 = v67;
      v80 = v66;
      v81 = v65;
      v82 = v64;
      sub_249DD6650(v73, &v75, v76, (uint64_t)v34, (uint64_t)&v77, (uint64_t)&v79, (uint64_t)&v81, v69, v71, v70, v35, v36);
      if (v32)
      {
        v45 = *(_QWORD *)(v0 + 328);
        v46 = *(_QWORD *)(v0 + 336);
        v48 = *(_QWORD *)(v0 + 312);
        v47 = *(_QWORD *)(v0 + 320);
        swift_release();
        swift_bridgeObjectRelease();
        sub_249DC05A8(v48, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
        sub_249DC0794(v65, v64);
        sub_249DC0794(v67, v66);
        sub_249DC0794(v63, v68);
        __swift_destroy_boxed_opaque_existential_1(v69);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      sub_249DC091C(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_249DB292C(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v39 = *(_QWORD *)(v31 + 16);
      v38 = *(_QWORD *)(v31 + 24);
      if (v39 >= v38 >> 1)
        v31 = sub_249DB292C(v38 > 1, v39 + 1, 1, v31);
      v40 = *(_QWORD *)(v0 + 344);
      v41 = *(_QWORD *)(v0 + 312);
      v42 = *(_QWORD *)(v0 + 288);
      v43 = *(_QWORD *)(v0 + 296);
      *(_QWORD *)(v31 + 16) = v39 + 1;
      sub_249D9E308(v42, v31+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v39, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8(v43, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
      sub_249DC05A8(v41, (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
      if (v33 == v40)
        break;
      v32 = 0;
      if (__OFADD__(v33++, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
    }
    v49 = *(_QWORD *)(v0 + 264);
    swift_bridgeObjectRelease();
    sub_249DD9484(v49, (uint64_t)v56);
    v50 = *(_QWORD *)(v0 + 160);
    v51 = *(_QWORD *)(v0 + 328);
    if (v50)
    {
      v52 = *(_QWORD *)(v0 + 272);
      v53 = *(_QWORD *)(v0 + 256);
      v54 = *(_QWORD *)(v0 + 168);
      v72 = *(_QWORD *)(v0 + 320);
      v74 = *(_QWORD *)(v0 + 336);
      __swift_project_boxed_opaque_existential_1(v56, v50);
      v55 = *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v54 + 32);
      swift_bridgeObjectRetain();
      v55(v52, v53, v31, v50, v54);
      swift_bridgeObjectRelease();
      sub_249DC0794(v65, v64);
      sub_249DC0794(v67, v66);
      sub_249DC0794(v63, v68);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v74, v72);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v51 + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
      sub_249DC0794(v65, v64);
      sub_249DC0794(v67, v66);
      sub_249DC0794(v63, v68);
      swift_release();
      sub_249DD94CC((uint64_t)v56);
    }
    __swift_destroy_boxed_opaque_existential_1(v69);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249DD63C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DD6428(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v17;

  v17 = a4;
  v8 = sub_249DD64C0(&v17, a5);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  type metadata accessor for WordCloudImageGenerator.WordModel();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = v8;
  *(_QWORD *)(v15 + 48) = v10;
  *(_QWORD *)(v15 + 56) = v12;
  *(_BYTE *)(v15 + 64) = v14 & 1;
  swift_bridgeObjectRetain();
  return v15;
}

uint64_t sub_249DD64C0(_BYTE *a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *a1;
  if (*a1)
    v3 = &unk_251B4D4F0;
  else
    v3 = &unk_251B4D470;
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  sub_249DD9574();
  sub_249DD95B8();
  swift_bridgeObjectRetain();
  result = sub_249F1F214();
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v7 >= v3[2])
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v5 = &unk_251B4D510;
  if (!v2)
    v5 = &unk_251B4D490;
  v6 = v5[4 * v7];
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_249DD65CC(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_249E3C630(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_249DD79DC(v6);
  return sub_249F1F55C();
}

uint64_t sub_249DD6650@<X0>(unint64_t a1@<X0>, __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _QWORD *a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  id v21;
  double v22;
  double v23;
  id v24;
  id v25;
  unint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  CGFloat v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int64_t v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t inited;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  const __CFAttributedString *v93;
  float64x2_t v94;
  double v95;
  double v96;
  double MidX;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  CGFloat v104;
  CGFloat v105;
  double v106;
  double v107;
  double v108;
  double v109;
  CGFloat *v110;
  CGFloat *v111;
  double v112;
  double v113;
  unint64_t v114;
  unint64_t v115;
  float64x2_t *v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  CGImageRef Image;
  CGImageRef v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  double v133;
  double v134;
  double v135;
  id v136;
  void *v137;
  void *v138;
  void *v139;
  double v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  id v145;
  void *v146;
  uint64_t v147;
  const __CFAttributedString *v148;
  double v149;
  double v150;
  unint64_t v151;
  uint64_t v152;
  __int8 v155;
  _QWORD *v158;
  double v159;
  float64x2_t rect2;
  __int128 v161;
  ValueMetadata *v162;
  _UNKNOWN **v163;
  int64x2_t v164;
  uint64_t v165;
  uint64_t v166;
  _BYTE v167[40];
  _BYTE v168[40];
  _BYTE v169[48];
  CGFloat v170;
  CGPoint v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;

  v155 = *a2;
  v13 = *a3;
  *(_QWORD *)&rect2.f64[0] = a3[1];
  v170 = *(double *)a5;
  LODWORD(v14) = *(unsigned __int8 *)(a5 + 8);
  v15 = *(void **)a6;
  LODWORD(v16) = *(unsigned __int8 *)(a6 + 8);
  v159 = *(double *)a7;
  v17 = *(unsigned __int8 *)(a7 + 8);
  v18 = a12[5];
  v19 = a12[6];
  v158 = a12 + 2;
  __swift_project_boxed_opaque_existential_1(a12 + 2, v18);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    return swift_willThrow();
  }
  result = sub_249F1F670();
  if (!v12)
  {
    v21 = objc_msgSend((id)objc_opt_self(), sel_blackImage);
    v22 = (double)v13;
    v23 = (double)*(uint64_t *)&rect2.f64[0];
    v24 = objc_msgSend(v21, sel_imageByCroppingToRect_, 0.0, 0.0, (double)v13, (double)*(uint64_t *)&rect2.f64[0]);

    v25 = v24;
    v26 = (unint64_t)sub_249E5AD4C(v25);
    swift_retain();
    v146 = v25;

    if (!v26)
    {
      v30 = type metadata accessor for GeneratedImage();
      sub_249DC091C(a4, a9 + *(int *)(v30 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
      *(_QWORD *)a9 = v24;
      *(_BYTE *)(a9 + 8) = 1;
      v31 = (_BYTE *)(a9 + *(int *)(v30 + 24));
      *v31 = 2;
      v32 = type metadata accessor for GeneratedImageIndications();
      v33 = &v31[*(int *)(v32 + 20)];
      v34 = sub_249F1F13C();
      result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
      goto LABEL_11;
    }
    v136 = v24;
    swift_release();
    v27 = (double *)0x24BDBF000;
    if ((_DWORD)v16 != 255)
    {
      v28 = qword_2578D5D48;
      v29 = v15;
      if (v28 != -1)
        goto LABEL_166;
      goto LABEL_7;
    }
LABEL_16:
    if ((_DWORD)v17 == 255)
    {
LABEL_26:
      if ((_DWORD)v14 == 255)
        goto LABEL_36;
      v41 = qword_2578D5D48;
      v42 = v170;
      v43 = *(id *)&v170;
      if (v41 != -1)
        swift_once();
      sub_249DD9608((uint64_t)&qword_2578FF3A0, (uint64_t)v167);
      if ((_DWORD)v14)
      {
        if ((_DWORD)v14 == 1)
        {
          sub_249E5A8F8((uint64_t)v43, (uint64_t)v167, 0.2);
LABEL_35:
          sub_249DC0794(*(id *)&v42, v14);
          sub_249DC0794(*(id *)&v42, v14);
LABEL_36:
          v46 = a12[5];
          v47 = a12[6];
          __swift_project_boxed_opaque_existential_1(v158, v46);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47) & 1) != 0)
          {
            sub_249F1F5D4();
            sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
            swift_allocError();
            sub_249F1F1E4();
            swift_willThrow();
LABEL_39:

            return swift_release();
          }
          sub_249F1F670();
          v48 = a1;
          if (a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v49 = sub_249F1FBEC();
            swift_bridgeObjectRelease();
            v48 = a1;
          }
          else
          {
            v49 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (*(_QWORD *)&rect2.f64[0] / 20 >= 12)
            v50 = 12;
          else
            v50 = *(_QWORD *)&rect2.f64[0] / 20;
          if (*(_QWORD *)&rect2.f64[0] / 5 <= 18)
            v51 = 18;
          else
            v51 = *(_QWORD *)&rect2.f64[0] / 5;
          v151 = v26;
          v141 = v49;
          if (v49 <= 0)
          {
            v14 = 0;
            v53 = 0;
LABEL_92:
            v142 = v53 - v14;
            if (__OFSUB__(v53, v14))
            {
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
              JUMPOUT(0x249DD7788);
            }
            if (v49 < 0)
              goto LABEL_169;
            if (!v49)
              goto LABEL_151;
            v70 = (double)v51;
            v16 = 0;
            v133 = (double)v142;
            v134 = v70 - (double)v50;
            v135 = (double)v50;
            v27 = (double *)MEMORY[0x24BEE4AF8];
            v140 = ((double)v50 + v70) * 0.5;
            v138 = (void *)*MEMORY[0x24BDC4F30];
            v139 = (void *)*MEMORY[0x24BDC4EE0];
            v137 = (void *)*MEMORY[0x24BDC4C28];
            v71 = 15.0;
            v143 = v14;
            while (1)
            {
              v75 = a12[5];
              v17 = a12[6];
              v29 = (uint64_t)__swift_project_boxed_opaque_existential_1(v158, v75);
              if (((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v75, v17) & 1) != 0)
              {
                sub_249F1F5D4();
                sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
                swift_allocError();
                sub_249F1F1E4();
                swift_willThrow();
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              sub_249F1F670();
              if ((a1 & 0xC000000000000001) != 0)
              {
                v76 = MEMORY[0x24BD056B8](v16, a1);
              }
              else
              {
                if ((unint64_t)v16 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_164;
                v76 = *(_QWORD *)(a1 + 32 + 8 * v16);
                swift_retain();
              }
              v29 = (uint64_t)sub_249E5A480(*(_QWORD *)(v76 + 40), *(_QWORD *)(v76 + 48), *(_QWORD *)(v76 + 56), *(_BYTE *)(v76 + 64));
              v77 = v140;
              if (v142)
              {
                v78 = *(_QWORD *)(v76 + 32);
                v79 = __OFSUB__(v78, v14);
                v80 = v78 - v14;
                if (v79)
                  goto LABEL_165;
                v77 = v134 * ((double)v80 / v133) + v135;
              }
              v147 = v16 + 1;
              v81 = *(_QWORD *)(v76 + 16);
              v82 = *(_QWORD *)(v76 + 24);
              v164.i8[0] = v155;
              v83 = (void *)sub_249DD7798(v77, v81, v82, &v164, a8);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2578D77E8);
              inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_249F22C20;
              *(_QWORD *)(inited + 32) = v139;
              type metadata accessor for CGColor(0);
              *(_QWORD *)(inited + 40) = v29;
              v15 = v137;
              *(_QWORD *)(inited + 64) = v85;
              *(_QWORD *)(inited + 72) = v138;
              *(_QWORD *)(inited + 80) = v29;
              *(_QWORD *)(inited + 104) = v85;
              *(_QWORD *)(inited + 112) = v137;
              type metadata accessor for CTFont(0);
              *(_QWORD *)(inited + 144) = v86;
              *(_QWORD *)(inited + 120) = v83;
              v145 = (id)v29;
              v87 = v139;
              v88 = v138;
              v89 = v137;
              v144 = v83;
              sub_249DAEB18(inited);
              v90 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              swift_bridgeObjectRetain();
              v91 = (void *)sub_249F1F304();
              swift_bridgeObjectRelease();
              type metadata accessor for Key(0);
              sub_249D9BBEC((unint64_t *)&qword_2578D5F68, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_249F21644);
              v92 = (void *)sub_249F1F1F0();
              swift_bridgeObjectRelease();
              v93 = (const __CFAttributedString *)objc_msgSend(v90, sel_initWithString_attributes_, v91, v92);

              v148 = v93;
              v26 = v151;
              sub_249E5A63C(v93, &v164);
              v29 = 0;
              v14 = 0;
              v94 = vcvtq_f64_s64(v164);
              v95 = 0.5 * v94.f64[0];
              v170 = v94.f64[1];
              v96 = vmuld_lane_f64(0.5, v94, 1);
              rect2 = v94;
              v159 = vmuld_lane_f64(v94.f64[0], v94, 1);
              v16 = -1;
              v17 = 1;
              v149 = v96;
              v150 = 0.5 * v94.f64[0];
              while (2)
              {
                switch(v14)
                {
                  case 0:
                    v79 = __OFADD__(v16++, 1);
                    if (v79)
                      goto LABEL_156;
                    v14 = v16 == v17;
                    goto LABEL_125;
                  case 1:
                    v79 = __OFADD__(v29++, 1);
                    if (v79)
                      goto LABEL_157;
                    if (v29 == v17)
                      v14 = 2;
                    else
                      v14 = 1;
                    goto LABEL_125;
                  case 2:
                    v79 = __OFSUB__(v16--, 1);
                    if (v79)
                      goto LABEL_158;
                    if (__OFSUB__(0, v16))
                      goto LABEL_159;
                    if (-v16 == v17)
                      v14 = 3;
                    else
                      v14 = 2;
                    goto LABEL_125;
                  case 3:
                    v79 = __OFSUB__(v29--, 1);
                    if (v79)
                      goto LABEL_160;
                    if (__OFSUB__(0, v29))
                      goto LABEL_161;
                    if (-v29 == v17)
                    {
                      v79 = __OFADD__(v17++, 1);
                      if (v79)
                        goto LABEL_163;
                      v14 = 0;
                    }
                    else
                    {
                      v14 = 3;
                    }
LABEL_125:
                    v172.origin.x = 0.0;
                    v172.origin.y = 0.0;
                    v172.size.width = v22;
                    v172.size.height = v23;
                    MidX = CGRectGetMidX(v172);
                    v173.origin.x = 0.0;
                    v173.origin.y = 0.0;
                    v173.size.width = v22;
                    v173.size.height = v23;
                    v98 = MidX + (double)v16 * v71;
                    v99 = (double)v29 * v71 + CGRectGetMidY(v173);
                    v174.origin.x = 0.0;
                    v174.origin.y = 0.0;
                    v174.size.width = v22;
                    v174.size.height = v23;
                    v171.x = v98;
                    v171.y = v99;
                    if (!CGRectContainsPoint(v174, v171))
                    {
LABEL_143:
                      v14 = v143;
                      v16 = v147;
                      goto LABEL_144;
                    }
                    v100 = v98 - v95;
                    v101 = v99 - v96;
                    v175.origin.x = 0.0;
                    v175.origin.y = 0.0;
                    v175.size.width = v22;
                    v175.size.height = v23;
                    v184.origin.x = v100;
                    v184.origin.y = v101;
                    v184.size.width = rect2.f64[0];
                    v184.size.height = v170;
                    if (!CGRectContainsRect(v175, v184))
                      continue;
                    v15 = (void *)*((_QWORD *)v27 + 2);
                    if (!v15)
                      goto LABEL_138;
                    v102 = v23;
                    v103 = v22;
                    v104 = v27[4];
                    v105 = v27[5];
                    v107 = v27[6];
                    v106 = v27[7];
                    swift_bridgeObjectRetain_n();
                    v176.origin.x = v100;
                    v176.origin.y = v101;
                    v176.size.width = rect2.f64[0];
                    v176.size.height = v170;
                    v185.origin.x = v104;
                    v185.origin.y = v105;
                    v22 = v103;
                    v23 = v102;
                    v71 = 15.0;
                    v185.size.width = v107;
                    v185.size.height = v106;
                    v177 = CGRectIntersection(v176, v185);
                    if (v177.size.width * v177.size.height / (v159 + v107 * v106 - v177.size.width * v177.size.height) > 0.01)
                      goto LABEL_106;
                    if (v15 != (void *)1)
                    {
                      if (*((_QWORD *)v27 + 2) < 2uLL)
                        goto LABEL_162;
                      v186.origin.x = v27[8];
                      v186.origin.y = v27[9];
                      v108 = v27[10];
                      v109 = v27[11];
                      v178.origin.x = v100;
                      v178.origin.y = v101;
                      v178.size.width = rect2.f64[0];
                      v178.size.height = v170;
                      v186.size.width = v108;
                      v186.size.height = v109;
                      v179 = CGRectIntersection(v178, v186);
                      if (v179.size.width
                         * v179.size.height
                         / (v159 + v108 * v109 - v179.size.width * v179.size.height) <= 0.01)
                      {
                        v110 = v27 + 15;
                        v26 = 2;
                        while (1)
                        {
                          if (v15 == (void *)v26)
                            goto LABEL_137;
                          if (v26 >= *((_QWORD *)v27 + 2))
                            break;
                          v111 = v110 + 4;
                          ++v26;
                          v113 = *(v110 - 1);
                          v112 = *v110;
                          v187.origin.x = *(v110 - 3);
                          v187.origin.y = *(v110 - 2);
                          v180.origin.x = v100;
                          v180.origin.y = v101;
                          v180.size.width = rect2.f64[0];
                          v180.size.height = v170;
                          v187.size.width = v113;
                          v187.size.height = *v110;
                          v181 = CGRectIntersection(v180, v187);
                          v110 = v111;
                          if (v181.size.width
                             * v181.size.height
                             / (v159 + v112 * v113 - v181.size.width * v181.size.height) > 0.01)
                            goto LABEL_106;
                        }
                        __break(1u);
LABEL_156:
                        __break(1u);
LABEL_157:
                        __break(1u);
LABEL_158:
                        __break(1u);
LABEL_159:
                        __break(1u);
LABEL_160:
                        __break(1u);
LABEL_161:
                        __break(1u);
LABEL_162:
                        __break(1u);
LABEL_163:
                        __break(1u);
LABEL_164:
                        __break(1u);
LABEL_165:
                        __break(1u);
LABEL_166:
                        swift_once();
LABEL_7:
                        sub_249DD9608((uint64_t)&qword_2578FF3A0, (uint64_t)v169);
                        if ((_DWORD)v16)
                        {
                          if ((_DWORD)v16 == 1)
                          {
                            sub_249E5A8F8((uint64_t)(id)v29, (uint64_t)v169, 0.2);
                            goto LABEL_15;
                          }
                          v35 = objc_msgSend(objc_allocWithZone(*((Class *)v27 + 204)), sel_initWithCVPixelBuffer_, (id)v29, *(_QWORD *)&v133, *(_QWORD *)&v134, *(_QWORD *)&v135);
                        }
                        else
                        {
                          v35 = objc_msgSend(objc_allocWithZone(*((Class *)v27 + 204)), sel_initWithCGImage_, (id)v29, *(_QWORD *)&v133, *(_QWORD *)&v134, *(_QWORD *)&v135);
                        }
                        v36 = v35;
                        sub_249E5A8F8((uint64_t)v35, (uint64_t)v169, 0.2);

LABEL_15:
                        sub_249DC0794(v15, v16);
                        sub_249DC0794(v15, v16);
                        goto LABEL_16;
                      }
LABEL_106:
                      swift_bridgeObjectRelease_n();
                      v26 = v151;
                      v96 = v149;
                      v95 = v150;
                      continue;
                    }
LABEL_137:
                    swift_bridgeObjectRelease_n();
                    v26 = v151;
LABEL_138:
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v27 = (double *)sub_249DB2B70(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
                    v14 = v143;
                    v16 = v147;
                    v115 = *((_QWORD *)v27 + 2);
                    v114 = *((_QWORD *)v27 + 3);
                    if (v115 >= v114 >> 1)
                      v27 = (double *)sub_249DB2B70((_QWORD *)(v114 > 1), v115 + 1, 1, v27);
                    *((_QWORD *)v27 + 2) = v115 + 1;
                    v116 = (float64x2_t *)&v27[4 * v115];
                    v116[2].f64[0] = v100;
                    v116[2].f64[1] = v101;
                    v182.size.width = rect2.f64[0];
                    v116[3] = rect2;
                    v182.origin.x = v100;
                    v182.origin.y = v101;
                    v117 = v101;
                    v118 = v100;
                    v119 = v170;
                    v182.size.height = v170;
                    v120 = CGRectGetMidX(v182);
                    v183.origin.x = v118;
                    v183.origin.y = v117;
                    v183.size.width = rect2.f64[0];
                    v183.size.height = v119;
                    *(double *)&v121 = CGRectGetMidY(v183);
                    sub_249E5A758(v148, v120, v121, 0);
LABEL_144:
                    sub_249DD9484(a11, (uint64_t)&v161);
                    if (v162)
                    {
                      sub_249D9E174(&v161, (uint64_t)&v164);
                      v123 = *(_QWORD *)(a10 + 16);
                      v122 = *(_QWORD *)(a10 + 24);
                      v124 = v123;
                      if (v122 < v123)
                      {
                        v124 = v122 + 1;
                        *(_QWORD *)(a10 + 24) = v122 + 1;
                      }
                      v72 = v165;
                      v73 = v166;
                      __swift_project_boxed_opaque_existential_1(&v164, v165);
                      v162 = &type metadata for WordCloudImageGenerator.ProgressInfo;
                      v163 = &off_251B50290;
                      v74 = swift_allocObject();
                      *(_QWORD *)&v161 = v74;
                      *(_QWORD *)(v74 + 16) = v124;
                      *(_QWORD *)(v74 + 24) = v123;
                      *(_BYTE *)(v74 + 32) = 0;
                      *(_QWORD *)(v74 + 40) = 0;
                      (*(void (**)(uint64_t, _QWORD *, __int128 *, uint64_t, uint64_t))(v73 + 16))(v152, a12, &v161, v72, v73);

                      swift_release();
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v161);
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v164);
                      v26 = v151;
                      v14 = v143;
                      v16 = v147;
                    }
                    else
                    {

                      swift_release();
                      sub_249DD94CC((uint64_t)&v161);
                    }
                    if (v16 == v141)
                    {
                      swift_bridgeObjectRelease();
LABEL_151:
                      Image = CGBitmapContextCreateImage(*(CGContextRef *)(v26 + 32));
                      if (Image)
                      {
                        v126 = Image;
                        v127 = type metadata accessor for GeneratedImage();
                        sub_249DC091C(a4, a9 + *(int *)(v127 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
                        *(_QWORD *)a9 = v126;
                        *(_BYTE *)(a9 + 8) = 0;
                        v31 = (_BYTE *)(a9 + *(int *)(v127 + 24));
                        *v31 = 2;
                        v32 = type metadata accessor for GeneratedImageIndications();
                        v128 = &v31[*(int *)(v32 + 20)];
                        v129 = sub_249F1F13C();
                        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v128, 1, 1, v129);

                      }
                      else
                      {
                        v130 = type metadata accessor for GeneratedImage();
                        sub_249DC091C(a4, a9 + *(int *)(v130 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
                        *(_QWORD *)a9 = v136;
                        *(_BYTE *)(a9 + 8) = 1;
                        v31 = (_BYTE *)(a9 + *(int *)(v130 + 24));
                        *v31 = 2;
                        v32 = type metadata accessor for GeneratedImageIndications();
                        v131 = &v31[*(int *)(v32 + 20)];
                        v132 = sub_249F1F13C();
                        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v131, 1, 1, v132);
                      }
                      result = swift_release();
LABEL_11:
                      *(_QWORD *)&v31[*(int *)(v32 + 24)] = 0;
                      return result;
                    }
                    break;
                  default:
                    goto LABEL_143;
                }
                break;
              }
            }
          }
          if (a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v48 = a1;
            v52 = sub_249F1FBEC();
          }
          else
          {
            v52 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          if (!v52)
          {
            swift_bridgeObjectRelease();
            v53 = 0x8000000000000000;
            v14 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_91:
            v49 = v141;
            goto LABEL_92;
          }
          if (v52 < 1)
            goto LABEL_170;
          if ((v48 & 0xC000000000000001) != 0)
          {
            v54 = 0;
            v14 = 0x7FFFFFFFFFFFFFFFLL;
            v53 = 0x8000000000000000;
            do
            {
              v55 = MEMORY[0x24BD056B8](v54++, v48);
              v56 = *(_QWORD *)(v55 + 32);
              swift_unknownObjectRelease();
              v48 = a1;
              if (v56 < v14)
                v14 = v56;
              if (v56 > v53)
                v53 = v56;
            }
            while (v52 != v54);
            swift_bridgeObjectRelease();
            v26 = v151;
            goto LABEL_91;
          }
          if ((unint64_t)v52 >= 2)
          {
            v57 = v52 & 0xFFFFFFFFFFFFFFFELL;
            v58 = v48 + 40;
            v59 = 0x7FFFFFFFFFFFFFFFLL;
            v60 = 0x8000000000000000;
            v61 = v52 & 0xFFFFFFFFFFFFFFFELL;
            v62 = 0x8000000000000000;
            v63 = 0x7FFFFFFFFFFFFFFFLL;
            do
            {
              v64 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 32);
              v65 = *(_QWORD *)(*(_QWORD *)v58 + 32);
              if (v64 < v59)
                v59 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 32);
              if (v65 < v63)
                v63 = *(_QWORD *)(*(_QWORD *)v58 + 32);
              if (v64 > v60)
                v60 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 32);
              if (v65 > v62)
                v62 = *(_QWORD *)(*(_QWORD *)v58 + 32);
              v58 += 16;
              v61 -= 2;
            }
            while (v61);
            if (v59 >= v63)
              v14 = v63;
            else
              v14 = v59;
            if (v60 <= v62)
              v53 = v62;
            else
              v53 = v60;
            if (v52 == v57)
              goto LABEL_90;
          }
          else
          {
            v57 = 0;
            v14 = 0x7FFFFFFFFFFFFFFFLL;
            v53 = 0x8000000000000000;
          }
          v66 = v52 - v57;
          v67 = (uint64_t *)(v48 + 8 * v57 + 32);
          do
          {
            v68 = *v67++;
            v69 = *(_QWORD *)(v68 + 32);
            if (v69 < v14)
              v14 = v69;
            if (v69 > v53)
              v53 = v69;
            --v66;
          }
          while (v66);
LABEL_90:
          swift_bridgeObjectRelease();
          goto LABEL_91;
        }
        v44 = objc_msgSend(objc_allocWithZone(*((Class *)v27 + 204)), sel_initWithCVPixelBuffer_, v43, *(_QWORD *)&v133, *(_QWORD *)&v134, *(_QWORD *)&v135);
      }
      else
      {
        v44 = objc_msgSend(objc_allocWithZone(*((Class *)v27 + 204)), sel_initWithCGImage_, v43, *(_QWORD *)&v133, *(_QWORD *)&v134, *(_QWORD *)&v135);
      }
      v45 = v44;
      sub_249E5A8F8((uint64_t)v44, (uint64_t)v167, 0.2);

      goto LABEL_35;
    }
    v15 = (void *)v17;
    v37 = qword_2578D5D48;
    v38 = *(id *)&v159;
    if (v37 != -1)
      swift_once();
    sub_249DD9608((uint64_t)&qword_2578FF3A0, (uint64_t)v168);
    if ((_DWORD)v17)
    {
      if ((_DWORD)v17 == 1)
      {
        sub_249E5A8F8((uint64_t)v38, (uint64_t)v168, 0.2);
LABEL_25:
        sub_249DC0794(*(id *)&v159, v17);
        sub_249DC0794(*(id *)&v159, v17);
        goto LABEL_26;
      }
      v39 = objc_msgSend(objc_allocWithZone(*((Class *)v27 + 204)), sel_initWithCVPixelBuffer_, v38, *(_QWORD *)&v133, *(_QWORD *)&v134, *(_QWORD *)&v135);
    }
    else
    {
      v39 = objc_msgSend(objc_allocWithZone(*((Class *)v27 + 204)), sel_initWithCGImage_, v38, *(_QWORD *)&v133, *(_QWORD *)&v134, *(_QWORD *)&v135);
    }
    v40 = v39;
    sub_249E5A8F8((uint64_t)v39, (uint64_t)v168, 0.2);

    goto LABEL_25;
  }
  return result;
}

uint64_t sub_249DD7798(CGFloat a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t result;
  __CFString *v8;
  const __CTFont *v9;
  __CFString *v10;
  CTFontRef v11;
  unint64_t v12;
  CFRange v13;

  if (*a4)
    v6 = &unk_251B4D400;
  else
    v6 = &unk_251B4D3B0;
  __swift_mutable_project_boxed_opaque_existential_1(a5, *(_QWORD *)(a5 + 24));
  sub_249DD9574();
  sub_249DD95B8();
  swift_bridgeObjectRetain();
  result = sub_249F1F214();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < v6[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = (__CFString *)sub_249F1F304();
    swift_bridgeObjectRelease();
    v9 = CTFontCreateWithName(v8, a1, 0);

    v10 = (__CFString *)sub_249F1F304();
    v13.length = CFStringGetLength(v10);
    v13.location = 0;
    v11 = CTFontCreateForString(v9, v10, v13);

    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_249DD7918()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249DD793C()
{
  return swift_allocObject();
}

uint64_t sub_249DD794C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WordCloudImageGenerator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WordCloudImageGenerator.RemainingProgressItems()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WordCloudImageGenerator.WordModel()
{
  return objc_opt_self();
}

uint64_t sub_249DD79BC()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0 + 999983;
  if ((unint64_t)*v0 >= 0xFFFFFFFFFFF0BDD1)
    __break(1u);
  else
    *v0 = result;
  return result;
}

uint64_t sub_249DD79DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  BOOL v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *__dst;
  char *v126;
  char *v127;
  int64_t v128;
  uint64_t v129;

  v3 = a1[1];
  result = sub_249F1FDFC();
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      sub_249F1FC28();
      __break(1u);
      goto LABEL_191;
    }
    if ((unint64_t)v3 >= 2)
    {
      v9 = 0;
      v10 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v12 = *(_QWORD *)(v10 + 8 * i);
        v13 = v9;
        do
        {
          v14 = *(_QWORD *)(v10 + v13);
          if (*(_QWORD *)(v14 + 32) >= *(_QWORD *)(v12 + 32))
            break;
          if (!v10)
            goto LABEL_186;
          *(_QWORD *)(v10 + v13 + 8) = v14;
          *(_QWORD *)(v10 + v13) = v12;
          v13 -= 8;
        }
        while (v13 != -8);
        v9 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_191:
      result = sub_249F1FBC8();
      __break(1u);
      return result;
    }
    v117 = result;
    v119 = v1;
    v115 = a1;
    if (v3 >= 2)
    {
      v6 = v5 >> 1;
      type metadata accessor for WordCloudImageGenerator.WordModel();
      v7 = sub_249F1F58C();
      *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
      v129 = v7;
      goto LABEL_18;
    }
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v129 = MEMORY[0x24BEE4AF8];
    v8 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_18:
      v16 = 0;
      v17 = *a1;
      v116 = v17 - 8;
      v15 = (char *)MEMORY[0x24BEE4AF8];
      v18 = v3;
      v118 = v3;
      __dst = v8;
      v123 = v17;
      while (1)
      {
        v20 = v16 + 1;
        if (v16 + 1 < v18)
        {
          v21 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v20) + 32);
          v22 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v16) + 32);
          v20 = v16 + 2;
          if (v16 + 2 < v18)
          {
            v23 = v21;
            while (1)
            {
              v24 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v20) + 32);
              if (v22 < v21 == v23 >= v24)
                break;
              ++v20;
              v23 = v24;
              if (v18 == v20)
              {
                v20 = v18;
                break;
              }
            }
          }
          if (v22 < v21)
          {
            if (v20 < v16)
              goto LABEL_181;
            if (v16 < v20)
            {
              v25 = (uint64_t *)(v116 + 8 * v20);
              v26 = v20;
              v27 = v16;
              v28 = (uint64_t *)(v17 + 8 * v16);
              do
              {
                if (v27 != --v26)
                {
                  if (!v17)
                    goto LABEL_188;
                  v29 = *v28;
                  *v28 = *v25;
                  *v25 = v29;
                }
                ++v27;
                --v25;
                ++v28;
              }
              while (v27 < v26);
            }
          }
        }
        if (v20 < v18)
        {
          if (__OFSUB__(v20, v16))
            goto LABEL_176;
          if (v20 - v16 < v117)
          {
            v30 = v16 + v117;
            if (__OFADD__(v16, v117))
              goto LABEL_182;
            if (v30 >= v18)
              v30 = v18;
            if (v30 < v16)
              goto LABEL_183;
            if (v20 != v30)
            {
              v31 = (_QWORD *)(v116 + 8 * v20);
              do
              {
                v32 = *(_QWORD *)(v17 + 8 * v20);
                v33 = v16;
                v34 = v31;
                do
                {
                  v35 = *v34;
                  if (*(_QWORD *)(*v34 + 32) >= *(_QWORD *)(v32 + 32))
                    break;
                  if (!v17)
                    goto LABEL_184;
                  *v34 = v32;
                  v34[1] = v35;
                  --v34;
                  ++v33;
                }
                while (v20 != v33);
                ++v20;
                ++v31;
              }
              while (v20 != v30);
              v20 = v30;
            }
          }
        }
        if (v20 < v16)
          goto LABEL_175;
        v120 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_249E74C00(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        v8 = __dst;
        v37 = *((_QWORD *)v15 + 2);
        v36 = *((_QWORD *)v15 + 3);
        v19 = v37 + 1;
        if (v37 >= v36 >> 1)
        {
          v107 = sub_249E74C00((char *)(v36 > 1), v37 + 1, 1, v15);
          v8 = __dst;
          v15 = v107;
        }
        *((_QWORD *)v15 + 2) = v19;
        v38 = v15 + 32;
        v39 = &v15[16 * v37 + 32];
        *(_QWORD *)v39 = v16;
        *((_QWORD *)v39 + 1) = v120;
        if (v37)
          break;
        v19 = 1;
LABEL_20:
        v18 = v118;
        v16 = v120;
        if (v120 >= v118)
          goto LABEL_147;
      }
      v124 = v15 + 32;
      v121 = v15;
      while (1)
      {
        v40 = v19 - 1;
        if (v19 >= 4)
        {
          v45 = &v38[16 * v19];
          v46 = *((_QWORD *)v45 - 8);
          v47 = *((_QWORD *)v45 - 7);
          v51 = __OFSUB__(v47, v46);
          v48 = v47 - v46;
          if (v51)
            goto LABEL_164;
          v50 = *((_QWORD *)v45 - 6);
          v49 = *((_QWORD *)v45 - 5);
          v51 = __OFSUB__(v49, v50);
          v43 = v49 - v50;
          v44 = v51;
          if (v51)
            goto LABEL_165;
          v52 = v19 - 2;
          v53 = &v38[16 * v19 - 32];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v51 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v51)
            goto LABEL_167;
          v51 = __OFADD__(v43, v56);
          v57 = v43 + v56;
          if (v51)
            goto LABEL_170;
          if (v57 >= v48)
          {
            v75 = &v38[16 * v40];
            v77 = *(_QWORD *)v75;
            v76 = *((_QWORD *)v75 + 1);
            v51 = __OFSUB__(v76, v77);
            v78 = v76 - v77;
            if (v51)
              goto LABEL_174;
            v68 = v43 < v78;
            goto LABEL_90;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v69 = *((_QWORD *)v15 + 4);
            v70 = *((_QWORD *)v15 + 5);
            v51 = __OFSUB__(v70, v69);
            v62 = v70 - v69;
            v63 = v51;
            goto LABEL_84;
          }
          v42 = *((_QWORD *)v15 + 4);
          v41 = *((_QWORD *)v15 + 5);
          v51 = __OFSUB__(v41, v42);
          v43 = v41 - v42;
          v44 = v51;
        }
        if ((v44 & 1) != 0)
          goto LABEL_166;
        v52 = v19 - 2;
        v58 = &v38[16 * v19 - 32];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v61 = __OFSUB__(v59, v60);
        v62 = v59 - v60;
        v63 = v61;
        if (v61)
          goto LABEL_169;
        v64 = &v38[16 * v40];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v51 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v51)
          goto LABEL_172;
        if (__OFADD__(v62, v67))
          goto LABEL_173;
        if (v62 + v67 >= v43)
        {
          v68 = v43 < v67;
LABEL_90:
          if (v68)
            v40 = v52;
          goto LABEL_92;
        }
LABEL_84:
        if ((v63 & 1) != 0)
          goto LABEL_168;
        v71 = &v38[16 * v40];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v51 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v51)
          goto LABEL_171;
        if (v74 < v62)
          goto LABEL_20;
LABEL_92:
        if (v40 - 1 >= v19)
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        if (!v17)
          goto LABEL_187;
        v79 = v15;
        v128 = v40 - 1;
        v127 = &v38[16 * v40 - 16];
        v80 = *(_QWORD *)v127;
        v81 = &v38[16 * v40];
        v82 = *(_QWORD *)v81;
        v83 = *((_QWORD *)v81 + 1);
        v126 = v81;
        v84 = (char *)(v17 + 8 * *(_QWORD *)v127);
        v85 = (char *)(v17 + 8 * *(_QWORD *)v81);
        v86 = (char *)(v17 + 8 * v83);
        v87 = v85 - v84;
        v88 = v85 - v84 + 7;
        if (v85 - v84 >= 0)
          v88 = v85 - v84;
        v89 = v88 >> 3;
        v90 = v86 - v85;
        v91 = v86 - v85 + 7;
        if (v86 - v85 >= 0)
          v91 = v86 - v85;
        v92 = v91 >> 3;
        if (v89 >= v91 >> 3)
        {
          if (v90 < -7)
            goto LABEL_190;
          v38 = v124;
          if (v8 >= v86 || (v15 = v79, v8 != v85))
          {
            v98 = v40;
            v99 = *(_QWORD *)v127;
            memmove(v8, v85, 8 * v92);
            v38 = v124;
            v8 = __dst;
            v80 = v99;
            v15 = v121;
            v40 = v98;
          }
          v94 = &v8[8 * v92];
          if (v80 >= v82 || v90 < 8)
          {
            v95 = v8;
            v17 = v123;
            goto LABEL_135;
          }
          v17 = v123;
          while (2)
          {
            v100 = *((_QWORD *)v85 - 1);
            if (*(_QWORD *)(v100 + 32) >= *(_QWORD *)(*((_QWORD *)v94 - 1) + 32))
            {
              v100 = *((_QWORD *)v94 - 1);
              v97 = v86 == v94;
              v94 -= 8;
              if (!v97)
                goto LABEL_127;
            }
            else
            {
              v97 = v86 == v85;
              v85 -= 8;
              if (!v97)
LABEL_127:
                *((_QWORD *)v86 - 1) = v100;
            }
            if (v84 >= v85 || (v86 -= 8, v8 >= v94))
            {
              v95 = v8;
              goto LABEL_135;
            }
            continue;
          }
        }
        if (v87 < -7)
          goto LABEL_190;
        v17 = v123;
        if (v8 != v84 || v8 >= v85)
        {
          v93 = v40;
          v122 = *(_QWORD *)v127;
          memmove(v8, v84, 8 * v89);
          v80 = v122;
          v17 = v123;
          v40 = v93;
          v8 = __dst;
        }
        v94 = &v8[8 * v89];
        if (v82 >= v83)
        {
          v95 = v8;
          v85 = v84;
          v15 = v79;
        }
        else
        {
          v15 = v79;
          v95 = v8;
          if (v87 >= 8)
          {
            v38 = v124;
            while (1)
            {
              v96 = *(_QWORD *)v85;
              if (*(_QWORD *)(*(_QWORD *)v95 + 32) >= *(_QWORD *)(*(_QWORD *)v85 + 32))
                break;
              v97 = v84 == v85;
              v85 += 8;
              if (!v97)
                goto LABEL_111;
LABEL_112:
              v84 += 8;
              if (v95 >= v94 || v85 >= v86)
              {
                v85 = v84;
                goto LABEL_135;
              }
            }
            v96 = *(_QWORD *)v95;
            v97 = v84 == v95;
            v95 += 8;
            if (v97)
              goto LABEL_112;
LABEL_111:
            *(_QWORD *)v84 = v96;
            goto LABEL_112;
          }
          v85 = v84;
        }
        v38 = v124;
LABEL_135:
        v101 = v94 - v95;
        v102 = v94 - v95 + 7;
        if (v101 >= 0)
          v102 = v101;
        if (v101 <= -8)
          goto LABEL_190;
        v103 = v102 >> 3;
        if (v85 != v95 || v85 >= &v95[8 * v103])
        {
          v104 = v40;
          v105 = v80;
          memmove(v85, v95, 8 * v103);
          v80 = v105;
          v40 = v104;
        }
        if (v83 < v80)
          goto LABEL_161;
        if (v40 > *((_QWORD *)v15 + 2))
          goto LABEL_162;
        *(_QWORD *)v127 = v80;
        *(_QWORD *)&v38[16 * v128 + 8] = v83;
        v106 = *((_QWORD *)v15 + 2);
        if (v40 >= (uint64_t)v106)
          goto LABEL_163;
        v19 = v106 - 1;
        memmove(v126, v126 + 16, 16 * (v106 - 1 - v40));
        *((_QWORD *)v15 + 2) = v106 - 1;
        v8 = __dst;
        if (v106 <= 2)
          goto LABEL_20;
      }
    }
    v19 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_147:
    if (v19 >= 2)
    {
      v108 = *v115;
      while (1)
      {
        v109 = v19 - 2;
        if (v19 < 2)
          break;
        if (!v108)
          goto LABEL_189;
        v110 = v8;
        v111 = *(_QWORD *)&v15[16 * v109 + 32];
        v112 = *(_QWORD *)&v15[16 * v19 + 24];
        sub_249DD8308((char *)(v108 + 8 * v111), (char *)(v108 + 8 * *(_QWORD *)&v15[16 * v19 + 16]), v108 + 8 * v112, v8);
        if (v119)
          goto LABEL_158;
        if (v112 < v111)
          goto LABEL_178;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_249E750A8((uint64_t)v15);
        if (v109 >= *((_QWORD *)v15 + 2))
          goto LABEL_179;
        v113 = &v15[16 * v109 + 32];
        *(_QWORD *)v113 = v111;
        *((_QWORD *)v113 + 1) = v112;
        v114 = *((_QWORD *)v15 + 2);
        if (v19 > v114)
          goto LABEL_180;
        memmove(&v15[16 * v19 + 16], &v15[16 * v19 + 32], 16 * (v114 - v19));
        *((_QWORD *)v15 + 2) = v114 - 1;
        v19 = v114 - 1;
        v8 = v110;
        if (v114 <= 2)
          goto LABEL_158;
      }
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
      goto LABEL_185;
    }
LABEL_158:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v129 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_249F1F55C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249DD8308(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(_QWORD *)(v20 + 32) >= *(_QWORD *)(*((_QWORD *)v16 - 1) + 32))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)(*(_QWORD *)v4 + 32) >= *(_QWORD *)(*(_QWORD *)v6 + 32))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_249E74E4C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_249F1FC28();
  __break(1u);
  return result;
}

unint64_t sub_249DD8584()
{
  unint64_t result;

  result = qword_2578D77C8;
  if (!qword_2578D77C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F233F8, &type metadata for WordCloudImageGenerator.RNG);
    atomic_store(result, (unint64_t *)&qword_2578D77C8);
  }
  return result;
}

uint64_t sub_249DD85C8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_249DD8650(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v23 = MEMORY[0x24BEE4AF8];
    sub_249F1FB44();
    result = sub_249DD85C8(a1);
    v5 = result;
    v7 = v6;
    v8 = 0;
    v9 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      v11 = (unint64_t)v5 >> 6;
      if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v7)
        goto LABEL_23;
      v22 = v8;
      v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
      v13 = *v12;
      v14 = v12[1];
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      a2(v13, v14, v15);
      swift_bridgeObjectRelease();
      sub_249F1FB20();
      sub_249F1FB50();
      sub_249F1FB5C();
      result = sub_249F1FB2C();
      v10 = 1 << *(_BYTE *)(a1 + 32);
      if (v5 >= v10)
        goto LABEL_24;
      v16 = *(_QWORD *)(v9 + 8 * v11);
      if ((v16 & (1 << v5)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v7)
        goto LABEL_26;
      v17 = v16 & (-2 << (v5 & 0x3F));
      if (v17)
      {
        v10 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v18 = v11 + 1;
        v19 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v19)
        {
          v20 = *(_QWORD *)(v9 + 8 * v18);
          if (v20)
          {
LABEL_18:
            v10 = __clz(__rbit64(v20)) + (v18 << 6);
          }
          else
          {
            while (v19 - 2 != v11)
            {
              v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
              if (v20)
              {
                v18 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v8 = v22 + 1;
      v5 = v10;
      if (v22 + 1 == v3)
        return v23;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_249DD885C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;
  char v6;

  v3 = *a1;
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_2578D7E08;
  swift_bridgeObjectRetain();
  v5 = sub_249E3A9F4(v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    if (*(_QWORD *)(a2 + 16))
      v6 = sub_249E3A9F4(v3, a2);
    else
      v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_249DD8920(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = a2;
  v3 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  type metadata accessor for NamedEntityData.NamedEntityType(0);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for NamedEntityData(0);
  v2[14] = swift_task_alloc();
  v4 = type metadata accessor for Concept(0);
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = sub_249F1E584();
  v2[19] = swift_task_alloc();
  v2[20] = *(_QWORD *)(type metadata accessor for ResolvedTextPrompt(0) - 8);
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DD8A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64[3];

  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for GenerationRecipe(0);
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 48));
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  v63 = v0;
  v59 = v2;
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 160);
    v64[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB673C(0, v4, 0);
    v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    do
    {
      v9 = *(_QWORD *)(v63 + 168);
      sub_249DC091C(v7, v9, type metadata accessor for ResolvedTextPrompt);
      sub_249F1E56C();
      sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
      v10 = sub_249F1F4C0();
      v12 = v11;
      sub_249DC05A8(v9, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB673C(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v64[0];
      }
      v14 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_249DB673C(v13 > 1, v14 + 1, 1);
        v5 = v64[0];
      }
      *(_QWORD *)(v5 + 16) = v14 + 1;
      v15 = v5 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v7 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v0 = v63;
    v16 = v59;
  }
  else
  {
    v16 = v2;
  }
  v17 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v18 + 64);
    if (*(_QWORD *)(v19 + 16))
      v20 = *(_BYTE *)(v19 + 32);
    else
      v20 = 5;
    v58 = v20;
    v23 = sub_249DAEA08(MEMORY[0x24BEE4AF8]);
    v24 = *(_QWORD *)(v18 + *(int *)(v16 + 76));
    if (*(_QWORD *)(v24 + 16))
    {
      v25 = v24
          + ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 128) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 128) + 80));
      swift_bridgeObjectRetain();
      sub_249DC091C(v25, *(_QWORD *)(v0 + 136), type metadata accessor for Concept);
      v26 = (char *)&loc_249DD8D50 + *((int *)qword_249DD9470 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    v27 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + *(int *)(v16 + 52));
    v28 = *(_QWORD *)(v27 + 16);
    v29 = MEMORY[0x24BEE4AF8];
    if (v28)
    {
      v61 = v23;
      v30 = *(_QWORD *)(v0 + 160);
      v64[0] = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_249DB673C(0, v28, 0);
      v31 = v27 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      v32 = *(_QWORD *)(v30 + 72);
      do
      {
        v33 = *(_QWORD *)(v63 + 168);
        sub_249DC091C(v31, v33, type metadata accessor for ResolvedTextPrompt);
        sub_249F1E56C();
        sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
        v34 = sub_249F1F4C0();
        v36 = v35;
        sub_249DC05A8(v33, type metadata accessor for ResolvedTextPrompt);
        v29 = v64[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249DB673C(0, *(_QWORD *)(v64[0] + 16) + 1, 1);
          v29 = v64[0];
        }
        v38 = *(_QWORD *)(v29 + 16);
        v37 = *(_QWORD *)(v29 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_249DB673C(v37 > 1, v38 + 1, 1);
          v29 = v64[0];
        }
        *(_QWORD *)(v29 + 16) = v38 + 1;
        v39 = v29 + 16 * v38;
        *(_QWORD *)(v39 + 32) = v34;
        *(_QWORD *)(v39 + 40) = v36;
        v31 += v32;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      v0 = v63;
      v23 = v61;
    }
    v40 = *(_QWORD *)(v29 + 16);
    if (v40)
    {
      v60 = *(_QWORD *)(v0 + 64);
      v41 = (uint64_t *)(v29 + 40);
      do
      {
        v42 = *(v41 - 1);
        v43 = *v41;
        v44 = *(_QWORD *)(v23 + 16);
        swift_bridgeObjectRetain();
        v62 = v23;
        if (v44 && (v45 = sub_249DB7D8C(v42, v43), (v46 & 1) != 0))
          v47 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v45);
        else
          v47 = 0;
        v48 = *(_QWORD *)(v63 + 64);
        *(_QWORD *)(v63 + 40) = 10;
        __swift_mutable_project_boxed_opaque_existential_1(v48, *(_QWORD *)(v60 + 24));
        sub_249DD9574();
        sub_249DD95B8();
        sub_249F1F214();
        v49 = *(_QWORD *)(v63 + 32);
        if (v49 < 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          JUMPOUT(0x249DD9470);
        }
        v50 = v49 - 5;
        v51 = v47 - v50;
        if (__OFSUB__(v47, v50))
          goto LABEL_36;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v64[0] = v62;
        sub_249DD1C6C(v51, v42, v43, isUniquelyReferenced_nonNull_native);
        v23 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 += 2;
        --v40;
      }
      while (v40);
    }
    v53 = *(_QWORD *)(v63 + 64);
    swift_bridgeObjectRelease();
    v54 = swift_task_alloc();
    *(_BYTE *)(v54 + 16) = v58;
    *(_QWORD *)(v54 + 24) = v53;
    v55 = swift_bridgeObjectRetain();
    v56 = sub_249DD8650(v55, (void (*)(uint64_t, uint64_t, uint64_t))sub_249DD95FC);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v64[0] = v56;
    sub_249DD65CC(v64);
    v57 = v64[0];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v63 + 8))(v57);
  }
  else
  {
    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)(v21 + 8) = 0;
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)v21 = 0;
    *(_BYTE *)(v21 + 24) = 8;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249DD9484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DD94CC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DD950C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_249DD9530()
{
  unint64_t result;

  result = qword_2578DB010;
  if (!qword_2578DB010)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GeneratorError, &type metadata for GeneratorError);
    atomic_store(result, (unint64_t *)&qword_2578DB010);
  }
  return result;
}

unint64_t sub_249DD9574()
{
  unint64_t result;

  result = qword_2578D77D8;
  if (!qword_2578D77D8)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE1EC8], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_2578D77D8);
  }
  return result;
}

unint64_t sub_249DD95B8()
{
  unint64_t result;

  result = qword_2578D77E0;
  if (!qword_2578D77E0)
  {
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE1EB0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_2578D77E0);
  }
  return result;
}

uint64_t sub_249DD95FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_249DD6428(a1, a2, a3, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_249DD9608(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for WordCloudImageGenerator.Descriptor()
{
  return &type metadata for WordCloudImageGenerator.Descriptor;
}

uint64_t _s14GenerationTaskC8ProgressVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14GenerationTaskC8ProgressVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14GenerationTaskC8ProgressVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14GenerationTaskC8ProgressVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14GenerationTaskC8ProgressVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s14GenerationTaskC8ProgressVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WordCloudImageGenerator.ProgressInfo()
{
  return &type metadata for WordCloudImageGenerator.ProgressInfo;
}

ValueMetadata *type metadata accessor for WordCloudImageGenerator.RNG()
{
  return &type metadata for WordCloudImageGenerator.RNG;
}

uint64_t GenerativePlayground.imageGeneratorIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249DD9828()
{
  uint64_t v0;

  v0 = sub_249F1EF38();
  __swift_allocate_value_buffer(v0, qword_2578FF300);
  __swift_project_value_buffer(v0, (uint64_t)qword_2578FF300);
  return sub_249F1EF2C();
}

uint64_t sub_249DD98A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_249DD9918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  if (a4 >= a3)
    v4 = a3;
  else
    v4 = a4;
  if (a2 >= a1)
    v5 = a1;
  else
    v5 = a2;
  if (a4 <= a3)
    v6 = a3;
  else
    v6 = a4;
  if (a2 <= a1)
    v7 = a1;
  else
    v7 = a2;
  v8 = v6 < v7;
  if (v5 < v4)
    v8 = 0;
  return v4 < v5 || v8;
}

uint64_t sub_249DD9958(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  __int128 v22;
  uint64_t v23;

  v4 = MEMORY[0x24BEE4B08];
  v23 = MEMORY[0x24BEE4B08];
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v9 = a4 ^ 1;
    if (a2 <= a1)
      v10 = a1;
    else
      v10 = a2;
    if (a2 >= a1)
      v11 = a1;
    else
      v11 = a2;
    swift_bridgeObjectRetain();
    v12 = (uint64_t *)(a3 + 40);
    do
    {
      v13 = *(v12 - 1);
      v14 = *v12;
      v16 = v13 == a1 && v14 == a2;
      if (((v16 | v9) & 1) != 0
        || (v14 <= v13 ? (v17 = *(v12 - 1)) : (v17 = *v12),
            v14 >= v13 ? (v18 = *(v12 - 1)) : (v18 = *v12),
            v10 >= v17 ? (v19 = v11 < v18) : (v19 = 1),
            !v19))
      {
        sub_249DB3858(&v22, v13, v14);
      }
      v12 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v4 = v23;
  }
  swift_bridgeObjectRetain_n();
  v20 = sub_249DBDDE0(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v22 = v20;
  sub_249DB1D54((uint64_t *)&v22);
  swift_bridgeObjectRelease_n();
  return v22;
}

uint64_t sub_249DD9A80(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v9)(uint64_t *, __int128 *, uint64_t, uint64_t);
  uint64_t i;
  _QWORD *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16[3];
  uint64_t v17;

  v13 = *a1;
  v4 = MEMORY[0x24BEE4B08];
  v17 = MEMORY[0x24BEE4B08];
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v9 = *(uint64_t (**)(uint64_t *, __int128 *, uint64_t, uint64_t))(a4 + 16);
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
    {
      v14 = *(_OWORD *)(a2 + 16 * i + 32);
      v15 = v14;
      *(_OWORD *)v16 = v13;
      if ((v9(v16, &v15, a3, a4) & 1) != 0)
        sub_249DB3858(v16, v14, *((uint64_t *)&v14 + 1));
    }
    swift_bridgeObjectRelease();
    v4 = v17;
  }
  swift_bridgeObjectRetain_n();
  v11 = sub_249DBDDE0(v4);
  swift_bridgeObjectRelease();
  v16[0] = (uint64_t)v11;
  sub_249DB1D54(v16);
  swift_bridgeObjectRelease_n();
  return v16[0];
}

uint64_t sub_249DD9BAC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a3;
  return swift_task_switch();
}

uint64_t sub_249DD9BC8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7800);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_249DD9C88;
  return sub_249F1FC58();
}

uint64_t sub_249DD9C88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DD9CF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_249DD9D00(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a3;
  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_249DD9D20()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7800);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v0 + 16;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_249DD9DEC;
  return sub_249F1FC58();
}

uint64_t sub_249DD9DEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DD9E58()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_249DD9E68()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DD9E9C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 65) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a3;
  *(_BYTE *)(v4 + 64) = a4;
  return swift_task_switch();
}

uint64_t sub_249DD9EBC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 65);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7800);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v0 + 64;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_249DD9C88;
  return sub_249F1FC58();
}

uint64_t sub_249DD9F88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 81) = a4;
  *(_QWORD *)(v4 + 112) = a2;
  *(_QWORD *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 104) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  *(_QWORD *)(v4 + 136) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7820);
  *(_QWORD *)(v4 + 144) = v5;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DDA028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  char v27;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 168) = sub_249DCA52C(MEMORY[0x24BEE4AF8]);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 112);
    v25 = *(void **)(v0 + 120);
    v4 = sub_249F1F604();
    v5 = *(_QWORD *)(v4 - 8);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v26 = v2;
      v9 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 136);
      v27 = *(_BYTE *)(v0 + 81);
      v10 = *(_QWORD *)(v0 + 120);
      v11 = v5;
      v13 = *(v6 - 1);
      v12 = *v6;
      v24(v8, 1, 1, v4);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = 0;
      *(_QWORD *)(v14 + 32) = v10;
      *(_BYTE *)(v14 + 40) = v27;
      *(_QWORD *)(v14 + 48) = v13;
      *(_QWORD *)(v14 + 56) = v12;
      v5 = v11;
      sub_249DDC154(v8, v9);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v4);
      v15 = v25;
      v16 = *(_QWORD *)(v0 + 128);
      if ((_DWORD)v9 == 1)
      {
        sub_249DDC19C(*(_QWORD *)(v0 + 128));
      }
      else
      {
        sub_249F1F5F8();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v4);
      }
      if (*(_QWORD *)(v14 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v17 = sub_249F1F5B0();
        v19 = v18;
        swift_unknownObjectRelease();
      }
      else
      {
        v17 = 0;
        v19 = 0;
      }
      v20 = **(_QWORD **)(v0 + 104);
      v21 = v19 | v17;
      if (v19 | v17)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v17;
        *(_QWORD *)(v0 + 40) = v19;
      }
      v6 += 2;
      v7 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v20;
      swift_task_create();
      swift_release();
      sub_249DDC19C(v7);
      v2 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  sub_249F1F67C();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v22;
  *v22 = v0;
  v22[1] = sub_249DDA2D8;
  return sub_249F1F694();
}

uint64_t sub_249DDA2D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 184) = *(_QWORD *)(v2 + 168);
  return swift_task_switch();
}

id sub_249DDA348()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  CGImage *v3;
  size_t Width;
  size_t Height;
  __CVBuffer *v6;
  id result;
  double v8;
  double v9;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  char v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  size_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(void **)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 > 1)
  {
    if (v2 != 2)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 184));
    }
    v6 = v1;
    Width = CVPixelBufferGetWidth(v6);
    Height = CVPixelBufferGetHeight(v6);
    goto LABEL_15;
  }
  if (!*(_BYTE *)(v0 + 80))
  {
    v3 = v1;
    Width = CGImageGetWidth(v3);
    Height = CGImageGetHeight(v3);
LABEL_15:
    v11 = *(_QWORD *)(v0 + 184);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 96) = v11;
    v14 = sub_249DB8068(Width, Height);
    v15 = *(_QWORD *)(v11 + 16);
    v16 = (v13 & 1) == 0;
    result = (id)(v15 + v16);
    if (__OFADD__(v15, v16))
    {
      __break(1u);
    }
    else
    {
      v17 = v13;
      if (*(_QWORD *)(*(_QWORD *)(v0 + 184) + 24) >= (uint64_t)result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          result = sub_249DBD468();
      }
      else
      {
        sub_249DBAC5C((uint64_t)result, isUniquelyReferenced_nonNull_native);
        result = (id)sub_249DB8068(Width, Height);
        if ((v17 & 1) != (v18 & 1))
          return (id)sub_249F1FF10();
        v14 = (unint64_t)result;
      }
      v19 = *(_QWORD **)(v0 + 96);
      *(_QWORD *)(v0 + 192) = v19;
      if ((v17 & 1) != 0)
      {
        v20 = v19[7] + 16 * v14;

        *(_QWORD *)v20 = v1;
        *(_BYTE *)(v20 + 8) = v2;
LABEL_27:
        swift_bridgeObjectRelease();
        sub_249DC0794(v1, v2);
        v26 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 200) = v26;
        *v26 = v0;
        v26[1] = sub_249DDA6C4;
        return (id)sub_249F1F694();
      }
      v19[(v14 >> 6) + 8] |= 1 << v14;
      v21 = (size_t *)(v19[6] + 16 * v14);
      *v21 = Width;
      v21[1] = Height;
      v22 = v19[7] + 16 * v14;
      *(_QWORD *)v22 = v1;
      *(_BYTE *)(v22 + 8) = v2;
      v23 = v19[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (!v24)
      {
        v19[2] = v25;
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  result = objc_msgSend(v1, sel_extent);
  if (v8 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((*(_QWORD *)&v8 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v9 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_32;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v9 < 9.22337204e18)
  {
    Width = (uint64_t)v8;
    Height = (uint64_t)v9;
    goto LABEL_15;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_249DDA660()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DDA6C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 184) = *(_QWORD *)(v2 + 192);
  return swift_task_switch();
}

uint64_t sub_249DDA734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + 81) = a6;
  *(_QWORD *)(v6 + 128) = a4;
  *(_QWORD *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 112) = a2;
  *(_QWORD *)(v6 + 120) = a3;
  *(_QWORD *)(v6 + 104) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  *(_QWORD *)(v6 + 144) = swift_task_alloc();
  *(_QWORD *)(v6 + 152) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7820);
  *(_QWORD *)(v6 + 160) = v7;
  *(_QWORD *)(v6 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 176) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DDA7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 184) = sub_249DCA52C(MEMORY[0x24BEE4AF8]);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v25 = *(void **)(v0 + 136);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = sub_249F1F604();
    v5 = *(_QWORD *)(v4 - 8);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v26 = v2;
      v9 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      v29 = *(_BYTE *)(v0 + 81);
      v10 = *(_QWORD *)(v0 + 128);
      v11 = v5;
      v12 = *(_QWORD *)(v0 + 120);
      v13 = *v6;
      v27 = *(v6 - 1);
      v28 = *(_QWORD *)(v0 + 136);
      v24(v8, 1, 1, v4);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = 0;
      *(_QWORD *)(v14 + 32) = v12;
      v5 = v11;
      *(_QWORD *)(v14 + 40) = v10;
      *(_QWORD *)(v14 + 48) = v28;
      *(_BYTE *)(v14 + 56) = v29;
      *(_QWORD *)(v14 + 64) = v27;
      *(_QWORD *)(v14 + 72) = v13;
      sub_249DDC154(v8, v9);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v4);
      swift_bridgeObjectRetain();
      v15 = v25;
      v16 = *(_QWORD *)(v0 + 144);
      if ((_DWORD)v9 == 1)
      {
        sub_249DDC19C(*(_QWORD *)(v0 + 144));
      }
      else
      {
        sub_249F1F5F8();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v4);
      }
      if (*(_QWORD *)(v14 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v17 = sub_249F1F5B0();
        v19 = v18;
        swift_unknownObjectRelease();
      }
      else
      {
        v17 = 0;
        v19 = 0;
      }
      v20 = **(_QWORD **)(v0 + 104);
      v21 = v19 | v17;
      if (v19 | v17)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v17;
        *(_QWORD *)(v0 + 40) = v19;
      }
      v6 += 2;
      v7 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v20;
      swift_task_create();
      swift_release();
      sub_249DDC19C(v7);
      v2 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  sub_249F1F67C();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v22;
  *v22 = v0;
  v22[1] = sub_249DDAAA8;
  return sub_249F1F694();
}

uint64_t sub_249DDAAA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 200) = *(_QWORD *)(v2 + 184);
  return swift_task_switch();
}

id sub_249DDAB18()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  CGImage *v3;
  size_t Width;
  size_t Height;
  __CVBuffer *v6;
  id result;
  double v8;
  double v9;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  char v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  size_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(void **)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 > 1)
  {
    if (v2 != 2)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
    }
    v6 = v1;
    Width = CVPixelBufferGetWidth(v6);
    Height = CVPixelBufferGetHeight(v6);
    goto LABEL_15;
  }
  if (!*(_BYTE *)(v0 + 80))
  {
    v3 = v1;
    Width = CGImageGetWidth(v3);
    Height = CGImageGetHeight(v3);
LABEL_15:
    v11 = *(_QWORD *)(v0 + 200);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 96) = v11;
    v14 = sub_249DB8068(Width, Height);
    v15 = *(_QWORD *)(v11 + 16);
    v16 = (v13 & 1) == 0;
    result = (id)(v15 + v16);
    if (__OFADD__(v15, v16))
    {
      __break(1u);
    }
    else
    {
      v17 = v13;
      if (*(_QWORD *)(*(_QWORD *)(v0 + 200) + 24) >= (uint64_t)result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          result = sub_249DBD468();
      }
      else
      {
        sub_249DBAC5C((uint64_t)result, isUniquelyReferenced_nonNull_native);
        result = (id)sub_249DB8068(Width, Height);
        if ((v17 & 1) != (v18 & 1))
          return (id)sub_249F1FF10();
        v14 = (unint64_t)result;
      }
      v19 = *(_QWORD **)(v0 + 96);
      *(_QWORD *)(v0 + 208) = v19;
      if ((v17 & 1) != 0)
      {
        v20 = v19[7] + 16 * v14;

        *(_QWORD *)v20 = v1;
        *(_BYTE *)(v20 + 8) = v2;
LABEL_27:
        swift_bridgeObjectRelease();
        sub_249DC0794(v1, v2);
        v26 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 216) = v26;
        *v26 = v0;
        v26[1] = sub_249DDAE94;
        return (id)sub_249F1F694();
      }
      v19[(v14 >> 6) + 8] |= 1 << v14;
      v21 = (size_t *)(v19[6] + 16 * v14);
      *v21 = Width;
      v21[1] = Height;
      v22 = v19[7] + 16 * v14;
      *(_QWORD *)v22 = v1;
      *(_BYTE *)(v22 + 8) = v2;
      v23 = v19[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (!v24)
      {
        v19[2] = v25;
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  result = objc_msgSend(v1, sel_extent);
  if (v8 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((*(_QWORD *)&v8 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v9 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_32;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v9 < 9.22337204e18)
  {
    Width = (uint64_t)v8;
    Height = (uint64_t)v9;
    goto LABEL_15;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_249DDAE30()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DDAE94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 200) = *(_QWORD *)(v2 + 208);
  return swift_task_switch();
}

uint64_t sub_249DDAF04(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 82) = a5;
  *(_QWORD *)(v5 + 112) = a2;
  *(_QWORD *)(v5 + 120) = a4;
  *(_BYTE *)(v5 + 81) = a3;
  *(_QWORD *)(v5 + 104) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7820);
  *(_QWORD *)(v5 + 144) = v6;
  *(_QWORD *)(v5 + 152) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DDAFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v25;
  char v26;
  uint64_t v27;
  char v28;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 168) = sub_249DCA52C(MEMORY[0x24BEE4AF8]);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v26 = *(_BYTE *)(v0 + 81);
    v3 = *(_QWORD *)(v0 + 112);
    v25 = *(void **)(v0 + 120);
    v4 = sub_249F1F604();
    v5 = *(_QWORD *)(v4 - 8);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v27 = v2;
      v9 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 136);
      v28 = *(_BYTE *)(v0 + 82);
      v10 = *(_QWORD *)(v0 + 120);
      v11 = v5;
      v13 = *(v6 - 1);
      v12 = *v6;
      v24(v8, 1, 1, v4);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = 0;
      *(_BYTE *)(v14 + 32) = v26;
      *(_QWORD *)(v14 + 40) = v10;
      *(_BYTE *)(v14 + 48) = v28;
      *(_QWORD *)(v14 + 56) = v13;
      *(_QWORD *)(v14 + 64) = v12;
      v5 = v11;
      sub_249DDC154(v8, v9);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v4);
      v15 = v25;
      v16 = *(_QWORD *)(v0 + 128);
      if ((_DWORD)v9 == 1)
      {
        sub_249DDC19C(*(_QWORD *)(v0 + 128));
      }
      else
      {
        sub_249F1F5F8();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v4);
      }
      if (*(_QWORD *)(v14 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v17 = sub_249F1F5B0();
        v19 = v18;
        swift_unknownObjectRelease();
      }
      else
      {
        v17 = 0;
        v19 = 0;
      }
      v20 = **(_QWORD **)(v0 + 104);
      v21 = v19 | v17;
      if (v19 | v17)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v17;
        *(_QWORD *)(v0 + 40) = v19;
      }
      v6 += 2;
      v7 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v20;
      swift_task_create();
      swift_release();
      sub_249DDC19C(v7);
      v2 = v27 - 1;
    }
    while (v27 != 1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  sub_249F1F67C();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v22;
  *v22 = v0;
  v22[1] = sub_249DDB270;
  return sub_249F1F694();
}

uint64_t sub_249DDB270()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 184) = *(_QWORD *)(v2 + 168);
  return swift_task_switch();
}

id sub_249DDB2E0()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  CGImage *v3;
  size_t Width;
  size_t Height;
  __CVBuffer *v6;
  id result;
  double v8;
  double v9;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  char v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  size_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(void **)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 > 1)
  {
    if (v2 != 2)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 184));
    }
    v6 = v1;
    Width = CVPixelBufferGetWidth(v6);
    Height = CVPixelBufferGetHeight(v6);
    goto LABEL_15;
  }
  if (!*(_BYTE *)(v0 + 80))
  {
    v3 = v1;
    Width = CGImageGetWidth(v3);
    Height = CGImageGetHeight(v3);
LABEL_15:
    v11 = *(_QWORD *)(v0 + 184);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 96) = v11;
    v14 = sub_249DB8068(Width, Height);
    v15 = *(_QWORD *)(v11 + 16);
    v16 = (v13 & 1) == 0;
    result = (id)(v15 + v16);
    if (__OFADD__(v15, v16))
    {
      __break(1u);
    }
    else
    {
      v17 = v13;
      if (*(_QWORD *)(*(_QWORD *)(v0 + 184) + 24) >= (uint64_t)result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          result = sub_249DBD468();
      }
      else
      {
        sub_249DBAC5C((uint64_t)result, isUniquelyReferenced_nonNull_native);
        result = (id)sub_249DB8068(Width, Height);
        if ((v17 & 1) != (v18 & 1))
          return (id)sub_249F1FF10();
        v14 = (unint64_t)result;
      }
      v19 = *(_QWORD **)(v0 + 96);
      *(_QWORD *)(v0 + 192) = v19;
      if ((v17 & 1) != 0)
      {
        v20 = v19[7] + 16 * v14;

        *(_QWORD *)v20 = v1;
        *(_BYTE *)(v20 + 8) = v2;
LABEL_27:
        swift_bridgeObjectRelease();
        sub_249DC0794(v1, v2);
        v26 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 200) = v26;
        *v26 = v0;
        v26[1] = sub_249DDB5F8;
        return (id)sub_249F1F694();
      }
      v19[(v14 >> 6) + 8] |= 1 << v14;
      v21 = (size_t *)(v19[6] + 16 * v14);
      *v21 = Width;
      v21[1] = Height;
      v22 = v19[7] + 16 * v14;
      *(_QWORD *)v22 = v1;
      *(_BYTE *)(v22 + 8) = v2;
      v23 = v19[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (!v24)
      {
        v19[2] = v25;
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  result = objc_msgSend(v1, sel_extent);
  if (v8 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((*(_QWORD *)&v8 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v9 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_32;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v9 < 9.22337204e18)
  {
    Width = (uint64_t)v8;
    Height = (uint64_t)v9;
    goto LABEL_15;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_249DDB5F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 184) = *(_QWORD *)(v2 + 192);
  return swift_task_switch();
}

uint64_t sub_249DDB668(uint64_t *a1, uint64_t a2)
{
  return sub_249DDC1DC(*a1, a1[1], a2);
}

uint64_t sub_249DDB678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, char, uint64_t);

  v4 = *(_QWORD *)a1;
  v8 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_2578D77F8 + dword_2578D77F8);
  v5 = *(_BYTE *)(a1 + 8);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_249DDC8E4;
  return v8(v4, v5, a2);
}

uint64_t sub_249DDB6F8(uint64_t *a1, uint64_t a2)
{
  return sub_249DDC674(*a1, a1[1], a2);
}

uint64_t sub_249DDB708(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, char, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)a1;
  v7 = *v2;
  v6 = v2[1];
  v11 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2578D7840 + dword_2578D7840);
  v8 = *(_BYTE *)(a1 + 8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_249DDB798;
  return v11(v5, v8, a2, v7, v6);
}

uint64_t sub_249DDB798(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_249DDB7EC(uint64_t *a1, uint64_t a2)
{
  unsigned __int8 *v2;

  return sub_249DD9958(*a1, a1[1], a2, *v2);
}

uint64_t sub_249DDB800(uint64_t *a1, uint64_t a2)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *a1;
  v6 = *v2;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2578D7878 + dword_2578D7878);
  v7 = *((unsigned __int8 *)a1 + 8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_249DDC8E4;
  return v10(v5, v7, a2, v6);
}

_OWORD *sub_249DDB888(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_249F1FBBC();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_249DCA678(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_249DDB928(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_249DDB978(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_249DDB9C0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = a6[7] + 16 * result;
  *(_QWORD *)v7 = a4;
  *(_BYTE *)(v7 + 8) = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

_OWORD *sub_249DDBA14(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_249DCA678(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_249DDBA7C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_249DCA678(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_249DDBAF4(unint64_t result, char a2, int a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2 & 1;
  v4 = a4[7] + 3 * result;
  *(_WORD *)v4 = a3;
  *(_BYTE *)(v4 + 2) = BYTE2(a3);
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_249DDBB54(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_249DCA734(a3, a4[7] + 48 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_249DDBBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  _QWORD *v11;

  *(_QWORD *)(v6 + 16) = a1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v11;
  *v11 = v6;
  v11[1] = sub_249DDC8E8;
  return sub_249DD9F88(a2, a3, a5, a6);
}

uint64_t sub_249DDBC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2578D7808
                                                                                    + dword_2578D7808))(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_249DDBCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v10;

  *(_QWORD *)(v8 + 32) = a5;
  *(_BYTE *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 16) = a7;
  *(_QWORD *)(v8 + 24) = a8;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 48) = v10;
  *v10 = v8;
  v10[1] = sub_249DDBD3C;
  return sub_249DFBF90(a1, (uint64_t *)(v8 + 32), (_OWORD *)(v8 + 16));
}

uint64_t sub_249DDBD3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249DDBDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  *(_QWORD *)(v6 + 16) = a1;
  v11 = *a4;
  v12 = a4[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v13;
  *v13 = v6;
  v13[1] = sub_249DDC8E8;
  return sub_249DDA734(a2, a3, v11, v12, a5, a6);
}

uint64_t sub_249DDBE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *a4;
  v11 = a4[1];
  *(_QWORD *)(v8 + 32) = a5;
  *(_BYTE *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 16) = a7;
  *(_QWORD *)(v8 + 24) = a8;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 48) = v12;
  *v12 = v8;
  v12[1] = sub_249DDBD3C;
  return sub_249E54194(a1, (uint64_t *)(v8 + 32), (_OWORD *)(v8 + 16), v10, v11);
}

uint64_t sub_249DDBEB8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, char a6)
{
  uint64_t v6;
  char v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v11 = *a4;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_249DDBF38;
  return sub_249DDAF04(a2, a3, v11, a5, a6);
}

uint64_t sub_249DDBF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_249DDBF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v10;

  *(_QWORD *)(v8 + 32) = a5;
  *(_BYTE *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 16) = a7;
  *(_QWORD *)(v8 + 24) = a8;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 48) = v10;
  *v10 = v8;
  v10[1] = sub_249DDC014;
  return sub_249EA6F68(a1, (uint64_t *)(v8 + 32), (_OWORD *)(v8 + 16));
}

uint64_t sub_249DDC014()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249DDC080()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DDC08C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_249DDC0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_2578D7828 + dword_2578D7828))(a1, v4, v5, (uint64_t)&dword_2578D7828 + dword_2578D7828, v6, v9, v7, v8);
}

uint64_t sub_249DDC154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DDC19C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D62B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DDC1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v10;
  uint64_t v12[3];
  uint64_t v13;

  v3 = MEMORY[0x24BEE4B08];
  v13 = MEMORY[0x24BEE4B08];
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)(a3 + 40);
    do
    {
      if (*(v8 - 1) == a1 && *v8 == a2)
        sub_249DB3858(v12, a1, a2);
      v8 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v13;
  }
  swift_bridgeObjectRetain_n();
  v10 = sub_249DBDDE0(v3);
  swift_bridgeObjectRelease();
  v12[0] = (uint64_t)v10;
  sub_249DB1D54(v12);
  swift_bridgeObjectRelease_n();
  return v12[0];
}

id sub_249DDC2CC(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
    return (id)swift_bridgeObjectRetain();
  if (!a5)
    return result;
  return result;
}

void destroy for ImageScalerError(uint64_t a1)
{
  sub_249DDC300(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_249DDC300(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a5)
  {

  }
}

uint64_t initializeWithCopy for ImageScalerError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_249DDC2CC(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ImageScalerError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_249DDC2CC(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_249DDC300(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ImageScalerError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_249DDC300(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageScalerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageScalerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_249DDC4DC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_249DDC4E4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ImageScalerError()
{
  return &type metadata for ImageScalerError;
}

uint64_t sub_249DDC4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(uint64_t **)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, char))((char *)&dword_2578D7848
                                                                                      + dword_2578D7848))(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_249DDC594()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_249DDC5C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (uint64_t *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 56);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, char, uint64_t, uint64_t))((char *)&dword_2578D7860 + dword_2578D7860))(a1, v4, v5, v6, v7, v10, v8, v9);
}

uint64_t sub_249DDC674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t v16[3];
  uint64_t v17;

  v3 = MEMORY[0x24BEE4B08];
  v17 = MEMORY[0x24BEE4B08];
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(a3 + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = v9 == a1 && v10 == a2;
      if (v11 || a1 == a2 && (v9 == v10 ? (v12 = v10 <= a2) : (v12 = 0), v12 ? (v13 = v9 <= a1) : (v13 = 0), v13))
        sub_249DB3858(v16, v9, v10);
      v8 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v17;
  }
  swift_bridgeObjectRetain_n();
  v14 = sub_249DBDDE0(v3);
  swift_bridgeObjectRelease();
  v16[0] = (uint64_t)v14;
  sub_249DB1D54(v16);
  swift_bridgeObjectRelease_n();
  return v16[0];
}

uint64_t sub_249DDC774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(char **)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, char))((char *)&dword_2578D7880
                                                                                   + dword_2578D7880))(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_249DDC80C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_249DDC838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v1 + 32;
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_BYTE *)(v1 + 48);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_249DCC420;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_2578D7898 + dword_2578D7898))(a1, v4, v5, v6, v7, v10, v8, v9);
}

uint64_t sub_249DDC8F0()
{
  uint64_t v0;
  uint64_t result;

  sub_249DB204C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_249F234B0;
  *(_QWORD *)(v0 + 32) = type metadata accessor for AppleDiffusionImageGenerator();
  *(_QWORD *)(v0 + 40) = type metadata accessor for WordCloudImageGenerator();
  *(_QWORD *)(v0 + 48) = type metadata accessor for UnsupportedArchitectureImageGenerator();
  result = type metadata accessor for UnavailableImageGenerator();
  *(_QWORD *)(v0 + 56) = result;
  qword_2578FF318 = v0;
  return result;
}

uint64_t availableImageGeneratorIdentifiers()()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_249DDCA70();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    v2 = sub_249DB673C(0, v1, 0);
    v3 = 0;
    v4 = v12;
    do
    {
      v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 8 * v3 + 32) + 88))(v2);
      v5 = v2;
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        v2 = sub_249DB673C(v8 > 1, v9 + 1, 1);
      ++v3;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

uint64_t sub_249DDCA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (qword_2578D5CF0 != -1)
    swift_once();
  v0 = qword_2578FF318;
  v1 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
  v3 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  do
  {
    v7 = *(_QWORD *)(v0 + 8 * v3 + 32);
    isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(uint64_t))(v7 + 104))(isUniquelyReferenced_nonNull_native);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        isUniquelyReferenced_nonNull_native = sub_249DB6720(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v6 = *(_QWORD *)(v4 + 16);
      v5 = *(_QWORD *)(v4 + 24);
      if (v6 >= v5 >> 1)
        isUniquelyReferenced_nonNull_native = sub_249DB6720(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v4 + 16) = v6 + 1;
      *(_QWORD *)(v4 + 8 * v6 + 32) = v7;
    }
    ++v3;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t dispatch thunk of ImageGeneratorIdentifiable.imageGeneratorIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249DDCBAC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  int *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (int *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_249DDCC00()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_249F1E734();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_249DDCCCC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v27 = v20;
  v28 = v22;
  sub_249F1E71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v23, v21);
  sub_249DDE56C(v22, v27, 0);
  v29 = sub_249F1F394();
  *(_QWORD *)(v26 - 96) = v29;
  *(_QWORD *)(v26 - 88) = v30;
  *(_QWORD *)(v26 - 144) = v22;
  v31 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79E0);
  if (!swift_dynamicCast())
  {
    *(_QWORD *)(v26 - 160) = 0;
    *(_OWORD *)(v26 - 192) = 0u;
    *(_OWORD *)(v26 - 176) = 0u;
    sub_249DDE77C(v26 - 192);
    goto LABEL_5;
  }
  sub_249D9E174((__int128 *)(v26 - 192), v26 - 136);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v26 - 136), *(_QWORD *)(v26 - 112));
  sub_249F1E530();
  v33 = v32;
  __swift_destroy_boxed_opaque_existential_1(v26 - 136);
  if (!v33)
  {
LABEL_5:
    sub_249DDE5A4(v22, v27, 0);
    sub_249DDE5A4(v22, v27, 0);
    goto LABEL_6;
  }
  *(_QWORD *)(v26 - 136) = 8250;
  *(_QWORD *)(v26 - 128) = 0xE200000000000000;
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249DDE5A4(v22, v27, 0);
  sub_249DDE5A4(v22, v27, 0);
  v29 = *(_QWORD *)(v26 - 96);
LABEL_6:
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v21);
  return v29;
}

_QWORD *sub_249DDCF74@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_249DDCF80(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_249DDCF88@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_249DDCF9C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_249DDCFB0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_249DDCFC4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_249DDCFF4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_249DDD020@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_249DDD044(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_249DDD058(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_249DDD06C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_249DDD080@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_249DDD094(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_249DDD0A8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_249DDD0BC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_249DDD0D0()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_249DDD0E0()
{
  return sub_249F1FA00();
}

_QWORD *sub_249DDD0F8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_249DDD10C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_249DDE4B0(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_249DDD148()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  _QWORD *v25;
  id v26[2];

  v1 = v0;
  v26[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = *(void **)(v0 + 16);
  v3 = v2;
  if (!v2)
  {
    if ((*(_BYTE *)(v1 + 24) & 3) != 0)
    {
      v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE85360]), sel_init);
      v5 = v4;
      if ((*(_QWORD *)(v1 + 24) & 4) != 0)
        v6 = 1;
      else
        v6 = 2;
      objc_msgSend(v4, sel_setMode_, v6);
      if ((*(_BYTE *)(v1 + 24) & 2) != 0)
        objc_msgSend(v5, sel_setGranularity_, 1);
      v7 = objc_allocWithZone(MEMORY[0x24BE85358]);
      v26[0] = 0;
      v8 = v5;
      v9 = objc_msgSend(v7, sel_initWithConfiguration_error_, v8, v26);
      v10 = v26[0];
      if (v9)
      {

        v11 = *(void **)(v1 + 16);
        *(_QWORD *)(v1 + 16) = v9;
      }
      else
      {
        v12 = v10;
        v13 = (void *)sub_249F1E710();

        swift_willThrow();
        if (qword_2578D5D78 != -1)
          swift_once();
        v14 = sub_249F1EF38();
        __swift_project_value_buffer(v14, (uint64_t)qword_2578FF3F0);
        v15 = v13;
        v16 = v13;
        v17 = sub_249F1EF20();
        v18 = sub_249F1F820();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          v25 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v19 = 138412290;
          v20 = v13;
          v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v26[0] = v21;
          sub_249F1F9AC();
          *v25 = v21;

          _os_log_impl(&dword_249D98000, v17, v18, "Unexpected error initializing image sanitization: %@", v19, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
          swift_arrayDestroy();
          MEMORY[0x24BD06618](v25, -1, -1);
          MEMORY[0x24BD06618](v19, -1, -1);

        }
        else
        {

          v8 = v17;
        }

        v11 = *(void **)(v1 + 16);
        *(_QWORD *)(v1 + 16) = 0;
      }

    }
    else
    {
      *(_QWORD *)(v1 + 16) = 0;
    }
    v3 = *(void **)(v1 + 16);
    v22 = v3;
  }
  v23 = v2;
  return v3;
}

uint64_t sub_249DDD43C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  NSObject *v9;
  os_signpost_type_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint8_t *v14;
  os_signpost_id_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  void *v19;
  _BYTE *v20;
  void *v21;
  CVPixelBufferRef v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  void *v33;
  uint8_t *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  id v49;
  CVPixelBufferRef v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t inited;
  unint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t *v73;
  void *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  int v85;
  uint64_t *v86;
  uint64_t *v87;
  void *v88;
  _BYTE *v89;
  _QWORD v90[4];
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v86 = a2;
  v95 = *MEMORY[0x24BDAC8D0];
  v84 = *(void **)a1;
  v85 = *(unsigned __int8 *)(a1 + 8);
  if (qword_2578D5D80 != -1)
    swift_once();
  v89 = v2;
  v3 = sub_249F1EED8();
  __swift_project_value_buffer(v3, (uint64_t)qword_2578FF408);
  v4 = sub_249F1EE9C();
  v87 = &v83;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v83 - v7;
  sub_249F1EEC0();
  sub_249F1EE78();
  v9 = sub_249F1EEC0();
  v10 = sub_249F1F8A4();
  v11 = sub_249F1F958();
  if ((v11 & 1) != 0)
  {
    v83 = (uint64_t)&v83;
    MEMORY[0x24BDAC7A8](v11);
    v12 = (char *)&v83 - v7;
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v12, v8, v4);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v9, v10, v15, "checkImage", "", v14, 2u);
    MEMORY[0x24BD06618](v14, -1, -1);

    v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  }
  else
  {

    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  }
  MEMORY[0x24BDAC7A8](v16);
  v13((char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8, v4);
  sub_249F1EF08();
  swift_allocObject();
  sub_249F1EEFC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v17 = v89;
  if ((v89[24] & 3) == 0)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v35 = sub_249F1EF38();
    __swift_project_value_buffer(v35, (uint64_t)qword_2578FF3F0);
    swift_retain_n();
    v36 = sub_249F1EF20();
    v37 = sub_249F1F820();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = (void *)swift_slowAlloc();
      v92 = v39;
      *(_DWORD *)v38 = 136315138;
      v90[0] = *((_QWORD *)v17 + 3);
      v40 = sub_249F1F3AC();
      v90[0] = sub_249E68CA8(v40, v41, (uint64_t *)&v92);
      sub_249F1F9AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249D98000, v36, v37, "checkImage called but skipped due to configuration %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v39, -1, -1);
      MEMORY[0x24BD06618](v38, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v47 = v86;
    *v86 = 0;
    v47[1] = 0;
    goto LABEL_27;
  }
  v18 = sub_249DDD148();
  v19 = v88;
  if (!v18)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v42 = sub_249F1EF38();
    __swift_project_value_buffer(v42, (uint64_t)qword_2578FF3F0);
    v43 = sub_249F1EF20();
    v44 = sub_249F1F820();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_249D98000, v43, v44, "Image sanitizer missing; can't check images without an image sanitizer.",
        v45,
        2u);
      MEMORY[0x24BD06618](v45, -1, -1);
    }

    sub_249DDE4E8();
    swift_allocError();
    *(_QWORD *)v46 = 0;
    *(_QWORD *)(v46 + 8) = 0;
    *(_BYTE *)(v46 + 16) = 1;
    swift_willThrow();
    goto LABEL_27;
  }
  v20 = v18;
  v21 = v84;
  v92 = v84;
  LOBYTE(v93) = v85;
  v22 = sub_249DDE218();
  if (v19)
  {
    v23 = v19;
LABEL_10:
    if (qword_2578D5D78 != -1)
      swift_once();
    v24 = sub_249F1EF38();
    __swift_project_value_buffer(v24, (uint64_t)qword_2578FF3F0);
    v25 = v23;
    v26 = v23;
    v27 = sub_249F1EF20();
    v28 = sub_249F1F820();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v89 = v20;
      v30 = (uint8_t *)v29;
      v31 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138412290;
      v32 = v23;
      v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v92 = v33;
      sub_249F1F9AC();
      *v31 = v33;

      _os_log_impl(&dword_249D98000, v27, v28, "Unexpected error trying to run image sanitization: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v31, -1, -1);
      v34 = v30;
      v20 = v89;
      MEMORY[0x24BD06618](v34, -1, -1);
    }
    else
    {

    }
    sub_249DDE4E8();
    swift_allocError();
    *(_QWORD *)v48 = v23;
    *(_QWORD *)(v48 + 8) = 0;
    *(_BYTE *)(v48 + 16) = 0;
    v49 = v23;
    swift_willThrow();

    goto LABEL_27;
  }
  v51 = v22;
  v52 = (*((_QWORD *)v17 + 3) >> 1) & 1;
  v92 = 0;
  v53 = objc_msgSend(v20, sel_sanitizePixelBuffer_keepGoing_error_, v22, v52, &v92);
  if (!v53)
  {
    v65 = v92;
    v23 = (void *)sub_249F1E710();

    swift_willThrow();
    goto LABEL_10;
  }
  v54 = v53;
  v55 = v92;

  v56 = *((_QWORD *)v17 + 3);
  v57 = v54;
  v58 = v57;
  if ((v56 & 2) != 0 && (v59 = objc_msgSend(v57, sel_signals)) != 0)
  {
    v60 = v59;
    v92 = 0;
    sub_249DDE52C();
    sub_249F1F1FC();

    v61 = (uint64_t)v92;
    if (v92)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79D0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_249F21770;
      *(_QWORD *)(inited + 32) = 0x736C616E676973;
      *(_QWORD *)(inited + 40) = 0xE700000000000000;
      *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79D8);
      *(_QWORD *)(inited + 48) = v61;
      v63 = sub_249DAE8D4(inited);
      v64 = sub_249EA69C0(v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v21;
      LOBYTE(v93) = v85;
      v66 = sub_249EA6BF8();
      if (v67 >> 60 != 15)
      {
        v68 = v66;
        v69 = v67;
        v88 = (void *)sub_249F1E830();
        v71 = v70;
        sub_249DD3B94(v68, v69);
        if (v64)
        {
          v94 = MEMORY[0x24BEE0D00];
          v92 = v88;
          v93 = v71;
          sub_249DCA7E4((uint64_t)&v92, (uint64_t)v90);
          JSONValue.init(_:)(v90, &v91);
          v80 = v91;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v90[0] = v64;
          v82 = v80;
          v17 = v89;
          sub_249DD1B3C(v82, 0x6567616D49676E70, 0xEC00000061746144, isUniquelyReferenced_nonNull_native);
          v64 = v90[0];
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
          v61 = 1;
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
      }
      v61 = 1;
LABEL_42:
      if ((v17[24] & 1) != 0)
        goto LABEL_43;
LABEL_35:

      v20 = v58;
LABEL_44:

      v73 = v86;
      *v86 = v61;
      v73[1] = v64;
      goto LABEL_27;
    }
  }
  else
  {
    v61 = 0;
  }
  v64 = 0;
  if ((v17[24] & 1) == 0)
    goto LABEL_35;
LABEL_43:
  v72 = objc_msgSend(v58, sel_safe);

  if ((v72 & 1) != 0)
    goto LABEL_44;
  v74 = v20;
  if (qword_2578D5D78 != -1)
    swift_once();
  v75 = sub_249F1EF38();
  __swift_project_value_buffer(v75, (uint64_t)qword_2578FF3F0);
  v76 = sub_249F1EF20();
  v77 = sub_249F1F808();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v78 = 0;
    _os_log_impl(&dword_249D98000, v76, v77, "An image was rejected by the image checker.", v78, 2u);
    MEMORY[0x24BD06618](v78, -1, -1);
  }

  sub_249DDE4E8();
  swift_allocError();
  *(_QWORD *)v79 = v61;
  *(_QWORD *)(v79 + 8) = v64;
  *(_BYTE *)(v79 + 16) = 2;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_bridgeObjectRelease();

LABEL_27:
  sub_249DDDF68("checkImage", 10, 2);
  return swift_release();
}

uint64_t sub_249DDDF68(char *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v21[2];
  int v22;

  if (qword_2578D5D80 != -1)
    swift_once();
  v5 = sub_249F1EED8();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF408);
  v6 = sub_249F1EEC0();
  v7 = sub_249F1EE9C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  sub_249F1EEF0();
  v10 = sub_249F1F898();
  result = sub_249F1F958();
  if ((result & 1) == 0)
    goto LABEL_7;
  v22 = v10;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a1 = sub_249E14C50();
LABEL_12:
  v12 = sub_249F1EEE4();
  v21[1] = v21;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_249F1EF14();
  swift_release();
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (MEMORY[0x24BEE7808] && (_DWORD)v16 == *MEMORY[0x24BEE7808])
  {
    v17 = "[Error] Interval already ended";
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v17 = "";
  }
  MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v18 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v18 = 0;
  v19 = sub_249F1EE84();
  _os_signpost_emit_with_name_impl(&dword_249D98000, v6, (os_signpost_type_t)v22, v19, a1, v17, v18, 2u);
  MEMORY[0x24BD06618](v18, -1, -1);

  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  return ((uint64_t (*)(char *, uint64_t))v20)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
}

CVPixelBufferRef sub_249DDE218()
{
  uint64_t v0;
  void *v1;
  int v2;
  CVPixelBufferRef result;
  double v4;
  double v5;
  size_t Width;
  size_t Height;
  CGImage *v9;
  uint64_t v10[3];
  char v11;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  if (v2 == 2)
    return (CVPixelBufferRef)v1;
  v10[2] = *(_QWORD *)v0;
  v11 = v2;
  if (!v2)
  {
    v9 = v1;
    Width = CGImageGetWidth(v9);
    Height = CGImageGetHeight(v9);

    goto LABEL_14;
  }
  result = (CVPixelBufferRef)objc_msgSend(v1, sel_extent);
  if (v4 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if ((*(_QWORD *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_18;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  Width = (uint64_t)v4;
  Height = (uint64_t)v5;
LABEL_14:
  v10[0] = Width;
  v10[1] = Height;
  return sub_249E468DC(v10, 0x42475241u);
}

uint64_t sub_249DDE33C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageChecker()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ImageChecker.Options()
{
  return &type metadata for ImageChecker.Options;
}

unint64_t sub_249DDE394()
{
  unint64_t result;

  result = qword_2578D7998;
  if (!qword_2578D7998)
  {
    result = MEMORY[0x24BD06528](&unk_249F23548, &type metadata for ImageChecker.Options);
    atomic_store(result, (unint64_t *)&qword_2578D7998);
  }
  return result;
}

unint64_t sub_249DDE3DC()
{
  unint64_t result;

  result = qword_2578D79A0;
  if (!qword_2578D79A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F23518, &type metadata for ImageChecker.Options);
    atomic_store(result, (unint64_t *)&qword_2578D79A0);
  }
  return result;
}

unint64_t sub_249DDE424()
{
  unint64_t result;

  result = qword_2578D79A8;
  if (!qword_2578D79A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23570, &type metadata for ImageChecker.Options);
    atomic_store(result, (unint64_t *)&qword_2578D79A8);
  }
  return result;
}

unint64_t sub_249DDE46C()
{
  unint64_t result;

  result = qword_2578D79B0;
  if (!qword_2578D79B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F235A8, &type metadata for ImageChecker.Options);
    atomic_store(result, (unint64_t *)&qword_2578D79B0);
  }
  return result;
}

uint64_t sub_249DDE4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_249DDE4E8()
{
  unint64_t result;

  result = qword_2578D79C0;
  if (!qword_2578D79C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F236F8, &type metadata for ImageChecker.Error);
    atomic_store(result, (unint64_t *)&qword_2578D79C0);
  }
  return result;
}

unint64_t sub_249DDE52C()
{
  unint64_t result;

  result = qword_2578D79C8;
  if (!qword_2578D79C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578D79C8);
  }
  return result;
}

id sub_249DDE56C(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a3 <= 1u)
    return result;
  return result;
}

void destroy for ImageChecker.Error(uint64_t a1)
{
  sub_249DDE5A4(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_249DDE5A4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 <= 1u)
  {

  }
}

uint64_t _s16VisualGeneration12ImageCheckerC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249DDE56C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ImageChecker.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249DDE56C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_249DDE5A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ImageChecker.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_249DDE5A4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageChecker.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageChecker.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_249DDE738(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_249DDE750(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ImageChecker.Error()
{
  return &type metadata for ImageChecker.Error;
}

uint64_t sub_249DDE77C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DDE7C0()
{
  void *v0;
  id v1;

  v0 = (void *)_CFCopySystemVersionDictionary();
  if (v0)
  {
    v1 = v0;
    sub_249F1F1FC();

  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for Sex(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DDE8E4 + 4 * byte_249F23745[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DDE918 + 4 * byte_249F23740[v4]))();
}

uint64_t sub_249DDE918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DDE920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DDE928);
  return result;
}

uint64_t sub_249DDE934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DDE93CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DDE940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DDE948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Sex()
{
  return &type metadata for Sex;
}

uint64_t sub_249DDE964()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249DDE9D8()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249DDEA28()
{
  sub_249F1FF64();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249DDEA98@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249F1FC4C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_249DDEAF4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701601645;
  if (*v1)
    v2 = 0x656C616D6566;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_249DDEB28(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B4D680;
}

uint64_t sub_249DDEB38(char *a1, char *a2)
{
  return sub_249E38F54(*a1, *a2);
}

uint64_t sub_249DDEB44()
{
  sub_249DDEC84();
  return sub_249F1F514();
}

uint64_t sub_249DDEBA0()
{
  sub_249DDEC84();
  return sub_249F1F4FC();
}

unint64_t sub_249DDEBF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D79F0;
  if (!qword_2578D79F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D79F8);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D79F0);
  }
  return result;
}

unint64_t sub_249DDEC40()
{
  unint64_t result;

  result = qword_2578D7A00;
  if (!qword_2578D7A00)
  {
    result = MEMORY[0x24BD06528](&unk_249F237A8, &type metadata for Sex);
    atomic_store(result, (unint64_t *)&qword_2578D7A00);
  }
  return result;
}

unint64_t sub_249DDEC84()
{
  unint64_t result;

  result = qword_2578D7A08;
  if (!qword_2578D7A08)
  {
    result = MEMORY[0x24BD06528](&unk_249F23808, &type metadata for Sex);
    atomic_store(result, (unint64_t *)&qword_2578D7A08);
  }
  return result;
}

uint64_t sub_249DDECC8()
{
  uint64_t v0;

  sub_249DD3B94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResolvedImage.HiddenBufferData()
{
  return objc_opt_self();
}

uint64_t destroy for ResolvedImage(uint64_t a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for ResolvedImage(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResolvedImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ResolvedImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResolvedImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResolvedImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedImage()
{
  return &type metadata for ResolvedImage;
}

uint64_t sub_249DDEEE8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6144726566667562;
  if (*v0 != 1)
    v1 = 0xD000000000000015;
  if (*v0)
    return v1;
  else
    return 0x7265666552637078;
}

uint64_t sub_249DDEF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DDFEFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DDEF78()
{
  sub_249DDFA1C();
  return sub_249F20024();
}

uint64_t sub_249DDEFA0()
{
  sub_249DDFA1C();
  return sub_249F20030();
}

uint64_t sub_249DDEFC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  unint64_t v13;
  __CVBuffer *v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int64_t BytesPerRow;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  id v32;
  uint64_t v33;
  int v34;
  char v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7BC0);
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v34 = *(_DWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 32);
  v28 = *(id *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DDFA1C();
  sub_249F20018();
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if (sub_249E953A4(v9, v10))
  {
    v29 = v6;
    v30 = v7;
    v31 = v34;
    v32 = v28;
    v33 = v8;
    v35 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7BB0);
    sub_249DDFC68(&qword_2578D7BD0, &qword_2578D7BB0, (uint64_t)&unk_249F2EA58);
    sub_249F1FDCC();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  }
  v24 = v6;
  v25 = v7;
  v12 = *(id *)(v8 + 16);
  v13 = *(_QWORD *)(v8 + 24);
  v14 = (__CVBuffer *)v28;
  swift_retain();
  v15 = (uint64_t)v12;
  v16 = v13;
  v17 = v34;
  if (v13 >> 60 != 15)
    goto LABEL_7;
  BytesPerRow = CVPixelBufferGetBytesPerRow(v14);
  result = CVPixelBufferGetHeight(v14);
  v19 = BytesPerRow * result;
  if ((unsigned __int128)(BytesPerRow * (__int128)result) >> 64 != (BytesPerRow * result) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  v28 = v12;
  CVPixelBufferLockBaseAddress(v14, 1uLL);
  result = (uint64_t)CVPixelBufferGetBaseAddress(v14);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v15 = sub_249DDFB64((_BYTE *)result, v19);
  v16 = v20;
  v21 = *(_QWORD *)(v8 + 16);
  v22 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 16) = v15;
  *(_QWORD *)(v8 + 24) = v20;
  sub_249DC3928(v15, v20);
  sub_249DD3B94(v21, v22);
  CVPixelBufferUnlockBaseAddress(v14, 1uLL);
  v17 = v34;
  v12 = v28;
LABEL_7:
  sub_249DDFC10((uint64_t)v12, v13);
  swift_release();

  v29 = v15;
  v30 = v16;
  v35 = 1;
  sub_249DD4BDC();
  v23 = v26;
  sub_249F1FDCC();
  sub_249DC3C24(v15, v16);
  if (!v23)
  {
    v29 = v24;
    v30 = v25;
    v31 = v17;
    v35 = 2;
    sub_249DDFC24();
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v5, v3);
}

uint64_t sub_249DDF2AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  __CVBuffer *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  int v25;
  __CVBuffer *v26;
  uint64_t v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7B98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DDFA1C();
  sub_249F1FFF4();
  if (!v2)
  {
    v10 = a1[3];
    v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v10);
    if (sub_249E953B0(v10, v11))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7BB0);
      v28 = 0;
      sub_249DDFC68(&qword_2578D7BB8, &qword_2578D7BB0, (uint64_t)&unk_249F2EA30);
      sub_249F1FD00();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v13 = *((_QWORD *)&v24 + 1);
      v12 = v24;
      v14 = v25;
      v16 = v26;
      v15 = v27;
    }
    else
    {
      v28 = 1;
      sub_249DD4E4C();
      sub_249F1FD00();
      v17 = *((_QWORD *)&v24 + 1);
      v18 = v24;
      v28 = 2;
      sub_249DDFA60();
      sub_249F1FD00();
      v19 = v18;
      v13 = *((_QWORD *)&v24 + 1);
      v20 = v17;
      v14 = v25;
      v21 = v24;
      v22 = v19;
      v23 = v20;
      v16 = sub_249DFC2C0(v19, v20, &v24);
      sub_249DC3C24(v22, v23);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      type metadata accessor for ResolvedImage.HiddenBufferData();
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_249F21920;
      v12 = v21;
    }
    *(_QWORD *)a2 = v12;
    *(_QWORD *)(a2 + 8) = v13;
    *(_DWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249DDF570@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249DDF2AC(a1, a2);
}

uint64_t sub_249DDF584(_QWORD *a1)
{
  return sub_249DDEFC8(a1);
}

uint64_t sub_249DDF598()
{
  return sub_249DDFC68(&qword_2578D7AB0, &qword_2578D7AB8, (uint64_t)&unk_249F2EA08);
}

uint64_t sub_249DDF5C4()
{
  return sub_249DDFC68(qword_2578D7AC0, &qword_2578D7AB8, (uint64_t)&unk_249F2E9E0);
}

uint64_t sub_249DDF5F0()
{
  sub_249DDF9D8();
  return sub_249F20024();
}

uint64_t sub_249DDF618()
{
  sub_249DDF9D8();
  return sub_249F20030();
}

uint64_t sub_249DDF640(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7B88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DDF9D8();
  sub_249F20018();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249DDF704@<X0>(__IOSurface *a1@<X1>, uint64_t a2@<X8>)
{
  CVReturn v3;
  uint64_t v4;
  uint64_t result;
  __CVBuffer *v6;
  size_t Width;
  size_t Height;
  OSType PixelFormatType;
  CVPixelBufferRef v10[2];

  v10[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v10[0] = 0;
  v3 = CVPixelBufferCreateWithIOSurface((CFAllocatorRef)*MEMORY[0x24BDBD240], a1, 0, v10);
  if (v3 || !v10[0])
  {
    sub_249DCD4BC();
    swift_allocError();
    *(_DWORD *)v4 = v3;
    *(_BYTE *)(v4 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    v6 = v10[0];
    Width = CVPixelBufferGetWidth(v6);
    Height = CVPixelBufferGetHeight(v6);
    PixelFormatType = CVPixelBufferGetPixelFormatType(v6);

    type metadata accessor for ResolvedImage.HiddenBufferData();
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_249F21920;
    *(_QWORD *)a2 = Width;
    *(_QWORD *)(a2 + 8) = Height;
    *(_DWORD *)(a2 + 16) = PixelFormatType;
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = result;
  }
  return result;
}

unint64_t sub_249DDF820(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249DDF84C();
  result = sub_249DDF890();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_249DDF84C()
{
  unint64_t result;

  result = qword_2578D7B18;
  if (!qword_2578D7B18)
  {
    result = MEMORY[0x24BD06528](&unk_249F238F8, &type metadata for ResolvedImage);
    atomic_store(result, (unint64_t *)&qword_2578D7B18);
  }
  return result;
}

unint64_t sub_249DDF890()
{
  unint64_t result;

  result = qword_2578D7B20;
  if (!qword_2578D7B20)
  {
    result = MEMORY[0x24BD06528](&unk_249F238D0, &type metadata for ResolvedImage);
    atomic_store(result, (unint64_t *)&qword_2578D7B20);
  }
  return result;
}

unint64_t sub_249DDF8D8()
{
  unint64_t result;

  result = qword_2578D7B28;
  if (!qword_2578D7B28)
  {
    result = MEMORY[0x24BD06528](&unk_249F239A0, &type metadata for ResolvedImage.Empty);
    atomic_store(result, (unint64_t *)&qword_2578D7B28);
  }
  return result;
}

unint64_t sub_249DDF920()
{
  unint64_t result;

  result = qword_2578D7B30;
  if (!qword_2578D7B30)
  {
    result = MEMORY[0x24BD06528](&unk_249F23978, &type metadata for ResolvedImage.Empty);
    atomic_store(result, (unint64_t *)&qword_2578D7B30);
  }
  return result;
}

_UNKNOWN **sub_249DDF964()
{
  return &off_251B50850;
}

unint64_t sub_249DDF970(uint64_t a1)
{
  unint64_t result;

  result = sub_249DDF994();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249DDF994()
{
  unint64_t result;

  result = qword_2578D7B80;
  if (!qword_2578D7B80)
  {
    result = MEMORY[0x24BD06528](&unk_249F23920, &type metadata for ResolvedImage);
    atomic_store(result, (unint64_t *)&qword_2578D7B80);
  }
  return result;
}

unint64_t sub_249DDF9D8()
{
  unint64_t result;

  result = qword_2578D7B90;
  if (!qword_2578D7B90)
  {
    result = MEMORY[0x24BD06528](&unk_249F23B34, &type metadata for ResolvedImage.Empty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7B90);
  }
  return result;
}

unint64_t sub_249DDFA1C()
{
  unint64_t result;

  result = qword_2578D7BA0;
  if (!qword_2578D7BA0)
  {
    result = MEMORY[0x24BD06528](&unk_249F23AE4, &type metadata for ResolvedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7BA0);
  }
  return result;
}

unint64_t sub_249DDFA60()
{
  unint64_t result;

  result = qword_2578D7BA8;
  if (!qword_2578D7BA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2ADD0, &type metadata for PixelBufferDescriptor);
    atomic_store(result, (unint64_t *)&qword_2578D7BA8);
  }
  return result;
}

uint64_t sub_249DDFAA4(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_249DDFB64(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_249DDFAA4(__src, &__src[a2]);
  sub_249F1E524();
  swift_allocObject();
  sub_249F1E4E8();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_249F1E80C();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_249DDFC10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_249DC3928(a1, a2);
  return a1;
}

unint64_t sub_249DDFC24()
{
  unint64_t result;

  result = qword_2578D7BC8;
  if (!qword_2578D7BC8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2ADA8, &type metadata for PixelBufferDescriptor);
    atomic_store(result, (unint64_t *)&qword_2578D7BC8);
  }
  return result;
}

uint64_t sub_249DDFC68(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD06528](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ResolvedImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249DDFCF4 + 4 * byte_249F23885[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249DDFD28 + 4 * byte_249F23880[v4]))();
}

uint64_t sub_249DDFD28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DDFD30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DDFD38);
  return result;
}

uint64_t sub_249DDFD44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DDFD4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249DDFD50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DDFD58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResolvedImage.CodingKeys()
{
  return &type metadata for ResolvedImage.CodingKeys;
}

ValueMetadata *type metadata accessor for ResolvedImage.Empty.CodingKeys()
{
  return &type metadata for ResolvedImage.Empty.CodingKeys;
}

ValueMetadata *type metadata accessor for ResolvedImage.Empty()
{
  return &type metadata for ResolvedImage.Empty;
}

unint64_t sub_249DDFD98()
{
  unint64_t result;

  result = qword_2578D7BD8;
  if (!qword_2578D7BD8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23ABC, &type metadata for ResolvedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7BD8);
  }
  return result;
}

unint64_t sub_249DDFDE0()
{
  unint64_t result;

  result = qword_2578D7BE0;
  if (!qword_2578D7BE0)
  {
    result = MEMORY[0x24BD06528](&unk_249F23A2C, &type metadata for ResolvedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7BE0);
  }
  return result;
}

unint64_t sub_249DDFE28()
{
  unint64_t result;

  result = qword_2578D7BE8;
  if (!qword_2578D7BE8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23A54, &type metadata for ResolvedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7BE8);
  }
  return result;
}

unint64_t sub_249DDFE70()
{
  unint64_t result;

  result = qword_2578D7BF0;
  if (!qword_2578D7BF0)
  {
    result = MEMORY[0x24BD06528](&unk_249F239DC, &type metadata for ResolvedImage.Empty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7BF0);
  }
  return result;
}

unint64_t sub_249DDFEB8()
{
  unint64_t result;

  result = qword_2578D7BF8;
  if (!qword_2578D7BF8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23A04, &type metadata for ResolvedImage.Empty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D7BF8);
  }
  return result;
}

uint64_t sub_249DDFEFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265666552637078 && a2 == 0xEC00000065636E65;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726566667562 && a2 == 0xEA00000000006174 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000249F34E70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249DE0070()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = *((_QWORD *)v0 + 2);
  sub_249F1FA84();
  sub_249F1F460();
  if (v1 != 5)
    sub_249F1F3AC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  if (v2 != 3)
    sub_249F1F3AC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  if (v3 != 10)
    sub_249F1F3AC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_249F1F460();
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t dispatch thunk of DirectableDemographicCategoriesProviding.directableDemographicCategories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249DE0280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  task_id_token_t v13;
  _BYTE v14[4];
  task_id_token_t token;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-v4];
  sub_249F1EC8C();
  v6 = sub_249F1EF98();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_249DE0500((uint64_t)v5);
    sub_249DE0540();
    swift_allocError();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0;
    *(_BYTE *)(v8 + 16) = 4;
    return swift_willThrow();
  }
  v10 = sub_249F1EF80();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v5, v6);
  v11 = MEMORY[0x24BD06858](v10);
  if (v11 == sub_249F1EF44())
  {
    token = 0;
    if (!task_create_identity_token(*MEMORY[0x24BDAEC58], &token))
    {
      v13 = token;
      xpc_dictionary_set_mach_send();
      sub_249F1ECA4();
      swift_unknownObjectRetain();
      sub_249F1EF8C();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
      sub_249F1EC98();
      mach_port_deallocate(*MEMORY[0x24BDAEC58], v13);
      return swift_unknownObjectRelease();
    }
    sub_249DE0540();
    swift_allocError();
    *(_OWORD *)v12 = xmmword_249F23BD0;
  }
  else
  {
    sub_249DE0540();
    swift_allocError();
    *(_QWORD *)v12 = 0;
    *(_QWORD *)(v12 + 8) = 0;
  }
  *(_BYTE *)(v12 + 16) = 4;
  swift_willThrow();
  return swift_unknownObjectRelease();
}

uint64_t sub_249DE0500(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249DE0540()
{
  unint64_t result;

  result = qword_2578D7C08;
  if (!qword_2578D7C08)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ModelManagerInferenceProvider.Error, &type metadata for ModelManagerInferenceProvider.Error);
    atomic_store(result, (unint64_t *)&qword_2578D7C08);
  }
  return result;
}

uint64_t sub_249DE0584(void *a1, xpc_object_t value)
{
  xpc_dictionary_set_value(a1, "DATA", value);
  swift_unknownObjectRetain();
  return sub_249F1EF8C();
}

uint64_t sub_249DE05D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C00);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1EC8C();
  v3 = sub_249F1EF98();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_249DE0500((uint64_t)v2);
    sub_249DE0540();
    swift_allocError();
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    *(_BYTE *)(v5 + 16) = 4;
    return swift_willThrow();
  }
  v7 = sub_249F1EF80();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  v8 = MEMORY[0x24BD06858](v7);
  if (v8 == sub_249F1EF44())
  {
    if (xpc_dictionary_copy_mach_send())
    {
      sub_249F1F0E8();
      return swift_unknownObjectRelease();
    }
    sub_249DE0540();
    swift_allocError();
    *(_OWORD *)v9 = xmmword_249F23BE0;
  }
  else
  {
    sub_249DE0540();
    swift_allocError();
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0;
  }
  *(_BYTE *)(v9 + 16) = 4;
  swift_willThrow();
  return swift_unknownObjectRelease();
}

void sub_249DE078C(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  NSObject *v17;
  os_signpost_type_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  void *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  unint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  _QWORD *v79;
  id v80;
  void *v81;
  NSObject *v82;
  void *v83;
  void *v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  id v91[2];

  v89 = a2;
  v91[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_2578D5D80 != -1)
    swift_once();
  v11 = sub_249F1EED8();
  __swift_project_value_buffer(v11, (uint64_t)qword_2578FF408);
  v12 = sub_249F1EE9C();
  *(_QWORD *)&v90 = &v88;
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (char *)&v88 - v15;
  sub_249F1EEC0();
  sub_249F1EE78();
  v17 = sub_249F1EEC0();
  v18 = sub_249F1F8A4();
  v19 = sub_249F1F958();
  if ((v19 & 1) != 0)
  {
    v88 = (uint64_t)&v88;
    MEMORY[0x24BDAC7A8](v19);
    v20 = (char *)&v88 - v15;
    v21 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v21(v20, v16, v12);
    v22 = a1;
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    v24 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v17, v18, v24, "fetchFaceAttributes.vision", "", v23, 2u);
    v25 = v23;
    a1 = v22;
    MEMORY[0x24BD06618](v25, -1, -1);

    v26 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
  }
  else
  {

    v21 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  }
  MEMORY[0x24BDAC7A8](v26);
  v21((char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v12);
  sub_249F1EF08();
  swift_allocObject();
  v88 = sub_249F1EEFC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9AF8]), sel_init);
  v91[0] = 0;
  if (objc_msgSend(v27, sel_setRevision_error_, 3737841669, v91))
  {
    v28 = v91[0];
  }
  else
  {
    v29 = v91[0];
    v30 = (void *)sub_249F1E710();

    swift_willThrow();
    if (qword_2578D5D78 != -1)
      swift_once();
    v31 = sub_249F1EF38();
    __swift_project_value_buffer(v31, (uint64_t)qword_2578FF3F0);
    v32 = sub_249F1EF20();
    v33 = sub_249F1F820();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_249D98000, v32, v33, "Failed to set private faceAttributes revision. Using default revision.", v34, 2u);
      MEMORY[0x24BD06618](v34, -1, -1);
    }

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60E0);
  v35 = swift_allocObject();
  v90 = xmmword_249F21760;
  *(_OWORD *)(v35 + 16) = xmmword_249F21760;
  *(_QWORD *)(v35 + 32) = objc_msgSend((id)objc_opt_self(), sel_observationWithBoundingBox_, a3, a4, a5, a6);
  v91[0] = (id)v35;
  sub_249F1F55C();
  sub_249D9D9F4(0, &qword_2578D7C10);
  v36 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setInputFaceObservations_, v36);

  v37 = a1;
  sub_249DAEB2C(MEMORY[0x24BEE4AF8]);
  v38 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  type metadata accessor for VNImageOption(0);
  sub_249DE1598();
  v39 = (void *)sub_249F1F1F0();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v38, sel_initWithCVPixelBuffer_options_, v37, v39);

  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v90;
  *(_QWORD *)(v41 + 32) = v27;
  v91[0] = (id)v41;
  sub_249F1F55C();
  sub_249D9D9F4(0, &qword_2578D7C18);
  v42 = v27;
  v43 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  v91[0] = 0;
  LODWORD(v39) = objc_msgSend(v40, sel_performRequests_error_, v43, v91);

  if ((_DWORD)v39)
  {
    v44 = v91[0];
    v45 = -[NSObject results](v42, sel_results);
    if (!v45)
    {
LABEL_26:

LABEL_31:
      sub_249DDDF68("fetchFaceAttributes.vision", 26, 2);
      swift_release();

      v70 = 3;
      goto LABEL_32;
    }
    v46 = v45;
    v47 = sub_249F1F544();

    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      v87 = sub_249F1FBEC();
      swift_bridgeObjectRelease();
      if (v87)
      {
LABEL_17:
        if ((v47 & 0xC000000000000001) != 0)
        {
          v48 = (id)MEMORY[0x24BD056B8](0, v47);
        }
        else
        {
          if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
            __break(1u);
          v48 = *(id *)(v47 + 32);
        }
        v49 = v48;
        swift_bridgeObjectRelease();
        v50 = objc_msgSend(v49, sel_faceAttributes);

        if (v50)
        {
          v51 = objc_msgSend(v50, sel_ageCategory);
          v52 = objc_msgSend(v51, sel_label);

          v53 = objc_msgSend(v52, sel_identifier);
          v54 = sub_249F1F328();
          v56 = v55;

          LODWORD(v90) = sub_249DE15E0(v54, v56);
          v57 = objc_msgSend(v50, sel_VN7exwFFmQF0AI9P7FjBljwEFu7QYUGCYE);
          v58 = objc_msgSend(v57, sel_label);

          v59 = objc_msgSend(v58, sel_identifier);
          v60 = sub_249F1F328();
          v62 = v61;

          LOBYTE(v59) = sub_249DE1984(v60, v62);
          v63 = objc_msgSend(v50, sel_VN3iT1YRjjnIuELobV1olJiO1vvItN6Kdq);
          v64 = objc_msgSend(v63, sel_label);

          v65 = objc_msgSend(v64, sel_identifier);
          v66 = sub_249F1F328();
          v68 = v67;

          sub_249DE11B8(v66, v68, (char *)v91);
          v69 = LOBYTE(v91[0]);
          sub_249DDDF68("fetchFaceAttributes.vision", 26, 2);
          swift_release();

          v70 = v59 | (v90 << 8) | (v69 << 16);
LABEL_32:
          v86 = v89;
          goto LABEL_33;
        }
        goto LABEL_26;
      }
    }
    else if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_17;
    }

    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v71 = v91[0];
  v72 = (void *)sub_249F1E710();

  swift_willThrow();
  if (qword_2578D5D78 != -1)
    swift_once();
  v73 = sub_249F1EF38();
  __swift_project_value_buffer(v73, (uint64_t)qword_2578FF3F0);
  v74 = v72;
  v75 = v72;
  v76 = sub_249F1EF20();
  v77 = sub_249F1F820();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    v79 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v78 = 138412290;
    v80 = v72;
    v81 = (void *)_swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v90 = v37;
    v82 = v42;
    v83 = v40;
    v84 = v81;
    v91[0] = v81;
    sub_249F1F9AC();
    *v79 = v84;

    _os_log_impl(&dword_249D98000, v76, v77, "Unexpected error requesting FaceAttributes from pixelBuffer: %@", v78, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v79, -1, -1);
    MEMORY[0x24BD06618](v78, -1, -1);

    v85 = v82;
    v37 = (id)v90;
  }
  else
  {

    v85 = v76;
  }
  v86 = v89;

  sub_249DDDF68("fetchFaceAttributes.vision", 26, 2);
  swift_release();

  v70 = 3;
LABEL_33:
  *(_WORD *)v86 = v70;
  *(_BYTE *)(v86 + 2) = BYTE2(v70);
}

void sub_249DE11B8(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;

  if (sub_249F1F328() == a1 && v6 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v8 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    v16 = 2;
    goto LABEL_21;
  }
  if (sub_249F1F328() == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v11 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v16 = 3;
    goto LABEL_21;
  }
  if (sub_249F1F328() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v14 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    v16 = 4;
    goto LABEL_21;
  }
  if (sub_249F1F328() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    v16 = 5;
    goto LABEL_21;
  }
  v17 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_27;
  if (sub_249F1F328() == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
    v16 = 8;
    goto LABEL_21;
  }
  v19 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_32;
  if (sub_249F1F328() == a1 && v20 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_37:
    swift_bridgeObjectRelease();
    v16 = 9;
    goto LABEL_21;
  }
  v21 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_37;
  if (qword_2578D5D78 != -1)
    swift_once();
  v22 = sub_249F1EF38();
  __swift_project_value_buffer(v22, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain();
  v23 = sub_249F1EF20();
  v24 = sub_249F1F820();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v27 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain();
    sub_249E68CA8(a1, a2, &v27);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v23, v24, "Unexpected label for skin tone from Vision: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v26, -1, -1);
    MEMORY[0x24BD06618](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v16 = 10;
LABEL_21:
  *a3 = v16;
}

unint64_t sub_249DE1598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D5F88;
  if (!qword_2578D5F88)
  {
    type metadata accessor for VNImageOption(255);
    result = MEMORY[0x24BD06528](&unk_249F216CC, v1);
    atomic_store(result, (unint64_t *)&qword_2578D5F88);
  }
  return result;
}

uint64_t sub_249DE15E0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v24;

  if (sub_249F1F328() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else if (sub_249F1F328() == a1 && v8 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      v10 = sub_249F1FE2C();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      else if (sub_249F1F328() == a1 && v11 == a2)
      {
        v7 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v13 = sub_249F1FE2C();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 2;
        }
        else if (sub_249F1F328() == a1 && v14 == a2)
        {
          swift_bridgeObjectRelease_n();
          return 3;
        }
        else
        {
          v15 = sub_249F1FE2C();
          swift_bridgeObjectRelease();
          if ((v15 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 3;
          }
          else if (sub_249F1F328() == a1 && v16 == a2)
          {
            swift_bridgeObjectRelease_n();
            return 4;
          }
          else
          {
            v17 = sub_249F1FE2C();
            swift_bridgeObjectRelease();
            if ((v17 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 4;
            }
            else
            {
              if (qword_2578D5D78 != -1)
                swift_once();
              v18 = sub_249F1EF38();
              __swift_project_value_buffer(v18, (uint64_t)qword_2578FF3F0);
              swift_bridgeObjectRetain();
              v19 = sub_249F1EF20();
              v20 = sub_249F1F820();
              if (os_log_type_enabled(v19, v20))
              {
                v21 = (uint8_t *)swift_slowAlloc();
                v22 = swift_slowAlloc();
                v24 = v22;
                *(_DWORD *)v21 = 136315138;
                swift_bridgeObjectRetain();
                sub_249E68CA8(a1, a2, &v24);
                sub_249F1F9AC();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_249D98000, v19, v20, "Unexpected label for age from Vision: %s", v21, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24BD06618](v22, -1, -1);
                MEMORY[0x24BD06618](v21, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              return 5;
            }
          }
        }
      }
    }
  }
  return v7;
}

uint64_t sub_249DE1984(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;

  if (sub_249F1F328() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else if (sub_249F1F328() == a1 && v8 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      v10 = sub_249F1FE2C();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      else
      {
        if (qword_2578D5D78 != -1)
          swift_once();
        v11 = sub_249F1EF38();
        __swift_project_value_buffer(v11, (uint64_t)qword_2578FF3F0);
        swift_bridgeObjectRetain();
        v12 = sub_249F1EF20();
        v13 = sub_249F1F820();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          v15 = swift_slowAlloc();
          v17 = v15;
          *(_DWORD *)v14 = 136315138;
          swift_bridgeObjectRetain();
          sub_249E68CA8(a1, a2, &v17);
          sub_249F1F9AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_249D98000, v12, v13, "Unexpected label for sex from Vision: %s", v14, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24BD06618](v15, -1, -1);
          MEMORY[0x24BD06618](v14, -1, -1);

          return 2;
        }
        else
        {

          v7 = 2;
          swift_bridgeObjectRelease_n();
        }
      }
    }
  }
  return v7;
}

uint64_t Ambiguity.concepts.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for Ambiguity()
{
  return &type metadata for Ambiguity;
}

uint64_t TextEncoderMockedTokenizer.encode(_:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return TextEncoderXL.encode(_:)(a1, a2, a3);
}

uint64_t destroy for TextEncoderMockedTokenizer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return swift_release();
}

uint64_t initializeWithCopy for TextEncoderMockedTokenizer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = a2 + 24;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 24, v4, v6);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TextEncoderMockedTokenizer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TextEncoderMockedTokenizer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextEncoderMockedTokenizer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextEncoderMockedTokenizer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextEncoderMockedTokenizer()
{
  return &type metadata for TextEncoderMockedTokenizer;
}

uint64_t dispatch thunk of ImageGeneratorIdentifierInitializable.init(imageGeneratorIdentifier:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Error.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249DE1E94()
{
  return sub_249F1FF70();
}

unint64_t sub_249DE1EBC()
{
  return 0xD000000000000013;
}

uint64_t sub_249DE1ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DE6C8C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249DE1F00()
{
  sub_249DE2210();
  return sub_249F20024();
}

uint64_t sub_249DE1F28()
{
  sub_249DE2210();
  return sub_249F20030();
}

uint64_t sub_249DE1F50()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t sub_249DE1F90()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t sub_249DE1FCC()
{
  return 12383;
}

uint64_t sub_249DE1FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249DE2054()
{
  sub_249DE2254();
  return sub_249F20024();
}

uint64_t sub_249DE207C()
{
  sub_249DE2254();
  return sub_249F20030();
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Error.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C20);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C28);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v12[1] = v1[1];
  v12[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DE2210();
  sub_249F20018();
  sub_249DE2254();
  sub_249F1FD3C();
  sub_249F1FD90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_249DE2210()
{
  unint64_t result;

  result = qword_2578D7C30;
  if (!qword_2578D7C30)
  {
    result = MEMORY[0x24BD06528](&unk_249F240E0, &_s14GenerationTaskC5ErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7C30);
  }
  return result;
}

unint64_t sub_249DE2254()
{
  unint64_t result;

  result = qword_2578D7C38;
  if (!qword_2578D7C38)
  {
    result = MEMORY[0x24BD06528](&unk_249F24090, &_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7C38);
  }
  return result;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Error.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C40);
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7C48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DE2210();
  v10 = v30;
  sub_249F1FFF4();
  if (v10)
    goto LABEL_7;
  v26 = v3;
  v27 = a1;
  v30 = v7;
  v11 = v6;
  if (*(_QWORD *)(sub_249F1FD24() + 16) != 1)
  {
    v15 = v6;
    v16 = sub_249F1FAF0();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v18 = &type metadata for KeyboardEmojiGenerator.GenerationTask.Error;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v19 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  sub_249DE2254();
  v12 = v5;
  sub_249F1FC64();
  v13 = v30;
  v14 = v29;
  v21 = sub_249F1FCC4();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v11);
  v24 = (uint64_t)v27;
  v25 = v28;
  *v28 = v21;
  v25[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_249DE2548()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249DE2574@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return KeyboardEmojiGenerator.GenerationTask.Error.init(from:)(a1, a2);
}

uint64_t sub_249DE2588(_QWORD *a1)
{
  return KeyboardEmojiGenerator.GenerationTask.Error.encode(to:)(a1);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.currentStep.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.totalSteps.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

unint64_t KeyboardEmojiGenerator.GenerationTask.Progress.completionPercentage.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  float v4;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16) | (v1 < 1);
  if (*(_BYTE *)(v0 + 16) & 1 | (v1 < 1))
  {
    v3 = 0;
  }
  else
  {
    v4 = (float)*(uint64_t *)v0 / (float)v1;
    if (v4 > 1.0)
      v4 = 1.0;
    v3 = LODWORD(v4);
  }
  return v3 | ((unint64_t)(v2 & 1) << 32);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.emoji.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.description.getter()
{
  uint64_t v0;
  char v1;
  uint64_t result;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 16);
  result = sub_249F1FE08();
  v3 = result;
  if ((v1 & 1) == 0)
  {
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t sub_249DE26CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a7;
  v55 = a8;
  v56 = a5;
  v57 = a6;
  v58 = a9;
  v59 = a3;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  v19 = type metadata accessor for GenerationState();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v43 = a1[1];
  v44 = v22;
  v42 = *((_DWORD *)a1 + 4);
  v53 = *a4;
  LODWORD(v22) = *((unsigned __int8 *)a4 + 8);
  v51 = *((unsigned __int8 *)a4 + 9);
  v52 = v22;
  v41 = a4[2];
  LODWORD(v22) = *((unsigned __int8 *)a4 + 24);
  v49 = *((_DWORD *)a4 + 7);
  v50 = v22;
  v48 = *((unsigned __int8 *)a4 + 32);
  v23 = a4[5];
  v46 = a4[6];
  v47 = v23;
  v45 = *((_DWORD *)a4 + 14);
  v60 = a2;
  sub_249DC091C(a2, (uint64_t)v21, v24);
  v25 = (uint64_t)&v21[*(int *)(v19 + 20)];
  sub_249DCC274(v25, (uint64_t)v18, &qword_2578D6288);
  v26 = sub_249F1E8D8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26);
  sub_249DCC2FC((uint64_t)v18, &qword_2578D6288);
  if (v28 == 1)
  {
    sub_249F1E8CC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v16, 0, 1, v26);
    sub_249DC02EC((uint64_t)v16, v25);
  }
  sub_249DC091C((uint64_t)v21, v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v29 = v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client;
  v30 = v43;
  *(_QWORD *)v29 = v44;
  *(_QWORD *)(v29 + 8) = v30;
  *(_DWORD *)(v29 + 16) = v42;
  v31 = v54;
  if (!v54)
    v31 = objc_msgSend((id)objc_opt_self(), sel_service);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__mediaAnalysisService) = v31;
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__modelManagerInterface) = v55;
  v32 = v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions;
  *(_QWORD *)v32 = v53;
  *(_BYTE *)(v32 + 8) = v52;
  *(_BYTE *)(v32 + 9) = v51;
  v33 = v41;
  *(_QWORD *)(v32 + 16) = v41;
  *(_BYTE *)(v32 + 24) = v50;
  *(_DWORD *)(v32 + 28) = v49;
  *(_BYTE *)(v32 + 32) = v48;
  v34 = v46;
  *(_QWORD *)(v32 + 40) = v47;
  *(_QWORD *)(v32 + 48) = v34;
  *(_DWORD *)(v32 + 56) = v45;
  v35 = v59;
  sub_249DCC274(v59, v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__recipePreparer, &qword_2578D6448);
  v36 = (_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__forensicsReporter);
  v37 = v57;
  v38 = v58;
  *v36 = v56;
  v36[1] = v37;
  sub_249D9E1E4(v38, v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(v38);
  sub_249DCC2FC(v35, &qword_2578D6448);
  sub_249DC05A8(v60, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__strikeSizes) = v33;
  sub_249DC05A8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  return v9;
}

uint64_t sub_249DE2A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[27] = a3;
  v4[28] = v3;
  v4[25] = a1;
  v4[26] = a2;
  v4[29] = type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(0);
  v4[30] = swift_task_alloc();
  v4[31] = type metadata accessor for GenerationState();
  v4[32] = swift_task_alloc();
  v5 = sub_249F1E8D8();
  v4[33] = v5;
  v4[34] = *(_QWORD *)(v5 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v4[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DE2B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_1;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_signpost_type_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_signpost_id_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76[3];

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224)
     + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  v6 = v5 + *(int *)(v4 + 28);
  sub_249DC091C(v6, *(_QWORD *)(v0 + 312), type metadata accessor for GenerationRecipe);
  v69 = v5;
  v70 = v5 + *(int *)(v4 + 20);
  sub_249DCC274(v70, v1, &qword_2578D6288);
  v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  result = v72(v1, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  v9 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 224)
      + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller;
  v74 = *(_OWORD *)(v12 + 24);
  v13 = *(_QWORD *)(v12 + 24);
  v14 = __swift_project_boxed_opaque_existential_1((_QWORD *)v12, v13);
  *(_OWORD *)(v0 + 120) = v74;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 96));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
  sub_249E0ED70(v8, v9, v0 + 96, v0 + 56);
  sub_249DC05A8(v8, type metadata accessor for GenerationRecipe);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v0 + 320) = v16;
  v16(v9, v11);
  if (!*(_QWORD *)(v0 + 80))
  {
    sub_249DCC2FC(v0 + 56, &qword_2578D7DE0);
    v27 = *(_QWORD *)(v6 + 8);
    v26 = *(_QWORD *)(v6 + 16);
    sub_249D9D9B0();
    swift_allocError();
    *(_QWORD *)v28 = v27;
    *(_QWORD *)(v28 + 8) = v26;
    *(_BYTE *)(v28 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v68 = v16;
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 264);
  sub_249D9E174((__int128 *)(v0 + 56), v0 + 16);
  sub_249DCC274(v70, v17, &qword_2578D6288);
  result = v72(v17, 1, v18);
  if ((_DWORD)result == 1)
    goto LABEL_19;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 264));
  v76[0] = 0x206B736154;
  v76[1] = 0xE500000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  *(_QWORD *)(v0 + 328) = 0x206B736154;
  *(_QWORD *)(v0 + 336) = 0xE500000000000000;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v75 = sub_249E14D88();
  v20 = v19;
  *(_QWORD *)(v0 + 344) = v19;
  if (qword_2578D5D40 != -1)
    swift_once();
  v21 = sub_249F1EF38();
  *(_QWORD *)(v0 + 352) = __swift_project_value_buffer(v21, (uint64_t)qword_2578FF378);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v22 = sub_249F1EF20();
  v23 = sub_249F1F82C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v76[0] = v25;
    *(_DWORD *)v24 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_249E68CA8(0x206B736154, 0xE500000000000000, v76);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_249E68CA8(v75, v20, v76);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v22, v23, "%s generating emoji with %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v25, -1, -1);
    MEMORY[0x24BD06618](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v29 = sub_249F1EE9C();
  *(_QWORD *)(v0 + 360) = v29;
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v0 + 368) = v30;
  v71 = v30;
  v73 = v29;
  v31 = swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v31;
  if (qword_2578D5D80 != -1)
    swift_once();
  v33 = *(_QWORD *)(v0 + 280);
  v32 = *(_QWORD *)(v0 + 288);
  v34 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 272);
  v36 = sub_249F1EED8();
  __swift_project_value_buffer(v36, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, v32, v34);
  swift_bridgeObjectRetain_n();
  v37 = sub_249F1EEC0();
  v38 = sub_249F1F8A4();
  v39 = sub_249F1F958();
  v40 = *(_QWORD *)(v0 + 280);
  v41 = v31;
  v42 = *(_QWORD *)(v0 + 264);
  if ((v39 & 1) != 0)
  {
    v66 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v66, v41, v73);
    v43 = swift_slowAlloc();
    v67 = swift_slowAlloc();
    v76[0] = v67;
    *(_DWORD *)v43 = 136446466;
    v44 = sub_249F1FE08();
    *(_QWORD *)(v0 + 168) = sub_249E68CA8(v44, v45, v76);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v46 = v42;
    v47 = v71;
    v68(v40, v46);
    *(_WORD *)(v43 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_249E68CA8(v75, v20, v76);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    v48 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v37, v38, v48, "generateEmojiTask", "%{public}s %{public}s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v67, -1, -1);
    MEMORY[0x24BD06618](v43, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v66, v73);
    swift_task_dealloc();
    v49 = v69;
  }
  else
  {

    v68(v40, v42);
    swift_bridgeObjectRelease_n();
    v49 = v69;
    v47 = v71;
  }
  v50 = *(_QWORD *)(v0 + 256);
  v51 = *(_QWORD *)(v0 + 208);
  swift_task_alloc();
  (*(void (**)(void))(v47 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 384) = sub_249F1EEFC();
  swift_task_dealloc();
  sub_249DC091C(v49, v50, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  if (v51)
  {
    v52 = *(_QWORD *)(v0 + 256);
    v53 = *(_QWORD *)(v0 + 240);
    v54 = *(_QWORD *)(v0 + 216);
    v55 = *(_QWORD *)(v0 + 224);
    v56 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = v56;
    v57[3] = v54;
    v57[4] = v55;
    sub_249DC09B8((uint64_t)v56);
    sub_249DC09B8((uint64_t)v56);
    swift_retain();
    sub_249DC0A2C(0);
    *(_QWORD *)(v0 + 136) = sub_249DE6DFC;
    *(_QWORD *)(v0 + 144) = v57;
    swift_storeEnumTagMultiPayload();
    v56(v55, v53);
    sub_249DC05A8(v53, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    sub_249DC091C(v52, v53, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    v56(v55, v53);
    sub_249DC05A8(v53, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    *(_QWORD *)v53 = 0;
    *(_QWORD *)(v53 + 8) = 0;
    *(_BYTE *)(v53 + 16) = 1;
    *(_QWORD *)(v53 + 24) = 0;
    swift_storeEnumTagMultiPayload();
    v56(v55, v53);
    sub_249DC0A2C((uint64_t)v56);
    sub_249DC05A8(v53, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
  }
  v58 = *(_QWORD *)(v0 + 288);
  v59 = *(_QWORD *)(v0 + 256);
  v61 = *(_QWORD *)(v0 + 216);
  v60 = *(_QWORD *)(v0 + 224);
  v62 = *(_QWORD *)(v0 + 208);
  v63 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v63;
  v63[2] = v60;
  v63[3] = v58;
  v63[4] = v59;
  v63[5] = v0 + 16;
  v63[6] = v62;
  v63[7] = v61;
  v63[8] = v75;
  v63[9] = v20;
  v63[10] = v0 + 136;
  v63[11] = 0x206B736154;
  v63[12] = 0xE500000000000000;
  v64 = swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v64;
  *(_QWORD *)(v64 + 16) = 0x206B736154;
  *(_QWORD *)(v64 + 24) = 0xE500000000000000;
  v65 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v65;
  *v65 = v0;
  v65[1] = sub_249DE34F8;
  return sub_249F1FE38();
}

uint64_t sub_249DE34F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249DE3588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 264);
  sub_249DC0A2C(*(_QWORD *)(v0 + 136));
  sub_249DC05A8(v6, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  sub_249DDDF68("generateEmojiTask", 17, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4(v5, v7);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE36A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void (*v15)(uint64_t, _QWORD *);
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DC0A2C(*(_QWORD *)(v0 + 136));
  sub_249DC05A8(v2, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_249F1EF20();
  v6 = sub_249F1F820();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 336);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_249E68CA8(v9, v8, &v28);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    v12 = v7;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 160) = v13;
    sub_249F1F9AC();
    *v11 = v13;

    _os_log_impl(&dword_249D98000, v5, v6, "%s emoji generation failed - %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v27, -1, -1);
    MEMORY[0x24BD06618](v10, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 416);
    swift_bridgeObjectRelease_n();

  }
  v15 = *(void (**)(uint64_t, _QWORD *))(v0 + 208);
  if (v15)
  {
    v16 = *(void **)(v0 + 416);
    v17 = *(_QWORD **)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 224);
    *v17 = v16;
    swift_storeEnumTagMultiPayload();
    v19 = v16;
    v15(v18, v17);
    sub_249DC05A8((uint64_t)v17, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
  }
  v20 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 360);
  v22 = *(_QWORD *)(v0 + 368);
  v23 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  v24 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 264);
  swift_willThrow();
  sub_249DDDF68("generateEmojiTask", 17, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23(v24, v25);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t KeyboardEmojiGenerator.GenerationTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  v7 = type metadata accessor for GenerationState();
  sub_249DCC274(v6 + *(int *)(v7 + 20), (uint64_t)v5, &qword_2578D6288);
  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  __break(1u);
  return result;
}

uint64_t sub_249DE3ABC(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, char *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v11 = type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v13[16] = a3 & 1;
  *((_QWORD *)v13 + 3) = 0;
  swift_storeEnumTagMultiPayload();
  a4(a6, v13);
  return sub_249DC05A8((uint64_t)v13, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
}

uint64_t sub_249DE3B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 312) = v13;
  *(_QWORD *)(v8 + 320) = v14;
  *(_OWORD *)(v8 + 296) = v12;
  *(_QWORD *)(v8 + 280) = a7;
  *(_QWORD *)(v8 + 288) = a8;
  *(_QWORD *)(v8 + 264) = a5;
  *(_QWORD *)(v8 + 272) = a6;
  *(_QWORD *)(v8 + 248) = a3;
  *(_QWORD *)(v8 + 256) = a4;
  *(_QWORD *)(v8 + 232) = a1;
  *(_QWORD *)(v8 + 240) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6E70);
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  v9 = type metadata accessor for GeneratedImage();
  *(_QWORD *)(v8 + 336) = v9;
  *(_QWORD *)(v8 + 344) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  *(_QWORD *)(v8 + 360) = sub_249F1E584();
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  type metadata accessor for AugmentedPrompt();
  *(_QWORD *)(v8 + 376) = swift_task_alloc();
  *(_QWORD *)(v8 + 384) = type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(0);
  *(_QWORD *)(v8 + 392) = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)(v8 + 400) = swift_task_alloc();
  *(_QWORD *)(v8 + 408) = swift_task_alloc();
  *(_QWORD *)(v8 + 416) = swift_task_alloc();
  *(_QWORD *)(v8 + 424) = swift_task_alloc();
  v10 = sub_249F1E8D8();
  *(_QWORD *)(v8 + 432) = v10;
  *(_QWORD *)(v8 + 440) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 448) = swift_task_alloc();
  *(_QWORD *)(v8 + 456) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DE3D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  NSObject *v15;
  os_signpost_type_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  os_signpost_id_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  os_signpost_type_t v38;
  uint64_t (*v39)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller;
  *(_QWORD *)(v0 + 464) = OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller;
  v3 = *(_QWORD *)(v1 + v2 + 24);
  v4 = *(_QWORD *)(v1 + v2 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + v2), v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v6 = sub_249F1EE9C();
    *(_QWORD *)(v0 + 472) = v6;
    v7 = *(_QWORD *)(v6 - 8);
    *(_QWORD *)(v0 + 480) = v7;
    *(_QWORD *)(v0 + 488) = *(_QWORD *)(v7 + 64);
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v8;
    if (qword_2578D5D80 != -1)
      swift_once();
    v9 = *(_QWORD *)(v0 + 456);
    v11 = *(_QWORD *)(v0 + 432);
    v10 = *(_QWORD *)(v0 + 440);
    v12 = *(_QWORD *)(v0 + 248);
    v13 = sub_249F1EED8();
    *(_QWORD *)(v0 + 504) = __swift_project_value_buffer(v13, (uint64_t)qword_2578FF408);
    sub_249F1EEC0();
    sub_249F1EE78();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    *(_QWORD *)(v0 + 512) = v14;
    v14(v9, v12, v11);
    v15 = sub_249F1EEC0();
    v16 = sub_249F1F8A4();
    v17 = sub_249F1F958();
    v18 = *(_QWORD *)(v0 + 456);
    v20 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 440);
    if ((v17 & 1) != 0)
    {
      v37 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v37, v8, v6);
      v38 = v16;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v40 = v22;
      *(_DWORD *)v21 = 136446210;
      sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v23 = sub_249F1FE08();
      *(_QWORD *)(v0 + 224) = sub_249E68CA8(v23, v24, &v40);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v25(v18, v20);
      v26 = sub_249F1EE84();
      _os_signpost_emit_with_name_impl(&dword_249D98000, v15, v38, v26, "prepareRecipe", "%{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v22, -1, -1);
      MEMORY[0x24BD06618](v21, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v37, v6);
      swift_task_dealloc();
    }
    else
    {

      v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v25(v18, v20);
    }
    *(_QWORD *)(v0 + 520) = v25;
    v27 = *(_QWORD *)(v0 + 416);
    v29 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD **)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 240);
    swift_task_alloc();
    v31 = *(void (**)(void))(v7 + 16);
    *(_QWORD *)(v0 + 528) = v31;
    v31();
    *(_QWORD *)(v0 + 536) = sub_249F1EF08();
    swift_allocObject();
    *(_QWORD *)(v0 + 544) = sub_249F1EEFC();
    swift_task_dealloc();
    v32 = v28[3];
    v33 = v28[4];
    __swift_project_boxed_opaque_existential_1(v28, v32);
    v34 = *(int *)(type metadata accessor for GenerationState() + 28);
    *(_DWORD *)(v0 + 180) = v34;
    sub_249DC091C(v29 + v34, v27, type metadata accessor for GenerationRecipe);
    v35 = v30 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__recipePreparer;
    v39 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v33 + 32)
                                                                            + *(_QWORD *)(v33 + 32));
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 552) = v36;
    *v36 = v0;
    v36[1] = sub_249DE41CC;
    return v39(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 416), v35, v32, v33);
  }
}

uint64_t sub_249DE41CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 560) = v0;
  swift_task_dealloc();
  sub_249DC05A8(*(_QWORD *)(v2 + 416), type metadata accessor for GenerationRecipe);
  return swift_task_switch();
}

uint64_t sub_249DE4240()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  unint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_signpost_type_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  os_signpost_id_t v66;
  uint8_t *v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void);
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  os_signpost_type_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98[2];
  int v99;

  sub_249DE6E0C(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 256) + *(int *)(v0 + 180));
  v1 = sub_249F1EEC0();
  v2 = swift_task_alloc();
  sub_249F1EEF0();
  v3 = sub_249F1F898();
  if ((sub_249F1F958() & 1) != 0)
  {
    v4 = sub_249F1EEE4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x24BEE7808] && v7 == *MEMORY[0x24BEE7808])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      v8 = "";
    }
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 528);
    v13 = *(_QWORD *)(v0 + 480);
    v14 = *(_QWORD *)(v0 + 472);
    swift_task_dealloc();
    v15 = swift_task_alloc();
    v12(v15, v2, v14);
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v1, v3, v17, "prepareRecipe", v8, v16, 2u);
    MEMORY[0x24BD06618](v16, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v11(v2, v14);
    v11(v15, v14);
    swift_task_dealloc();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 472);
    v10 = *(_QWORD *)(v0 + 480);

    v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v2, v9);
  }
  *(_QWORD *)(v0 + 568) = v11;
  v18 = (_QWORD *)(*(_QWORD *)(v0 + 240) + *(_QWORD *)(v0 + 464));
  swift_task_dealloc();
  v19 = v18[3];
  v20 = v18[4];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20) & 1) != 0)
    goto LABEL_9;
  v21 = *(_QWORD *)(v0 + 560);
  sub_249F1F670();
  if (v21)
    goto LABEL_11;
  v25 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  if (v25)
  {
    v26 = *(_QWORD *)(v0 + 392);
    v27 = *(_QWORD *)(v0 + 240);
    sub_249DC091C(*(_QWORD *)(v0 + 256), v26, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v25(v27, v26);
    sub_249DC0A2C((uint64_t)v25);
    sub_249DC05A8(v26, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
  }
  v28 = *(_QWORD *)(v0 + 240);
  v29 = v28 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions;
  v30 = *(_QWORD *)(v28
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions
                  + 40);
  if (v30)
  {
    v31 = *(_QWORD *)(v29 + 48);
    v32 = *(_DWORD *)(v29 + 56);
    if (qword_2578D5CE8 != -1)
      swift_once();
    v33 = sub_249F1EF38();
    __swift_project_value_buffer(v33, (uint64_t)qword_2578FF300);
    swift_bridgeObjectRetain_n();
    v34 = sub_249F1EF20();
    v35 = sub_249F1F82C();
    v36 = os_log_type_enabled(v34, v35);
    v37 = *(_QWORD *)(v0 + 296);
    if (v36)
    {
      v92 = *(_QWORD *)(v0 + 288);
      v38 = (uint8_t *)swift_slowAlloc();
      v95 = v31;
      v39 = swift_slowAlloc();
      v98[0] = v39;
      *(_DWORD *)v38 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 216) = sub_249E68CA8(v92, v37, v98);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249D98000, v34, v35, "engineered prompt language check for %s", v38, 0xCu);
      swift_arrayDestroy();
      v40 = v39;
      v31 = v95;
      MEMORY[0x24BD06618](v40, -1, -1);
      MEMORY[0x24BD06618](v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v41 = *(_QWORD *)(v0 + 376);
    sub_249DC091C(*(_QWORD *)(v0 + 256) + *(int *)(v0 + 180), *(_QWORD *)(v0 + 408), type metadata accessor for GenerationRecipe);
    sub_249E030D8(v41);
    sub_249F1E56C();
    sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
    v42._countAndFlagsBits = sub_249F1F4C0();
    v98[0] = v30;
    v98[1] = v31;
    v99 = v32;
    LanguageCheckingParameters.check(text:)(v42);
    v43 = *(_QWORD *)(v0 + 376);
    if (v44)
    {
      sub_249DC05A8(v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      swift_bridgeObjectRelease();
      swift_release();
      v22 = *(_QWORD *)(v0 + 496);
      v23 = *(_QWORD *)(v0 + 472);
      sub_249DC05A8(*(_QWORD *)(v0 + 408), type metadata accessor for GenerationRecipe);
      goto LABEL_12;
    }
    v45 = *(_QWORD *)(v0 + 408);
    sub_249DC05A8(v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    swift_bridgeObjectRelease();
    sub_249DC05A8(v45, type metadata accessor for GenerationRecipe);
    v28 = *(_QWORD *)(v0 + 240);
  }
  v46 = (_QWORD *)(v28 + *(_QWORD *)(v0 + 464));
  v47 = v46[3];
  v48 = v46[4];
  __swift_project_boxed_opaque_existential_1(v46, v47);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48) & 1) != 0)
  {
LABEL_9:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_11:
    v22 = *(_QWORD *)(v0 + 496);
    v23 = *(_QWORD *)(v0 + 472);
    swift_release();
LABEL_12:
    v11(v22, v23);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v49 = (uint64_t *)(*(_QWORD *)(v0 + 240)
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__forensicsReporter);
  v50 = *v49;
  *(_QWORD *)(v0 + 576) = *v49;
  *(_QWORD *)(v0 + 584) = v49[1];
  v51 = 0;
  if (v50)
  {
    type metadata accessor for ForensicsHandler();
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = 0;
  }
  v96 = v0 + 16;
  v97 = v51;
  *(_QWORD *)(v0 + 592) = v51;
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v53 = *(_QWORD *)(v0 + 448);
  v54 = *(_QWORD *)(v0 + 432);
  v55 = *(_QWORD *)(v0 + 248);
  v56 = swift_task_alloc();
  *(_QWORD *)(v0 + 600) = v56;
  sub_249F1EEC0();
  sub_249F1EE78();
  v52(v53, v55, v54);
  v57 = sub_249F1EEC0();
  v58 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 528);
    v89 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v90 = v58;
    v60 = *(_QWORD *)(v0 + 472);
    v61 = *(_QWORD *)(v0 + 448);
    v87 = *(_QWORD *)(v0 + 432);
    v88 = swift_task_alloc();
    v59(v88, v56, v60);
    v93 = v0;
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v98[0] = v63;
    *(_DWORD *)v62 = 136446210;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v64 = sub_249F1FE08();
    *(_QWORD *)(v93 + 208) = sub_249E68CA8(v64, v65, v98);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v89(v61, v87);
    v66 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v57, v90, v66, "generateImages", "%{public}s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v63, -1, -1);
    v67 = v62;
    v0 = v93;
    MEMORY[0x24BD06618](v67, -1, -1);

    v11(v88, v60);
    swift_task_dealloc();
  }
  else
  {
    v68 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v69 = *(_QWORD *)(v0 + 448);
    v70 = *(_QWORD *)(v0 + 432);

    v68(v69, v70);
  }
  v71 = *(void (**)(void))(v0 + 528);
  v72 = *(uint64_t **)(v0 + 304);
  v73 = *(_QWORD *)(v0 + 240);
  swift_task_alloc();
  v71();
  swift_allocObject();
  *(_QWORD *)(v0 + 608) = sub_249F1EEFC();
  swift_task_dealloc();
  v74 = *(_QWORD *)(v73
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__modelManagerInterface);
  v75 = *v72;
  v76 = v72[1];
  if (v97)
  {
    *(_QWORD *)(v0 + 104) = type metadata accessor for ForensicsHandler();
    *(_QWORD *)(v0 + 112) = &off_251B4FC48;
    *(_QWORD *)(v0 + 80) = v97;
  }
  else
  {
    *(_QWORD *)(v0 + 112) = 0;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  *(_QWORD *)(v0 + 616) = v97;
  v77 = *(_QWORD *)(v0 + 400);
  v78 = *(_QWORD **)(v0 + 264);
  v79 = *(_QWORD *)(v0 + 240);
  v80 = *(_QWORD *)(v0 + 256) + *(int *)(v0 + 180);
  *(_QWORD *)(v0 + 16) = v74;
  *(_QWORD *)(v0 + 24) = v75;
  *(_QWORD *)(v0 + 32) = v76;
  sub_249DE6E50(v0 + 80, v0 + 40);
  v81 = v78[4];
  v94 = v78[3];
  v82 = v0;
  __swift_project_boxed_opaque_existential_1(v78, v94);
  sub_249DC091C(v80, v77, type metadata accessor for GenerationRecipe);
  v83 = *(_DWORD *)(v79 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client + 16);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v79
                                    + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client);
  v84 = v0 + 160;
  *(_DWORD *)(v0 + 176) = v83;
  v85 = *(int **)(v81 + 40);
  swift_retain();
  sub_249DC09B8(v75);
  v91 = (int *)((char *)v85 + *v85);
  swift_retain();
  v86 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v82 + 624) = v86;
  *v86 = v82;
  v86[1] = sub_249DE4CDC;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v91)(*(_QWORD *)(v82 + 400), v84, v96, v94, v81);
}

uint64_t sub_249DE4CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[79] = a1;
  v3[80] = v1;
  swift_task_dealloc();
  sub_249DC05A8(v3[50], type metadata accessor for GenerationRecipe);
  return swift_task_switch();
}

uint64_t sub_249DE4D6C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *);
  unint64_t *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;

  v1 = sub_249F1EEC0();
  v2 = swift_task_alloc();
  sub_249F1EEF0();
  v3 = sub_249F1F898();
  if ((sub_249F1F958() & 1) != 0)
  {
    v4 = sub_249F1EEE4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x24BEE7808] && v7 == *MEMORY[0x24BEE7808])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      v8 = "";
    }
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 528);
    v13 = *(_QWORD *)(v0 + 472);
    swift_task_dealloc();
    v14 = swift_task_alloc();
    v12(v14, v2, v13);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v1, v3, v16, "generateImages", v8, v15, 2u);
    MEMORY[0x24BD06618](v15, -1, -1);

    v11(v2, v13);
    v11(v14, v13);
    swift_task_dealloc();
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v10 = *(_QWORD *)(v0 + 472);

    v9(v2, v10);
  }
  v17 = *(_QWORD *)(v0 + 592);
  swift_task_dealloc();
  if (v17)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 616) + 16);
    if (v18)
    {
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = *(void (**)(uint64_t *))(v0 + 576);
        swift_bridgeObjectRetain();
        v21 = (unint64_t *)(v18 + 40);
        do
        {
          if (*(_QWORD *)(v0 + 576))
          {
            v22 = *v21;
            LOBYTE(v53) = *((_BYTE *)v21 - 8);
            v54 = v22;
            swift_bridgeObjectRetain();
            v20(&v53);
            swift_bridgeObjectRelease();
          }
          v21 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
      }
    }
  }
  v23 = (_QWORD *)(*(_QWORD *)(v0 + 240) + *(_QWORD *)(v0 + 464));
  v24 = v23[3];
  v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_19:
    v27 = *(_QWORD *)(v0 + 600);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v29 = *(_QWORD *)(v0 + 496);
    v30 = *(_QWORD *)(v0 + 472);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_249DE6E98(v0 + 16);
    v28(v27, v30);
    v28(v29, v30);
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v26 = *(_QWORD *)(v0 + 640);
  sub_249F1F670();
  if (v26)
    goto LABEL_19;
  v32 = *(_QWORD *)(v0 + 632);
  v33 = *(_QWORD *)(v32 + 16);
  if (v33 != 1)
  {
    v34 = *(_QWORD *)(v0 + 600);
    if (v33)
    {
      v44 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      v45 = *(_QWORD *)(v0 + 496);
      v46 = *(_QWORD *)(v0 + 472);
      v53 = 0;
      v54 = 0xE000000000000000;
      sub_249F1FA84();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 184) = v33;
      v47 = sub_249F1FE08();
      v49 = v48;
      swift_bridgeObjectRelease();
      v53 = v47;
      v54 = v49;
      sub_249F1F460();
      v50 = v53;
      v51 = v54;
      sub_249DE6684();
      swift_allocError();
      *v52 = v50;
      v52[1] = v51;
      swift_willThrow();
      swift_release();
      swift_release();
      swift_release();
      sub_249DE6E98(v0 + 16);
      v44(v34, v46);
      v44(v45, v46);
    }
    else
    {
      v35 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      v36 = *(_QWORD *)(v0 + 496);
      v37 = *(_QWORD *)(v0 + 472);
      swift_bridgeObjectRelease();
      sub_249DE6684();
      swift_allocError();
      *v38 = 0xD000000000000015;
      v38[1] = 0x8000000249F350E0;
      swift_willThrow();
      swift_release();
      swift_release();
      swift_release();
      sub_249DE6E98(v0 + 16);
      v35(v34, v37);
      v35(v36, v37);
    }
    goto LABEL_20;
  }
  v39 = *(_QWORD *)(v0 + 336);
  v40 = *(_QWORD *)(v0 + 344);
  v41 = *(_QWORD *)(v0 + 328);
  sub_249DC091C(v32 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v41, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v39);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_249DE6ECC(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 352));
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 648) = v42;
    *v42 = v0;
    v42[1] = sub_249DE53E8;
    v43 = *(_QWORD *)(v0 + 240);
    v42[3] = *(_QWORD *)(v0 + 352);
    v42[4] = v43;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_249DE53E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 656) = a1;
  *(_QWORD *)(v3 + 664) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DE5458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, _QWORD *);
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33[2];

  if (*(_QWORD *)(*(_QWORD *)(v0 + 656) + 16))
  {
    v1 = *(_QWORD *)(v0 + 664);
    v33[0] = *(_QWORD **)(v0 + 656);
    swift_bridgeObjectRetain();
    sub_249E3D748(v33);
    if (v1)
      return swift_release();
    swift_bridgeObjectRelease();
    v10 = v33[0];
    if (qword_2578D5D40 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 264);
    v12 = sub_249F1EF38();
    __swift_project_value_buffer(v12, (uint64_t)qword_2578FF378);
    sub_249D9E1E4(v11, v0 + 120);
    swift_bridgeObjectRetain_n();
    v13 = sub_249F1EF20();
    v14 = sub_249F1F82C();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v0 + 320);
    if (v15)
    {
      v17 = *(_QWORD *)(v0 + 312);
      v18 = swift_slowAlloc();
      v32 = v10;
      v19 = (_QWORD *)swift_slowAlloc();
      v33[0] = v19;
      *(_DWORD *)v18 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 192) = sub_249E68CA8(v17, v16, (uint64_t *)v33);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
      v20 = sub_249F1FE08();
      *(_QWORD *)(v0 + 200) = sub_249E68CA8(v20, v21, (uint64_t *)v33);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 120);
      _os_log_impl(&dword_249D98000, v13, v14, "%s generated emoji with %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      v22 = v19;
      v10 = v32;
      MEMORY[0x24BD06618](v22, -1, -1);
      MEMORY[0x24BD06618](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_1(v0 + 120);
    }

    v23 = *(void (**)(uint64_t, _QWORD *))(v0 + 272);
    if (v23)
    {
      v24 = *(_QWORD **)(v0 + 392);
      v25 = *(_QWORD *)(v0 + 240);
      *v24 = v10;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v23(v25, v24);
      swift_release();
      swift_release();
      swift_release();
      sub_249DC05A8((uint64_t)v24, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }
    v26 = v10;
    v27 = *(_QWORD *)(v0 + 600);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v29 = *(_QWORD *)(v0 + 496);
    v30 = *(_QWORD *)(v0 + 472);
    v31 = *(_QWORD **)(v0 + 232);
    sub_249DC05A8(*(_QWORD *)(v0 + 352), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DE6E98(v0 + 16);
    v28(v27, v30);
    v28(v29, v30);
    *v31 = v26;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 600);
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v5 = *(_QWORD *)(v0 + 496);
    v6 = *(_QWORD *)(v0 + 472);
    v7 = *(_QWORD *)(v0 + 352);
    swift_bridgeObjectRelease();
    sub_249DE6684();
    swift_allocError();
    *v8 = 0xD000000000000027;
    v8[1] = 0x8000000249F350B0;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    sub_249DC05A8(v7, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    sub_249DE6E98(v0 + 16);
    v4(v3, v6);
    v4(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v9();
}

uint64_t sub_249DE59A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 480);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE5A94()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 472);
  swift_release();
  swift_release();
  swift_release();
  sub_249DE6E98(v0 + 16);
  v2(v1, v4);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE5BBC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 352);
  swift_release();
  swift_release();
  swift_release();
  sub_249DC05A8(v5, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  sub_249DE6E98(v0 + 16);
  v2(v1, v4);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE5CF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

id sub_249DE5D10()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id result;
  double v12;
  double v13;
  size_t Width;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGImage *v21;
  size_t Height;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32)
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__strikeSizes);
  if (!v1)
  {
    v17 = *(_QWORD *)(v0 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6CC0);
    v18 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratedImage() - 8) + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_249F21770;
    sub_249DC091C(v17, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
  }
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v28 = MEMORY[0x24BEE4AF8];
    sub_249DB6860(0, v2, 0);
    v3 = v28;
    v4 = (unint64_t *)(v1 + 32);
    v5 = *(_QWORD *)(v28 + 16);
    do
    {
      v7 = *v4++;
      v6 = v7;
      v29 = v3;
      v8 = *(_QWORD *)(v3 + 24);
      if (v5 >= v8 >> 1)
      {
        sub_249DB6860(v8 > 1, v5 + 1, 1);
        v3 = v29;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      *(int64x2_t *)(v3 + 16 * v5++ + 32) = vdupq_n_s64(v6);
      --v2;
    }
    while (v2);
  }
  v9 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 16) = v3;
  v10 = *(void **)v9;
  if (!*(_BYTE *)(v9 + 8))
  {
    v21 = v10;
    Width = CGImageGetWidth(v21);
    Height = CGImageGetHeight(v21);
LABEL_21:
    v16 = Height;

    goto LABEL_22;
  }
  if (*(_BYTE *)(v9 + 8) != 1)
  {
    v21 = v10;
    Width = CVPixelBufferGetWidth(v21);
    Height = CVPixelBufferGetHeight(v21);
    goto LABEL_21;
  }
  result = objc_msgSend(v10, sel_extent);
  if (v12 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((*(_QWORD *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_25;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v13 < 9.22337204e18)
  {
    Width = (uint64_t)v12;
    v16 = (uint64_t)v13;
LABEL_22:
    v23 = *(_QWORD *)(v0 + 32);
    sub_249E3C474(0, 0, Width, v16);
    v30 = *(_BYTE *)(v23
                   + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions
                   + 24);
    sub_249E43578(&v30);
    v25 = v24;
    v26 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 40) = v24;
    *(_QWORD *)(v0 + 48) = v26;
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v27;
    *v27 = v0;
    v27[1] = sub_249DE5FE4;
    return (id)sub_249E25118(v26, v25);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249DE5FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 72) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_249DE6068()
{
  uint64_t v0;
  size_t v1;

  v1 = sub_249DBDED8(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(size_t))(v0 + 8))(v1);
}

uint64_t sub_249DE60B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249DE60EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_2578D5D40 != -1)
    swift_once();
  v4 = sub_249F1EF38();
  __swift_project_value_buffer(v4, (uint64_t)qword_2578FF378);
  swift_bridgeObjectRetain_n();
  v5 = sub_249F1EF20();
  v6 = sub_249F1F82C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_249E68CA8(a1, a2, &v9);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v5, v6, "%s cancellation requested", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t KeyboardEmojiGenerator.GenerationTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall KeyboardEmojiGenerator.GenerationTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1E8D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  v11 = 0x69746172656E6547;
  v12 = 0xEF206B7361546E6FLL;
  v8 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  v9 = type metadata accessor for GenerationState();
  sub_249DCC274(v8 + *(int *)(v9 + 20), (uint64_t)v3, &qword_2578D6288);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_249F1F460();
    return v11;
  }
  return result;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.deinit()
{
  uint64_t v0;

  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState, (uint64_t (*)(_QWORD))type metadata accessor for GenerationState);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__mediaAnalysisService));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249DCC2FC(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__recipePreparer, &qword_2578D6448);
  sub_249DC0A2C(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__forensicsReporter));
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.__deallocating_deinit()
{
  KeyboardEmojiGenerator.GenerationTask.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_249DE65C8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249DE65FC();
  a1[2] = sub_249DE6640();
  result = sub_249DE6684();
  a1[3] = result;
  return result;
}

unint64_t sub_249DE65FC()
{
  unint64_t result;

  result = qword_2578D7CA0;
  if (!qword_2578D7CA0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.GenerationTask.Error, &type metadata for KeyboardEmojiGenerator.GenerationTask.Error);
    atomic_store(result, (unint64_t *)&qword_2578D7CA0);
  }
  return result;
}

unint64_t sub_249DE6640()
{
  unint64_t result;

  result = qword_2578D7CA8;
  if (!qword_2578D7CA8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.GenerationTask.Error, &type metadata for KeyboardEmojiGenerator.GenerationTask.Error);
    atomic_store(result, (unint64_t *)&qword_2578D7CA8);
  }
  return result;
}

unint64_t sub_249DE6684()
{
  unint64_t result;

  result = qword_2578D7CB0;
  if (!qword_2578D7CB0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for KeyboardEmojiGenerator.GenerationTask.Error, &type metadata for KeyboardEmojiGenerator.GenerationTask.Error);
    atomic_store(result, (unint64_t *)&qword_2578D7CB0);
  }
  return result;
}

uint64_t sub_249DE66CC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  v7 = type metadata accessor for GenerationState();
  sub_249DCC274(v6 + *(int *)(v7 + 20), (uint64_t)v5, &qword_2578D6288);
  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  __break(1u);
  return result;
}

uint64_t sub_249DE67A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249DE67F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_249DE6844()
{
  return KeyboardEmojiGenerator.GenerationTask.description.getter();
}

uint64_t sub_249DE6864()
{
  return type metadata accessor for KeyboardEmojiGenerator.GenerationTask();
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.GenerationTask()
{
  uint64_t result;

  result = qword_2578D7CE0;
  if (!qword_2578D7CE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249DE68A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for KeyboardEmojiGenerator.GenerationTask()
{
  return swift_lookUpClassMethod();
}

_QWORD *_s14GenerationTaskC5ErrorOwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14GenerationTaskC5ErrorOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s14GenerationTaskC5ErrorOwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.GenerationTask.Error()
{
  return &type metadata for KeyboardEmojiGenerator.GenerationTask.Error;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.GenerationTask.Progress()
{
  return &type metadata for KeyboardEmojiGenerator.GenerationTask.Progress;
}

ValueMetadata *_s14GenerationTaskC5ErrorO10CodingKeysOMa()
{
  return &_s14GenerationTaskC5ErrorO10CodingKeysON;
}

uint64_t _s14GenerationTaskC5ErrorO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249DE6A80 + 4 * asc_249F23C80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249DE6AA0 + 4 * byte_249F23C85[v4]))();
}

_BYTE *sub_249DE6A80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249DE6AA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DE6AA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DE6AB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DE6AB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DE6AC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysOMa()
{
  return &_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysON;
}

unint64_t sub_249DE6AE0()
{
  unint64_t result;

  result = qword_2578D7DA8;
  if (!qword_2578D7DA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23FB0, &_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7DA8);
  }
  return result;
}

unint64_t sub_249DE6B28()
{
  unint64_t result;

  result = qword_2578D7DB0;
  if (!qword_2578D7DB0)
  {
    result = MEMORY[0x24BD06528](&unk_249F24068, &_s14GenerationTaskC5ErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7DB0);
  }
  return result;
}

unint64_t sub_249DE6B70()
{
  unint64_t result;

  result = qword_2578D7DB8;
  if (!qword_2578D7DB8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23F20, &_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7DB8);
  }
  return result;
}

unint64_t sub_249DE6BB8()
{
  unint64_t result;

  result = qword_2578D7DC0;
  if (!qword_2578D7DC0)
  {
    result = MEMORY[0x24BD06528](&unk_249F23F48, &_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7DC0);
  }
  return result;
}

unint64_t sub_249DE6C00()
{
  unint64_t result;

  result = qword_2578D7DC8;
  if (!qword_2578D7DC8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23FD8, &_s14GenerationTaskC5ErrorO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2578D7DC8);
  }
  return result;
}

unint64_t sub_249DE6C48()
{
  unint64_t result;

  result = qword_2578D7DD0;
  if (!qword_2578D7DD0)
  {
    result = MEMORY[0x24BD06528](&unk_249F24000, &_s14GenerationTaskC5ErrorO10CodingKeysON);
    atomic_store(result, &qword_2578D7DD0);
  }
  return result;
}

uint64_t sub_249DE6C8C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000249F35020)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_249DE6D10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_249DAFCF8;
  return sub_249DE3B7C(a1, v12, v4, v5, v6, v7, v8, v9);
}

void sub_249DE6DC8()
{
  uint64_t v0;

  sub_249DE60EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249DE6DD0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249DE6DFC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_249DE3ABC(a1, a2, a3 & 1, *(void (**)(uint64_t, char *))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_249DE6E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenerationRecipe(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DE6E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DE6E98(uint64_t a1)
{
  destroy for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(a1);
  return a1;
}

uint64_t sub_249DE6ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeneratedImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ImageStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249DE6F4C + 4 * byte_249F24130[*v0]))(0x6F6974616D696E61, 0xE90000000000006ELL);
}

uint64_t sub_249DE6F4C()
{
  return 0x696A6F6D65;
}

uint64_t sub_249DE6F60()
{
  return 0x61727473756C6C69;
}

uint64_t sub_249DE6F80()
{
  return 0x747241656E696CLL;
}

uint64_t sub_249DE6F98()
{
  return 0x686374656B73;
}

void sub_249DE6FAC()
{
  off_2578D7E08 = &unk_251B4D1B0;
}

uint64_t static ImageStyle.allCases.getter()
{
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ImageStyle.allCases.setter(void *a1)
{
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  off_2578D7E08 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ImageStyle.allCases.modify())()
{
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void ImageStyle.id.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_249DE7154()
{
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

void ImageStyle.name.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_249DE723C()
{
  uint64_t v0;

  if (qword_2578D5D60 != -1)
    swift_once();
  v0 = sub_249F1E698();
  swift_bridgeObjectRelease();
  return v0;
}

CGImageRef ImageStyle.representativeImage.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  const __CFURL *v16;
  CGImageSource *v17;
  CGImageRef ImageAtIndex;
  _BYTE v20[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_249F1E7F4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v20[-v9];
  v11 = *v0;
  v20[15] = *v0;
  sub_249DE7894();
  if (qword_2578D5D60 != -1)
    swift_once();
  v12 = (void *)qword_2578FF3E0;
  v13 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_URLForResource_withExtension_, v13, 0);

  if (!v14)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_9;
  }
  sub_249F1E7A0();

  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32);
  v15(v3, v8, v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_9:
    sub_249DE7F50((uint64_t)v3);
    goto LABEL_10;
  }
  v15(v10, v3, v4);
  v16 = (const __CFURL *)sub_249F1E788();
  v17 = CGImageSourceCreateWithURL(v16, 0);

  if (!v17)
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_10;
  }
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v17, 0, 0);

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  if (!ImageAtIndex)
LABEL_10:
    __asm { BR              X9 }
  return ImageAtIndex;
}

void sub_249DE7894()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_249DE7918()
{
  uint64_t v1;

  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return v1;
}

VisualGeneration::ImageStyle_optional __swiftcall ImageStyle.init(id:)(Swift::String id)
{
  char *v1;
  void *object;
  uint64_t countAndFlagsBits;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  VisualGeneration::ImageStyle_optional result;
  char v18;
  char v19;

  object = id._object;
  countAndFlagsBits = id._countAndFlagsBits;
  v4 = v1;
  if ((sub_249F1F49C() & 1) != 0)
  {
    v5 = sub_249F1F424();
    v6 = sub_249DE7F90(v5, countAndFlagsBits, (unint64_t)object);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x24BD04FE0](v6, v8, v10, v12);
    v15 = v14;
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    result.value = ImageStyle.init(rawValue:)(v16).value;
    v18 = v19;
  }
  else
  {
    result.value = swift_bridgeObjectRelease();
    v18 = 5;
  }
  *v4 = v18;
  return result;
}

VisualGeneration::ImageStyle_optional __swiftcall ImageStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VisualGeneration::ImageStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_249F1FC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_249DE7AF4(char *a1)
{
  sub_249E395A8(*a1);
}

void sub_249DE7B00()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249F1FF64();
  __asm { BR              X9 }
}

uint64_t sub_249DE7B50()
{
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

void sub_249DE7BD8()
{
  __asm { BR              X10 }
}

uint64_t sub_249DE7C18()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

void sub_249DE7C8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249F1FF64();
  __asm { BR              X9 }
}

uint64_t sub_249DE7CD8()
{
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

VisualGeneration::ImageStyle_optional sub_249DE7D60(Swift::String *a1)
{
  return ImageStyle.init(rawValue:)(*a1);
}

uint64_t sub_249DE7D6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_249DE7DA0 + 4 * byte_249F24153[*v0]))();
}

void sub_249DE7DA0(_QWORD *a1@<X8>)
{
  *a1 = 0x696A6F6D65;
  a1[1] = 0xE500000000000000;
}

void sub_249DE7DB8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "illustration");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_249DE7DDC(_QWORD *a1@<X8>)
{
  *a1 = 0x747241656E696CLL;
  a1[1] = 0xE700000000000000;
}

void sub_249DE7DF8(_QWORD *a1@<X8>)
{
  *a1 = 0x686374656B73;
  a1[1] = 0xE600000000000000;
}

void sub_249DE7E10(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ImageStyle.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249DE7E34@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2578D5CF8 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = off_2578D7E08;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249DE7EA8()
{
  sub_249DE822C();
  return sub_249F1F514();
}

uint64_t sub_249DE7F04()
{
  sub_249DE822C();
  return sub_249F1F4FC();
}

uint64_t sub_249DE7F50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249DE7F90(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_249F1F448();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_249F1F4D8();
  }
  __break(1u);
  return result;
}

unint64_t sub_249DE8030()
{
  unint64_t result;

  result = qword_2578D7E18;
  if (!qword_2578D7E18)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ImageStyle, &type metadata for ImageStyle);
    atomic_store(result, (unint64_t *)&qword_2578D7E18);
  }
  return result;
}

uint64_t sub_249DE8074()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_249DE8084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D7E20;
  if (!qword_2578D7E20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D7E28);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D7E20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ImageStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_249DE81AC + 4 * byte_249F2415D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249DE81E0 + 4 * byte_249F24158[v4]))();
}

uint64_t sub_249DE81E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DE81E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DE81F0);
  return result;
}

uint64_t sub_249DE81FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DE8204);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_249DE8208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DE8210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageStyle()
{
  return &type metadata for ImageStyle;
}

unint64_t sub_249DE822C()
{
  unint64_t result;

  result = qword_2578D7E30;
  if (!qword_2578D7E30)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ImageStyle, &type metadata for ImageStyle);
    atomic_store(result, (unint64_t *)&qword_2578D7E30);
  }
  return result;
}

uint64_t sub_249DE8270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_249F1E8D8();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DE82E4()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  os_signpost_id_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  os_signpost_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 16);
  v1(v0[13], v0[9] + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id, v0[10]);
  v38[0] = 0x206B736154;
  v38[1] = 0xE500000000000000;
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v0[14] = 0x206B736154;
  v0[15] = 0xE500000000000000;
  if (qword_2578D5CE8 != -1)
    swift_once();
  v2 = sub_249F1EF38();
  v0[16] = __swift_project_value_buffer(v2, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  v3 = sub_249F1EF20();
  v4 = sub_249F1F82C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v38[0] = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_249E68CA8(0x206B736154, 0xE500000000000000, v38);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v3, v4, "%s assigning prompt guidance sketch", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v6, -1, -1);
    MEMORY[0x24BD06618](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7 = sub_249F1EE9C();
  v0[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v0[18] = v8;
  v9 = v8;
  v10 = swift_task_alloc();
  v0[19] = v10;
  if (qword_2578D5D80 != -1)
    swift_once();
  v12 = v0[12];
  v11 = v0[13];
  v13 = v0[10];
  v14 = sub_249F1EED8();
  __swift_project_value_buffer(v14, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  v1(v12, v11, v13);
  v15 = v10;
  v16 = sub_249F1EEC0();
  v17 = sub_249F1F8A4();
  v18 = sub_249F1F958();
  v20 = v0[11];
  v19 = v0[12];
  v21 = v0[10];
  if ((v18 & 1) != 0)
  {
    v36 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v36, v15, v7);
    v35 = v17;
    v22 = (uint8_t *)swift_slowAlloc();
    v37 = v7;
    v23 = swift_slowAlloc();
    v38[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_249F1FE08();
    v0[4] = sub_249E68CA8(v24, v25, v38);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v26(v19, v21);
    v27 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v16, v35, v27, "promptGuidanceSketchAssignment", "%{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v23, -1, -1);
    MEMORY[0x24BD06618](v22, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v36, v37);
    swift_task_dealloc();
  }
  else
  {

    v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v26(v19, v21);
  }
  v0[20] = v26;
  v29 = v0[8];
  v28 = v0[9];
  v30 = v0[7];
  swift_task_alloc();
  (*(void (**)(void))(v9 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  v0[21] = sub_249F1EEFC();
  swift_task_dealloc();
  v31 = (_QWORD *)swift_task_alloc();
  v0[22] = v31;
  v31[2] = v28;
  v31[3] = v30;
  v31[4] = v29;
  v31[5] = 0x206B736154;
  v31[6] = 0xE500000000000000;
  v32 = swift_task_alloc();
  v0[23] = v32;
  *(_QWORD *)(v32 + 16) = 0x206B736154;
  *(_QWORD *)(v32 + 24) = 0xE500000000000000;
  v33 = (_QWORD *)swift_task_alloc();
  v0[24] = v33;
  type metadata accessor for DefinitionSession();
  *v33 = v0;
  v33[1] = sub_249DE8848;
  return sub_249F1FE38();
}

uint64_t sub_249DE8848()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_249DE88D0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  sub_249DDDF68("promptGuidanceSketchAssignment", 30, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE897C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t *);
  void *v18;
  uint64_t v19;
  id v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v1 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_249DDDF68("promptGuidanceSketchAssignment", 30, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  v5 = v1;
  swift_bridgeObjectRetain();
  v6 = v1;
  v7 = sub_249F1EF20();
  v8 = sub_249F1F820();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_249E68CA8(v11, v10, &v26);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    v14 = v9;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v15;
    sub_249F1F9AC();
    *v13 = v15;

    _os_log_impl(&dword_249D98000, v7, v8, "%s prompt guidance sketch rejected - %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v25, -1, -1);
    MEMORY[0x24BD06618](v12, -1, -1);
  }
  else
  {
    v16 = *(void **)(v0 + 200);
    swift_bridgeObjectRelease_n();

  }
  v17 = *(void (**)(uint64_t, uint64_t *))(v0 + 56);
  if (v17)
  {
    v18 = *(void **)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 72);
    v26 = (uint64_t)v18;
    v27 = 64;
    v20 = v18;
    v17(v19, &v26);

  }
  v21 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 80);
  swift_willThrow();
  v21(v22, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id GenerativePlayground.PromptGuidanceSketchAssignmentTask.promptGuidanceSketch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall GenerativePlayground.PromptGuidanceSketchAssignmentTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0xD000000000000023;
}

uint64_t sub_249DE8DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return swift_task_switch();
}

uint64_t sub_249DE8E14()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(_QWORD, _QWORD);
  void *v3;
  char v4;
  id v5;
  uint64_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  NSObject *v22;
  uint64_t v23;
  __CVBuffer *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  unint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t *);
  uint64_t v46;
  id v47;
  size_t v48;
  uint64_t v49;
  OSType PixelFormatType;
  size_t v51;
  size_t Height;
  size_t Width;
  id v54;
  char v55;
  void *v56;
  void (*v57)(_QWORD, _QWORD);
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char v61;

  v1 = v0[4];
  v2 = (void (*)(_QWORD, _QWORD))v0[5];
  v3 = *(void **)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v57 = v2;
  if (v2)
  {
    v58 = *(_QWORD *)(v1 + 16);
    LOBYTE(v59) = v4;
    v5 = v3;
    v2(v1, &v58);

    v1 = v0[4];
  }
  v6 = v0 + 3;
  v7 = v0[3];
  sub_249DE98FC(v1+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession, v7);
  v8 = (int *)type metadata accessor for DefinitionSession();
  v9 = v7 + v8[14];
  v10 = (int *)type metadata accessor for GenerationRecipe(0);
  v11 = v9 + v10[14];
  sub_249DC0768(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(void **)(v11 + 24));
  *(_QWORD *)(v11 + 32) = 0;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  v12 = v9 + v10[15];
  sub_249DC0768(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(void **)(v12 + 24));
  *(_QWORD *)(v12 + 32) = 0;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  v13 = v9 + v10[18];
  sub_249DC0768(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(void **)(v13 + 24));
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  sub_249DC0768(*(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(void **)(v13 + 64));
  *(_OWORD *)(v13 + 65) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  v14 = v7 + v8[9];
  sub_249DC0824(*(void **)v14, *(_QWORD *)(v14 + 8), *(void **)(v14 + 16), *(_QWORD *)(v14 + 24), *(void **)(v14 + 32));
  *(_OWORD *)v14 = xmmword_249F21900;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_BYTE *)(v14 + 40) = 0;
  type metadata accessor for ImageChecker();
  swift_initStaticObject();
  v60 = v3;
  v61 = v4;
  sub_249DDD43C((uint64_t)&v60, &v58);
  v55 = v4;
  v56 = v3;
  v15 = v0[4];
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)(v15
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  v17 = *(_QWORD *)(v15
                  + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                  + 24);
  v18 = *(_QWORD *)(v15
                  + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v15+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller), v17);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18) & 1) != 0)
    goto LABEL_4;
  sub_249F1F670();
  v58 = (uint64_t)v56;
  LOBYTE(v59) = v55;
  v22 = sub_249E9F178(&v58);
  v23 = *v6;
  v24 = v22;
  Width = CVPixelBufferGetWidth(v24);
  Height = CVPixelBufferGetHeight(v24);
  PixelFormatType = CVPixelBufferGetPixelFormatType(v24);
  type metadata accessor for ResolvedImage.HiddenBufferData();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_249F21920;
  sub_249DC0768(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(void **)(v11 + 24));

  *(_QWORD *)v11 = Width;
  *(_QWORD *)(v11 + 8) = Height;
  *(_QWORD *)(v11 + 16) = PixelFormatType;
  *(_QWORD *)(v11 + 24) = v24;
  *(_QWORD *)(v11 + 32) = v25;
  v26 = v23 + v8[7];
  v27 = *(void **)v26;
  LOBYTE(v24) = *(_BYTE *)(v26 + 8);
  v28 = v56;
  sub_249DC0794(v27, (char)v24);
  *(_QWORD *)v26 = v56;
  *(_BYTE *)(v26 + 8) = v55;
  v29 = v16[3];
  v30 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v29);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  if ((v31 & 1) != 0)
  {
LABEL_4:
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    v19 = *v6;
LABEL_6:
    sub_249DE95C8(v19);
    v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  sub_249F1F670();
  type metadata accessor for HEDEdgeDetector();
  swift_allocObject();
  sub_249EAB67C();
  v58 = (uint64_t)v56;
  LOBYTE(v59) = v55;
  v32 = (void *)sub_249EAB900((uint64_t)&v58, 1);
  v54 = v32;
  v58 = (uint64_t)v32;
  LOBYTE(v59) = 1;
  v33 = sub_249E9F1A4(&v58);
  v51 = CVPixelBufferGetWidth((CVPixelBufferRef)v33);
  v48 = CVPixelBufferGetHeight((CVPixelBufferRef)v33);
  LODWORD(v32) = CVPixelBufferGetPixelFormatType((CVPixelBufferRef)v33);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_249F21920;
  sub_249DC0768(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(void **)(v12 + 24));

  *(_QWORD *)v12 = v51;
  *(_QWORD *)(v12 + 8) = v48;
  *(_QWORD *)(v12 + 16) = v32;
  *(_QWORD *)(v12 + 24) = v33;
  *(_QWORD *)(v12 + 32) = v34;
  v35 = v16[3];
  v36 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v35);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    v37 = *v6;

    swift_release();
    v19 = v37;
    goto LABEL_6;
  }
  sub_249F1F670();
  if (qword_2578D5CE8 != -1)
    swift_once();
  v38 = sub_249F1EF38();
  __swift_project_value_buffer(v38, (uint64_t)qword_2578FF300);
  swift_bridgeObjectRetain_n();
  v39 = sub_249F1EF20();
  v40 = sub_249F1F82C();
  v41 = os_log_type_enabled(v39, v40);
  v42 = v0[8];
  if (v41)
  {
    v49 = v0[7];
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v58 = v44;
    *(_DWORD *)v43 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_249E68CA8(v49, v42, &v58);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v39, v40, "%s accepted prompt guidance sketch", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v44, -1, -1);
    MEMORY[0x24BD06618](v43, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (v57)
  {
    v45 = (void (*)(uint64_t, uint64_t *))v0[5];
    v46 = v0[4];
    v58 = (uint64_t)v56;
    LOBYTE(v59) = v55 | 0x80;
    v47 = v28;
    v45(v46, &v58);
    swift_release();

  }
  else
  {

    swift_release();
  }
  v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  return v0;
}

uint64_t sub_249DE95C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DefinitionSession();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DE95C8(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249DE967C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249DE96C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249DE9718()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249DE9768()
{
  return GenerativePlayground.PromptGuidanceSketchAssignmentTask.description.getter();
}

uint64_t sub_249DE9788()
{
  return type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentTask();
}

uint64_t type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentTask()
{
  uint64_t result;

  result = qword_2578D7E70;
  if (!qword_2578D7E70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249DE97CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.PromptGuidanceSketchAssignmentTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_249DE9874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;

  v7 = *(_OWORD *)(v1 + 32);
  v8 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_249DAFCF8;
  *(_QWORD *)(v5 + 64) = v4;
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_249DE98FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DefinitionSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DE9940(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 96) = a6;
  *(_QWORD *)(v7 + 104) = a7;
  *(_BYTE *)(v7 + 176) = a4;
  *(_QWORD *)(v7 + 80) = a3;
  *(_QWORD *)(v7 + 88) = a5;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8028);
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  v8 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v7 + 120) = v8;
  *(_QWORD *)(v7 + 128) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  *(_QWORD *)(v7 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DE99E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 152) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v5 = v3 + v4;
  swift_beginAccess();
  sub_249DE98FC(v5, v1);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v6;
  *v6 = v0;
  v6[1] = sub_249DE9A90;
  return sub_249DA0A34(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 176), v2 | ((HIDWORD(v2) & 1) << 32), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

uint64_t sub_249DE9A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  sub_249DE95C8(v2);
  return swift_task_switch();
}

uint64_t sub_249DE9B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 48))(v1, 1, *(_QWORD *)(v0 + 120)) == 1)
  {
    sub_249DEA8C8(v1);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 152);
    sub_249DEA908(v1, v2);
    swift_beginAccess();
    sub_249DEA94C(v2, v3);
    swift_endAccess();
    sub_249DE95C8(v2);
  }
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(void **)(v0 + 80);
  sub_249DE98FC(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 64));

  sub_249DC0A2C(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE9C04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);

  sub_249DC0A2C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE9C78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 112) = v13;
  *(_QWORD *)(v8 + 120) = v14;
  *(_BYTE *)(v8 + 195) = v12;
  *(_BYTE *)(v8 + 194) = a8;
  *(_QWORD *)(v8 + 96) = a7;
  *(_QWORD *)(v8 + 104) = v11;
  *(_BYTE *)(v8 + 193) = a6;
  *(_BYTE *)(v8 + 192) = a4;
  *(_QWORD *)(v8 + 80) = a3;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 64) = a1;
  *(_QWORD *)(v8 + 72) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8028);
  *(_QWORD *)(v8 + 128) = swift_task_alloc();
  v9 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DE9D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 168) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v2 + v3;
  swift_beginAccess();
  sub_249DE98FC(v4, v1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_249DE9E08;
  return sub_249DA1550(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 192), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 193), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 194));
}

uint64_t sub_249DE9E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  sub_249DE95C8(v2);
  return swift_task_switch();
}

uint64_t sub_249DE9E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = *(_QWORD *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 48))(v1, 1, *(_QWORD *)(v0 + 136)) == 1)
  {
    sub_249DEA8C8(v1);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 168);
    sub_249DEA908(v1, v2);
    swift_beginAccess();
    sub_249DEA94C(v2, v3);
    swift_endAccess();
    sub_249DE95C8(v2);
  }
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(void **)(v0 + 88);
  v5 = *(void **)(v0 + 96);
  v7 = *(void **)(v0 + 80);
  sub_249DE98FC(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 64));

  sub_249DC0A2C(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DE9F90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(void **)(v0 + 88);
  v2 = *(void **)(v0 + 96);

  sub_249DC0A2C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DEA018(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 88) = a6;
  *(_QWORD *)(v7 + 96) = a7;
  *(_DWORD *)(v7 + 168) = a5;
  *(_BYTE *)(v7 + 172) = a4;
  *(_QWORD *)(v7 + 72) = a2;
  *(_QWORD *)(v7 + 80) = a3;
  *(_QWORD *)(v7 + 64) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8028);
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  v8 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v7 + 112) = v8;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 128) = swift_task_alloc();
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DEA0C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_DWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v5 = v3 + v4;
  swift_beginAccess();
  sub_249DE98FC(v5, v1);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v6;
  *v6 = v0;
  v6[1] = sub_249DEA168;
  return sub_249DA2394(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 172), v2 & 0x10101, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_249DEA168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_249DE95C8(v2);
  return swift_task_switch();
}

uint64_t sub_249DEA1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 48))(v1, 1, *(_QWORD *)(v0 + 112)) == 1)
  {
    sub_249DEA8C8(v1);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 136);
    v3 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 144);
    sub_249DEA908(v1, v2);
    swift_beginAccess();
    sub_249DEA94C(v2, v3);
    swift_endAccess();
    sub_249DE95C8(v2);
  }
  v5 = *(void **)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  sub_249DE98FC(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 64));

  sub_249DC0A2C(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DEA2D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);

  sub_249DC0A2C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DEA348(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 88) = a6;
  *(_QWORD *)(v7 + 96) = a7;
  *(_BYTE *)(v7 + 169) = a5;
  *(_BYTE *)(v7 + 168) = a4;
  *(_QWORD *)(v7 + 72) = a2;
  *(_QWORD *)(v7 + 80) = a3;
  *(_QWORD *)(v7 + 64) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8028);
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  v8 = type metadata accessor for DefinitionSession();
  *(_QWORD *)(v7 + 112) = v8;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 128) = swift_task_alloc();
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DEA3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v4 = v2 + v3;
  swift_beginAccess();
  sub_249DE98FC(v4, v1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v5;
  *v5 = v0;
  v5[1] = sub_249DEA484;
  return sub_249E2BC58(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 168), *(_BYTE *)(v0 + 169), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_249DEA484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_249DE95C8(v2);
  return swift_task_switch();
}

uint64_t sub_249DEA4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8028);
  v4[12] = swift_task_alloc();
  v5 = type metadata accessor for DefinitionSession();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DEA594()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v8;

  v1 = v0[15];
  v2 = v0[11];
  v3 = (int *)v0[9];
  v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[17] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v5 = v2 + v4;
  swift_beginAccess();
  sub_249DE98FC(v5, v1);
  v8 = (int *)((char *)v3 + *v3);
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_249DEA638;
  return ((uint64_t (*)(_QWORD, _QWORD))v8)(v0[12], v0[15]);
}

uint64_t sub_249DEA638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  sub_249DE95C8(v2);
  return swift_task_switch();
}

uint64_t sub_249DEA6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 48))(v1, 1, *(_QWORD *)(v0 + 104)) == 1)
  {
    sub_249DEA8C8(v1);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 136);
    sub_249DEA908(v1, v2);
    swift_beginAccess();
    sub_249DEA94C(v2, v3);
    swift_endAccess();
    sub_249DE95C8(v2);
  }
  sub_249DE98FC(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DEA78C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DEA7D4()
{
  uint64_t v0;

  sub_249DE95C8(v0 + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_249DEA800()
{
  return type metadata accessor for DefinitionSessionAccessor();
}

uint64_t type metadata accessor for DefinitionSessionAccessor()
{
  uint64_t result;

  result = qword_2578D7F58;
  if (!qword_2578D7F58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249DEA844()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DefinitionSession();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249DEA8BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_249DEA8C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8028);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DEA908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DefinitionSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DEA94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DefinitionSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DemographicDirectives()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16VisualGeneration21DemographicDirectivesVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DemographicDirectives(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DemographicDirectives(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DemographicDirectives(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DemographicDirectives(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DemographicDirectives()
{
  return &type metadata for DemographicDirectives;
}

uint64_t sub_249DEAB4C(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  uint64_t v10;
  char v11;
  _QWORD v13[3];
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8048);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v14 = v1[2];
  v15 = v9;
  v10 = *((_QWORD *)v1 + 1);
  v13[1] = *((_QWORD *)v1 + 2);
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DEB050();
  sub_249F20018();
  v22 = v8;
  v21 = 0;
  sub_249DEB094();
  sub_249F1FD84();
  if (!v2)
  {
    v11 = v14;
    v20 = v15;
    v19 = 1;
    sub_249DEB0D8();
    sub_249F1FD84();
    v18 = v11;
    v17 = 2;
    sub_249DEB11C();
    sub_249F1FD84();
    v16 = 3;
    sub_249F1FD48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_249DEAD18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DEB050();
  sub_249F1FFF4();
  if (!v2)
  {
    v24 = 0;
    sub_249DEB160();
    sub_249F1FCB8();
    v9 = v25;
    v22 = 1;
    sub_249DEB1A4();
    sub_249F1FCB8();
    v10 = v23;
    v20 = 2;
    sub_249DEB1E8();
    sub_249F1FCB8();
    v18 = v21;
    v19 = 3;
    v11 = sub_249F1FC7C();
    v14 = v13;
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16 = v11;
    v15(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v9;
    *(_BYTE *)(a2 + 1) = v10;
    *(_BYTE *)(a2 + 2) = v18;
    *(_QWORD *)(a2 + 8) = v16;
    *(_QWORD *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249DEAF38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249DEAF60 + 4 * byte_249F24440[*v0]))(6645601, 0xE300000000000000);
}

uint64_t sub_249DEAF60()
{
  return 0x7265646E6567;
}

uint64_t sub_249DEAF74()
{
  return 0x656E6F546E696B73;
}

unint64_t sub_249DEAF8C()
{
  return 0xD000000000000011;
}

uint64_t sub_249DEAFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DEB460(a1, a2);
  *a3 = result;
  return result;
}

void sub_249DEAFCC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_249DEAFD8()
{
  sub_249DEB050();
  return sub_249F20024();
}

uint64_t sub_249DEB000()
{
  sub_249DEB050();
  return sub_249F20030();
}

uint64_t sub_249DEB028@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249DEAD18(a1, a2);
}

uint64_t sub_249DEB03C(_QWORD *a1)
{
  return sub_249DEAB4C(a1);
}

unint64_t sub_249DEB050()
{
  unint64_t result;

  result = qword_2578D8050;
  if (!qword_2578D8050)
  {
    result = MEMORY[0x24BD06528](&unk_249F2457C, &type metadata for DemographicDirectives.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8050);
  }
  return result;
}

unint64_t sub_249DEB094()
{
  unint64_t result;

  result = qword_2578D8058;
  if (!qword_2578D8058)
  {
    result = MEMORY[0x24BD06528](&unk_249F26EB8, &type metadata for Age);
    atomic_store(result, (unint64_t *)&qword_2578D8058);
  }
  return result;
}

unint64_t sub_249DEB0D8()
{
  unint64_t result;

  result = qword_2578D8060;
  if (!qword_2578D8060)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Gender, &type metadata for Gender);
    atomic_store(result, (unint64_t *)&qword_2578D8060);
  }
  return result;
}

unint64_t sub_249DEB11C()
{
  unint64_t result;

  result = qword_2578D8068;
  if (!qword_2578D8068)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinTone, &type metadata for SkinTone);
    atomic_store(result, (unint64_t *)&qword_2578D8068);
  }
  return result;
}

unint64_t sub_249DEB160()
{
  unint64_t result;

  result = qword_2578D8078;
  if (!qword_2578D8078)
  {
    result = MEMORY[0x24BD06528](&unk_249F26EE0, &type metadata for Age);
    atomic_store(result, (unint64_t *)&qword_2578D8078);
  }
  return result;
}

unint64_t sub_249DEB1A4()
{
  unint64_t result;

  result = qword_2578D8080;
  if (!qword_2578D8080)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for Gender, &type metadata for Gender);
    atomic_store(result, (unint64_t *)&qword_2578D8080);
  }
  return result;
}

unint64_t sub_249DEB1E8()
{
  unint64_t result;

  result = qword_2578D8088;
  if (!qword_2578D8088)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for SkinTone, &type metadata for SkinTone);
    atomic_store(result, (unint64_t *)&qword_2578D8088);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DemographicDirectives.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DemographicDirectives.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249DEB308 + 4 * byte_249F24449[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249DEB33C + 4 * byte_249F24444[v4]))();
}

uint64_t sub_249DEB33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DEB344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DEB34CLL);
  return result;
}

uint64_t sub_249DEB358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DEB360);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249DEB364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DEB36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DemographicDirectives.CodingKeys()
{
  return &type metadata for DemographicDirectives.CodingKeys;
}

unint64_t sub_249DEB38C()
{
  unint64_t result;

  result = qword_2578D8090;
  if (!qword_2578D8090)
  {
    result = MEMORY[0x24BD06528](&unk_249F24554, &type metadata for DemographicDirectives.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8090);
  }
  return result;
}

unint64_t sub_249DEB3D4()
{
  unint64_t result;

  result = qword_2578D8098;
  if (!qword_2578D8098)
  {
    result = MEMORY[0x24BD06528](&unk_249F244C4, &type metadata for DemographicDirectives.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8098);
  }
  return result;
}

unint64_t sub_249DEB41C()
{
  unint64_t result;

  result = qword_2578D80A0;
  if (!qword_2578D80A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F244EC, &type metadata for DemographicDirectives.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D80A0);
  }
  return result;
}

uint64_t sub_249DEB460(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6645601 && a2 == 0xE300000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F546E696B73 && a2 == 0xE800000000000000 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F35260)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void Concept.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v12 = a1;
  v11 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  MEMORY[0x24BDAC7A8](v11);
  v10[1] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_249F1E8D8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for Concept(0);
  MEMORY[0x24BDAC7A8](v6);
  sub_249DC091C(v1, (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_249DEB774 + 4 * byte_249F245D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_249DEB774()
{
  sub_249F1FF70();
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249DEB988()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249DEB9B0 + 4 * byte_249F245D5[*v0]))(1853189998, 0xE400000000000000);
}

uint64_t sub_249DEB9B0()
{
  return 0x696A6F6D65;
}

uint64_t sub_249DEB9C4()
{
  return 0x6E6F73726570;
}

uint64_t sub_249DEB9D8()
{
  return 0x45636972656E6567;
}

uint64_t sub_249DEB9FC()
{
  return 0x746E4564656D616ELL;
}

uint64_t sub_249DEBA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF3B68(a1, a2);
  *a3 = result;
  return result;
}

void sub_249DEBA40(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_249DEBA4C()
{
  sub_249DF07E8();
  return sub_249F20024();
}

uint64_t sub_249DEBA74()
{
  sub_249DF07E8();
  return sub_249F20030();
}

uint64_t sub_249DEBAA0()
{
  sub_249DF093C();
  return sub_249F20024();
}

uint64_t sub_249DEBAC8()
{
  sub_249DF093C();
  return sub_249F20030();
}

uint64_t sub_249DEBAF0()
{
  sub_249DF0870();
  return sub_249F20024();
}

uint64_t sub_249DEBB18()
{
  sub_249DF0870();
  return sub_249F20030();
}

uint64_t sub_249DEBB40()
{
  sub_249DF082C();
  return sub_249F20024();
}

uint64_t sub_249DEBB68()
{
  sub_249DF082C();
  return sub_249F20030();
}

uint64_t sub_249DEBB90()
{
  sub_249DF0980();
  return sub_249F20024();
}

uint64_t sub_249DEBBB8()
{
  sub_249DF0980();
  return sub_249F20030();
}

uint64_t sub_249DEBBE0()
{
  sub_249DF08F8();
  return sub_249F20024();
}

uint64_t sub_249DEBC08()
{
  sub_249DF08F8();
  return sub_249F20030();
}

void Concept.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D80A8);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v27);
  v28 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D80B0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v23 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D80B8);
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v20 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_249F1E8D8();
  v19 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v18 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D80C0);
  v16[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D80C8);
  v16[1] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for Concept(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D80D0);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF07E8();
  v33 = v14;
  sub_249F20018();
  sub_249DC091C(v35, (uint64_t)v12, type metadata accessor for Concept);
  v15 = (char *)sub_249DEBF18 + 4 * byte_249F245DA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_249DEBF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 112) = 0;
  sub_249DF0980();
  v4 = *(_QWORD *)(v2 - 136);
  v3 = *(_QWORD *)(v2 - 128);
  sub_249F1FD3C();
  sub_249F1FD90();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 280) + 8))(v1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v4, v3);
}

uint64_t Concept.hashValue.getter()
{
  _BYTE v1[72];

  sub_249F1FF64();
  Concept.hash(into:)((uint64_t)v1);
  return sub_249F1FFA0();
}

uint64_t Concept.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  _QWORD v33[4];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;

  v50 = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8120);
  v43 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v49 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8128);
  v42 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v47 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8130);
  v41 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v46 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8138);
  v40 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v45 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8140);
  v39 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v44 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8148);
  v48 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for Concept(0);
  v10 = MEMORY[0x24BDAC7A8](v51);
  v33[3] = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v33 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v33 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v33 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v33 - v22;
  v24 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_249DF07E8();
  v25 = v54;
  sub_249F1FFF4();
  if (!v25)
  {
    v33[0] = v21;
    v33[1] = v18;
    v33[2] = v14;
    v54 = v23;
    v26 = v52;
    v27 = sub_249F1FD24();
    if (*(_QWORD *)(v27 + 16) == 1)
      __asm { BR              X10 }
    v28 = v26;
    v29 = sub_249F1FAF0();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v31 = v51;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t sub_249DECBF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Concept.init(from:)(a1, a2);
}

void sub_249DECC04(_QWORD *a1)
{
  Concept.encode(to:)(a1);
}

uint64_t sub_249DECC18()
{
  _BYTE v1[72];

  sub_249F1FF64();
  Concept.hash(into:)((uint64_t)v1);
  return sub_249F1FFA0();
}

uint64_t sub_249DECC58()
{
  _BYTE v1[72];

  sub_249F1FF64();
  Concept.hash(into:)((uint64_t)v1);
  return sub_249F1FFA0();
}

BOOL static GenericEntityData.RejectionCategory.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GenericEntityData.RejectionCategory.hash(into:)()
{
  return sub_249F1FF70();
}

uint64_t sub_249DECCD0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0x694663696C627570;
  if (*v0)
    return v1;
  else
    return 0x6867697279706F63;
}

uint64_t sub_249DECD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF3DA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DECD60()
{
  sub_249DF0A08();
  return sub_249F20024();
}

uint64_t sub_249DECD88()
{
  sub_249DF0A08();
  return sub_249F20030();
}

uint64_t sub_249DECDB0()
{
  sub_249DF0AD4();
  return sub_249F20024();
}

uint64_t sub_249DECDD8()
{
  sub_249DF0AD4();
  return sub_249F20030();
}

uint64_t sub_249DECE00()
{
  sub_249DF0A90();
  return sub_249F20024();
}

uint64_t sub_249DECE28()
{
  sub_249DF0A90();
  return sub_249F20030();
}

uint64_t sub_249DECE50()
{
  sub_249DF0A4C();
  return sub_249F20024();
}

uint64_t sub_249DECE78()
{
  sub_249DF0A4C();
  return sub_249F20030();
}

void *static GenericEntityData.RejectionCategory.allCases.getter()
{
  return &unk_251B4D740;
}

uint64_t GenericEntityData.RejectionCategory.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8168);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8170);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8178);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8180);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0A08();
  sub_249F20018();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_249DF0A90();
      sub_249F1FD3C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_249DF0A4C();
      v16 = v21;
      sub_249F1FD3C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_249DF0AD4();
    sub_249F1FD3C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t GenericEntityData.RejectionCategory.hashValue.getter()
{
  sub_249F1FF64();
  sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t GenericEntityData.RejectionCategory.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81A8);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81B0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81B8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81C0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0A08();
  v13 = v41;
  sub_249F1FFF4();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_249F1FD24();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_249F1FAF0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v25 = &type metadata for GenericEntityData.RejectionCategory;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_249DF0A90();
      v20 = v9;
      sub_249F1FC64();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_249DF0A4C();
      v28 = v15;
      sub_249F1FC64();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_249DF0AD4();
    sub_249F1FC64();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_249DED598@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return GenericEntityData.RejectionCategory.init(from:)(a1, a2);
}

uint64_t sub_249DED5AC(_QWORD *a1)
{
  return GenericEntityData.RejectionCategory.encode(to:)(a1);
}

void sub_249DED5C0(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B4D768;
}

uint64_t GenericEntityData.entityString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void GenericEntityData.rejectionCategory.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t GenericEntityData.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  if (v1 == 3)
    return sub_249F1FF7C();
  sub_249F1FF7C();
  return sub_249F1FF70();
}

uint64_t sub_249DED688()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x7453797469746E65;
}

uint64_t sub_249DED6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF3F10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DED6F4()
{
  sub_249DF0B18();
  return sub_249F20024();
}

uint64_t sub_249DED71C()
{
  sub_249DF0B18();
  return sub_249F20030();
}

uint64_t GenericEntityData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81C8);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0B18();
  sub_249F20018();
  v13 = 0;
  sub_249F1FD90();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_249DF0B5C();
    sub_249F1FD84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t GenericEntityData.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_249F1FF64();
  sub_249F1F40C();
  sub_249F1FF7C();
  if (v1 != 3)
    sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t GenericEntityData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0B18();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v9 = sub_249F1FCC4();
  v11 = v10;
  v15 = 1;
  sub_249DF0BA0();
  swift_bridgeObjectRetain();
  sub_249F1FCB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249DEDAAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GenericEntityData.init(from:)(a1, a2);
}

uint64_t sub_249DEDAC0(_QWORD *a1)
{
  return GenericEntityData.encode(to:)(a1);
}

uint64_t sub_249DEDAD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_249F1FF64();
  sub_249F1F40C();
  sub_249F1FF7C();
  if (v1 != 3)
    sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t sub_249DEDB54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_249F1F40C();
  if (v1 == 3)
    return sub_249F1FF7C();
  sub_249F1FF7C();
  return sub_249F1FF70();
}

uint64_t sub_249DEDBB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_249F1FF64();
  sub_249F1F40C();
  sub_249F1FF7C();
  if (v1 != 3)
    sub_249F1FF70();
  return sub_249F1FFA0();
}

uint64_t NamedEntityData.NamedEntityType.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(v1, (uint64_t)v8, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_249F1FF70();
  sub_249D9E308((uint64_t)v8, (uint64_t)v5, type metadata accessor for NamedEntityData.PhotosPersonData);
  sub_249F1FF70();
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  sub_249F1FF7C();
  return sub_249DC05A8((uint64_t)v5, type metadata accessor for NamedEntityData.PhotosPersonData);
}

uint64_t static NamedEntityData.PhotosPersonData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  if ((sub_249F1E8C0() & 1) != 0)
  {
    v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
    v5 = *(_BYTE *)(a1 + *(int *)(v4 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 20)) ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_249DEDDE8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6550736F746F6870;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_249DEDE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF4014(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DEDE50()
{
  sub_249DF0BE4();
  return sub_249F20024();
}

uint64_t sub_249DEDE78()
{
  sub_249DF0BE4();
  return sub_249F20030();
}

uint64_t sub_249DEDEA0()
{
  sub_249DF0C28();
  return sub_249F20024();
}

uint64_t sub_249DEDEC8()
{
  sub_249DF0C28();
  return sub_249F20030();
}

uint64_t sub_249DEDEF0()
{
  sub_249DF0C6C();
  return sub_249F20024();
}

uint64_t sub_249DEDF18()
{
  sub_249DF0C6C();
  return sub_249F20030();
}

uint64_t NamedEntityData.NamedEntityType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81F0);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D81F8);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8200);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0BE4();
  sub_249F20018();
  sub_249DC091C(v27, (uint64_t)v12, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v29 = 0;
    sub_249DF0C6C();
    sub_249F1FD3C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  else
  {
    v17 = v23;
    sub_249D9E308((uint64_t)v12, v23, type metadata accessor for NamedEntityData.PhotosPersonData);
    v30 = 1;
    sub_249DF0C28();
    v18 = v24;
    sub_249F1FD3C();
    sub_249D9BBEC(&qword_2578D8218, type metadata accessor for NamedEntityData.PhotosPersonData, (uint64_t)&protocol conformance descriptor for NamedEntityData.PhotosPersonData);
    v19 = v26;
    sub_249F1FDCC();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_249DC05A8(v17, type metadata accessor for NamedEntityData.PhotosPersonData);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t NamedEntityData.NamedEntityType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1FF64();
  sub_249DC091C(v1, (uint64_t)v8, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_249F1FF70();
  }
  else
  {
    sub_249D9E308((uint64_t)v8, (uint64_t)v5, type metadata accessor for NamedEntityData.PhotosPersonData);
    sub_249F1FF70();
    sub_249F1E8D8();
    sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_249F1F22C();
    sub_249F1FF7C();
    sub_249DC05A8((uint64_t)v5, type metadata accessor for NamedEntityData.PhotosPersonData);
  }
  return sub_249F1FFA0();
}

uint64_t NamedEntityData.NamedEntityType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8228);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8230);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8238);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0BE4();
  v18 = v41;
  sub_249F1FFF4();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_249F1FD24();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_249DF0C28();
        sub_249F1FC64();
        v27 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
        sub_249D9BBEC(&qword_2578D8240, type metadata accessor for NamedEntityData.PhotosPersonData, (uint64_t)&protocol conformance descriptor for NamedEntityData.PhotosPersonData);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_249F1FD00();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_249D9E308(v31, (uint64_t)v17, type metadata accessor for NamedEntityData.NamedEntityType);
      }
      else
      {
        v43 = 0;
        sub_249DF0C6C();
        sub_249F1FC64();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_249D9E308((uint64_t)v17, v21, type metadata accessor for NamedEntityData.NamedEntityType);
    }
    else
    {
      v23 = sub_249F1FAF0();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
      *v25 = v33;
      sub_249F1FC70();
      sub_249F1FAD8();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_249DEE7FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NamedEntityData.NamedEntityType.init(from:)(a1, a2);
}

uint64_t sub_249DEE810(_QWORD *a1)
{
  return NamedEntityData.NamedEntityType.encode(to:)(a1);
}

uint64_t sub_249DEE82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1FF64();
  sub_249DC091C(v1, (uint64_t)v8, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_249F1FF70();
  }
  else
  {
    sub_249D9E308((uint64_t)v8, (uint64_t)v6, type metadata accessor for NamedEntityData.PhotosPersonData);
    sub_249F1FF70();
    sub_249F1E8D8();
    sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_249F1F22C();
    sub_249F1FF7C();
    sub_249DC05A8((uint64_t)v6, type metadata accessor for NamedEntityData.PhotosPersonData);
  }
  return sub_249F1FFA0();
}

uint64_t NamedEntityData.PhotosPersonData.photosPersonVID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NamedEntityData.PhotosPersonData.isInferred.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NamedEntityData.PhotosPersonData(0) + 20));
}

uint64_t NamedEntityData.PhotosPersonData.hash(into:)()
{
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  type metadata accessor for NamedEntityData.PhotosPersonData(0);
  return sub_249F1FF7C();
}

uint64_t sub_249DEEA70()
{
  _BYTE *v0;

  if (*v0)
    return 0x727265666E497369;
  else
    return 0x6550736F746F6870;
}

uint64_t sub_249DEEABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF411C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DEEAE0()
{
  sub_249DF0CB0();
  return sub_249F20024();
}

uint64_t sub_249DEEB08()
{
  sub_249DF0CB0();
  return sub_249F20030();
}

uint64_t NamedEntityData.PhotosPersonData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8248);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0CB0();
  sub_249F20018();
  v8[15] = 0;
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D8108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_249F1FDCC();
  if (!v1)
  {
    type metadata accessor for NamedEntityData.PhotosPersonData(0);
    v8[14] = 1;
    sub_249F1FD9C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t NamedEntityData.PhotosPersonData.hashValue.getter()
{
  sub_249F1FF64();
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  type metadata accessor for NamedEntityData.PhotosPersonData(0);
  sub_249F1FF7C();
  return sub_249F1FFA0();
}

uint64_t NamedEntityData.PhotosPersonData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v25 = a2;
  v4 = sub_249F1E8D8();
  v5 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  v29 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8258);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0CB0();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v10;
  v24 = v12;
  v13 = v7;
  v14 = v29;
  v31 = 0;
  sub_249D9BBEC(&qword_2578D8160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v26;
  v16 = v27;
  v17 = v28;
  sub_249F1FD00();
  v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v19 = (uint64_t)v24;
  v18(v24, v15, v17);
  v30 = 1;
  v20 = sub_249F1FCD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v16);
  *(_BYTE *)(v19 + *(int *)(v23 + 20)) = v20 & 1;
  sub_249DC091C(v19, v25, type metadata accessor for NamedEntityData.PhotosPersonData);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_249DC05A8(v19, type metadata accessor for NamedEntityData.PhotosPersonData);
}

uint64_t sub_249DEEF80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NamedEntityData.PhotosPersonData.init(from:)(a1, a2);
}

uint64_t sub_249DEEF94(_QWORD *a1)
{
  return NamedEntityData.PhotosPersonData.encode(to:)(a1);
}

uint64_t sub_249DEEFA8()
{
  sub_249F1FF64();
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  sub_249F1FF7C();
  return sub_249F1FFA0();
}

uint64_t sub_249DEF030()
{
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  return sub_249F1FF7C();
}

uint64_t sub_249DEF0A0()
{
  sub_249F1FF64();
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  sub_249F1FF7C();
  return sub_249F1FFA0();
}

uint64_t sub_249DEF124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  if ((sub_249F1E8C0() & 1) != 0)
    v6 = *(_BYTE *)(a1 + *(int *)(a3 + 20)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 20)) ^ 1;
  else
    v6 = 0;
  return v6 & 1;
}

uint64_t NamedEntityData.entityString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NamedEntityData.entityType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NamedEntityData(0);
  return sub_249DC091C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for NamedEntityData.NamedEntityType);
}

uint64_t NamedEntityData.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for NamedEntityData(0);
  sub_249DC091C(v0 + *(int *)(v8 + 20), (uint64_t)v7, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_249F1FF70();
  sub_249D9E308((uint64_t)v7, (uint64_t)v4, type metadata accessor for NamedEntityData.PhotosPersonData);
  sub_249F1FF70();
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  sub_249F1FF7C();
  return sub_249DC05A8((uint64_t)v4, type metadata accessor for NamedEntityData.PhotosPersonData);
}

uint64_t sub_249DEF384()
{
  _BYTE *v0;

  if (*v0)
    return 0x7954797469746E65;
  else
    return 0x7453797469746E65;
}

uint64_t sub_249DEF3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF423C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DEF3F0()
{
  sub_249DF0CF4();
  return sub_249F20024();
}

uint64_t sub_249DEF418()
{
  sub_249DF0CF4();
  return sub_249F20030();
}

uint64_t NamedEntityData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8260);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0CF4();
  sub_249F20018();
  v8[15] = 0;
  sub_249F1FD90();
  if (!v1)
  {
    type metadata accessor for NamedEntityData(0);
    v8[14] = 1;
    type metadata accessor for NamedEntityData.NamedEntityType(0);
    sub_249D9BBEC(&qword_2578D8270, type metadata accessor for NamedEntityData.NamedEntityType, (uint64_t)&protocol conformance descriptor for NamedEntityData.NamedEntityType);
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t NamedEntityData.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1FF64();
  sub_249F1F40C();
  v8 = type metadata accessor for NamedEntityData(0);
  sub_249DC091C(v0 + *(int *)(v8 + 20), (uint64_t)v7, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_249F1FF70();
  }
  else
  {
    sub_249D9E308((uint64_t)v7, (uint64_t)v4, type metadata accessor for NamedEntityData.PhotosPersonData);
    sub_249F1FF70();
    sub_249F1E8D8();
    sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_249F1F22C();
    sub_249F1FF7C();
    sub_249DC05A8((uint64_t)v4, type metadata accessor for NamedEntityData.PhotosPersonData);
  }
  return sub_249F1FFA0();
}

uint64_t NamedEntityData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  v17 = a2;
  v19 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v19);
  v18 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8278);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF0CF4();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = a1;
  v11 = (uint64_t)v18;
  v22 = 0;
  v12 = v20;
  *v10 = sub_249F1FCC4();
  v10[1] = v13;
  v21 = 1;
  sub_249D9BBEC(&qword_2578D8280, type metadata accessor for NamedEntityData.NamedEntityType, (uint64_t)&protocol conformance descriptor for NamedEntityData.NamedEntityType);
  sub_249F1FD00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  sub_249D9E308(v11, (uint64_t)v10 + *(int *)(v8 + 20), type metadata accessor for NamedEntityData.NamedEntityType);
  sub_249DC091C((uint64_t)v10, v17, type metadata accessor for NamedEntityData);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData);
}

uint64_t sub_249DEF968@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NamedEntityData.init(from:)(a1, a2);
}

uint64_t sub_249DEF97C(_QWORD *a1)
{
  return NamedEntityData.encode(to:)(a1);
}

uint64_t sub_249DEF994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1F40C();
  sub_249DC091C(v2 + *(int *)(a2 + 20), (uint64_t)v10, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return sub_249F1FF70();
  sub_249D9E308((uint64_t)v10, (uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
  sub_249F1FF70();
  sub_249F1E8D8();
  sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249F1F22C();
  sub_249F1FF7C();
  return sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
}

uint64_t type metadata accessor for NamedEntityData.PhotosPersonData(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D84D8);
}

uint64_t type metadata accessor for NamedEntityData.NamedEntityType(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D8470);
}

uint64_t type metadata accessor for NamedEntityData(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D83C8);
}

uint64_t type metadata accessor for Concept(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D8338);
}

uint64_t sub_249DEFB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1FF64();
  sub_249F1F40C();
  sub_249DC091C(v2 + *(int *)(a2 + 20), (uint64_t)v10, type metadata accessor for NamedEntityData.NamedEntityType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_249F1FF70();
  }
  else
  {
    sub_249D9E308((uint64_t)v10, (uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
    sub_249F1FF70();
    sub_249F1E8D8();
    sub_249D9BBEC(&qword_2578D6260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_249F1F22C();
    sub_249F1FF7C();
    sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
  }
  return sub_249F1FFA0();
}

uint64_t static Concept.makeNamedEntityPhotosPerson(from:photosPersonVID:isInferred:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v10 = (char *)a5 + *(int *)(type metadata accessor for NamedEntityData(0) + 20);
  v11 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a3, v11);
  v12 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v10[*(int *)(v12 + 20)] = a4;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  *a5 = a1;
  a5[1] = a2;
  type metadata accessor for Concept(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t _s16VisualGeneration15NamedEntityDataV0cD4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8670);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_249DC091C(a1, (uint64_t)v14, type metadata accessor for NamedEntityData.NamedEntityType);
  sub_249DC091C(a2, v15, type metadata accessor for NamedEntityData.NamedEntityType);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
      goto LABEL_12;
    goto LABEL_6;
  }
  sub_249DC091C((uint64_t)v14, (uint64_t)v10, type metadata accessor for NamedEntityData.NamedEntityType);
  if (v16(v15, 1, v4) == 1)
  {
    sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData.PhotosPersonData);
LABEL_6:
    sub_249DCC2FC((uint64_t)v14, &qword_2578D8670);
    return 0;
  }
  sub_249D9E308(v15, (uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
  if ((sub_249F1E8C0() & 1) == 0 || v10[*(int *)(v4 + 20)] != v7[*(int *)(v4 + 20)])
  {
    sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
    sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData.PhotosPersonData);
    sub_249DC05A8((uint64_t)v14, type metadata accessor for NamedEntityData.NamedEntityType);
    return 0;
  }
  sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
  sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData.PhotosPersonData);
LABEL_12:
  sub_249DC05A8((uint64_t)v14, type metadata accessor for NamedEntityData.NamedEntityType);
  return 1;
}

uint64_t _s16VisualGeneration15NamedEntityDataV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NamedEntityData.NamedEntityType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8670);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == *a2 && a1[1] == a2[1] || (v14 = sub_249F1FE2C(), result = 0, (v14 & 1) != 0))
  {
    v16 = *(int *)(type metadata accessor for NamedEntityData(0) + 20);
    v17 = (uint64_t)a1 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_249DC091C(v17, (uint64_t)v13, type metadata accessor for NamedEntityData.NamedEntityType);
    sub_249DC091C(v18, v19, type metadata accessor for NamedEntityData.NamedEntityType);
    v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v20((uint64_t)v13, 1, v4) == 1)
    {
      if (v20(v19, 1, v4) == 1)
      {
LABEL_14:
        sub_249DC05A8((uint64_t)v13, type metadata accessor for NamedEntityData.NamedEntityType);
        return 1;
      }
    }
    else
    {
      sub_249DC091C((uint64_t)v13, (uint64_t)v10, type metadata accessor for NamedEntityData.NamedEntityType);
      if (v20(v19, 1, v4) != 1)
      {
        sub_249D9E308(v19, (uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
        if ((sub_249F1E8C0() & 1) == 0 || v10[*(int *)(v4 + 20)] != v7[*(int *)(v4 + 20)])
        {
          sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
          sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData.PhotosPersonData);
          sub_249DC05A8((uint64_t)v13, type metadata accessor for NamedEntityData.NamedEntityType);
          return 0;
        }
        sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
        sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData.PhotosPersonData);
        goto LABEL_14;
      }
      sub_249DC05A8((uint64_t)v10, type metadata accessor for NamedEntityData.PhotosPersonData);
    }
    sub_249DCC2FC((uint64_t)v13, &qword_2578D8670);
    return 0;
  }
  return result;
}

uint64_t _s16VisualGeneration17GenericEntityDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_249F1FE2C(), result = 0, (v5 & 1) != 0))
  {
    if (v2 == 3)
    {
      if (v3 != 3)
        return 0;
    }
    else if (v3 == 3 || v2 != v3)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

void _s16VisualGeneration7ConceptO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[5];
  uint64_t v17;

  v17 = a2;
  v16[0] = type metadata accessor for NamedEntityData(0);
  MEMORY[0x24BDAC7A8](v16[0]);
  v16[1] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249F1E8D8();
  v16[2] = *(_QWORD *)(v4 - 8);
  v16[3] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for Concept(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v16[4] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8678);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DC091C(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Concept);
  sub_249DC091C(v17, (uint64_t)v14, type metadata accessor for Concept);
  v15 = (char *)sub_249DF04BC + 4 * byte_249F245E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_249DF04BC()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  sub_249DC091C(v0, (uint64_t)v1, type metadata accessor for Concept);
  v4 = *v1;
  v3 = v1[1];
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_249DCC2FC(v0, &qword_2578D8678);
LABEL_11:
    v7 = 0;
    return v7 & 1;
  }
  if (v4 == *v2 && v3 == v2[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      sub_249DC05A8(v0, type metadata accessor for Concept);
      goto LABEL_11;
    }
  }
  sub_249DC05A8(v0, type metadata accessor for Concept);
  v7 = 1;
  return v7 & 1;
}

unint64_t sub_249DF07E8()
{
  unint64_t result;

  result = qword_2578D80D8;
  if (!qword_2578D80D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F25B98, &type metadata for Concept.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D80D8);
  }
  return result;
}

unint64_t sub_249DF082C()
{
  unint64_t result;

  result = qword_2578D80E0;
  if (!qword_2578D80E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25B48, &type metadata for Concept.NamedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D80E0);
  }
  return result;
}

unint64_t sub_249DF0870()
{
  unint64_t result;

  result = qword_2578D80F0;
  if (!qword_2578D80F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25AF8, &type metadata for Concept.GenericEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D80F0);
  }
  return result;
}

unint64_t sub_249DF08B4()
{
  unint64_t result;

  result = qword_2578D80F8;
  if (!qword_2578D80F8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenericEntityData, &type metadata for GenericEntityData);
    atomic_store(result, (unint64_t *)&qword_2578D80F8);
  }
  return result;
}

unint64_t sub_249DF08F8()
{
  unint64_t result;

  result = qword_2578D8100;
  if (!qword_2578D8100)
  {
    result = MEMORY[0x24BD06528](&unk_249F25AA8, &type metadata for Concept.PersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8100);
  }
  return result;
}

unint64_t sub_249DF093C()
{
  unint64_t result;

  result = qword_2578D8110;
  if (!qword_2578D8110)
  {
    result = MEMORY[0x24BD06528](&unk_249F25A58, &type metadata for Concept.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8110);
  }
  return result;
}

unint64_t sub_249DF0980()
{
  unint64_t result;

  result = qword_2578D8118;
  if (!qword_2578D8118)
  {
    result = MEMORY[0x24BD06528](&unk_249F25A08, &type metadata for Concept.NounCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8118);
  }
  return result;
}

unint64_t sub_249DF09C4()
{
  unint64_t result;

  result = qword_2578D8158;
  if (!qword_2578D8158)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenericEntityData, &type metadata for GenericEntityData);
    atomic_store(result, (unint64_t *)&qword_2578D8158);
  }
  return result;
}

unint64_t sub_249DF0A08()
{
  unint64_t result;

  result = qword_2578D8188;
  if (!qword_2578D8188)
  {
    result = MEMORY[0x24BD06528](&unk_249F259B8, &type metadata for GenericEntityData.RejectionCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8188);
  }
  return result;
}

unint64_t sub_249DF0A4C()
{
  unint64_t result;

  result = qword_2578D8190;
  if (!qword_2578D8190)
  {
    result = MEMORY[0x24BD06528](&unk_249F25968, &type metadata for GenericEntityData.RejectionCategory.PublicFigureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8190);
  }
  return result;
}

unint64_t sub_249DF0A90()
{
  unint64_t result;

  result = qword_2578D8198;
  if (!qword_2578D8198)
  {
    result = MEMORY[0x24BD06528](&unk_249F25918, &type metadata for GenericEntityData.RejectionCategory.FictionalCharacterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8198);
  }
  return result;
}

unint64_t sub_249DF0AD4()
{
  unint64_t result;

  result = qword_2578D81A0;
  if (!qword_2578D81A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F258C8, &type metadata for GenericEntityData.RejectionCategory.CopyrightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D81A0);
  }
  return result;
}

unint64_t sub_249DF0B18()
{
  unint64_t result;

  result = qword_2578D81D0;
  if (!qword_2578D81D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25878, &type metadata for GenericEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D81D0);
  }
  return result;
}

unint64_t sub_249DF0B5C()
{
  unint64_t result;

  result = qword_2578D81D8;
  if (!qword_2578D81D8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenericEntityData.RejectionCategory, &type metadata for GenericEntityData.RejectionCategory);
    atomic_store(result, (unint64_t *)&qword_2578D81D8);
  }
  return result;
}

unint64_t sub_249DF0BA0()
{
  unint64_t result;

  result = qword_2578D81E8;
  if (!qword_2578D81E8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenericEntityData.RejectionCategory, &type metadata for GenericEntityData.RejectionCategory);
    atomic_store(result, (unint64_t *)&qword_2578D81E8);
  }
  return result;
}

unint64_t sub_249DF0BE4()
{
  unint64_t result;

  result = qword_2578D8208;
  if (!qword_2578D8208)
  {
    result = MEMORY[0x24BD06528](&unk_249F25828, &type metadata for NamedEntityData.NamedEntityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8208);
  }
  return result;
}

unint64_t sub_249DF0C28()
{
  unint64_t result;

  result = qword_2578D8210;
  if (!qword_2578D8210)
  {
    result = MEMORY[0x24BD06528](&unk_249F257D8, &type metadata for NamedEntityData.NamedEntityType.PhotosPersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8210);
  }
  return result;
}

unint64_t sub_249DF0C6C()
{
  unint64_t result;

  result = qword_2578D8220;
  if (!qword_2578D8220)
  {
    result = MEMORY[0x24BD06528](&unk_249F25788, &type metadata for NamedEntityData.NamedEntityType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8220);
  }
  return result;
}

unint64_t sub_249DF0CB0()
{
  unint64_t result;

  result = qword_2578D8250;
  if (!qword_2578D8250)
  {
    result = MEMORY[0x24BD06528](&unk_249F25738, &type metadata for NamedEntityData.PhotosPersonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8250);
  }
  return result;
}

unint64_t sub_249DF0CF4()
{
  unint64_t result;

  result = qword_2578D8268;
  if (!qword_2578D8268)
  {
    result = MEMORY[0x24BD06528](&unk_249F256E8, &type metadata for NamedEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8268);
  }
  return result;
}

uint64_t sub_249DF0D38()
{
  return sub_249D9BBEC(&qword_2578D8288, type metadata accessor for Concept, (uint64_t)&protocol conformance descriptor for Concept);
}

unint64_t sub_249DF0D68()
{
  unint64_t result;

  result = qword_2578D8290;
  if (!qword_2578D8290)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenericEntityData.RejectionCategory, &type metadata for GenericEntityData.RejectionCategory);
    atomic_store(result, (unint64_t *)&qword_2578D8290);
  }
  return result;
}

unint64_t sub_249DF0DB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D8298;
  if (!qword_2578D8298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D82A0);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D8298);
  }
  return result;
}

unint64_t sub_249DF0E00()
{
  unint64_t result;

  result = qword_2578D82A8;
  if (!qword_2578D82A8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for GenericEntityData, &type metadata for GenericEntityData);
    atomic_store(result, (unint64_t *)&qword_2578D82A8);
  }
  return result;
}

uint64_t sub_249DF0E44()
{
  return sub_249D9BBEC(&qword_2578D82B0, type metadata accessor for NamedEntityData.NamedEntityType, (uint64_t)&protocol conformance descriptor for NamedEntityData.NamedEntityType);
}

uint64_t sub_249DF0E70()
{
  return sub_249D9BBEC(&qword_2578D82B8, type metadata accessor for NamedEntityData.PhotosPersonData, (uint64_t)&protocol conformance descriptor for NamedEntityData.PhotosPersonData);
}

uint64_t sub_249DF0E9C()
{
  return sub_249D9BBEC(&qword_2578D82C0, type metadata accessor for NamedEntityData, (uint64_t)&protocol conformance descriptor for NamedEntityData);
}

uint64_t initializeBufferWithCopyOfBuffer for Concept(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_249DF0F20 + 4 * byte_249F245E9[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for Concept(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      result = swift_bridgeObjectRelease();
      break;
    case 2:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for NamedEntityData(0) + 20);
      v3 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a1, 1, v3);
      if (!(_DWORD)result)
      {
LABEL_4:
        v4 = sub_249F1E8D8();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      }
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for Concept()
{
  char *v0;

  v0 = (char *)sub_249DF11A8 + 4 * byte_249F245F3[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_249DF11A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for Concept(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_249DC05A8(result, type metadata accessor for Concept);
    v2 = (char *)&loc_249DF1374 + 4 * byte_249F245F8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for Concept(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v8 = *(int *)(type metadata accessor for NamedEntityData(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = type metadata accessor for NamedEntityData.NamedEntityType(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = sub_249F1E8D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
      v9[*(int *)(v11 + 20)] = v10[*(int *)(v11 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_249F1E8D8();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for Concept(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_249DC05A8((uint64_t)a1, type metadata accessor for Concept);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for NamedEntityData(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = type metadata accessor for NamedEntityData.NamedEntityType(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v14 = sub_249F1E8D8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
        v9[*(int *)(v11 + 20)] = v10[*(int *)(v11 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      goto LABEL_9;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_249F1E8D8();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_249DF17BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for NamedEntityData(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_249DF1854(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenericEntityData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for GenericEntityData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericEntityData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericEntityData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericEntityData()
{
  return &type metadata for GenericEntityData;
}

ValueMetadata *type metadata accessor for GenericEntityData.RejectionCategory()
{
  return &type metadata for GenericEntityData.RejectionCategory;
}

uint64_t *initializeBufferWithCopyOfBuffer for NamedEntityData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = type metadata accessor for NamedEntityData.NamedEntityType(0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_249F1E8D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for NamedEntityData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_249F1E8D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  }
  return result;
}

_QWORD *initializeWithCopy for NamedEntityData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = type metadata accessor for NamedEntityData.NamedEntityType(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_249F1E8D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
    v6[*(int *)(v8 + 20)] = v7[*(int *)(v8 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for NamedEntityData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v17 = sub_249F1E8D8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v7, v8, v17);
      v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
      return a1;
    }
    sub_249DC05A8((uint64_t)v7, type metadata accessor for NamedEntityData.PhotosPersonData);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = type metadata accessor for NamedEntityData.NamedEntityType(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  v14 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for NamedEntityData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = type metadata accessor for NamedEntityData.NamedEntityType(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_249F1E8D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    v5[*(int *)(v7 + 20)] = v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for NamedEntityData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v18 = sub_249F1E8D8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v8, v9, v18);
      v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
      return a1;
    }
    sub_249DC05A8((uint64_t)v8, type metadata accessor for NamedEntityData.PhotosPersonData);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = type metadata accessor for NamedEntityData.NamedEntityType(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  v15 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
  v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NamedEntityData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF1F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NamedEntityData.NamedEntityType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NamedEntityData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF2024(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NamedEntityData.NamedEntityType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_249DF2098()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NamedEntityData.NamedEntityType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for NamedEntityData.NamedEntityType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_249F1E8D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for NamedEntityData.NamedEntityType(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_249F1E8D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for NamedEntityData.NamedEntityType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_249F1E8D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *assignWithCopy for NamedEntityData.NamedEntityType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_249F1E8D8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      return a1;
    }
    sub_249DC05A8((uint64_t)a1, type metadata accessor for NamedEntityData.PhotosPersonData);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for NamedEntityData.NamedEntityType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_249F1E8D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *assignWithTake for NamedEntityData.NamedEntityType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_249F1E8D8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      return a1;
    }
    sub_249DC05A8((uint64_t)a1, type metadata accessor for NamedEntityData.PhotosPersonData);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_249F1E8D8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NamedEntityData.NamedEntityType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF2614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NamedEntityData.NamedEntityType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF266C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_249DF26BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_249DF26F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_249DF2734()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NamedEntityData.PhotosPersonData(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NamedEntityData.PhotosPersonData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_249F1E8D8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for NamedEntityData.PhotosPersonData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for NamedEntityData.PhotosPersonData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for NamedEntityData.PhotosPersonData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for NamedEntityData.PhotosPersonData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for NamedEntityData.PhotosPersonData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for NamedEntityData.PhotosPersonData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF29C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NamedEntityData.PhotosPersonData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF2A58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_249F1E8D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_249DF2AD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NamedEntityData.CodingKeys()
{
  return &type metadata for NamedEntityData.CodingKeys;
}

ValueMetadata *type metadata accessor for NamedEntityData.PhotosPersonData.CodingKeys()
{
  return &type metadata for NamedEntityData.PhotosPersonData.CodingKeys;
}

ValueMetadata *type metadata accessor for NamedEntityData.NamedEntityType.CodingKeys()
{
  return &type metadata for NamedEntityData.NamedEntityType.CodingKeys;
}

ValueMetadata *type metadata accessor for NamedEntityData.NamedEntityType.UnknownCodingKeys()
{
  return &type metadata for NamedEntityData.NamedEntityType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for NamedEntityData.NamedEntityType.PhotosPersonCodingKeys()
{
  return &type metadata for NamedEntityData.NamedEntityType.PhotosPersonCodingKeys;
}

uint64_t _s16VisualGeneration15NamedEntityDataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DF2BE4 + 4 * byte_249F24602[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DF2C18 + 4 * byte_249F245FD[v4]))();
}

uint64_t sub_249DF2C18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF2C20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DF2C28);
  return result;
}

uint64_t sub_249DF2C34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DF2C3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DF2C40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF2C48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GenericEntityData.CodingKeys()
{
  return &type metadata for GenericEntityData.CodingKeys;
}

uint64_t _s16VisualGeneration17GenericEntityDataV17RejectionCategoryOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249DF2CB0 + 4 * byte_249F2460C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249DF2CE4 + 4 * byte_249F24607[v4]))();
}

uint64_t sub_249DF2CE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF2CEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DF2CF4);
  return result;
}

uint64_t sub_249DF2D00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DF2D08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249DF2D0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF2D14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GenericEntityData.RejectionCategory.CodingKeys()
{
  return &type metadata for GenericEntityData.RejectionCategory.CodingKeys;
}

ValueMetadata *type metadata accessor for GenericEntityData.RejectionCategory.CopyrightCodingKeys()
{
  return &type metadata for GenericEntityData.RejectionCategory.CopyrightCodingKeys;
}

ValueMetadata *type metadata accessor for GenericEntityData.RejectionCategory.FictionalCharacterCodingKeys()
{
  return &type metadata for GenericEntityData.RejectionCategory.FictionalCharacterCodingKeys;
}

ValueMetadata *type metadata accessor for GenericEntityData.RejectionCategory.PublicFigureCodingKeys()
{
  return &type metadata for GenericEntityData.RejectionCategory.PublicFigureCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Concept.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_249DF2DAC + 4 * byte_249F24616[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249DF2DE0 + 4 * byte_249F24611[v4]))();
}

uint64_t sub_249DF2DE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF2DE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DF2DF0);
  return result;
}

uint64_t sub_249DF2DFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DF2E04);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_249DF2E08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF2E10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Concept.CodingKeys()
{
  return &type metadata for Concept.CodingKeys;
}

ValueMetadata *type metadata accessor for Concept.NounCodingKeys()
{
  return &type metadata for Concept.NounCodingKeys;
}

ValueMetadata *type metadata accessor for Concept.EmojiCodingKeys()
{
  return &type metadata for Concept.EmojiCodingKeys;
}

ValueMetadata *type metadata accessor for Concept.PersonCodingKeys()
{
  return &type metadata for Concept.PersonCodingKeys;
}

ValueMetadata *type metadata accessor for Concept.GenericEntityCodingKeys()
{
  return &type metadata for Concept.GenericEntityCodingKeys;
}

uint64_t _s16VisualGeneration15NamedEntityDataV15NamedEntityTypeO22PhotosPersonCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249DF2EAC + 4 * byte_249F2461B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249DF2ECC + 4 * byte_249F24620[v4]))();
}

_BYTE *sub_249DF2EAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249DF2ECC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DF2ED4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DF2EDC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DF2EE4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DF2EEC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Concept.NamedEntityCodingKeys()
{
  return &type metadata for Concept.NamedEntityCodingKeys;
}

unint64_t sub_249DF2F0C()
{
  unint64_t result;

  result = qword_2578D8510;
  if (!qword_2578D8510)
  {
    result = MEMORY[0x24BD06528](&unk_249F24D98, &type metadata for Concept.NamedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8510);
  }
  return result;
}

unint64_t sub_249DF2F54()
{
  unint64_t result;

  result = qword_2578D8518;
  if (!qword_2578D8518)
  {
    result = MEMORY[0x24BD06528](&unk_249F24E50, &type metadata for Concept.GenericEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8518);
  }
  return result;
}

unint64_t sub_249DF2F9C()
{
  unint64_t result;

  result = qword_2578D8520;
  if (!qword_2578D8520)
  {
    result = MEMORY[0x24BD06528](&unk_249F24F08, &type metadata for Concept.PersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8520);
  }
  return result;
}

unint64_t sub_249DF2FE4()
{
  unint64_t result;

  result = qword_2578D8528;
  if (!qword_2578D8528)
  {
    result = MEMORY[0x24BD06528](&unk_249F24FC0, &type metadata for Concept.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8528);
  }
  return result;
}

unint64_t sub_249DF302C()
{
  unint64_t result;

  result = qword_2578D8530;
  if (!qword_2578D8530)
  {
    result = MEMORY[0x24BD06528](&unk_249F25078, &type metadata for Concept.NounCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8530);
  }
  return result;
}

unint64_t sub_249DF3074()
{
  unint64_t result;

  result = qword_2578D8538;
  if (!qword_2578D8538)
  {
    result = MEMORY[0x24BD06528](&unk_249F25130, &type metadata for Concept.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8538);
  }
  return result;
}

unint64_t sub_249DF30BC()
{
  unint64_t result;

  result = qword_2578D8540;
  if (!qword_2578D8540)
  {
    result = MEMORY[0x24BD06528](&unk_249F252D8, &type metadata for GenericEntityData.RejectionCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8540);
  }
  return result;
}

unint64_t sub_249DF3104()
{
  unint64_t result;

  result = qword_2578D8548;
  if (!qword_2578D8548)
  {
    result = MEMORY[0x24BD06528](&unk_249F25390, &type metadata for GenericEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8548);
  }
  return result;
}

unint64_t sub_249DF314C()
{
  unint64_t result;

  result = qword_2578D8550;
  if (!qword_2578D8550)
  {
    result = MEMORY[0x24BD06528](&unk_249F25448, &type metadata for NamedEntityData.NamedEntityType.PhotosPersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8550);
  }
  return result;
}

unint64_t sub_249DF3194()
{
  unint64_t result;

  result = qword_2578D8558;
  if (!qword_2578D8558)
  {
    result = MEMORY[0x24BD06528](&unk_249F25550, &type metadata for NamedEntityData.NamedEntityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8558);
  }
  return result;
}

unint64_t sub_249DF31DC()
{
  unint64_t result;

  result = qword_2578D8560;
  if (!qword_2578D8560)
  {
    result = MEMORY[0x24BD06528](&unk_249F25608, &type metadata for NamedEntityData.PhotosPersonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8560);
  }
  return result;
}

unint64_t sub_249DF3224()
{
  unint64_t result;

  result = qword_2578D8568;
  if (!qword_2578D8568)
  {
    result = MEMORY[0x24BD06528](&unk_249F256C0, &type metadata for NamedEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8568);
  }
  return result;
}

unint64_t sub_249DF326C()
{
  unint64_t result;

  result = qword_2578D8570;
  if (!qword_2578D8570)
  {
    result = MEMORY[0x24BD06528](&unk_249F25630, &type metadata for NamedEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8570);
  }
  return result;
}

unint64_t sub_249DF32B4()
{
  unint64_t result;

  result = qword_2578D8578;
  if (!qword_2578D8578)
  {
    result = MEMORY[0x24BD06528](&unk_249F25658, &type metadata for NamedEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8578);
  }
  return result;
}

unint64_t sub_249DF32FC()
{
  unint64_t result;

  result = qword_2578D8580;
  if (!qword_2578D8580)
  {
    result = MEMORY[0x24BD06528](&unk_249F25578, &type metadata for NamedEntityData.PhotosPersonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8580);
  }
  return result;
}

unint64_t sub_249DF3344()
{
  unint64_t result;

  result = qword_2578D8588;
  if (!qword_2578D8588)
  {
    result = MEMORY[0x24BD06528](&unk_249F255A0, &type metadata for NamedEntityData.PhotosPersonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8588);
  }
  return result;
}

unint64_t sub_249DF338C()
{
  unint64_t result;

  result = qword_2578D8590;
  if (!qword_2578D8590)
  {
    result = MEMORY[0x24BD06528](&unk_249F25470, &type metadata for NamedEntityData.NamedEntityType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8590);
  }
  return result;
}

unint64_t sub_249DF33D4()
{
  unint64_t result;

  result = qword_2578D8598;
  if (!qword_2578D8598)
  {
    result = MEMORY[0x24BD06528](&unk_249F25498, &type metadata for NamedEntityData.NamedEntityType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8598);
  }
  return result;
}

unint64_t sub_249DF341C()
{
  unint64_t result;

  result = qword_2578D85A0;
  if (!qword_2578D85A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F253B8, &type metadata for NamedEntityData.NamedEntityType.PhotosPersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85A0);
  }
  return result;
}

unint64_t sub_249DF3464()
{
  unint64_t result;

  result = qword_2578D85A8;
  if (!qword_2578D85A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F253E0, &type metadata for NamedEntityData.NamedEntityType.PhotosPersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85A8);
  }
  return result;
}

unint64_t sub_249DF34AC()
{
  unint64_t result;

  result = qword_2578D85B0;
  if (!qword_2578D85B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F254C0, &type metadata for NamedEntityData.NamedEntityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85B0);
  }
  return result;
}

unint64_t sub_249DF34F4()
{
  unint64_t result;

  result = qword_2578D85B8;
  if (!qword_2578D85B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F254E8, &type metadata for NamedEntityData.NamedEntityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85B8);
  }
  return result;
}

unint64_t sub_249DF353C()
{
  unint64_t result;

  result = qword_2578D85C0;
  if (!qword_2578D85C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25300, &type metadata for GenericEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85C0);
  }
  return result;
}

unint64_t sub_249DF3584()
{
  unint64_t result;

  result = qword_2578D85C8;
  if (!qword_2578D85C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F25328, &type metadata for GenericEntityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85C8);
  }
  return result;
}

unint64_t sub_249DF35CC()
{
  unint64_t result;

  result = qword_2578D85D0;
  if (!qword_2578D85D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F251F8, &type metadata for GenericEntityData.RejectionCategory.CopyrightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85D0);
  }
  return result;
}

unint64_t sub_249DF3614()
{
  unint64_t result;

  result = qword_2578D85D8;
  if (!qword_2578D85D8)
  {
    result = MEMORY[0x24BD06528](&unk_249F25220, &type metadata for GenericEntityData.RejectionCategory.CopyrightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85D8);
  }
  return result;
}

unint64_t sub_249DF365C()
{
  unint64_t result;

  result = qword_2578D85E0;
  if (!qword_2578D85E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F251A8, &type metadata for GenericEntityData.RejectionCategory.FictionalCharacterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85E0);
  }
  return result;
}

unint64_t sub_249DF36A4()
{
  unint64_t result;

  result = qword_2578D85E8;
  if (!qword_2578D85E8)
  {
    result = MEMORY[0x24BD06528](&unk_249F251D0, &type metadata for GenericEntityData.RejectionCategory.FictionalCharacterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85E8);
  }
  return result;
}

unint64_t sub_249DF36EC()
{
  unint64_t result;

  result = qword_2578D85F0;
  if (!qword_2578D85F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25158, &type metadata for GenericEntityData.RejectionCategory.PublicFigureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85F0);
  }
  return result;
}

unint64_t sub_249DF3734()
{
  unint64_t result;

  result = qword_2578D85F8;
  if (!qword_2578D85F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F25180, &type metadata for GenericEntityData.RejectionCategory.PublicFigureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D85F8);
  }
  return result;
}

unint64_t sub_249DF377C()
{
  unint64_t result;

  result = qword_2578D8600;
  if (!qword_2578D8600)
  {
    result = MEMORY[0x24BD06528](&unk_249F25248, &type metadata for GenericEntityData.RejectionCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8600);
  }
  return result;
}

unint64_t sub_249DF37C4()
{
  unint64_t result;

  result = qword_2578D8608;
  if (!qword_2578D8608)
  {
    result = MEMORY[0x24BD06528](&unk_249F25270, &type metadata for GenericEntityData.RejectionCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8608);
  }
  return result;
}

unint64_t sub_249DF380C()
{
  unint64_t result;

  result = qword_2578D8610;
  if (!qword_2578D8610)
  {
    result = MEMORY[0x24BD06528](&unk_249F24FE8, &type metadata for Concept.NounCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8610);
  }
  return result;
}

unint64_t sub_249DF3854()
{
  unint64_t result;

  result = qword_2578D8618;
  if (!qword_2578D8618)
  {
    result = MEMORY[0x24BD06528](&unk_249F25010, &type metadata for Concept.NounCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8618);
  }
  return result;
}

unint64_t sub_249DF389C()
{
  unint64_t result;

  result = qword_2578D8620;
  if (!qword_2578D8620)
  {
    result = MEMORY[0x24BD06528](&unk_249F24F30, &type metadata for Concept.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8620);
  }
  return result;
}

unint64_t sub_249DF38E4()
{
  unint64_t result;

  result = qword_2578D8628;
  if (!qword_2578D8628)
  {
    result = MEMORY[0x24BD06528](&unk_249F24F58, &type metadata for Concept.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8628);
  }
  return result;
}

unint64_t sub_249DF392C()
{
  unint64_t result;

  result = qword_2578D8630;
  if (!qword_2578D8630)
  {
    result = MEMORY[0x24BD06528](&unk_249F24E78, &type metadata for Concept.PersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8630);
  }
  return result;
}

unint64_t sub_249DF3974()
{
  unint64_t result;

  result = qword_2578D8638;
  if (!qword_2578D8638)
  {
    result = MEMORY[0x24BD06528](&unk_249F24EA0, &type metadata for Concept.PersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8638);
  }
  return result;
}

unint64_t sub_249DF39BC()
{
  unint64_t result;

  result = qword_2578D8640;
  if (!qword_2578D8640)
  {
    result = MEMORY[0x24BD06528](&unk_249F24DC0, &type metadata for Concept.GenericEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8640);
  }
  return result;
}

unint64_t sub_249DF3A04()
{
  unint64_t result;

  result = qword_2578D8648;
  if (!qword_2578D8648)
  {
    result = MEMORY[0x24BD06528](&unk_249F24DE8, &type metadata for Concept.GenericEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8648);
  }
  return result;
}

unint64_t sub_249DF3A4C()
{
  unint64_t result;

  result = qword_2578D8650;
  if (!qword_2578D8650)
  {
    result = MEMORY[0x24BD06528](&unk_249F24D08, &type metadata for Concept.NamedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8650);
  }
  return result;
}

unint64_t sub_249DF3A94()
{
  unint64_t result;

  result = qword_2578D8658;
  if (!qword_2578D8658)
  {
    result = MEMORY[0x24BD06528](&unk_249F24D30, &type metadata for Concept.NamedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8658);
  }
  return result;
}

unint64_t sub_249DF3ADC()
{
  unint64_t result;

  result = qword_2578D8660;
  if (!qword_2578D8660)
  {
    result = MEMORY[0x24BD06528](&unk_249F250A0, &type metadata for Concept.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8660);
  }
  return result;
}

unint64_t sub_249DF3B24()
{
  unint64_t result;

  result = qword_2578D8668;
  if (!qword_2578D8668)
  {
    result = MEMORY[0x24BD06528](&unk_249F250C8, &type metadata for Concept.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8668);
  }
  return result;
}

uint64_t sub_249DF3B68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1853189998 && a2 == 0xE400000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696A6F6D65 && a2 == 0xE500000000000000 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x45636972656E6567 && a2 == 0xED0000797469746ELL || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E4564656D616ELL && a2 == 0xEB00000000797469)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_249DF3DA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6867697279706F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249F35280 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x694663696C627570 && a2 == 0xEC00000065727567)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249DF3F10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7453797469746E65 && a2 == 0xEC000000676E6972;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F352A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249DF4014(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6550736F746F6870 && a2 == 0xEC0000006E6F7372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249DF411C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6550736F746F6870 && a2 == 0xEF4449566E6F7372;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727265666E497369 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249DF423C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7453797469746E65 && a2 == 0xEC000000676E6972;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954797469746E65 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249DF4354(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8688);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8690);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8698);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF4E34();
  sub_249F20018();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_249DF4E78();
    sub_249F1FD3C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_249DF4EBC();
    sub_249F1FD3C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_249DF4524()
{
  _BYTE *v0;

  if (*v0)
    return 0x67616D4965636166;
  else
    return 0x55556E6F73726570;
}

uint64_t sub_249DF4568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF4F88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DF458C()
{
  sub_249DF4E34();
  return sub_249F20024();
}

uint64_t sub_249DF45B4()
{
  sub_249DF4E34();
  return sub_249F20030();
}

uint64_t sub_249DF45DC()
{
  sub_249DF4E78();
  return sub_249F20024();
}

uint64_t sub_249DF4604()
{
  sub_249DF4E78();
  return sub_249F20030();
}

uint64_t sub_249DF462C()
{
  sub_249DF4EBC();
  return sub_249F20024();
}

uint64_t sub_249DF4654()
{
  sub_249DF4EBC();
  return sub_249F20030();
}

uint64_t sub_249DF467C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249DF5090(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_249DF46A8(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_249DF4354(a1, *v1);
}

unint64_t sub_249DF46C0()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  if (v1 == 2)
  {
    if (v2 != 5)
      goto LABEL_3;
LABEL_6:
    if (v3 == 10)
      goto LABEL_7;
    goto LABEL_4;
  }
  sub_249F1F3AC();
  if (v2 == 5)
    goto LABEL_6;
LABEL_3:
  sub_249F1F3AC();
  if (v3 != 10)
LABEL_4:
    sub_249F1F3AC();
LABEL_7:
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return 0xD000000000000014;
}

uint64_t sub_249DF4880(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  char v10;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D86B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v13 = v1[2];
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF4F00();
  sub_249F20018();
  v20 = v8;
  v19 = 0;
  sub_249DF4F44();
  sub_249F1FD84();
  if (!v2)
  {
    v10 = v13;
    v18 = v14;
    v17 = 1;
    sub_249DEB094();
    sub_249F1FD84();
    v16 = v10;
    v15 = 2;
    sub_249DEB11C();
    sub_249F1FD84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_249DF4A10@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D86E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF4F00();
  sub_249F1FFF4();
  if (!v2)
  {
    v18 = 0;
    sub_249DF53BC();
    sub_249F1FCB8();
    v9 = v19;
    v16 = 1;
    sub_249DEB160();
    sub_249F1FCB8();
    v11 = v17;
    v14 = 2;
    sub_249DEB1E8();
    sub_249F1FCB8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v15;
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249DF4BD0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6645601;
  if (*v0 != 1)
    v1 = 0x656E6F546E696B73;
  if (*v0)
    return v1;
  else
    return 7890291;
}

uint64_t sub_249DF4C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF5888(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DF4C40()
{
  sub_249DF4F00();
  return sub_249F20024();
}

uint64_t sub_249DF4C68()
{
  sub_249DF4F00();
  return sub_249F20030();
}

uint64_t sub_249DF4C90@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_249DF4A10(a1, a2);
}

uint64_t sub_249DF4CA4(_QWORD *a1)
{
  return sub_249DF4880(a1);
}

uint64_t getEnumTagSinglePayload for FaceAttributes(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v4;
  int v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
  }
  if (*(unsigned __int8 *)a1 <= 2u)
    v4 = 2;
  else
    v4 = *(unsigned __int8 *)a1;
  v5 = v4 - 3;
  if (*(unsigned __int8 *)a1 < 2u)
    v6 = -1;
  else
    v6 = v5;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554178) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFD)
    v3 = 0;
  if (a2 > 0xFD)
  {
    *(_WORD *)result = a2 - 254;
    *(_BYTE *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceAttributes()
{
  return &type metadata for FaceAttributes;
}

ValueMetadata *type metadata accessor for FaceAttributes.Source()
{
  return &type metadata for FaceAttributes.Source;
}

unint64_t sub_249DF4DF0()
{
  unint64_t result;

  result = qword_2578D8680;
  if (!qword_2578D8680)
  {
    result = MEMORY[0x24BD06528](&unk_249F25C68, &type metadata for FaceAttributes.Source);
    atomic_store(result, (unint64_t *)&qword_2578D8680);
  }
  return result;
}

unint64_t sub_249DF4E34()
{
  unint64_t result;

  result = qword_2578D86A0;
  if (!qword_2578D86A0)
  {
    result = MEMORY[0x24BD06528](&unk_249F260A4, &type metadata for FaceAttributes.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D86A0);
  }
  return result;
}

unint64_t sub_249DF4E78()
{
  unint64_t result;

  result = qword_2578D86A8;
  if (!qword_2578D86A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26054, &type metadata for FaceAttributes.Source.FaceImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D86A8);
  }
  return result;
}

unint64_t sub_249DF4EBC()
{
  unint64_t result;

  result = qword_2578D86B0;
  if (!qword_2578D86B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26004, &type metadata for FaceAttributes.Source.PersonUUIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D86B0);
  }
  return result;
}

unint64_t sub_249DF4F00()
{
  unint64_t result;

  result = qword_2578D86C0;
  if (!qword_2578D86C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25FB4, &type metadata for FaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D86C0);
  }
  return result;
}

unint64_t sub_249DF4F44()
{
  unint64_t result;

  result = qword_2578D86C8;
  if (!qword_2578D86C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F23758, &type metadata for Sex);
    atomic_store(result, (unint64_t *)&qword_2578D86C8);
  }
  return result;
}

uint64_t sub_249DF4F88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x55556E6F73726570 && a2 == 0xEA00000000004449;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x67616D4965636166 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249DF5090(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D86D0);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D86D8);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D86E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF4E34();
  v10 = v26;
  sub_249F1FFF4();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_249F1FD24();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_249F1FAF0();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v19 = &type metadata for FaceAttributes.Source;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_249DF4E78();
    sub_249F1FC64();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_249DF4EBC();
    sub_249F1FC64();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

unint64_t sub_249DF53BC()
{
  unint64_t result;

  result = qword_2578D86F0;
  if (!qword_2578D86F0)
  {
    result = MEMORY[0x24BD06528](&unk_249F23780, &type metadata for Sex);
    atomic_store(result, (unint64_t *)&qword_2578D86F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FaceAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249DF544C + 4 * byte_249F25BF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249DF5480 + 4 * byte_249F25BF0[v4]))();
}

uint64_t sub_249DF5480(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF5488(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DF5490);
  return result;
}

uint64_t sub_249DF549C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DF54A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249DF54A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF54B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FaceAttributes.CodingKeys()
{
  return &type metadata for FaceAttributes.CodingKeys;
}

uint64_t _s16VisualGeneration14FaceAttributesV6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DF5518 + 4 * byte_249F25BFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DF554C + 4 * byte_249F25BFA[v4]))();
}

uint64_t sub_249DF554C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF5554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DF555CLL);
  return result;
}

uint64_t sub_249DF5568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DF5570);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DF5574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF557C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FaceAttributes.Source.CodingKeys()
{
  return &type metadata for FaceAttributes.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for FaceAttributes.Source.PersonUUIDCodingKeys()
{
  return &type metadata for FaceAttributes.Source.PersonUUIDCodingKeys;
}

ValueMetadata *type metadata accessor for FaceAttributes.Source.FaceImageCodingKeys()
{
  return &type metadata for FaceAttributes.Source.FaceImageCodingKeys;
}

unint64_t sub_249DF55BC()
{
  unint64_t result;

  result = qword_2578D86F8;
  if (!qword_2578D86F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F25ED4, &type metadata for FaceAttributes.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D86F8);
  }
  return result;
}

unint64_t sub_249DF5604()
{
  unint64_t result;

  result = qword_2578D8700;
  if (!qword_2578D8700)
  {
    result = MEMORY[0x24BD06528](&unk_249F25F8C, &type metadata for FaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8700);
  }
  return result;
}

unint64_t sub_249DF564C()
{
  unint64_t result;

  result = qword_2578D8708;
  if (!qword_2578D8708)
  {
    result = MEMORY[0x24BD06528](&unk_249F25EFC, &type metadata for FaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8708);
  }
  return result;
}

unint64_t sub_249DF5694()
{
  unint64_t result;

  result = qword_2578D8710;
  if (!qword_2578D8710)
  {
    result = MEMORY[0x24BD06528](&unk_249F25F24, &type metadata for FaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8710);
  }
  return result;
}

unint64_t sub_249DF56DC()
{
  unint64_t result;

  result = qword_2578D8718;
  if (!qword_2578D8718)
  {
    result = MEMORY[0x24BD06528](&unk_249F25DF4, &type metadata for FaceAttributes.Source.PersonUUIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8718);
  }
  return result;
}

unint64_t sub_249DF5724()
{
  unint64_t result;

  result = qword_2578D8720;
  if (!qword_2578D8720)
  {
    result = MEMORY[0x24BD06528](&unk_249F25E1C, &type metadata for FaceAttributes.Source.PersonUUIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8720);
  }
  return result;
}

unint64_t sub_249DF576C()
{
  unint64_t result;

  result = qword_2578D8728;
  if (!qword_2578D8728)
  {
    result = MEMORY[0x24BD06528](&unk_249F25DA4, &type metadata for FaceAttributes.Source.FaceImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8728);
  }
  return result;
}

unint64_t sub_249DF57B4()
{
  unint64_t result;

  result = qword_2578D8730;
  if (!qword_2578D8730)
  {
    result = MEMORY[0x24BD06528](&unk_249F25DCC, &type metadata for FaceAttributes.Source.FaceImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8730);
  }
  return result;
}

unint64_t sub_249DF57FC()
{
  unint64_t result;

  result = qword_2578D8738;
  if (!qword_2578D8738)
  {
    result = MEMORY[0x24BD06528](&unk_249F25E44, &type metadata for FaceAttributes.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8738);
  }
  return result;
}

unint64_t sub_249DF5844()
{
  unint64_t result;

  result = qword_2578D8740;
  if (!qword_2578D8740)
  {
    result = MEMORY[0x24BD06528](&unk_249F25E6C, &type metadata for FaceAttributes.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8740);
  }
  return result;
}

uint64_t sub_249DF5888(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7890291 && a2 == 0xE300000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F546E696B73 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id GeneratedImage.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

uint64_t GeneratedImage.emojiSkinDetected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for GeneratedImage() + 24));
}

uint64_t type metadata accessor for GeneratedImage()
{
  uint64_t result;

  result = qword_2578D87F0;
  if (!qword_2578D87F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t GeneratedImage.generationID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for GeneratedImage() + 20);
  v4 = v3 + *(int *)(type metadata accessor for ImageProvenance() + 20);
  v5 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t GeneratedImage.representationNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for GeneratedImage() + 20);
  return *(_QWORD *)(v1 + *(int *)(type metadata accessor for ImageProvenance() + 24));
}

uint64_t GeneratedImage.imageProperties.getter()
{
  return sub_249DF5AD4((uint64_t (*)(void))sub_249E35600);
}

uint64_t GeneratedImage.imageMetadata.getter()
{
  return sub_249DF5AD4((uint64_t (*)(void))sub_249E356CC);
}

uint64_t sub_249DF5AD4(uint64_t (*a1)(void))
{
  type metadata accessor for GeneratedImage();
  return a1();
}

uint64_t GeneratedImage.diffusionModelSpecification.getter()
{
  type metadata accessor for GeneratedImage();
  type metadata accessor for ImageProvenance();
  return swift_bridgeObjectRetain();
}

uint64_t sub_249DF5B3C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F72506567616D69;
  if (*v0 != 1)
    v1 = 0x6974616369646E69;
  if (*v0)
    return v1;
  else
    return 0x6567616D695FLL;
}

uint64_t sub_249DF5BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DF6ED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249DF5BCC()
{
  sub_249DF5E10();
  return sub_249F20024();
}

uint64_t sub_249DF5BF4()
{
  sub_249DF5E10();
  return sub_249F20030();
}

uint64_t GeneratedImage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8748);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DF5E10();
  sub_249F20018();
  v9 = *((_BYTE *)v3 + 8);
  v12 = *v3;
  v13 = v9;
  v11[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8758);
  sub_249DF61C0(&qword_2578D8760, (uint64_t)&unk_249F2EA58);
  sub_249F1FDCC();
  if (!v2)
  {
    type metadata accessor for GeneratedImage();
    v11[14] = 1;
    type metadata accessor for ImageProvenance();
    sub_249D9BBEC(&qword_2578D8768, (uint64_t (*)(uint64_t))type metadata accessor for ImageProvenance, (uint64_t)&unk_249F28B20);
    sub_249F1FDCC();
    v11[13] = 2;
    type metadata accessor for GeneratedImageIndications();
    sub_249D9BBEC(&qword_2578D8770, (uint64_t (*)(uint64_t))type metadata accessor for GeneratedImageIndications, (uint64_t)&unk_249F2C898);
    sub_249F1FDCC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_249DF5E10()
{
  unint64_t result;

  result = qword_2578D8750;
  if (!qword_2578D8750)
  {
    result = MEMORY[0x24BD06528](&unk_249F2624C, &type metadata for GeneratedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8750);
  }
  return result;
}

void GeneratedImage.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v23 = a2;
  v25 = type metadata accessor for GeneratedImageIndications();
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ImageProvenance();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8778);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GeneratedImage();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_249DF5E10();
  v26 = v9;
  v14 = v29;
  sub_249F1FFF4();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    v15 = v7;
    v29 = v10;
    v16 = (uint64_t)v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8758);
    v34 = 0;
    sub_249DF61C0(&qword_2578D8780, (uint64_t)&unk_249F2EA30);
    v17 = v26;
    sub_249F1FD00();
    v18 = v31;
    *(_QWORD *)v12 = v30;
    v12[8] = v18;
    v33 = 1;
    sub_249D9BBEC(&qword_2578D8788, (uint64_t (*)(uint64_t))type metadata accessor for ImageProvenance, (uint64_t)&unk_249F28AF8);
    v19 = (uint64_t)v6;
    sub_249F1FD00();
    v20 = v29;
    sub_249D9E308(v19, (uint64_t)&v12[*(int *)(v29 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
    v32 = 2;
    sub_249D9BBEC(&qword_2578D8790, (uint64_t (*)(uint64_t))type metadata accessor for GeneratedImageIndications, (uint64_t)&unk_249F2C870);
    v21 = (uint64_t)v24;
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v27);
    sub_249D9E308(v21, v16 + *(int *)(v20 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
    sub_249D9E1A0(v16, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    sub_249DC05A8(v16, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  }
}

uint64_t sub_249DF61C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8758);
    result = MEMORY[0x24BD06528](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_249DF6204(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  GeneratedImage.init(from:)(a1, a2);
}

uint64_t sub_249DF6218(_QWORD *a1)
{
  return GeneratedImage.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for GeneratedImage(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  char *v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  char *v31;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v29[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    a1[v9] = *((_BYTE *)a2 + v9);
    v12 = (int *)type metadata accessor for ImageProvenance();
    v13 = v12[5];
    v31 = &v10[v13];
    v14 = v11 + v13;
    v15 = sub_249F1E8D8();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v17 = v7;
    v16(v31, v14, v15);
    *(_QWORD *)&v10[v12[6]] = *(_QWORD *)(v11 + v12[6]);
    *(_QWORD *)&v10[v12[7]] = *(_QWORD *)(v11 + v12[7]);
    v18 = *(int *)(a3 + 24);
    v19 = &v4[v18];
    v20 = (uint64_t)a2 + v18;
    v4[v18] = *((_BYTE *)a2 + v18);
    v21 = type metadata accessor for GeneratedImageIndications();
    v22 = *(int *)(v21 + 20);
    v23 = &v19[v22];
    v24 = (const void *)(v20 + v22);
    v25 = sub_249F1F13C();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    *(_QWORD *)&v19[*(int *)(v21 + 24)] = *(_QWORD *)(v20 + *(int *)(v21 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for GeneratedImage(id *a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = &v4[*(int *)(type metadata accessor for ImageProvenance() + 20)];
  v6 = sub_249F1E8D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = (char *)a1 + *(int *)(a2 + 24);
  v8 = &v7[*(int *)(type metadata accessor for GeneratedImageIndications() + 20)];
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GeneratedImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;

  v5 = *(void **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for ImageProvenance();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_249F1E8D8();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v5;
  v15(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  v17 = v10[7];
  v18 = *(_QWORD *)(v9 + v17);
  v19 = a1;
  *(_QWORD *)(v8 + v17) = v18;
  v20 = *(int *)(a3 + 24);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v23 = type metadata accessor for GeneratedImageIndications();
  v24 = *(int *)(v23 + 20);
  v25 = (void *)(v21 + v24);
  v26 = (const void *)(v22 + v24);
  v27 = sub_249F1F13C();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_QWORD *)(v21 + *(int *)(v23 + 24)) = *(_QWORD *)(v22 + *(int *)(v23 + 24));
  swift_bridgeObjectRetain();
  return v19;
}

uint64_t assignWithCopy for GeneratedImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v9 = v6;

  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v13 = (int *)type metadata accessor for ImageProvenance();
  v14 = v13[5];
  v15 = v11 + v14;
  v16 = v12 + v14;
  v17 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *(_QWORD *)(v11 + v13[6]) = *(_QWORD *)(v12 + v13[6]);
  *(_QWORD *)(v11 + v13[7]) = *(_QWORD *)(v12 + v13[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v21 = type metadata accessor for GeneratedImageIndications();
  v22 = *(int *)(v21 + 20);
  v23 = (void *)(v19 + v22);
  v24 = (void *)(v20 + v22);
  v25 = sub_249F1F13C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v16) = v27(v23, 1, v25);
  v28 = v27(v24, 1, v25);
  if (!(_DWORD)v16)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(_QWORD *)(v19 + *(int *)(v21 + 24)) = *(_QWORD *)(v20 + *(int *)(v21 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for GeneratedImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for ImageProvenance();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)(v7 + v9[6]) = *(_QWORD *)(v8 + v9[6]);
  *(_QWORD *)(v7 + v9[7]) = *(_QWORD *)(v8 + v9[7]);
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v17 = type metadata accessor for GeneratedImageIndications();
  v18 = *(int *)(v17 + 20);
  v19 = (void *)(v15 + v18);
  v20 = (const void *)(v16 + v18);
  v21 = sub_249F1F13C();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(_QWORD *)(v15 + *(int *)(v17 + 24)) = *(_QWORD *)(v16 + *(int *)(v17 + 24));
  return a1;
}

uint64_t assignWithTake for GeneratedImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;

  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = (int *)type metadata accessor for ImageProvenance();
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  *(_QWORD *)(v9 + v11[7]) = *(_QWORD *)(v10 + v11[7]);
  swift_bridgeObjectRelease();
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v19 = type metadata accessor for GeneratedImageIndications();
  v20 = *(int *)(v19 + 20);
  v21 = (void *)(v17 + v20);
  v22 = (void *)(v18 + v20);
  v23 = sub_249F1F13C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v14) = v25(v21, 1, v23);
  v26 = v25(v22, 1, v23);
  if (!(_DWORD)v14)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  *(_QWORD *)(v17 + *(int *)(v19 + 24)) = *(_QWORD *)(v18 + *(int *)(v19 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratedImage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF6B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 253)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 2)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for ImageProvenance();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for GeneratedImageIndications();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GeneratedImage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249DF6C04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 253)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v8 = type metadata accessor for ImageProvenance();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for GeneratedImageIndications();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_249DF6C9C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ImageProvenance();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GeneratedImageIndications();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GeneratedImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249DF6D78 + 4 * byte_249F26105[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249DF6DAC + 4 * byte_249F26100[v4]))();
}

uint64_t sub_249DF6DAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF6DB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DF6DBCLL);
  return result;
}

uint64_t sub_249DF6DC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DF6DD0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249DF6DD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DF6DDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneratedImage.CodingKeys()
{
  return &type metadata for GeneratedImage.CodingKeys;
}

unint64_t sub_249DF6DFC()
{
  unint64_t result;

  result = qword_2578D8830;
  if (!qword_2578D8830)
  {
    result = MEMORY[0x24BD06528](&unk_249F26224, &type metadata for GeneratedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8830);
  }
  return result;
}

unint64_t sub_249DF6E44()
{
  unint64_t result;

  result = qword_2578D8838;
  if (!qword_2578D8838)
  {
    result = MEMORY[0x24BD06528](&unk_249F26194, &type metadata for GeneratedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8838);
  }
  return result;
}

unint64_t sub_249DF6E8C()
{
  unint64_t result;

  result = qword_2578D8840;
  if (!qword_2578D8840)
  {
    result = MEMORY[0x24BD06528](&unk_249F261BC, &type metadata for GeneratedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8840);
  }
  return result;
}

uint64_t sub_249DF6ED0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D695FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F72506567616D69 && a2 == 0xEF65636E616E6576 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974616369646E69 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249DF7058()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_249F1F184();
  __swift_allocate_value_buffer(v0, qword_2578D8848);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2578D8848);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BDF9A68], v0);
}

uint64_t sub_249DF70B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v2 = sub_249F1F184();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249F1F13C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  v16 = a1 + *(int *)(type metadata accessor for GeneratedImage() + 24);
  v17 = type metadata accessor for GeneratedImageIndications();
  sub_249DF8064(v16 + *(int *)(v17 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_249DF8024((uint64_t)v8);
LABEL_8:
    v19 = 1;
    return v19 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v13, v9) != *MEMORY[0x24BDF9A10])
  {
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v15, v9);
    v20(v13, v9);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v13, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
  if (qword_2578D5D00 != -1)
    swift_once();
  __swift_project_value_buffer(v2, (uint64_t)qword_2578D8848);
  sub_249D9BBEC(&qword_2578D8880, (uint64_t (*)(uint64_t))MEMORY[0x24BDF9A70], MEMORY[0x24BDF9A80]);
  v18 = sub_249F1F298();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v19 = v18 ^ 1;
  return v19 & 1;
}

uint64_t sub_249DF7330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = type metadata accessor for DetectedFacesPolicy();
  v4[10] = swift_task_alloc();
  v4[11] = type metadata accessor for GeneratedImageIndications();
  v4[12] = swift_task_alloc();
  v5 = sub_249F1F13C();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = type metadata accessor for GeneratedImage();
  v4[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6100);
  v4[18] = swift_task_alloc();
  v6 = sub_249F1F190();
  v4[19] = v6;
  v4[20] = *(_QWORD *)(v6 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DF745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  void *v33;
  int v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  if ((sub_249DF70B0(*(_QWORD *)(v0 + 40)) & 1) == 0)
  {
    v21 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD *)(v21 + *(int *)(*(_QWORD *)(v0 + 128) + 24) + *(int *)(*(_QWORD *)(v0 + 88) + 24));
    if (v22)
    {
      v24 = *(_QWORD *)(v0 + 48);
      v23 = *(_QWORD *)(v0 + 56);
      v25 = *(_QWORD *)(v22 + 16);
      if (v25 < v24 || v25 >= v23)
      {
        v28 = *(_QWORD *)(v0 + 72);
        v27 = *(_QWORD *)(v0 + 80);
        sub_249DC091C(v21, v27, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
        v29 = (_QWORD *)(v27 + *(int *)(v28 + 20));
        *v29 = v24;
        v29[1] = v23;
        *(_QWORD *)(v27 + *(int *)(v28 + 24)) = v22;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6110);
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_249F21770;
        *(_QWORD *)(v30 + 56) = v28;
        *(_QWORD *)(v30 + 64) = sub_249D9BBEC(&qword_2578D8868, (uint64_t (*)(uint64_t))type metadata accessor for DetectedFacesPolicy, (uint64_t)&protocol conformance descriptor for DetectedFacesPolicy);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 32));
        sub_249D9E308(v27, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for DetectedFacesPolicy);
        swift_bridgeObjectRetain();
LABEL_24:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
      }
    }
    else
    {
      if (qword_2578D5D78 != -1)
        swift_once();
      v37 = sub_249F1EF38();
      __swift_project_value_buffer(v37, (uint64_t)qword_2578FF3F0);
      v38 = sub_249F1EF20();
      v39 = sub_249F1F820();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_249D98000, v38, v39, "face detection was not performed on the generated image", v40, 2u);
        MEMORY[0x24BD06618](v40, -1, -1);
      }

    }
    v30 = 0;
    goto LABEL_24;
  }
  if (qword_2578D5D00 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 144);
  v2 = sub_249F1F184();
  *(_QWORD *)(v0 + 184) = v2;
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2578D8848);
  *(_QWORD *)(v0 + 192) = v3;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(_QWORD *)(v0 + 200) = v5;
  v5(v1, v3, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v2);
  sub_249F1F19C();
  if (qword_2578D5D78 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 160);
  v10 = sub_249F1EF38();
  *(_QWORD *)(v0 + 208) = __swift_project_value_buffer(v10, (uint64_t)qword_2578FF3F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
  v11 = sub_249F1EF20();
  v12 = sub_249F1F82C();
  v13 = os_log_type_enabled(v11, v12);
  v15 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 152);
  if (v13)
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v46 = v45;
    *(_DWORD *)v17 = 136315138;
    sub_249D9BBEC(&qword_2578D8878, (uint64_t (*)(uint64_t))MEMORY[0x24BDF9A90], MEMORY[0x24BDF9A98]);
    v18 = sub_249F1FE08();
    *(_QWORD *)(v0 + 32) = sub_249E68CA8(v18, v19, &v46);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v20(v14, v16);
    _os_log_impl(&dword_249D98000, v11, v12, "processing the generated image with %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v45, -1, -1);
    MEMORY[0x24BD06618](v17, -1, -1);
  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v20(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  }

  *(_QWORD *)(v0 + 216) = v20;
  v32 = *(_QWORD *)(v0 + 40);
  v33 = *(void **)v32;
  v34 = *(unsigned __int8 *)(v32 + 8);
  if (v34)
  {
    if (v34 == 1)
    {
      sub_249F1F154();
      v35 = v33;
      swift_retain();
      v36 = sub_249F1F16C();
    }
    else
    {
      sub_249F1F154();
      v43 = v33;
      swift_retain();
      v36 = sub_249F1F178();
    }
  }
  else
  {
    sub_249F1F154();
    v42 = v33;
    swift_retain();
    v36 = sub_249F1F160();
  }
  *(_QWORD *)(v0 + 224) = v36;
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v44;
  sub_249D9BBEC(&qword_2578D8870, (uint64_t (*)(uint64_t))MEMORY[0x24BDF9A90], MEMORY[0x24BDF9A88]);
  *v44 = v0;
  v44[1] = sub_249DF7A30;
  return sub_249F1F148();
}

uint64_t sub_249DF7A30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DF7A94()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  v38 = v1;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v42 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_249F1F130();
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x24BD05154](v7, v6);
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = sub_249E68CA8(v8, v10, &v42);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v2, v3, "generated image faces: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v5, -1, -1);
    MEMORY[0x24BD06618](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v40 = *(_QWORD *)(v0 + 176);
  v41 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
  v39 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 200))(v13, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 184));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v13, *MEMORY[0x24BDF9A10], v15);
  sub_249DC091C(v18 + *(int *)(v12 + 24), v16, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
  v19 = v16 + *(int *)(v17 + 20);
  sub_249DF8024(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v13, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v15);
  v20 = *(int *)(v17 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + v20) = v38;
  v21 = *(void **)v18;
  LOBYTE(v19) = *(_BYTE *)(v18 + 8);
  sub_249DC091C(v18 + *(int *)(v12 + 20), v11 + *(int *)(v12 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ImageProvenance);
  *(_QWORD *)v11 = v21;
  *(_BYTE *)(v11 + 8) = v19;
  sub_249DC091C(v16, v11 + *(int *)(v12 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
  v22 = v21;
  sub_249DC05A8(v16, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImageIndications);
  swift_release();
  swift_bridgeObjectRelease();
  sub_249DC05A8(v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v41(v40, v39);
  sub_249D9E308(v11, v18, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v23 = *(_QWORD *)(v0 + 40);
  v24 = *(_QWORD *)(v23 + *(int *)(*(_QWORD *)(v0 + 128) + 24) + *(int *)(*(_QWORD *)(v0 + 88) + 24));
  if (!v24)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v33 = sub_249F1EF38();
    __swift_project_value_buffer(v33, (uint64_t)qword_2578FF3F0);
    v34 = sub_249F1EF20();
    v35 = sub_249F1F820();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_249D98000, v34, v35, "face detection was not performed on the generated image", v36, 2u);
      MEMORY[0x24BD06618](v36, -1, -1);
    }

    goto LABEL_13;
  }
  v26 = *(_QWORD *)(v0 + 48);
  v25 = *(_QWORD *)(v0 + 56);
  v27 = *(_QWORD *)(v24 + 16);
  if (v27 >= v26 && v27 < v25)
  {
LABEL_13:
    v31 = 0;
    goto LABEL_14;
  }
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  sub_249DC091C(v23, v28, (uint64_t (*)(_QWORD))type metadata accessor for GeneratedImage);
  v30 = (_QWORD *)(v28 + *(int *)(v29 + 20));
  *v30 = v26;
  v30[1] = v25;
  *(_QWORD *)(v28 + *(int *)(v29 + 24)) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6110);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_249F21770;
  *(_QWORD *)(v31 + 56) = v29;
  *(_QWORD *)(v31 + 64) = sub_249D9BBEC(&qword_2578D8868, (uint64_t (*)(uint64_t))type metadata accessor for DetectedFacesPolicy, (uint64_t)&protocol conformance descriptor for DetectedFacesPolicy);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v31 + 32));
  sub_249D9E308(v28, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for DetectedFacesPolicy);
  swift_bridgeObjectRetain();
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v31);
}

uint64_t sub_249DF7F74()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DF8024(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DF8064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for GeneratedImageFaceDetectionPolicyEvaluator()
{
  return &type metadata for GeneratedImageFaceDetectionPolicyEvaluator;
}

uint64_t sub_249DF80BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = v5;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return swift_task_switch();
}

uint64_t sub_249DF80DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, _QWORD, uint64_t, uint64_t);

  sub_249E33168(*(_QWORD *)(v0 + 120), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 128) + 8) + 8) + 24));
  sub_249DCC274(*(_QWORD *)(v0 + 112), v0 + 56, &qword_2578D6448);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_249D9E174((__int128 *)(v0 + 56), v0 + 16);
    v1 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    v7 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v3;
    *v3 = v0;
    v3[1] = sub_249DF8200;
    return v7(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), v1, v2);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    sub_249DCC2FC(v0 + 56, &qword_2578D6448);
    sub_249DFB638(v5, v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249DF8200()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DF8264()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DF8298()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DF82CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[42] = a3;
  v4[43] = v3;
  v4[41] = a1;
  v5 = sub_249F1E8D8();
  v4[44] = v5;
  v4[45] = *(_QWORD *)(v5 - 8);
  v4[46] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DF8330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation__canceller;
  *(_QWORD *)(v0 + 376) = OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation__canceller;
  v3 = *(_QWORD *)(v1 + v2 + 24);
  v4 = *(_QWORD *)(v1 + v2 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + v2), v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
LABEL_3:
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v6 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v6 + 16);
  v9 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = qword_2578FF318;
  v11 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v11)
  {
LABEL_15:
    sub_249D9D9B0();
    swift_allocError();
    *(_QWORD *)v18 = v8;
    *(_QWORD *)(v18 + 8) = v7;
    *(_BYTE *)(v18 + 16) = 0;
    goto LABEL_3;
  }
  v32 = v0 + 216;
  v33 = v0 + 176;
  v12 = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    v14 = *(_QWORD *)(v10 + 8 * v13 + 32);
    if ((*(uint64_t (**)(uint64_t))(v14 + 88))(v12) == v8 && v15 == v7)
    {
      swift_bridgeObjectRelease();
      v19 = swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    v17 = sub_249F1FE2C();
    v12 = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      break;
    if (v11 == ++v13)
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  v19 = swift_bridgeObjectRelease();
LABEL_18:
  v20 = *(_QWORD *)(v0 + 336);
  v21 = (*(uint64_t (**)(uint64_t))(v14 + 80))(v19);
  *(_QWORD *)(v0 + 384) = v21;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = v0 + 96;
  if (v22)
  {
    *(_QWORD *)(v0 + 40) = &type metadata for ImageGeneratorDelegateOperationProgressHandler;
    *(_QWORD *)(v0 + 48) = &off_251B532C8;
    *(_QWORD *)(v0 + 16) = v22;
    *(_QWORD *)(v0 + 24) = v23;
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  v34 = (__int128 *)(v0 + 136);
  if (*(_BYTE *)(*(_QWORD *)(v0 + 328) + 62) == 1)
  {
    sub_249DCC274(v0 + 16, v32, &qword_2578D73D8);
    type metadata accessor for ForensicsReportingImageGenerationDelegate();
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 40) = 0u;
    *(_QWORD *)(v25 + 56) = 0;
    *(_OWORD *)(v25 + 24) = 0u;
    swift_beginAccess();
    sub_249DC09B8(v22);
    swift_retain();
    sub_249DFBF30(v32, v25 + 24);
    swift_endAccess();
    swift_release();
    v24 = v0 + 96;
    sub_249DCC2FC(v32, &qword_2578D73D8);
    *(_QWORD *)(v25 + 16) = 0;
  }
  else
  {
    sub_249DC09B8(v22);
    v25 = 0;
  }
  *(_QWORD *)(v0 + 392) = v25;
  v26 = *(_QWORD *)(v0 + 344);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 360) + 16))(*(_QWORD *)(v0 + 368), v26 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation_id, *(_QWORD *)(v0 + 352));
  *(_QWORD *)(v0 + 80) = type metadata accessor for InProcessDiffusionOperation(0);
  *(_QWORD *)(v0 + 88) = &off_251B52060;
  *(_QWORD *)(v0 + 56) = v26;
  if (!v25)
  {
    *(_QWORD *)(v0 + 168) = 0;
    *v34 = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_249DCC274(v0 + 16, v33, &qword_2578D73D8);
    goto LABEL_28;
  }
  v27 = type metadata accessor for ForensicsReportingImageGenerationDelegate();
  *(_QWORD *)(v0 + 160) = v27;
  *(_QWORD *)(v0 + 168) = &off_251B4FC20;
  *(_QWORD *)(v0 + 136) = v25;
  sub_249DCC274(v0 + 16, v33, &qword_2578D73D8);
  if (!v27)
  {
LABEL_28:
    sub_249DCB1B0(v33, v24, &qword_2578D73D8);
    swift_retain();
    swift_retain();
    sub_249DCC2FC((uint64_t)v34, &qword_2578D73D8);
    goto LABEL_29;
  }
  swift_retain();
  swift_retain();
  sub_249DCC2FC(v33, &qword_2578D73D8);
  sub_249D9E174(v34, v24);
LABEL_29:
  v28 = *(_QWORD *)(v0 + 368);
  v29 = *(_QWORD *)(v0 + 328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v30;
  v30[2] = v28;
  v30[3] = v28;
  v30[4] = v0 + 56;
  v30[5] = v24;
  v30[6] = v29;
  v30[7] = v21;
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v31;
  *v31 = v0;
  v31[1] = sub_249DF880C;
  return sub_249F1FC58();
}

uint64_t sub_249DF880C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DF8878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 320);
  sub_249DCC2FC(v0 + 96, &qword_2578D73D8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  if (v1 && *(_QWORD *)(*(_QWORD *)(v0 + 392) + 16))
  {
    sub_249DCC274(*(_QWORD *)(v0 + 336) + 24, v0 + 256, &qword_2578D7DF8);
    v3 = *(_QWORD *)(v0 + 280);
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 288);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 280));
      v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8);
      v6 = swift_bridgeObjectRetain();
      v5(v6, v3, v4);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 256);
    }
    else
    {
      sub_249DCC2FC(v0 + 256, &qword_2578D7DF8);
    }
  }
  v7 = (_QWORD *)(*(_QWORD *)(v0 + 344) + *(_QWORD *)(v0 + 376));
  v8 = v7[3];
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_9:
    v12 = *(_QWORD *)(v0 + 360);
    v11 = *(_QWORD *)(v0 + 368);
    v13 = *(_QWORD *)(v0 + 352);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    swift_release();
    sub_249DCC2FC(v0 + 16, &qword_2578D73D8);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 416);
  sub_249F1F670();
  if (v10)
    goto LABEL_9;
  v16 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 368);
  v17 = *(_QWORD *)(v0 + 352);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  swift_release();
  sub_249DCC2FC(v0 + 16, &qword_2578D73D8);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_249DF8AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc();
  sub_249DCC2FC(v0 + 96, &qword_2578D73D8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  sub_249DCC2FC(v0 + 16, &qword_2578D73D8);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DF8B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation__canceller);
  return swift_deallocClassInstance();
}

uint64_t sub_249DF8BD0()
{
  return type metadata accessor for InProcessDiffusionOperation(0);
}

uint64_t type metadata accessor for InProcessDiffusionOperation(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D88B8);
}

uint64_t sub_249DF8BEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249DF8C64@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for InProcessDiffusionOperation(0);
  v6 = swift_allocObject();
  v7 = v6 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation_id;
  v8 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  result = sub_249D9E174(a2, v6 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation__canceller);
  *a3 = v6;
  return result;
}

uint64_t sub_249DF8CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t v11;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  v11 = MEMORY[0x24BD06528](&unk_249F26440, a4);
  *v10 = v5;
  v10[1] = sub_249DAFCF8;
  v10[16] = v11;
  v10[17] = v4;
  v10[14] = a3;
  v10[15] = a4;
  v10[12] = a1;
  v10[13] = a2;
  return swift_task_switch();
}

uint64_t sub_249DF8D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_249DDB798;
  return sub_249DF82CC(a1, v7, a3);
}

uint64_t sub_249DF8DE8(uint64_t a1)
{
  MEMORY[0x24BD06528](&unk_249F26424, a1);
  return sub_249D9E63C();
}

uint64_t sub_249DF8E1C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249DF8E64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249DF8EB8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC16VisualGeneration27InProcessDiffusionOperation__canceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_249DF8F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 120) = v3;
  *(_QWORD *)(v4 + 104) = a1;
  v6 = sub_249F1E8D8();
  *(_QWORD *)(v4 + 128) = v6;
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  v7 = sub_249F1ECBC();
  *(_QWORD *)(v4 + 152) = v7;
  *(_QWORD *)(v4 + 160) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  *(_QWORD *)(v4 + 184) = swift_task_alloc();
  *(_QWORD *)(v4 + 192) = type metadata accessor for ModelManagerInferenceProvider.Input(0);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  v8 = sub_249F1EB90();
  *(_QWORD *)(v4 + 208) = v8;
  *(_QWORD *)(v4 + 216) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  *(_QWORD *)(v4 + 232) = swift_task_alloc();
  v9 = sub_249F1EBA8();
  *(_QWORD *)(v4 + 240) = v9;
  *(_QWORD *)(v4 + 248) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 256) = swift_task_alloc();
  v10 = sub_249F1EB60();
  *(_QWORD *)(v4 + 264) = v10;
  *(_QWORD *)(v4 + 272) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 280) = swift_task_alloc();
  *(_QWORD *)(v4 + 288) = swift_task_alloc();
  v11 = sub_249F1EB78();
  *(_QWORD *)(v4 + 296) = v11;
  *(_QWORD *)(v4 + 304) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 312) = swift_task_alloc();
  v12 = sub_249F1EBC0();
  *(_QWORD *)(v4 + 320) = v12;
  *(_QWORD *)(v4 + 328) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 336) = swift_task_alloc();
  *(_QWORD *)(v4 + 344) = swift_task_alloc();
  *(_QWORD *)(v4 + 352) = swift_task_alloc();
  v13 = sub_249F1EBD8();
  *(_QWORD *)(v4 + 360) = v13;
  *(_QWORD *)(v4 + 368) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v4 + 376) = swift_task_alloc();
  v14 = sub_249F1EBFC();
  *(_QWORD *)(v4 + 384) = v14;
  *(_QWORD *)(v4 + 392) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 400) = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)(v4 + 408) = swift_task_alloc();
  *(_OWORD *)(v4 + 416) = *(_OWORD *)a2;
  *(_DWORD *)(v4 + 552) = *(_DWORD *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_249DF915C()
{
  unint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v50;
  _QWORD *v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  int64_t v81;
  _QWORD *v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148[2];
  int v149;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled) == 1)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_64:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v1 = *(_QWORD **)(v0 + 112);
  if (*v1)
  {
    v2 = (_QWORD *)*v1;
  }
  else
  {
    v25 = *(_DWORD *)(v0 + 552);
    v27 = *(_QWORD *)(v0 + 416);
    v26 = *(_QWORD *)(v0 + 424);
    v28 = *(_QWORD **)(v0 + 408);
    sub_249DFB638(*(_QWORD *)(v0 + 104), (uint64_t)v28);
    v148[0] = v27;
    v148[1] = v26;
    v149 = v25;
    swift_bridgeObjectRetain();
    v2 = (_QWORD *)sub_249E384BC(v28, v148);
  }
  *(_QWORD *)(v0 + 432) = v2;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 104) + 57);
  swift_retain();
  v146 = (_QWORD *)v0;
  if (v3 == 1)
  {
    if (!geteuid())
      goto LABEL_9;
    v4 = *(_QWORD *)(v0 + 376);
    v138 = *(_QWORD *)(v0 + 368);
    v142 = *(_QWORD *)(v0 + 360);
    v5 = *(_QWORD *)(v0 + 344);
    v6 = v2;
    v7 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 328);
    v135 = v6;
    swift_retain();
    v9 = sub_249F1EDD0();
    v11 = v10;
    swift_release();
    swift_bridgeObjectRetain();
    v134 = v9;
    sub_249F1EBCC();
    sub_249F1EBF0();
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v4, v142);
    sub_249F1EBE4();
    v12 = *MEMORY[0x24BE3C018];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v5, *MEMORY[0x24BE3C018], v7);
    v13 = sub_249F1EBB4();
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(v5, v7);
    if ((v13 & 1) != 0)
    {
      v16 = *(_QWORD *)(v0 + 392);
      v15 = *(_QWORD *)(v0 + 400);
      v17 = *(_QWORD *)(v0 + 384);
      v18 = *(_QWORD *)(v0 + 352);
      v19 = *(_QWORD *)(v0 + 320);
      swift_bridgeObjectRelease();
      v14(v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      v2 = v135;
LABEL_9:
      if (qword_2578D5D78 == -1)
      {
LABEL_10:
        v20 = sub_249F1EF38();
        __swift_project_value_buffer(v20, (uint64_t)qword_2578FF3F0);
        v21 = sub_249F1EF20();
        v22 = sub_249F1F820();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_249D98000, v21, v22, "GenerativeModelsAvailibilityCheck requested but detected process running as root. Skipping.", v23, 2u);
          MEMORY[0x24BD06618](v23, -1, -1);
        }

        goto LABEL_13;
      }
LABEL_75:
      swift_once();
      goto LABEL_10;
    }
    v132 = v11;
    v41 = *(_QWORD *)(v0 + 328);
    v40 = *(_QWORD *)(v0 + 336);
    v42 = *(_QWORD *)(v0 + 320);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 16))(v40, *(_QWORD *)(v0 + 352), v42);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 88))(v40, v42);
    v133 = v14;
    if (v43 == *MEMORY[0x24BE3BDE0])
    {
      v44 = *(_QWORD *)(v0 + 336);
      v45 = *(_QWORD *)(v0 + 312);
      v46 = *(_QWORD *)(v0 + 296);
      v47 = *(_QWORD *)(v0 + 304);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 96))(v44, *(_QWORD *)(v0 + 320));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v45, v44, v46);
      v48 = sub_249F1EB6C();
      v49 = *(_QWORD *)(v48 + 16);
      if (v49)
      {
        v136 = *(_QWORD *)(v0 + 272);
        v148[0] = MEMORY[0x24BEE4AF8];
        sub_249DB673C(0, v49, 0);
        v50 = sub_249DFB680(v48);
        v2 = v51;
        v53 = v52 & 1;
        v139 = v48;
        v143 = v48 + 56;
        while ((v50 & 0x8000000000000000) == 0 && v50 < 1 << *(_BYTE *)(v48 + 32))
        {
          if (((*(_QWORD *)(v143 + (((unint64_t)v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
            goto LABEL_70;
          if (*(_DWORD *)(v48 + 36) != (_DWORD)v2)
            goto LABEL_71;
          v55 = v146[35];
          v54 = v146[36];
          v56 = v146[33];
          (*(void (**)(uint64_t, int64_t, uint64_t))(v136 + 16))(v54, *(_QWORD *)(v48 + 48) + *(_QWORD *)(v136 + 72) * v50, v56);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v55, v54, v56);
          v57 = sub_249F1EB54();
          v59 = v58;
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v55, v56);
          v60 = v148[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249DB673C(0, *(_QWORD *)(v60 + 16) + 1, 1);
            v60 = v148[0];
          }
          v0 = *(_QWORD *)(v60 + 16);
          v61 = *(_QWORD *)(v60 + 24);
          if (v0 >= v61 >> 1)
          {
            sub_249DB673C(v61 > 1, v0 + 1, 1);
            v60 = v148[0];
          }
          *(_QWORD *)(v60 + 16) = v0 + 1;
          v62 = v60 + 16 * v0;
          *(_QWORD *)(v62 + 32) = v57;
          *(_QWORD *)(v62 + 40) = v59;
          v48 = v139;
          v63 = sub_249DFB724(v50, (int)v2, v53 & 1, v139);
          v50 = v63;
          v2 = (_QWORD *)v64;
          v53 = v65 & 1;
          if (!--v49)
          {
            sub_249DFBBD8(v63, v64, v65 & 1);
            swift_bridgeObjectRelease();
            v0 = (unint64_t)v146;
            goto LABEL_54;
          }
        }
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x24BEE4AF8];
LABEL_54:
      v100 = *(_QWORD *)(v0 + 304);
      v99 = *(_QWORD *)(v0 + 312);
      v101 = *(_QWORD *)(v0 + 296);
    }
    else
    {
      if (v43 != *MEMORY[0x24BE3BDF0])
      {
        if (v43 != v12)
          v14(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
        v60 = MEMORY[0x24BEE4AF8];
        goto LABEL_58;
      }
      v75 = *(_QWORD *)(v0 + 336);
      v77 = *(_QWORD *)(v0 + 248);
      v76 = *(_QWORD *)(v0 + 256);
      v78 = *(_QWORD *)(v0 + 240);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 96))(v75, *(_QWORD *)(v0 + 320));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v76, v75, v78);
      v79 = sub_249F1EB9C();
      v80 = *(_QWORD *)(v79 + 16);
      if (v80)
      {
        v137 = *(_QWORD *)(v0 + 216);
        v148[0] = MEMORY[0x24BEE4AF8];
        sub_249DB673C(0, v80, 0);
        v81 = sub_249DFB680(v79);
        v2 = v82;
        v84 = v83 & 1;
        v140 = v79;
        v144 = v79 + 56;
        while ((v81 & 0x8000000000000000) == 0 && v81 < 1 << *(_BYTE *)(v79 + 32))
        {
          if (((*(_QWORD *)(v144 + (((unint64_t)v81 >> 3) & 0xFFFFFFFFFFFFF8)) >> v81) & 1) == 0)
            goto LABEL_73;
          if (*(_DWORD *)(v79 + 36) != (_DWORD)v2)
            goto LABEL_74;
          v86 = v146[28];
          v85 = v146[29];
          v87 = v146[26];
          (*(void (**)(uint64_t, int64_t, uint64_t))(v137 + 16))(v85, *(_QWORD *)(v79 + 48) + *(_QWORD *)(v137 + 72) * v81, v87);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 32))(v86, v85, v87);
          v88 = sub_249F1EB84();
          v90 = v89;
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v86, v87);
          v60 = v148[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249DB673C(0, *(_QWORD *)(v60 + 16) + 1, 1);
            v60 = v148[0];
          }
          v0 = *(_QWORD *)(v60 + 16);
          v91 = *(_QWORD *)(v60 + 24);
          if (v0 >= v91 >> 1)
          {
            sub_249DB673C(v91 > 1, v0 + 1, 1);
            v60 = v148[0];
          }
          *(_QWORD *)(v60 + 16) = v0 + 1;
          v92 = v60 + 16 * v0;
          *(_QWORD *)(v92 + 32) = v88;
          *(_QWORD *)(v92 + 40) = v90;
          v79 = v140;
          v93 = sub_249DFB724(v81, (int)v2, v84 & 1, v140);
          v81 = v93;
          v2 = (_QWORD *)v94;
          v84 = v95 & 1;
          if (!--v80)
          {
            sub_249DFBBD8(v93, v94, v95 & 1);
            swift_bridgeObjectRelease();
            v0 = (unint64_t)v146;
            goto LABEL_56;
          }
        }
        goto LABEL_72;
      }
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x24BEE4AF8];
LABEL_56:
      v100 = *(_QWORD *)(v0 + 248);
      v99 = *(_QWORD *)(v0 + 256);
      v101 = *(_QWORD *)(v0 + 240);
    }
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
LABEL_58:
    v103 = *(_QWORD *)(v0 + 392);
    v102 = *(_QWORD *)(v0 + 400);
    v104 = *(_QWORD *)(v0 + 384);
    v105 = *(_QWORD *)(v0 + 352);
    v106 = *(_QWORD *)(v0 + 320);
    sub_249DD9530();
    swift_allocError();
    *(_QWORD *)v107 = v134;
    *(_QWORD *)(v107 + 8) = v132;
    *(_QWORD *)(v107 + 16) = v60;
    *(_BYTE *)(v107 + 24) = 6;
    swift_willThrow();
    swift_release();
    v133(v105, v106);
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v104);
    goto LABEL_64;
  }
LABEL_13:
  type metadata accessor for AppleDiffusionResourceFactory(0);
  v24 = static AppleDiffusionResourceFactory.shared()();
  *(_QWORD *)(v0 + 440) = v24;
  v29 = v24;
  v30 = (unint64_t *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249F21770;
  v32 = v2[6];
  *(_QWORD *)(inited + 32) = v2[5];
  *(_QWORD *)(inited + 40) = v32;
  v33 = *(_QWORD *)(v29 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v29
                                       + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs);
  *(_QWORD *)(inited + 56) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = sub_249DAE3E8(inited);
  *v30 = v34;
  v35 = (void *)v2[4];
  if (v35)
  {
    v36 = v34;
    v37 = v2[3];
    swift_bridgeObjectRetain_n();
    v38._countAndFlagsBits = v37;
    v38._object = v35;
    LOBYTE(v39) = AppleDiffusionAdapter.init(modelCatalogInferenceAssetIdentifier:)(v38);
    if (v39 == 9)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v66 = *(_QWORD *)(v29 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_adapterVersions);
      if (*(_QWORD *)(v66 + 16) && (v67 = sub_249DB7F54(v39), (v68 & 1) != 0))
      {
        v69 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v67);
        if (*(_QWORD *)(v69 + 16))
        {
          swift_bridgeObjectRetain();
          v70 = sub_249DB7FAC(0);
          if ((v71 & 1) != 0)
          {
            v72 = (uint64_t *)(*(_QWORD *)(v69 + 56) + 16 * v70);
            v73 = *v72;
            v74 = v72[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            v73 = 0;
            v74 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v73 = 0;
          v74 = 0;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v148[0] = v36;
        sub_249DD19FC(v73, v74, v37, (uint64_t)v35, isUniquelyReferenced_nonNull_native);
        *v30 = v148[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v0 = (unint64_t)v146;
      }
      else
      {
        v96 = sub_249E90F5C(v37, (uint64_t)v35);
        v98 = v97;
        swift_bridgeObjectRelease();
        sub_249DFBBC4(v96, v98);
      }
    }
  }
  v110 = *(_QWORD *)(v0 + 192);
  v109 = *(_QWORD *)(v0 + 200);
  v111 = *(_QWORD *)(v0 + 176);
  v112 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 16))(v109, *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id, *(_QWORD *)(v0 + 128));
  sub_249DFB638(v112, v109 + *(int *)(v110 + 20));
  *(_QWORD *)(v109 + *(int *)(v110 + 24)) = *(_QWORD *)(v0 + 80);
  sub_249E5EA58(v109, v111);
  sub_249DE0280();
  v113 = *(_QWORD *)(v0 + 176);
  v114 = *(_QWORD *)(v0 + 152);
  v116 = *(_QWORD *)(v0 + 112);
  v117 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 8);
  *(_QWORD *)(v0 + 448) = v117;
  v117(v113, v114);
  v118 = *(_QWORD *)(v116 + 8);
  *(_QWORD *)(v0 + 456) = v118;
  v119 = *(_QWORD *)(v116 + 16);
  *(_QWORD *)(v0 + 464) = v119;
  v120 = *(_QWORD *)(v0 + 184);
  v121 = *(_QWORD *)(v0 + 160);
  v122 = *(_QWORD *)(v0 + 168);
  v123 = *(_QWORD *)(v0 + 152);
  v141 = *(_QWORD *)(v0 + 120);
  v145 = *(_QWORD *)(v0 + 112);
  v147 = *(_QWORD *)(v0 + 144);
  if (v118)
  {
    sub_249F1ED64();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v122, v120, v123);
    swift_bridgeObjectRetain();
    sub_249DC09B8(v118);
    swift_retain();
    v124 = sub_249F1ED58();
    *(_QWORD *)(v0 + 472) = v124;
    sub_249F1ECEC();
    v125 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v125;
    v125[2] = v141;
    v125[3] = v124;
    v125[4] = v118;
    v125[5] = v119;
    v125[6] = v145;
    v126 = swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v126;
    *(_QWORD *)(v126 + 16) = v147;
    v127 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v127;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    *v127 = v0;
    v127[1] = sub_249DF9ED0;
  }
  else
  {
    sub_249F1ED04();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v122, v120, v123);
    swift_bridgeObjectRetain();
    swift_retain();
    v128 = sub_249F1ECF8();
    *(_QWORD *)(v0 + 512) = v128;
    sub_249F1ECEC();
    v129 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 520) = v129;
    v129[2] = v141;
    v129[3] = v128;
    v129[4] = v145;
    v130 = swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v130;
    *(_QWORD *)(v130 + 16) = v147;
    v131 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 536) = v131;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64B8);
    *v131 = v0;
    v131[1] = sub_249DFA0C8;
  }
  return sub_249F1FE38();
}

uint64_t sub_249DF9ED0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 504) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DF9F44()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v1 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 144);
  swift_release();
  sub_249DC0A2C(v1);
  swift_release();
  swift_release();
  v2(v4, v5);
  sub_249DFBA7C(v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v8);
  v10 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
}

uint64_t sub_249DFA0C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DFA140()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  swift_release();
  swift_release();
  swift_release();
  v1(v3, v4);
  sub_249DFBA7C(v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

uint64_t sub_249DFA2B8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v1 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 144);
  swift_release();
  sub_249DC0A2C(v1);
  swift_release();
  swift_release();
  v2(v4, v5);
  sub_249DFBA7C(v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DFA438()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  swift_release();
  swift_release();
  swift_release();
  v1(v3, v4);
  sub_249DFBA7C(v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DFA5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_249DFA5CC()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *v3;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled) == 1)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v2 = *(_QWORD *)(v0 + 56) + 24;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_249DFA6C4;
    return sub_249DFAAE8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v2);
  }
}

uint64_t sub_249DFA6C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_249DFA740()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DFA758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_249DFA774()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *v3;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled) == 1)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    v2 = *(_QWORD *)(v0 + 40) + 24;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    *v3 = v0;
    v3[1] = sub_249DFA868;
    return sub_249DFBBE4(*(_QWORD *)(v0 + 32), v2);
  }
}

uint64_t sub_249DFA868(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_249DFA8E4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249DFA8FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_249F1E8D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D78 != -1)
    swift_once();
  v6 = sub_249F1EF38();
  __swift_project_value_buffer(v6, (uint64_t)qword_2578FF3F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v7 = sub_249F1EF20();
  v8 = sub_249F1F82C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_249F1E8A8();
    v13 = sub_249E68CA8(v11, v12, &v14);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_249D98000, v7, v8, "Cancelling request %s via Swift.Task", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v10, -1, -1);
    MEMORY[0x24BD06618](v9, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

}

uint64_t sub_249DFAAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8B08);
  v5[18] = swift_task_alloc();
  v6 = sub_249F1ECBC();
  v5[19] = v6;
  v5[20] = *(_QWORD *)(v6 - 8);
  v5[21] = swift_task_alloc();
  v7 = sub_249F1ED1C();
  v5[22] = v7;
  v5[23] = *(_QWORD *)(v7 - 8);
  v5[24] = swift_task_alloc();
  v8 = sub_249F1ED34();
  v5[25] = v8;
  v5[26] = *(_QWORD *)(v8 - 8);
  v5[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DFABC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 136);
  sub_249F1ED4C();
  v2 = OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled;
  *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled;
  if (*(_BYTE *)(v1 + v2) == 1)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249F1F670();
    sub_249F1ED28();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v4;
    *v4 = v0;
    v4[1] = sub_249DFAD18;
    return sub_249F1ED10();
  }
}

uint64_t sub_249DFAD18()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[34] = v0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[30] = 0;
    v2[31] = 0;
  }
  return swift_task_switch();
}

uint64_t sub_249DFAD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v12 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 168), v3, v1);
    if (*(_BYTE *)(v13 + v12) == 1)
    {
      sub_249F1F5D4();
      sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_allocError();
      sub_249F1F1E4();
      swift_willThrow();
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 240);
      sub_249F1F670();
      if (!v14)
      {
        sub_249E5F2B4((_OWORD *)(v0 + 16));
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 112))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
        if (*(_QWORD *)(v0 + 48))
        {
          sub_249DCC274(*(_QWORD *)(v0 + 128), v0 + 56, &qword_2578D7DF8);
          v24 = *(_QWORD *)(v0 + 80);
          v26 = *(_QWORD *)(v0 + 160);
          v25 = *(_QWORD *)(v0 + 168);
          v27 = *(_QWORD *)(v0 + 152);
          if (v24)
          {
            v28 = *(_QWORD *)(v0 + 88);
            __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
            v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 8);
            v30 = swift_bridgeObjectRetain();
            v29(v30, v24, v28);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
            __swift_destroy_boxed_opaque_existential_1(v0 + 56);
          }
          else
          {
            (*(void (**)(_QWORD, _QWORD))(v26 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
            sub_249DCC2FC(v0 + 56, &qword_2578D7DF8);
          }
        }
        else
        {
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
        }
        if ((*(_BYTE *)(v0 + 33) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v31 = (_QWORD *)(v0 + 40);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_249DCB1B0(v0 + 40, v0 + 96, &qword_2578D8B10);
          sub_249DFBA54(v0 + 96);
          swift_bridgeObjectRelease();
          v31 = (_QWORD *)(v0 + 248);
        }
        *(_QWORD *)(v0 + 256) = *v31;
        v32 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 264) = v32;
        *v32 = v0;
        v32[1] = sub_249DFB124;
        return sub_249F1ED10();
      }
    }
    v16 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 192);
    v17 = *(_QWORD *)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 184);
  sub_249DCC2FC(v3, &qword_2578D8B08);
  if (!v4)
    v4 = MEMORY[0x24BEE4AF8];
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_249DFB124()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v3 = v2[32];
  if (v0)
  {
    v2[34] = v0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[30] = 0;
    v2[31] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_249DFB194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DFB218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249DFB284()
{
  return type metadata accessor for ModelManagerDiffusionOperation(0);
}

uint64_t type metadata accessor for ModelManagerDiffusionOperation(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D8998);
}

uint64_t sub_249DFB2A0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_249DFB2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModelManagerDiffusionOperation(0);
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  *(_BYTE *)(v10 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation__isCancelled) = 0;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v10 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id, v9, v6);
  v12 = (_QWORD *)(v10 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_loggingIdentifier);
  *v12 = 0xD00000000000001ALL;
  v12[1] = 0x8000000249F34D30;
  *a3 = v10;
  return result;
}

uint64_t sub_249DFB3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t v11;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  v11 = MEMORY[0x24BD06528](&unk_249F2637C, a4);
  *v10 = v5;
  v10[1] = sub_249DCC420;
  v10[16] = v11;
  v10[17] = v4;
  v10[14] = a3;
  v10[15] = a4;
  v10[12] = a1;
  v10[13] = a2;
  return swift_task_switch();
}

uint64_t sub_249DFB484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DDC8E4;
  return sub_249DF8F08(a1, a2, a3);
}

uint64_t sub_249DFB4EC(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578D8AC0, type metadata accessor for ModelManagerDiffusionOperation, (uint64_t)&unk_249F218A8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249DFB528(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(qword_2578D8AC8, type metadata accessor for ModelManagerDiffusionOperation, (uint64_t)&unk_249F26360);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249DFB564(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578D8AE0, type metadata accessor for InProcessDiffusionOperation, (uint64_t)&unk_249F26424);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249DFB5A0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_249D9BBEC(&qword_2578D8AE8, type metadata accessor for InProcessDiffusionOperation, (uint64_t)&unk_249F263E0);
  result = sub_249D9BBEC(&qword_2578D8AF0, type metadata accessor for InProcessDiffusionOperation, (uint64_t)&unk_249F263A8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249DFB5FC(uint64_t a1)
{
  uint64_t result;

  result = sub_249D9BBEC(&qword_2578D8AF8, type metadata accessor for InProcessDiffusionOperation, (uint64_t)&unk_249F26408);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249DFB638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenerationRecipe(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249DFB680(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_249DFB724(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

BOOL sub_249DFB808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  if (*(_BYTE *)(a1 + 58) != 1)
    return 0;
  v2 = *(_QWORD *)(a1 + 8);
  v1 = *(_QWORD *)(a1 + 16);
  if (qword_2578D5CF0 != -1)
    swift_once();
  v3 = qword_2578FF318;
  v4 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v4)
    return 0;
  v5 = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    v7 = *(_QWORD *)(v3 + 8 * v6 + 32);
    if ((*(uint64_t (**)(uint64_t))(v7 + 88))(v5) == v2 && v8 == v1)
      break;
    v10 = sub_249F1FE2C();
    v5 = swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_14;
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  if (!swift_conformsToProtocol2())
    v7 = 0;
  return v7 && ((*(uint64_t (**)(void))(v7 + 104))() & 1) != 0;
}

BOOL sub_249DFB930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  if ((*(_BYTE *)(a1 + 58) & 1) != 0)
    return 0;
  v2 = *(_QWORD *)(a1 + 8);
  v1 = *(_QWORD *)(a1 + 16);
  if (qword_2578D5CF0 != -1)
    swift_once();
  v3 = qword_2578FF318;
  v4 = *(_QWORD *)(qword_2578FF318 + 16);
  if (!v4)
    return 0;
  v5 = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    v7 = *(_QWORD *)(v3 + 8 * v6 + 32);
    if ((*(uint64_t (**)(uint64_t))(v7 + 88))(v5) == v2 && v8 == v1)
      break;
    v10 = sub_249F1FE2C();
    v5 = swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_14;
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  if (!swift_conformsToProtocol2())
    v7 = 0;
  return v7 && ((*(uint64_t (**)(void))(v7 + 104))() & 1) != 0;
}

uint64_t sub_249DFBA54(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249DFBA7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModelManagerInferenceProvider.Input(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DFBAB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_249DCC420;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_249DFBB30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_249DCC420;
  *(_QWORD *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 40) = v7;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_249DFBBAC()
{
  uint64_t v0;

  sub_249DFA8FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_249DFBBC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_249DFBBD8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_249DFBBE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2[14] = a2;
  v3 = sub_249F1ECBC();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v4 = swift_task_alloc();
  v2[17] = v4;
  v7 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE68A18] + MEMORY[0x24BE68A18]);
  v5 = (_QWORD *)swift_task_alloc();
  v2[18] = v5;
  *v5 = v2;
  v5[1] = sub_249DFBC7C;
  return v7(v4);
}

uint64_t sub_249DFBC7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249DFBCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 152);
  sub_249E5F2B4((_OWORD *)(v0 + 16));
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_249DCC274(*(_QWORD *)(v0 + 112), v0 + 56, &qword_2578D7DF8);
    v3 = *(_QWORD *)(v0 + 80);
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
      if (*(_QWORD *)(v0 + 48))
        v5 = *(_QWORD *)(v0 + 48);
      else
        v5 = MEMORY[0x24BEE4AF8];
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8);
      swift_bridgeObjectRetain();
      v6(v5, v3, v4);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    }
    else
    {
      sub_249DCC2FC(v0 + 56, &qword_2578D7DF8);
    }
    v7 = *(_QWORD *)(v0 + 40);
    v8 = v0 + 48;
    if (v7)
    {
      sub_249DCB1B0(v8, v0 + 104, &qword_2578D8B48);
      sub_249DFBA54(v0 + 104);
    }
    else
    {
      sub_249DCB1B0(v8, v0 + 96, &qword_2578D8B48);
      sub_249DFBA54(v0 + 96);
      v7 = MEMORY[0x24BEE4AF8];
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
}

uint64_t sub_249DFBE68()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249DFBE9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_249DAFCF8;
  return sub_249EA5384(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_249DFBF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for NoOpImageScaler()
{
  return &type metadata for NoOpImageScaler;
}

uint64_t sub_249DFBF90(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  *(_BYTE *)(v3 + 48) = *((_BYTE *)a2 + 8);
  *(_OWORD *)(v3 + 32) = *a3;
  return swift_task_switch();
}

id sub_249DFBFBC()
{
  uint64_t v0;
  void *v1;
  id result;
  double v3;
  double v4;
  uint64_t v6;
  CGImage *v7;
  size_t Width;
  size_t Height;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t (*v15)(void);
  double v16;
  double v17;
  size_t v18;
  uint64_t v19;
  CGImage *v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);

  if (!*(_BYTE *)(v0 + 48))
  {
    v7 = (CGImage *)*(id *)(v0 + 24);
    Width = CGImageGetWidth(v7);
    Height = CGImageGetHeight(v7);
    goto LABEL_15;
  }
  if (*(_BYTE *)(v0 + 48) != 1)
  {
    v7 = (CGImage *)*(id *)(v0 + 24);
    Width = CVPixelBufferGetWidth(v7);
    Height = CVPixelBufferGetHeight(v7);
LABEL_15:
    v6 = Height;
    v10 = *(_QWORD *)(v0 + 32);

    if (Width != v10)
      goto LABEL_18;
    goto LABEL_16;
  }
  v1 = *(void **)(v0 + 24);
  result = objc_msgSend(v1, sel_extent);
  if (v3 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_35;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (*(_QWORD *)(v0 + 32) != (uint64_t)v3)
    goto LABEL_21;
  v6 = (uint64_t)v4;
LABEL_16:
  if (v6 == *(_QWORD *)(v0 + 40))
  {
    v11 = *(_BYTE *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 16);
    v12 = *(void **)(v0 + 24);
    *(_QWORD *)v13 = v12;
    *(_BYTE *)(v13 + 8) = v11;
    v25 = *(uint64_t (**)(void))(v0 + 8);
    v14 = v12;
    v15 = v25;
    return (id)v15();
  }
LABEL_18:
  if (!*(_BYTE *)(v0 + 48))
  {
    v20 = (CGImage *)*(id *)(v0 + 24);
    v18 = CGImageGetWidth(v20);
    v21 = CGImageGetHeight(v20);
LABEL_30:
    v19 = v21;

    goto LABEL_31;
  }
  if (*(_BYTE *)(v0 + 48) != 1)
  {
    v20 = (CGImage *)*(id *)(v0 + 24);
    v18 = CVPixelBufferGetWidth(v20);
    v21 = CVPixelBufferGetHeight(v20);
    goto LABEL_30;
  }
  v1 = *(void **)(v0 + 24);
LABEL_21:
  result = objc_msgSend(v1, sel_extent);
  if (v16 <= -9.22337204e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if ((*(_QWORD *)&v16 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v17 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_40;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v17 < 9.22337204e18)
  {
    v18 = (uint64_t)v16;
    v19 = (uint64_t)v17;
LABEL_31:
    v23 = *(_QWORD *)(v0 + 32);
    v22 = *(_QWORD *)(v0 + 40);
    sub_249DFC27C();
    swift_allocError();
    *(_QWORD *)v24 = v18;
    *(_QWORD *)(v24 + 8) = v19;
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = v22;
    *(_BYTE *)(v24 + 32) = 1;
    swift_willThrow();
    v15 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v15();
  }
LABEL_42:
  __break(1u);
  return result;
}

BOOL sub_249DFC264(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

unint64_t sub_249DFC27C()
{
  unint64_t result;

  result = qword_2578D8B60;
  if (!qword_2578D8B60)
  {
    result = MEMORY[0x24BD06528](&unk_249F23464, &type metadata for ImageScalerError);
    atomic_store(result, (unint64_t *)&qword_2578D8B60);
  }
  return result;
}

__CVBuffer *sub_249DFC2C0(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  OSType v5;
  __CVBuffer *result;
  __CVBuffer *v7;
  int64_t BytesPerRow;
  int64_t Height;
  __int128 v10;

  v5 = *((_DWORD *)a3 + 4);
  v10 = *a3;
  result = sub_249DFD038((size_t *)&v10, v5);
  v7 = result;
  if (!v3)
  {
    BytesPerRow = CVPixelBufferGetBytesPerRow(result);
    Height = CVPixelBufferGetHeight(v7);
    if ((unsigned __int128)(Height * (__int128)BytesPerRow) >> 64 == (Height * BytesPerRow) >> 63)
      __asm { BR              X10 }
    __break(1u);
    JUMPOUT(0x249DFC5B8);
  }
  return result;
}

uint64_t sub_249DFC5FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249DFC634 + 4 * byte_249F264B0[a1]))(0x7865746E6F436F6ELL, 0xE900000000000074);
}

unint64_t sub_249DFC634()
{
  return 0xD000000000000011;
}

void sub_249DFC680()
{
  JUMPOUT(0x249DFC694);
}

void sub_249DFC6A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[16];
  uint64_t v15;

  v15 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C00);
  v14[5] = *(_QWORD *)(v3 - 8);
  v14[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v14[4] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C08);
  v14[2] = *(_QWORD *)(v5 - 8);
  v14[3] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[1] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C10);
  v14[12] = *(_QWORD *)(v7 - 8);
  v14[13] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[11] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C18);
  v14[9] = *(_QWORD *)(v9 - 8);
  v14[10] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C20);
  v14[7] = *(_QWORD *)(v10 - 8);
  v14[8] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C28);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8C30);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x24BDAC7A8](v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DFE128();
  v13 = BYTE4(v15);
  sub_249F20018();
  __asm { BR              X10 }
}

uint64_t sub_249DFC8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 70) = 0;
  sub_249DFE2C0();
  v5 = *(_QWORD *)(v4 - 104);
  sub_249F1FD3C();
  sub_249F1FDE4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v2, v5);
}

void sub_249DFCA9C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (v1)
  {
    *(_BYTE *)(v2 - 65) = 5;
    sub_249DFE16C();
    v3 = *(_QWORD *)(v2 - 192);
    v4 = *(_QWORD *)(v2 - 104);
    sub_249F1FD3C();
    v6 = *(_QWORD *)(v2 - 184);
    v5 = *(_QWORD *)(v2 - 176);
  }
  else
  {
    *(_BYTE *)(v2 - 66) = 4;
    sub_249DFE1B0();
    v3 = *(_QWORD *)(v2 - 216);
    v4 = *(_QWORD *)(v2 - 104);
    sub_249F1FD3C();
    v6 = *(_QWORD *)(v2 - 208);
    v5 = *(_QWORD *)(v2 - 200);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v4);
  JUMPOUT(0x249DFCA78);
}

uint64_t sub_249DFCB44()
{
  unsigned __int8 *v0;

  return sub_249DFC5FC(*v0);
}

uint64_t sub_249DFCB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249DFD7D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_249DFCB70(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_249DFCB7C()
{
  sub_249DFE128();
  return sub_249F20024();
}

uint64_t sub_249DFCBA4()
{
  sub_249DFE128();
  return sub_249F20030();
}

uint64_t sub_249DFCBCC()
{
  return 0x737574617473;
}

uint64_t sub_249DFCBE4()
{
  sub_249DFE1F4();
  return sub_249F20024();
}

uint64_t sub_249DFCC0C()
{
  sub_249DFE1F4();
  return sub_249F20030();
}

uint64_t sub_249DFCC34()
{
  sub_249DFE16C();
  return sub_249F20024();
}

uint64_t sub_249DFCC5C()
{
  sub_249DFE16C();
  return sub_249F20030();
}

uint64_t sub_249DFCC84()
{
  sub_249DFE1B0();
  return sub_249F20024();
}

uint64_t sub_249DFCCAC()
{
  sub_249DFE1B0();
  return sub_249F20030();
}

uint64_t sub_249DFCCD4()
{
  return 0x6F436E7275746572;
}

uint64_t sub_249DFCCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F436E7275746572 && a2 == 0xEA00000000006564)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249DFCD90()
{
  sub_249DFE27C();
  return sub_249F20024();
}

uint64_t sub_249DFCDB8()
{
  sub_249DFE27C();
  return sub_249F20030();
}

uint64_t sub_249DFCDE0()
{
  return 0x726F466C65786970;
}

uint64_t sub_249DFCE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F466C65786970 && a2 == 0xEF6570795474616DLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249DFCEBC()
{
  sub_249DFE2C0();
  return sub_249F20024();
}

uint64_t sub_249DFCEE4()
{
  sub_249DFE2C0();
  return sub_249F20030();
}

uint64_t sub_249DFCF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249DFCF98()
{
  sub_249DFE238();
  return sub_249F20024();
}

uint64_t sub_249DFCFC0()
{
  sub_249DFE238();
  return sub_249F20030();
}

uint64_t sub_249DFCFE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249DFDA2C(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result);
  }
  return result;
}

void sub_249DFD018(_QWORD *a1)
{
  unsigned int *v1;

  sub_249DFC6A0(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

CVPixelBufferRef sub_249DFD038(size_t *a1, OSType a2)
{
  size_t v3;
  size_t v4;
  uint64_t inited;
  void **v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  const __CFDictionary *v13;
  CVPixelBufferRef result;
  CVPixelBufferRef v15;
  int v16;
  uint64_t v17;
  CVPixelBufferRef v18[16];

  v18[15] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8B70);
  inited = swift_initStackObject();
  v6 = (void **)MEMORY[0x24BDC5678];
  *(_OWORD *)(inited + 16) = xmmword_249F21910;
  v7 = *v6;
  *(_QWORD *)(inited + 32) = v7;
  v8 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 40) = 1;
  v9 = (void *)*MEMORY[0x24BDC5668];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  v10 = v7;
  v11 = v9;
  v12 = sub_249DADF2C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8B78);
  *(_QWORD *)(inited + 80) = v12;
  sub_249DAE06C(inited);
  type metadata accessor for CFString(0);
  sub_249DFD230();
  v13 = (const __CFDictionary *)sub_249F1F1F0();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  result = (CVPixelBufferRef)CVPixelBufferCreate(0, v3, v4, a2, v13, v18);
  v15 = v18[0];
  if ((_DWORD)result)
  {
    v16 = (int)result;
    sub_249DFD1EC();
    swift_allocError();
    *(_DWORD *)v17 = v16;
    *(_BYTE *)(v17 + 4) = 1;
    swift_willThrow();

    return v15;
  }
  if (v18[0])
  {

    return v15;
  }
  __break(1u);
  return result;
}

unint64_t sub_249DFD1EC()
{
  unint64_t result;

  result = qword_2578D8B68;
  if (!qword_2578D8B68)
  {
    result = MEMORY[0x24BD06528](&unk_249F26560, &type metadata for PixelBufferError);
    atomic_store(result, (unint64_t *)&qword_2578D8B68);
  }
  return result;
}

unint64_t sub_249DFD230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D5F48;
  if (!qword_2578D5F48)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x24BD06528](&unk_249F30AE0, v1);
    atomic_store(result, (unint64_t *)&qword_2578D5F48);
  }
  return result;
}

CVPixelBufferRef sub_249DFD278(void *a1, OSType a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  CVPixelBufferRef result;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v17;
  id v18;
  id v19;
  CVPixelBufferRef v20;
  id v21;
  CGAffineTransform v22;

  v6 = *(_QWORD *)a3;
  v7 = *(_QWORD *)(a3 + 8);
  v8 = *(unsigned __int8 *)(a3 + 16);
  result = (CVPixelBufferRef)objc_msgSend(a1, sel_extent);
  v14 = v12;
  v15 = v13;
  if (v8 == 1)
  {
    if (v12 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v12 < 9.22337204e18)
    {
      if ((*(_QWORD *)&v12 & 0x7FF0000000000000) != 0x7FF0000000000000
        && (*(_QWORD *)&v13 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        if (v13 > -9.22337204e18)
        {
          if (v13 < 9.22337204e18)
          {
            v6 = (uint64_t)v12;
            v7 = (uint64_t)v13;
            goto LABEL_11;
          }
LABEL_18:
          __break(1u);
          return result;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  CGAffineTransformMakeTranslation(&v22, -v10, -v11);
  v17 = objc_msgSend(a1, sel_imageByApplyingTransform_, &v22);
  CGAffineTransformMakeScale(&v22, (double)v6 / v14, (double)v7 / v15);
  v18 = objc_msgSend(v17, sel_imageByApplyingTransform_, &v22);

  *(_QWORD *)&v22.a = v6;
  *(_QWORD *)&v22.b = v7;
  v19 = v18;
  v20 = sub_249DFD038((size_t *)&v22, a2);
  if (!v3)
  {
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
    objc_msgSend(v21, sel_render_toCVPixelBuffer_, v19, v20);

  }
  return v20;
}

CVPixelBufferRef sub_249DFD450(CVPixelBufferRef pixelBuffer, OSType a2, uint64_t a3)
{
  __CVBuffer *v3;
  __CVBuffer *v4;
  OpaqueVTPixelTransferSession *Width;
  OpaqueVTPixelTransferSession *Height;
  CVPixelBufferRef v10;
  OSStatus v11;
  VTPixelTransferSessionRef v12;
  OpaqueVTPixelTransferSession *v13;
  OSStatus v14;
  uint64_t v15;
  uint64_t v16;
  VTPixelTransferSessionRef pixelTransferSessionOut[3];

  v4 = v3;
  pixelTransferSessionOut[2] = *(VTPixelTransferSessionRef *)MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a3 + 16) == 1)
  {
    Width = (OpaqueVTPixelTransferSession *)CVPixelBufferGetWidth(pixelBuffer);
    Height = (OpaqueVTPixelTransferSession *)CVPixelBufferGetHeight(pixelBuffer);
  }
  else
  {
    Width = *(OpaqueVTPixelTransferSession **)a3;
    Height = *(OpaqueVTPixelTransferSession **)(a3 + 8);
  }
  if (CVPixelBufferGetIOSurface(pixelBuffer)
    && CVPixelBufferGetPixelFormatType(pixelBuffer) == a2
    && (OpaqueVTPixelTransferSession *)CVPixelBufferGetWidth(pixelBuffer) == Width
    && (OpaqueVTPixelTransferSession *)CVPixelBufferGetHeight(pixelBuffer) == Height)
  {
    return pixelBuffer;
  }
  pixelTransferSessionOut[0] = Width;
  pixelTransferSessionOut[1] = Height;
  v10 = sub_249DFD038((size_t *)pixelTransferSessionOut, a2);
  if (!v3)
  {
    v4 = v10;
    pixelTransferSessionOut[0] = 0;
    v11 = VTPixelTransferSessionCreate(0, pixelTransferSessionOut);
    v12 = pixelTransferSessionOut[0];
    if (v11 == sub_249F1F0DC() && v12)
    {
      v13 = v12;
      v14 = VTPixelTransferSessionTransferImage(v13, pixelBuffer, v4);
      if (v14 == sub_249F1F0DC())
      {
        VTPixelTransferSessionInvalidate(v13);

        return v4;
      }
      sub_249DFD1EC();
      swift_allocError();
      *(_DWORD *)v16 = v14;
      *(_BYTE *)(v16 + 4) = 2;
      swift_willThrow();
      VTPixelTransferSessionInvalidate(v13);

    }
    else
    {
      sub_249DFD1EC();
      swift_allocError();
      *(_DWORD *)v15 = v11;
      *(_BYTE *)(v15 + 4) = 2;
      swift_willThrow();
    }

  }
  return v4;
}

uint64_t getEnumTagSinglePayload for PixelBufferError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PixelBufferError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_249DFD6DC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 3u)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_249DFD6F4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_DWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferError()
{
  return &type metadata for PixelBufferError;
}

unint64_t sub_249DFD71C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_249DFD750();
  a1[2] = sub_249DFD794();
  result = sub_249DFD1EC();
  a1[3] = result;
  return result;
}

unint64_t sub_249DFD750()
{
  unint64_t result;

  result = qword_2578D8B80;
  if (!qword_2578D8B80)
  {
    result = MEMORY[0x24BD06528](&unk_249F2651C, &type metadata for PixelBufferError);
    atomic_store(result, (unint64_t *)&qword_2578D8B80);
  }
  return result;
}

unint64_t sub_249DFD794()
{
  unint64_t result;

  result = qword_2578D8B88;
  if (!qword_2578D8B88)
  {
    result = MEMORY[0x24BD06528](&unk_249F264F4, &type metadata for PixelBufferError);
    atomic_store(result, (unint64_t *)&qword_2578D8B88);
  }
  return result;
}

uint64_t sub_249DFD7D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7865746E6F436F6ELL && a2 == 0xE900000000000074;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F35360 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249F35380 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F353A0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249F353C0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249F353E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_249DFDA2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[11];
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8B90);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8B98);
  v26[8] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8BA0);
  v26[9] = *(_QWORD *)(v5 - 8);
  v26[10] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8BA8);
  v26[6] = *(_QWORD *)(v7 - 8);
  v26[7] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8BB0);
  v26[4] = *(_QWORD *)(v9 - 8);
  v26[5] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v28 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8BB8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8BC0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_249DFE128();
  v20 = v36;
  sub_249F1FFF4();
  if (!v20)
  {
    v26[2] = v11;
    v26[3] = v14;
    v26[1] = v12;
    v36 = v16;
    v21 = sub_249F1FD24();
    if (*(_QWORD *)(v21 + 16) == 1)
      __asm { BR              X10 }
    v22 = sub_249F1FAF0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7460);
    *v24 = &type metadata for PixelBufferError;
    sub_249F1FC70();
    sub_249F1FAD8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

void sub_249DFDE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 69) = 1;
  sub_249DFE27C();
  v4 = *(_QWORD *)(v3 - 160);
  sub_249F1FC64();
  if (!v0)
  {
    v5 = *(_QWORD *)(v3 - 216);
    sub_249F1FD0C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v1);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 104));
    JUMPOUT(0x249DFDE04);
  }
  JUMPOUT(0x249DFDDE0);
}

void sub_249DFDEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 - 68) = 2;
  sub_249DFE238();
  v4 = *(_QWORD *)(v3 - 152);
  sub_249F1FC64();
  if (!v0)
  {
    v5 = *(_QWORD *)(v3 - 200);
    sub_249F1FD0C();
    v6 = *(_QWORD *)(v3 - 96);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v1);
    JUMPOUT(0x249DFE118);
  }
  JUMPOUT(0x249DFDDE0);
}

unint64_t sub_249DFE128()
{
  unint64_t result;

  result = qword_2578D8BC8;
  if (!qword_2578D8BC8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26C98, &type metadata for PixelBufferError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BC8);
  }
  return result;
}

unint64_t sub_249DFE16C()
{
  unint64_t result;

  result = qword_2578D8BD0;
  if (!qword_2578D8BD0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26C48, &type metadata for PixelBufferError.CouldNotAccessDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BD0);
  }
  return result;
}

unint64_t sub_249DFE1B0()
{
  unint64_t result;

  result = qword_2578D8BD8;
  if (!qword_2578D8BD8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26BF8, &type metadata for PixelBufferError.IncorrectDataSizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BD8);
  }
  return result;
}

unint64_t sub_249DFE1F4()
{
  unint64_t result;

  result = qword_2578D8BE0;
  if (!qword_2578D8BE0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26BA8, &type metadata for PixelBufferError.ConversionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BE0);
  }
  return result;
}

unint64_t sub_249DFE238()
{
  unint64_t result;

  result = qword_2578D8BE8;
  if (!qword_2578D8BE8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26B58, &type metadata for PixelBufferError.TransferSessionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BE8);
  }
  return result;
}

unint64_t sub_249DFE27C()
{
  unint64_t result;

  result = qword_2578D8BF0;
  if (!qword_2578D8BF0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26B08, &type metadata for PixelBufferError.IoSurfaceCreationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BF0);
  }
  return result;
}

unint64_t sub_249DFE2C0()
{
  unint64_t result;

  result = qword_2578D8BF8;
  if (!qword_2578D8BF8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26AB8, &type metadata for PixelBufferError.NoContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8BF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PixelBufferError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PixelBufferError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_249DFE3E0 + 4 * byte_249F264C6[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_249DFE414 + 4 * byte_249F264C1[v4]))();
}

uint64_t sub_249DFE414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DFE41C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DFE424);
  return result;
}

uint64_t sub_249DFE430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DFE438);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_249DFE43C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DFE444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferError.CodingKeys()
{
  return &type metadata for PixelBufferError.CodingKeys;
}

ValueMetadata *type metadata accessor for PixelBufferError.NoContextCodingKeys()
{
  return &type metadata for PixelBufferError.NoContextCodingKeys;
}

ValueMetadata *type metadata accessor for PixelBufferError.IoSurfaceCreationCodingKeys()
{
  return &type metadata for PixelBufferError.IoSurfaceCreationCodingKeys;
}

ValueMetadata *type metadata accessor for PixelBufferError.TransferSessionFailureCodingKeys()
{
  return &type metadata for PixelBufferError.TransferSessionFailureCodingKeys;
}

uint64_t _s16VisualGeneration16PixelBufferErrorO19NoContextCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249DFE4D4 + 4 * byte_249F264CB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249DFE4F4 + 4 * byte_249F264D0[v4]))();
}

_BYTE *sub_249DFE4D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249DFE4F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DFE4FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DFE504(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DFE50C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DFE514(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferError.ConversionFailureCodingKeys()
{
  return &type metadata for PixelBufferError.ConversionFailureCodingKeys;
}

ValueMetadata *type metadata accessor for PixelBufferError.IncorrectDataSizeCodingKeys()
{
  return &type metadata for PixelBufferError.IncorrectDataSizeCodingKeys;
}

ValueMetadata *type metadata accessor for PixelBufferError.CouldNotAccessDataCodingKeys()
{
  return &type metadata for PixelBufferError.CouldNotAccessDataCodingKeys;
}

unint64_t sub_249DFE554()
{
  unint64_t result;

  result = qword_2578D8C38;
  if (!qword_2578D8C38)
  {
    result = MEMORY[0x24BD06528](&unk_249F267B0, &type metadata for PixelBufferError.ConversionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C38);
  }
  return result;
}

unint64_t sub_249DFE59C()
{
  unint64_t result;

  result = qword_2578D8C40;
  if (!qword_2578D8C40)
  {
    result = MEMORY[0x24BD06528](&unk_249F26868, &type metadata for PixelBufferError.TransferSessionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C40);
  }
  return result;
}

unint64_t sub_249DFE5E4()
{
  unint64_t result;

  result = qword_2578D8C48;
  if (!qword_2578D8C48)
  {
    result = MEMORY[0x24BD06528](&unk_249F26920, &type metadata for PixelBufferError.IoSurfaceCreationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C48);
  }
  return result;
}

unint64_t sub_249DFE62C()
{
  unint64_t result;

  result = qword_2578D8C50;
  if (!qword_2578D8C50)
  {
    result = MEMORY[0x24BD06528](&unk_249F269D8, &type metadata for PixelBufferError.NoContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C50);
  }
  return result;
}

unint64_t sub_249DFE674()
{
  unint64_t result;

  result = qword_2578D8C58;
  if (!qword_2578D8C58)
  {
    result = MEMORY[0x24BD06528](&unk_249F26A90, &type metadata for PixelBufferError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C58);
  }
  return result;
}

unint64_t sub_249DFE6BC()
{
  unint64_t result;

  result = qword_2578D8C60;
  if (!qword_2578D8C60)
  {
    result = MEMORY[0x24BD06528](&unk_249F26948, &type metadata for PixelBufferError.NoContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C60);
  }
  return result;
}

unint64_t sub_249DFE704()
{
  unint64_t result;

  result = qword_2578D8C68;
  if (!qword_2578D8C68)
  {
    result = MEMORY[0x24BD06528](&unk_249F26970, &type metadata for PixelBufferError.NoContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C68);
  }
  return result;
}

unint64_t sub_249DFE74C()
{
  unint64_t result;

  result = qword_2578D8C70;
  if (!qword_2578D8C70)
  {
    result = MEMORY[0x24BD06528](&unk_249F26890, &type metadata for PixelBufferError.IoSurfaceCreationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C70);
  }
  return result;
}

unint64_t sub_249DFE794()
{
  unint64_t result;

  result = qword_2578D8C78;
  if (!qword_2578D8C78)
  {
    result = MEMORY[0x24BD06528](&unk_249F268B8, &type metadata for PixelBufferError.IoSurfaceCreationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C78);
  }
  return result;
}

unint64_t sub_249DFE7DC()
{
  unint64_t result;

  result = qword_2578D8C80;
  if (!qword_2578D8C80)
  {
    result = MEMORY[0x24BD06528](&unk_249F267D8, &type metadata for PixelBufferError.TransferSessionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C80);
  }
  return result;
}

unint64_t sub_249DFE824()
{
  unint64_t result;

  result = qword_2578D8C88;
  if (!qword_2578D8C88)
  {
    result = MEMORY[0x24BD06528](&unk_249F26800, &type metadata for PixelBufferError.TransferSessionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C88);
  }
  return result;
}

unint64_t sub_249DFE86C()
{
  unint64_t result;

  result = qword_2578D8C90;
  if (!qword_2578D8C90)
  {
    result = MEMORY[0x24BD06528](&unk_249F26720, &type metadata for PixelBufferError.ConversionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C90);
  }
  return result;
}

unint64_t sub_249DFE8B4()
{
  unint64_t result;

  result = qword_2578D8C98;
  if (!qword_2578D8C98)
  {
    result = MEMORY[0x24BD06528](&unk_249F26748, &type metadata for PixelBufferError.ConversionFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8C98);
  }
  return result;
}

unint64_t sub_249DFE8FC()
{
  unint64_t result;

  result = qword_2578D8CA0;
  if (!qword_2578D8CA0)
  {
    result = MEMORY[0x24BD06528](&unk_249F266D0, &type metadata for PixelBufferError.IncorrectDataSizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CA0);
  }
  return result;
}

unint64_t sub_249DFE944()
{
  unint64_t result;

  result = qword_2578D8CA8;
  if (!qword_2578D8CA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F266F8, &type metadata for PixelBufferError.IncorrectDataSizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CA8);
  }
  return result;
}

unint64_t sub_249DFE98C()
{
  unint64_t result;

  result = qword_2578D8CB0;
  if (!qword_2578D8CB0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26680, &type metadata for PixelBufferError.CouldNotAccessDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CB0);
  }
  return result;
}

unint64_t sub_249DFE9D4()
{
  unint64_t result;

  result = qword_2578D8CB8;
  if (!qword_2578D8CB8)
  {
    result = MEMORY[0x24BD06528](&unk_249F266A8, &type metadata for PixelBufferError.CouldNotAccessDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CB8);
  }
  return result;
}

unint64_t sub_249DFEA1C()
{
  unint64_t result;

  result = qword_2578D8CC0;
  if (!qword_2578D8CC0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26A00, &type metadata for PixelBufferError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CC0);
  }
  return result;
}

unint64_t sub_249DFEA64()
{
  unint64_t result;

  result = qword_2578D8CC8;
  if (!qword_2578D8CC8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26A28, &type metadata for PixelBufferError.CodingKeys);
    atomic_store(result, &qword_2578D8CC8);
  }
  return result;
}

uint64_t sub_249DFEAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_249F1E6B0();
  v3[23] = swift_task_alloc();
  type metadata accessor for AugmentedPrompt();
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249DFEB50()
{
  _QWORD *v0;
  void *v1;
  uint64_t inited;
  id v3;
  _QWORD *v4;

  v1 = (void *)v0[22];
  type metadata accessor for InputConditioner();
  inited = swift_initStackObject();
  v0[25] = inited;
  *(_QWORD *)(inited + 16) = v1;
  v3 = v1;
  swift_bridgeObjectRetain();
  sub_249F1E6A4();
  sub_249F1E65C();
  v4 = (_QWORD *)swift_task_alloc();
  v0[26] = v4;
  *v4 = v0;
  v4[1] = sub_249DFEC4C;
  return sub_249E11BE8((uint64_t)(v0 + 2), v0[24], 0, 0, 1, 0, 1);
}

uint64_t sub_249DFEC4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v4 = *(void **)(*(_QWORD *)v1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v2[27] = v0;
  v2[28] = v3;
  v6 = v2[4];
  v5 = v2[5];
  v7 = v2[6];
  swift_task_dealloc();
  v8 = v2[25];
  sub_249DFF2F0(v2[24]);
  if (v0)
  {
    swift_release();
  }
  else
  {
    swift_setDeallocating();

    sub_249DFF634(v6, v5, v7);
  }
  return swift_task_switch();
}

uint64_t sub_249DFED50()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  void *v3;
  NSObject *v4;
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void **v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  void *v42;
  uint8_t *v43;
  uint8_t *v44;
  NSObject *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49[2];

  v49[1] = *MEMORY[0x24BDAC8D0];
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 136) = 0;
  v2 = objc_msgSend(v1, sel_CSUSmileySpotterConfigurationForRevision_error_, 1, v0 + 136);
  v3 = *(void **)(v0 + 136);
  if (!v2)
  {
    v11 = *(void **)(v0 + 224);
    v30 = v3;
    sub_249F1E710();

    swift_willThrow();
LABEL_14:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v4 = v2;
  v5 = objc_allocWithZone(MEMORY[0x24BE28290]);
  v6 = v3;
  v7 = objc_msgSend(v5, sel_initWithConfiguration_, v4);
  v8 = *(void **)(v0 + 224);
  if (!v7)
  {

LABEL_26:
    v37 = 0;
    goto LABEL_27;
  }
  v9 = v7;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE282A0]), sel_initWithTextEncoding_TextEncoderRevision_, v8, 0);
  if (!v10)
  {
    v31 = *(void **)(v0 + 224);

    goto LABEL_26;
  }
  v11 = v10;
  *(_QWORD *)(v0 + 112) = 0;
  v12 = -[NSObject loadResources:](v9, sel_loadResources_, v0 + 112);
  v13 = *(void **)(v0 + 112);
  if ((v12 & 1) == 0)
  {
    v32 = *(void **)(v0 + 224);
    v33 = v13;
    sub_249F1E710();

    swift_willThrow();
    goto LABEL_14;
  }
  v14 = (void **)(v0 + 120);
  *(_QWORD *)(v0 + 128) = 0;
  v15 = v13;
  v16 = -[NSObject runSmileySpotterOnTextEncoding:error:](v9, sel_runSmileySpotterOnTextEncoding_error_, v11, v0 + 128);
  v17 = *(void **)(v0 + 128);
  *(_QWORD *)(v0 + 120) = v17;
  if (v17)
  {
    v48 = v16;
    v18 = qword_2578D5D78;
    v19 = v17;
    if (v18 != -1)
      swift_once();
    v20 = sub_249F1EF38();
    __swift_project_value_buffer(v20, (uint64_t)qword_2578FF3F0);
    v21 = sub_249F1EF20();
    v22 = sub_249F1F820();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(void **)(v0 + 224);
    if (v23)
    {
      v47 = *(void **)(v0 + 224);
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v49[0] = v26;
      *(_DWORD *)v25 = 136315138;
      swift_beginAccess();
      *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8CD8);
      v27 = sub_249F1F964();
      *(_QWORD *)(v0 + 152) = sub_249E68CA8(v27, v28, v49);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249D98000, v21, v22, "Unexpected error using SmileySpotter: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v26, -1, -1);
      MEMORY[0x24BD06618](v25, -1, -1);

      v29 = *(void **)(v0 + 120);
LABEL_25:

      goto LABEL_26;
    }

LABEL_24:
    v29 = *v14;
    goto LABEL_25;
  }
  if (!v16)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v38 = sub_249F1EF38();
    __swift_project_value_buffer(v38, (uint64_t)qword_2578FF3F0);
    v39 = sub_249F1EF20();
    v40 = sub_249F1F820();
    v41 = os_log_type_enabled(v39, v40);
    v42 = *(void **)(v0 + 224);
    if (v41)
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_249D98000, v39, v40, "Unexpected error using SmileySpotter: CSUSmileySpotterModelOutput was nil", v43, 2u);
      v44 = v43;
      v14 = (void **)(v0 + 120);
      MEMORY[0x24BD06618](v44, -1, -1);
      v45 = v9;
      v46 = v11;
      v9 = v39;
    }
    else
    {
      v45 = v4;
      v46 = *(void **)(v0 + 224);
      v42 = v11;
      v4 = v39;
    }

    goto LABEL_24;
  }
  v35 = *(void **)(v0 + 224);
  v36 = v16;
  v37 = objc_msgSend(v36, sel_generateBlobFace);

LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v37);
}

uint64_t sub_249DFF27C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_249DFF2F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AugmentedPrompt();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249DFF32C()
{
  return 0x757365526C6F6F62;
}

uint64_t sub_249DFF348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x757365526C6F6F62 && a2 == 0xEA0000000000746CLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249DFF3E8()
{
  sub_249DFF7DC();
  return sub_249F20024();
}

uint64_t sub_249DFF410()
{
  sub_249DFF7DC();
  return sub_249F20030();
}

uint64_t sub_249DFF438@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t result;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8CF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DFF7DC();
  sub_249F1FFF4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_249F1FCD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_249DFF54C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8CE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249DFF7DC();
  sub_249F20018();
  sub_249F1FD9C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249DFF634(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_249DC3C24(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for SmileySpotter()
{
  return &type metadata for SmileySpotter;
}

uint64_t getEnumTagSinglePayload for SmileySpotter.SpotResult(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SmileySpotter.SpotResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249DFF75C + 4 * byte_249F26CF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249DFF790 + 4 * byte_249F26CF0[v4]))();
}

uint64_t sub_249DFF790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DFF798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DFF7A0);
  return result;
}

uint64_t sub_249DFF7AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DFF7B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249DFF7B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DFF7C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmileySpotter.SpotResult()
{
  return &type metadata for SmileySpotter.SpotResult;
}

unint64_t sub_249DFF7DC()
{
  unint64_t result;

  result = qword_2578D8CE8;
  if (!qword_2578D8CE8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26E40, &type metadata for SmileySpotter.SpotResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SmileySpotter.SpotResult.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249DFF860 + 4 * byte_249F26CFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249DFF880 + 4 * byte_249F26CFF[v4]))();
}

_BYTE *sub_249DFF860(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249DFF880(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DFF888(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DFF890(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249DFF898(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249DFF8A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SmileySpotter.SpotResult.CodingKeys()
{
  return &type metadata for SmileySpotter.SpotResult.CodingKeys;
}

unint64_t sub_249DFF8C0()
{
  unint64_t result;

  result = qword_2578D8CF8;
  if (!qword_2578D8CF8)
  {
    result = MEMORY[0x24BD06528](&unk_249F26E18, &type metadata for SmileySpotter.SpotResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8CF8);
  }
  return result;
}

unint64_t sub_249DFF908()
{
  unint64_t result;

  result = qword_2578D8D00;
  if (!qword_2578D8D00)
  {
    result = MEMORY[0x24BD06528](&unk_249F26D88, &type metadata for SmileySpotter.SpotResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8D00);
  }
  return result;
}

unint64_t sub_249DFF950()
{
  unint64_t result;

  result = qword_2578D8D08;
  if (!qword_2578D8D08)
  {
    result = MEMORY[0x24BD06528](&unk_249F26DB0, &type metadata for SmileySpotter.SpotResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8D08);
  }
  return result;
}

void sub_249DFF994()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249F1FF64();
  __asm { BR              X9 }
}

uint64_t sub_249DFF9D8()
{
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

void sub_249DFFA58()
{
  __asm { BR              X10 }
}

uint64_t sub_249DFFA8C()
{
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

void sub_249DFFAF8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249F1FF64();
  __asm { BR              X9 }
}

uint64_t sub_249DFFB38()
{
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249DFFBB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249DFFE9C();
  *a1 = result;
  return result;
}

uint64_t sub_249DFFBE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_249DFFC0C + 4 * byte_249F26E9F[*v0]))();
}

void sub_249DFFC0C(_QWORD *a1@<X8>)
{
  *a1 = 0x646C696863;
  a1[1] = 0xE500000000000000;
}

void sub_249DFFC24(_QWORD *a1@<X8>)
{
  *a1 = 0x756441676E756F79;
  a1[1] = 0xEA0000000000746CLL;
}

void sub_249DFFC44(_QWORD *a1@<X8>)
{
  *a1 = 0x746C756461;
  a1[1] = 0xE500000000000000;
}

void sub_249DFFC5C(_QWORD *a1@<X8>)
{
  *a1 = 0x726F696E6573;
  a1[1] = 0xE600000000000000;
}

void sub_249DFFC74(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B4D828;
}

void sub_249DFFC84(char *a1)
{
  sub_249E38FEC(*a1);
}

uint64_t storeEnumTagSinglePayload for Age(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_249DFFCDC + 4 * byte_249F26EA9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249DFFD10 + 4 * byte_249F26EA4[v4]))();
}

uint64_t sub_249DFFD10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DFFD18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249DFFD20);
  return result;
}

uint64_t sub_249DFFD2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249DFFD34);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_249DFFD38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249DFFD40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Age()
{
  return &type metadata for Age;
}

uint64_t sub_249DFFD5C()
{
  sub_249DFFEE4();
  return sub_249F1F514();
}

uint64_t sub_249DFFDB8()
{
  sub_249DFFEE4();
  return sub_249F1F4FC();
}

unint64_t sub_249DFFE08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D8D10;
  if (!qword_2578D8D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8D18);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D8D10);
  }
  return result;
}

unint64_t sub_249DFFE58()
{
  unint64_t result;

  result = qword_2578D8D20;
  if (!qword_2578D8D20)
  {
    result = MEMORY[0x24BD06528](&unk_249F26F08, &type metadata for Age);
    atomic_store(result, (unint64_t *)&qword_2578D8D20);
  }
  return result;
}

uint64_t sub_249DFFE9C()
{
  unint64_t v0;

  v0 = sub_249F1FC4C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_249DFFEE4()
{
  unint64_t result;

  result = qword_2578D8D28;
  if (!qword_2578D8D28)
  {
    result = MEMORY[0x24BD06528](&unk_249F26F68, &type metadata for Age);
    atomic_store(result, (unint64_t *)&qword_2578D8D28);
  }
  return result;
}

uint64_t sub_249DFFF28@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD v44[3];
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v48 = a3;
  v61 = a4;
  v7 = sub_249F1E650();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v44[2] = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)v44 - v10;
  v11 = sub_249F1E6B0();
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v59 = (char *)v44 - v14;
  v15 = sub_249F1E620();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v44 - v20;
  v22 = sub_249F1E584();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AugmentedPrompt();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v44[1] = (char *)v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v44[0] = (char *)v44 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v62 = (char *)v44 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v65 = (uint64_t)v44 - v33;
  v47 = *a2;
  v57 = *v4;
  v56 = v4[1];
  v45 = v4[2];
  v46 = *((_QWORD *)v4 + 1);
  v58 = *((_QWORD *)v4 + 2);
  v55 = a1;
  sub_249F1E56C();
  sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  sub_249F1F730();
  sub_249F1F754();
  sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  v34 = sub_249F1F298();
  v35 = *(void (**)(char *, uint64_t))(v16 + 8);
  v35(v19, v15);
  v35(v21, v15);
  v36 = *(void (**)(char *, uint64_t))(v23 + 8);
  v63 = v25;
  v64 = v22;
  v36(v25, v22);
  v60 = v36;
  if ((v34 & 1) != 0)
  {
    if ((_DWORD)v57 != 5 || (_DWORD)v56 != 3 || v45 != 10)
      goto LABEL_7;
    if (v58)
    {
      swift_bridgeObjectRetain();
      v37 = sub_249F1F424();
      swift_bridgeObjectRelease();
      if (v37 > 0)
      {
LABEL_7:
        sub_249F1E6A4();
        v38 = v65;
        sub_249F1E65C();
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v38 = v65;
  sub_249E00B70(v55, v65);
LABEL_10:
  v39 = v63;
  sub_249F1E56C();
  v40 = v64;
  sub_249F1F730();
  sub_249F1F754();
  v41 = sub_249F1F298();
  v35(v19, v15);
  v35(v21, v15);
  v60(v39, v40);
  if ((v41 & 1) == 0)
  {
    v42 = v47;
    if (v48 - 3 >= 0xFFFFFFFE && (_DWORD)v47 != 5)
      __asm { BR              X9 }
    sub_249F1E6A4();
    sub_249F1E65C();
    __asm { BR              X9 }
  }
  return sub_249E00BF8(v38, v61);
}

uint64_t sub_249E00850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t (*v22)(char *, uint64_t);
  uint64_t result;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a2;
  v32 = a3;
  v4 = sub_249F1E6B0();
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249F1E650();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8];
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249F1E620();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = sub_249F1E584();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_249D9BBEC((unint64_t *)&qword_2578D73D0, v7, MEMORY[0x24BDCC588]);
  v34 = v6;
  v35 = a1;
  v33 = v20;
  sub_249F1E740();
  sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  sub_249F1F730();
  sub_249F1F754();
  sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  LOBYTE(v7) = sub_249F1F298();
  v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v13, v9);
  v21(v15, v9);
  v22 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  result = v22(v19, v16);
  if ((v7 & 1) == 0)
  {
    sub_249F1E56C();
    sub_249F1F730();
    sub_249F1F754();
    v24 = sub_249F1F298();
    v21(v13, v9);
    v21(v15, v9);
    v22(v19, v16);
    v25 = v34;
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_249F1E6A4();
      v26 = v28;
      sub_249F1E65C();
      sub_249F1E62C();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v25);
    }
    return sub_249F1E62C();
  }
  return result;
}

uint64_t sub_249E00B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedPrompt();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_249E00BB4()
{
  unint64_t result;

  result = qword_2578D8D40;
  if (!qword_2578D8D40)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AB9C, &type metadata for AugmentedPrompt.DemographicCategoryAttribute);
    atomic_store(result, (unint64_t *)&qword_2578D8D40);
  }
  return result;
}

uint64_t sub_249E00BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedPrompt();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for GenerationSeedAssigningRecipePreparer()
{
  return &type metadata for GenerationSeedAssigningRecipePreparer;
}

uint64_t sub_249E00C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_249E00C64()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v1 + 80);
  sub_249DFB638(v1, *(_QWORD *)(v0 + 16));
  if (v2 == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v3 + 72) = sub_249E91118(0x8000000000000000);
    *(_BYTE *)(v3 + 80) = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E00CB8(_QWORD *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  if (a2 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((*(_QWORD *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&a3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_10;
  }
  if (a3 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a3 < 9.22337204e18)
  {
    *a1 = (uint64_t)a2;
    a1[1] = (uint64_t)a3;
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t destroy for GenerationRecipe.ConditioningImageInfo(uint64_t a1)
{

  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerationRecipe.ConditioningImageInfo(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenerationRecipe.ConditioningImageInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GenerationRecipe.ConditioningImageInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationRecipe.ConditioningImageInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationRecipe.ConditioningImageInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.ConditioningImageInfo()
{
  return &type metadata for GenerationRecipe.ConditioningImageInfo;
}

_QWORD *sub_249E00FBC(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  __int128 v68;
  _OWORD *v69;
  _OWORD *v70;
  void *v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v94;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_WORD *)(a1 + 60) = *((_WORD *)a2 + 30);
    *(_BYTE *)(a1 + 62) = *((_BYTE *)a2 + 62);
    v8 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v8;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v9 = a3[8];
    v10 = (char *)(a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v18(v10, v11, v17);
      v18(&v10[v12[5]], &v11[v12[5]], v17);
      v19 = v12[6];
      v20 = (uint64_t *)&v10[v19];
      v21 = (uint64_t *)&v11[v19];
      if (*(_QWORD *)&v11[v19 + 16])
      {
        v22 = v21[1];
        v94 = *v21;
        sub_249DC3928(*v21, v22);
        *v20 = v94;
        v20[1] = v22;
        v20[2] = v21[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
        v20[2] = v21[2];
      }
      v10[v12[7]] = v11[v12[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    v23 = a3[9];
    v24 = a3[10];
    v25 = (char *)v4 + v23;
    v26 = (uint64_t)a2 + v23;
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v25[4] = *(_BYTE *)(v26 + 4);
    v27 = (char *)v4 + v24;
    v28 = (uint64_t)a2 + v24;
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = *(_BYTE *)(v28 + 4);
    v29 = a3[11];
    v30 = a3[12];
    v31 = (char *)v4 + v29;
    v32 = (uint64_t)a2 + v29;
    *(_WORD *)v31 = *(_WORD *)v32;
    v31[2] = *(_BYTE *)(v32 + 2);
    v33 = *(_QWORD *)(v32 + 16);
    *((_QWORD *)v31 + 1) = *(_QWORD *)(v32 + 8);
    *((_QWORD *)v31 + 2) = v33;
    *(_QWORD *)((char *)v4 + v30) = *(uint64_t *)((char *)a2 + v30);
    v34 = a3[14];
    *(_QWORD *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    v35 = (char *)v4 + v34;
    v36 = (uint64_t)a2 + v34;
    v37 = *(void **)((char *)a2 + v34 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37)
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_DWORD *)v35 + 4) = *(_DWORD *)(v36 + 16);
      v38 = *(_QWORD *)(v36 + 32);
      *((_QWORD *)v35 + 3) = v37;
      *((_QWORD *)v35 + 4) = v38;
      v39 = v37;
      swift_retain();
    }
    else
    {
      v40 = *(_OWORD *)(v36 + 16);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v40;
      *((_QWORD *)v35 + 4) = *(_QWORD *)(v36 + 32);
    }
    v41 = a3[15];
    v42 = (char *)v4 + v41;
    v43 = (uint64_t)a2 + v41;
    v44 = *(void **)(v43 + 24);
    if (v44)
    {
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_DWORD *)v42 + 4) = *(_DWORD *)(v43 + 16);
      v45 = *(_QWORD *)(v43 + 32);
      *((_QWORD *)v42 + 3) = v44;
      *((_QWORD *)v42 + 4) = v45;
      v46 = v44;
      swift_retain();
    }
    else
    {
      v47 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v47;
      *((_QWORD *)v42 + 4) = *(_QWORD *)(v43 + 32);
    }
    v48 = a3[16];
    v49 = (char *)v4 + v48;
    v50 = (uint64_t)a2 + v48;
    v51 = *(void **)(v50 + 24);
    if (v51)
    {
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_DWORD *)v49 + 4) = *(_DWORD *)(v50 + 16);
      v52 = *(_QWORD *)(v50 + 32);
      *((_QWORD *)v49 + 3) = v51;
      *((_QWORD *)v49 + 4) = v52;
      v53 = v51;
      swift_retain();
    }
    else
    {
      v54 = *(_OWORD *)(v50 + 16);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v54;
      *((_QWORD *)v49 + 4) = *(_QWORD *)(v50 + 32);
    }
    v55 = a3[17];
    v56 = (char *)v4 + v55;
    v57 = (uint64_t)a2 + v55;
    v58 = *(void **)(v57 + 24);
    if (v58)
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_DWORD *)v56 + 4) = *(_DWORD *)(v57 + 16);
      v59 = *(_QWORD *)(v57 + 32);
      *((_QWORD *)v56 + 3) = v58;
      *((_QWORD *)v56 + 4) = v59;
      v60 = v58;
      swift_retain();
    }
    else
    {
      v61 = *(_OWORD *)(v57 + 16);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v61;
      *((_QWORD *)v56 + 4) = *(_QWORD *)(v57 + 32);
    }
    v62 = a3[18];
    v63 = (char *)v4 + v62;
    v64 = (uint64_t)a2 + v62;
    v65 = *(void **)((char *)a2 + v62 + 24);
    if (v65)
    {
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_DWORD *)v63 + 4) = *(_DWORD *)(v64 + 16);
      v66 = *(_QWORD *)(v64 + 32);
      *((_QWORD *)v63 + 3) = v65;
      *((_QWORD *)v63 + 4) = v66;
      v67 = v65;
      swift_retain();
    }
    else
    {
      v68 = *(_OWORD *)(v64 + 16);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v68;
      *((_QWORD *)v63 + 4) = *(_QWORD *)(v64 + 32);
    }
    v69 = v63 + 40;
    v70 = (_OWORD *)(v64 + 40);
    v71 = *(void **)(v64 + 64);
    if (v71)
    {
      *v69 = *v70;
      *((_DWORD *)v63 + 14) = *(_DWORD *)(v64 + 56);
      v72 = *(_QWORD *)(v64 + 72);
      *((_QWORD *)v63 + 8) = v71;
      *((_QWORD *)v63 + 9) = v72;
      v73 = v71;
      swift_retain();
    }
    else
    {
      v74 = *(_OWORD *)(v64 + 56);
      *v69 = *v70;
      *(_OWORD *)(v63 + 56) = v74;
      *((_QWORD *)v63 + 9) = *(_QWORD *)(v64 + 72);
    }
    v75 = a3[19];
    v76 = a3[20];
    v77 = *(uint64_t *)((char *)a2 + v75);
    v63[80] = *(_BYTE *)(v64 + 80);
    *(_QWORD *)((char *)v4 + v75) = v77;
    v78 = (char *)v4 + v76;
    v79 = (uint64_t)a2 + v76;
    v80 = *(void **)((char *)a2 + v76 + 24);
    swift_bridgeObjectRetain();
    if (v80)
    {
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_DWORD *)v78 + 4) = *(_DWORD *)(v79 + 16);
      v81 = *(_QWORD *)(v79 + 32);
      v82 = *(_QWORD *)(v79 + 40);
      *((_QWORD *)v78 + 3) = v80;
      *((_QWORD *)v78 + 4) = v81;
      v83 = *(_QWORD *)(v79 + 48);
      v84 = *(_QWORD *)(v79 + 56);
      *((_QWORD *)v78 + 5) = v82;
      *((_QWORD *)v78 + 6) = v83;
      *((_QWORD *)v78 + 7) = v84;
      v85 = v80;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v86 = *(_OWORD *)(v79 + 16);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v86;
      v87 = *(_OWORD *)(v79 + 48);
      *((_OWORD *)v78 + 2) = *(_OWORD *)(v79 + 32);
      *((_OWORD *)v78 + 3) = v87;
    }
    v88 = a3[21];
    v89 = a3[22];
    v90 = (_QWORD *)((char *)v4 + v88);
    v91 = (uint64_t *)((char *)a2 + v88);
    v92 = v91[1];
    *v90 = *v91;
    v90[1] = v92;
    v90[2] = v91[2];
    *(_QWORD *)((char *)v4 + v89) = *(uint64_t *)((char *)a2 + v89);
    *((_BYTE *)v4 + a3[23]) = *((_BYTE *)a2 + a3[23]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_249E0149C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 20), v6);
    v8 = (uint64_t *)(v4 + *(int *)(v5 + 24));
    if (v8[2])
    {
      sub_249DC3C24(*v8, v8[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + a2[14] + 24);
  if (v9)
  {

    swift_release();
  }
  v10 = *(void **)(a1 + a2[15] + 24);
  if (v10)
  {

    swift_release();
  }
  v11 = *(void **)(a1 + a2[16] + 24);
  if (v11)
  {

    swift_release();
  }
  v12 = *(void **)(a1 + a2[17] + 24);
  if (v12)
  {

    swift_release();
  }
  v13 = a1 + a2[18];
  v14 = *(void **)(v13 + 24);
  if (v14)
  {

    swift_release();
  }
  v15 = *(void **)(v13 + 64);
  if (v15)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  v16 = *(void **)(a1 + a2[20] + 24);
  if (v16)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E01680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  _OWORD *v67;
  _OWORD *v68;
  void *v69;
  uint64_t v70;
  id v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v92;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  *(_BYTE *)(a1 + 62) = *(_BYTE *)(a2 + 62);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = a3[8];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v9, v10, v15);
    v16(&v9[v11[5]], &v10[v11[5]], v15);
    v17 = v11[6];
    v18 = (uint64_t *)&v9[v17];
    v19 = (uint64_t *)&v10[v17];
    if (*(_QWORD *)&v10[v17 + 16])
    {
      v20 = v19[1];
      v92 = *v19;
      sub_249DC3928(*v19, v20);
      *v18 = v92;
      v18[1] = v20;
      v18[2] = v19[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v18[2] = v19[2];
    }
    v9[v11[7]] = v10[v11[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v21 = a3[9];
  v22 = a3[10];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = a3[11];
  v28 = a3[12];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_WORD *)v29 = *(_WORD *)v30;
  *(_BYTE *)(v29 + 2) = *(_BYTE *)(v30 + 2);
  v31 = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  v32 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(void **)(a2 + v32 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_DWORD *)(v33 + 16) = *(_DWORD *)(v34 + 16);
    v36 = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 24) = v35;
    *(_QWORD *)(v33 + 32) = v36;
    v37 = v35;
    swift_retain();
  }
  else
  {
    v38 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v38;
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  }
  v39 = a3[15];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(void **)(v41 + 24);
  if (v42)
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_DWORD *)(v40 + 16) = *(_DWORD *)(v41 + 16);
    v43 = *(_QWORD *)(v41 + 32);
    *(_QWORD *)(v40 + 24) = v42;
    *(_QWORD *)(v40 + 32) = v43;
    v44 = v42;
    swift_retain();
  }
  else
  {
    v45 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v45;
    *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
  }
  v46 = a3[16];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(void **)(v48 + 24);
  if (v49)
  {
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_DWORD *)(v47 + 16) = *(_DWORD *)(v48 + 16);
    v50 = *(_QWORD *)(v48 + 32);
    *(_QWORD *)(v47 + 24) = v49;
    *(_QWORD *)(v47 + 32) = v50;
    v51 = v49;
    swift_retain();
  }
  else
  {
    v52 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v52;
    *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
  }
  v53 = a3[17];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = *(void **)(v55 + 24);
  if (v56)
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *(_DWORD *)(v54 + 16) = *(_DWORD *)(v55 + 16);
    v57 = *(_QWORD *)(v55 + 32);
    *(_QWORD *)(v54 + 24) = v56;
    *(_QWORD *)(v54 + 32) = v57;
    v58 = v56;
    swift_retain();
  }
  else
  {
    v59 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *(_OWORD *)(v54 + 16) = v59;
    *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
  }
  v60 = a3[18];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(void **)(a2 + v60 + 24);
  if (v63)
  {
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_DWORD *)(v61 + 16) = *(_DWORD *)(v62 + 16);
    v64 = *(_QWORD *)(v62 + 32);
    *(_QWORD *)(v61 + 24) = v63;
    *(_QWORD *)(v61 + 32) = v64;
    v65 = v63;
    swift_retain();
  }
  else
  {
    v66 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v66;
    *(_QWORD *)(v61 + 32) = *(_QWORD *)(v62 + 32);
  }
  v67 = (_OWORD *)(v61 + 40);
  v68 = (_OWORD *)(v62 + 40);
  v69 = *(void **)(v62 + 64);
  if (v69)
  {
    *v67 = *v68;
    *(_DWORD *)(v61 + 56) = *(_DWORD *)(v62 + 56);
    v70 = *(_QWORD *)(v62 + 72);
    *(_QWORD *)(v61 + 64) = v69;
    *(_QWORD *)(v61 + 72) = v70;
    v71 = v69;
    swift_retain();
  }
  else
  {
    v72 = *(_OWORD *)(v62 + 56);
    *v67 = *v68;
    *(_OWORD *)(v61 + 56) = v72;
    *(_QWORD *)(v61 + 72) = *(_QWORD *)(v62 + 72);
  }
  v73 = a3[19];
  v74 = a3[20];
  v75 = *(_QWORD *)(a2 + v73);
  *(_BYTE *)(v61 + 80) = *(_BYTE *)(v62 + 80);
  *(_QWORD *)(a1 + v73) = v75;
  v76 = a1 + v74;
  v77 = a2 + v74;
  v78 = *(void **)(a2 + v74 + 24);
  swift_bridgeObjectRetain();
  if (v78)
  {
    *(_OWORD *)v76 = *(_OWORD *)v77;
    *(_DWORD *)(v76 + 16) = *(_DWORD *)(v77 + 16);
    v79 = *(_QWORD *)(v77 + 32);
    v80 = *(_QWORD *)(v77 + 40);
    *(_QWORD *)(v76 + 24) = v78;
    *(_QWORD *)(v76 + 32) = v79;
    v81 = *(_QWORD *)(v77 + 48);
    v82 = *(_QWORD *)(v77 + 56);
    *(_QWORD *)(v76 + 40) = v80;
    *(_QWORD *)(v76 + 48) = v81;
    *(_QWORD *)(v76 + 56) = v82;
    v83 = v78;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v84 = *(_OWORD *)(v77 + 16);
    *(_OWORD *)v76 = *(_OWORD *)v77;
    *(_OWORD *)(v76 + 16) = v84;
    v85 = *(_OWORD *)(v77 + 48);
    *(_OWORD *)(v76 + 32) = *(_OWORD *)(v77 + 32);
    *(_OWORD *)(v76 + 48) = v85;
  }
  v86 = a3[21];
  v87 = a3[22];
  v88 = (_QWORD *)(a1 + v86);
  v89 = (_QWORD *)(a2 + v86);
  v90 = v89[1];
  *v88 = *v89;
  v88[1] = v90;
  v88[2] = v89[2];
  *(_QWORD *)(a1 + v87) = *(_QWORD *)(a2 + v87);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249E01B34(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  __int128 v57;
  void *v58;
  id v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  __int128 v70;
  void *v71;
  id v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 *v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  __int128 v83;
  void *v84;
  id v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  __int128 *v91;
  void *v92;
  uint64_t v93;
  void *v94;
  id v95;
  __int128 v96;
  void *v97;
  id v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  __int128 *v104;
  void *v105;
  uint64_t v106;
  void *v107;
  id v108;
  __int128 v109;
  void *v110;
  id v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  _OWORD *v115;
  _OWORD *v116;
  void *v117;
  uint64_t v118;
  void *v119;
  id v120;
  __int128 v121;
  void *v122;
  id v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  __int128 *v129;
  void *v130;
  uint64_t v131;
  void *v132;
  id v133;
  __int128 v134;
  void *v135;
  id v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v146;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  *(_BYTE *)(a1 + 62) = *(_BYTE *)(a2 + 62);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = a3[8];
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v9, v10, v16);
      v17(&v9[v11[5]], &v10[v11[5]], v16);
      v18 = v11[6];
      v19 = (uint64_t *)&v9[v18];
      v20 = (uint64_t *)&v10[v18];
      if (*(_QWORD *)&v10[v18 + 16])
      {
        v21 = v20[1];
        v146 = *v20;
        sub_249DC3928(*v20, v21);
        *v19 = v146;
        v19[1] = v21;
        v19[2] = v20[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v34 = *(_OWORD *)v20;
        v19[2] = v20[2];
        *(_OWORD *)v19 = v34;
      }
      v9[v11[7]] = v10[v11[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_18;
    }
LABEL_7:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_18;
  }
  if (v15)
  {
    sub_249DC05A8((uint64_t)v9, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_7;
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 24);
  v24(v9, v10, v23);
  v24(&v9[v11[5]], &v10[v11[5]], v23);
  v25 = v11[6];
  v26 = (uint64_t *)&v9[v25];
  v27 = (uint64_t *)&v10[v25];
  v28 = *(_QWORD *)&v9[v25 + 16];
  v29 = *(_QWORD *)&v10[v25 + 16];
  if (v28)
  {
    if (v29)
    {
      v30 = *v27;
      v31 = v27[1];
      sub_249DC3928(*v27, v31);
      v32 = *v26;
      v33 = v26[1];
      *v26 = v30;
      v26[1] = v31;
      sub_249DC3C24(v32, v33);
      v26[2] = v27[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02528((uint64_t)v26);
      v37 = v27[2];
      *(_OWORD *)v26 = *(_OWORD *)v27;
      v26[2] = v37;
    }
  }
  else if (v29)
  {
    v35 = *v27;
    v36 = v27[1];
    sub_249DC3928(*v27, v36);
    *v26 = v35;
    v26[1] = v36;
    v26[2] = v27[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v38 = *(_OWORD *)v27;
    v26[2] = v27[2];
    *(_OWORD *)v26 = v38;
  }
  v9[v11[7]] = v10[v11[7]];
LABEL_18:
  v39 = a3[9];
  v40 = a1 + v39;
  v41 = (int *)(a2 + v39);
  v42 = *v41;
  *(_BYTE *)(v40 + 4) = *((_BYTE *)v41 + 4);
  *(_DWORD *)v40 = v42;
  v43 = a3[10];
  v44 = a1 + v43;
  v45 = (int *)(a2 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 4) = *((_BYTE *)v45 + 4);
  *(_DWORD *)v44 = v46;
  v47 = a3[11];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_BYTE *)v48 = *(_BYTE *)v49;
  *(_BYTE *)(v48 + 1) = *(_BYTE *)(v49 + 1);
  *(_BYTE *)(v48 + 2) = *(_BYTE *)(v49 + 2);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
  *(_QWORD *)(v48 + 16) = *(_QWORD *)(v49 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = a3[14];
  v51 = a1 + v50;
  v52 = (__int128 *)(a2 + v50);
  v53 = *(void **)(a1 + v50 + 24);
  v54 = *(_QWORD *)(a2 + v50 + 24);
  if (v53)
  {
    if (v54)
    {
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *(_QWORD *)(v51 + 8) = *((_QWORD *)v52 + 1);
      *(_DWORD *)(v51 + 16) = *((_DWORD *)v52 + 4);
      v55 = (void *)*((_QWORD *)v52 + 3);
      *(_QWORD *)(v51 + 24) = v55;
      v56 = v55;

      *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v51);
      v60 = *((_QWORD *)v52 + 4);
      v61 = v52[1];
      *(_OWORD *)v51 = *v52;
      *(_OWORD *)(v51 + 16) = v61;
      *(_QWORD *)(v51 + 32) = v60;
    }
  }
  else
  {
    v57 = *v52;
    if (v54)
    {
      *(_DWORD *)(v51 + 16) = *((_DWORD *)v52 + 4);
      *(_OWORD *)v51 = v57;
      v58 = (void *)*((_QWORD *)v52 + 3);
      *(_QWORD *)(v51 + 24) = v58;
      *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
      v59 = v58;
      swift_retain();
    }
    else
    {
      v62 = v52[1];
      *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
      *(_OWORD *)v51 = v57;
      *(_OWORD *)(v51 + 16) = v62;
    }
  }
  v63 = a3[15];
  v64 = a1 + v63;
  v65 = (__int128 *)(a2 + v63);
  v66 = *(void **)(a1 + v63 + 24);
  v67 = *(_QWORD *)(a2 + v63 + 24);
  if (v66)
  {
    if (v67)
    {
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *(_QWORD *)(v64 + 8) = *((_QWORD *)v65 + 1);
      *(_DWORD *)(v64 + 16) = *((_DWORD *)v65 + 4);
      v68 = (void *)*((_QWORD *)v65 + 3);
      *(_QWORD *)(v64 + 24) = v68;
      v69 = v68;

      *(_QWORD *)(v64 + 32) = *((_QWORD *)v65 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v64);
      v73 = *((_QWORD *)v65 + 4);
      v74 = v65[1];
      *(_OWORD *)v64 = *v65;
      *(_OWORD *)(v64 + 16) = v74;
      *(_QWORD *)(v64 + 32) = v73;
    }
  }
  else
  {
    v70 = *v65;
    if (v67)
    {
      *(_DWORD *)(v64 + 16) = *((_DWORD *)v65 + 4);
      *(_OWORD *)v64 = v70;
      v71 = (void *)*((_QWORD *)v65 + 3);
      *(_QWORD *)(v64 + 24) = v71;
      *(_QWORD *)(v64 + 32) = *((_QWORD *)v65 + 4);
      v72 = v71;
      swift_retain();
    }
    else
    {
      v75 = v65[1];
      *(_QWORD *)(v64 + 32) = *((_QWORD *)v65 + 4);
      *(_OWORD *)v64 = v70;
      *(_OWORD *)(v64 + 16) = v75;
    }
  }
  v76 = a3[16];
  v77 = a1 + v76;
  v78 = (__int128 *)(a2 + v76);
  v79 = *(void **)(a1 + v76 + 24);
  v80 = *(_QWORD *)(a2 + v76 + 24);
  if (v79)
  {
    if (v80)
    {
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *(_QWORD *)(v77 + 8) = *((_QWORD *)v78 + 1);
      *(_DWORD *)(v77 + 16) = *((_DWORD *)v78 + 4);
      v81 = (void *)*((_QWORD *)v78 + 3);
      *(_QWORD *)(v77 + 24) = v81;
      v82 = v81;

      *(_QWORD *)(v77 + 32) = *((_QWORD *)v78 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v77);
      v86 = *((_QWORD *)v78 + 4);
      v87 = v78[1];
      *(_OWORD *)v77 = *v78;
      *(_OWORD *)(v77 + 16) = v87;
      *(_QWORD *)(v77 + 32) = v86;
    }
  }
  else
  {
    v83 = *v78;
    if (v80)
    {
      *(_DWORD *)(v77 + 16) = *((_DWORD *)v78 + 4);
      *(_OWORD *)v77 = v83;
      v84 = (void *)*((_QWORD *)v78 + 3);
      *(_QWORD *)(v77 + 24) = v84;
      *(_QWORD *)(v77 + 32) = *((_QWORD *)v78 + 4);
      v85 = v84;
      swift_retain();
    }
    else
    {
      v88 = v78[1];
      *(_QWORD *)(v77 + 32) = *((_QWORD *)v78 + 4);
      *(_OWORD *)v77 = v83;
      *(_OWORD *)(v77 + 16) = v88;
    }
  }
  v89 = a3[17];
  v90 = a1 + v89;
  v91 = (__int128 *)(a2 + v89);
  v92 = *(void **)(a1 + v89 + 24);
  v93 = *(_QWORD *)(a2 + v89 + 24);
  if (v92)
  {
    if (v93)
    {
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *(_QWORD *)(v90 + 8) = *((_QWORD *)v91 + 1);
      *(_DWORD *)(v90 + 16) = *((_DWORD *)v91 + 4);
      v94 = (void *)*((_QWORD *)v91 + 3);
      *(_QWORD *)(v90 + 24) = v94;
      v95 = v94;

      *(_QWORD *)(v90 + 32) = *((_QWORD *)v91 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v90);
      v99 = *((_QWORD *)v91 + 4);
      v100 = v91[1];
      *(_OWORD *)v90 = *v91;
      *(_OWORD *)(v90 + 16) = v100;
      *(_QWORD *)(v90 + 32) = v99;
    }
  }
  else
  {
    v96 = *v91;
    if (v93)
    {
      *(_DWORD *)(v90 + 16) = *((_DWORD *)v91 + 4);
      *(_OWORD *)v90 = v96;
      v97 = (void *)*((_QWORD *)v91 + 3);
      *(_QWORD *)(v90 + 24) = v97;
      *(_QWORD *)(v90 + 32) = *((_QWORD *)v91 + 4);
      v98 = v97;
      swift_retain();
    }
    else
    {
      v101 = v91[1];
      *(_QWORD *)(v90 + 32) = *((_QWORD *)v91 + 4);
      *(_OWORD *)v90 = v96;
      *(_OWORD *)(v90 + 16) = v101;
    }
  }
  v102 = a3[18];
  v103 = a1 + v102;
  v104 = (__int128 *)(a2 + v102);
  v105 = *(void **)(a1 + v102 + 24);
  v106 = *(_QWORD *)(a2 + v102 + 24);
  if (v105)
  {
    if (v106)
    {
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *(_QWORD *)(v103 + 8) = *((_QWORD *)v104 + 1);
      *(_DWORD *)(v103 + 16) = *((_DWORD *)v104 + 4);
      v107 = (void *)*((_QWORD *)v104 + 3);
      *(_QWORD *)(v103 + 24) = v107;
      v108 = v107;

      *(_QWORD *)(v103 + 32) = *((_QWORD *)v104 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v103);
      v112 = *((_QWORD *)v104 + 4);
      v113 = v104[1];
      *(_OWORD *)v103 = *v104;
      *(_OWORD *)(v103 + 16) = v113;
      *(_QWORD *)(v103 + 32) = v112;
    }
  }
  else
  {
    v109 = *v104;
    if (v106)
    {
      *(_DWORD *)(v103 + 16) = *((_DWORD *)v104 + 4);
      *(_OWORD *)v103 = v109;
      v110 = (void *)*((_QWORD *)v104 + 3);
      *(_QWORD *)(v103 + 24) = v110;
      *(_QWORD *)(v103 + 32) = *((_QWORD *)v104 + 4);
      v111 = v110;
      swift_retain();
    }
    else
    {
      v114 = v104[1];
      *(_QWORD *)(v103 + 32) = *((_QWORD *)v104 + 4);
      *(_OWORD *)v103 = v109;
      *(_OWORD *)(v103 + 16) = v114;
    }
  }
  v115 = (_OWORD *)(v103 + 40);
  v116 = (__int128 *)((char *)v104 + 40);
  v117 = *(void **)(v103 + 64);
  v118 = *((_QWORD *)v104 + 8);
  if (v117)
  {
    if (v118)
    {
      *(_QWORD *)(v103 + 40) = *((_QWORD *)v104 + 5);
      *(_QWORD *)(v103 + 48) = *((_QWORD *)v104 + 6);
      *(_DWORD *)(v103 + 56) = *((_DWORD *)v104 + 14);
      v119 = (void *)*((_QWORD *)v104 + 8);
      *(_QWORD *)(v103 + 64) = v119;
      v120 = v119;

      *(_QWORD *)(v103 + 72) = *((_QWORD *)v104 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(v103 + 40);
      v124 = *((_QWORD *)v104 + 9);
      v125 = *(__int128 *)((char *)v104 + 56);
      *v115 = *v116;
      *(_OWORD *)(v103 + 56) = v125;
      *(_QWORD *)(v103 + 72) = v124;
    }
  }
  else
  {
    v121 = *v116;
    if (v118)
    {
      *(_DWORD *)(v103 + 56) = *((_DWORD *)v104 + 14);
      *v115 = v121;
      v122 = (void *)*((_QWORD *)v104 + 8);
      *(_QWORD *)(v103 + 64) = v122;
      *(_QWORD *)(v103 + 72) = *((_QWORD *)v104 + 9);
      v123 = v122;
      swift_retain();
    }
    else
    {
      v126 = *(__int128 *)((char *)v104 + 56);
      *(_QWORD *)(v103 + 72) = *((_QWORD *)v104 + 9);
      *v115 = v121;
      *(_OWORD *)(v103 + 56) = v126;
    }
  }
  *(_BYTE *)(v103 + 80) = *((_BYTE *)v104 + 80);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v127 = a3[20];
  v128 = a1 + v127;
  v129 = (__int128 *)(a2 + v127);
  v130 = *(void **)(a1 + v127 + 24);
  v131 = *(_QWORD *)(a2 + v127 + 24);
  if (v130)
  {
    if (v131)
    {
      *(_QWORD *)v128 = *(_QWORD *)v129;
      *(_QWORD *)(v128 + 8) = *((_QWORD *)v129 + 1);
      *(_DWORD *)(v128 + 16) = *((_DWORD *)v129 + 4);
      v132 = (void *)*((_QWORD *)v129 + 3);
      *(_QWORD *)(v128 + 24) = v132;
      v133 = v132;

      *(_QWORD *)(v128 + 32) = *((_QWORD *)v129 + 4);
      swift_retain();
      swift_release();
      *(_QWORD *)(v128 + 40) = *((_QWORD *)v129 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v128 + 48) = *((_QWORD *)v129 + 6);
      *(_QWORD *)(v128 + 56) = *((_QWORD *)v129 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_249E02590(v128);
      v137 = v129[3];
      v139 = *v129;
      v138 = v129[1];
      *(_OWORD *)(v128 + 32) = v129[2];
      *(_OWORD *)(v128 + 48) = v137;
      *(_OWORD *)v128 = v139;
      *(_OWORD *)(v128 + 16) = v138;
    }
  }
  else
  {
    v134 = *v129;
    if (v131)
    {
      *(_DWORD *)(v128 + 16) = *((_DWORD *)v129 + 4);
      *(_OWORD *)v128 = v134;
      v135 = (void *)*((_QWORD *)v129 + 3);
      *(_QWORD *)(v128 + 24) = v135;
      *(_QWORD *)(v128 + 32) = *((_QWORD *)v129 + 4);
      *(_QWORD *)(v128 + 40) = *((_QWORD *)v129 + 5);
      *(_QWORD *)(v128 + 48) = *((_QWORD *)v129 + 6);
      *(_QWORD *)(v128 + 56) = *((_QWORD *)v129 + 7);
      v136 = v135;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v140 = v129[1];
      v141 = v129[3];
      *(_OWORD *)(v128 + 32) = v129[2];
      *(_OWORD *)(v128 + 48) = v141;
      *(_OWORD *)v128 = v134;
      *(_OWORD *)(v128 + 16) = v140;
    }
  }
  v142 = a3[21];
  v143 = (_QWORD *)(a1 + v142);
  v144 = a2 + v142;
  *v143 = *(_QWORD *)(a2 + v142);
  v143[1] = *(_QWORD *)(a2 + v142 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v143[2] = *(_QWORD *)(v144 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  return a1;
}

uint64_t sub_249E02528(uint64_t a1)
{
  destroy for PipelineConfiguration.InputConditioning.Float16Data(a1);
  return a1;
}

uint64_t sub_249E0255C(uint64_t a1)
{
  destroy for ResolvedImage(a1);
  return a1;
}

uint64_t sub_249E02590(uint64_t a1)
{
  destroy for GenerationRecipe.ConditioningImageInfo(a1);
  return a1;
}

uint64_t sub_249E025BC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 55) = *(_QWORD *)(a2 + 55);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = a3[8];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 24) = v6;
  v11 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v9, v10, v14);
    v15(&v9[v11[5]], &v10[v11[5]], v14);
    v16 = v11[6];
    v17 = &v9[v16];
    v18 = &v10[v16];
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    v9[v11[7]] = v10[v11[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v29 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  v33 = a3[15];
  v34 = a3[16];
  v35 = a1 + v33;
  v36 = a2 + v33;
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  v38 = a1 + v34;
  v39 = a2 + v34;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  v41 = a3[17];
  v42 = a3[18];
  v43 = a1 + v41;
  v44 = (__int128 *)(a2 + v41);
  v45 = *v44;
  v46 = v44[1];
  *(_QWORD *)(v43 + 32) = *((_QWORD *)v44 + 4);
  *(_OWORD *)v43 = v45;
  *(_OWORD *)(v43 + 16) = v46;
  v47 = a1 + v42;
  v48 = a2 + v42;
  *(_BYTE *)(v47 + 80) = *(_BYTE *)(v48 + 80);
  v49 = *(_OWORD *)(v48 + 64);
  v50 = *(_OWORD *)(v48 + 32);
  *(_OWORD *)(v47 + 48) = *(_OWORD *)(v48 + 48);
  *(_OWORD *)(v47 + 64) = v49;
  v51 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v51;
  *(_OWORD *)(v47 + 32) = v50;
  v52 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  v53 = (_OWORD *)(a1 + v52);
  v54 = (_OWORD *)(a2 + v52);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = v54[3];
  v53[2] = v54[2];
  v53[3] = v56;
  v57 = a3[21];
  v58 = a3[22];
  v59 = a1 + v57;
  v60 = a2 + v57;
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_QWORD *)(v59 + 16) = *(_QWORD *)(v60 + 16);
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  return a1;
}

uint64_t sub_249E02858(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  __int128 v61;
  void *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  void (*v79)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  *(_BYTE *)(a1 + 62) = *(_BYTE *)(a2 + 62);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = a3[8];
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
      v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v8, v9, v15);
      v16(&v8[v10[5]], &v9[v10[5]], v15);
      v17 = v10[6];
      v18 = &v8[v17];
      v19 = &v9[v17];
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
      v8[v10[7]] = v9[v10[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_249DC05A8((uint64_t)v8, type metadata accessor for PipelineConfiguration.InputConditioning);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v79 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v78 - 8) + 40);
  v79(v8, v9, v78);
  v79(&v8[v10[5]], &v9[v10[5]], v78);
  v80 = v10[6];
  v81 = (uint64_t)&v8[v80];
  v82 = &v9[v80];
  if (!*(_QWORD *)&v8[v80 + 16])
    goto LABEL_47;
  if (!*((_QWORD *)v82 + 2))
  {
    sub_249E02528(v81);
LABEL_47:
    *(_OWORD *)v81 = *(_OWORD *)v82;
    *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);
    goto LABEL_48;
  }
  v83 = *(_QWORD *)v81;
  v84 = *(_QWORD *)(v81 + 8);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  sub_249DC3C24(v83, v84);
  *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);
  swift_bridgeObjectRelease();
LABEL_48:
  v8[v10[7]] = v9[v10[7]];
LABEL_7:
  v21 = a3[9];
  v22 = a3[10];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_WORD *)v28 = *(_WORD *)v29;
  *(_BYTE *)(v28 + 2) = *(_BYTE *)(v29 + 2);
  v31 = *(_QWORD *)(v29 + 8);
  v30 = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 8) = v31;
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  v32 = a3[14];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(void **)(a1 + v32 + 24);
  if (v35)
  {
    v36 = *(_QWORD *)(v34 + 24);
    if (v36)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *(_DWORD *)(v33 + 16) = *(_DWORD *)(v34 + 16);
      *(_QWORD *)(v33 + 24) = v36;

      *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
      swift_release();
      goto LABEL_12;
    }
    sub_249E0255C(v33);
  }
  v37 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v37;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
LABEL_12:
  v38 = a3[15];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(void **)(a1 + v38 + 24);
  if (v41)
  {
    v42 = *(_QWORD *)(v40 + 24);
    if (v42)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *(_DWORD *)(v39 + 16) = *(_DWORD *)(v40 + 16);
      *(_QWORD *)(v39 + 24) = v42;

      *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
      swift_release();
      goto LABEL_17;
    }
    sub_249E0255C(v39);
  }
  v43 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v43;
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
LABEL_17:
  v44 = a3[16];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(void **)(a1 + v44 + 24);
  if (v47)
  {
    v48 = *(_QWORD *)(v46 + 24);
    if (v48)
    {
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *(_DWORD *)(v45 + 16) = *(_DWORD *)(v46 + 16);
      *(_QWORD *)(v45 + 24) = v48;

      *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
      swift_release();
      goto LABEL_22;
    }
    sub_249E0255C(v45);
  }
  v49 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v49;
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
LABEL_22:
  v50 = a3[17];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(void **)(a1 + v50 + 24);
  if (v53)
  {
    v54 = *(_QWORD *)(v52 + 24);
    if (v54)
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *(_DWORD *)(v51 + 16) = *(_DWORD *)(v52 + 16);
      *(_QWORD *)(v51 + 24) = v54;

      *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
      swift_release();
      goto LABEL_27;
    }
    sub_249E0255C(v51);
  }
  v55 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v55;
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
LABEL_27:
  v56 = a3[18];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = *(void **)(a1 + v56 + 24);
  if (v59)
  {
    v60 = *(_QWORD *)(v58 + 24);
    if (v60)
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      *(_DWORD *)(v57 + 16) = *(_DWORD *)(v58 + 16);
      *(_QWORD *)(v57 + 24) = v60;

      *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
      swift_release();
      goto LABEL_32;
    }
    sub_249E0255C(v57);
  }
  v61 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v61;
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
LABEL_32:
  v62 = *(void **)(v57 + 64);
  if (v62)
  {
    v63 = *(_QWORD *)(v58 + 64);
    if (v63)
    {
      *(_OWORD *)(v57 + 40) = *(_OWORD *)(v58 + 40);
      *(_DWORD *)(v57 + 56) = *(_DWORD *)(v58 + 56);
      *(_QWORD *)(v57 + 64) = v63;

      *(_QWORD *)(v57 + 72) = *(_QWORD *)(v58 + 72);
      swift_release();
      goto LABEL_37;
    }
    sub_249E0255C(v57 + 40);
  }
  v64 = *(_OWORD *)(v58 + 56);
  *(_OWORD *)(v57 + 40) = *(_OWORD *)(v58 + 40);
  *(_OWORD *)(v57 + 56) = v64;
  *(_QWORD *)(v57 + 72) = *(_QWORD *)(v58 + 72);
LABEL_37:
  *(_BYTE *)(v57 + 80) = *(_BYTE *)(v58 + 80);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  v65 = a3[20];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = *(void **)(a1 + v65 + 24);
  if (!v68)
  {
LABEL_41:
    v71 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v71;
    v72 = *(_OWORD *)(v67 + 48);
    *(_OWORD *)(v66 + 32) = *(_OWORD *)(v67 + 32);
    *(_OWORD *)(v66 + 48) = v72;
    goto LABEL_42;
  }
  v69 = *(_QWORD *)(v67 + 24);
  if (!v69)
  {
    sub_249E02590(v66);
    goto LABEL_41;
  }
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *(_DWORD *)(v66 + 16) = *(_DWORD *)(v67 + 16);
  *(_QWORD *)(v66 + 24) = v69;

  *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
  swift_release();
  *(_QWORD *)(v66 + 40) = *(_QWORD *)(v67 + 40);
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v67 + 56);
  *(_QWORD *)(v66 + 48) = *(_QWORD *)(v67 + 48);
  *(_QWORD *)(v66 + 56) = v70;
  swift_bridgeObjectRelease();
LABEL_42:
  v73 = a3[21];
  v74 = (_QWORD *)(a1 + v73);
  v75 = a2 + v73;
  v76 = *(_QWORD *)(a2 + v73 + 8);
  *v74 = *(_QWORD *)(a2 + v73);
  v74[1] = v76;
  swift_bridgeObjectRelease();
  v74[2] = *(_QWORD *)(v75 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  return a1;
}

uint64_t sub_249E02E78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E02E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_249E02F04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E02F10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for GenerationRecipe(uint64_t a1)
{
  return sub_249DC74D0(a1, (uint64_t *)&unk_2578D8DA8);
}

void sub_249E02F9C()
{
  unint64_t v0;

  sub_249E03084();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249E03084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578D8DB8[0])
  {
    type metadata accessor for PipelineConfiguration.InputConditioning(255);
    v0 = sub_249F1F970();
    if (!v1)
      atomic_store(v0, qword_2578D8DB8);
  }
}

uint64_t sub_249E030D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  void (*v55)(uint64_t *, _QWORD);
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[12];
  int v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v93 = a1;
  v86 = sub_249F1E650();
  v84 = *(_QWORD *)(v86 - 8);
  v2 = MEMORY[0x24BDAC7A8](v86);
  v82 = &v79[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v83 = &v79[-v4];
  v5 = sub_249F1E6B0();
  MEMORY[0x24BDAC7A8](v5);
  v85 = &v79[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v88 = sub_249F1E620();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v89 = &v79[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v94 = sub_249F1E584();
  v90 = *(_QWORD *)(v94 - 8);
  v8 = MEMORY[0x24BDAC7A8](v94);
  v81 = &v79[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v92 = &v79[-v10];
  v11 = type metadata accessor for ResolvedTextPrompt(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v79[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for AugmentedPrompt();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v91 = &v79[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v96 = &v79[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v22 = &v79[-v21];
  v95 = type metadata accessor for GenerationRecipe(0);
  v23 = *(int *)(v95 + 48);
  v97 = v1;
  v24 = *(_QWORD *)(v1 + v23);
  v25 = *(_QWORD *)(v24 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  if (v25)
  {
    v100 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB67B4(0, v25, 0);
    v27 = *(unsigned __int8 *)(v12 + 80);
    v98 = v24;
    v28 = v24 + ((v27 + 32) & ~v27);
    v29 = *(_QWORD *)(v12 + 72);
    v26 = v100;
    v103 = v29;
    do
    {
      sub_249DC091C(v28, (uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      sub_249DC091C((uint64_t)v14, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      sub_249DC05A8((uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB67B4(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v29 = v103;
        v26 = v100;
      }
      v31 = *(_QWORD *)(v26 + 16);
      v30 = *(_QWORD *)(v26 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_249DB67B4(v30 > 1, v31 + 1, 1);
        v29 = v103;
        v26 = v100;
      }
      *(_QWORD *)(v26 + 16) = v31 + 1;
      sub_249D9E308((uint64_t)v22, v26+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      v28 += v29;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  v32 = v97;
  v34 = *(_QWORD *)(v97 + 8);
  v33 = *(_QWORD *)(v97 + 16);
  v35 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = qword_2578FF318;
  v37 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v37)
  {
    v38 = swift_bridgeObjectRetain();
    v39 = 0;
    while (1)
    {
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v36 + 8 * v39 + 32) + 88))(v38) == v34 && v40 == v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
      v42 = sub_249F1FE2C();
      v38 = swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        break;
      if (v37 == ++v39)
      {
        swift_bridgeObjectRelease();
        v32 = v97;
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    v43 = v96;
    v32 = v97;
  }
  else
  {
LABEL_20:
    v43 = v96;
    swift_bridgeObjectRelease();
    type metadata accessor for ImageGenerator();
  }
  v45 = v94;
  v44 = v95;
  v46 = *(_QWORD *)(v32 + 64);
  if (*(_QWORD *)(v46 + 16))
    v47 = *(unsigned __int8 *)(v46 + 32);
  else
    v47 = 5;
  sub_249EA4ABC(v26);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v32 + *(int *)(v44 + 64) + 24))
    return sub_249D9E308((uint64_t)v43, v93, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v80 = v47;
  sub_249F1E56C();
  v49 = sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  v50 = sub_249F1F73C();
  v51 = MEMORY[0x24BEE4AF8];
  if (v50)
  {
    v52 = v50;
    *(_QWORD *)&v99 = MEMORY[0x24BEE4AF8];
    sub_249DB673C(0, v50 & ~(v50 >> 63), 0);
    v53 = v99;
    v54 = v89;
    sub_249F1F730();
    if (v52 < 0)
    {
      __break(1u);
      JUMPOUT(0x249E03FFCLL);
    }
    v98 = v49;
    do
    {
      v55 = (void (*)(uint64_t *, _QWORD))sub_249F1F784();
      v57 = v56[1];
      v103 = *v56;
      swift_bridgeObjectRetain();
      v55(&v100, 0);
      *(_QWORD *)&v99 = v53;
      v59 = *(_QWORD *)(v53 + 16);
      v58 = *(_QWORD *)(v53 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_249DB673C(v58 > 1, v59 + 1, 1);
        v53 = v99;
      }
      *(_QWORD *)(v53 + 16) = v59 + 1;
      v60 = v53 + 16 * v59;
      *(_QWORD *)(v60 + 32) = v103;
      *(_QWORD *)(v60 + 40) = v57;
      sub_249F1F760();
      --v52;
    }
    while (v52);
    (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v54, v88);
    v51 = v99;
    v43 = v96;
    v32 = v97;
  }
  v61 = v80;
  (*(void (**)(_BYTE *, uint64_t))(v90 + 8))(v92, v45);
  v100 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
  v62 = sub_249F1F280();
  v64 = v63;
  swift_bridgeObjectRelease();
  v65 = v95;
  v66 = (_QWORD *)(v32 + *(int *)(v95 + 84));
  if (v62 == *v66 && v64 == v66[1])
  {
    swift_bridgeObjectRelease();
    v67 = (uint64_t)v91;
LABEL_40:
    v69 = sub_249E041BC();
    v103 = v69;
    if (v69)
    {
      sub_249E08364((uint64_t)v43, v67);
      sub_249DC05A8((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      sub_249D9E308(v67, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    }
    sub_249E092B0((uint64_t)&v100);
    if (v61 != 5)
    {
      v98 = v101;
      __asm { BR              X9 }
    }
    v43 = v96;
    v70 = v97;
    v71 = v103;
    sub_249E09B7C((uint64_t)v96, v100 | (BYTE1(v100) << 8) | (BYTE2(v100) << 16), v101, v102, 5, v103, v67);
    sub_249DC05A8((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    sub_249D9E308(v67, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    if ((unint64_t)(v71 - 1) >= 2)
    {
      v73 = (_QWORD *)(v70 + *(int *)(v65 + 80));
      if (v73[3])
      {
        v74 = v73[7];
        if (v74)
        {
          v100 = v73[6];
          v101 = v74;
          swift_bridgeObjectRetain();
          sub_249F1F460();
          sub_249F1E6A4();
          v75 = v82;
          sub_249F1E65C();
          v76 = v83;
          sub_249F1E5B4();
          v77 = v84;
          v78 = v86;
          (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v75, v86);
          sub_249DC05A8((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v77 + 32))(v43, v76, v78);
        }
      }
    }
    return sub_249D9E308((uint64_t)v43, v93, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  }
  v68 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  v67 = (uint64_t)v91;
  if ((v68 & 1) != 0)
    goto LABEL_40;
  sub_249E0B01C();
  swift_allocError();
  *v72 = 0xD000000000000068;
  v72[1] = 0x8000000249F35400;
  swift_willThrow();
  return sub_249DC05A8((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
}

unint64_t sub_249E04024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249DCC274(v1, (uint64_t)v4, &qword_2578D67E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_249DCC2FC((uint64_t)v4, &qword_2578D67E0);
    return 0;
  }
  else
  {
    sub_249D9E308((uint64_t)v4, (uint64_t)v8, type metadata accessor for PipelineConfiguration.InputConditioning);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_249F1FA84();
    swift_bridgeObjectRelease();
    v11 = 0xD00000000000001FLL;
    v12 = 0x8000000249F34810;
    sub_249F1F460();
    swift_bridgeObjectRelease();
    v9 = v11;
    sub_249DC05A8((uint64_t)v8, type metadata accessor for PipelineConfiguration.InputConditioning);
  }
  return v9;
}

uint64_t sub_249E041BC()
{
  uint64_t v0;
  uint64_t v3;
  _BYTE v5[8];
  uint64_t v6;

  if ((sub_249E04E6C() & 1) != 0)
    return 1;
  sub_249E092B0((uint64_t)v5);
  if (v5[0] == 5 && v5[1] == 3 && v5[2] == 10)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v3 = sub_249F1F424();
      v0 = 2;
      swift_bridgeObjectRelease_n();
      if (v3 > 0)
        return v0;
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  swift_bridgeObjectRelease();
  return 2;
}

uint64_t sub_249E0427C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for AugmentedPrompt();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9100);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ResolvedTextPrompt(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0CD2C();
  sub_249F1FFF4();
  if (!v2)
  {
    sub_249D9BBEC(&qword_2578D9108, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2AB34);
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_249D9E308(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    sub_249D9E308((uint64_t)v11, v13, type metadata accessor for ResolvedTextPrompt);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249E04448()
{
  return 0x65746E656D677561;
}

uint64_t sub_249E0446C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65746E656D677561 && a2 == 0xEF74706D6F725064)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249F1FE2C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249E04524()
{
  sub_249E0CD2C();
  return sub_249F20024();
}

uint64_t sub_249E0454C()
{
  sub_249E0CD2C();
  return sub_249F20030();
}

uint64_t sub_249E04574@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E0427C(a1, a2);
}

uint64_t sub_249E04588(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D90D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0CD2C();
  sub_249F20018();
  type metadata accessor for AugmentedPrompt();
  sub_249D9BBEC(&qword_2578D90E8, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2AB0C);
  sub_249F1FDCC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249E0469C(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[4];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9130);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0CDB4();
  sub_249F20018();
  *(double *)v15 = a2;
  *(double *)&v15[1] = a3;
  *(double *)&v15[2] = a4;
  *(double *)&v15[3] = a5;
  type metadata accessor for CGRect(0);
  sub_249D9BBEC(&qword_2578D9138, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
  sub_249F1FDCC();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_249E047D4()
{
  return 0xD000000000000012;
}

uint64_t sub_249E047F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E0C994(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249E04818()
{
  sub_249E0CDB4();
  return sub_249F20024();
}

uint64_t sub_249E04840()
{
  sub_249E0CDB4();
  return sub_249F20030();
}

void sub_249E04868(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_249E0CA18(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
  }
}

uint64_t sub_249E04894(_QWORD *a1)
{
  double *v1;

  return sub_249E0469C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_249E048B0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  char v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9000);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v7 = v2[1];
  v9 = *((_DWORD *)v2 + 4);
  v10 = v2[5];
  v14[1] = v2[6];
  v15 = v10;
  v14[0] = v2[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0BD68();
  sub_249F20018();
  v18 = v8;
  v19 = v7;
  v20 = v9;
  v21 = *(_OWORD *)(v2 + 3);
  v22 = 0;
  sub_249DDF890();
  v11 = v17;
  sub_249F1FDCC();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v4);
  v13 = v16;
  v18 = v15;
  v22 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8FE8);
  sub_249E0BDF0(&qword_2578D9008, &qword_2578D8FE8, (uint64_t (*)(void))sub_249E0BE54, MEMORY[0x24BEE12A0]);
  sub_249F1FDCC();
  LOBYTE(v18) = 2;
  sub_249F1FD48();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
}

void sub_249E04A8C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void *v29;
  uint64_t v30;
  int v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8FD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0BD68();
  sub_249F1FFF4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = 0;
    sub_249DDF84C();
    sub_249F1FD00();
    v24 = v26;
    v25 = a2;
    v23 = v27;
    v31 = v28;
    v10 = v29;
    v9 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8FE8);
    v32 = 1;
    sub_249E0BDF0(&qword_2578D8FF0, &qword_2578D8FE8, (uint64_t (*)(void))sub_249E0BDAC, MEMORY[0x24BEE12D0]);
    v11 = v10;
    swift_retain();
    sub_249F1FD00();
    v12 = v26;
    LOBYTE(v26) = 2;
    v22 = v12;
    swift_bridgeObjectRetain();
    v13 = sub_249F1FC7C();
    v15 = v14;
    v16 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = v11;

    v18 = v25;
    v20 = v22;
    v19 = v23;
    *v25 = v24;
    v18[1] = v19;
    *((_DWORD *)v18 + 4) = v31;
    v18[3] = v17;
    v18[4] = v9;
    v18[5] = v20;
    v18[6] = v16;
    v18[7] = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

  }
}

unint64_t sub_249E04D68()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000019;
  if (*v0 != 1)
    v1 = 0x7061436567616D69;
  if (*v0)
    return v1;
  else
    return 0xD000000000000017;
}

uint64_t sub_249E04DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E0CB78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E04DF4()
{
  sub_249E0BD68();
  return sub_249F20024();
}

uint64_t sub_249E04E1C()
{
  sub_249E0BD68();
  return sub_249F20030();
}

void sub_249E04E44(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_249E04A8C(a1, a2);
}

uint64_t sub_249E04E58(_QWORD *a1)
{
  return sub_249E048B0(a1);
}

uint64_t sub_249E04E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E90);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ResolvedTextPrompt(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v33 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for GenerationRecipe(0);
  sub_249DCC274(v0 + v15[8], (uint64_t)v10, &qword_2578D67E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_249DCC2FC((uint64_t)v10, &qword_2578D67E0);
  }
  else
  {
    sub_249D9E308((uint64_t)v10, (uint64_t)v14, type metadata accessor for PipelineConfiguration.InputConditioning);
    v16 = v14[*(int *)(v11 + 28)];
    sub_249DC05A8((uint64_t)v14, type metadata accessor for PipelineConfiguration.InputConditioning);
    if ((v16 & 1) != 0)
      return 1;
  }
  v17 = v0 + v15[20];
  if (*(_QWORD *)(v17 + 24) && *(_BYTE *)(v0 + 60) == 1 && *(_QWORD *)(*(_QWORD *)(v17 + 40) + 16))
    return 1;
  v19 = *(_QWORD *)(v0 + v15[12]);
  v40 = MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(v19 + 16);
  result = swift_bridgeObjectRetain();
  v37 = v19;
  if (v20)
  {
    v35 = v3;
    v21 = 0;
    v22 = (uint64_t)v34;
    v33 = v20;
    while (v21 < *(_QWORD *)(v19 + 16))
    {
      v23 = v38;
      v24 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      v25 = *(_QWORD *)(v38 + 72);
      v3 = v35;
      sub_249DC091C(v19 + v24 + v25 * v21, (uint64_t)v35, type metadata accessor for ResolvedTextPrompt);
      v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v27 = v39;
      v26(v3, 0, 1, v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v3, 1, v27) == 1)
        goto LABEL_22;
      sub_249D9E308((uint64_t)v3, v22, type metadata accessor for ResolvedTextPrompt);
      if (sub_249E570FC())
      {
        sub_249D9E308(v22, v36, type metadata accessor for ResolvedTextPrompt);
        v28 = v40;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = v37;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_249DB66F4(0, *(_QWORD *)(v28 + 16) + 1, 1);
          v28 = v40;
        }
        v31 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_249DB66F4(v30 > 1, v31 + 1, 1);
          v28 = v40;
        }
        *(_QWORD *)(v28 + 16) = v31 + 1;
        result = sub_249D9E308(v36, v28 + v24 + v31 * v25, type metadata accessor for ResolvedTextPrompt);
        v20 = v33;
        v22 = (uint64_t)v34;
      }
      else
      {
        result = sub_249DC05A8(v22, type metadata accessor for ResolvedTextPrompt);
        v19 = v37;
      }
      if (v20 == ++v21)
      {
        v3 = v35;
        v26(v35, 1, 1, v39);
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v3, 1, 1, v39);
LABEL_22:
    swift_bridgeObjectRelease();
    sub_249DCC2FC((uint64_t)v3, &qword_2578D8E90);
    v32 = *(_QWORD *)(v40 + 16);
    swift_release();
    return v32 != 0;
  }
  return result;
}

uint64_t sub_249E05248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v1 = sub_249F1E620();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v49 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)&v38 - v4;
  v5 = sub_249F1E584();
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AugmentedPrompt();
  MEMORY[0x24BDAC7A8](v7);
  v44 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E90);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for ResolvedTextPrompt(0);
  v12 = *(_QWORD *)(v52 - 8);
  v13 = MEMORY[0x24BDAC7A8](v52);
  v43 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - v15;
  v17 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for GenerationRecipe(0) + 48));
  v55 = MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(v17 + 16);
  result = swift_bridgeObjectRetain();
  v42 = v18;
  if (v18)
  {
    v20 = 0;
    v40 = v12;
    v41 = v11;
    v39 = v17;
    while (v20 < *(_QWORD *)(v17 + 16))
    {
      v21 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v22 = *(_QWORD *)(v12 + 72);
      sub_249DC091C(v17 + v21 + v22 * v20, (uint64_t)v11, type metadata accessor for ResolvedTextPrompt);
      v23 = v52;
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v38(v11, 0, 1, v52);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v23) == 1)
        goto LABEL_15;
      v53 = v22;
      v54 = v21;
      sub_249D9E308((uint64_t)v11, (uint64_t)v16, type metadata accessor for ResolvedTextPrompt);
      v24 = v44;
      sub_249DC091C((uint64_t)v16, v44, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      v25 = v45;
      sub_249F1E56C();
      v26 = sub_249F1E650();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
      sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
      v27 = (uint64_t)v16;
      v28 = v47;
      v29 = v48;
      sub_249F1F730();
      v30 = v49;
      sub_249F1F754();
      sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
      v31 = v51;
      LOBYTE(v24) = sub_249F1F298();
      v32 = *(void (**)(char *, uint64_t))(v50 + 8);
      v32(v30, v31);
      v32(v29, v31);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v28);
      if ((v24 & 1) != 0)
      {
        result = sub_249DC05A8(v27, type metadata accessor for ResolvedTextPrompt);
        v12 = v40;
        v11 = v41;
        v17 = v39;
        v16 = (char *)v27;
      }
      else
      {
        sub_249D9E308(v27, v43, type metadata accessor for ResolvedTextPrompt);
        v33 = v55;
        v16 = (char *)v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249DB66F4(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v55;
        }
        v12 = v40;
        v11 = v41;
        v17 = v39;
        v34 = v54;
        v36 = *(_QWORD *)(v33 + 16);
        v35 = *(_QWORD *)(v33 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_249DB66F4(v35 > 1, v36 + 1, 1);
          v33 = v55;
        }
        *(_QWORD *)(v33 + 16) = v36 + 1;
        result = sub_249D9E308(v43, v33 + v34 + v36 * v53, type metadata accessor for ResolvedTextPrompt);
      }
      if (v42 == ++v20)
      {
        v38(v11, 1, 1, v52);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v52);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_249DCC2FC((uint64_t)v11, &qword_2578D8E90);
    v37 = *(_QWORD *)(v55 + 16);
    swift_release();
    return v37 == 0;
  }
  return result;
}

uint64_t sub_249E056CC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;

  sub_249F1FA84();
  sub_249F1F460();
  if ((*(_BYTE *)(v0 + 80) & 1) == 0)
    sub_249F1F3AC();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E05C74(*(_QWORD *)(v0 + 64));
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v1 = (int *)type metadata accessor for GenerationRecipe(0);
  sub_249DE0070();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E05EE8(*(_QWORD *)(v0 + v1[12]));
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v2 = v0 + v1[14];
  if (*(_QWORD *)(v2 + 24))
  {
    v3 = *(_DWORD *)(v2 + 16);
    sub_249F1FE08();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249E72248(v3);
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E04024();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v4 = v0 + v1[17];
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_DWORD *)(v4 + 16);
    sub_249F1FE08();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249E72248(v5);
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v6 = v0 + v1[15];
  if (*(_QWORD *)(v6 + 24))
  {
    v7 = *(_DWORD *)(v6 + 16);
    sub_249F1FE08();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249E72248(v7);
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  v8 = v0 + v1[16];
  if (*(_QWORD *)(v8 + 24))
  {
    v9 = *(_DWORD *)(v8 + 16);
    sub_249F1FE08();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249E72248(v9);
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249E06184();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_249E05C74(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_249DB673C(0, v1, 0);
    if (qword_2578D5D60 != -1)
      swift_once();
    __asm { BR              X10 }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
  sub_249F1F280();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_249E05EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v17 = sub_249F1E584();
  MEMORY[0x24BDAC7A8](v17);
  v2 = type metadata accessor for ResolvedTextPrompt(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_249DB673C(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v16 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_249DC091C(v8, (uint64_t)v5, type metadata accessor for ResolvedTextPrompt);
      v18 = 34;
      v19 = 0xE100000000000000;
      sub_249F1E56C();
      sub_249D9BBEC((unint64_t *)&qword_2578D73C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
      sub_249F1F4C0();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      sub_249F1F460();
      v9 = v18;
      v10 = v19;
      sub_249DC05A8((uint64_t)v5, type metadata accessor for ResolvedTextPrompt);
      v7 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB673C(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v20;
      }
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_249DB673C(v11 > 1, v12 + 1, 1);
        v7 = v20;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      v13 = v7 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      v8 += v16;
      --v6;
    }
    while (v6);
  }
  v18 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
  sub_249F1F280();
  swift_bridgeObjectRelease();
  v18 = 91;
  v19 = 0xE100000000000000;
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_249E06184()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[8];
  v5 = v0[7];
  sub_249F1FA84();
  sub_249F1F460();
  if (v1)
  {
    sub_249F1FE08();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249E72248(v2);
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  if (v3)
  {
    sub_249F1FE08();
    sub_249F1F460();
    sub_249F1FE08();
    sub_249F1F460();
    swift_bridgeObjectRelease();
    sub_249F1F460();
    sub_249E72248(v5);
    sub_249F1F460();
    swift_bridgeObjectRelease();
  }
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_249E0640C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249E06444 + 4 * byte_249F27055[a1]))(0x6F746172656E6567, 0xE900000000000072);
}

unint64_t sub_249E06444()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_249E06650(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_249E0640C(*a1);
  v5 = v4;
  if (v3 == sub_249E0640C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_249F1FE2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_249E066D8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_249F1FF64();
  sub_249E0640C(v1);
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249E06738()
{
  unsigned __int8 *v0;

  sub_249E0640C(*v0);
  sub_249F1F40C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E06778()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_249F1FF64();
  sub_249E0640C(v1);
  sub_249F1F40C();
  swift_bridgeObjectRelease();
  return sub_249F1FFA0();
}

uint64_t sub_249E067D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249E0CCDC();
  *a1 = result;
  return result;
}

uint64_t sub_249E06800@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_249E0640C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_249E06828()
{
  unsigned __int8 *v0;

  return sub_249E0640C(*v0);
}

uint64_t sub_249E06830@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249E0CCDC();
  *a1 = result;
  return result;
}

void sub_249E06854(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_249E06860()
{
  sub_249E0B550();
  return sub_249F20024();
}

uint64_t sub_249E06888()
{
  sub_249E0B550();
  return sub_249F20030();
}

uint64_t sub_249E068B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  char v36;
  char v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char v56;
  char v57;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0B550();
  sub_249F20018();
  v52[0] = *(_BYTE *)v3;
  v57 = 0;
  sub_249E0B594();
  sub_249F1FDCC();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_BYTE *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v12 = *(_BYTE *)(v3 + 56);
  v13 = *(_BYTE *)(v3 + 57);
  v14 = *(_BYTE *)(v3 + 58);
  v15 = *(_BYTE *)(v3 + 59);
  v16 = *(_BYTE *)(v3 + 60);
  v17 = *(_BYTE *)(v3 + 61);
  v18 = *(unsigned __int8 *)(v3 + 62);
  *(_QWORD *)v52 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)&v52[8] = v9;
  *(_OWORD *)&v52[16] = *(_OWORD *)(v3 + 24);
  LOBYTE(v53) = v10;
  *((_QWORD *)&v53 + 1) = v11;
  LOBYTE(v54) = v12;
  BYTE1(v54) = v13;
  BYTE2(v54) = v14;
  BYTE3(v54) = v15;
  BYTE4(v54) = v16;
  BYTE5(v54) = v17;
  BYTE6(v54) = v18;
  v57 = 1;
  sub_249E0B5D8();
  sub_249F1FDCC();
  v19 = (int *)type metadata accessor for GenerationRecipe(0);
  *(_QWORD *)v52 = *(_QWORD *)(v3 + v19[12]);
  v57 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8EB8);
  sub_249E0B948(&qword_2578D8EC0, &qword_2578D8EC8, (uint64_t)&unk_249F2765C, MEMORY[0x24BEE12A0]);
  sub_249F1FDCC();
  *(_QWORD *)v52 = *(_QWORD *)(v3 + v19[13]);
  v57 = 3;
  sub_249F1FDCC();
  v20 = v3 + v19[14];
  v21 = *(_QWORD *)(v20 + 32);
  v22 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v20;
  *(_OWORD *)&v52[16] = v22;
  *(_QWORD *)&v53 = v21;
  v57 = 4;
  sub_249DDF890();
  sub_249F1FD84();
  v23 = v3 + v19[15];
  v24 = *(_QWORD *)(v23 + 32);
  v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v23;
  *(_OWORD *)&v52[16] = v25;
  *(_QWORD *)&v53 = v24;
  v57 = 5;
  sub_249F1FD84();
  v26 = v3 + v19[16];
  v27 = *(_QWORD *)(v26 + 32);
  v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v26;
  *(_OWORD *)&v52[16] = v28;
  *(_QWORD *)&v53 = v27;
  v57 = 6;
  sub_249F1FD84();
  v29 = v3 + v19[17];
  v30 = *(_QWORD *)(v29 + 32);
  v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v29;
  *(_OWORD *)&v52[16] = v31;
  *(_QWORD *)&v53 = v30;
  v57 = 7;
  sub_249F1FD84();
  v32 = v3 + v19[18];
  v33 = *(_BYTE *)(v32 + 80);
  v34 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v32;
  *(_OWORD *)&v52[16] = v34;
  v35 = *(_OWORD *)(v32 + 48);
  v53 = *(_OWORD *)(v32 + 32);
  v54 = v35;
  v55 = *(_OWORD *)(v32 + 64);
  v56 = v33;
  v57 = 8;
  sub_249E0B61C();
  sub_249F1FDCC();
  *(_QWORD *)v52 = *(_QWORD *)(v3 + v19[19]);
  v57 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
  sub_249E0B660(&qword_2578D8EE0, &qword_2578D8EE8, (uint64_t)&protocol conformance descriptor for Concept, MEMORY[0x24BEE12A0]);
  sub_249F1FDCC();
  *(_QWORD *)v52 = *(_QWORD *)(v3 + 64);
  v57 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E28);
  sub_249E0BDF0(&qword_2578D8EF0, &qword_2578D7E28, (uint64_t (*)(void))sub_249E0B6E4, MEMORY[0x24BEE12A0]);
  sub_249F1FDCC();
  v52[0] = 14;
  sub_249F1FD78();
  v52[0] = 15;
  type metadata accessor for PipelineConfiguration.InputConditioning(0);
  sub_249D9BBEC(&qword_2578D8F00, type metadata accessor for PipelineConfiguration.InputConditioning, (uint64_t)&protocol conformance descriptor for PipelineConfiguration.InputConditioning);
  sub_249F1FD84();
  v36 = *(_BYTE *)(v3 + v19[9] + 4);
  v52[0] = 16;
  v57 = v36;
  sub_249F1FD6C();
  v37 = *(_BYTE *)(v3 + v19[10] + 4);
  v52[0] = 17;
  v57 = v37;
  sub_249F1FD6C();
  v38 = (_OWORD *)(v3 + v19[20]);
  v39 = v38[1];
  *(_OWORD *)v52 = *v38;
  *(_OWORD *)&v52[16] = v39;
  v40 = v38[3];
  v53 = v38[2];
  v54 = v40;
  v57 = 18;
  sub_249E0B728();
  sub_249F1FD84();
  v41 = v3 + v19[11];
  v42 = *(_BYTE *)(v41 + 2);
  *(_WORD *)v52 = *(_WORD *)v41;
  v52[2] = v42;
  *(_OWORD *)&v52[8] = *(_OWORD *)(v41 + 8);
  v57 = 19;
  sub_249E0B76C();
  sub_249F1FDCC();
  v44 = (uint64_t *)(v3 + v19[21]);
  v45 = v44[1];
  v51 = *v44;
  v46 = v44[2];
  v47 = qword_2578D5D88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47 != -1)
    swift_once();
  v48 = qword_2578FF440;
  if (v51 == qword_2578FF430 && v45 == *(_QWORD *)algn_2578FF438 || (sub_249F1FE2C() & 1) != 0)
  {
    v49 = sub_249EA85A8(v46, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v49 & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v52 = v51;
  *(_QWORD *)&v52[8] = v45;
  *(_QWORD *)&v52[16] = v46;
  v57 = 10;
  sub_249E0B7B0();
  sub_249F1FDCC();
LABEL_13:
  if (*(_QWORD *)(*(_QWORD *)(v3 + v19[22]) + 16))
  {
    *(_QWORD *)v52 = *(_QWORD *)(v3 + v19[22]);
    v57 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8F20);
    sub_249E0BC20(&qword_2578D8F28, (uint64_t (*)(void))sub_249E0B7F4, (uint64_t (*)(void))sub_249E0B838, MEMORY[0x24BEE04C0]);
    sub_249F1FDCC();
  }
  v52[0] = *(_BYTE *)(v3 + v19[23]);
  v57 = 12;
  sub_249E0B87C();
  sub_249F1FDCC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_249E070F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  _QWORD *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char v138;
  char v139;

  v110 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  MEMORY[0x24BDAC7A8](v3);
  v114 = (uint64_t)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8F48);
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v6 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for GenerationRecipe(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v10 + 9) = 0;
  v10[80] = 1;
  v11 = (uint64_t)&v10[*(int *)(v8 + 32)];
  v12 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v122 = v11;
  *(_QWORD *)&v113 = v12;
  v13(v11, 1, 1);
  v14 = &v10[v7[9]];
  *(_DWORD *)v14 = 0;
  *(_QWORD *)&v112 = v14;
  v14[4] = 1;
  v15 = &v10[v7[10]];
  *(_DWORD *)v15 = 0;
  *(_QWORD *)&v111 = v15;
  v15[4] = 1;
  v16 = &v10[v7[11]];
  *(_WORD *)v16 = 773;
  v16[2] = 10;
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = 0;
  v119 = v16;
  v17 = MEMORY[0x24BEE4AF8];
  v130 = v7[12];
  *(_QWORD *)&v10[v130] = MEMORY[0x24BEE4AF8];
  v129 = v7[13];
  *(_QWORD *)&v10[v129] = v17;
  v18 = &v10[v7[14]];
  *((_QWORD *)v18 + 4) = 0;
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v128 = v18;
  v19 = &v10[v7[15]];
  *((_QWORD *)v19 + 4) = 0;
  *(_OWORD *)v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v127 = v19;
  v20 = &v10[v7[16]];
  *((_QWORD *)v20 + 4) = 0;
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  v124 = v20;
  v21 = &v10[v7[17]];
  *((_QWORD *)v21 + 4) = 0;
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  v125 = v21;
  v22 = &v10[v7[18]];
  v22[80] = 0;
  *((_OWORD *)v22 + 3) = 0u;
  *((_OWORD *)v22 + 4) = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  *(_OWORD *)v22 = 0u;
  v123 = v7[19];
  *(_QWORD *)&v10[v123] = v17;
  v23 = &v10[v7[20]];
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  v118 = v23;
  v24 = &v10[v7[21]];
  if (qword_2578D5D88 != -1)
    swift_once();
  v25 = *(_QWORD *)algn_2578FF438;
  v26 = qword_2578FF440;
  *(_QWORD *)v24 = qword_2578FF430;
  *((_QWORD *)v24 + 1) = v25;
  v121 = v24;
  *((_QWORD *)v24 + 2) = v26;
  v27 = v7[22];
  v28 = sub_249DBFE38(MEMORY[0x24BEE4AF8]);
  v120 = v27;
  *(_QWORD *)&v10[v27] = v28;
  v29 = v7[23];
  v10[v29] = 0;
  v30 = a1;
  v31 = a1[3];
  v126 = v30;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  sub_249E0B550();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = v117;
  sub_249F1FFF4();
  if (v32)
  {
    v33 = -112;
    v35 = v125;
    v34 = (uint64_t)v126;
    v36 = v124;
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(v34);
    if ((v33 & 2) != 0)
      swift_bridgeObjectRelease();
    if ((v33 & 4) != 0)
      swift_bridgeObjectRelease();
    sub_249DCC2FC(v122, &qword_2578D67E0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249DC0768(*(_QWORD *)v128, *((_QWORD *)v128 + 1), *((_QWORD *)v128 + 2), *((void **)v128 + 3));
    sub_249DC0768(*(_QWORD *)v127, *((_QWORD *)v127 + 1), *((_QWORD *)v127 + 2), *((void **)v127 + 3));
    sub_249DC0768(*(_QWORD *)v36, *((_QWORD *)v36 + 1), *((_QWORD *)v36 + 2), *((void **)v36 + 3));
    sub_249DC0768(*(_QWORD *)v35, *((_QWORD *)v35 + 1), *((_QWORD *)v35 + 2), *((void **)v35 + 3));
    v39 = *((_QWORD *)v22 + 5);
    v40 = *((_QWORD *)v22 + 6);
    v41 = *((_QWORD *)v22 + 7);
    v42 = (void *)*((_QWORD *)v22 + 8);
    sub_249DC0768(*(_QWORD *)v22, *((_QWORD *)v22 + 1), *((_QWORD *)v22 + 2), *((void **)v22 + 3));
    sub_249DC0768(v39, v40, v41, v42);
    swift_bridgeObjectRelease();
    sub_249DC08D0(*(_QWORD *)v118, *((_QWORD *)v118 + 1), *((_QWORD *)v118 + 2), *((void **)v118 + 3));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v117 = v29;
  v139 = 0;
  sub_249E0B8C0();
  sub_249F1FD00();
  v37 = v125;
  v38 = v124;
  *v10 = v131;
  v139 = 1;
  sub_249E0B904();
  v109 = v6;
  sub_249F1FD00();
  v44 = *((_QWORD *)&v131 + 1);
  v45 = v133;
  v46 = *((_QWORD *)&v133 + 1);
  v47 = v134;
  v48 = BYTE1(v134);
  v49 = BYTE2(v134);
  v50 = BYTE3(v134);
  v51 = BYTE4(v134);
  v52 = BYTE5(v134);
  v53 = BYTE6(v134);
  *((_QWORD *)v10 + 1) = v131;
  *((_QWORD *)v10 + 2) = v44;
  *(_OWORD *)(v10 + 24) = v132;
  v10[40] = v45;
  *((_QWORD *)v10 + 6) = v46;
  v10[56] = v47;
  v10[57] = v48;
  v10[58] = v49;
  v10[59] = v50;
  v10[60] = v51;
  v10[61] = v52;
  v10[62] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8EB8);
  v139 = 2;
  sub_249E0B948(&qword_2578D8F60, &qword_2578D8F68, (uint64_t)&unk_249F2760C, MEMORY[0x24BEE12D0]);
  sub_249F1FCB8();
  v108 = v22;
  v54 = v131;
  v55 = MEMORY[0x24BEE4AF8];
  if (!(_QWORD)v131)
    v54 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v10[v130] = v54;
  v139 = 3;
  sub_249F1FCB8();
  v56 = v131;
  if (!(_QWORD)v131)
    v56 = v55;
  *(_QWORD *)&v10[v129] = v56;
  v139 = 4;
  sub_249DDF84C();
  sub_249F1FCB8();
  v57 = v133;
  v58 = v132;
  v59 = v128;
  *(_OWORD *)v128 = v131;
  *((_OWORD *)v59 + 1) = v58;
  *((_QWORD *)v59 + 4) = v57;
  v139 = 5;
  sub_249F1FCB8();
  v60 = v133;
  v61 = v132;
  v62 = v127;
  *(_OWORD *)v127 = v131;
  *((_OWORD *)v62 + 1) = v61;
  *((_QWORD *)v62 + 4) = v60;
  v139 = 6;
  sub_249F1FCB8();
  v63 = v133;
  v64 = v132;
  *(_OWORD *)v38 = v131;
  *((_OWORD *)v38 + 1) = v64;
  *((_QWORD *)v38 + 4) = v63;
  v139 = 7;
  sub_249F1FCB8();
  v65 = v133;
  v66 = v132;
  *(_OWORD *)v37 = v131;
  *((_OWORD *)v37 + 1) = v66;
  *((_QWORD *)v37 + 4) = v65;
  v139 = 8;
  sub_249E0B9CC();
  sub_249F1FCB8();
  v67 = v109;
  v103 = v131;
  v104 = v132;
  v105 = v133;
  v106 = v134;
  v107 = v135;
  v102 = v136;
  if (*((_QWORD *)&v132 + 1) == 1)
  {
    v68 = 0;
    v69 = 0;
    v70 = 0;
    v71 = 0;
    v72 = 0;
    v73 = 0;
    v74 = 0;
    v75 = 0;
    v76 = 0;
    v77 = 0;
    v78 = 0;
  }
  else
  {
    v78 = v138 & 1;
    v69 = *((_QWORD *)&v103 + 1);
    v68 = v103;
    v71 = *((_QWORD *)&v104 + 1);
    v70 = v104;
    v73 = *((_QWORD *)&v105 + 1);
    v72 = v105;
    v74 = v106;
    v75 = v107;
    v76 = v102;
    v77 = v137;
  }
  v79 = v108;
  *(_QWORD *)v108 = v68;
  *((_QWORD *)v79 + 1) = v69;
  *((_QWORD *)v79 + 2) = v70;
  *((_QWORD *)v79 + 3) = v71;
  *((_QWORD *)v79 + 4) = v72;
  *((_QWORD *)v79 + 5) = v73;
  *((_QWORD *)v79 + 6) = v74;
  *((_QWORD *)v79 + 7) = v75;
  *((_QWORD *)v79 + 8) = v76;
  *((_QWORD *)v79 + 9) = v77;
  v79[80] = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
  v139 = 9;
  sub_249E0BA10(v103, *((uint64_t *)&v103 + 1), v104, *((void **)&v104 + 1), v105, *((uint64_t *)&v105 + 1), v106, v107, v102);
  sub_249E0B660(&qword_2578D8F78, &qword_2578D8F80, (uint64_t)&protocol conformance descriptor for Concept, MEMORY[0x24BEE12D0]);
  sub_249F1FCB8();
  v80 = v131;
  if (!(_QWORD)v131)
    v80 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v10[v123] = v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D7E28);
  v139 = 13;
  sub_249E0BDF0(&qword_2578D8F88, &qword_2578D7E28, (uint64_t (*)(void))sub_249E0BAC8, MEMORY[0x24BEE12D0]);
  sub_249F1FCB8();
  v81 = v131;
  if (!(_QWORD)v131)
    v81 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v10 + 8) = v81;
  LOBYTE(v131) = 14;
  *((_QWORD *)v10 + 9) = sub_249F1FCAC();
  v10[80] = v82 & 1;
  LOBYTE(v131) = 15;
  sub_249D9BBEC(&qword_2578D8F98, type metadata accessor for PipelineConfiguration.InputConditioning, (uint64_t)&protocol conformance descriptor for PipelineConfiguration.InputConditioning);
  sub_249F1FCB8();
  sub_249E0BB0C(v114, v122);
  LOBYTE(v131) = 16;
  v83 = sub_249F1FCA0();
  v84 = v112;
  *(_DWORD *)v112 = v83;
  *(_BYTE *)(v84 + 4) = BYTE4(v83) & 1;
  LOBYTE(v131) = 17;
  v85 = sub_249F1FCA0();
  v86 = v111;
  *(_DWORD *)v111 = v85;
  *(_BYTE *)(v86 + 4) = BYTE4(v85) & 1;
  v139 = 18;
  sub_249E0BB54();
  sub_249F1FCB8();
  v114 = 0;
  v113 = v131;
  v112 = v132;
  v111 = v133;
  v87 = v134;
  v88 = v135;
  v89 = v118;
  sub_249DC08D0(*(_QWORD *)v118, *((_QWORD *)v118 + 1), *((_QWORD *)v118 + 2), *((void **)v118 + 3));
  v90 = v112;
  *(_OWORD *)v89 = v113;
  *((_OWORD *)v89 + 1) = v90;
  *((_OWORD *)v89 + 2) = v111;
  *((_QWORD *)v89 + 6) = v87;
  *((_QWORD *)v89 + 7) = v88;
  v139 = 19;
  sub_249E0BB98();
  v91 = v114;
  sub_249F1FCB8();
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v67, v116);
    sub_249E0BA6C(v103, *((uint64_t *)&v103 + 1), v104, *((void **)&v104 + 1), v105, *((uint64_t *)&v105 + 1), v106, v107, v102);
    v33 = -106;
    v35 = v125;
    v34 = (uint64_t)v126;
    v36 = v124;
    v22 = v108;
    goto LABEL_6;
  }
  v92 = v132;
  if ((_QWORD)v132 == 1)
  {
    v114 = 0;
    v92 = 0;
    *(_QWORD *)&v113 = 3;
    v93 = 5;
    v94 = 10;
  }
  else
  {
    v114 = *((_QWORD *)&v131 + 1);
    v93 = v131;
    *(_QWORD *)&v113 = (unint64_t)v131 >> 8;
    v94 = (unint64_t)v131 >> 16;
  }
  *(_QWORD *)&v112 = v94;
  v95 = v119;
  swift_bridgeObjectRelease();
  *v95 = v93;
  v95[1] = v113;
  v95[2] = v112;
  *((_QWORD *)v95 + 1) = v114;
  *((_QWORD *)v95 + 2) = v92;
  v139 = 10;
  sub_249E0BBDC();
  sub_249F1FCB8();
  v96 = *((_QWORD *)&v131 + 1);
  if (*((_QWORD *)&v131 + 1))
  {
    v114 = v131;
    v97 = v132;
  }
  else
  {
    v96 = *(_QWORD *)algn_2578FF438;
    v114 = qword_2578FF430;
    v98 = qword_2578FF440;
    swift_bridgeObjectRetain();
    v97 = v98;
    swift_bridgeObjectRetain();
  }
  v99 = v121;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)v99 = v114;
  *((_QWORD *)v99 + 1) = v96;
  *((_QWORD *)v99 + 2) = v97;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8F20);
  v139 = 11;
  sub_249E0BC20(&qword_2578D8FB8, (uint64_t (*)(void))sub_249E0BC9C, (uint64_t (*)(void))sub_249E0BCE0, MEMORY[0x24BEE04E0]);
  sub_249F1FCB8();
  v100 = v131;
  if (!(_QWORD)v131)
    v100 = sub_249DBFE38(MEMORY[0x24BEE4AF8]);
  v101 = v120;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v101] = v100;
  v139 = 12;
  sub_249E0BD24();
  sub_249F1FCB8();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v67, v116);
  sub_249E0BA6C(v103, *((uint64_t *)&v103 + 1), v104, *((void **)&v104 + 1), v105, *((uint64_t *)&v105 + 1), v106, v107, v102);
  v10[v117] = v131 & 1;
  sub_249DC091C((uint64_t)v10, v110, type metadata accessor for GenerationRecipe);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
  return sub_249DC05A8((uint64_t)v10, type metadata accessor for GenerationRecipe);
}

uint64_t sub_249E08364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(__int128 *, _QWORD);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char **v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  char v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v112[2];
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  __int128 v148;

  v134 = (char *)a1;
  v132 = sub_249F1E650();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v130 = (char *)v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E50);
  MEMORY[0x24BDAC7A8](v4);
  v125 = (char *)v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  v127 = *(_QWORD *)(v138 - 8);
  v6 = MEMORY[0x24BDAC7A8](v138);
  v143 = (uint64_t)v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v140 = (uint64_t)v112 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v137 = (char *)v112 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v139 = (uint64_t)v112 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v112 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v144 = (uint64_t)v112 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v112[0] = (uint64_t)v112 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v20);
  v116 = (char *)v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_249F1E6B0();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v113 = (char *)v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_249F1E5E4();
  v23 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v117 = (char *)v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E60);
  MEMORY[0x24BDAC7A8](v25);
  v121 = (char *)v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_249F1E5F0();
  v28 = *(_QWORD *)(v27 - 8);
  v141 = v27;
  v142 = v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v135 = (char *)v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v112 - v31;
  v33 = sub_249F1E5FC();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E68);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)v112 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)v112 - v41;
  sub_249DC091C((uint64_t)v134, a2, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v126 = a2;
  sub_249F1E608();
  v119 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v119(v40, v36, v33);
  v129 = sub_249D9BBEC(&qword_2578D8E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
  sub_249F1F730();
  v43 = *(void (**)(char *, uint64_t))(v34 + 8);
  v120 = v36;
  v123 = v33;
  v118 = v43;
  v43(v36, v33);
  v44 = &v40[*(int *)(v37 + 36)];
  v45 = v142;
  v46 = *(void (**)(char *, char *, uint64_t))(v142 + 32);
  v134 = v32;
  v46(v44, v32, v141);
  sub_249DCB1B0((uint64_t)v40, (uint64_t)v42, &qword_2578D8E68);
  v47 = *(int *)(v37 + 36);
  v133 = v42;
  v48 = &v42[v47];
  v122 = *(char **)(v45 + 16);
  v128 = MEMORY[0x24BEE4AF8];
  v124 = v23;
  while (1)
  {
    v49 = (uint64_t)v134;
    v50 = v141;
    ((void (*)(char *, char *, uint64_t))v122)(v134, v48, v141);
    v51 = v135;
    v52 = (uint64_t)v133;
    v53 = v123;
    sub_249F1F754();
    sub_249D9BBEC(&qword_2578D8E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v54 = sub_249F1F298();
    v55 = *(void (**)(char *, uint64_t))(v142 + 8);
    v55(v51, v50);
    v55((char *)v49, v50);
    if ((v54 & 1) != 0)
      break;
    v56 = (void (*)(__int128 *, _QWORD))sub_249F1F784();
    v57 = v124;
    v58 = v121;
    v59 = v136;
    (*(void (**)(char *))(v124 + 16))(v121);
    v56(&v148, 0);
    v60 = v120;
    v119(v120, (char *)v52, v53);
    v61 = v48;
    sub_249F1F760();
    v118(v60, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v59);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v58, 1, v59) == 1)
      goto LABEL_12;
    v62 = v117;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v117, v58, v59);
    v63 = v59;
    v64 = v113;
    sub_249F1E5CC();
    sub_249E0B50C();
    v65 = (uint64_t)v116;
    sub_249F1E6BC();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v64, v115);
    v66 = sub_249F1E8D8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v65, 1, v66) == 1)
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v63);
      sub_249DCC2FC(v65, &qword_2578D6288);
      v48 = v61;
    }
    else
    {
      sub_249DCC2FC(v65, &qword_2578D6288);
      sub_249F1E5D8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v128 = sub_249DB2610(0, *(_QWORD *)(v128 + 16) + 1, 1, v128);
      v67 = v136;
      v69 = *(_QWORD *)(v128 + 16);
      v68 = *(_QWORD *)(v128 + 24);
      if (v69 >= v68 >> 1)
        v128 = sub_249DB2610(v68 > 1, v69 + 1, 1, v128);
      v70 = v128;
      *(_QWORD *)(v128 + 16) = v69 + 1;
      sub_249DCB1B0(v112[0], v70+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(_QWORD *)(v127 + 72) * v69, &qword_2578D6C30);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v117, v67);
      v48 = v61;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))(v121, 1, 1, v136);
LABEL_12:
  sub_249DCC2FC(v52, &qword_2578D8E68);
  type metadata accessor for GenerationRecipe(0);
  v71 = (_QWORD *)swift_bridgeObjectRetain();
  v72 = sub_249E72754(v71);
  swift_bridgeObjectRelease();
  v73 = v72[2];
  if (!v73)
    goto LABEL_56;
  v124 = 0;
  v74 = (void (*)(char *, uint64_t))(v72 + 4);
  v75 = v126;
  v76 = (uint64_t)v125;
  v77 = v127;
  v119 = (void (*)(char *, char *, uint64_t))v72;
  v118 = (void (*)(char *, uint64_t))(v72 + 4);
  while (1)
  {
    if (v73 > v72[2])
      goto LABEL_55;
    v78 = (char **)((char *)v74 + 64 * --v73);
    if (((_BYTE)v78[2] & 0x28) == 0)
      goto LABEL_50;
    v123 = v73;
    v79 = v78[1];
    v134 = *v78;
    v135 = v79;
    v80 = v78[3];
    v82 = (uint64_t)v78[5];
    v147 = (uint64_t)v78[4];
    v81 = (char *)v147;
    swift_bridgeObjectRetain();
    v122 = v80;
    swift_bridgeObjectRetain();
    v121 = v81;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v120 = (char *)v82;
    sub_249E5DDA4(v82);
    v83 = swift_bridgeObjectRetain();
    v84 = v124;
    v85 = sub_249E72588(v83);
    v124 = v84;
    swift_bridgeObjectRelease_n();
    v147 = v85;
    v86 = *(_QWORD *)(v85 + 16);
    if (v86)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    v72 = v119;
    v73 = v123;
    v74 = v118;
LABEL_50:
    if (!v73)
      goto LABEL_56;
  }
  v133 = (char *)(v85 + 32);
  swift_bridgeObjectRetain();
  v129 = v85;
  while (v86 <= *(_QWORD *)(v85 + 16))
  {
    v136 = v86 - 1;
    v148 = *(_OWORD *)&v133[16 * v86 - 16];
    v145 = (uint64_t)v134;
    v146 = v135;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6140);
    sub_249DDFC68((unint64_t *)&qword_2578D6148, &qword_2578D6140, MEMORY[0x24BEE1BC0]);
    sub_249D9E5BC();
    sub_249F1F94C();
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v75, v132);
    sub_249D9BBEC((unint64_t *)&qword_2578D73D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
    sub_249F1F790();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v76, 1, v138) == 1)
    {
      v87 = v76;
      v88 = &qword_2578D8E50;
    }
    else
    {
      v89 = v144;
      sub_249DCB1B0(v76, v144, &qword_2578D6C30);
      v90 = v128;
      v91 = *(_QWORD *)(v128 + 16);
      v92 = (uint64_t)v137;
      if (v91)
      {
        *(_QWORD *)&v148 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_249DB677C(0, v91, 0);
        sub_249F1E620();
        v142 = v89 + *(int *)(v138 + 36);
        v93 = v90 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
        v141 = *(_QWORD *)(v77 + 72);
        while (1)
        {
          sub_249DCC274(v93, (uint64_t)v16, &qword_2578D6C30);
          sub_249D9BBEC(&qword_2578D8E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
          v94 = sub_249F1F28C();
          v95 = v139;
          sub_249DCC274((uint64_t)v16, v139, &qword_2578D6C30);
          sub_249DCC274(v144, v92, &qword_2578D6C30);
          if ((v94 & 1) != 0)
          {
            sub_249DCC2FC(v92, &qword_2578D6C30);
            sub_249DCC2FC(v95, &qword_2578D6C30);
            v96 = v140;
            sub_249DCC274((uint64_t)v16, v140, &qword_2578D6C30);
          }
          else
          {
            v97 = sub_249F1F28C();
            sub_249DCC2FC(v92, &qword_2578D6C30);
            sub_249DCC2FC(v95, &qword_2578D6C30);
            v96 = v140;
            sub_249DCC274((uint64_t)v16, v140, &qword_2578D6C30);
            if ((v97 & 1) == 0)
            {
              sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
              v100 = sub_249F1F298();
              sub_249DCC2FC(v96, &qword_2578D6C30);
              v98 = v143;
              sub_249DCC274(v144, v143, &qword_2578D6C30);
              if ((v100 & 1) != 0)
              {
                v99 = 1;
              }
              else
              {
                v101 = sub_249F1F298();
                v98 = v143;
                v99 = v101;
              }
              v92 = (uint64_t)v137;
              goto LABEL_32;
            }
          }
          sub_249DCC2FC(v96, &qword_2578D6C30);
          v98 = v143;
          sub_249DCC274(v144, v143, &qword_2578D6C30);
          v99 = 1;
LABEL_32:
          sub_249DCC2FC(v98, &qword_2578D6C30);
          sub_249DCC2FC((uint64_t)v16, &qword_2578D6C30);
          v102 = v148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249DB677C(0, *(_QWORD *)(v102 + 16) + 1, 1);
            v102 = v148;
          }
          v104 = *(_QWORD *)(v102 + 16);
          v103 = *(_QWORD *)(v102 + 24);
          if (v104 >= v103 >> 1)
          {
            sub_249DB677C(v103 > 1, v104 + 1, 1);
            v102 = v148;
          }
          *(_QWORD *)(v102 + 16) = v104 + 1;
          *(_QWORD *)(v102 + 8 * v104 + 32) = (v99 & 1) == 0;
          v93 += v141;
          if (!--v91)
          {
            swift_bridgeObjectRelease();
            v75 = v126;
            v76 = (uint64_t)v125;
            goto LABEL_39;
          }
        }
      }
      v102 = MEMORY[0x24BEE4AF8];
LABEL_39:
      v105 = *(_QWORD *)(v102 + 16);
      v106 = v144;
      if (v105)
      {
        v107 = 0;
        v108 = 0;
        v77 = v127;
        do
        {
          v109 = *(_QWORD *)(v102 + 8 * v107 + 32);
          v110 = __OFADD__(v108, v109);
          v108 += v109;
          if (v110)
          {
            __break(1u);
            goto LABEL_54;
          }
          ++v107;
        }
        while (v105 != v107);
        swift_bridgeObjectRelease();
        if (v108)
          goto LABEL_47;
      }
      else
      {
        swift_bridgeObjectRelease();
        v77 = v127;
      }
      sub_249DDFC68((unint64_t *)&qword_2578D8E58, &qword_2578D6C30, MEMORY[0x24BEE1BC0]);
      sub_249F1E59C();
LABEL_47:
      v87 = v106;
      v88 = &qword_2578D6C30;
    }
    sub_249DCC2FC(v87, v88);
    v85 = v129;
    v86 = v136;
    if (!v136)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249E582D4();
  return sub_249E57C40();
}

uint64_t sub_249E092B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unsigned __int8 *v16;
  int v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unsigned __int8 *v23;
  uint64_t result;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for GenerationRecipe(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (unsigned __int8 *)(v1 + *(int *)(v5 + 44));
  v9 = *v8;
  v10 = v8[1];
  v11 = v8[2];
  v12 = *((_QWORD *)v8 + 2);
  v28 = *((_QWORD *)v8 + 1);
  v13 = *(_QWORD *)(v1 + *(int *)(v5 + 88));
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_249DB7EA8(0), (v15 & 1) != 0))
  {
    v16 = (unsigned __int8 *)(*(_QWORD *)(v13 + 56) + 3 * v14);
    v17 = *v16;
    HIDWORD(v27) = v16[1];
    v18 = v16[2];
    sub_249DC091C(v2, (uint64_t)v7, type metadata accessor for GenerationRecipe);
    if (v17 != 3)
    {
      v19 = BYTE4(v27);
      goto LABEL_9;
    }
  }
  else
  {
    sub_249DC091C(v2, (uint64_t)v7, type metadata accessor for GenerationRecipe);
  }
  v20 = *(_QWORD *)&v7[*(int *)(v4 + 88)];
  if (!*(_QWORD *)(v20 + 16) || (v21 = sub_249DB7EA8(1), (v22 & 1) == 0))
  {
    swift_bridgeObjectRetain();
    result = sub_249DC05A8((uint64_t)v7, type metadata accessor for GenerationRecipe);
    goto LABEL_19;
  }
  v23 = (unsigned __int8 *)(*(_QWORD *)(v20 + 56) + 3 * v21);
  v17 = *v23;
  v19 = v23[1];
  v18 = v23[2];
LABEL_9:
  swift_bridgeObjectRetain();
  result = sub_249DC05A8((uint64_t)v7, type metadata accessor for GenerationRecipe);
  v25 = v17 & 1;
  if (v17 == 2)
    v25 = 3;
  if (v10 == 3)
    LOBYTE(v10) = v25;
  if (v9 == 5)
    LOBYTE(v9) = v19;
  if (v11 == 10)
    LOBYTE(v11) = v18;
LABEL_19:
  v26 = v28;
  *(_BYTE *)a1 = v9;
  *(_BYTE *)(a1 + 1) = v10;
  *(_BYTE *)(a1 + 2) = v11;
  *(_QWORD *)(a1 + 8) = v26;
  *(_QWORD *)(a1 + 16) = v12;
  return result;
}

uint64_t sub_249E09460(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7, _QWORD *a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  uint64_t i;
  uint64_t v17;

  if (a2)
  {
    v10 = a8[2];
    if (v10)
    {
      v13 = result;
      v14 = a8[4] == result && a8[5] == a2;
      if (v14 || (result = sub_249F1FE2C(), (result & 1) != 0))
      {
LABEL_8:
        result = swift_beginAccess();
        *(_BYTE *)(a9 + 16) = 1;
        *a7 = 1;
      }
      else if (v10 != 1)
      {
        v15 = a8 + 7;
        for (i = 1; ; ++i)
        {
          v17 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (*(v15 - 1) == v13 && *v15 == a2)
            goto LABEL_8;
          result = sub_249F1FE2C();
          if ((result & 1) != 0)
            goto LABEL_8;
          v15 += 2;
          if (v17 == v10)
            return result;
        }
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_249E09554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v54 = a1;
  v50 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E48);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E50);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v44 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AugmentedPrompt();
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_249F1E6B0();
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_249F1E620();
  v52 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - v17;
  v19 = sub_249F1E584();
  v51 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_BYTE *)a2;
  v23 = *(unsigned __int8 *)(a2 + 2);
  v24 = *(_QWORD *)(a2 + 16);
  sub_249E3219C(*(unsigned __int8 *)(a2 + 1), *(_BYTE *)a2);
  v55 = v25;
  v56 = v26;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v27 = sub_249F1F424();
    swift_bridgeObjectRelease();
    if (v27 > 0)
    {
      v57 = v55;
      v58 = v56;
      sub_249F1F460();
      swift_bridgeObjectRetain();
      sub_249F1F460();
      swift_bridgeObjectRelease();
      v55 = v57;
      v56 = v58;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v28 = v50;
  if (v23 == 10)
  {
    v50 = 0;
    v29 = 0;
  }
  else
  {
    LOBYTE(v57) = v23;
    sub_249E33740(v22);
    v50 = v30;
    v29 = v31;
  }
  sub_249F1E56C();
  sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  sub_249F1F730();
  sub_249F1F754();
  sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  v32 = sub_249F1F298();
  v33 = *(void (**)(char *, uint64_t))(v52 + 8);
  v33(v16, v13);
  v33(v18, v13);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v19);
  if ((v32 & 1) != 0)
  {
    if (v29)
    {
      v57 = v55;
      v58 = v56;
      sub_249F1F460();
      sub_249F1F460();
      swift_bridgeObjectRelease();
    }
    sub_249F1E6A4();
    return sub_249F1E65C();
  }
  else
  {
    v57 = v55;
    v58 = v56;
    sub_249F1F460();
    sub_249F1F460();
    if (v29)
    {
      sub_249F1F460();
      sub_249F1F460();
      swift_bridgeObjectRelease();
    }
    sub_249F1E6A4();
    v35 = (uint64_t)v49;
    sub_249F1E65C();
    v36 = v47;
    v57 = 0xD000000000000014;
    v58 = 0x8000000249F35470;
    v37 = sub_249F1E92C();
    v38 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v46, 1, 1, v37);
    sub_249F1E650();
    sub_249D9BBEC((unint64_t *)&qword_2578D73D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
    sub_249D9E5BC();
    sub_249F1E758();
    sub_249DCC2FC(v38, &qword_2578D8E48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v36, 1, v48) == 1)
    {
      v39 = &qword_2578D8E50;
      v40 = (uint64_t)v36;
    }
    else
    {
      v41 = (uint64_t)v36;
      v42 = v44;
      sub_249DCB1B0(v41, v44, &qword_2578D6C30);
      sub_249DDFC68((unint64_t *)&qword_2578D8E58, &qword_2578D6C30, MEMORY[0x24BEE1BC0]);
      sub_249F1E5A8();
      v40 = v42;
      v39 = &qword_2578D6C30;
    }
    sub_249DCC2FC(v40, v39);
    sub_249E0B4D8((uint64_t)&v57);
    return sub_249D9E308(v35, v28, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  }
}

uint64_t sub_249E09B7C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, _QWORD);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, uint64_t);
  void (*v125)(char *, char *, uint64_t);
  char *v126;
  char *v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int8 v135;
  char v136;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;

  v116 = a6;
  v115 = a5;
  v119 = a4;
  v114 = a3;
  v112 = a2;
  v118 = a7;
  v8 = sub_249F1E704();
  MEMORY[0x24BDAC7A8](v8);
  v96 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  MEMORY[0x24BDAC7A8](v106);
  v98 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_249F1E650();
  v105 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v97 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v12);
  v123 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_249F1E5E4();
  v128 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_249F1E620();
  v104 = *(_QWORD *)(v108 - 8);
  v16 = MEMORY[0x24BDAC7A8](v108);
  v103 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v107 = (char *)&v94 - v18;
  v102 = sub_249F1E584();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v100 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_249F1E6B0();
  v121 = *(_QWORD *)(v20 - 8);
  v122 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v120 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v109 = (char *)&v94 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E60);
  MEMORY[0x24BDAC7A8](v24);
  v127 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_249F1E5F0();
  v26 = *(_QWORD *)(v134 - 8);
  v27 = MEMORY[0x24BDAC7A8](v134);
  v131 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v94 - v29;
  v31 = sub_249F1E5FC();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E68);
  v35 = MEMORY[0x24BDAC7A8](v132);
  v37 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v94 - v38;
  v40 = type metadata accessor for AugmentedPrompt();
  v41 = MEMORY[0x24BDAC7A8](v40);
  v95 = (char *)&v94 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v110 = (uint64_t)&v94 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v99 = (uint64_t)&v94 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v111 = (char *)&v94 - v47;
  sub_249DC091C(a1, (uint64_t)&v94 - v47, v48);
  v113 = a1;
  sub_249F1E608();
  v125 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v125(v37, v34, v31);
  v49 = sub_249D9BBEC(&qword_2578D8E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
  sub_249F1F730();
  v50 = *(void (**)(char *, uint64_t))(v32 + 8);
  v126 = v34;
  v51 = v34;
  v52 = v49;
  v124 = v50;
  v50(v51, v31);
  v53 = v132;
  v54 = &v37[*(int *)(v132 + 36)];
  v55 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v130 = v30;
  v55(v54, v30, v134);
  sub_249DCB1B0((uint64_t)v37, (uint64_t)v39, &qword_2578D8E68);
  v56 = &v39[*(int *)(v53 + 36)];
  v132 = v26;
  v129 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  while (1)
  {
    v57 = v130;
    v58 = v134;
    v129(v130, v56, v134);
    v59 = v131;
    sub_249F1F754();
    sub_249D9BBEC(&qword_2578D8E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v60 = sub_249F1F298();
    v61 = *(void (**)(char *, uint64_t))(v132 + 8);
    v61(v59, v58);
    v61(v57, v58);
    if ((v60 & 1) != 0)
      break;
    v62 = (void (*)(char *, _QWORD))sub_249F1F784();
    v63 = v52;
    v64 = v127;
    v65 = v128;
    v66 = v133;
    (*(void (**)(char *))(v128 + 16))(v127);
    v62(&v136, 0);
    v67 = v126;
    v125(v126, v39, v31);
    v68 = v63;
    sub_249F1F760();
    v124(v67, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v64, 0, 1, v66);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v64, 1, v66) == 1)
      goto LABEL_7;
    v69 = (uint64_t)v39;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v15, v64, v66);
    v70 = v120;
    sub_249F1E5CC();
    sub_249E0B50C();
    v71 = (uint64_t)v123;
    sub_249F1E6BC();
    v72 = v71;
    (*(void (**)(char *, uint64_t))(v121 + 8))(v70, v122);
    v73 = sub_249F1E8D8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v71, 1, v73) != 1)
    {
      v86 = v112;
      v87 = HIWORD(v112);
      LODWORD(v132) = v112 >> 8;
      sub_249DCC2FC(v72, &qword_2578D6288);
      v88 = (uint64_t)v98;
      sub_249F1E5D8();
      v134 = sub_249DDFC68((unint64_t *)&qword_2578D8E58, &qword_2578D6C30, MEMORY[0x24BEE1BC0]);
      sub_249F1E680();
      sub_249DCC2FC(v88, &qword_2578D6C30);
      v89 = v97;
      sub_249F1E68C();
      v90 = (uint64_t)v95;
      v91 = v117;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v95, v89, v117);
      v136 = v86;
      v137 = v132;
      v138 = v87;
      v139 = v114;
      v140 = v119;
      v135 = v115;
      v92 = v110;
      sub_249DFFF28(v90, &v135, v116, v110);
      sub_249DC05A8(v90, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      sub_249F1E5D8();
      sub_249D9BBEC((unint64_t *)&qword_2578D73D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
      v85 = (uint64_t)v111;
      sub_249F1E5A8();
      sub_249DCC2FC(v88, &qword_2578D6C30);
      sub_249DC05A8(v92, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v89, v91);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v133);
      sub_249DCC2FC(v69, &qword_2578D8E68);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v66);
    sub_249DCC2FC(v71, &qword_2578D6288);
    v39 = (char *)v69;
    v52 = v68;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v127, 1, 1, v133);
LABEL_7:
  v74 = v112;
  v75 = HIWORD(v112);
  v76 = v112 >> 8;
  sub_249DCC2FC((uint64_t)v39, &qword_2578D8E68);
  sub_249F1E6A4();
  v77 = v110;
  sub_249F1E65C();
  v136 = v74;
  v137 = v76;
  v138 = v75;
  v139 = v114;
  v140 = v119;
  v135 = v115;
  v78 = v99;
  sub_249DFFF28(v77, &v135, v116, v99);
  sub_249DC05A8(v77, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v79 = v100;
  sub_249F1E56C();
  sub_249D9BBEC(&qword_2578D8D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  v80 = v107;
  v81 = v102;
  sub_249F1F730();
  v82 = v103;
  sub_249F1F754();
  sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  v83 = v108;
  LOBYTE(v75) = sub_249F1F298();
  v84 = *(void (**)(char *, uint64_t))(v104 + 8);
  v84(v82, v83);
  v84(v80, v83);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v79, v81);
  if ((v75 & 1) == 0)
  {
    sub_249F1E6A4();
    sub_249F1E65C();
    sub_249D9BBEC((unint64_t *)&qword_2578D73D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
    sub_249F1E62C();
    sub_249DC05A8(v77, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  }
  v85 = (uint64_t)v111;
  sub_249F1E578();
  sub_249D9BBEC((unint64_t *)&qword_2578D73D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
  sub_249F1E638();
  v84(v80, v83);
  sub_249DC05A8(v78, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
LABEL_11:
  sub_249D9E308(v85, v118, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E0A758(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  char v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D90F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v19 = v1[1];
  v20 = v8;
  v10 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  v17 = *((_QWORD *)v1 + 6);
  v18 = v9;
  v11 = *((_QWORD *)v1 + 7);
  v15 = *((_QWORD *)v1 + 8);
  v16 = v11;
  v14 = *((_QWORD *)v1 + 9);
  v24 = *((unsigned __int8 *)v1 + 80);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0CD70();
  sub_249F20018();
  v21 = v20;
  v22 = v19;
  v23 = v10;
  v25 = 0;
  sub_249DDF890();
  sub_249F1FD84();
  if (!v2)
  {
    *(_QWORD *)&v21 = v18;
    *((_QWORD *)&v21 + 1) = v17;
    *(_QWORD *)&v22 = v16;
    *((_QWORD *)&v22 + 1) = v15;
    v23 = v14;
    v25 = 1;
    sub_249F1FD84();
    LOBYTE(v21) = 2;
    sub_249F1FD9C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_249E0A924@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  int v52;
  char v53;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9110);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0CD70();
  sub_249F1FFF4();
  if (v2)
  {
    v45 = 0;
    v46 = 0;
    v44 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_249DC0768(0, 0, 0, 0);
    v32 = 0;
    v33 = 0;
    v35 = v44;
    v34 = v45;
  }
  else
  {
    v53 = 0;
    sub_249DDF84C();
    sub_249F1FCB8();
    v10 = v47;
    v53 = 1;
    v42 = v51;
    v43 = v48;
    v40 = v49;
    v41 = v50;
    sub_249DCA64C(v47, v48, v49, v50);
    sub_249F1FCB8();
    v39 = a2;
    v11 = v47;
    LOBYTE(v47) = 2;
    v12 = v11;
    v13 = v48;
    v44 = v50;
    v45 = v49;
    v46 = v51;
    sub_249DCA64C(v11, v48, v49, v50);
    v14 = sub_249F1FCD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v52 = v14 & 1;
    v37 = v10;
    v15 = v42;
    v17 = v40;
    v16 = v41;
    sub_249DCA64C(v10, v43, v40, v41);
    v18 = v12;
    v19 = v12;
    v38 = v12;
    v20 = v13;
    v21 = v13;
    v36 = v13;
    v23 = v44;
    v22 = v45;
    sub_249DCA64C(v19, v21, v45, v44);
    v24 = v18;
    v25 = v46;
    sub_249DC0768(v24, v20, v22, v23);
    v26 = v37;
    v27 = v43;
    sub_249DC0768(v37, v43, v17, v16);
    v29 = v38;
    v28 = v39;
    *v39 = v26;
    v28[1] = v27;
    v28[2] = v17;
    v28[3] = (uint64_t)v16;
    v28[4] = v15;
    v28[5] = v29;
    v30 = v36;
    v31 = v45;
    v28[6] = v36;
    v28[7] = v31;
    v28[8] = (uint64_t)v23;
    v28[9] = v25;
    *((_BYTE *)v28 + 80) = v52;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_249DC0768(v37, v43, v17, v16);
    v32 = v38;
    v33 = v30;
    v34 = v31;
    v35 = v23;
  }
  return sub_249DC0768(v32, v33, v34, v35);
}

uint64_t sub_249E0ACB4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x614D686374656B73;
  if (*v0 != 1)
    v1 = 0x6C42646C756F6873;
  if (*v0)
    return v1;
  else
    return 0x67616D4965736162;
}

uint64_t sub_249E0AD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249E0D1FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249E0AD44()
{
  sub_249E0CD70();
  return sub_249F20024();
}

uint64_t sub_249E0AD6C()
{
  sub_249E0CD70();
  return sub_249F20030();
}

uint64_t sub_249E0AD94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_249E0A924(a1, a2);
}

uint64_t sub_249E0ADA8(_QWORD *a1)
{
  return sub_249E0A758(a1);
}

uint64_t sub_249E0ADC0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(a4 + 72) = 0;
  *(_BYTE *)(a4 + 80) = 1;
  v8 = (int *)type metadata accessor for GenerationRecipe(0);
  v9 = a4 + v8[8];
  v10 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = a4 + v8[9];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a4 + v8[10];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a4 + v8[11];
  *(_WORD *)v13 = 773;
  *(_BYTE *)(v13 + 2) = 10;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + v8[12]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + v8[13]) = v14;
  v15 = a4 + v8[14];
  *(_QWORD *)(v15 + 32) = 0;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  v16 = a4 + v8[15];
  *(_QWORD *)(v16 + 32) = 0;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  v17 = a4 + v8[16];
  *(_QWORD *)(v17 + 32) = 0;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  v18 = a4 + v8[17];
  *(_QWORD *)(v18 + 32) = 0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  v19 = a4 + v8[18];
  *(_BYTE *)(v19 + 80) = 0;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)(v19 + 64) = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)v19 = 0u;
  *(_QWORD *)(a4 + v8[19]) = v14;
  v20 = (_OWORD *)(a4 + v8[20]);
  v20[2] = 0u;
  v20[3] = 0u;
  *v20 = 0u;
  v20[1] = 0u;
  v21 = v8[21];
  if (qword_2578D5D88 != -1)
    swift_once();
  v22 = (_QWORD *)(a4 + v21);
  v23 = *(_QWORD *)algn_2578FF438;
  v24 = qword_2578FF440;
  *v22 = qword_2578FF430;
  v22[1] = v23;
  v22[2] = v24;
  v25 = v8[22];
  *(_QWORD *)(a4 + v25) = sub_249DBFE38(v14);
  *(_BYTE *)(a4 + v8[23]) = 0;
  *(_BYTE *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_BYTE *)(a4 + 40) = 1;
  *(_QWORD *)(a4 + 48) = 1;
  *(_DWORD *)(a4 + 56) = 257;
  *(_WORD *)(a4 + 60) = 257;
  *(_BYTE *)(a4 + 62) = 0;
  *(_QWORD *)(a4 + 64) = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_249E0AFB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249E070F0(a1, a2);
}

uint64_t sub_249E0AFC4(_QWORD *a1)
{
  return sub_249E068B0(a1);
}

uint64_t sub_249E0AFD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ResolvedTextPrompt(uint64_t a1)
{
  return sub_249DC74D0(a1, qword_2578D9070);
}

unint64_t sub_249E0B01C()
{
  unint64_t result;

  result = qword_2578D8E40;
  if (!qword_2578D8E40)
  {
    result = MEMORY[0x24BD06528](&unk_249F276D4, &type metadata for GenerationRecipe.Error);
    atomic_store(result, (unint64_t *)&qword_2578D8E40);
  }
  return result;
}

uint64_t sub_249E0B060()
{
  return swift_deallocObject();
}

uint64_t sub_249E0B070()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E0B09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;

  return sub_249E09460(a1, a2, a3, a4, a5, a6, a7, *(_QWORD **)(v7 + 16), *(_QWORD *)(v7 + 24));
}

uint64_t sub_249E0B0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    sub_249DB673C(0, v4, 0);
    __asm { BR              X9 }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
  sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
  sub_249F1F280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_249E0B404()
{
  JUMPOUT(0x249E0B2F8);
}

void sub_249E0B4B0()
{
  JUMPOUT(0x249E0B2F8);
}

uint64_t sub_249E0B4D8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE0D00] - 8) + 8))();
  return a1;
}

unint64_t sub_249E0B50C()
{
  unint64_t result;

  result = qword_2578D8E80;
  if (!qword_2578D8E80)
  {
    result = MEMORY[0x24BD06528](&unk_249F2AC14, &type metadata for AugmentedPrompt.EntityUUIDAttribute);
    atomic_store(result, (unint64_t *)&qword_2578D8E80);
  }
  return result;
}

unint64_t sub_249E0B550()
{
  unint64_t result;

  result = qword_2578D8EA0;
  if (!qword_2578D8EA0)
  {
    result = MEMORY[0x24BD06528](&unk_249F27684, &type metadata for GenerationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8EA0);
  }
  return result;
}

unint64_t sub_249E0B594()
{
  unint64_t result;

  result = qword_2578D8EA8;
  if (!qword_2578D8EA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F28CE0, &type metadata for ImageProvenance.Generator);
    atomic_store(result, (unint64_t *)&qword_2578D8EA8);
  }
  return result;
}

unint64_t sub_249E0B5D8()
{
  unint64_t result;

  result = qword_2578D8EB0;
  if (!qword_2578D8EB0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2F928, &_s23GenerationConfigurationVN);
    atomic_store(result, (unint64_t *)&qword_2578D8EB0);
  }
  return result;
}

unint64_t sub_249E0B61C()
{
  unint64_t result;

  result = qword_2578D8ED0;
  if (!qword_2578D8ED0)
  {
    result = MEMORY[0x24BD06528](&unk_249F27634, &type metadata for GenerationRecipe.DrawOnImage);
    atomic_store(result, (unint64_t *)&qword_2578D8ED0);
  }
  return result;
}

uint64_t sub_249E0B660(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8ED8);
    v10 = sub_249D9BBEC(a2, type metadata accessor for Concept, a3);
    result = MEMORY[0x24BD06528](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E0B6E4()
{
  unint64_t result;

  result = qword_2578D8EF8;
  if (!qword_2578D8EF8)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ImageStyle, &type metadata for ImageStyle);
    atomic_store(result, (unint64_t *)&qword_2578D8EF8);
  }
  return result;
}

unint64_t sub_249E0B728()
{
  unint64_t result;

  result = qword_2578D8F08;
  if (!qword_2578D8F08)
  {
    result = MEMORY[0x24BD06528](&unk_249F27268, &type metadata for GenerationRecipe.ConditioningImageInfo);
    atomic_store(result, (unint64_t *)&qword_2578D8F08);
  }
  return result;
}

unint64_t sub_249E0B76C()
{
  unint64_t result;

  result = qword_2578D8F10;
  if (!qword_2578D8F10)
  {
    result = MEMORY[0x24BD06528](&unk_249F24490, &type metadata for DemographicDirectives);
    atomic_store(result, (unint64_t *)&qword_2578D8F10);
  }
  return result;
}

unint64_t sub_249E0B7B0()
{
  unint64_t result;

  result = qword_2578D8F18;
  if (!qword_2578D8F18)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PersonIndications, &type metadata for PersonIndications);
    atomic_store(result, (unint64_t *)&qword_2578D8F18);
  }
  return result;
}

unint64_t sub_249E0B7F4()
{
  unint64_t result;

  result = qword_2578D8F30;
  if (!qword_2578D8F30)
  {
    result = MEMORY[0x24BD06528](&unk_249F25D30, &type metadata for FaceAttributes.Source);
    atomic_store(result, (unint64_t *)&qword_2578D8F30);
  }
  return result;
}

unint64_t sub_249E0B838()
{
  unint64_t result;

  result = qword_2578D8F38;
  if (!qword_2578D8F38)
  {
    result = MEMORY[0x24BD06528](&unk_249F25D08, &type metadata for FaceAttributes);
    atomic_store(result, (unint64_t *)&qword_2578D8F38);
  }
  return result;
}

unint64_t sub_249E0B87C()
{
  unint64_t result;

  result = qword_2578D8F40;
  if (!qword_2578D8F40)
  {
    result = MEMORY[0x24BD06528](&unk_249F26D54, &type metadata for SmileySpotter.SpotResult);
    atomic_store(result, (unint64_t *)&qword_2578D8F40);
  }
  return result;
}

unint64_t sub_249E0B8C0()
{
  unint64_t result;

  result = qword_2578D8F50;
  if (!qword_2578D8F50)
  {
    result = MEMORY[0x24BD06528](&unk_249F28CB8, &type metadata for ImageProvenance.Generator);
    atomic_store(result, (unint64_t *)&qword_2578D8F50);
  }
  return result;
}

unint64_t sub_249E0B904()
{
  unint64_t result;

  result = qword_2578D8F58;
  if (!qword_2578D8F58)
  {
    result = MEMORY[0x24BD06528](&unk_249F2F900, &_s23GenerationConfigurationVN);
    atomic_store(result, (unint64_t *)&qword_2578D8F58);
  }
  return result;
}

uint64_t sub_249E0B948(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8EB8);
    v10 = sub_249D9BBEC(a2, type metadata accessor for ResolvedTextPrompt, a3);
    result = MEMORY[0x24BD06528](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E0B9CC()
{
  unint64_t result;

  result = qword_2578D8F70;
  if (!qword_2578D8F70)
  {
    result = MEMORY[0x24BD06528](&unk_249F275E4, &type metadata for GenerationRecipe.DrawOnImage);
    atomic_store(result, (unint64_t *)&qword_2578D8F70);
  }
  return result;
}

uint64_t sub_249E0BA10(uint64_t result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a4 != (void *)1)
  {
    sub_249DCA64C(result, a2, a3, a4);
    return sub_249DCA64C(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_249E0BA6C(uint64_t result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a4 != (void *)1)
  {
    sub_249DC0768(result, a2, a3, a4);
    return sub_249DC0768(a6, a7, a8, a9);
  }
  return result;
}

unint64_t sub_249E0BAC8()
{
  unint64_t result;

  result = qword_2578D8F90;
  if (!qword_2578D8F90)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for ImageStyle, &type metadata for ImageStyle);
    atomic_store(result, (unint64_t *)&qword_2578D8F90);
  }
  return result;
}

uint64_t sub_249E0BB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_249E0BB54()
{
  unint64_t result;

  result = qword_2578D8FA0;
  if (!qword_2578D8FA0)
  {
    result = MEMORY[0x24BD06528](&unk_249F27290, &type metadata for GenerationRecipe.ConditioningImageInfo);
    atomic_store(result, (unint64_t *)&qword_2578D8FA0);
  }
  return result;
}

unint64_t sub_249E0BB98()
{
  unint64_t result;

  result = qword_2578D8FA8;
  if (!qword_2578D8FA8)
  {
    result = MEMORY[0x24BD06528](&unk_249F24468, &type metadata for DemographicDirectives);
    atomic_store(result, (unint64_t *)&qword_2578D8FA8);
  }
  return result;
}

unint64_t sub_249E0BBDC()
{
  unint64_t result;

  result = qword_2578D8FB0;
  if (!qword_2578D8FB0)
  {
    result = MEMORY[0x24BD06528](&protocol conformance descriptor for PersonIndications, &type metadata for PersonIndications);
    atomic_store(result, (unint64_t *)&qword_2578D8FB0);
  }
  return result;
}

uint64_t sub_249E0BC20(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8F20);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x24BD06528](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E0BC9C()
{
  unint64_t result;

  result = qword_2578D8FC0;
  if (!qword_2578D8FC0)
  {
    result = MEMORY[0x24BD06528](&unk_249F25CE0, &type metadata for FaceAttributes.Source);
    atomic_store(result, (unint64_t *)&qword_2578D8FC0);
  }
  return result;
}

unint64_t sub_249E0BCE0()
{
  unint64_t result;

  result = qword_2578D8FC8;
  if (!qword_2578D8FC8)
  {
    result = MEMORY[0x24BD06528](&unk_249F25CB8, &type metadata for FaceAttributes);
    atomic_store(result, (unint64_t *)&qword_2578D8FC8);
  }
  return result;
}

unint64_t sub_249E0BD24()
{
  unint64_t result;

  result = qword_2578D8FD0;
  if (!qword_2578D8FD0)
  {
    result = MEMORY[0x24BD06528](&unk_249F26D2C, &type metadata for SmileySpotter.SpotResult);
    atomic_store(result, (unint64_t *)&qword_2578D8FD0);
  }
  return result;
}

unint64_t sub_249E0BD68()
{
  unint64_t result;

  result = qword_2578D8FE0;
  if (!qword_2578D8FE0)
  {
    result = MEMORY[0x24BD06528](&unk_249F27594, &type metadata for GenerationRecipe.ConditioningImageInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D8FE0);
  }
  return result;
}

unint64_t sub_249E0BDAC()
{
  unint64_t result;

  result = qword_2578D8FF8;
  if (!qword_2578D8FF8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2756C, &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace);
    atomic_store(result, (unint64_t *)&qword_2578D8FF8);
  }
  return result;
}

uint64_t sub_249E0BDF0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x24BD06528](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249E0BE54()
{
  unint64_t result;

  result = qword_2578D9010;
  if (!qword_2578D9010)
  {
    result = MEMORY[0x24BD06528](&unk_249F27544, &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace);
    atomic_store(result, (unint64_t *)&qword_2578D9010);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.ConditioningImageInfo.CodingKeys()
{
  return &type metadata for GenerationRecipe.ConditioningImageInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for GenerationRecipe.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationRecipe.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_249E0BF88 + 4 * byte_249F2707C[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_249E0BFBC + 4 * byte_249F27077[v4]))();
}

uint64_t sub_249E0BFBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E0BFC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E0BFCCLL);
  return result;
}

uint64_t sub_249E0BFD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E0BFE0);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_249E0BFE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E0BFEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.CodingKeys()
{
  return &type metadata for GenerationRecipe.CodingKeys;
}

uint64_t getEnumTagSinglePayload for GenerationRecipe.Error(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationRecipe.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.Error()
{
  return &type metadata for GenerationRecipe.Error;
}

ValueMetadata *type metadata accessor for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace()
{
  return &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace;
}

uint64_t destroy for GenerationRecipe.DrawOnImage(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = result;
  v2 = *(void **)(result + 24);
  if (v2)
  {

    result = swift_release();
  }
  v3 = *(void **)(v1 + 64);
  if (v3)
  {

    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for GenerationRecipe.DrawOnImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v11;
  id v12;
  __int128 v13;

  v4 = *(void **)(a2 + 24);
  if (v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    v6 = v4;
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v8 = (_OWORD *)(a1 + 40);
  v9 = (_OWORD *)(a2 + 40);
  v10 = *(void **)(a2 + 64);
  if (v10)
  {
    *v8 = *v9;
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    v11 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v11;
    v12 = v10;
    swift_retain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 56);
    *v8 = *v9;
    *(_OWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for GenerationRecipe.DrawOnImage(uint64_t a1, __int128 *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  _OWORD *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  __int128 v20;
  void *v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  v4 = *(void **)(a1 + 24);
  v5 = *((_QWORD *)a2 + 3);
  if (v4)
  {
    if (v5)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      v6 = (void *)*((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      v7 = v6;

      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(a1);
      v11 = *((_QWORD *)a2 + 4);
      v12 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 32) = v11;
    }
  }
  else
  {
    v8 = *a2;
    if (v5)
    {
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(_OWORD *)a1 = v8;
      v9 = (void *)*((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      v10 = v9;
      swift_retain();
    }
    else
    {
      v13 = a2[1];
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_OWORD *)a1 = v8;
      *(_OWORD *)(a1 + 16) = v13;
    }
  }
  v14 = (_OWORD *)(a1 + 40);
  v15 = (__int128 *)((char *)a2 + 40);
  v16 = *(void **)(a1 + 64);
  v17 = *((_QWORD *)a2 + 8);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      v18 = (void *)*((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 64) = v18;
      v19 = v18;

      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_249E0255C(a1 + 40);
      v23 = *((_QWORD *)a2 + 9);
      v24 = *(__int128 *)((char *)a2 + 56);
      *v14 = *v15;
      *(_OWORD *)(a1 + 56) = v24;
      *(_QWORD *)(a1 + 72) = v23;
    }
  }
  else
  {
    v20 = *v15;
    if (v17)
    {
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *v14 = v20;
      v21 = (void *)*((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 64) = v21;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      v22 = v21;
      swift_retain();
    }
    else
    {
      v25 = *(__int128 *)((char *)a2 + 56);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *v14 = v20;
      *(_OWORD *)(a1 + 56) = v25;
    }
  }
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for GenerationRecipe.DrawOnImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(void **)(a1 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;

      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_release();
      goto LABEL_6;
    }
    sub_249E0255C(a1);
  }
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
LABEL_6:
  v7 = *(void **)(a1 + 64);
  if (!v7)
  {
LABEL_10:
    v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(a2 + 64);
  if (!v8)
  {
    sub_249E0255C(a1 + 40);
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
LABEL_11:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationRecipe.DrawOnImage(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationRecipe.DrawOnImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.DrawOnImage()
{
  return &type metadata for GenerationRecipe.DrawOnImage;
}

uint64_t sub_249E0C568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_249E0C5A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249F1E650();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_249E0C5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_249E0C61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_249E0C660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_249E0C6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249F1E650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_249E0C6E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E0C6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedPrompt();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_249E0C730()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E0C73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AugmentedPrompt();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_249E0C77C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E650();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_249E0C7E8()
{
  unint64_t result;

  result = qword_2578D90A8;
  if (!qword_2578D90A8)
  {
    result = MEMORY[0x24BD06528](&unk_249F27464, &type metadata for GenerationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90A8);
  }
  return result;
}

unint64_t sub_249E0C830()
{
  unint64_t result;

  result = qword_2578D90B0;
  if (!qword_2578D90B0)
  {
    result = MEMORY[0x24BD06528](&unk_249F2751C, &type metadata for GenerationRecipe.ConditioningImageInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90B0);
  }
  return result;
}

unint64_t sub_249E0C878()
{
  unint64_t result;

  result = qword_2578D90B8;
  if (!qword_2578D90B8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2748C, &type metadata for GenerationRecipe.ConditioningImageInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90B8);
  }
  return result;
}

unint64_t sub_249E0C8C0()
{
  unint64_t result;

  result = qword_2578D90C0;
  if (!qword_2578D90C0)
  {
    result = MEMORY[0x24BD06528](&unk_249F274B4, &type metadata for GenerationRecipe.ConditioningImageInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90C0);
  }
  return result;
}

unint64_t sub_249E0C908()
{
  unint64_t result;

  result = qword_2578D90C8;
  if (!qword_2578D90C8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2739C, &type metadata for GenerationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90C8);
  }
  return result;
}

unint64_t sub_249E0C950()
{
  unint64_t result;

  result = qword_2578D90D0;
  if (!qword_2578D90D0)
  {
    result = MEMORY[0x24BD06528](&unk_249F273C4, &type metadata for GenerationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90D0);
  }
  return result;
}

uint64_t sub_249E0C994(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000249F355D0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

double sub_249E0CA18(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9118);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249E0CDB4();
  sub_249F1FFF4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for CGRect(0);
    sub_249D9BBEC(&qword_2578D9128, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_249F1FD00();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v2 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v2;
}

uint64_t sub_249E0CB78(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000017 && a2 == 0x8000000249F34A00 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249F355B0 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7061436567616D69 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249E0CCDC()
{
  unint64_t v0;

  v0 = sub_249F1FEE0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14)
    return 20;
  else
    return v0;
}

unint64_t sub_249E0CD2C()
{
  unint64_t result;

  result = qword_2578D90E0;
  if (!qword_2578D90E0)
  {
    result = MEMORY[0x24BD06528](&unk_249F279DC, &type metadata for ResolvedTextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90E0);
  }
  return result;
}

unint64_t sub_249E0CD70()
{
  unint64_t result;

  result = qword_2578D90F8;
  if (!qword_2578D90F8)
  {
    result = MEMORY[0x24BD06528](&unk_249F2798C, &type metadata for GenerationRecipe.DrawOnImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D90F8);
  }
  return result;
}

unint64_t sub_249E0CDB4()
{
  unint64_t result;

  result = qword_2578D9120;
  if (!qword_2578D9120)
  {
    result = MEMORY[0x24BD06528](&unk_249F2793C, &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9120);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace.CodingKeys()
{
  return &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace.CodingKeys;
}

uint64_t _s16VisualGeneration16GenerationRecipeV21ConditioningImageInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249E0CE58 + 4 * byte_249F27086[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249E0CE8C + 4 * byte_249F27081[v4]))();
}

uint64_t sub_249E0CE8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E0CE94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249E0CE9CLL);
  return result;
}

uint64_t sub_249E0CEA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249E0CEB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249E0CEB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249E0CEBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GenerationRecipe.DrawOnImage.CodingKeys()
{
  return &type metadata for GenerationRecipe.DrawOnImage.CodingKeys;
}

uint64_t _s16VisualGeneration16GenerationRecipeV21ConditioningImageInfoV24ImagePersonalizationFaceV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249E0CF18 + 4 * byte_249F2708B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249E0CF38 + 4 * byte_249F27090[v4]))();
}

_BYTE *sub_249E0CF18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249E0CF38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E0CF40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E0CF48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249E0CF50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249E0CF58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResolvedTextPrompt.CodingKeys()
{
  return &type metadata for ResolvedTextPrompt.CodingKeys;
}

unint64_t sub_249E0CF78()
{
  unint64_t result;

  result = qword_2578D9140;
  if (!qword_2578D9140)
  {
    result = MEMORY[0x24BD06528](&unk_249F277A4, &type metadata for ResolvedTextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9140);
  }
  return result;
}

unint64_t sub_249E0CFC0()
{
  unint64_t result;

  result = qword_2578D9148;
  if (!qword_2578D9148)
  {
    result = MEMORY[0x24BD06528](&unk_249F2785C, &type metadata for GenerationRecipe.DrawOnImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9148);
  }
  return result;
}

unint64_t sub_249E0D008()
{
  unint64_t result;

  result = qword_2578D9150;
  if (!qword_2578D9150)
  {
    result = MEMORY[0x24BD06528](&unk_249F27914, &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9150);
  }
  return result;
}

unint64_t sub_249E0D050()
{
  unint64_t result;

  result = qword_2578D9158;
  if (!qword_2578D9158)
  {
    result = MEMORY[0x24BD06528](&unk_249F27884, &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9158);
  }
  return result;
}

unint64_t sub_249E0D098()
{
  unint64_t result;

  result = qword_2578D9160;
  if (!qword_2578D9160)
  {
    result = MEMORY[0x24BD06528](&unk_249F278AC, &type metadata for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9160);
  }
  return result;
}

unint64_t sub_249E0D0E0()
{
  unint64_t result;

  result = qword_2578D9168;
  if (!qword_2578D9168)
  {
    result = MEMORY[0x24BD06528](&unk_249F277CC, &type metadata for GenerationRecipe.DrawOnImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9168);
  }
  return result;
}

unint64_t sub_249E0D128()
{
  unint64_t result;

  result = qword_2578D9170;
  if (!qword_2578D9170)
  {
    result = MEMORY[0x24BD06528](&unk_249F277F4, &type metadata for GenerationRecipe.DrawOnImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9170);
  }
  return result;
}

unint64_t sub_249E0D170()
{
  unint64_t result;

  result = qword_2578D9178;
  if (!qword_2578D9178)
  {
    result = MEMORY[0x24BD06528](&unk_249F27714, &type metadata for ResolvedTextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9178);
  }
  return result;
}

unint64_t sub_249E0D1B8()
{
  unint64_t result;

  result = qword_2578D9180;
  if (!qword_2578D9180)
  {
    result = MEMORY[0x24BD06528](&unk_249F2773C, &type metadata for ResolvedTextPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578D9180);
  }
  return result;
}

uint64_t sub_249E0D1FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x67616D4965736162 && a2 == 0xE900000000000065;
  if (v2 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D686374656B73 && a2 == 0xEA00000000006B73 || (sub_249F1FE2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C42646C756F6873 && a2 == 0xEB00000000646E65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t GeneratedImage.PNGRepresentationData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  CFMutableDataRef Mutable;
  __CFData *v15;
  __CFString *v16;
  CGImageDestination *v17;
  __CFData *v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_249F1EE0C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)v0;
  if (*(_BYTE *)(v0 + 8))
  {
    if (*(_BYTE *)(v0 + 8) == 1)
    {
      v6 = objc_allocWithZone(MEMORY[0x24BDBF648]);
      v7 = v5;
      v8 = objc_msgSend(v6, sel_init);
      objc_msgSend(v7, sel_extent);
      v9 = objc_msgSend(v8, sel_createCGImage_fromRect_, v7);

      if (!v9)
        return 0;
    }
    else
    {
      v10 = objc_allocWithZone(MEMORY[0x24BDBF660]);
      v11 = v5;
      v12 = objc_msgSend(v10, sel_initWithCVPixelBuffer_, v11);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
      objc_msgSend(v12, sel_extent);
      v9 = objc_msgSend(v13, sel_createCGImage_fromRect_, v12);

      if (!v9)
        return 0;
    }
  }
  else
  {
    v9 = v5;
  }
  Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
  {
LABEL_12:

    return 0;
  }
  v15 = Mutable;
  sub_249F1EE00();
  sub_249F1EDF4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16 = (__CFString *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v17 = CGImageDestinationCreateWithData(v15, v16, 1uLL, 0);

  if (!v17)
  {

    goto LABEL_12;
  }
  CGImageDestinationAddImage(v17, (CGImageRef)v9, 0);
  if (!CGImageDestinationFinalize(v17))
  {

    return 0;
  }
  v18 = v15;
  v19 = sub_249F1E83C();

  return v19;
}

void sub_249E0D5E0()
{
  __asm { BR              X11 }
}

uint64_t sub_249E0D634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = a1 + 4;
  sub_249F1F460();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_249E0D710()
{
  uint64_t v0;

  v0 = sub_249F1E584();
  MEMORY[0x24BDAC7A8](v0);
  sub_249F1E56C();
  sub_249E0D7BC();
  sub_249F1F4C0();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return 34;
}

unint64_t sub_249E0D7BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D73C8;
  if (!qword_2578D73C8)
  {
    v1 = sub_249F1E584();
    result = MEMORY[0x24BD06528](MEMORY[0x24BDCC2A8], v1);
    atomic_store(result, (unint64_t *)&qword_2578D73C8);
  }
  return result;
}

uint64_t sub_249E0D804()
{
  uint64_t v1;

  v1 = sub_249F2003C();
  sub_249F1F460();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return v1;
}

uint64_t sub_249E0D88C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityExtractor.GenericEntity()
{
  return objc_opt_self();
}

uint64_t sub_249E0D8D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 144))();
}

uint64_t sub_249E0D8F8()
{
  uint64_t v1;

  v1 = sub_249F2003C();
  sub_249F1F460();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_249E0DA10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_249E0DA18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityExtractor.NamedEntity()
{
  return objc_opt_self();
}

uint64_t sub_249E0DA64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E0DA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_249E0DAFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249E0DB08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_249F1E8D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for EntityExtractor.NamedEntity.EntityData()
{
  uint64_t result;

  result = qword_2578D93C8;
  if (!qword_2578D93C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E0DBBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for EntityExtractor(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for Image(id *a1)
{

}

void **assignWithCopy for EntityExtractor(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for EntityExtractor(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for EntityExtractor(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityExtractor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityExtractor()
{
  return &type metadata for EntityExtractor;
}

uint64_t sub_249E0DD80()
{
  uint64_t result;

  result = sub_249F1F304();
  qword_2578FF330 = result;
  return result;
}

uint64_t sub_249E0DDB4()
{
  uint64_t result;

  result = sub_249F1F304();
  qword_2578FF338 = result;
  return result;
}

uint64_t sub_249E0DDF0()
{
  uint64_t result;

  result = sub_249F1F304();
  qword_2578FF340 = result;
  return result;
}

uint64_t sub_249E0DE24()
{
  uint64_t result;

  result = sub_249E0DE40();
  qword_2578FF348 = result;
  return result;
}

uint64_t sub_249E0DE40()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;
  _BYTE v9[40];

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_249F1F304();
  v2 = objc_msgSend(v0, sel_copyDefaultOptionsForContext_, v1);

  v3 = sub_249F1F208();
  *((_QWORD *)&v7 + 1) = 0x8000000249F358E0;
  sub_249F1FA3C();
  v8 = MEMORY[0x24BEE1768];
  *(_QWORD *)&v7 = 5000;
  sub_249DCA678(&v7, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_249DD1FF8(v6, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_249DCA6C4((uint64_t)v9);
  return v3;
}

void sub_249E0DF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  if (a5)
  {
    v8 = (void *)sub_249F1F304();
    if (qword_2578D5D20 != -1)
      swift_once();
    v9 = (void *)sub_249F1F1F0();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a3;
    *(_QWORD *)(v10 + 24) = a4;
    v12[4] = sub_249E0E234;
    v12[5] = v10;
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 1107296256;
    v12[2] = sub_249E0E80C;
    v12[3] = &block_descriptor_0;
    v11 = _Block_copy(v12);
    swift_retain();
    swift_release();
    objc_msgSend(a5, sel_enumerateParseResultsForString_options_withBlock_, v8, v9, v11);
    _Block_release(v11);

  }
}

uint64_t sub_249E0E0AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v8 = objc_msgSend(a1, sel_length);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a4;
  v9[4] = a5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_249E0E8EC;
  *(_QWORD *)(v10 + 24) = v9;
  v14[4] = sub_249E0E908;
  v14[5] = v10;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_249E0E784;
  v14[3] = &block_descriptor_9;
  v11 = _Block_copy(v14);
  v12 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_enumerateAttributesInRange_options_usingBlock_, 0, v8, 0, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v8 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_249E0E210()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E0E234(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_249E0E0AC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_249E0E23C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  id v11;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  id v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  char v34;
  void *v35;
  void *v36;
  unsigned int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;

  if (*(_QWORD *)(result + 16))
  {
    v10 = result;
    if (qword_2578D5D10 != -1)
    {
      swift_once();
      if (!*(_QWORD *)(v10 + 16))
      {
        v48 = 0u;
        v49 = 0u;
        return sub_249DCC2FC((uint64_t)&v48, (uint64_t *)&unk_2578DD090);
      }
    }
    v11 = (id)qword_2578FF338;
    v12 = sub_249DB80D4();
    if ((v13 & 1) != 0)
    {
      sub_249DCA7E4(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v48);

      if (*((_QWORD *)&v49 + 1))
      {
        result = swift_dynamicCast();
        if ((result & 1) == 0)
          return result;
        if (qword_2578D5D18 != -1)
          swift_once();
        v44 = a6;
        if (*(_QWORD *)(v10 + 16))
        {
          v14 = (id)qword_2578FF340;
          v15 = sub_249DB80D4();
          if ((v16 & 1) != 0)
          {
            sub_249DCA7E4(*(_QWORD *)(v10 + 56) + 32 * v15, (uint64_t)&v48);
          }
          else
          {
            v48 = 0u;
            v49 = 0u;
          }

          if (*((_QWORD *)&v49 + 1))
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              sub_249E54DF8(v46, v47, (char *)&v48);
              v17 = v48;
              goto LABEL_21;
            }
LABEL_20:
            v17 = 3;
LABEL_21:
            v43 = v17;
            v18 = objc_msgSend(a5, sel_string);
            sub_249F1F328();

            v19 = objc_msgSend(a5, sel_string);
            sub_249F1F328();

            sub_249F1F79C();
            v21 = v20;
            result = swift_bridgeObjectRelease();
            if ((v21 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v22 = sub_249F1F4D8();
            v24 = v23;
            v26 = v25;
            v28 = v27;
            swift_bridgeObjectRelease();
            v42 = MEMORY[0x24BD04FE0](v22, v24, v26, v28);
            v45 = v29;
            swift_bridgeObjectRelease();
            v30 = (void *)sub_249F1F304();
            v31 = (void *)sub_249F1F304();
            LODWORD(v28) = objc_msgSend(v30, sel_isEqual_, v31);

            if (!(_DWORD)v28)
            {
              v35 = (void *)sub_249F1F304();
              swift_bridgeObjectRelease();
              v36 = (void *)sub_249F1F304();
              v37 = objc_msgSend(v35, sel_isEqual_, v36);

              if (!v37)
                return swift_bridgeObjectRelease();
              type metadata accessor for EntityExtractor.GenericEntity();
              v38 = swift_allocObject();
              *(_QWORD *)(v38 + 16) = v42;
              *(_QWORD *)(v38 + 24) = v45;
              *(_BYTE *)(v38 + 32) = v43;
              v44(a2, a3, v38);
              return swift_release();
            }
            swift_bridgeObjectRelease();
            if (qword_2578D5D08 != -1)
              swift_once();
            if (*(_QWORD *)(v10 + 16))
            {
              v32 = (id)qword_2578FF330;
              v33 = sub_249DB80D4();
              if ((v34 & 1) != 0)
              {
                sub_249DCA7E4(*(_QWORD *)(v10 + 56) + 32 * v33, (uint64_t)&v48);
              }
              else
              {
                v48 = 0u;
                v49 = 0u;
              }
              v39 = v44;

              if (*((_QWORD *)&v49 + 1))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9400);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  swift_bridgeObjectRetain();
                  v40 = sub_249E0E970(v46);
                  swift_bridgeObjectRelease();
                  if (v40)
                  {
                    type metadata accessor for EntityExtractor.NamedEntity();
                    v41 = swift_allocObject();
                    *(_QWORD *)(v41 + 40) = v40;
                    *(_QWORD *)(v41 + 16) = v42;
                    *(_QWORD *)(v41 + 24) = v45;
                    *(_BYTE *)(v41 + 32) = v43;
                    swift_bridgeObjectRelease();
LABEL_39:
                    v39(a2, a3, v41);
                    return swift_release();
                  }
                  swift_bridgeObjectRelease();
                }
LABEL_38:
                type metadata accessor for EntityExtractor.NamedEntity();
                v41 = swift_allocObject();
                *(_QWORD *)(v41 + 40) = MEMORY[0x24BEE4AF8];
                *(_QWORD *)(v41 + 16) = v42;
                *(_QWORD *)(v41 + 24) = v45;
                *(_BYTE *)(v41 + 32) = v43;
                goto LABEL_39;
              }
            }
            else
            {
              v48 = 0u;
              v49 = 0u;
              v39 = v44;
            }
            sub_249DCC2FC((uint64_t)&v48, (uint64_t *)&unk_2578DD090);
            goto LABEL_38;
          }
        }
        else
        {
          v48 = 0u;
          v49 = 0u;
        }
        sub_249DCC2FC((uint64_t)&v48, (uint64_t *)&unk_2578DD090);
        goto LABEL_20;
      }
    }
    else
    {
      v48 = 0u;
      v49 = 0u;

    }
    return sub_249DCC2FC((uint64_t)&v48, (uint64_t *)&unk_2578DD090);
  }
  return result;
}

uint64_t sub_249E0E784(uint64_t a1)
{
  void (*v1)(void);

  v1 = *(void (**)(void))(a1 + 32);
  type metadata accessor for Key(0);
  sub_249E0E928();
  sub_249F1F208();
  v1();
  return swift_bridgeObjectRelease();
}

void sub_249E0E80C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_249F1F208();
  swift_retain();
  v4 = a2;
  v3();
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_249E0E8C0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249E0E8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_249E0E23C(a1, a2, a3, a4, *(void **)(v4 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24));
}

uint64_t sub_249E0E8F8()
{
  return swift_deallocObject();
}

uint64_t sub_249E0E908()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_249E0E928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D5F68;
  if (!qword_2578D5F68)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x24BD06528](&unk_249F21644, v1);
    atomic_store(result, (unint64_t *)&qword_2578D5F68);
  }
  return result;
}

unint64_t sub_249E0E970(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  v2 = type metadata accessor for EntityExtractor.NamedEntity.EntityData();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249F1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(a1 + 16);
  if (v25)
  {
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = MEMORY[0x24BEE4AF8];
    v24 = 0x8000000249F35840;
    v23[0] = 0x8000000249F35860;
    v23[1] = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      v14 = *(_QWORD *)(a1 + 8 * v12 + 32);
      if (!*(_QWORD *)(v14 + 16))
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      swift_bridgeObjectRetain();
      v15 = sub_249DB7D8C(0xD000000000000018, v24);
      if ((v16 & 1) == 0
        || (sub_249DCA7E4(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v29), (swift_dynamicCast() & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
        return 0;
      }
      sub_249F1E89C();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249DCC2FC((uint64_t)v7, &qword_2578D6288);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (*(_QWORD *)(v14 + 16) && (v17 = sub_249DB7D8C(0xD000000000000018, v23[0]), (v18 & 1) != 0))
      {
        sub_249DCA7E4(*(_QWORD *)(v14 + 56) + 32 * v17, (uint64_t)&v29);
      }
      else
      {
        v29 = 0u;
        v30 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v30 + 1))
        break;
      if (!swift_dynamicCast())
        goto LABEL_15;
      v19 = v28;
LABEL_16:
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
      v4[*(int *)(v27 + 20)] = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_249DB2DBC(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      if (v21 >= v20 >> 1)
        v13 = sub_249DB2DBC(v20 > 1, v21 + 1, 1, v13);
      ++v12;
      *(_QWORD *)(v13 + 16) = v21 + 1;
      sub_249E0ED20((uint64_t)v4, v13+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v21);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if (v25 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    sub_249DCC2FC((uint64_t)&v29, (uint64_t *)&unk_2578DD090);
LABEL_15:
    v19 = 0;
    goto LABEL_16;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_249E0ED20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntityExtractor.NamedEntity.EntityData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E0ED70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t result;
  void (*v17)(char *, _BYTE *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _BYTE v21[40];
  uint64_t v22[3];
  __int128 v23;

  v18 = a2;
  v19 = a3;
  v6 = sub_249F1E8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249E0EFB8();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(v10 + 16 * v12 + 40);
      v14 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v13 + 16);
      v20 = *(_OWORD *)(v10 + 16 * v12 + 32);
      v15 = v20;
      if ((v14(a1, v20, v13) & 1) != 0)
        break;
      if (v11 == ++v12)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
    sub_249D9E1E4(v19, (uint64_t)v21);
    v17 = *(void (**)(char *, _BYTE *, uint64_t, uint64_t))(v13 + 24);
    v23 = v20;
    __swift_allocate_boxed_opaque_existential_1(v22);
    v17(v9, v21, v15, v13);
    sub_249D9E1E4((uint64_t)v22, a4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
LABEL_5:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_249E0EEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D60);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_249F234B0;
  v1 = type metadata accessor for ModelManagerDiffusionOperation(0);
  v2 = sub_249D9BBEC(qword_2578D8AC8, type metadata accessor for ModelManagerDiffusionOperation, (uint64_t)&unk_249F26360);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  v3 = type metadata accessor for InProcessDiffusionOperation(0);
  v4 = sub_249D9BBEC(&qword_2578D8AF8, type metadata accessor for InProcessDiffusionOperation, (uint64_t)&unk_249F26408);
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v4;
  v5 = type metadata accessor for InProcessWordCloudGeneratorOperation();
  v6 = sub_249D9BBEC(&qword_2578D9410, (uint64_t (*)(uint64_t))type metadata accessor for InProcessWordCloudGeneratorOperation, (uint64_t)&unk_249F2A49C);
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  v7 = type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation();
  result = sub_249D9BBEC(&qword_2578D9418, (uint64_t (*)(uint64_t))type metadata accessor for InProcessUnsupportedArchitectureGeneratorOperation, (uint64_t)&unk_249F2DE9C);
  *(_QWORD *)(v0 + 80) = v7;
  *(_QWORD *)(v0 + 88) = result;
  off_2578D9408 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_249E0EFB8()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v7;

  if (qword_2578D5D28 != -1)
    swift_once();
  v0 = off_2578D9408;
  v1 = *((_QWORD *)off_2578D9408 + 2);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v2 = 0;
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    v7 = v0[v2 + 2];
    if (((*(uint64_t (**)(void))(*(_QWORD *)(*((_QWORD *)&v0[v2 + 2] + 1) + 8) + 32))() & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_249DB6798(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v5 = *(_QWORD *)(v3 + 16);
      v4 = *(_QWORD *)(v3 + 24);
      if (v5 >= v4 >> 1)
        sub_249DB6798(v4 > 1, v5 + 1, 1);
      *(_QWORD *)(v3 + 16) = v5 + 1;
      *(_OWORD *)(v3 + 16 * v5 + 32) = v7;
    }
    ++v2;
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_249E0F0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (**v3)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v4 = *v3;
  sub_249D9E1E4(a3, (uint64_t)v14);
  v5 = v15;
  v6 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v8 = v15;
  v9 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v12 = v11 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v4(v7, v10, v12);
}

uint64_t destroy for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 8))
    result = swift_release();
  if (*(_QWORD *)(a1 + 48))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return result;
}

uint64_t initializeWithCopy for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  swift_retain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 48);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 40);
    *v7 = *v8;
    *(_OWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  v7 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 24, a2 + 24);
      return a1;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 24);
    v9 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 40) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

uint64_t assignWithTake for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters()
{
  return &type metadata for ImageGeneratingOperationGenerateImagesSequesteredLocalParameters;
}

_QWORD *initializeBufferWithCopyOfBuffer for ImageGeneratorDelegateOperationProgressHandler(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ImageGeneratorDelegateOperationProgressHandler()
{
  return swift_release();
}

_QWORD *assignWithCopy for ImageGeneratorDelegateOperationProgressHandler(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ImageGeneratorDelegateOperationProgressHandler(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGeneratorDelegateOperationProgressHandler(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageGeneratorDelegateOperationProgressHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGeneratorDelegateOperationProgressHandler()
{
  return &type metadata for ImageGeneratorDelegateOperationProgressHandler;
}

uint64_t getEnumTagSinglePayload for ImageGeneratingOperationProgress(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ImageGeneratingOperationProgress(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ImageGeneratingOperationProgress()
{
  return &type metadata for ImageGeneratingOperationProgress;
}

ValueMetadata *type metadata accessor for RecipePreparationSequence()
{
  return &type metadata for RecipePreparationSequence;
}

uint64_t sub_249E0F6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for GenerationRecipe(0);
  v3[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E0F718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  sub_249DFB638(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 48) = v2;
  if (v2)
  {
    v3 = *(_QWORD **)(v0 + 32);
    *(_QWORD *)(v0 + 56) = 0;
    v4 = v3 + 4;
    v5 = v3[7];
    v6 = v3[8];
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v4, v5);
    v9 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v7;
    *v7 = v0;
    v7[1] = sub_249E0F7E8;
    return v9(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), v5, v6);
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_249E0F7E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_249E0F854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 56) + 1;
  sub_249E0F9F8(v3);
  sub_249E0FA34(v2, v3);
  if (v4 == v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 56) + 1;
    *(_QWORD *)(v0 + 56) = v6;
    v7 = (_QWORD *)(*(_QWORD *)(v0 + 32) + 40 * v6);
    v8 = v7[7];
    v9 = v7[8];
    __swift_project_boxed_opaque_existential_1(v7 + 4, v8);
    v11 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v9 + 8) + *(_QWORD *)(v9 + 8));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v10;
    *v10 = v0;
    v10[1] = sub_249E0F7E8;
    return v11(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), v8, v9);
  }
}

uint64_t sub_249E0F950()
{
  uint64_t v0;

  sub_249E0F9F8(*(_QWORD *)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E0F990(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DAFCF8;
  return sub_249E0F6BC(a1, a2, v6);
}

uint64_t sub_249E0F9F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GenerationRecipe(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249E0FA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenerationRecipe(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentTask.emojiDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentTask.isCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall KeyboardEmojiGenerator.DescriptionAssignmentTask.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t KeyboardEmojiGenerator.DescriptionAssignmentTask.description.getter()
{
  sub_249F1FA84();
  swift_bridgeObjectRelease();
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  swift_bridgeObjectRetain();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  return 0xD00000000000001ALL;
}

uint64_t sub_249E0FC88(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v2;
  v4 = a2[1];
  *(_OWORD *)(v3 + 96) = *a2;
  *(_OWORD *)(v3 + 112) = v4;
  return swift_task_switch();
}

uint64_t sub_249E0FCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v9 = *(_OWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = v3 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask_id;
  sub_249F1E8D8();
  sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_249F1FE08();
  sub_249F1F460();
  swift_bridgeObjectRelease();
  sub_249F1F460();
  *(_QWORD *)(v0 + 128) = 0x206B736154;
  *(_QWORD *)(v0 + 136) = 0xE500000000000000;
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v5 + 16) = 0x206B736154;
  *(_QWORD *)(v5 + 24) = 0xE500000000000000;
  *(_QWORD *)(v5 + 32) = v3;
  *(_OWORD *)(v5 + 40) = v9;
  *(_QWORD *)(v5 + 56) = v2;
  *(_QWORD *)(v5 + 64) = v1;
  *(_QWORD *)(v5 + 72) = v4;
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v6;
  *(_QWORD *)(v6 + 16) = 0x206B736154;
  *(_QWORD *)(v6 + 24) = 0xE500000000000000;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v7;
  type metadata accessor for DefinitionSession();
  *v7 = v0;
  v7[1] = sub_249E0FE0C;
  return sub_249F1FE38();
}

uint64_t sub_249E0FE0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_249E0FEA4()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  void *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t *);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t *);
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  _QWORD *v42;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v1 = *(void **)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = (id *)(v0 + 32);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D64D0);
  if (swift_dynamicCast())
  {

    v4 = *(void **)(v0 + 16);
    v5 = *(unsigned __int8 *)(v0 + 24);
    if (qword_2578D5D78 != -1)
      swift_once();
    v6 = sub_249F1EF38();
    __swift_project_value_buffer(v6, (uint64_t)qword_2578FF3F0);
    swift_retain();
    sub_249E119FC(v4, v5);
    swift_retain();
    sub_249E119FC(v4, v5);
    swift_bridgeObjectRetain();
    v7 = sub_249F1EF20();
    v8 = sub_249F1F820();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 136);
    if (v9)
    {
      type = v8;
      v11 = *(_QWORD *)(v0 + 128);
      log = v7;
      v12 = *(_QWORD *)(v0 + 88);
      v13 = swift_slowAlloc();
      v42 = (_QWORD *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v47 = v46;
      *(_DWORD *)v13 = 136315651;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 56) = sub_249E68CA8(v11, v10, &v47);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2081;
      v14 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 64) = sub_249E68CA8(v14, v15, &v47);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v13 + 22) = 2113;
      sub_249E11A64();
      swift_allocError();
      *(_QWORD *)v16 = v4;
      *(_BYTE *)(v16 + 8) = v5;
      sub_249E119FC(v4, v5);
      v17 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 72) = v17;
      sub_249F1F9AC();
      *v42 = v17;
      sub_249E11A30(v4, v5);
      sub_249E11A30(v4, v5);
      _os_log_impl(&dword_249D98000, log, type, "%s rejected description \"%{private}s\" - %{private}@", (uint8_t *)v13, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v42, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v46, -1, -1);
      MEMORY[0x24BD06618](v13, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
      sub_249E11A30(v4, v5);
      sub_249E11A30(v4, v5);

    }
    v32 = *(void (**)(uint64_t, uint64_t *))(v0 + 96);
    if ((unint64_t)v32 >= 2)
    {
      v33 = *(_QWORD *)(v0 + 88);
      if (v5)
      {
        sub_249E11A64();
        v34 = (void *)swift_allocError();
        *(_QWORD *)v35 = v4;
        *(_BYTE *)(v35 + 8) = v5;
        v47 = (uint64_t)v34;
        v48 = 0;
        v49 = 3;
        sub_249E119FC(v4, v5);
        sub_249DC09B8((uint64_t)v32);
        v32(v33, &v47);
        sub_249DC0A2C((uint64_t)v32);

      }
      else
      {
        v47 = (uint64_t)v4;
        v48 = 0;
        v49 = 2;
        sub_249E119FC(v4, 0);
        sub_249DC09B8((uint64_t)v32);
        v32(v33, &v47);
        sub_249DC0A2C((uint64_t)v32);
        sub_249E11A30(v4, 0);
      }
    }
    sub_249E11A64();
    swift_allocError();
    *(_QWORD *)v40 = v4;
    *(_BYTE *)(v40 + 8) = v5;
    swift_willThrow();

  }
  else
  {

    if (qword_2578D5D40 != -1)
      swift_once();
    v18 = *(void **)(v0 + 168);
    v19 = sub_249F1EF38();
    __swift_project_value_buffer(v19, (uint64_t)qword_2578FF378);
    v20 = v18;
    v21 = v18;
    swift_bridgeObjectRetain();
    v22 = sub_249F1EF20();
    v23 = sub_249F1F820();
    v24 = os_log_type_enabled(v22, v23);
    v25 = *(void **)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 136);
    if (v24)
    {
      loga = *(os_log_t *)(v0 + 128);
      v27 = swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v47 = v29;
      *(_DWORD *)v27 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_249E68CA8((uint64_t)loga, v26, &v47);
      sub_249F1F9AC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2112;
      v30 = v25;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 48) = v31;
      sub_249F1F9AC();
      *v28 = v31;

      _os_log_impl(&dword_249D98000, v22, v23, "%s description rejected - %@", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v28, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v29, -1, -1);
      MEMORY[0x24BD06618](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v36 = *(void (**)(uint64_t, uint64_t *))(v0 + 96);
    if ((unint64_t)v36 >= 2)
    {
      v37 = *(void **)(v0 + 168);
      v38 = *(_QWORD *)(v0 + 88);
      v47 = (uint64_t)v37;
      v48 = 0;
      v49 = 3;
      v39 = v37;
      v36(v38, &v47);

    }
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E105C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[15] = a8;
  v8[16] = v11;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  v8[9] = a2;
  v8[10] = a3;
  v8[8] = a1;
  type metadata accessor for DefinitionSession();
  v8[17] = swift_task_alloc();
  v9 = sub_249F1E8D8();
  v8[18] = v9;
  v8[19] = *(_QWORD *)(v9 - 8);
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E10654()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_signpost_type_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  os_signpost_id_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void *v54;
  Swift::String v55;
  Swift::Bool v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t *);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  os_signpost_type_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t *);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;

  if (qword_2578D5D40 != -1)
    swift_once();
  v1 = sub_249F1EF38();
  *(_QWORD *)(v0 + 168) = __swift_project_value_buffer(v1, (uint64_t)qword_2578FF378);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v2 = sub_249F1EF20();
  v3 = sub_249F1F82C();
  v4 = os_log_type_enabled(v2, v3);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  if (v4)
  {
    v7 = *(_QWORD *)(v0 + 72);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v84 = v9;
    *(_DWORD *)v8 = 136315395;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_249E68CA8(v7, v6, &v84);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2081;
    v10 = *(_QWORD *)(v5 + 16);
    v11 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_249E68CA8(v10, v11, &v84);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_249D98000, v2, v3, "%s assigning description \"%{private}s\"", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v9, -1, -1);
    MEMORY[0x24BD06618](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  v12 = *(void (**)(uint64_t, uint64_t *))(v0 + 96);
  if ((unint64_t)v12 >= 2)
  {
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v13 + 24);
    v84 = *(_QWORD *)(v13 + 16);
    v85 = v14;
    LOBYTE(v86) = 0;
    swift_bridgeObjectRetain();
    v12(v13, &v84);
    swift_bridgeObjectRelease();
  }
  v15 = sub_249F1EE9C();
  *(_QWORD *)(v0 + 176) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v0 + 184) = v16;
  v80 = v16;
  v82 = v15;
  v17 = swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v17;
  if (qword_2578D5D80 != -1)
    swift_once();
  v19 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 128);
  v22 = sub_249F1EED8();
  __swift_project_value_buffer(v22, (uint64_t)qword_2578FF408);
  sub_249F1EEC0();
  sub_249F1EE78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v21, v20);
  swift_retain_n();
  v23 = sub_249F1EEC0();
  v24 = sub_249F1F8A4();
  v25 = sub_249F1F958();
  v27 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 144);
  v29 = v17;
  v30 = *(_QWORD *)(v0 + 88);
  v78 = v12;
  if ((v25 & 1) != 0)
  {
    v77 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v77, v29, v82);
    v31 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    v84 = v76;
    *(_DWORD *)v31 = 136446467;
    sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v32 = sub_249F1FE08();
    v75 = v24;
    *(_QWORD *)(v0 + 32) = sub_249E68CA8(v32, v33, &v84);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    *(_WORD *)(v31 + 12) = 2081;
    v34 = *(_QWORD *)(v30 + 16);
    v35 = *(_QWORD *)(v30 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_249E68CA8(v34, v35, &v84);
    sub_249F1F9AC();
    v36 = v80;
    swift_bridgeObjectRelease();
    swift_release_n();
    v37 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v23, v75, v37, "assignEmojiDescriptionTask", "%{public}s %{private}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v76, -1, -1);
    MEMORY[0x24BD06618](v31, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v77, v82);
    swift_task_dealloc();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    swift_release_n();
    v36 = v80;
  }
  v38 = *(_QWORD *)(v0 + 88);
  swift_task_alloc();
  (*(void (**)(void))(v36 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 200) = sub_249F1EEFC();
  swift_task_dealloc();
  v39 = (_QWORD *)(v38
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller);
  v40 = *(_QWORD *)(v38
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller
                  + 24);
  v41 = *(_QWORD *)(v38
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller
                  + 32);
  __swift_project_boxed_opaque_existential_1(v39, v40);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41) & 1) != 0)
  {
    sub_249F1F5D4();
    sub_249D9BBEC((unint64_t *)&qword_2578D6E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_249F1F1E4();
    swift_willThrow();
LABEL_16:
    v42 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 184);
    sub_249DDDF68("assignEmojiDescriptionTask", 26, 2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_249F1F670();
  v46 = *(_QWORD *)(v0 + 88);
  v47 = (unsigned __int8 *)(v46
                          + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__assignmentOptions);
  v48 = type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(0);
  v49 = v48;
  if (v47[*(int *)(v48 + 28)] != 1)
    goto LABEL_22;
  v50 = &v47[*(int *)(v48 + 32)];
  v51 = *((_QWORD *)v50 + 1);
  v52 = *((_DWORD *)v50 + 4);
  v84 = *(_QWORD *)v50;
  v85 = v51;
  v86 = v52;
  v53 = *(_QWORD *)(v46 + 16);
  v54 = *(void **)(v46 + 24);
  swift_bridgeObjectRetain();
  v55._countAndFlagsBits = v53;
  v55._object = v54;
  v56 = LanguageCheckingParameters.check(text:)(v55);
  swift_bridgeObjectRelease();
  if (v57)
    goto LABEL_16;
  if (v56)
  {
    if (v78 != (void (*)(uint64_t, uint64_t *))1)
    {
LABEL_26:
      v79 = v49;
      v58 = *(_QWORD *)(v0 + 112);
      v59 = *(_QWORD *)(v0 + 120);
      goto LABEL_27;
    }
  }
  else
  {
LABEL_22:
    if (v78 != (void (*)(uint64_t, uint64_t *))1)
    {
      v60 = *(void (**)(uint64_t, uint64_t *))(v0 + 96);
      if (v60)
      {
        v61 = *(_QWORD *)(v0 + 88);
        v84 = 0;
        v85 = 0;
        LOBYTE(v86) = 5;
        v60(v61, &v84);
      }
      goto LABEL_26;
    }
  }
  v79 = v49;
  v58 = 0;
  v59 = 0;
LABEL_27:
  *(_QWORD *)(v0 + 208) = v58;
  *(_QWORD *)(v0 + 216) = v59;
  v62 = *(_QWORD *)(v0 + 136);
  v64 = *(_QWORD *)(v0 + 112);
  v63 = *(_QWORD *)(v0 + 120);
  v81 = v58;
  v66 = *(_QWORD *)(v0 + 96);
  v65 = *(_QWORD *)(v0 + 104);
  v67 = *(_QWORD *)(v0 + 88);
  v68 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 224) = v68;
  v68[2] = v66;
  v68[3] = v65;
  v68[4] = v64;
  v68[5] = v63;
  v68[6] = v67;
  v69 = *v47;
  v70 = 2;
  if (*v47)
    v70 = 3;
  if (v47[1])
    v69 = v70;
  v83 = v69;
  sub_249DC091C(v67 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__definitionSession, v62, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  v71 = *(_QWORD *)(v67 + 16);
  *(_QWORD *)(v0 + 232) = v71;
  v72 = *(_QWORD *)(v67 + 24);
  *(_QWORD *)(v0 + 240) = v72;
  v73 = (uint64_t)&v47[*(int *)(v79 + 24)];
  swift_retain();
  sub_249DC09B8(v81);
  sub_249E11B04(v66, v65, v64);
  v74 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v74;
  *v74 = v0;
  v74[1] = sub_249E10EC8;
  return sub_249E9A8CC(v71, v72, v73, (uint64_t)sub_249E11AF4, (uint64_t)v68, v81, v59, v83);
}

uint64_t sub_249E10EC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E10F2C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[2];
  char v18;

  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v1 = sub_249F1EF20();
  v2 = sub_249F1F82C();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = *(_QWORD *)(v0 + 232);
    v3 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v17[0] = v8;
    *(_DWORD *)v7 = 136315395;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_249E68CA8(v6, v5, v17);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_249E68CA8(v4, v3, v17);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_249D98000, v1, v2, "%s accepted description \"%{private}s\"", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v8, -1, -1);
    MEMORY[0x24BD06618](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  v9 = *(void (**)(uint64_t, uint64_t *))(v0 + 96);
  if ((unint64_t)v9 >= 2)
  {
    v10 = *(_QWORD *)(v0 + 240);
    v11 = *(_QWORD *)(v0 + 88);
    v17[0] = *(_QWORD *)(v0 + 232);
    v17[1] = v10;
    v18 = 4;
    swift_bridgeObjectRetain();
    v9(v11, v17);
    swift_bridgeObjectRelease();
  }
  v12 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 176);
  sub_249DEA908(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 64));
  swift_release();
  sub_249DC0A2C(v12);
  sub_249DDDF68("assignEmojiDescriptionTask", 26, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E111C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 208);
  sub_249DC05A8(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  swift_release();
  sub_249DC0A2C(v1);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  sub_249DDDF68("assignEmojiDescriptionTask", 26, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_249E1128C(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  int v15;
  uint8_t *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint8_t *v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;

  v41 = type metadata accessor for Concept(0);
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D40 != -1)
    swift_once();
  v13 = sub_249F1EF38();
  __swift_project_value_buffer(v13, (uint64_t)qword_2578FF378);
  swift_bridgeObjectRetain_n();
  v14 = sub_249F1EF20();
  v15 = sub_249F1F82C();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v38 = v15;
    v40 = v14;
    v16 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v43 = v37;
    v39 = v16;
    *(_DWORD *)v16 = 136315138;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = MEMORY[0x24BEE4AF8];
    if (v17)
    {
      v33 = a3;
      v34 = a2;
      v35 = a6;
      v42 = MEMORY[0x24BEE4AF8];
      sub_249DB673C(0, v17, 0);
      v19 = *(unsigned __int8 *)(v10 + 80);
      v36 = a1;
      v20 = a1 + ((v19 + 32) & ~v19);
      v21 = *(_QWORD *)(v10 + 72);
      do
      {
        sub_249DC091C(v20, (uint64_t)v12, type metadata accessor for Concept);
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_249F1FB98();
        v22 = v44;
        v23 = v45;
        sub_249DC05A8((uint64_t)v12, type metadata accessor for Concept);
        v18 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249DB673C(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v42;
        }
        v25 = *(_QWORD *)(v18 + 16);
        v24 = *(_QWORD *)(v18 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_249DB673C(v24 > 1, v25 + 1, 1);
          v18 = v42;
        }
        *(_QWORD *)(v18 + 16) = v25 + 1;
        v26 = v18 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v22;
        *(_QWORD *)(v26 + 40) = v23;
        v20 += v21;
        --v17;
      }
      while (v17);
      a6 = v35;
      a1 = v36;
      a2 = v34;
    }
    v27 = v39;
    v44 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
    sub_249E11B3C();
    v28 = sub_249F1F280();
    v30 = v29;
    swift_bridgeObjectRelease();
    v44 = sub_249E68CA8(v28, v30, &v43);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v31 = v40;
    _os_log_impl(&dword_249D98000, v40, (os_log_type_t)v38, "description concepts %s", v27, 0xCu);
    v32 = v37;
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v32, -1, -1);
    MEMORY[0x24BD06618](v27, -1, -1);

    if ((unint64_t)a2 >= 2)
      goto LABEL_15;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((unint64_t)a2 >= 2)
    {
LABEL_15:
      v44 = a1;
      v45 = 0;
      v46 = 1;
      swift_bridgeObjectRetain();
      a2(a6, &v44);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__assignmentOptions, type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  return v0;
}

uint64_t KeyboardEmojiGenerator.DescriptionAssignmentTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask_id;
  v2 = sub_249F1E8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__definitionSession, (uint64_t (*)(_QWORD))type metadata accessor for DefinitionSession);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller);
  sub_249DC05A8(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__assignmentOptions, type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions);
  return swift_deallocClassInstance();
}

uint64_t sub_249E1174C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask_id;
  v4 = sub_249F1E8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249E11794()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_249E117E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator25DescriptionAssignmentTask__sendableCanceller);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_249E11838()
{
  return KeyboardEmojiGenerator.DescriptionAssignmentTask.description.getter();
}

uint64_t sub_249E11858()
{
  return type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentTask();
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentTask()
{
  uint64_t result;

  result = qword_2578D9470;
  if (!qword_2578D9470)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249E1189C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_249F1E8D8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for KeyboardEmojiGenerator.DescriptionAssignmentOptions(319);
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for KeyboardEmojiGenerator.DescriptionAssignmentTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_249E1195C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_249DAFCF8;
  return sub_249E105C0(a1, v4, v5, v6, v7, v8, v9, v10);
}

id sub_249E119FC(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 2:
    case 3:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_249E11A30(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 1:

      break;
    default:
      return;
  }
}

unint64_t sub_249E11A64()
{
  unint64_t result;

  result = qword_2578D9530;
  if (!qword_2578D9530)
  {
    result = MEMORY[0x24BD06528](&unk_249F27EC0, &type metadata for GoalValidator.Error);
    atomic_store(result, (unint64_t *)&qword_2578D9530);
  }
  return result;
}

uint64_t sub_249E11AA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    if (v1 == 1)
      goto LABEL_6;
    swift_release();
  }
  if (*(_QWORD *)(v0 + 32))
    swift_release();
LABEL_6:
  swift_release();
  return swift_deallocObject();
}

void sub_249E11AF4(uint64_t a1)
{
  uint64_t v1;

  sub_249E1128C(a1, *(void (**)(_QWORD, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_249E11B04(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    sub_249DC09B8(result);
    return sub_249DC09B8(a3);
  }
  return result;
}

unint64_t sub_249E11B3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578D8E38;
  if (!qword_2578D8E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578D8E30);
    result = MEMORY[0x24BD06528](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2578D8E38);
  }
  return result;
}

void sub_249E11B88(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_249E11BE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + 189) = a7;
  *(_QWORD *)(v8 + 120) = a6;
  *(_QWORD *)(v8 + 128) = v7;
  *(_BYTE *)(v8 + 188) = a4;
  *(_QWORD *)(v8 + 104) = a3;
  *(_QWORD *)(v8 + 112) = a5;
  *(_QWORD *)(v8 + 88) = a1;
  *(_QWORD *)(v8 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_249E11C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  void **p_ivar_lyt;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void **v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint8_t *v27;
  unsigned int v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t *boxed_opaque_existential_1;
  id v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  id v48;
  id v49;

  if (qword_2578D5D80 != -1)
    swift_once();
  v1 = sub_249F1EED8();
  __swift_project_value_buffer(v1, (uint64_t)qword_2578FF408);
  v2 = sub_249F1EE9C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  sub_249F1EE90();
  v5 = sub_249F1EEC0();
  v6 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v7 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v4, v2);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v5, v6, v9, "fetchConditioning", "", v8, 2u);
    MEMORY[0x24BD06618](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    swift_task_dealloc();
  }
  else
  {

  }
  swift_task_alloc();
  (*(void (**)(void))(v3 + 16))();
  sub_249F1EF08();
  swift_allocObject();
  *(_QWORD *)(v0 + 136) = sub_249F1EEFC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  p_ivar_lyt = &HEDEdgeDetector.ivar_lyt;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE642A0]), sel_init);
  *(_QWORD *)(v0 + 144) = v11;
  type metadata accessor for AppleDiffusionResourceFactory(0);
  static AppleDiffusionResourceFactory.shared()();
  if ((AppleDiffusionResourceFactory.imageClipEncoderVersion.getter() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v13 = 5;
  }
  else
  {
    v12 = sub_249F1FE2C();
    swift_bridgeObjectRelease();
    swift_release();
    if ((v12 & 1) != 0)
      v13 = 5;
    else
      v13 = 3;
  }
  v14 = *(unsigned __int8 *)(v0 + 188);
  objc_msgSend(v11, sel_setRevision_, v13);
  objc_msgSend(v11, sel_setBypassFaceDetection_, v14);
  if (qword_2578D5D78 != -1)
    swift_once();
  v15 = sub_249F1EF38();
  __swift_project_value_buffer(v15, (uint64_t)qword_2578FF3F0);
  v16 = v11;
  v17 = sub_249F1EF20();
  v18 = sub_249F1F814();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 67109120;
    *(_DWORD *)(v0 + 184) = objc_msgSend(v16, sel_bypassFaceDetection);
    p_ivar_lyt = (void **)(&HEDEdgeDetector + 16);
    sub_249F1F9AC();

    _os_log_impl(&dword_249D98000, v17, v18, "MADMultiModalInput construction: bypassFaceDetection set to %{BOOL}d", v19, 8u);
    MEMORY[0x24BD06618](v19, -1, -1);
  }
  else
  {

  }
  v20 = (void **)(v0 + 80);

  v21 = *(_QWORD *)(v0 + 104);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE64278]), (SEL)p_ivar_lyt[446]);
  *(_QWORD *)(v0 + 152) = v22;
  if (v21)
  {
    v23 = *(id *)(v0 + 104);
    v24 = sub_249F1EF20();
    v25 = sub_249F1F814();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_249D98000, v24, v25, "MADMultiModalInput construction: added a conditioning image", v26, 2u);
      v27 = v26;
      v20 = (void **)(v0 + 80);
      MEMORY[0x24BD06618](v27, -1, -1);
    }

    *v20 = 0;
    v28 = objc_msgSend(v22, sel_addPixelBuffer_error_, v23, v20);
    v29 = *v20;
    if (!v28)
    {
      v36 = v29;
      sub_249F1E710();

      swift_willThrow();
      sub_249E13B4C("fetchConditioning", 17, 2);
      swift_release();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v30 = v29;

  }
  v48 = v16;
  v32 = *(_QWORD *)(v0 + 112);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  v34 = *(_BYTE *)(v0 + 189) & 1;
  v49 = v22;
  *(_QWORD *)(v0 + 40) = type metadata accessor for AugmentedPrompt();
  *(_QWORD *)(v0 + 48) = sub_249D9BBEC(&qword_2578D9618, (uint64_t (*)(uint64_t))type metadata accessor for AugmentedPrompt, (uint64_t)&unk_249F2ABEC);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  sub_249DC091C(v33, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v38 = sub_249E14DB0(v22, (_QWORD *)(v0 + 16), v32, v31, v34);
  v39 = *(_QWORD *)(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v40 = v38[2];
  v41 = v39 - v40;
  if (__OFSUB__(v39, v40))
    __break(1u);
  swift_bridgeObjectRetain();
  v42 = sub_249F1EF20();
  v43 = sub_249F1F814();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    *(_DWORD *)v44 = 134283777;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 64) = v40;
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2049;
    *(_QWORD *)(v0 + 72) = v41;
    sub_249F1F9AC();
    MEMORY[0x24BD06618](v44, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v45 = *(_QWORD *)(v0 + 128);
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v46;
  v46[2] = v45;
  v46[3] = v48;
  v46[4] = v49;
  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v47;
  sub_249D9D9F4(0, &qword_2578D9620);
  *v47 = v0;
  v47[1] = sub_249E123D8;
  return sub_249F1FEEC();
}

uint64_t sub_249E123D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E12490()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(void);
  id v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  id v31;
  void *v32;
  unint64_t v33;

  v1 = (void *)v0[7];
  v2 = objc_msgSend(v1, sel_hiddenLayer);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v1, sel_pooledEmbedding);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v1, sel_embedding);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, sel_shape);
        sub_249D9D9F4(0, (unint64_t *)&qword_2578D9630);
        v9 = sub_249F1F544();

        v10 = sub_249E14618(v9);
        swift_bridgeObjectRelease();
        if (!v10)
        {
          v27 = (void *)v0[18];
          v26 = (void *)v0[19];
          sub_249E176C0();
          swift_allocError();
          *(_QWORD *)v28 = 0xD000000000000033;
          *(_QWORD *)(v28 + 8) = 0x8000000249F35AE0;
          *(_BYTE *)(v28 + 16) = 5;
          swift_willThrow();

          v5 = v3;
          v3 = v1;
          goto LABEL_12;
        }
        v11 = objc_msgSend(v7, sel_data);
        v12 = sub_249F1E83C();
        v33 = v13;

      }
      else
      {
        v12 = 0;
        v33 = 0;
        v10 = 0;
      }
      v17 = v0[22];
      v18 = sub_249E17704(v3);
      if (!v17)
      {
        v23 = v18;
        v24 = sub_249E17704(v5);
        v25 = (void *)v0[18];
        v32 = (void *)v0[19];
        v29 = v0[11];
        v31 = v24;
        v30 = objc_msgSend(v1, sel_personalized);

        sub_249E13B4C("fetchConditioning", 17, 2);
        swift_release();
        *(_QWORD *)v29 = v23;
        *(_QWORD *)(v29 + 8) = v31;
        *(_QWORD *)(v29 + 16) = v12;
        *(_QWORD *)(v29 + 24) = v33;
        *(_QWORD *)(v29 + 32) = v10;
        *(_BYTE *)(v29 + 40) = v30;
        v21 = (uint64_t (*)(void))v0[1];
        return v21();
      }
      v20 = (void *)v0[18];
      v19 = (void *)v0[19];
      sub_249DFF634(v12, v33, v10);

    }
    else
    {
      v15 = (void *)v0[18];
      v5 = (void *)v0[19];
      sub_249E176C0();
      swift_allocError();
      *(_QWORD *)v16 = 0xD000000000000019;
      *(_QWORD *)(v16 + 8) = 0x8000000249F35AC0;
      *(_BYTE *)(v16 + 16) = 5;
      swift_willThrow();

    }
  }
  else
  {
    v5 = (void *)v0[18];
    v3 = (void *)v0[19];
    sub_249E176C0();
    swift_allocError();
    *(_QWORD *)v14 = 0xD000000000000015;
    *(_QWORD *)(v14 + 8) = 0x8000000249F35AA0;
    *(_BYTE *)(v14 + 16) = 5;
    swift_willThrow();
  }
  v7 = v1;
LABEL_12:

  sub_249E13B4C("fetchConditioning", 17, 2);
  swift_release();
  v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_249E1286C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  swift_task_dealloc();
  sub_249E13B4C("fetchConditioning", 17, 2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E12904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v3[7] = type metadata accessor for GenerationRecipe(0);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E129A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;

  v1 = v0[9];
  v2 = v0[3];
  v3 = *((_QWORD *)sub_249E91414() + 2);
  swift_bridgeObjectRelease();
  sub_249DC091C(v2, v1, type metadata accessor for GenerationRecipe);
  v4 = v0[9];
  if (v3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v4 + 64) + 16);
    sub_249DC05A8(v4, type metadata accessor for GenerationRecipe);
    if (!v5)
    {
      v6 = v0[3];
      v8 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      sub_249DD9530();
      swift_allocError();
      *(_QWORD *)v9 = v8;
      *(_QWORD *)(v9 + 8) = v7;
      *(_QWORD *)(v9 + 16) = 0;
      *(_BYTE *)(v9 + 24) = 3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v10 = (uint64_t (*)(void))v0[1];
      return v10();
    }
  }
  else
  {
    sub_249DC05A8(v4, type metadata accessor for GenerationRecipe);
  }
  v11 = v0[6];
  sub_249E14D40(v0[3] + *(int *)(v0[7] + 32), v11);
  v12 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v0[10] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v0[11] = v13;
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  sub_249DCC2FC(v11, &qword_2578D67E0);
  if (v14 == 1)
  {
    sub_249DC091C(v0[3], v0[8], type metadata accessor for GenerationRecipe);
    v15 = (_QWORD *)swift_task_alloc();
    v0[12] = v15;
    *v15 = v0;
    v15[1] = sub_249E12B98;
    return sub_249E12D04(v0[5], v0[8]);
  }
  sub_249DC091C(v0[3], v0[2], type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_249E12B98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E12BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(v3, 0, 1, *(_QWORD *)(v0 + 80));
  sub_249E0BB0C(v3, v1 + *(int *)(v2 + 32));
  sub_249D9E308(v1, v4, type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E12C9C()
{
  uint64_t v0;

  sub_249DC05A8(*(_QWORD *)(v0 + 64), type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E12D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v3[19] = *(_QWORD *)(type metadata accessor for ResolvedTextPrompt(0) - 8);
  v3[20] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67D8);
  v3[21] = v4;
  v3[22] = *(_QWORD *)(v4 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = *(_QWORD *)(type metadata accessor for AugmentedPrompt() - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E12E1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  BOOL v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_249E030D8(v0[33]);
  v1 = v0[17];
  v2 = type metadata accessor for GenerationRecipe(0);
  v0[34] = v2;
  v3 = v1 + *(int *)(v2 + 80);
  v4 = *(void **)(v3 + 24);
  v0[35] = v4;
  if (!v4)
    goto LABEL_6;
  if ((*(_BYTE *)(v1 + 60) & 1) == 0)
  {
    v10 = v4;
LABEL_6:
    sub_249DC091C(v0[33], v0[32], (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    goto LABEL_7;
  }
  v5 = v0[32];
  v6 = v0[33];
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 40) + 16);
  v8 = v4;
  sub_249DC091C(v6, v5, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  if (v7)
  {
    v9 = sub_249E570FC();
    goto LABEL_8;
  }
LABEL_7:
  v9 = 1;
LABEL_8:
  v11 = v0[17];
  sub_249DC05A8(v0[32], (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  if ((*(_BYTE *)(v11 + 80) & 1) != 0)
  {
    v12 = 0;
    v14 = 1;
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(_QWORD *)(v0[17] + 64);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain_n();
    __asm { BR              X9 }
  }
  if ((v12 & 0x8000000000000000) == 0)
  {
    v14 = 0;
LABEL_14:
    v15 = swift_task_alloc();
    v0[36] = v15;
    *(_QWORD *)v15 = v0;
    *(_QWORD *)(v15 + 8) = sub_249E13180;
    v16 = v0[33];
    v17 = v0[18];
    *(_BYTE *)(v15 + 189) = v14;
    *(_QWORD *)(v15 + 120) = v12;
    *(_QWORD *)(v15 + 128) = v17;
    *(_BYTE *)(v15 + 188) = v9;
    *(_QWORD *)(v15 + 104) = v4;
    *(_QWORD *)(v15 + 112) = 1;
    *(_QWORD *)(v15 + 88) = v0 + 2;
    *(_QWORD *)(v15 + 96) = v16;
    return swift_task_switch();
  }
  return sub_249F1FBC8();
}

uint64_t sub_249E13180()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;

  v2 = *v1;
  *(_QWORD *)(v2 + 296) = v0;
  v3 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 304) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 320) = v3;
  *(_QWORD *)(v2 + 336) = *(_QWORD *)(v2 + 48);
  *(_BYTE *)(v2 + 57) = *(_BYTE *)(v2 + 56);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_249E131FC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v2 = (void *)v0[38];
  v1 = (void *)v0[39];
  v3 = v0[34];
  v4 = v0[17];
  v0[43] = sub_249DDFC68((unint64_t *)&qword_2578D95F8, &qword_2578D67D8, MEMORY[0x24BDBFCD0]);
  v5 = v2;
  sub_249F1F04C();
  v6 = v1;
  sub_249F1F04C();
  v7 = *(_QWORD *)(v4 + *(int *)(v3 + 52));
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v10 = v0[29];
    v11 = v0[19];
    v34 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_249DB67B4(0, v8, 0);
    v12 = v7 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v33 = *(_QWORD *)(v11 + 72);
    v9 = v34;
    do
    {
      v13 = v0[31];
      v14 = v0[20];
      sub_249DC091C(v12, v14, type metadata accessor for ResolvedTextPrompt);
      sub_249DC091C(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      sub_249DC05A8(v14, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249DB67B4(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v34;
      }
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_249DB67B4(v15 > 1, v16 + 1, 1);
        v9 = v34;
      }
      v17 = v0[31];
      *(_QWORD *)(v9 + 16) = v16 + 1;
      sub_249D9E308(v17, v9+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
      v12 += v33;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  v18 = v0[17];
  v20 = *(_QWORD *)(v18 + 8);
  v19 = *(_QWORD *)(v18 + 16);
  v21 = qword_2578D5CF0;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = qword_2578FF318;
  v23 = *(_QWORD *)(qword_2578FF318 + 16);
  if (v23)
  {
    v24 = swift_bridgeObjectRetain();
    v25 = 0;
    while (1)
    {
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v22 + 8 * v25 + 32) + 88))(v24) == v20 && v26 == v19)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
      v28 = sub_249F1FE2C();
      v24 = swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
        break;
      if (v23 == ++v25)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    type metadata accessor for ImageGenerator();
  }
  sub_249EA4ABC(v9);
  swift_bridgeObjectRelease();
  v29 = swift_task_alloc();
  v0[44] = v29;
  *(_QWORD *)v29 = v0;
  *(_QWORD *)(v29 + 8) = sub_249E13540;
  v30 = v0[30];
  v31 = v0[18];
  *(_QWORD *)(v29 + 120) = 0;
  *(_QWORD *)(v29 + 128) = v31;
  *(_WORD *)(v29 + 188) = 256;
  *(_OWORD *)(v29 + 104) = xmmword_249F27E00;
  *(_QWORD *)(v29 + 88) = v0 + 8;
  *(_QWORD *)(v29 + 96) = v30;
  return swift_task_switch();
}

uint64_t sub_249E13540()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 360) = v0;
  *(_OWORD *)(v2 + 368) = *(_OWORD *)(v2 + 64);
  v4 = *(_QWORD *)(v2 + 80);
  v3 = *(_QWORD *)(v2 + 88);
  v5 = *(_QWORD *)(v2 + 96);
  swift_task_dealloc();
  if (!v0)
    sub_249DFF634(v4, v3, v5);
  return swift_task_switch();
}

uint64_t sub_249E135CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 376);
  v25 = *(_BYTE *)(v0 + 57);
  v23 = *(_OWORD *)(v0 + 320);
  v17 = *(void **)(v0 + 312);
  v18 = *(void **)(v0 + 304);
  v19 = *(void **)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 208);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 224);
  v29 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v30 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 128);
  v16 = *(id *)(v0 + 368);
  sub_249F1F04C();
  v15 = v1;
  sub_249F1F04C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9600);
  v5 = *(_QWORD *)(v3 + 72);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_249F21910;
  v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
  v8(v7 + v6, v2, v4);
  v8(v7 + v6 + v5, v28, v4);
  *(_QWORD *)(v0 + 112) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9608);
  sub_249DDFC68(&qword_2578D9610, &qword_2578D9608, MEMORY[0x24BEE12C8]);
  sub_249F1EFA4();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_249F21910;
  v8(v9 + v6, v26, v4);
  v8(v9 + v6 + v5, v27, v4);
  *(_QWORD *)(v0 + 120) = v9;
  sub_249F1EFA4();

  v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v10(v26, v4);
  v10(v2, v4);
  sub_249DC05A8(v20, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v10(v27, v4);
  v10(v28, v4);
  sub_249DC05A8(v22, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v11(v21, v29, v4);
  v12 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  v11(v21 + v12[5], v30, v4);
  v13 = v21 + v12[6];
  *(_OWORD *)v13 = v23;
  *(_QWORD *)(v13 + 16) = v24;
  *(_BYTE *)(v21 + v12[7]) = v25;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E13944()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 264);

  sub_249DC05A8(v1, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E13A20()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 312);
  v2 = *(void **)(v0 + 304);
  v3 = *(void **)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 176);
  sub_249DFF634(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336));

  sub_249DC05A8(v5, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v6, v8);
  sub_249DC05A8(v4, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_249E13B4C(const char *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  char *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD v23[2];
  int v24;
  char v25;

  if (qword_2578D5D80 != -1)
    swift_once();
  v5 = sub_249F1EED8();
  __swift_project_value_buffer(v5, (uint64_t)qword_2578FF408);
  v6 = sub_249F1EEC0();
  v7 = sub_249F1EE9C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F1EEF0();
  v11 = sub_249F1F898();
  result = sub_249F1F958();
  if ((result & 1) == 0)
    goto LABEL_7;
  v24 = v11;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a1 = &v25;
LABEL_12:
  v13 = sub_249F1EEE4();
  v23[1] = v23;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_249F1EF14();
  swift_release();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (MEMORY[0x24BEE7808] && (_DWORD)v17 == *MEMORY[0x24BEE7808])
  {
    v18 = "[Error] Interval already ended";
  }
  else
  {
    v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v18 = "";
  }
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v19, v19, v7);
  v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v20 = 0;
  v21 = sub_249F1EE84();
  _os_signpost_emit_with_name_impl(&dword_249D98000, v6, (os_signpost_type_t)v24, v21, a1, v18, v20, 2u);
  MEMORY[0x24BD06618](v20, -1, -1);

  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, v7);
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, v7);
}

void sub_249E13DF0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[6];

  v21 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9638);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v22 = *(id *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D60E0);
  v10 = swift_allocObject();
  v20 = xmmword_249F21760;
  *(_OWORD *)(v10 + 16) = xmmword_249F21760;
  *(_QWORD *)(v10 + 32) = a3;
  aBlock[0] = v10;
  sub_249F1F55C();
  sub_249D9D9F4(0, (unint64_t *)&qword_2578D9640);
  v11 = a3;
  v12 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v20;
  *(_QWORD *)(v13 + 32) = a4;
  aBlock[0] = v13;
  sub_249F1F55C();
  sub_249D9D9F4(0, &qword_2578D9648);
  v14 = a4;
  v15 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v7);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(_QWORD *)(v17 + ((v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v11;
  aBlock[4] = sub_249E17B74;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249E11B88;
  aBlock[3] = &block_descriptor_1;
  v18 = _Block_copy(aBlock);
  v19 = v11;
  swift_release();
  objc_msgSend(v22, sel_performRequests_multiModalInputs_completionHandler_, v12, v15, v18);
  _Block_release(v18);

}

id sub_249E14040(int a1, void *a2, int a3, id a4)
{
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v25;
  id v26;
  id result;
  id v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (qword_2578D5D78 != -1)
      swift_once();
    v5 = sub_249F1EF38();
    __swift_project_value_buffer(v5, (uint64_t)qword_2578FF3F0);
    v6 = a2;
    v7 = a2;
    v8 = sub_249F1EF20();
    v9 = sub_249F1F820();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = a2;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      sub_249F1F9AC();
      *v11 = v37;

      _os_log_impl(&dword_249D98000, v8, v9, "General error when performing requests with MADService. %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v11, -1, -1);
      MEMORY[0x24BD06618](v10, -1, -1);
    }
    else
    {

    }
    sub_249E176C0();
    swift_allocError();
    *(_QWORD *)v22 = a2;
    *(_QWORD *)(v22 + 8) = 0;
    *(_BYTE *)(v22 + 16) = 3;
    v23 = a2;
    goto LABEL_26;
  }
  v14 = objc_msgSend(a4, sel_error);
  if (!v14)
  {
    v24 = objc_msgSend(a4, sel_embeddingResults);
    sub_249D9D9F4(0, &qword_2578D9620);
    v25 = sub_249F1F544();

    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_249F1FBEC();
      swift_bridgeObjectRelease();
      if (v31)
        goto LABEL_16;
    }
    else if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_16:
      if ((v25 & 0xC000000000000001) != 0)
      {
        MEMORY[0x24BD056B8](0, v25);
        goto LABEL_19;
      }
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v26 = *(id *)(v25 + 32);
LABEL_19:
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9638);
        return (id)sub_249F1F5C8();
      }
      __break(1u);
      goto LABEL_34;
    }
    swift_bridgeObjectRelease();
    if (qword_2578D5D78 == -1)
    {
LABEL_29:
      v32 = sub_249F1EF38();
      __swift_project_value_buffer(v32, (uint64_t)qword_2578FF3F0);
      v33 = sub_249F1EF20();
      v34 = sub_249F1F820();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_249D98000, v33, v34, "MADService had no errors on our MADPersonalizedEmbeddingRequest, but returned no values?? This is not supposed to be possible.", v35, 2u);
        MEMORY[0x24BD06618](v35, -1, -1);
      }

      sub_249E176C0();
      swift_allocError();
      *(_QWORD *)v29 = 0;
      *(_QWORD *)(v29 + 8) = 0;
      v30 = 2;
      goto LABEL_25;
    }
LABEL_34:
    swift_once();
    goto LABEL_29;
  }

  if (qword_2578D5D78 != -1)
    swift_once();
  v15 = sub_249F1EF38();
  __swift_project_value_buffer(v15, (uint64_t)qword_2578FF3F0);
  v16 = a4;
  v17 = sub_249F1EF20();
  v18 = sub_249F1F820();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v19 = 138412290;
    if (objc_msgSend(v16, sel_error))
    {
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v36 = v21;
      sub_249F1F9AC();
    }
    else
    {
      v36 = 0;
      sub_249F1F9AC();
      v21 = 0;
    }
    *v20 = v21;

    _os_log_impl(&dword_249D98000, v17, v18, "Error processing the MADPersonalizedEmbeddingRequest. %@", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79B8);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v20, -1, -1);
    MEMORY[0x24BD06618](v19, -1, -1);

  }
  else
  {

  }
  result = objc_msgSend(v16, sel_error, v36, v38);
  if (result)
  {
    v28 = result;
    sub_249E176C0();
    swift_allocError();
    *(_QWORD *)v29 = v28;
    *(_QWORD *)(v29 + 8) = 0;
    v30 = 4;
LABEL_25:
    *(_BYTE *)(v29 + 16) = v30;
LABEL_26:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9638);
    return (id)sub_249F1F5BC();
  }
  __break(1u);
  return result;
}

uint64_t sub_249E14618(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x24BEE4AF8];
  sub_249DB677C(0, v3 & ~(v3 >> 63), 0);
  v4 = v9;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v6 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
    if (!v6)
      return v4;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24BD056B8](0, a1);
    sub_249F1F724();
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = *(id *)(a1 + 32);
    sub_249F1F724();

  }
  swift_release();
  return 0;
}

uint64_t sub_249E14844(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_249F1FB44();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x24BD056B8](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_249F1FB20();
        sub_249F1FB50();
        sub_249F1FB5C();
        sub_249F1FB2C();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_249F1FB20();
        sub_249F1FB50();
        sub_249F1FB5C();
        sub_249F1FB2C();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_249F1FBEC();
    swift_bridgeObjectRelease();
    sub_249F1FB44();
    swift_bridgeObjectRetain();
    v2 = sub_249F1FBEC();
    swift_bridgeObjectRelease();
  }
  return v12;
}

void *sub_249E14A28(void *result, uint64_t a2, int a3, void *__src, uint64_t a5)
{
  uint64_t v5;

  if (__src)
    v5 = a5 - (_QWORD)__src;
  else
    v5 = 0;
  if (!result)
  {
    if (v5 <= 0)
      return result;
LABEL_10:
    result = (void *)sub_249F1FC28();
    __break(1u);
    return result;
  }
  if (a2 - (uint64_t)result < v5)
    goto LABEL_10;
  if (__src)
    return memmove(result, __src, a5 - (_QWORD)__src);
  return result;
}

uint64_t sub_249E14AB0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InputConditioner()
{
  return objc_opt_self();
}

uint64_t sub_249E14AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFCF8;
  return sub_249E12904(a1, a2);
}

id sub_249E14B58(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_249D9D9F4(0, (unint64_t *)&qword_2578D9630);
  v4 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_249F1E710();

    swift_willThrow();
  }
  return v5;
}

char *sub_249E14C50()
{
  char v1;

  return &v1;
}

void sub_249E14C60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;

  if (!sub_249F1E4F4() || !__OFSUB__(a1, sub_249F1E50C()))
  {
    if (!__OFSUB__(a2, a1))
    {
      v7 = sub_249F1E500();
      MEMORY[0x24BDAC7A8](v7);
      sub_249F1F7CC();

      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_249E14D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D67E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249E14D88()
{
  return sub_249F1FE08();
}

_QWORD *sub_249E14DB0(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  void *v67;
  unsigned int v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  void (*v85)(char *, uint64_t);
  void (*v86)(id *, _QWORD);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  _QWORD *v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, _QWORD *);
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  void *v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  void *v132;
  char *v133;
  void *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  void (*v138)(char *, char *, uint64_t);
  void (*v139)(char *, char *, _QWORD *);
  char *v140;
  char *v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t);
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  void *v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  unint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t (*v172)(uint64_t);
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  char *v175;
  void (*v176)(char *, char *, uint64_t);
  uint64_t v177;
  char *v178;
  char *v179;
  void (*v180)(char *, char *, uint64_t);
  char *v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t);
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  void *v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  _BOOL4 v196;
  uint8_t *v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  void (*v202)(char *, char *, uint64_t);
  uint64_t v203;
  char *v204;
  char *v205;
  void (*v206)(char *, char *, uint64_t);
  char *v207;
  uint64_t v208;
  void (*v209)(char *, uint64_t);
  char *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  void *v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  NSObject *v222;
  os_log_type_t v223;
  _BOOL4 v224;
  uint8_t *v225;
  id v226;
  id v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  void (*v231)(char *, char *, uint64_t);
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  void *v235;
  unsigned __int8 v236;
  id v237;
  uint64_t v238;
  unsigned int v239;
  id v240;
  char *v241;
  NSObject *v242;
  os_log_type_t v243;
  uint8_t *v244;
  void *v245;
  uint64_t v246;
  unint64_t v247;
  char *v248;
  uint64_t v249;
  uint8_t *v250;
  char *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  char *v256;
  char *v257;
  uint64_t v258;
  void (*v259)(char *, uint64_t);
  uint64_t v260;
  char *v261;
  char *v262;
  _QWORD *v263;
  void (*v264)(char *, char *, uint64_t);
  void (*v265)(char *, char *, uint64_t);
  char *v266;
  char *v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  NSObject *v275;
  os_log_type_t v276;
  uint8_t *v277;
  void *v278;
  void *v279;
  char *v280;
  void *v281;
  unsigned int v282;
  uint64_t v283;
  id v284;
  id v285;
  id v286;
  char *v287;
  _QWORD *v288;
  id v289;
  id v290;
  id v291;
  id v292;
  _QWORD v293[2];
  __int128 v294;
  _QWORD *v295;
  __int128 v296;
  id *v297;
  uint64_t v298;
  uint8_t *v299;
  char *v300;
  uint64_t v301;
  void (*v302)(char *, uint64_t);
  void (*v303)(char *, char *, uint64_t);
  void (*v304)(char *, uint64_t, uint64_t);
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  int v309;
  void (*v310)(char *, char *, uint64_t);
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  void (*v319)(char *, uint64_t);
  char *v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  char *v335;
  char *v336;
  char *v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  char *v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  id v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  id v354[6];

  v309 = a5;
  v307 = a4;
  v313 = a3;
  v349 = a1;
  v354[5] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9650);
  MEMORY[0x24BDAC7A8](v6);
  v325 = (char *)v293 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v321 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9658);
  v8 = MEMORY[0x24BDAC7A8](v321);
  v322 = (char *)v293 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v320 = (char *)v293 - v10;
  v324 = sub_249F1E584();
  v323 = *(_QWORD *)(v324 - 8);
  MEMORY[0x24BDAC7A8](v324);
  v346 = (char *)v293 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6C30);
  v12 = MEMORY[0x24BDAC7A8](v348);
  v317 = (char *)v293 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v326 = (char *)v293 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v347 = (uint64_t)v293 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  MEMORY[0x24BDAC7A8](v17);
  v333 = (char *)v293 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = sub_249F1E6B0();
  v331 = *(_QWORD *)(v332 - 8);
  v19 = MEMORY[0x24BDAC7A8](v332);
  v328 = (char *)v293 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v330 = (char *)v293 - v21;
  v22 = sub_249F1E8D8();
  v334 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v308 = (char *)v293 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v311 = (char *)v293 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v312 = (char *)v293 - v27;
  v344 = sub_249F1E5E4();
  v350 = *(_QWORD *)(v344 - 8);
  MEMORY[0x24BDAC7A8](v344);
  v351 = (char *)v293 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E60);
  MEMORY[0x24BDAC7A8](v29);
  v336 = (char *)v293 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_249F1E5F0();
  v340 = *(_QWORD *)(v31 - 8);
  v341 = v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  v335 = (char *)v293 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v339 = (char *)v293 - v34;
  v35 = sub_249F1E5FC();
  v36 = *(_QWORD **)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v337 = (char *)v293 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E68);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v293 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v342 = (uint64_t)v293 - v42;
  v338 = sub_249F1E620();
  v343 = *(_QWORD **)(v338 - 8);
  v43 = MEMORY[0x24BDAC7A8](v338);
  v318 = (char *)v293 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v327 = (char *)v293 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v345 = (char *)v293 - v47;
  v315 = sub_249F1E650();
  v314 = *(_QWORD *)(v315 - 8);
  MEMORY[0x24BDAC7A8](v315);
  v329 = (char *)v293 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D73B8);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)v293 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for AugmentedPrompt();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v316 = (uint64_t)v293 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249D9E1E4((uint64_t)a2, (uint64_t)v354);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9660);
  v55 = swift_dynamicCast();
  v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
  if (!v55)
  {
    v56(v51, 1, 1, v52);
    goto LABEL_7;
  }
  v56(v51, 0, 1, v52);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) == 1)
  {
LABEL_7:
    sub_249DCC2FC((uint64_t)v51, &qword_2578D73B8);
    goto LABEL_8;
  }
  v57 = v316;
  sub_249D9E308((uint64_t)v51, v316, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  if (!sub_249E570FC() || v313 < 1)
  {
    sub_249DC05A8(v57, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
LABEL_8:
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_249F1FE08();
    v67 = (void *)sub_249F1F304();
    swift_bridgeObjectRelease();
    v354[0] = 0;
    v68 = objc_msgSend(v349, sel_addText_error_, v67, v354);

    if (v68)
    {
      v69 = qword_2578D5D78;
      v70 = v354[0];
      if (v69 != -1)
        swift_once();
      v71 = sub_249F1EF38();
      __swift_project_value_buffer(v71, (uint64_t)qword_2578FF3F0);
      sub_249D9E1E4((uint64_t)a2, (uint64_t)v354);
      v72 = sub_249F1EF20();
      v73 = sub_249F1F808();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        v75 = swift_slowAlloc();
        v353 = v75;
        *(_DWORD *)v74 = 136380675;
        __swift_project_boxed_opaque_existential_1(v354, (uint64_t)v354[3]);
        v76 = sub_249F1FE08();
        v352 = sub_249E68CA8(v76, v77, &v353);
        sub_249F1F9AC();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v354);
        _os_log_impl(&dword_249D98000, v72, v73, "MADMultiModalInput construction: not trying any personalization for text: \"%{private}s\"", v74, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BD06618](v75, -1, -1);
        MEMORY[0x24BD06618](v74, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v354);
      }

      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      v78 = v354[0];
      sub_249F1E710();

      swift_willThrow();
    }
    return v36;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v314 + 16))(v329, v57, v315);
  sub_249F1E578();
  v58 = v337;
  sub_249F1E608();
  v303 = (void (*)(char *, char *, uint64_t))v36[2];
  v303(v41, v58, v35);
  v59 = sub_249D9BBEC(&qword_2578D8E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
  v60 = v339;
  v305 = v59;
  sub_249F1F730();
  v61 = (void (*)(char *, uint64_t))v36[1];
  v306 = v35;
  v302 = v61;
  v61(v58, v35);
  v62 = v340;
  (*(void (**)(char *, char *, uint64_t))(v340 + 32))(&v41[*(int *)(v38 + 36)], v60, v341);
  v63 = (uint64_t)v41;
  v64 = v342;
  sub_249DCB1B0(v63, v342, &qword_2578D8E68);
  v65 = v64 + *(int *)(v38 + 36);
  v297 = v354;
  v295 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v304 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  *(_QWORD *)&v66 = 136380675;
  v294 = v66;
  v293[1] = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v66 = 136315395;
  v296 = v66;
  v298 = v65;
  v301 = v22;
  while (1)
  {
    v79 = v339;
    v80 = v341;
    v304(v339, v65, v341);
    v81 = v335;
    v82 = v342;
    v83 = v306;
    sub_249F1F754();
    sub_249D9BBEC(&qword_2578D8E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v84 = sub_249F1F298();
    v85 = *(void (**)(char *, uint64_t))(v340 + 8);
    v85(v81, v80);
    v85(v79, v80);
    if ((v84 & 1) != 0)
      break;
    v86 = (void (*)(id *, _QWORD))sub_249F1F784();
    v87 = v350;
    v88 = v336;
    v89 = v344;
    (*(void (**)(char *))(v350 + 16))(v336);
    v86(v354, 0);
    v90 = v87;
    v91 = v337;
    v303(v337, (char *)v82, v83);
    sub_249F1F760();
    v302(v91, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v88, 0, 1, v89);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89) == 1)
      goto LABEL_73;
    v92 = v351;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v351, v88, v89);
    v93 = v330;
    sub_249F1E5CC();
    sub_249E0B50C();
    v94 = (uint64_t)v333;
    sub_249F1E6BC();
    v95 = *(void (**)(char *, uint64_t))(v331 + 8);
    v96 = v93;
    v97 = v332;
    v95(v96, v332);
    v98 = v334;
    v99 = v301;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v334 + 48))(v94, 1, v301) == 1)
    {
      sub_249DCC2FC(v94, &qword_2578D6288);
      v100 = v328;
      sub_249F1E5CC();
      sub_249E00BB4();
      sub_249F1E6BC();
      v95(v100, v97);
      if (BYTE4(v354[0]) != 1)
      {
        LODWORD(v299) = v354[0];
        v101 = v343;
        v102 = (void (*)(char *, char *, uint64_t))v343[2];
        v103 = v327;
        v104 = v345;
        v36 = (_QWORD *)v338;
        v102(v327, v345, v338);
        v105 = v347;
        sub_249F1E5D8();
        v106 = v318;
        v102(v318, (char *)v105, (uint64_t)v36);
        sub_249DCC2FC(v105, &qword_2578D6C30);
        LOBYTE(v105) = sub_249F1E614();
        v107 = (void (*)(char *, uint64_t))v101[1];
        v107(v106, (uint64_t)v36);
        v319 = v107;
        v107(v103, (uint64_t)v36);
        v310 = v102;
        if ((v105 & 1) != 0)
        {
          sub_249F1E56C();
          v102(v103, v104, (uint64_t)v36);
          v108 = (uint64_t)v326;
          sub_249F1E5D8();
          v102(v106, (char *)v108, (uint64_t)v36);
          sub_249DCC2FC(v108, &qword_2578D6C30);
          sub_249D9BBEC(&qword_2578D8E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
          if ((sub_249F1F28C() & 1) == 0)
            goto LABEL_94;
          v109 = v102;
          v110 = v321;
          v111 = v320;
          v112 = &v320[*(int *)(v321 + 48)];
          v113 = (void (*)(char *, char *, _QWORD *))v343[4];
          v113(v320, v103, v36);
          v113(v112, v106, v36);
          v114 = v322;
          v115 = &v322[*(int *)(v110 + 48)];
          v109(v322, v111, (uint64_t)v36);
          v109(v115, v112, (uint64_t)v36);
          v116 = (uint64_t)v317;
          v113(v317, v114, v36);
          v117 = v319;
          v319(v115, (uint64_t)v36);
          v118 = &v114[*(int *)(v110 + 48)];
          v113(v114, v111, v36);
          v113(v118, v112, v36);
          v113((char *)(v116 + *(int *)(v348 + 36)), v118, v36);
          v117(v114, (uint64_t)v36);
          v119 = v347;
          sub_249DCB1B0(v116, v347, &qword_2578D6C30);
          v120 = v346;
          sub_249F1E590();
          sub_249DCC2FC(v119, &qword_2578D6C30);
          (*(void (**)(char *, uint64_t))(v323 + 8))(v120, v324);
          v121 = sub_249F1F3A0();
          v123 = v122;
          v124 = (void *)sub_249F1F304();
          v354[0] = 0;
          LODWORD(v113) = objc_msgSend(v349, sel_addText_error_, v124, v354);

          if (!(_DWORD)v113)
          {
            v289 = v354[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_249F1E710();

            swift_willThrow();
            goto LABEL_85;
          }
          v125 = qword_2578D5D78;
          v126 = v354[0];
          v127 = v345;
          if (v125 != -1)
            swift_once();
          v128 = sub_249F1EF38();
          __swift_project_value_buffer(v128, (uint64_t)qword_2578FF3F0);
          swift_bridgeObjectRetain();
          v129 = sub_249F1EF20();
          v130 = sub_249F1F808();
          if (os_log_type_enabled(v129, v130))
          {
            v131 = (uint8_t *)swift_slowAlloc();
            v132 = (void *)swift_slowAlloc();
            v354[0] = v132;
            *(_DWORD *)v131 = v294;
            swift_bridgeObjectRetain();
            v353 = sub_249E68CA8(v121, v123, (uint64_t *)v354);
            v36 = (_QWORD *)v338;
            v133 = v345;
            sub_249F1F9AC();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_249D98000, v129, v130, "MADMultiModalInput construction: added text \"%{private}s\"", v131, 0xCu);
            swift_arrayDestroy();
            v134 = v132;
            v127 = v133;
            MEMORY[0x24BD06618](v134, -1, -1);
            v119 = v347;
            MEMORY[0x24BD06618](v131, -1, -1);

            v103 = v327;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            v103 = v327;
            v36 = (_QWORD *)v338;
          }
          sub_249F1E5D8();
          v319(v127, (uint64_t)v36);
          v102 = v310;
          v310(v127, (char *)v119, (uint64_t)v36);
          sub_249DCC2FC(v119, &qword_2578D6C30);
          v104 = v127;
          v106 = v318;
        }
        sub_249F1E56C();
        v102(v103, v104, (uint64_t)v36);
        v108 = (uint64_t)v326;
        sub_249F1E5D8();
        v102(v106, (char *)(v108 + *(int *)(v348 + 36)), (uint64_t)v36);
        sub_249DCC2FC(v108, &qword_2578D6C30);
        sub_249D9BBEC(&qword_2578D8E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
        if ((sub_249F1F28C() & 1) == 0)
        {
          __break(1u);
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
        v135 = v321;
        v136 = v320;
        v137 = &v320[*(int *)(v321 + 48)];
        v138 = v102;
        v139 = (void (*)(char *, char *, _QWORD *))v343[4];
        v139(v320, v103, v36);
        v300 = v137;
        v139(v137, v106, v36);
        v140 = v322;
        v141 = &v322[*(int *)(v135 + 48)];
        v138(v322, v136, (uint64_t)v36);
        v138(v141, v137, (uint64_t)v36);
        v142 = (uint64_t)v317;
        v139(v317, v140, v36);
        v143 = v319;
        v319(v141, (uint64_t)v36);
        v144 = &v140[*(int *)(v135 + 48)];
        v145 = v136;
        v146 = v347;
        v139(v140, v145, v36);
        v139(v144, v300, v36);
        v139((char *)(v142 + *(int *)(v348 + 36)), v144, v36);
        v143(v140, (uint64_t)v36);
        sub_249DCB1B0(v142, v146, &qword_2578D6C30);
        v147 = v346;
        sub_249F1E590();
        sub_249DCC2FC(v146, &qword_2578D6C30);
        (*(void (**)(char *, uint64_t))(v323 + 8))(v147, v324);
        v148 = sub_249F1F3A0();
        v150 = v149;
        v151 = (void *)sub_249F1F304();
        v354[0] = 0;
        LODWORD(v139) = objc_msgSend(v349, sel_addPersonDescription_error_, v151, v354);

        if (!(_DWORD)v139)
        {
          v286 = v354[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249F1E710();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v350 + 8))(v351, v344);
          sub_249DCC2FC(v342, &qword_2578D8E68);
          v287 = v345;
          v288 = v36;
LABEL_87:
          v319(v287, (uint64_t)v288);
          goto LABEL_88;
        }
        v152 = qword_2578D5D78;
        v153 = v354[0];
        if (v152 != -1)
          swift_once();
        v154 = sub_249F1EF38();
        __swift_project_value_buffer(v154, (uint64_t)qword_2578FF3F0);
        swift_bridgeObjectRetain();
        v155 = sub_249F1EF20();
        v156 = sub_249F1F808();
        if (os_log_type_enabled(v155, v156))
        {
          v157 = swift_slowAlloc();
          v158 = (void *)swift_slowAlloc();
          v354[0] = v158;
          *(_DWORD *)v157 = v296;
          LODWORD(v353) = (_DWORD)v299;
          v159 = sub_249F1F3AC();
          v353 = sub_249E68CA8(v159, v160, (uint64_t *)v354);
          sub_249F1F9AC();
          v146 = v347;
          swift_bridgeObjectRelease();
          *(_WORD *)(v157 + 12) = 2081;
          swift_bridgeObjectRetain();
          v353 = sub_249E68CA8(v148, v150, (uint64_t *)v354);
          v161 = (_QWORD *)v338;
          sub_249F1F9AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_249D98000, v155, v156, "MADMultiModalInput construction: added categor(ies) %s demographic text \"%{private}s\"", (uint8_t *)v157, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24BD06618](v158, -1, -1);
          MEMORY[0x24BD06618](v157, -1, -1);

          v162 = v344;
          v163 = v351;
          v65 = v298;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v162 = v344;
          v163 = v351;
          v65 = v298;
          v161 = v36;
        }
        sub_249F1E5D8();
        (*(void (**)(char *, uint64_t))(v350 + 8))(v163, v162);
        v164 = v345;
        v319(v345, (uint64_t)v161);
        v310(v164, (char *)(v146 + *(int *)(v348 + 36)), (uint64_t)v161);
        v165 = v146;
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v350 + 8))(v92, v89);
    }
    else
    {
      v300 = *(char **)(v98 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v300)(v312, v94, v99);
      v166 = v347;
      v167 = (void (*)(char *, char *, uint64_t))v343[2];
      v168 = v327;
      v169 = v345;
      v170 = v338;
      v167(v327, v345, v338);
      sub_249F1E5D8();
      v171 = v318;
      v167(v318, (char *)v166, v170);
      sub_249DCC2FC(v166, &qword_2578D6C30);
      v172 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0];
      sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
      LOBYTE(v166) = sub_249F1F298();
      v173 = (void (*)(char *, uint64_t))v343[1];
      v173(v171, v170);
      v319 = v173;
      v173(v168, v170);
      v310 = v167;
      if ((v166 & 1) == 0)
      {
        sub_249F1E56C();
        v167(v168, v169, v170);
        v174 = (uint64_t)v326;
        sub_249F1E5D8();
        v167(v171, (char *)v174, v170);
        sub_249DCC2FC(v174, &qword_2578D6C30);
        sub_249D9BBEC(&qword_2578D8E88, v172, MEMORY[0x24BDCC500]);
        if ((sub_249F1F28C() & 1) == 0)
          goto LABEL_98;
        v175 = v168;
        v176 = v167;
        v177 = v321;
        v178 = v320;
        v179 = &v320[*(int *)(v321 + 48)];
        v180 = (void (*)(char *, char *, uint64_t))v343[4];
        v180(v320, v175, v170);
        v180(v179, v171, v170);
        v36 = v322;
        v181 = &v322[*(int *)(v177 + 48)];
        v176(v322, v178, v170);
        v176(v181, v179, v170);
        v182 = (uint64_t)v317;
        v180(v317, (char *)v36, v170);
        v183 = v319;
        v319(v181, v170);
        v184 = (char *)v36 + *(int *)(v177 + 48);
        v180((char *)v36, v178, v170);
        v180(v184, v179, v170);
        v180((char *)(v182 + *(int *)(v348 + 36)), v184, v170);
        v183((char *)v36, v170);
        v185 = v347;
        sub_249DCB1B0(v182, v347, &qword_2578D6C30);
        v186 = v346;
        sub_249F1E590();
        sub_249DCC2FC(v185, &qword_2578D6C30);
        (*(void (**)(char *, uint64_t))(v323 + 8))(v186, v324);
        v187 = sub_249F1F3A0();
        v189 = v188;
        v190 = (void *)sub_249F1F304();
        v354[0] = 0;
        LODWORD(v185) = objc_msgSend(v349, sel_addText_error_, v190, v354);

        if (!(_DWORD)v185)
        {
          v291 = v354[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249F1E710();

LABEL_91:
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v334 + 8))(v312, v301);
LABEL_85:
          (*(void (**)(char *, uint64_t))(v350 + 8))(v351, v344);
          sub_249DCC2FC(v342, &qword_2578D8E68);
          v287 = v345;
          goto LABEL_86;
        }
        v191 = qword_2578D5D78;
        v192 = v354[0];
        if (v191 != -1)
          swift_once();
        v193 = sub_249F1EF38();
        __swift_project_value_buffer(v193, (uint64_t)qword_2578FF3F0);
        swift_bridgeObjectRetain();
        v194 = sub_249F1EF20();
        v195 = sub_249F1F808();
        v196 = os_log_type_enabled(v194, v195);
        v171 = v318;
        v172 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0];
        if (v196)
        {
          v197 = (uint8_t *)swift_slowAlloc();
          v198 = (void *)swift_slowAlloc();
          v354[0] = v198;
          *(_DWORD *)v197 = v294;
          v299 = v197 + 4;
          swift_bridgeObjectRetain();
          v353 = sub_249E68CA8(v187, v189, (uint64_t *)v354);
          sub_249F1F9AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_249D98000, v194, v195, "MADMultiModalInput construction: added text \"%{private}s\"", v197, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24BD06618](v198, -1, -1);
          MEMORY[0x24BD06618](v197, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v168 = v327;
        v199 = v347;
        sub_249F1E5D8();
        v169 = v345;
        v170 = v338;
        v319(v345, v338);
        v167 = v310;
        v310(v169, (char *)v199, v170);
        sub_249DCC2FC(v199, &qword_2578D6C30);
      }
      sub_249F1E56C();
      v167(v168, v169, v170);
      v200 = (uint64_t)v326;
      sub_249F1E5D8();
      v167(v171, (char *)(v200 + *(int *)(v348 + 36)), v170);
      sub_249DCC2FC(v200, &qword_2578D6C30);
      sub_249D9BBEC(&qword_2578D8E88, v172, MEMORY[0x24BDCC500]);
      if ((sub_249F1F28C() & 1) == 0)
      {
        __break(1u);
LABEL_98:
        __break(1u);
      }
      v201 = v168;
      v202 = v167;
      v203 = v321;
      v204 = v320;
      v205 = &v320[*(int *)(v321 + 48)];
      v206 = (void (*)(char *, char *, uint64_t))v343[4];
      v206(v320, v201, v170);
      v206(v205, v171, v170);
      v36 = v322;
      v207 = &v322[*(int *)(v203 + 48)];
      v202(v322, v204, v170);
      v202(v207, v205, v170);
      v208 = (uint64_t)v317;
      v206(v317, (char *)v36, v170);
      v209 = v319;
      v319(v207, v170);
      v210 = (char *)v36 + *(int *)(v203 + 48);
      v206((char *)v36, v204, v170);
      v206(v210, v205, v170);
      v206((char *)(v208 + *(int *)(v348 + 36)), v210, v170);
      v209((char *)v36, v170);
      v211 = v347;
      sub_249DCB1B0(v208, v347, &qword_2578D6C30);
      v212 = v346;
      sub_249F1E590();
      sub_249DCC2FC(v211, &qword_2578D6C30);
      (*(void (**)(char *, uint64_t))(v323 + 8))(v212, v324);
      v213 = sub_249F1F3A0();
      v215 = v214;
      v216 = (void *)sub_249F1F304();
      v354[0] = 0;
      LODWORD(v212) = objc_msgSend(v349, sel_addText_error_, v216, v354);

      if (!(_DWORD)v212)
      {
        v290 = v354[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249F1E710();

        goto LABEL_91;
      }
      v217 = qword_2578D5D78;
      v218 = v354[0];
      v36 = v295;
      v219 = v301;
      if (v217 != -1)
        swift_once();
      v220 = sub_249F1EF38();
      v221 = __swift_project_value_buffer(v220, (uint64_t)qword_2578FF3F0);
      swift_bridgeObjectRetain();
      v299 = (uint8_t *)v221;
      v222 = sub_249F1EF20();
      v223 = sub_249F1F808();
      v224 = os_log_type_enabled(v222, v223);
      v65 = v298;
      if (v224)
      {
        v225 = (uint8_t *)swift_slowAlloc();
        v354[0] = (id)swift_slowAlloc();
        v295 = v36;
        v226 = v354[0];
        *(_DWORD *)v225 = v294;
        v293[0] = v225 + 4;
        swift_bridgeObjectRetain();
        v353 = sub_249E68CA8(v213, v215, (uint64_t *)v354);
        sub_249F1F9AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_249D98000, v222, v223, "MADMultiModalInput construction: added entity term \"%{private}s\"", v225, 0xCu);
        swift_arrayDestroy();
        v227 = v226;
        v36 = v295;
        MEMORY[0x24BD06618](v227, -1, -1);
        MEMORY[0x24BD06618](v225, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v228 = v36[2];
      v229 = v345;
      v230 = v348;
      if (v228 < v313)
      {
        v231 = *(void (**)(char *, char *, uint64_t))(v334 + 16);
        v231(v311, v312, v219);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = (_QWORD *)sub_249DB23E4(0, v228 + 1, 1, (unint64_t)v36);
        v232 = v342;
        v234 = v36[2];
        v233 = v36[3];
        if (v234 >= v233 >> 1)
          v36 = (_QWORD *)sub_249DB23E4(v233 > 1, v234 + 1, 1, (unint64_t)v36);
        v36[2] = v234 + 1;
        ((void (*)(char *, char *, uint64_t))v300)((char *)v36+ ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80))+ *(_QWORD *)(v334 + 72) * v234, v311, v219);
        v235 = (void *)sub_249F1E8B4();
        if ((v309 & 1) != 0)
        {
          v354[0] = 0;
          v239 = objc_msgSend(v349, sel_addEntityUUID_error_, v235, v354);

          v237 = v354[0];
          if (!v239)
          {
LABEL_92:
            v292 = v237;
            swift_bridgeObjectRelease();
            sub_249F1E710();

            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v334 + 8))(v312, v219);
            (*(void (**)(char *, uint64_t))(v350 + 8))(v351, v344);
            sub_249DCC2FC(v232, &qword_2578D8E68);
            v287 = v229;
LABEL_86:
            v288 = (_QWORD *)v338;
            goto LABEL_87;
          }
        }
        else
        {
          v354[0] = 0;
          v236 = objc_msgSend(v349, sel_addEntityUUID_seed_error_, v235, v307, v354);

          v237 = v354[0];
          if ((v236 & 1) == 0)
            goto LABEL_92;
        }
        v295 = v36;
        v240 = v237;
        v241 = v308;
        v231(v308, v312, v219);
        v242 = sub_249F1EF20();
        v243 = sub_249F1F808();
        if (os_log_type_enabled(v242, v243))
        {
          v244 = (uint8_t *)swift_slowAlloc();
          v245 = (void *)swift_slowAlloc();
          v354[0] = v245;
          *(_DWORD *)v244 = v294;
          v300 = (char *)(v244 + 4);
          sub_249D9BBEC((unint64_t *)&qword_2578D7C60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v246 = sub_249F1FE08();
          v353 = sub_249E68CA8(v246, v247, (uint64_t *)v354);
          sub_249F1F9AC();
          swift_bridgeObjectRelease();
          v248 = v241;
          v238 = v334;
          (*(void (**)(char *, uint64_t))(v334 + 8))(v248, v219);
          _os_log_impl(&dword_249D98000, v242, v243, "MADMultiModalInput construction: added UUID \"%{private}s\"", v244, 0xCu);
          swift_arrayDestroy();
          v249 = v348;
          v229 = v345;
          MEMORY[0x24BD06618](v245, -1, -1);
          v250 = v244;
          v230 = v249;
          MEMORY[0x24BD06618](v250, -1, -1);
        }
        else
        {
          v251 = v241;
          v238 = v334;
          (*(void (**)(char *, uint64_t))(v334 + 8))(v251, v219);
        }

      }
      else
      {
        v238 = v334;
      }
      v252 = v347;
      v253 = v351;
      sub_249F1E5D8();
      (*(void (**)(char *, uint64_t))(v238 + 8))(v312, v219);
      (*(void (**)(char *, uint64_t))(v350 + 8))(v253, v344);
      v254 = v338;
      v319(v229, v338);
      v310(v229, (char *)(v252 + *(int *)(v230 + 36)), v254);
      v165 = v252;
LABEL_36:
      sub_249DCC2FC(v165, &qword_2578D6C30);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v350 + 56))(v336, 1, 1, v344);
LABEL_73:
  sub_249DCC2FC(v342, &qword_2578D8E68);
  v256 = v327;
  v102 = (void (*)(char *, char *, uint64_t))v329;
  sub_249F1E644();
  sub_249D9BBEC(&qword_2578D8D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  v257 = v345;
  v258 = v338;
  v108 = sub_249F1F298();
  v259 = (void (*)(char *, uint64_t))v343[1];
  v259(v256, v258);
  if ((v108 & 1) != 0)
  {
    v259(v257, v258);
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v314 + 8))(v102, v315);
    sub_249DC05A8(v316, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    return v295;
  }
  v351 = (char *)v259;
  sub_249F1E56C();
  sub_249F1E644();
  sub_249D9BBEC(&qword_2578D8E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
  if ((sub_249F1F28C() & 1) == 0)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v260 = v321;
  v261 = v320;
  v262 = &v320[*(int *)(v321 + 48)];
  v263 = v343;
  v264 = (void (*)(char *, char *, uint64_t))v343[2];
  v264(v320, v257, v258);
  v265 = (void (*)(char *, char *, uint64_t))v263[4];
  v265(v262, v256, v258);
  v266 = v322;
  v267 = &v322[*(int *)(v260 + 48)];
  v264(v322, v261, v258);
  v264(v267, v262, v258);
  v268 = (uint64_t)v326;
  v265(v326, v266, v258);
  v269 = v351;
  ((void (*)(char *, uint64_t))v351)(v267, v258);
  v270 = &v266[*(int *)(v260 + 48)];
  v265(v266, v261, v258);
  v265(v270, v262, v258);
  v265((char *)(v268 + *(int *)(v348 + 36)), v270, v258);
  ((void (*)(char *, uint64_t))v269)(v266, v258);
  v271 = v347;
  sub_249DCB1B0(v268, v347, &qword_2578D6C30);
  v272 = v346;
  sub_249F1E590();
  sub_249DCC2FC(v271, &qword_2578D6C30);
  (*(void (**)(char *, uint64_t))(v323 + 8))(v272, v324);
  v102 = (void (*)(char *, char *, uint64_t))sub_249F1F3A0();
  v108 = v273;
  if (qword_2578D5D78 != -1)
LABEL_96:
    swift_once();
  v274 = sub_249F1EF38();
  __swift_project_value_buffer(v274, (uint64_t)qword_2578FF3F0);
  swift_bridgeObjectRetain_n();
  v275 = sub_249F1EF20();
  v276 = sub_249F1F808();
  if (os_log_type_enabled(v275, v276))
  {
    v277 = (uint8_t *)swift_slowAlloc();
    v278 = (void *)swift_slowAlloc();
    v354[0] = v278;
    *(_DWORD *)v277 = v294;
    swift_bridgeObjectRetain();
    v353 = sub_249E68CA8((uint64_t)v102, v108, (uint64_t *)v354);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249D98000, v275, v276, "MADMultiModalInput construction: added final text segment\"%{private}s\"", v277, 0xCu);
    swift_arrayDestroy();
    v279 = v278;
    v280 = v345;
    MEMORY[0x24BD06618](v279, -1, -1);
    MEMORY[0x24BD06618](v277, -1, -1);

    v36 = v295;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v36 = v295;
    v280 = v345;
  }
  v281 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v354[0] = 0;
  v282 = objc_msgSend(v349, sel_addText_error_, v281, v354);

  v283 = v338;
  if (v282)
  {
    v284 = v354[0];
    ((void (*)(char *, uint64_t))v351)(v280, v283);
    (*(void (**)(char *, uint64_t))(v314 + 8))(v329, v315);
    sub_249DC05A8(v316, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
    return v36;
  }
  v285 = v354[0];
  swift_bridgeObjectRelease();
  sub_249F1E710();

  swift_willThrow();
  ((void (*)(char *, uint64_t))v351)(v280, v283);
LABEL_88:
  (*(void (**)(char *, uint64_t))(v314 + 8))(v329, v315);
  sub_249DC05A8(v316, (uint64_t (*)(_QWORD))type metadata accessor for AugmentedPrompt);
  return v36;
}

void sub_249E176B4(uint64_t a1)
{
  uint64_t v1;

  sub_249E13DF0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

unint64_t sub_249E176C0()
{
  unint64_t result;

  result = qword_2578D9628;
  if (!qword_2578D9628)
  {
    result = MEMORY[0x24BD06528](&unk_249F27DB8, &type metadata for InputConditioner.InputConditionerError);
    atomic_store(result, (unint64_t *)&qword_2578D9628);
  }
  return result;
}

id sub_249E17704(void *a1)
{
  id v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (objc_msgSend(a1, sel_type) == (id)1)
  {
    v4 = objc_msgSend(a1, sel_shape);
    sub_249D9D9F4(0, (unint64_t *)&qword_2578D9630);
    v5 = sub_249F1F544();

    v1 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    sub_249E14B58(v5, 65552);
    if (!v2)
    {
      v6 = objc_msgSend(a1, sel_data);
      sub_249F1E83C();
      v8 = v7;

      __asm { BR              X10 }
    }
  }
  else
  {
    sub_249E176C0();
    swift_allocError();
    *(_QWORD *)v9 = 0xD000000000000025;
    *(_QWORD *)(v9 + 8) = 0x8000000249F35BA0;
    *(_BYTE *)(v9 + 16) = 5;
    swift_willThrow();
  }
  return v1;
}

void *sub_249E17AE4(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return sub_249E14A28(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_249E17AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9638);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

id sub_249E17B74(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578D9638) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_249E14040(a1, a2, (int)v2 + (int)v6, *(id *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

id sub_249E17BF4(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 5:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for InputConditioner.InputConditionerError(uint64_t a1)
{
  sub_249E17C3C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_249E17C3C(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 5:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:
    case 4:

      break;
    default:
      return;
  }
}

uint64_t _s16VisualGeneration16InputConditionerC21InputConditionerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E17BF4(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for InputConditioner.InputConditionerError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249E17BF4(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_249E17C3C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InputConditioner.InputConditionerError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_249E17C3C(v4, v5, v6);
  return a1;
}

uint64_t sub_249E17D54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_249E17D5C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InputConditioner.InputConditionerError()
{
  return &type metadata for InputConditioner.InputConditionerError;
}

void *sub_249E17D74(void *a1, uint64_t a2, int a3)
{
  return sub_249E17AE4(a1, a2, a3);
}

uint64_t dispatch thunk of SkinToneDirectiveSpecifying.skinToneDirective.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DCC420;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SkinToneDirectiveSpecifying.specifySkinToneDirective(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_249DAFCF8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SkinToneDirectiveSpecifying.dropSkinToneDirective()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_249DAFCF8;
  return v7(a1, a2);
}

void sub_249E17EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD v21[2];
  _OWORD v22[2];
  _OWORD v23[2];

  v4 = v3;
  v8 = type metadata accessor for Concept(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2578D5D38 != -1)
    swift_once();
  if (!objc_msgSend(v4, sel_attribute_atIndex_effectiveRange_, qword_2578FF360, a2, 0))
    goto LABEL_11;
  sub_249F1F9F4();
  swift_unknownObjectRelease();
  sub_249DCA678(v22, v23);
  sub_249DCA7E4((uint64_t)v23, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
LABEL_11:
    v17 = qword_2578FF360;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D88);
    v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_249F21770;
    sub_249DC091C(a1, v19 + v18, type metadata accessor for Concept);
    v20 = (void *)sub_249F1F538();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_addAttribute_value_range_, v17, v20, a2, a3);

    return;
  }
  v12 = v21[1];
  sub_249DC091C(a1, (uint64_t)v11, type metadata accessor for Concept);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_249DB20B8(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (v14 >= v13 >> 1)
    v12 = sub_249DB20B8(v13 > 1, v14 + 1, 1, v12);
  *(_QWORD *)(v12 + 16) = v14 + 1;
  sub_249D9E308((uint64_t)v11, v12+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v14, type metadata accessor for Concept);
  v15 = qword_2578FF360;
  v16 = (void *)sub_249F1F538();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_addAttribute_value_range_, v15, v16, a2, a3);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

void sub_249E181A0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_249F1E734();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_249F1E92C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_249F1F2F8();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_249F1F2E0();
  MEMORY[0x24BDAC7A8](v7);
  __asm { BR              X10 }
}

uint64_t sub_249E182D4()
{
  uint64_t v0;

  sub_249F1F2D4();
  sub_249F1F2C8();
  MEMORY[0x24BD05178](v0, &type metadata for Ambiguity);
  sub_249F1F2BC();
  swift_bridgeObjectRelease();
  sub_249F1F2C8();
  sub_249F1F2EC();
  sub_249F1E920();
  return sub_249F1F388();
}

void sub_249E184DC()
{
  uint64_t v0;

  sub_249E181A0(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_249E184E8()
{
  uint64_t result;

  result = sub_249F1F304();
  qword_2578FF358 = result;
  return result;
}

uint64_t sub_249E1851C()
{
  uint64_t result;

  result = sub_249F1F304();
  qword_2578FF360 = result;
  return result;
}

uint64_t sub_249E18550(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  *(_QWORD *)(v9 + 1016) = v8;
  *(_QWORD *)(v9 + 1008) = v17;
  *(_OWORD *)(v9 + 976) = v15;
  *(_OWORD *)(v9 + 992) = v16;
  *(_QWORD *)(v9 + 968) = a8;
  *(_QWORD *)(v9 + 960) = a7;
  *(_QWORD *)(v9 + 952) = a6;
  *(_QWORD *)(v9 + 944) = a5;
  *(_BYTE *)(v9 + 1576) = a4;
  *(_QWORD *)(v9 + 936) = a3;
  *(_QWORD *)(v9 + 928) = a2;
  *(_QWORD *)(v9 + 920) = a1;
  sub_249F1E6B0();
  *(_QWORD *)(v9 + 1024) = swift_task_alloc();
  v10 = sub_249F1E650();
  *(_QWORD *)(v9 + 1032) = v10;
  *(_QWORD *)(v9 + 1040) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 1048) = swift_task_alloc();
  *(_QWORD *)(v9 + 1056) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9730);
  *(_QWORD *)(v9 + 1064) = swift_task_alloc();
  v11 = sub_249F1E8D8();
  *(_QWORD *)(v9 + 1072) = v11;
  *(_QWORD *)(v9 + 1080) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 1088) = swift_task_alloc();
  *(_QWORD *)(v9 + 1096) = swift_task_alloc();
  type metadata accessor for NamedEntityData.NamedEntityType(0);
  *(_QWORD *)(v9 + 1104) = swift_task_alloc();
  *(_QWORD *)(v9 + 1112) = swift_task_alloc();
  *(_QWORD *)(v9 + 1120) = type metadata accessor for NamedEntityData(0);
  *(_QWORD *)(v9 + 1128) = swift_task_alloc();
  *(_QWORD *)(v9 + 1136) = swift_task_alloc();
  *(_QWORD *)(v9 + 1144) = swift_task_alloc();
  v12 = type metadata accessor for EntityExtractor.NamedEntity.EntityData();
  *(_QWORD *)(v9 + 1152) = v12;
  *(_QWORD *)(v9 + 1160) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 1168) = swift_task_alloc();
  *(_QWORD *)(v9 + 1176) = swift_task_alloc();
  v13 = type metadata accessor for Concept(0);
  *(_QWORD *)(v9 + 1184) = v13;
  *(_QWORD *)(v9 + 1192) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 1200) = swift_task_alloc();
  *(_QWORD *)(v9 + 1208) = swift_task_alloc();
  *(_QWORD *)(v9 + 1216) = swift_task_alloc();
  *(_QWORD *)(v9 + 1224) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6288);
  *(_QWORD *)(v9 + 1232) = swift_task_alloc();
  *(_QWORD *)(v9 + 1240) = swift_task_alloc();
  *(_QWORD *)(v9 + 1248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_249E1879C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_signpost_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint8_t *v31;
  NSObject *v32;
  os_signpost_type_t v33;
  os_signpost_id_t v34;
  void *v35;
  os_signpost_id_t v36;
  _QWORD *v37;
  void (*v38)(uint64_t, uint64_t);
  NSObject *v39;
  os_signpost_type_t v40;
  uint64_t v41;
  void (*v42)(void);
  uint8_t *v43;
  os_signpost_id_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(_QWORD);
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  void (*v92)(uint64_t, void (**)(uint64_t, unint64_t), uint64_t);
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  uint64_t v96;
  os_signpost_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  void (**v105)(uint64_t, unint64_t);
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint8_t *v110;
  os_signpost_id_t v111;
  void *v112;
  uint64_t v113;
  id v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t *v120;
  id v121;
  _QWORD *v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  void (*v135)(void);
  _BOOL4 v136;
  uint64_t *v137;
  void *v138;
  uint64_t inited;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t);
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t (*v152)(void);
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void *v157;
  void *v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  uint64_t v164;
  size_t v165;
  void (*v166)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  _BOOL4 v173;
  uint8_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  void *v184;
  uint64_t v185;
  size_t v186;
  uint64_t v187;
  uint8_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  void (*v199)(uint64_t, uint64_t, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint8_t *v205;
  NSObject *v206;
  os_signpost_id_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  id v211;
  id v212;
  void *v213;
  id v214;
  void *v215;
  os_signpost_id_t v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t *v228;
  id v229;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t *v234;
  NSObject *v235;
  os_log_type_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  id v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  NSObject *v258;
  os_signpost_type_t v259;
  void (*v260)(uint64_t, uint64_t, uint64_t);
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint8_t *v264;
  os_signpost_id_t v265;
  uint8_t *v266;
  void *v267;
  uint64_t v268;
  uint64_t v269;
  id v270;
  uint64_t *v271;
  uint64_t v272;
  id v273;
  _QWORD *v274;
  uint64_t v275;
  void *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void (*v285)(void);
  uint64_t (*v286)(uint64_t, uint64_t, uint64_t);
  void *v287;
  uint64_t *v288;
  char v289;
  id v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _QWORD *v294;
  uint64_t v295;
  char isUniquelyReferenced_nonNull_native;
  void (*v297)(size_t);
  void (*v298)(uint64_t, uint64_t, uint64_t);
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint8_t *v302;
  NSObject *v303;
  os_signpost_type_t v304;
  os_signpost_id_t v305;
  uint64_t v306;
  size_t v307;
  os_signpost_id_t v308;
  os_signpost_type_t v309;
  uint64_t v310;
  uint64_t v311;
  size_t v312;
  uint64_t v313;
  uint64_t v314;
  char v315;
  uint64_t v316;
  void *v317;
  uint64_t v318;
  uint64_t v319;
  void (*v320)(uint64_t *);
  void *v321;
  uint64_t v322;
  void (*v323)(uint64_t, uint64_t);
  uint64_t v324;
  uint64_t v325;
  void (*v326)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (**v327)(uint64_t, unint64_t);
  unint64_t v328;
  void (*v329)(void);
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t buf;
  uint64_t bufa;
  uint64_t bufb;
  uint64_t bufc;
  uint8_t *bufd;
  uint64_t bufe;
  _QWORD *v340;
  uint64_t *v341;
  os_log_type_t v342;
  uint64_t v343;
  uint64_t v344;
  const void *v345;
  uint64_t v346;
  void (*v347)(uint64_t, uint64_t);
  uint64_t v348;
  _QWORD *v349;
  const void *v350;
  NSObject *v351;
  void (*v352)(uint64_t, uint64_t);
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  int *v356;
  uint64_t v357[2];
  _QWORD v358[3];

  if (qword_2578D5D78 != -1)
    swift_once();
  v1 = v0[156];
  v2 = v0[119];
  v3 = sub_249F1EF38();
  v0[157] = __swift_project_value_buffer(v3, (uint64_t)qword_2578FF3F0);
  sub_249DCC274(v2, v1, &qword_2578D6288);
  swift_bridgeObjectRetain_n();
  v4 = sub_249F1EF20();
  v5 = sub_249F1F82C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[156];
  v340 = v0;
  if (v6)
  {
    v8 = v0[155];
    v9 = v0[117];
    v10 = v0[116];
    v11 = swift_slowAlloc();
    v353 = swift_slowAlloc();
    v357[0] = v353;
    *(_DWORD *)v11 = 136380931;
    swift_bridgeObjectRetain();
    v0[113] = sub_249E68CA8(v10, v9, v357);
    sub_249F1F9AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    sub_249DCC274(v7, v8, &qword_2578D6288);
    v12 = sub_249F1F3AC();
    v0[114] = sub_249E68CA8(v12, v13, v357);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    sub_249DCC2FC(v7, &qword_2578D6288);
    _os_log_impl(&dword_249D98000, v4, v5, "Validating \"%{private}s\" supplementalUUID=%s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](v353, -1, -1);
    MEMORY[0x24BD06618](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_249DCC2FC(v7, &qword_2578D6288);
  }

  v14 = sub_249F1EE9C();
  v0[158] = v14;
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v0[159] = v16;
  v0[160] = *(_QWORD *)(v16 + 64);
  v17 = swift_task_alloc();
  v0[161] = v17;
  if (qword_2578D5D80 != -1)
    swift_once();
  v18 = sub_249F1EED8();
  v0[162] = v18;
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_2578FF408);
  v0[163] = v19;
  sub_249F1EEC0();
  sub_249F1EE78();
  v354 = v19;
  v20 = sub_249F1EEC0();
  v21 = sub_249F1F8A4();
  v330 = (uint64_t)(v0 + 78);
  if ((sub_249F1F958() & 1) != 0)
  {
    v22 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v22, v17, v15);
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    v24 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v20, v21, v24, "validateText", "", v23, 2u);
    MEMORY[0x24BD06618](v23, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v22, v15);
    swift_task_dealloc();
  }
  else
  {

  }
  v328 = v15;
  buf = v0[117];
  v331 = v0[127];
  v332 = v0[116];
  swift_task_alloc();
  v25 = *(void (**)(void))(v16 + 16);
  v0[164] = v25;
  v329 = v25;
  v25();
  v0[165] = sub_249F1EF08();
  swift_allocObject();
  v0[166] = sub_249F1EEFC();
  swift_task_dealloc();
  v26 = v17;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = MEMORY[0x24BEE4AF8];
  v341 = (uint64_t *)(v27 + 16);
  v0[167] = v27;
  v327 = (void (**)(uint64_t, unint64_t))v16;
  v28 = *(_QWORD **)(v18 - 8);
  v0[168] = v28[8];
  v29 = swift_task_alloc();
  v30 = (void (*)(uint64_t, uint64_t, uint64_t))v28[2];
  v0[169] = v30;
  v30(v29, v354, v18);
  v31 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v31 = 0;
  v32 = sub_249F1EEC0();
  v33 = sub_249F1F8A4();
  v34 = sub_249F1EE84();
  _os_signpost_emit_with_name_impl(&dword_249D98000, v32, v33, v34, "extractEntities", "", v31, 2u);
  v35 = *(void **)(v331 + 24);
  swift_retain();
  sub_249E0DF74(v332, buf, (uint64_t)sub_249E21728, v27, v35);
  swift_release();
  LOBYTE(v27) = sub_249F1F898();
  v36 = sub_249F1EE84();
  v37 = v340;
  _os_signpost_emit_with_name_impl(&dword_249D98000, v32, (os_signpost_type_t)v27, v36, "extractEntities", "", v31, 2u);

  MEMORY[0x24BD06618](v31, -1, -1);
  v38 = (void (*)(uint64_t, uint64_t))v28[1];
  v340[170] = v38;
  v38(v29, v18);
  swift_task_dealloc();
  v39 = sub_249F1EEC0();
  v40 = sub_249F1F8A4();
  if ((sub_249F1F958() & 1) != 0)
  {
    v41 = swift_task_alloc();
    v42 = v329;
    ((void (*)(uint64_t, uint64_t, unint64_t))v329)(v41, v26, v328);
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    v44 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v39, v40, v44, "buildEntityConcepts", "", v43, 2u);
    MEMORY[0x24BD06618](v43, -1, -1);

    v327[1](v41, v328);
    swift_task_dealloc();
  }
  else
  {

    v42 = v329;
  }
  swift_task_alloc();
  v42();
  swift_allocObject();
  v340[171] = sub_249F1EEFC();
  swift_task_dealloc();
  v45 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  swift_bridgeObjectRetain();
  v46 = (void *)sub_249F1F304();
  swift_bridgeObjectRelease();
  v340[172] = objc_msgSend(v45, sel_initWithString_, v46);

  swift_beginAccess();
  v47 = *v341;
  v340[173] = *v341;
  v48 = *(_QWORD *)(v47 + 16);
  v340[174] = v48;
  if (v48)
  {
    swift_bridgeObjectRetain();
    v355 = 0;
    v49 = 0;
    while (1)
    {
      v37[175] = v49;
      v53 = (_QWORD *)(v37[173] + 24 * v49);
      v54 = v53[4];
      v37[176] = v54;
      v55 = v53[5];
      v37[177] = v55;
      v56 = v53[6];
      v37[178] = v56;
      swift_retain();
      result = sub_249F1F79C();
      if ((v58 & 1) != 0)
        goto LABEL_123;
      v59 = sub_249F1F4D8();
      v60 = MEMORY[0x24BD04FE0](v59);
      v62 = v61;
      swift_bridgeObjectRelease();
      v37[179] = v60;
      v37[180] = v62;
      v63 = *(_BYTE *)(v56 + 32);
      *((_BYTE *)v37 + 1577) = v63;
      type metadata accessor for EntityExtractor.NamedEntity();
      v64 = swift_dynamicCastClass();
      if (!v64)
        break;
      if ((v37[126] & 1) == 0)
      {
        v50 = v37[152];
        v65 = v50 + *(int *)(v37[140] + 20);
        v66 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 1, 1, v66);
        *(_QWORD *)v50 = v60;
        *(_QWORD *)(v50 + 8) = v62;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        sub_249E17EE8(v50, v54, v55);
        swift_release_n();
        goto LABEL_17;
      }
      v67 = v64;
      v68 = *(_QWORD *)(v64 + 40);
      v69 = *(_QWORD *)(v68 + 16);
      if (v69 != 1)
      {
        swift_retain();
        if (v69)
          goto LABEL_29;
LABEL_27:
        v74 = (uint64_t *)v37[152];
        v75 = v37[149];
        v76 = (char *)v74 + *(int *)(v37[140] + 20);
        v77 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 1, 1, v77);
        *v74 = v60;
        v74[1] = v62;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578D6D88);
        v78 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        v79 = swift_allocObject();
        *(_OWORD *)(v79 + 16) = xmmword_249F21770;
        sub_249D9E308((uint64_t)v74, v79 + v78, type metadata accessor for Concept);
        swift_bridgeObjectRetain();
        v80 = v355;
LABEL_30:
        v37[182] = v79;
        v37[181] = v80;
        if (v37[120] != 1)
        {
          v82 = (int *)v37[122];
          if (v82)
          {
            v37[112] = v79;
            v356 = (int *)((char *)v82 + *v82);
            swift_retain();
            v153 = (_QWORD *)swift_task_alloc();
            v37[183] = v153;
            *v153 = v37;
            v153[1] = sub_249E1B958;
            return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD *))v356)(v37[133], v37[116], v37[117], v54, v55, v37 + 112);
          }
        }
        v355 = v80;
        swift_bridgeObjectRelease();
        if (qword_2578D5D30 != -1)
          swift_once();
        v83 = (void *)v37[172];
        v84 = qword_2578FF358;
        v37[111] = v79;
        objc_msgSend(v83, sel_addAttribute_value_range_, v84, sub_249F1FEF8(), v54, v55);
        swift_release_n();
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
      v70 = v37[147];
      v71 = v37[144];
      v72 = *(unsigned __int8 *)(v37[145] + 80);
      sub_249DC091C(v68 + ((v72 + 32) & ~v72), v70, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      if ((*(_BYTE *)(v70 + *(int *)(v71 + 20)) & 1) != 0)
      {
        v73 = v37[147];
        swift_retain();
        sub_249DC05A8(v73, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
        if (!*(_QWORD *)(*(_QWORD *)(v67 + 40) + 16))
          goto LABEL_27;
LABEL_29:
        swift_bridgeObjectRetain();
        v81 = swift_bridgeObjectRetain();
        v80 = v355;
        v79 = sub_249E218C0(v81, v60, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      v331 = v37[152];
      v85 = v37[147];
      v341 = (uint64_t *)v85;
      v86 = v37[146];
      v330 = v37[143];
      v87 = (uint64_t *)v37[142];
      v328 = v37[144];
      v329 = (void (*)(void))v37[140];
      v88 = v37[139];
      v327 = (void (**)(uint64_t, unint64_t))v37[137];
      v89 = v340[135];
      v90 = v340[134];
      sub_249DC091C(v85, v86, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      *v87 = v60;
      v87[1] = v62;
      (*(void (**)(void (**)(uint64_t, unint64_t), uint64_t, uint64_t))(v89 + 16))(v327, v86, v90);
      v91 = *(_BYTE *)(v86 + *(int *)(v328 + 20));
      swift_retain();
      sub_249DC05A8(v86, (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
      v92 = *(void (**)(uint64_t, void (**)(uint64_t, unint64_t), uint64_t))(v89 + 32);
      v37 = v340;
      v92(v88, v327, v90);
      v93 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
      *(_BYTE *)(v88 + *(int *)(v93 + 20)) = v91;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v88, 0, 1, v93);
      sub_249D9E308(v88, (uint64_t)v87 + *((int *)v329 + 5), type metadata accessor for NamedEntityData.NamedEntityType);
      sub_249D9E308((uint64_t)v87, v330, type metadata accessor for NamedEntityData);
      sub_249DC091C(v330, v331, type metadata accessor for NamedEntityData);
      swift_storeEnumTagMultiPayload();
      sub_249E17EE8(v331, v54, v55);
      swift_release_n();
      sub_249DC05A8(v331, type metadata accessor for Concept);
      sub_249DC05A8(v330, type metadata accessor for NamedEntityData);
      v51 = (uint64_t)v341;
      v52 = (uint64_t (*)(_QWORD))type metadata accessor for EntityExtractor.NamedEntity.EntityData;
LABEL_18:
      sub_249DC05A8(v51, v52);
LABEL_19:
      v49 = v37[175] + 1;
      if (v49 == v37[174])
      {
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    v50 = v37[152];
    *(_QWORD *)v50 = v60;
    *(_QWORD *)(v50 + 8) = v62;
    *(_BYTE *)(v50 + 16) = v63;
    swift_storeEnumTagMultiPayload();
    sub_249E17EE8(v50, v54, v55);
    swift_release();
LABEL_17:
    v51 = v50;
    v52 = type metadata accessor for Concept;
    goto LABEL_18;
  }
  v355 = 0;
LABEL_38:
  v94 = (uint64_t)(v37 + 109);
  v95 = sub_249F1EEC0();
  v96 = swift_task_alloc();
  sub_249F1EEF0();
  v97 = sub_249F1F898();
  v345 = v37 + 18;
  v350 = v37 + 109;
  if ((sub_249F1F958() & 1) != 0)
  {
    v98 = sub_249F1EEE4();
    v99 = *(_QWORD *)(v98 - 8);
    v100 = swift_task_alloc();
    swift_retain();
    sub_249F1EF14();
    swift_release();
    v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 88))(v100, v98);
    if (MEMORY[0x24BEE7808] && v101 == *MEMORY[0x24BEE7808])
    {
      v102 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v100, v98);
      v102 = "";
    }
    v37 = v340;
    v106 = (void (*)(uint64_t, uint64_t, uint64_t))v340[164];
    v107 = v340[159];
    v108 = v340[158];
    swift_task_dealloc();
    v109 = swift_task_alloc();
    v106(v109, v96, v108);
    v110 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v110 = 0;
    v111 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v95, v97, v111, "buildEntityConcepts", v102, v110, 2u);
    MEMORY[0x24BD06618](v110, -1, -1);

    v105 = *(void (***)(uint64_t, unint64_t))(v107 + 8);
    ((void (*)(uint64_t, uint64_t))v105)(v96, v108);
    ((void (*)(uint64_t, uint64_t))v105)(v109, v108);
    swift_task_dealloc();
    v94 = (uint64_t)v350;
  }
  else
  {
    v103 = v37[159];
    v104 = v37[158];

    v105 = *(void (***)(uint64_t, unint64_t))(v103 + 8);
    ((void (*)(uint64_t, uint64_t))v105)(v96, v104);
  }
  v37[184] = v105;
  swift_task_dealloc();
  v37[109] = MEMORY[0x24BEE4AF8];
  if (qword_2578D5D30 != -1)
    swift_once();
  v112 = (void *)v37[172];
  v113 = qword_2578FF358;
  v114 = objc_msgSend(v112, sel_length);
  v115 = v37;
  v116 = swift_allocObject();
  v115[185] = v116;
  *(_QWORD *)(v116 + 16) = v94;
  *(_QWORD *)(v116 + 24) = v112;
  v117 = swift_allocObject();
  *(_QWORD *)(v117 + 16) = sub_249E21754;
  *(_QWORD *)(v117 + 24) = v116;
  v115[22] = sub_249E0E908;
  v115[23] = v117;
  v118 = MEMORY[0x24BDAC760];
  v115[18] = MEMORY[0x24BDAC760];
  v115[19] = 1107296256;
  v115[20] = sub_249E1F944;
  v115[21] = &block_descriptor_2;
  v119 = _Block_copy(v345);
  v120 = (uint64_t *)v115[23];
  v121 = v112;
  swift_retain();
  swift_release();
  objc_msgSend(v121, sel_enumerateAttribute_inRange_options_usingBlock_, v113, 0, v114, 0, v119);
  _Block_release(v119);
  LOBYTE(v113) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v113 & 1) != 0)
  {
    __break(1u);
    goto LABEL_118;
  }
  if (*(_QWORD *)(*(_QWORD *)v94 + 16))
  {
    v122 = v340;
    v123 = sub_249F1EF20();
    v124 = sub_249F1F820();
    if (os_log_type_enabled(v123, v124))
    {
      v342 = v124;
      v125 = (uint8_t *)swift_slowAlloc();
      bufa = swift_slowAlloc();
      v357[0] = bufa;
      *(_DWORD *)v125 = 136380675;
      swift_beginAccess();
      v126 = v340[109];
      v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9738);
      v340[39] = v127;
      v128 = sub_249DDFC68(&qword_2578D9740, &qword_2578D9738, MEMORY[0x24BEE12C8]);
      v340[40] = v128;
      v340[36] = v126;
      __swift_project_boxed_opaque_existential_1(v340 + 36, v127);
      v129 = (_QWORD *)swift_task_alloc();
      v129[2] = v127;
      v129[3] = v128;
      v129[4] = sub_249E72DE8;
      v129[5] = 0;
      swift_bridgeObjectRetain_n();
      v131 = sub_249E2262C((void (*)(char *, char *))sub_249E21784, (uint64_t)v129, v127, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v128, MEMORY[0x24BEE40A8], v130);
      swift_task_dealloc();
      v340[106] = v131;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
      sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
      v132 = sub_249F1F280();
      v134 = v133;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v340 + 36));
      swift_bridgeObjectRelease();
      v340[105] = sub_249E68CA8(v132, v134, v357);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249D98000, v123, v342, "Unresolved ambiguities: %{private}s", v125, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](bufa, -1, -1);
      MEMORY[0x24BD06618](v125, -1, -1);
    }

    v145 = (void *)v340[172];
    swift_beginAccess();
    v146 = v340[109];
    sub_249E11A64();
    swift_allocError();
    *(_QWORD *)v147 = v146;
    *(_BYTE *)(v147 + 8) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    v326 = 0;
    goto LABEL_54;
  }
  v122 = v340;
  v135 = (void (*)(void))v340[124];
  v94 = v340[126] & 2;
  v136 = (v94 | (unint64_t)v135) != 0;
  v137 = (uint64_t *)swift_allocObject();
  v340[186] = v137;
  v137[2] = 0;
  v137[3] = 0;
  LODWORD(v331) = v136;
  if (v135)
  {
    v138 = (void *)v340[172];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D79D0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249F21770;
    *(_QWORD *)(inited + 32) = 0x74706D6F7270;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v140 = objc_msgSend(v138, sel_string);
    v141 = sub_249F1F328();
    v143 = v142;

    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v141;
    *(_QWORD *)(inited + 56) = v143;
    v144 = sub_249DAE8D4(inited);
    v154 = sub_249EA69C0(v144);
    swift_bridgeObjectRelease();
    v137[2] = 0;
    v137[3] = v154;
    swift_bridgeObjectRelease();
    v155 = 0;
    v136 = (v94 | (unint64_t)v135) != 0;
  }
  else
  {
    v155 = v355;
  }
  v341 = v340 + 104;
  v355 = v155;
  v329 = v135;
  v330 = (uint64_t)v137;
  v327 = v105;
  if (!v136)
  {
    v328 = v94;
    v166 = 0;
    v167 = 0;
    goto LABEL_75;
  }
  v156 = v340 + 24;
  v157 = v340 + 99;
  v340[99] = MEMORY[0x24BEE4B08];
  if (qword_2578D5D38 != -1)
    goto LABEL_120;
  while (1)
  {
    v158 = (void *)v122[172];
    bufb = qword_2578FF360;
    v159 = objc_msgSend(v158, sel_length);
    v160 = swift_allocObject();
    *(_QWORD *)(v160 + 16) = v157;
    *(_QWORD *)(v160 + 24) = v158;
    v161 = swift_allocObject();
    *(_QWORD *)(v161 + 16) = sub_249E218A8;
    *(_QWORD *)(v161 + 24) = v160;
    v346 = v160;
    v122[28] = sub_249E21DAC;
    v122[29] = v161;
    v122[24] = v118;
    v122[25] = 1107296256;
    v122[26] = sub_249E1F944;
    v122[27] = &block_descriptor_41;
    v162 = _Block_copy(v156);
    v163 = v158;
    swift_retain();
    swift_release();
    objc_msgSend(v163, sel_enumerateAttribute_inRange_options_usingBlock_, bufb, 0, v159, 0, v162);
    _Block_release(v162);
    LOBYTE(v159) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v159 & 1) != 0)
    {
      __break(1u);
      goto LABEL_122;
    }
    if (*(_QWORD *)(*(_QWORD *)v157 + 16))
      break;
    swift_bridgeObjectRelease();
    v122 = v340;
LABEL_74:
    v167 = v346;
    v328 = v94;
    v166 = sub_249E218A8;
LABEL_75:
    v122[188] = v167;
    v122[187] = v166;
    v198 = v122[172];
    v347 = (void (*)(uint64_t, uint64_t))v122[170];
    v350 = v122 + 30;
    v199 = (void (*)(uint64_t, uint64_t, uint64_t))v122[169];
    v200 = v122[163];
    v201 = v122[162];
    bufe = v201;
    v202 = v122[117];
    v203 = v122[116];
    v204 = swift_task_alloc();
    v199(v204, v200, v201);
    v205 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v205 = 0;
    v206 = sub_249F1EEC0();
    LOBYTE(v199) = sub_249F1F8A4();
    v207 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v206, (os_signpost_type_t)v199, v207, "buildNounEmojiConcepts", "", v205, 2u);
    v208 = swift_task_alloc();
    *(_QWORD *)(v208 + 16) = v198;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9748);
    v209 = swift_allocObject();
    *(_OWORD *)(v209 + 16) = xmmword_249F21770;
    v210 = (void *)*MEMORY[0x24BDDFD00];
    *(_QWORD *)(v209 + 32) = *MEMORY[0x24BDDFD00];
    v211 = objc_allocWithZone(MEMORY[0x24BDDFD68]);
    type metadata accessor for NLTagScheme(0);
    v212 = v210;
    v213 = (void *)sub_249F1F538();
    swift_bridgeObjectRelease();
    v214 = objc_msgSend(v211, sel_initWithTagSchemes_, v213);

    v215 = (void *)sub_249F1F304();
    objc_msgSend(v214, sel_setString_, v215);

    v94 = swift_task_alloc();
    *(_QWORD *)(v94 + 16) = v203;
    *(_QWORD *)(v94 + 24) = v202;
    *(_QWORD *)(v94 + 32) = sub_249E217C8;
    *(_QWORD *)(v94 + 40) = v208;
    sub_249F1F928();

    swift_task_dealloc();
    v120 = v340;
    swift_task_dealloc();
    LOBYTE(v214) = sub_249F1F898();
    v216 = sub_249F1EE84();
    _os_signpost_emit_with_name_impl(&dword_249D98000, v206, (os_signpost_type_t)v214, v216, "buildNounEmojiConcepts", "", v205, 2u);

    MEMORY[0x24BD06618](v205, -1, -1);
    v347(v204, bufe);
    swift_task_dealloc();
    v340[104] = MEMORY[0x24BEE4AF8];
    if (qword_2578D5D38 != -1)
LABEL_118:
      swift_once();
    v156 = (void *)v120[172];
    v217 = qword_2578FF360;
    v218 = objc_msgSend(v156, sel_length);
    v219 = swift_allocObject();
    v120[189] = v219;
    *(_QWORD *)(v219 + 16) = v341;
    v220 = swift_allocObject();
    *(_QWORD *)(v220 + 16) = sub_249E21804;
    *(_QWORD *)(v220 + 24) = v219;
    v120[34] = (uint64_t)sub_249E21DAC;
    v120[35] = v220;
    v118 = MEMORY[0x24BDAC760];
    v120[30] = MEMORY[0x24BDAC760];
    v120[31] = 1107296256;
    v120[32] = (uint64_t)sub_249E1F944;
    v120[33] = (uint64_t)&block_descriptor_19;
    v157 = _Block_copy(v350);
    v137 = v120;
    v122 = (_QWORD *)v120[35];
    swift_retain();
    swift_release();
    objc_msgSend(v156, sel_enumerateAttribute_inRange_options_usingBlock_, v217, 0, v218, 0, v157);
    _Block_release(v157);
    LOBYTE(v217) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v217 & 1) == 0)
    {
      v221 = (void *)v137[172];
      v222 = swift_bridgeObjectRetain();
      v223 = sub_249E72A58(v222);
      swift_bridgeObjectRelease();
      v137[104] = v223;
      swift_bridgeObjectRelease();
      v224 = objc_msgSend(v221, sel_string);
      sub_249F1F328();

      v225 = v137[104];
      v226 = *(_QWORD *)(v225 + 16);
      v227 = v137;
      if (v226)
      {
        swift_bridgeObjectRetain();
        v228 = (uint64_t *)(v225 + 16 * v226 + 24);
        v348 = v225;
        while (v226 <= *(_QWORD *)(v225 + 16))
        {
          v231 = *(v228 - 1);
          v232 = *v228;
          sub_249F1F79C();
          if ((v233 & 1) == 0)
          {
            v234 = v227;
            swift_bridgeObjectRetain_n();
            v235 = sub_249F1EF20();
            v236 = sub_249F1F808();
            v351 = v235;
            if (os_log_type_enabled(v235, v236))
            {
              v237 = swift_slowAlloc();
              v343 = swift_slowAlloc();
              v357[0] = v343;
              *(_DWORD *)v237 = 136380931;
              v238 = sub_249F1F4D8();
              v239 = MEMORY[0x24BD04FE0](v238);
              v241 = v240;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v237 + 4) = sub_249E68CA8(v239, v241, v357);
              v227 = v340;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v237 + 12) = 2080;
              *(_QWORD *)(v237 + 14) = sub_249E68CA8(0x6E6F73726570, 0xE600000000000000, v357);
              _os_log_impl(&dword_249D98000, v351, v236, "Replacing unknown named entity string \"%{private}s\" with \"%s\"", (uint8_t *)v237, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x24BD06618](v343, -1, -1);
              MEMORY[0x24BD06618](v237, -1, -1);

            }
            else
            {
              swift_bridgeObjectRelease_n();

              v227 = v234;
            }
            v229 = objc_msgSend((id)v227[172], sel_mutableString);
            v230 = (void *)sub_249F1F304();
            objc_msgSend(v229, sel_replaceCharactersInRange_withString_, v231, v232, v230);

            v225 = v348;
          }
          v228 -= 2;
          if (!--v226)
            goto LABEL_87;
        }
        __break(1u);
LABEL_87:
        swift_bridgeObjectRelease();
        v118 = MEMORY[0x24BDAC760];
      }
      swift_bridgeObjectRelease();
      v242 = v227[154];
      v243 = v227[135];
      v244 = v227[134];
      sub_249DCC274(v227[119], v242, &qword_2578D6288);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(v242, 1, v244) == 1)
      {
        sub_249DCC2FC(v227[154], &qword_2578D6288);
      }
      else
      {
        v245 = (void *)v227[172];
        v246 = v227[154];
        v247 = (_QWORD *)v227[152];
        v248 = v340[140];
        v249 = v340[136];
        v250 = v340[135];
        v251 = v340[134];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 32))(v249, v246, v251);
        v252 = (char *)v247 + *(int *)(v248 + 20);
        (*(void (**)(char *, uint64_t, uint64_t))(v250 + 16))(v252, v249, v251);
        v253 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
        v252[*(int *)(v253 + 20)] = 0;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v253 - 8) + 56))(v252, 0, 1, v253);
        *v247 = 0x6E6F73726570;
        v247[1] = 0xE600000000000000;
        swift_storeEnumTagMultiPayload();
        v254 = objc_msgSend(v245, sel_mutableString);
        v255 = (void *)sub_249F1F304();
        objc_msgSend(v254, sel_insertString_atIndex_, v255, 0);

        v227 = v340;
        v256 = sub_249F1F424();
        sub_249E17EE8((uint64_t)v247, 0, v256);
        sub_249DC05A8((uint64_t)v247, type metadata accessor for Concept);
        (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v249, v251);
      }
      v257 = v330;
      if ((_DWORD)v331)
      {
        v258 = sub_249F1EEC0();
        v259 = sub_249F1F8A4();
        if ((sub_249F1F958() & 1) != 0)
        {
          v260 = (void (*)(uint64_t, uint64_t, uint64_t))v340[164];
          v261 = v340[161];
          v262 = v340[158];
          v263 = swift_task_alloc();
          v260(v263, v261, v262);
          v264 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v264 = 0;
          v265 = sub_249F1EE84();
          _os_signpost_emit_with_name_impl(&dword_249D98000, v258, v259, v265, "sanitizeText", "", v264, 2u);
          v266 = v264;
          v227 = v340;
          MEMORY[0x24BD06618](v266, -1, -1);

          ((void (*)(uint64_t, uint64_t))v327)(v263, v262);
          swift_task_dealloc();
        }
        else
        {

        }
        v285 = (void (*)(void))v227[164];
        swift_task_alloc();
        v285();
        swift_allocObject();
        v227[190] = sub_249F1EEFC();
        swift_task_dealloc();
        if (*(_QWORD *)(v330 + 24))
        {
          swift_retain();
          v286 = sub_249E21890;
        }
        else
        {
          v286 = 0;
          v257 = 0;
        }
        v227[192] = v257;
        v227[191] = (uint64_t)v286;
        v287 = (void *)v227[172];
        v288 = v227;
        v289 = *((_BYTE *)v227 + 1576);
        v290 = objc_msgSend(v287, sel_string);
        v291 = sub_249F1F328();
        v293 = v292;

        v288[193] = v293;
        v294 = (_QWORD *)swift_task_alloc();
        v288[194] = (uint64_t)v294;
        *v294 = v288;
        v294[1] = sub_249E1E7E0;
        return sub_249E6F00C(v291, v293, (v328 >> 1) | (2 * (v329 != 0)), (uint64_t)v286, v257, v289 & 1, v288[118]);
      }
      v267 = (void *)v227[172];
      v268 = v227[132];
      v269 = MEMORY[0x24BEE4B08];
      v227[101] = MEMORY[0x24BEE4B08];
      v227[100] = v269;
      v270 = objc_msgSend(v267, sel_string);
      sub_249F1F328();
      v271 = v227;

      sub_249F1E6A4();
      sub_249F1E65C();
      v272 = qword_2578FF360;
      v273 = objc_msgSend(v267, sel_length);
      v274 = (_QWORD *)swift_allocObject();
      v349 = v227 + 100;
      v274[2] = v227 + 100;
      v274[3] = v268;
      v274[4] = v227 + 101;
      v275 = swift_allocObject();
      *(_QWORD *)(v275 + 16) = sub_249E2182C;
      *(_QWORD *)(v275 + 24) = v274;
      v227[16] = (uint64_t)sub_249E21DAC;
      v227[17] = v275;
      v227[12] = v118;
      v227[13] = 1107296256;
      v227[14] = (uint64_t)sub_249E1F944;
      v227[15] = (uint64_t)&block_descriptor_29;
      v276 = _Block_copy(v227 + 12);
      swift_retain();
      swift_release();
      objc_msgSend(v267, sel_enumerateAttribute_inRange_options_usingBlock_, v272, 0, v273, 0, v276);
      _Block_release(v276);
      LOBYTE(v267) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v267 & 1) == 0)
      {
        v277 = v227[186];
        swift_beginAccess();
        if (*(_QWORD *)(v277 + 24))
        {
          v278 = v227[131];
          v279 = v227[130];
          v280 = v227[129];
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 16))(v278, v227[132], v280);
          sub_249E21848();
          v281 = sub_249F1E74C();
          v283 = v282;
          (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v278, v280);
          v340[74] = MEMORY[0x24BEE0D00];
          v340[71] = v281;
          v227 = v340;
          v340[72] = v283;
          sub_249DCA7E4((uint64_t)(v271 + 71), (uint64_t)(v271 + 63));
          JSONValue.init(_:)(v271 + 63, v358);
          v284 = v340[186];
          v295 = v358[0];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v357[0] = *(_QWORD *)(v284 + 24);
          *(_QWORD *)(v284 + 24) = 0x8000000000000000;
          sub_249DD1B3C(v295, 0x65746E656D677561, 0xEF74706D6F725064, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v284 + 24) = v357[0];
          swift_bridgeObjectRelease();
          swift_endAccess();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v271 + 71));
        }
        else
        {
          swift_endAccess();
        }
        v297 = (void (*)(size_t))v227[120];
        if ((unint64_t)v297 >= 2)
        {
          v352 = (void (*)(uint64_t, uint64_t))v227[170];
          v298 = (void (*)(uint64_t, uint64_t, uint64_t))v227[169];
          v299 = v227[163];
          v300 = v227[162];
          v344 = v300;
          v301 = swift_task_alloc();
          v298(v301, v299, v300);
          swift_retain();
          v302 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v302 = 0;
          v303 = sub_249F1EEC0();
          v304 = sub_249F1F8A4();
          v305 = sub_249F1EE84();
          _os_signpost_emit_with_name_impl(&dword_249D98000, v303, v304, v305, "reportConcepts", "", v302, 2u);
          v306 = swift_bridgeObjectRetain();
          v307 = sub_249DBE258(v306);
          swift_bridgeObjectRelease();
          v297(v307);
          swift_release();
          LOBYTE(v307) = sub_249F1F898();
          v308 = sub_249F1EE84();
          v309 = v307;
          v227 = v340;
          _os_signpost_emit_with_name_impl(&dword_249D98000, v303, v309, v308, "reportConcepts", "", v302, 2u);

          MEMORY[0x24BD06618](v302, -1, -1);
          sub_249DC0A2C((uint64_t)v297);
          v352(v301, v344);
          swift_task_dealloc();
        }
        v310 = v227[186];
        swift_beginAccess();
        if (*(_QWORD *)(v310 + 24))
        {
          v311 = swift_bridgeObjectRetain();
          v312 = sub_249DBE258(v311);
          swift_bridgeObjectRelease();
          v227[54] = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
          v227[51] = v312;
          sub_249DCA7E4((uint64_t)(v227 + 51), (uint64_t)(v227 + 55));
          JSONValue.init(_:)(v227 + 55, v358);
          v313 = v227[186];
          v314 = v358[0];
          v315 = swift_isUniquelyReferenced_nonNull_native();
          v357[0] = *(_QWORD *)(v313 + 24);
          *(_QWORD *)(v313 + 24) = 0x8000000000000000;
          sub_249DD1B3C(v314, 0xD000000000000012, 0x8000000249F33B90, v315);
          *(_QWORD *)(v313 + 24) = v357[0];
          swift_bridgeObjectRelease();
          swift_endAccess();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v227 + 51));
        }
        else
        {
          swift_endAccess();
        }
        if (*(_QWORD *)(*v349 + 16))
        {
          v316 = swift_bridgeObjectRetain();
          v317 = (void *)sub_249DBE160(v316);
          swift_bridgeObjectRelease();
          sub_249E20788(v317);
          swift_release();
        }
        v318 = v227[186];
        v319 = *(_QWORD *)(v318 + 24);
        if (v319)
        {
          v320 = (void (*)(uint64_t *))v227[124];
          v321 = (void *)v227[172];
          if (v320)
          {
            LOBYTE(v357[0]) = *(_QWORD *)(v318 + 16);
            v357[1] = v319;
            swift_bridgeObjectRetain();
            v320(v357);

            swift_release();
            swift_bridgeObjectRelease();
LABEL_116:
            v322 = v227[187];
            v323 = (void (*)(uint64_t, uint64_t))v227[184];
            v324 = v227[161];
            v325 = v227[158];
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v227[130] + 32))(v227[115], v227[132], v227[129]);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            sub_249DDDF68("validateText", 12, 2);
            swift_release();
            v323(v324, v325);
            swift_release();
            sub_249DC0A2C(v322);
            swift_release();
            swift_release();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            v152 = (uint64_t (*)(void))v227[1];
            return v152();
          }

        }
        else
        {

        }
        swift_release();
        goto LABEL_116;
      }
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      return result;
    }
    __break(1u);
LABEL_120:
    swift_once();
  }
  v122 = v340;
  if (v137[3])
  {
    v164 = swift_bridgeObjectRetain();
    v165 = sub_249DBE258(v164);
    swift_bridgeObjectRelease();
    v340[70] = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8ED8);
    v340[67] = v165;
    sub_249DCA7E4((uint64_t)(v340 + 67), (uint64_t)(v340 + 59));
    JSONValue.init(_:)(v340 + 59, v358);
    v168 = v358[0];
    v169 = swift_isUniquelyReferenced_nonNull_native();
    v357[0] = v137[3];
    v137[3] = 0x8000000000000000;
    sub_249DD1B3C(v168, 0xD000000000000010, 0x8000000249F35CB0, v169);
    v137[3] = v357[0];
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v340 + 67));
    v170 = 0;
  }
  else
  {
    v170 = v355;
  }
  v171 = sub_249F1EF20();
  v172 = sub_249F1F820();
  v173 = os_log_type_enabled(v171, v172);
  if (!v94)
  {
    v355 = v170;
    if (v173)
    {
      v188 = (uint8_t *)swift_slowAlloc();
      v333 = swift_slowAlloc();
      v357[0] = v333;
      bufd = v188;
      *(_DWORD *)v188 = 136380675;
      swift_beginAccess();
      v189 = v340[99];
      v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9750);
      v340[49] = v190;
      v191 = sub_249DDFC68(&qword_2578D9758, &qword_2578D9750, MEMORY[0x24BEE1718]);
      v340[50] = v191;
      v340[46] = v189;
      __swift_project_boxed_opaque_existential_1(v340 + 46, v190);
      v192 = (_QWORD *)swift_task_alloc();
      v192[2] = v190;
      v192[3] = v191;
      v192[4] = sub_249E72DE8;
      v192[5] = 0;
      swift_bridgeObjectRetain_n();
      v194 = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)v192, v190, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v191, MEMORY[0x24BEE40A8], v193);
      swift_task_dealloc();
      v340[102] = v194;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
      sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
      v195 = sub_249F1F280();
      v197 = v196;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v340 + 46));
      v122 = v340;
      swift_bridgeObjectRelease();
      v340[103] = sub_249E68CA8(v195, v197, v357);
      sub_249F1F9AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249D98000, v171, v172, "Disallowed concepts: %{private}s", bufd, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD06618](v333, -1, -1);
      MEMORY[0x24BD06618](bufd, -1, -1);
    }

    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  if (v173)
  {
    v174 = (uint8_t *)swift_slowAlloc();
    bufc = swift_slowAlloc();
    v357[0] = bufc;
    *(_DWORD *)v174 = 136380675;
    swift_beginAccess();
    v175 = v340[99];
    v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578D9750);
    v340[44] = v176;
    v177 = sub_249DDFC68(&qword_2578D9758, &qword_2578D9750, MEMORY[0x24BEE1718]);
    v340[45] = v177;
    v340[41] = v175;
    __swift_project_boxed_opaque_existential_1(v340 + 41, v176);
    v178 = (_QWORD *)swift_task_alloc();
    v178[2] = v176;
    v178[3] = v177;
    v178[4] = sub_249E72DE8;
    v178[5] = 0;
    swift_bridgeObjectRetain_n();
    v180 = sub_249E2262C((void (*)(char *, char *))sub_249E21D98, (uint64_t)v178, v176, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v177, MEMORY[0x24BEE40A8], v179);
    swift_task_dealloc();
    v340[107] = v180;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578D8E30);
    sub_249DDFC68((unint64_t *)&qword_2578D8E38, &qword_2578D8E30, MEMORY[0x24BEE12B0]);
    v181 = sub_249F1F280();
    v183 = v182;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v340 + 41));
    v122 = v340;
    swift_bridgeObjectRelease();
    v340[108] = sub_249E68CA8(v181, v183, v357);
    sub_249F1F9AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249D98000, v171, v172, "Disallowed concepts: %{private}s", v174, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD06618](bufc, -1, -1);
    MEMORY[0x24BD06618](v174, -1, -1);
  }

  v184 = (void *)v122[172];
  swift_beginAccess();
  v185 = swift_bridgeObjectRetain();
  v186 = sub_249DBE258(v185);
  swift_bridgeObjectRelease();
  sub_249E11A64();
  swift_allocError();
  *(_QWORD *)v187 = v186;
  *(_BYTE *)(v187 + 8) = 3;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  v326 = sub_249E218A8;
LABEL_54:
  v148 = (void (*)(uint64_t, uint64_t))v122[184];
  v149 = v122[161];
  v150 = v122;
  v151 = v122[158];
  sub_249DDDF68("validateText", 12, 2);
  swift_release();
  v148(v149, v151);
  swift_release();
  sub_249DC0A2C((uint64_t)v326);
  sub_249DC0A2C(0);
  sub_249DC0A2C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v152 = (uint64_t (*)(void))v150[1];
  return v152();
}

