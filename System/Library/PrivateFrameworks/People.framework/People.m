uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C0746F64();
}

uint64_t objectdestroyTm()
{
  sub_1C0747030();
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  v3 = sub_1C07472C4();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return sub_1C0747030();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        sub_1C0746F64();
        result = (uint64_t *)sub_1C0747030();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          sub_1C0746F64();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)sub_1C0747030();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          sub_1C0746F64();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        sub_1C0746F64();
        result = (uint64_t *)sub_1C0747030();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          sub_1C0746F64();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)sub_1C0747030();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          sub_1C0746F64();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BA0C14]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t block_destroy_helper()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_0()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_1()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_2()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_3()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_4()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_5()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_6()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_7()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_8()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_9()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_10()
{
  return sub_1C0747030();
}

uint64_t block_destroy_helper_11()
{
  return sub_1C0747030();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3BA0BB4](a1, v6, a5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1C3BA0D04);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BA0C20](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C07473E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C07473E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1C0674B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t IMCoreLibrary()
{
  uint64_t v0;
  void *v2;

  if (!IMCoreLibraryCore_frameworkLibrary)
    IMCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = IMCoreLibraryCore_frameworkLibrary;
  if (!IMCoreLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t StatusType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0674CB4 + 4 * byte_1C0748E90[*v0]))(0xD000000000000011, 0x80000001C0751EA0);
}

uint64_t sub_1C0674CB4()
{
  return 0x6C69617641646E64;
}

uint64_t sub_1C0674CD8()
{
  return 0x74536E6F69746F6DLL;
}

uint64_t sub_1C0674CFC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1C0674D14()
{
  return 0x7975426F546B7361;
}

uint64_t sub_1C0674D38()
{
  return 0x617453646C696863;
}

uint64_t sub_1C0674D54()
{
  return 0x654D646165726E75;
}

uint64_t sub_1C0674D78()
{
  return 0x7373654D64616572;
}

uint64_t sub_1C0674D98()
{
  return 0x614364657373696DLL;
}

uint64_t sub_1C0674DB8()
{
  return 0x7261646E656C6163;
}

uint64_t StatusType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0674E04 + 4 * byte_1C0748E9A[*v0]))(0xD000000000000011, 0x80000001C0751EA0);
}

uint64_t sub_1C0674E04()
{
  return 0x6C69617641646E64;
}

uint64_t sub_1C0674E28()
{
  return 0x74536E6F69746F6DLL;
}

uint64_t sub_1C0674E4C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1C0674E64()
{
  return 0x7975426F546B7361;
}

uint64_t sub_1C0674E88()
{
  return 0x617453646C696863;
}

uint64_t sub_1C0674EA4()
{
  return 0x654D646165726E75;
}

uint64_t sub_1C0674EC8()
{
  return 0x7373654D64616572;
}

uint64_t sub_1C0674EE8()
{
  return 0x614364657373696DLL;
}

uint64_t sub_1C0674F08()
{
  return 0x7261646E656C6163;
}

void sub_1C0674F20()
{
  qword_1EF629C60 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C0674F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = sub_1C06D7C8C((uint64_t)&unk_1E79E36D0);
  if (qword_1EF61A230 != -1)
    swift_once();
  v1 = sub_1C0746EF8();
  v2 = sub_1C06829A0(v1, v0);
  swift_bridgeObjectRelease();
  v3 = sub_1C06E0858(v2);
  result = sub_1C0747030();
  qword_1EF629C68 = v3;
  return result;
}

void *static StatusType.allCases.getter()
{
  return &unk_1E79E36D0;
}

People::StatusType_optional __swiftcall StatusType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  People::StatusType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1C067502C(char *a1)
{
  sub_1C06BA2D4(*a1);
}

uint64_t sub_1C0675038()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1C0748350();
  sub_1C0676198((uint64_t)v3, v1);
  return sub_1C0748374();
}

uint64_t sub_1C067507C()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06750E0()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0675168(char a1)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C06751AC()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675238()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06752D8()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675340()
{
  sub_1C0748350();
  sub_1C0748368();
  return sub_1C0748374();
}

uint64_t sub_1C0675398()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C067540C()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0675494(char a1)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C06754F0()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675570()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C06755EC(char a1)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C0675640()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06756C8()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0675744(char a1)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C0675798()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675818()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0675894(char a1)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C06758F0()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675984()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06759F0()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675A74()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675ADC()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675B44()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675BAC()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675C14()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675C7C()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0675CE4()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0675D4C(uint64_t a1)
{
  char *v1;

  sub_1C0676198(a1, *v1);
}

uint64_t sub_1C0675D54()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0675DB4()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0675DF4()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C0675E6C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0675EA0()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0675F18()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0675F4C()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0675F8C()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0675FCC()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C067600C()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C067604C()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676098()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06760D8()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676118()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676158()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C0676198(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C06761DC()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C067630C()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676368()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C06763AC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C06763F4()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676470()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C06764BC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0676500()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C067656C()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C06765C0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0676604()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676678()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C06766D8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C0676720()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0676788()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1C0748350();
  sub_1C0676198((uint64_t)v3, v1);
  return sub_1C0748374();
}

uint64_t sub_1C06767C8()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0676840(uint64_t a1, char a2)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C0676898()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676918()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C067699C(uint64_t a1, char a2)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C06769EC()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676A74()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0676AEC(uint64_t a1, char a2)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C0676B3C()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676BBC()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0676C34(uint64_t a1, char a2)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C0676C8C()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676D20()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676D88()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676E08()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0676E6C(uint64_t a1, char a2)
{
  sub_1C0748350();
  __asm { BR              X10 }
}

uint64_t sub_1C0676EAC()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676F38()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0676F9C()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0677020()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0677084()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06770E8()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C067714C()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06771BC()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0677220()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0677280()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06772E4()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0677380()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06773E4()
{
  sub_1C0748350();
  sub_1C0748368();
  return sub_1C0748374();
}

uint64_t sub_1C0677438()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

People::StatusType_optional sub_1C067749C(Swift::String *a1)
{
  return StatusType.init(rawValue:)(*a1);
}

uint64_t sub_1C06774A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StatusType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C06774CC()
{
  sub_1C068A3F4();
  return sub_1C0747AE0();
}

uint64_t sub_1C0677528()
{
  sub_1C068A3F4();
  return sub_1C0747AC8();
}

void sub_1C0677578(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E79E36D0;
}

uint64_t AvailabilityType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2037609794;
  else
    return 1701147206;
}

uint64_t AvailabilityType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2037609794;
  else
    return 1701147206;
}

People::AvailabilityType_optional __swiftcall AvailabilityType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (People::AvailabilityType_optional)sub_1C0677770(v1);
}

uint64_t sub_1C06775DC(char *a1, char *a2)
{
  return sub_1C06B9B0C(*a1, *a2);
}

uint64_t sub_1C06775E8()
{
  return sub_1C067507C();
}

uint64_t sub_1C06775F0()
{
  return sub_1C0675F18();
}

uint64_t sub_1C06775F8()
{
  return sub_1C0677220();
}

People::AvailabilityType_optional sub_1C0677600(Swift::String *a1)
{
  return AvailabilityType.init(rawValue:)(*a1);
}

uint64_t sub_1C067760C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AvailabilityType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0677630()
{
  sub_1C068A3B0();
  return sub_1C0747AE0();
}

uint64_t sub_1C067768C()
{
  sub_1C068A3B0();
  return sub_1C0747AC8();
}

uint64_t ChildStateType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x61446C6F6F686373;
  else
    return 0xD000000000000010;
}

uint64_t ChildStateType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x61446C6F6F686373;
  else
    return 0xD000000000000010;
}

People::ChildStateType_optional __swiftcall ChildStateType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (People::ChildStateType_optional)sub_1C0677770(v1);
}

uint64_t sub_1C0677770@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C07481AC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1C06777CC(char *a1, char *a2)
{
  return sub_1C06B9C68(*a1, *a2);
}

uint64_t sub_1C06777D8()
{
  return sub_1C06750E0();
}

uint64_t sub_1C06777E0()
{
  return sub_1C0675D54();
}

uint64_t sub_1C06777E8()
{
  return sub_1C0676F9C();
}

People::ChildStateType_optional sub_1C06777F0(Swift::String *a1)
{
  return ChildStateType.init(rawValue:)(*a1);
}

uint64_t sub_1C06777FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ChildStateType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0677820()
{
  sub_1C068A36C();
  return sub_1C0747AE0();
}

uint64_t sub_1C067787C()
{
  sub_1C068A36C();
  return sub_1C0747AC8();
}

uint64_t PersonStatus.isEqual(to:)()
{
  return 0;
}

uint64_t PersonStatus<>.isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v21[5];

  v8 = sub_1C0747E28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21[-1] - v11;
  v13 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v21[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0685C78(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v12, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, a2);
    v21[3] = a2;
    v21[4] = a3;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(boxed_opaque_existential_1Tm, v15, a2);
    PersonStatus<>.isEqual(to:)(v21, a2, a3, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  }
  else
  {
    v17(v12, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return 0;
}

void AskToBuyRequestPersonStatus.requestState.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t AskToBuyRequestPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06786B0(type metadata accessor for AskToBuyRequestPersonStatus, a1);
}

uint64_t AskToBuyRequestPersonStatus.featureFlags.getter()
{
  return sub_1C0678708((void (*)(_QWORD))type metadata accessor for AskToBuyRequestPersonStatus);
}

uint64_t AskToBuyRequestPersonStatus.productType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AskToBuyRequestPersonStatus(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AskToBuyRequestPersonStatus.init(requestState:date:productType:featureFlags:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  char v8;
  int *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;

  v8 = *a3;
  *a5 = *a1;
  v9 = (int *)type metadata accessor for AskToBuyRequestPersonStatus(0);
  v10 = &a5[v9[5]];
  v11 = sub_1C07473E4();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  a5[v9[7]] = v8;
  *(_QWORD *)&a5[v9[6]] = a4;
  return result;
}

void AskToBuyRequestPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

unint64_t AskToBuyRequestPersonStatus.spotlightBundleID.getter()
{
  return 0xD000000000000020;
}

uint64_t AskToBuyRequestPersonStatus.compatibleWithStatus.getter()
{
  sub_1C0684C68();
  return sub_1C0746EF8();
}

void *AskToBuyRequestPersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3928;
}

uint64_t AskToBuyRequestPersonStatus.hash(into:)()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for AskToBuyRequestPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0746F64();
  sub_1C06F6A10();
  sub_1C07479A8();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0677C98(char a1)
{
  return *(_QWORD *)&aRequestsdate[8 * a1];
}

uint64_t sub_1C0677CC0()
{
  char *v0;

  return sub_1C0677C98(*v0);
}

uint64_t sub_1C0677CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0684E8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0677CEC()
{
  return 0;
}

void sub_1C0677CF8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C0677D04()
{
  sub_1C0684CE4();
  return sub_1C07483B0();
}

uint64_t sub_1C0677D2C()
{
  sub_1C0684CE4();
  return sub_1C07483BC();
}

uint64_t AskToBuyRequestPersonStatus.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A628);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0684CE4();
  sub_1C0748398();
  v15 = *v3;
  v14 = 0;
  sub_1C0684D28();
  sub_1C0748224();
  if (!v2)
  {
    v9 = type metadata accessor for AskToBuyRequestPersonStatus(0);
    v13 = 1;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
    v12 = *(_QWORD *)&v3[*(int *)(v9 + 24)];
    v11[15] = 2;
    type metadata accessor for FeatureFlagsProvider();
    sub_1C0684D6C(&qword_1EF61A648, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
    sub_1C0748224();
    v11[14] = v3[*(int *)(v9 + 28)];
    v11[13] = 3;
    sub_1C0684DAC();
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AskToBuyRequestPersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for AskToBuyRequestPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t AskToBuyRequestPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v19 = a2;
  v3 = sub_1C07473E4();
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A658);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AskToBuyRequestPersonStatus(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0684CE4();
  v22 = v8;
  v12 = v24;
  sub_1C074838C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v18 = v6;
  v24 = a1;
  v14 = v20;
  v13 = v21;
  v30 = 0;
  sub_1C0684DF0();
  v15 = v22;
  sub_1C07481F4();
  *v11 = v31;
  v29 = 1;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C07481F4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v14 + 32))(&v11[v9[5]], v5, v13);
  type metadata accessor for FeatureFlagsProvider();
  v28 = 2;
  sub_1C0684D6C(&qword_1EF61A670, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
  sub_1C07481F4();
  *(_QWORD *)&v11[v9[6]] = v25;
  v26 = 3;
  sub_1C0684E34();
  sub_1C07481F4();
  v16 = (uint64_t)v24;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v23);
  v11[v9[7]] = v27;
  sub_1C068510C((uint64_t)v11, v19, type metadata accessor for AskToBuyRequestPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm(v16);
  return sub_1C0685150((uint64_t)v11, type metadata accessor for AskToBuyRequestPersonStatus);
}

void *sub_1C067840C()
{
  return &unk_1E79E3950;
}

unint64_t sub_1C0678418()
{
  return 0xD000000000000020;
}

uint64_t sub_1C067843C()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0678540()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C067865C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C0678668()
{
  sub_1C0684C68();
  return sub_1C0746EF8();
}

uint64_t sub_1C067867C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AskToBuyRequestPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C0678690(_QWORD *a1)
{
  return AskToBuyRequestPersonStatus.encode(to:)(a1);
}

uint64_t ScreenTimeRequestPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06786B0(type metadata accessor for ScreenTimeRequestPersonStatus, a1);
}

uint64_t sub_1C06786B0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ScreenTimeRequestPersonStatus.featureFlags.getter()
{
  return sub_1C0678708((void (*)(_QWORD))type metadata accessor for ScreenTimeRequestPersonStatus);
}

uint64_t sub_1C0678708(void (*a1)(_QWORD))
{
  a1(0);
  return sub_1C0746F64();
}

uint64_t ScreenTimeRequestPersonStatus.init(requestState:date:featureFlags:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;

  *a4 = *a1;
  v7 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
  v8 = &a4[*(int *)(v7 + 20)];
  v9 = sub_1C07473E4();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  *(_QWORD *)&a4[*(int *)(v7 + 24)] = a3;
  return result;
}

void ScreenTimeRequestPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

unint64_t ScreenTimeRequestPersonStatus.spotlightBundleID.getter()
{
  return 0xD000000000000022;
}

uint64_t ScreenTimeRequestPersonStatus.compatibleWithStatus.getter()
{
  sub_1C068504C();
  return sub_1C0746EF8();
}

void *ScreenTimeRequestPersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E39C8;
}

uint64_t ScreenTimeRequestPersonStatus.hash(into:)()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ScreenTimeRequestPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0746F64();
  sub_1C06F6A10();
  sub_1C07479A8();
  sub_1C0747030();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06788D4(char a1)
{
  return *(_QWORD *)&aRequestsdate_0[8 * a1];
}

uint64_t sub_1C06788F4()
{
  char *v0;

  return sub_1C06788D4(*v0);
}

uint64_t sub_1C06788FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0685360(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0678920()
{
  sub_1C06850C8();
  return sub_1C07483B0();
}

uint64_t sub_1C0678948()
{
  sub_1C06850C8();
  return sub_1C07483BC();
}

uint64_t ScreenTimeRequestPersonStatus.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A680);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06850C8();
  sub_1C0748398();
  v15 = *v3;
  v14 = 0;
  sub_1C0684D28();
  sub_1C0748224();
  if (!v2)
  {
    v9 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
    v13 = 1;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
    v12 = *(_QWORD *)&v3[*(int *)(v9 + 24)];
    v11[15] = 2;
    type metadata accessor for FeatureFlagsProvider();
    sub_1C0684D6C(&qword_1EF61A648, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ScreenTimeRequestPersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ScreenTimeRequestPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t ScreenTimeRequestPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v21 = a2;
  v3 = sub_1C07473E4();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A690);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06850C8();
  v24 = v8;
  v12 = (uint64_t)v26;
  sub_1C074838C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = v9;
  v26 = a1;
  v13 = v6;
  v14 = v22;
  v15 = v23;
  v30 = 0;
  sub_1C0684DF0();
  v16 = v24;
  v17 = v25;
  sub_1C07481F4();
  *v11 = v31;
  v29 = 1;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C07481F4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v14 + 32))(&v11[*(int *)(v20 + 20)], v5, v15);
  type metadata accessor for FeatureFlagsProvider();
  v28 = 2;
  sub_1C0684D6C(&qword_1EF61A670, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v17);
  v18 = v21;
  *(_QWORD *)&v11[*(int *)(v20 + 24)] = v27;
  sub_1C068510C((uint64_t)v11, v18, type metadata accessor for ScreenTimeRequestPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  return sub_1C0685150((uint64_t)v11, type metadata accessor for ScreenTimeRequestPersonStatus);
}

void *sub_1C0678F2C()
{
  return &unk_1E79E39F0;
}

unint64_t sub_1C0678F38()
{
  return 0xD000000000000022;
}

uint64_t sub_1C0678F5C()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0679028()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C0679108()
{
  sub_1C068504C();
  return sub_1C0746EF8();
}

uint64_t sub_1C067911C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScreenTimeRequestPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C0679130(_QWORD *a1)
{
  return ScreenTimeRequestPersonStatus.encode(to:)(a1);
}

void ChildStatePersonStatus.childStateType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ChildStatePersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06786B0(type metadata accessor for ChildStatePersonStatus, a1);
}

uint64_t ChildStatePersonStatus.featureFlags.getter()
{
  return sub_1C0678708((void (*)(_QWORD))type metadata accessor for ChildStatePersonStatus);
}

uint64_t ChildStatePersonStatus.init(childStateType:date:featureFlags:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;

  *a4 = *a1;
  v7 = type metadata accessor for ChildStatePersonStatus(0);
  v8 = &a4[*(int *)(v7 + 20)];
  v9 = sub_1C07473E4();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  *(_QWORD *)&a4[*(int *)(v7 + 24)] = a3;
  return result;
}

void ChildStatePersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

void *ChildStatePersonStatus.compatibleWithStatus.getter()
{
  return &unk_1E79E3A18;
}

void *ChildStatePersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3A40;
}

uint64_t ChildStatePersonStatus.hash(into:)()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ChildStatePersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0746F64();
  sub_1C06F6A10();
  sub_1C07479A8();
  sub_1C0747030();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C067930C(char a1)
{
  return *(_QWORD *)&aChildstadate[8 * a1];
}

uint64_t sub_1C067932C()
{
  char *v0;

  return sub_1C067930C(*v0);
}

uint64_t sub_1C0679334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C06854B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0679358()
{
  sub_1C06851A0();
  return sub_1C07483B0();
}

uint64_t sub_1C0679380()
{
  sub_1C06851A0();
  return sub_1C07483BC();
}

uint64_t ChildStatePersonStatus.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A698);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06851A0();
  sub_1C0748398();
  v15 = *v3;
  v14 = 0;
  sub_1C06851E4();
  sub_1C0748224();
  if (!v2)
  {
    v9 = type metadata accessor for ChildStatePersonStatus(0);
    v13 = 1;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
    v12 = *(_QWORD *)&v3[*(int *)(v9 + 24)];
    v11[15] = 2;
    type metadata accessor for FeatureFlagsProvider();
    sub_1C0684D6C(&qword_1EF61A648, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ChildStatePersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ChildStatePersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t ChildStatePersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v21 = a2;
  v3 = sub_1C07473E4();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6B0);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ChildStatePersonStatus(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06851A0();
  v24 = v8;
  v12 = (uint64_t)v26;
  sub_1C074838C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = v9;
  v26 = a1;
  v13 = v6;
  v14 = v22;
  v15 = v23;
  v30 = 0;
  sub_1C0685228();
  v16 = v24;
  v17 = v25;
  sub_1C07481F4();
  *v11 = v31;
  v29 = 1;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C07481F4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v14 + 32))(&v11[*(int *)(v20 + 20)], v5, v15);
  type metadata accessor for FeatureFlagsProvider();
  v28 = 2;
  sub_1C0684D6C(&qword_1EF61A670, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v17);
  v18 = v21;
  *(_QWORD *)&v11[*(int *)(v20 + 24)] = v27;
  sub_1C068510C((uint64_t)v11, v18, type metadata accessor for ChildStatePersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  return sub_1C0685150((uint64_t)v11, type metadata accessor for ChildStatePersonStatus);
}

void *sub_1C0679984()
{
  return &unk_1E79E3A68;
}

uint64_t sub_1C0679998()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0679A84()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

void sub_1C0679B84(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

void *sub_1C0679B90()
{
  return &unk_1E79E3A90;
}

uint64_t sub_1C0679B9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ChildStatePersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C0679BB0(_QWORD *a1)
{
  return ChildStatePersonStatus.encode(to:)(a1);
}

void AvailabilityPersonStatus.availability.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t AvailabilityPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06786B0(type metadata accessor for AvailabilityPersonStatus, a1);
}

uint64_t AvailabilityPersonStatus.availabilityDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C067A5D8(type metadata accessor for AvailabilityPersonStatus, a1);
}

uint64_t AvailabilityPersonStatus.init(availability:date:availabilityDate:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v11)(_BYTE *, uint64_t, uint64_t);

  *a4 = *a1;
  v7 = type metadata accessor for AvailabilityPersonStatus(0);
  v8 = &a4[*(int *)(v7 + 20)];
  v9 = sub_1C07473E4();
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v11(v8, a2, v9);
  return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v11)(&a4[*(int *)(v7 + 24)], a3, v9);
}

void AvailabilityPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void *AvailabilityPersonStatus.compatibleWithStatus.getter()
{
  return &unk_1E79E3AB8;
}

void *AvailabilityPersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3AE0;
}

uint64_t AvailabilityPersonStatus.hash(into:)()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for AvailabilityPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0747858();
}

uint64_t sub_1C0679D68(char a1)
{
  if (!a1)
    return 0x6962616C69617661;
  if (a1 == 1)
    return 1702125924;
  return 0xD000000000000010;
}

uint64_t sub_1C0679DC4()
{
  char *v0;

  return sub_1C0679D68(*v0);
}

uint64_t sub_1C0679DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0685610(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0679DF0()
{
  sub_1C0685280();
  return sub_1C07483B0();
}

uint64_t sub_1C0679E18()
{
  sub_1C0685280();
  return sub_1C07483BC();
}

uint64_t AvailabilityPersonStatus.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685280();
  sub_1C0748398();
  v14 = *v3;
  v13 = 0;
  sub_1C06852C4();
  sub_1C0748224();
  if (!v2)
  {
    type metadata accessor for AvailabilityPersonStatus(0);
    v12 = 1;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
    v11 = 2;
    sub_1C0748224();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AvailabilityPersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for AvailabilityPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0747858();
  return sub_1C0748374();
}

uint64_t AvailabilityPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(void);
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v21 = a2;
  v23 = sub_1C07473E4();
  v25 = *(_QWORD *)(v23 - 8);
  v3 = MEMORY[0x1E0C80A78](v23);
  v22 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6D8);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AvailabilityPersonStatus(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685280();
  v24 = v7;
  v11 = (uint64_t)v27;
  sub_1C074838C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = v8;
  v27 = a1;
  v12 = v25;
  v13 = v23;
  v30 = 0;
  sub_1C0685308();
  v14 = v24;
  sub_1C07481F4();
  v15 = (uint64_t)v10;
  *v10 = v31;
  v29 = 1;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C07481F4();
  v16 = *(void (**)(void))(v12 + 32);
  v19[1] = &v10[*(int *)(v20 + 20)];
  v16();
  v28 = 2;
  v17 = v22;
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v26);
  ((void (*)(uint64_t, char *, uint64_t))v16)(v15 + *(int *)(v20 + 24), v17, v13);
  sub_1C068510C(v15, v21, type metadata accessor for AvailabilityPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  return sub_1C0685150(v15, type metadata accessor for AvailabilityPersonStatus);
}

void *sub_1C067A3E0()
{
  return &unk_1E79E3B08;
}

uint64_t sub_1C067A3F4()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0747858();
}

uint64_t sub_1C067A4B0()
{
  sub_1C0748350();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0747858();
  return sub_1C0748374();
}

void sub_1C067A584(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1C067A58C()
{
  return &unk_1E79E3B30;
}

uint64_t sub_1C067A598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AvailabilityPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C067A5AC(_QWORD *a1)
{
  return AvailabilityPersonStatus.encode(to:)(a1);
}

uint64_t LocationPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06786B0(type metadata accessor for LocationPersonStatus, a1);
}

uint64_t LocationPersonStatus.locationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C067A5D8(type metadata accessor for LocationPersonStatus, a1);
}

uint64_t sub_1C067A5D8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 24);
  v5 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t LocationPersonStatus.featureFlags.getter()
{
  type metadata accessor for LocationPersonStatus(0);
  return sub_1C0746F64();
}

double LocationPersonStatus.hAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for LocationPersonStatus(0) + 32));
}

uint64_t LocationPersonStatus.init(localizedDisplayString:date:locationDate:hAccuracy:featureFlags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>, double a7@<D0>)
{
  int *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  v12 = (int *)type metadata accessor for LocationPersonStatus(0);
  v13 = (char *)a6 + v12[5];
  v14 = sub_1C07473E4();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v13, a3, v14);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)((char *)a6 + v12[6], a4, v14);
  *(_QWORD *)((char *)a6 + v12[7]) = a5;
  *(double *)((char *)a6 + v12[8]) = a7;
  return result;
}

void LocationPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

unint64_t LocationPersonStatus.spotlightBundleID.getter()
{
  return 0xD000000000000017;
}

uint64_t LocationPersonStatus.compatibleWithStatus.getter()
{
  sub_1C0685750();
  return sub_1C0746EF8();
}

void *LocationPersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3BA8;
}

uint64_t LocationPersonStatus.formattedDateForTriage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6E8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C074B820;
  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LocationPersonStatus(0) + 32));
  v3 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  sub_1C0747948();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v5 = (void *)sub_1C074790C();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  v6 = (void *)sub_1C074736C();
  v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  v8 = sub_1C0747930();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  v9 = v8;
  v10 = (void *)sub_1C074736C();
  v11 = objc_msgSend(v4, sel_stringFromDate_, v10);

  sub_1C0747930();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C0746EF8();
  sub_1C07479CC();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t LocationPersonStatus.hash(into:)()
{
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for LocationPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0747858();
  sub_1C0746F64();
  sub_1C06F6A10();
  sub_1C07479A8();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  return sub_1C0748368();
}

uint64_t sub_1C067AAB8(char a1)
{
  return *(_QWORD *)&aLocalizedate[8 * a1];
}

uint64_t sub_1C067AAD8()
{
  char *v0;

  return sub_1C067AAB8(*v0);
}

uint64_t sub_1C067AAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0689A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C067AB04()
{
  sub_1C06857CC();
  return sub_1C07483B0();
}

uint64_t sub_1C067AB2C()
{
  sub_1C06857CC();
  return sub_1C07483BC();
}

uint64_t LocationPersonStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06857CC();
  sub_1C0748398();
  v16 = 0;
  sub_1C0748200();
  if (!v2)
  {
    v9 = type metadata accessor for LocationPersonStatus(0);
    v15 = 1;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
    v14 = 2;
    sub_1C0748224();
    v11[1] = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v13 = 3;
    type metadata accessor for FeatureFlagsProvider();
    sub_1C0684D6C(&qword_1EF61A648, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
    sub_1C0748224();
    v12 = 4;
    sub_1C074820C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LocationPersonStatus.hashValue.getter()
{
  sub_1C0748350();
  LocationPersonStatus.hash(into:)();
  return sub_1C0748374();
}

uint64_t LocationPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;

  v31 = a2;
  v3 = sub_1C07473E4();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v28 - v6;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A700);
  v8 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocationPersonStatus(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06857CC();
  v36 = v10;
  v14 = (uint64_t)v37;
  sub_1C074838C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v30 = v8;
  v37 = a1;
  v15 = v33;
  v16 = v34;
  v43 = 0;
  v17 = v35;
  v18 = (uint64_t)v13;
  *v13 = sub_1C07481D0();
  v13[1] = v19;
  v42 = 1;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C07481F4();
  v29 = v11;
  v20 = (char *)v13 + *(int *)(v11 + 20);
  v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v21(v20, v7, v16);
  v41 = 2;
  v22 = v32;
  v28[1] = 0;
  sub_1C07481F4();
  v21((char *)(v18 + *(int *)(v29 + 24)), v22, v16);
  type metadata accessor for FeatureFlagsProvider();
  v39 = 3;
  sub_1C0684D6C(&qword_1EF61A670, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
  v23 = v36;
  sub_1C07481F4();
  v24 = v29;
  *(_QWORD *)(v18 + *(int *)(v29 + 28)) = v40;
  v38 = 4;
  sub_1C07481DC();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v17);
  *(_QWORD *)(v18 + *(int *)(v24 + 32)) = v26;
  sub_1C068510C(v18, v31, type metadata accessor for LocationPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  return sub_1C0685150(v18, type metadata accessor for LocationPersonStatus);
}

void *sub_1C067B1FC()
{
  return &unk_1E79E3BD0;
}

unint64_t sub_1C067B208()
{
  return 0xD000000000000017;
}

uint64_t sub_1C067B228()
{
  sub_1C0748350();
  LocationPersonStatus.hash(into:)();
  return sub_1C0748374();
}

uint64_t sub_1C067B268()
{
  sub_1C0748350();
  LocationPersonStatus.hash(into:)();
  return sub_1C0748374();
}

void sub_1C067B2A0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C067B2AC()
{
  sub_1C0685750();
  return sub_1C0746EF8();
}

uint64_t sub_1C067B2C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LocationPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C067B2D4(_QWORD *a1)
{
  return LocationPersonStatus.encode(to:)(a1);
}

unint64_t ActivityState.init(from:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;

  v2 = 0x20100030405uLL >> (8 * result);
  if (result >= 6)
    LOBYTE(v2) = 5;
  *a2 = v2;
  return result;
}

uint64_t ActivityState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD, unint64_t))((char *)sub_1C067B334 + 4 * byte_1C0748EF3[*v0]))(0, 0xE000000000000000);
}

uint64_t sub_1C067B334()
{
  return 0x676E696E6E7572;
}

uint64_t sub_1C067B37C()
{
  return 0x616E6F6974617473;
}

uint64_t ActivityState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD, unint64_t))((char *)sub_1C067B3BC + 4 * byte_1C0748EF9[*v0]))(0, 0xE000000000000000);
}

uint64_t sub_1C067B3BC()
{
  return 0x676E696E6E7572;
}

uint64_t sub_1C067B404()
{
  return 0x616E6F6974617473;
}

People::ActivityState_optional __swiftcall ActivityState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  People::ActivityState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1C067B478(char *a1)
{
  sub_1C06B9D98(*a1);
}

People::ActivityState_optional sub_1C067B484(Swift::String *a1)
{
  return ActivityState.init(rawValue:)(*a1);
}

uint64_t sub_1C067B490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ActivityState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C067B4B4()
{
  sub_1C068A328();
  return sub_1C0747AE0();
}

uint64_t sub_1C067B510()
{
  sub_1C068A328();
  return sub_1C0747AC8();
}

void sub_1C067B55C()
{
  char *v0;

  sub_1C0675168(*v0);
}

void sub_1C067B564(uint64_t a1)
{
  char *v1;

  sub_1C0675E6C(a1, *v1);
}

void sub_1C067B56C(uint64_t a1)
{
  char *v1;

  sub_1C0676E6C(a1, *v1);
}

uint64_t MotionPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MotionPersonStatus.activityState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MotionPersonStatus(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t MotionPersonStatus.activityState.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for MotionPersonStatus(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*MotionPersonStatus.activityState.modify())()
{
  type metadata accessor for MotionPersonStatus(0);
  return nullsub_1;
}

uint64_t MotionPersonStatus.featureFlags.getter()
{
  return sub_1C0678708((void (*)(_QWORD))type metadata accessor for MotionPersonStatus);
}

uint64_t MotionPersonStatus.init(motionActivityState:date:featureFlags:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char v9;
  uint64_t result;

  v8 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a2, v8);
  if (a1 >= 6)
    v9 = 5;
  else
    v9 = 0x20100030405uLL >> (8 * a1);
  result = type metadata accessor for MotionPersonStatus(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = v9;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

void MotionPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void *MotionPersonStatus.compatibleWithStatus.getter()
{
  return &unk_1E79E3CA8;
}

void *MotionPersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3CD0;
}

void MotionPersonStatus.hash(into:)()
{
  uint64_t v0;
  char *v1;

  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  v1 = (char *)sub_1C067B770
     + 4 * byte_1C0748EFF[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MotionPersonStatus(0) + 20))];
  __asm { BR              X10 }
}

uint64_t sub_1C067B770()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C0746F64();
  sub_1C06F6A10();
  sub_1C07479A8();
  sub_1C0747030();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C067B82C(char a1)
{
  return *(_QWORD *)&aDate_3[8 * a1];
}

BOOL sub_1C067B84C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C067B860()
{
  return sub_1C074835C();
}

uint64_t sub_1C067B888()
{
  char *v0;

  return sub_1C067B82C(*v0);
}

uint64_t sub_1C067B890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0689CB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C067B8B4()
{
  sub_1C0685824();
  return sub_1C07483B0();
}

uint64_t sub_1C067B8DC()
{
  sub_1C0685824();
  return sub_1C07483BC();
}

uint64_t MotionPersonStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A708);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685824();
  sub_1C0748398();
  v15 = 0;
  sub_1C07473E4();
  sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1C0748224();
  if (!v2)
  {
    v9 = type metadata accessor for MotionPersonStatus(0);
    v14 = *(_BYTE *)(v3 + *(int *)(v9 + 20));
    v13 = 1;
    sub_1C0685868();
    sub_1C0748224();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    type metadata accessor for FeatureFlagsProvider();
    sub_1C0684D6C(&qword_1EF61A648, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void MotionPersonStatus.hashValue.getter()
{
  uint64_t v0;
  char *v1;

  sub_1C0748350();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  v1 = (char *)sub_1C067BB60
     + 4 * byte_1C0748F05[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MotionPersonStatus(0) + 20))];
  __asm { BR              X10 }
}

uint64_t sub_1C067BB60()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t MotionPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v19 = a2;
  v20 = sub_1C07473E4();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A720);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MotionPersonStatus(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685824();
  v22 = v7;
  v11 = v24;
  sub_1C074838C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v24 = v8;
  v12 = v5;
  v29 = 0;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v13 = v20;
  v14 = v21;
  v15 = v22;
  sub_1C07481F4();
  v18 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v14, v13);
  v27 = 1;
  sub_1C06858AC();
  sub_1C07481F4();
  v16 = v24;
  v10[*(int *)(v24 + 20)] = v28;
  type metadata accessor for FeatureFlagsProvider();
  v26 = 2;
  sub_1C0684D6C(&qword_1EF61A670, (uint64_t (*)(uint64_t))type metadata accessor for FeatureFlagsProvider, (uint64_t)&protocol conformance descriptor for FeatureFlagsProvider);
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v23);
  *(_QWORD *)&v10[*(int *)(v16 + 24)] = v25;
  sub_1C068510C((uint64_t)v10, v19, type metadata accessor for MotionPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1C0685150((uint64_t)v10, type metadata accessor for MotionPersonStatus);
}

void *sub_1C067BF20()
{
  return &unk_1E79E3CF8;
}

void sub_1C067BF34(uint64_t a1, uint64_t a2)
{
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  __asm { BR              X10 }
}

uint64_t sub_1C067BFAC()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C06F6A10();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

void sub_1C067C058(uint64_t a1, uint64_t a2)
{
  sub_1C0748350();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  __asm { BR              X10 }
}

uint64_t sub_1C067C0D8()
{
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C067C194@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1C067C1CC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void *sub_1C067C1D8()
{
  return &unk_1E79E3D20;
}

uint64_t sub_1C067C1E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MotionPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C067C1F8(_QWORD *a1)
{
  return MotionPersonStatus.encode(to:)(a1);
}

uint64_t MessagePersonStatus.lastMessageString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C0746EF8();
  return v1;
}

uint64_t MessagePersonStatus.unreadCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MessagePersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C067A5D8(type metadata accessor for MessagePersonStatus, a1);
}

uint64_t MessagePersonStatus.init(lastMessageString:unreadCount:date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (char *)a5 + *(int *)(type metadata accessor for MessagePersonStatus(0) + 24);
  v7 = sub_1C07473E4();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
}

void MessagePersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

unint64_t MessagePersonStatus.spotlightBundleID.getter()
{
  return 0xD000000000000013;
}

void *MessagePersonStatus.compatibleWithStatus.getter()
{
  return &unk_1E79E3D48;
}

void *MessagePersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3D70;
}

uint64_t MessagePersonStatus.hash(into:)()
{
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C074835C();
  type metadata accessor for MessagePersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1C0747858();
}

uint64_t sub_1C067C38C(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0x6F43646165726E75;
  return 1702125924;
}

uint64_t sub_1C067C3E8()
{
  char *v0;

  return sub_1C067C38C(*v0);
}

uint64_t sub_1C067C3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0689E10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C067C414()
{
  sub_1C0685904();
  return sub_1C07483B0();
}

uint64_t sub_1C067C43C()
{
  sub_1C0685904();
  return sub_1C07483BC();
}

uint64_t MessagePersonStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A730);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685904();
  sub_1C0748398();
  v8[15] = 0;
  sub_1C0748200();
  if (!v1)
  {
    v8[14] = 1;
    sub_1C0748218();
    type metadata accessor for MessagePersonStatus(0);
    v8[13] = 2;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MessagePersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  sub_1C074835C();
  type metadata accessor for MessagePersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0748374();
}

uint64_t MessagePersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v20 = a2;
  v21 = sub_1C07473E4();
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A740);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MessagePersonStatus(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685904();
  v22 = v7;
  v11 = v24;
  sub_1C074838C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v12 = v5;
  v13 = v21;
  v27 = 0;
  *v10 = sub_1C07481D0();
  v10[1] = v14;
  v26 = 1;
  v10[2] = sub_1C07481E8();
  v25 = 2;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v15 = (uint64_t)v10;
  v17 = v22;
  v16 = v23;
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v15 + *(int *)(v8 + 24), v4, v13);
  sub_1C068510C(v15, v20, type metadata accessor for MessagePersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1C0685150(v15, type metadata accessor for MessagePersonStatus);
}

void *sub_1C067C8F8()
{
  return &unk_1E79E3D70;
}

unint64_t sub_1C067C904()
{
  return 0xD000000000000013;
}

uint64_t sub_1C067C924()
{
  sub_1C0748350();
  sub_1C07479A8();
  sub_1C074835C();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0748374();
}

uint64_t sub_1C067C9C0()
{
  sub_1C07479A8();
  sub_1C074835C();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1C0747858();
}

uint64_t sub_1C067CA40()
{
  sub_1C0748350();
  sub_1C07479A8();
  sub_1C074835C();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0748374();
}

void sub_1C067CADC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

void *sub_1C067CAE8()
{
  return &unk_1E79E3D98;
}

uint64_t sub_1C067CAF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MessagePersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C067CB08(_QWORD *a1)
{
  return MessagePersonStatus.encode(to:)(a1);
}

People::CallServiceProvider_optional __swiftcall CallServiceProvider.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (People::CallServiceProvider_optional)sub_1C067D670(v1);
}

unint64_t CallServiceProvider.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0x726568746FLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

uint64_t sub_1C067CB84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C06B9B78(*a1, *a2);
}

uint64_t sub_1C067CB90()
{
  return sub_1C0675238();
}

uint64_t sub_1C067CB98()
{
  return sub_1C0675DF4();
}

uint64_t sub_1C067CBA0()
{
  return sub_1C06772E4();
}

People::CallServiceProvider_optional sub_1C067CBA8(Swift::String *a1)
{
  return CallServiceProvider.init(rawValue:)(*a1);
}

unint64_t sub_1C067CBB4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = CallServiceProvider.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C067CBD8()
{
  sub_1C068A2E4();
  return sub_1C0747AE0();
}

uint64_t sub_1C067CC34()
{
  sub_1C068A2E4();
  return sub_1C0747AC8();
}

void MissedCallPersonStatus.serviceProvider.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t MissedCallPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C067A5D8(type metadata accessor for MissedCallPersonStatus, a1);
}

uint64_t MissedCallPersonStatus.init(localizedString:serviceProvider:date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *a3;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v7;
  v8 = a5 + *(int *)(type metadata accessor for MissedCallPersonStatus(0) + 24);
  v9 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a4, v9);
}

void MissedCallPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void *MissedCallPersonStatus.compatibleWithStatus.getter()
{
  return &unk_1E79E3E28;
}

void *MissedCallPersonStatus.compatibleWithStatusOnLockScreenCircular.getter()
{
  return &unk_1E79E3E50;
}

uint64_t MissedCallPersonStatus.hash(into:)()
{
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for MissedCallPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1C0747858();
}

uint64_t sub_1C067CE1C(char a1)
{
  return *(_QWORD *)&aLocalizeservic[8 * a1];
}

uint64_t sub_1C067CE3C()
{
  char *v0;

  return sub_1C067CE1C(*v0);
}

uint64_t sub_1C067CE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0689F58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C067CE68()
{
  sub_1C068595C();
  return sub_1C07483B0();
}

uint64_t sub_1C067CE90()
{
  sub_1C068595C();
  return sub_1C07483BC();
}

uint64_t MissedCallPersonStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A748);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C068595C();
  sub_1C0748398();
  v10[15] = 0;
  sub_1C0748200();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + 16);
    v10[13] = 1;
    sub_1C06859A0();
    sub_1C0748224();
    type metadata accessor for MissedCallPersonStatus(0);
    v10[12] = 2;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MissedCallPersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for MissedCallPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0748374();
}

uint64_t MissedCallPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v20 = sub_1C07473E4();
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A760);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MissedCallPersonStatus(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C068595C();
  v22 = v7;
  v11 = v23;
  sub_1C074838C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v23 = v8;
  v12 = v5;
  v14 = v20;
  v13 = v21;
  v27 = 0;
  *(_QWORD *)v10 = sub_1C07481D0();
  *((_QWORD *)v10 + 1) = v15;
  v25 = 1;
  sub_1C06859E4();
  sub_1C07481F4();
  v10[16] = v26;
  v24 = 2;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v16 = v22;
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v10[*(int *)(v23 + 24)], v4, v14);
  sub_1C068510C((uint64_t)v10, v19, type metadata accessor for MissedCallPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1C0685150((uint64_t)v10, type metadata accessor for MissedCallPersonStatus);
}

void *sub_1C067D400()
{
  return &unk_1E79E3E50;
}

uint64_t sub_1C067D414()
{
  sub_1C07479A8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1C0747858();
}

uint64_t sub_1C067D4F0()
{
  sub_1C0748350();
  sub_1C07479A8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  return sub_1C0748374();
}

uint64_t sub_1C067D5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1C067D624(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void *sub_1C067D630()
{
  return &unk_1E79E3E78;
}

uint64_t sub_1C067D63C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MissedCallPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C067D650(_QWORD *a1)
{
  return MissedCallPersonStatus.encode(to:)(a1);
}

People::CalendarPersonStatus::Representation_optional __swiftcall CalendarPersonStatus.Representation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (People::CalendarPersonStatus::Representation_optional)sub_1C067D670(v1);
}

uint64_t sub_1C067D670@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C07481AC();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static CalendarPersonStatus.Representation.allCases.getter()
{
  return &unk_1E79E3F08;
}

uint64_t CalendarPersonStatus.Representation.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aAlert_1[8 * *v0];
}

uint64_t sub_1C067D6F4(char *a1, char *a2)
{
  return sub_1C06B9D14(*a1, *a2);
}

uint64_t sub_1C067D700()
{
  return sub_1C06752D8();
}

uint64_t sub_1C067D708()
{
  return sub_1C0675DB4();
}

uint64_t sub_1C067D710()
{
  return sub_1C0677380();
}

People::CalendarPersonStatus::Representation_optional sub_1C067D718(Swift::String *a1)
{
  return CalendarPersonStatus.Representation.init(rawValue:)(*a1);
}

uint64_t sub_1C067D724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CalendarPersonStatus.Representation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C067D748(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E79E3F30;
}

uint64_t sub_1C067D758()
{
  sub_1C068A2A0();
  return sub_1C0747AE0();
}

uint64_t sub_1C067D7B4()
{
  sub_1C068A2A0();
  return sub_1C0747AC8();
}

People::CalendarPersonStatus::Priority_optional __swiftcall CalendarPersonStatus.Priority.init(rawValue:)(Swift::Double rawValue)
{
  char *v1;
  char v2;
  People::CalendarPersonStatus::Priority_optional result;

  if (rawValue == 0.4)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1.0)
    v2 = 0;
  *v1 = v2;
  return result;
}

double CalendarPersonStatus.Priority.rawValue.getter()
{
  _BYTE *v0;
  double result;

  result = 0.4;
  if (!*v0)
    return 1.0;
  return result;
}

BOOL sub_1C067D844(_BYTE *a1, _BYTE *a2)
{
  double v2;
  double v3;

  v2 = 0.4;
  if (*a1)
    v3 = 0.4;
  else
    v3 = 1.0;
  if (!*a2)
    v2 = 1.0;
  return v3 == v2;
}

uint64_t sub_1C067D874()
{
  return sub_1C0675340();
}

uint64_t sub_1C067D87C()
{
  return sub_1C0748368();
}

uint64_t sub_1C067D8BC()
{
  return sub_1C06773E4();
}

double *sub_1C067D8C4@<X0>(double *result@<X0>, _BYTE *a2@<X8>)
{
  if (*result == 1.0)
  {
    *a2 = 0;
  }
  else if (*result == 0.4)
  {
    *a2 = 1;
  }
  else
  {
    *a2 = 2;
  }
  return result;
}

void sub_1C067D904(double *a1@<X8>)
{
  _BYTE *v1;
  double v2;

  v2 = 0.4;
  if (!*v1)
    v2 = 1.0;
  *a1 = v2;
}

uint64_t sub_1C067D924()
{
  sub_1C068A25C();
  return sub_1C0747AEC();
}

uint64_t sub_1C067D980()
{
  sub_1C068A25C();
  return sub_1C0747AD4();
}

void CalendarPersonStatus.statusType.getter(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t CalendarPersonStatus.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06786B0(type metadata accessor for CalendarPersonStatus, a1);
}

uint64_t CalendarPersonStatus.representation.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CalendarPersonStatus(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t CalendarPersonStatus.priority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CalendarPersonStatus(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t CalendarPersonStatus.init(title:startDate:representation:priority:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, _QWORD *a6@<X8>)
{
  char v8;
  char v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t result;

  v8 = *a4;
  v9 = *a5;
  *a6 = a1;
  a6[1] = a2;
  v10 = (int *)type metadata accessor for CalendarPersonStatus(0);
  v11 = (char *)a6 + v10[5];
  v12 = sub_1C07473E4();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  *((_BYTE *)a6 + v10[6]) = v8;
  *((_BYTE *)a6 + v10[7]) = v9;
  return result;
}

uint64_t CalendarPersonStatus.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;

  BYTE8(v3) = 0;
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v1 = type metadata accessor for CalendarPersonStatus(0);
  sub_1C0748104();
  sub_1C07479CC();
  *(_QWORD *)&v3 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 28));
  sub_1C0748104();
  return *(_QWORD *)((char *)&v3 + 1);
}

void *CalendarPersonStatus.compatibleWithStatus.getter()
{
  return &unk_1E79E3F58;
}

uint64_t CalendarPersonStatus.hash(into:)()
{
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for CalendarPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748368();
}

uint64_t sub_1C067DCD0(char a1)
{
  return *(_QWORD *)&aTitle_4[8 * a1];
}

uint64_t sub_1C067DCF0()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

uint64_t sub_1C067DD34()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

uint64_t sub_1C067DD74()
{
  char *v0;

  return sub_1C067DCD0(*v0);
}

uint64_t sub_1C067DD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C068A0BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C067DDA0()
{
  sub_1C0685A70();
  return sub_1C07483B0();
}

uint64_t sub_1C067DDC8()
{
  sub_1C0685A70();
  return sub_1C07483BC();
}

uint64_t CalendarPersonStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A770);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685A70();
  sub_1C0748398();
  v11[15] = 0;
  sub_1C0748200();
  if (!v2)
  {
    v9 = type metadata accessor for CalendarPersonStatus(0);
    v11[14] = 1;
    sub_1C07473E4();
    sub_1C0684D6C((unint64_t *)&qword_1ED4FF080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C0748224();
    v11[13] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_1C0685AB4();
    sub_1C0748224();
    v11[11] = *(_BYTE *)(v3 + *(int *)(v9 + 28));
    v11[10] = 3;
    sub_1C0685AF8();
    sub_1C0748224();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CalendarPersonStatus.hashValue.getter()
{
  sub_1C0748350();
  sub_1C07479A8();
  type metadata accessor for CalendarPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C0748368();
  return sub_1C0748374();
}

uint64_t CalendarPersonStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v19 = a2;
  v3 = sub_1C07473E4();
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A790);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for CalendarPersonStatus(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C0685A70();
  v13 = v24;
  sub_1C074838C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  v14 = v6;
  v15 = v20;
  v16 = v21;
  v30 = 0;
  *v11 = sub_1C07481D0();
  v11[1] = v17;
  v29 = 1;
  sub_1C0684D6C(&qword_1ED4FF088, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C07481F4();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v11 + v9[5], v5, v16);
  v27 = 2;
  sub_1C0685B3C();
  sub_1C07481F4();
  *((_BYTE *)v11 + v9[6]) = v28;
  v25 = 3;
  sub_1C0685B80();
  sub_1C07481F4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v22);
  *((_BYTE *)v11 + v9[7]) = v26;
  sub_1C068510C((uint64_t)v11, v19, type metadata accessor for CalendarPersonStatus);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  return sub_1C0685150((uint64_t)v11, type metadata accessor for CalendarPersonStatus);
}

uint64_t sub_1C067E3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1C067E418(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

void *sub_1C067E424()
{
  return &unk_1E79E3F80;
}

uint64_t sub_1C067E438()
{
  sub_1C07479A8();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748368();
}

uint64_t sub_1C067E514()
{
  sub_1C0748350();
  sub_1C07479A8();
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C0748368();
  return sub_1C0748374();
}

uint64_t sub_1C067E604@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CalendarPersonStatus.init(from:)(a1, a2);
}

uint64_t sub_1C067E618(_QWORD *a1)
{
  return CalendarPersonStatus.encode(to:)(a1);
}

uint64_t sub_1C067E62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0684170;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A93C;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C06841B4;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A960;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EC788;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECBF4;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067E95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C06840F4;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A8CC;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0684138;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A8F0;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EC5DC;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC0C;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067EC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0684090;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A85C;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C06840BC;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A880;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EC430;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC24;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067EFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0684014;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A7EC;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0684058;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A810;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EC284;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC3C;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067F2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0683FB0;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A77C;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0683FDC;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A7A0;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EC0D8;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC54;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067F61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0683EBC;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A70C;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0683EE8;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A730;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EBF2C;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC6C;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067F94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0683E40;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A69C;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0683E84;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A6C0;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EBD80;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC84;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067FC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0683DC4;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A5B0;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0683E08;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A60C;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EBBD4;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECC9C;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C067FFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C0683D48;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1C06B3510(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1C06B3510((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1C068A4C0;
  v14[5] = v8;
  swift_endAccess();
  sub_1C0747030();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C0683D8C;
  *(_QWORD *)(v15 + 24) = 0;
  v16 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v17 = *(_QWORD **)(a2 + 16);
  sub_1C0746F64();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1C06B3504(0, v17[2] + 1, 1, v17);
    *v16 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1C06B3504((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v16 = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1C068A4E4;
  v21[5] = v15;
  swift_endAccess();
  sub_1C0747030();
  v22 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a3 + 16);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B33F0(0, v23[2] + 1, 1, v23);
    *v22 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B33F0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = sub_1C06EBA28;
  v27[5] = 0;
  swift_endAccess();
  v28 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  v29 = *(_QWORD **)(a4 + 16);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_1C06B33E4(0, v29[2] + 1, 1, v29);
    *v28 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1C06B33E4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v28 = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[2 * v32];
  v33[4] = sub_1C06ECCB4;
  v33[5] = 0;
  return swift_endAccess();
}

uint64_t sub_1C06802DC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  BOOL v13;
  char v14;
  _BYTE v17[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B188);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for MessagePersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C0685C78(a2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for MessagePersonStatus);
    v13 = *a1 == *v10 && a1[1] == v10[1];
    if (v13 || (v14 = 0, (sub_1C0748284() & 1) != 0))
    {
      if (a1[2] == v10[2])
        v14 = sub_1C07473B4();
      else
        v14 = 0;
    }
    sub_1C0685150((uint64_t)v10, type metadata accessor for MessagePersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B188);
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1C0680484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v22[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B190);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for MotionPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C0685C78(a2, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for MotionPersonStatus);
    v13 = 0;
    if ((sub_1C07473B4() & 1) != 0)
    {
      sub_1C06B9D98(*(_BYTE *)(a1 + *(int *)(v7 + 20)));
      if ((v14 & 1) != 0)
      {
        v15 = sub_1C06F6A10();
        v17 = v16;
        if (v15 == sub_1C06F6A10() && v17 == v18)
          v13 = 1;
        else
          v13 = sub_1C0748284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = 0;
      }
    }
    sub_1C0685150((uint64_t)v10, type metadata accessor for MotionPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B190);
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1C0680674(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  _BYTE v19[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B1A0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for AvailabilityPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C0685C78(a2, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for AvailabilityPersonStatus);
    if (*a1)
      v13 = 2037609794;
    else
      v13 = 1701147206;
    if (*v10)
      v14 = 2037609794;
    else
      v14 = 1701147206;
    if (v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = sub_1C0748284();
      swift_bridgeObjectRelease_n();
      v15 = 0;
      if ((v16 & 1) == 0)
      {
LABEL_15:
        sub_1C0685150((uint64_t)v10, type metadata accessor for AvailabilityPersonStatus);
        return v15 & 1;
      }
    }
    if ((sub_1C07473B4() & 1) != 0)
      v15 = sub_1C07473B4();
    else
      v15 = 0;
    goto LABEL_15;
  }
  v12(v6, 1, 1, v7);
  sub_1C068A9AC((uint64_t)v6, &qword_1EF61B1A0);
  v15 = 0;
  return v15 & 1;
}

uint64_t sub_1C0680864(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char v18;
  _BYTE v21[40];
  uint64_t (*v22)(uint64_t, char *);

  v22 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = a4(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v21[-v14 - 8];
  sub_1C0685C78(a2, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v11, 0, 1, v12);
    sub_1C068A658((uint64_t)v11, (uint64_t)v15, a4);
    v18 = v22(a1, v15);
    sub_1C0685150((uint64_t)v15, a4);
  }
  else
  {
    v17(v11, 1, 1, v12);
    sub_1C068A9AC((uint64_t)v11, a3);
    v18 = 0;
  }
  return v18 & 1;
}

double sub_1C06809D0@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ChildStatePersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

double sub_1C0680B0C@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C07479A8();
  type metadata accessor for CalendarPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C0748368();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

double sub_1C0680C34@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C07479A8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for MissedCallPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

void sub_1C0680D5C(uint64_t a1)
{
  char *v2;

  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  v2 = (char *)sub_1C0680E04
     + 4 * byte_1C0748F17[*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for MotionPersonStatus(0) + 20))];
  __asm { BR              X10 }
}

double sub_1C0680E04()
{
  uint64_t v0;
  double result;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  *(_OWORD *)v0 = v2;
  *(_OWORD *)(v0 + 16) = v3;
  result = *(double *)&v4;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 64) = v6;
  return result;
}

double sub_1C0680ED8@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for LocationPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0747858();
  sub_1C0746F64();
  sub_1C06F6A10();
  sub_1C07479A8();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  sub_1C0748368();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

double sub_1C0681030@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for AvailabilityPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C0747858();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

double sub_1C0681140@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ScreenTimeRequestPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

double sub_1C068125C@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v4 = *a1;
  v5 = a1[1];
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  type metadata accessor for AskToBuyRequestPersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

uint64_t sub_1C06813B0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  result = sub_1C06813D4();
  qword_1EF61A248 = result;
  qword_1EF61A250 = v1;
  qword_1EF61A258 = v2;
  off_1EF61A260 = v3;
  return result;
}

uint64_t sub_1C06813D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B148);
  v0 = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B150);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B158);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B160);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  sub_1C067E62C(v0, v2, v3, v4);
  sub_1C067E95C(v0, v2, v3, v4);
  sub_1C067EC8C(v0, v2, v3, v4);
  sub_1C067EFBC(v0, v2, v3, v4);
  sub_1C067F2EC(v0, v2, v3, v4);
  sub_1C067F61C(v0, v2, v3, v4);
  sub_1C067F94C(v0, v2, v3, v4);
  sub_1C067FC7C(v0, v2, v3, v4);
  sub_1C067FFAC(v0, v2, v3, v4);
  return v0;
}

uint64_t AnyPersonStatus.init(_:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0685BC4(a1, a2);
}

uint64_t static AnyPersonStatus.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EF61A240 != -1)
    swift_once();
  return sub_1C06ECD14(a1, a2, qword_1EF61A248) & 1;
}

double AnyPersonStatus.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13[4];
  uint64_t v14;

  if (qword_1EF61A240 != -1)
    swift_once();
  v3 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v3;
  v14 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  sub_1C06ECF50(v1, v13, qword_1EF61A250, (__int128 *)a1, (uint64_t)v9);
  v5 = v12;
  v6 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v6;
  result = *(double *)&v10;
  v8 = v11;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v5;
  return result;
}

void AnyPersonStatus.encode(to:)(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v11;
  _BYTE v12[64];
  id v13;

  if (qword_1EF61A240 != -1)
    swift_once();
  sub_1C06ED240((uint64_t)v1, a1, qword_1EF61A258);
  if (v2)
  {
    v13 = v2;
    v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
    if (swift_dynamicCast())
    {

      v5 = sub_1C0748074();
      swift_allocError();
      v7 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7B0);
      v8 = v1[3];
      v9 = __swift_project_boxed_opaque_existential_1(v1, v8);
      v7[3] = v8;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v7);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1Tm, v9, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7B8);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C074B820;
      *(_QWORD *)(v11 + 56) = &type metadata for AnyPersonStatus.CodingKeys;
      *(_QWORD *)(v11 + 64) = sub_1C0685BDC();
      *(_BYTE *)(v11 + 32) = 1;
      sub_1C0748050();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC4B0], v5);
      swift_willThrow();
      sub_1C0685C20((uint64_t)v12);

    }
    else
    {

      swift_willThrow();
    }
  }
}

void AnyPersonStatus.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *__return_ptr, id *, uint64_t);
  void *v10;
  id v11;
  _OWORD *v12;
  _OWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22[4];
  id v23[3];
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v25 = a1;
  if (qword_1EF61A240 != -1)
    swift_once();
  v5 = off_1EF61A260;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5[2] + 16);
  v7 = MEMORY[0x1E0DEE9C0];
  if (v6)
  {
    v19 = a2;
    v8 = sub_1C0746EF8() + 40;
    while (1)
    {
      v9 = *(void (**)(__int128 *__return_ptr, id *, uint64_t))(v8 - 8);
      v24 = v7 + 8;
      sub_1C0746F64();
      v9(v22, v23, v25);
      v10 = v3;
      if (!v3)
      {
        sub_1C0747030();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        __swift_destroy_boxed_opaque_existential_1Tm(v25);
        sub_1C0685BC4(v22, v19);
        return;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      v23[0] = v3;
      v11 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
      if (!swift_dynamicCast())
        break;
      sub_1C0747030();

      v3 = 0;
      v8 += 16;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        v7 = MEMORY[0x1E0DEE9C0];
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();

    swift_willThrow();
    sub_1C0747030();
  }
  else
  {
LABEL_9:
    v24 = v7 + 8;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7D0);
    *(_QWORD *)&v20 = swift_allocObject();
    sub_1C0685C78(v25, v20 + 16);
    sub_1C0685CBC();
    v10 = (void *)swift_allocError();
    v13 = v12;
    sub_1C0685D00(v23, v12);
    sub_1C0685D00(&v20, v13 + 2);
    swift_willThrow();
  }
  v23[0] = v10;
  v14 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v15 = sub_1C074805C();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7C8);
    *v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7B8);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C074B820;
    *(_QWORD *)(v18 + 56) = &type metadata for AnyPersonStatus.CodingKeys;
    *(_QWORD *)(v18 + 64) = sub_1C0685BDC();
    *(_BYTE *)(v18 + 32) = 1;
    sub_1C0748050();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC450], v15);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm(v25);
    sub_1C0685C20((uint64_t)v22);

  }
  else
  {

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm(v25);
  }
}

uint64_t sub_1C0681BE0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 1701869940;
}

uint64_t sub_1C0681C0C(char *a1, char *a2)
{
  return sub_1C06BA024(*a1, *a2);
}

uint64_t sub_1C0681C18()
{
  return sub_1C0675398();
}

uint64_t sub_1C0681C20()
{
  return sub_1C067604C();
}

uint64_t sub_1C0681C28()
{
  return sub_1C067714C();
}

uint64_t sub_1C0681C30@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C07481AC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1C0681C8C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0681BE0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0681CB4()
{
  char *v0;

  return sub_1C0681BE0(*v0);
}

uint64_t sub_1C0681CBC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C07481AC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1C0681D1C()
{
  sub_1C0685BDC();
  return sub_1C07483B0();
}

uint64_t sub_1C0681D44()
{
  sub_1C0685BDC();
  return sub_1C07483BC();
}

uint64_t AnyPersonStatus.hashValue.getter()
{
  uint64_t v0;
  _OWORD v2[4];
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9[4];
  uint64_t v10;

  sub_1C0748350();
  v7 = v9[3];
  v8 = v10;
  v5 = v9[1];
  v6 = v9[2];
  v4 = v9[0];
  if (qword_1EF61A240 != -1)
    swift_once();
  sub_1C06ECF50(v0, v9, qword_1EF61A250, &v4, (uint64_t)v2);
  v4 = v2[0];
  v5 = v2[1];
  v6 = v2[2];
  v7 = v2[3];
  v8 = v3;
  return sub_1C0748374();
}

void sub_1C0681E34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  AnyPersonStatus.init(from:)(a1, a2);
}

void sub_1C0681E48(uint64_t a1)
{
  AnyPersonStatus.encode(to:)(a1);
}

uint64_t sub_1C0681E5C(uint64_t a1, uint64_t a2)
{
  if (qword_1EF61A240 != -1)
    swift_once();
  return sub_1C06ECD14(a1, a2, qword_1EF61A248) & 1;
}

uint64_t sub_1C0681ED0()
{
  uint64_t v0;
  _OWORD v2[4];
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9[4];
  uint64_t v10;

  sub_1C0748350();
  v7 = v9[3];
  v8 = v10;
  v5 = v9[1];
  v6 = v9[2];
  v4 = v9[0];
  if (qword_1EF61A240 != -1)
    swift_once();
  sub_1C06ECF50(v0, v9, qword_1EF61A250, &v4, (uint64_t)v2);
  v4 = v2[0];
  v5 = v2[1];
  v6 = v2[2];
  v7 = v2[3];
  v8 = v3;
  return sub_1C0748374();
}

double sub_1C0681F98(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13[4];
  uint64_t v14;

  if (qword_1EF61A240 != -1)
    swift_once();
  v3 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v3;
  v14 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  sub_1C06ECF50(v1, v13, qword_1EF61A250, (__int128 *)a1, (uint64_t)v9);
  v5 = v12;
  v6 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v6;
  result = *(double *)&v10;
  v8 = v11;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_1C068203C()
{
  uint64_t v0;
  _OWORD v2[4];
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9[4];
  uint64_t v10;

  sub_1C0748350();
  v7 = v9[3];
  v8 = v10;
  v5 = v9[1];
  v6 = v9[2];
  v4 = v9[0];
  if (qword_1EF61A240 != -1)
    swift_once();
  sub_1C06ECF50(v0, v9, qword_1EF61A250, &v4, (uint64_t)v2);
  v4 = v2[0];
  v5 = v2[1];
  v6 = v2[2];
  v7 = v2[3];
  v8 = v3;
  return sub_1C0748374();
}

id Result<>.inflated()(id a1, char a2)
{
  id v2;
  id v3;

  v2 = a1;
  if ((a2 & 1) == 0)
    return (id)sub_1C06837A0((uint64_t)a1);
  v3 = a1;
  return v2;
}

uint64_t Dictionary<>.typeErased()(uint64_t a1)
{
  return sub_1C0683A7C(a1);
}

uint64_t sub_1C0682180(uint64_t a1, uint64_t a2, void (*a3)(char *, _OWORD *), uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, _OWORD *);
  _BYTE v24[32];
  _OWORD v25[4];
  uint64_t v26;

  v22 = a4;
  v23 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a6(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - v15;
  v17 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v17;
  v26 = *(_QWORD *)(a2 + 64);
  v18 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v18;
  sub_1C068A530(a1, (uint64_t)v24);
  v19 = swift_dynamicCast();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v19)
  {
    v20(v12, 0, 1, v13);
    sub_1C068A658((uint64_t)v12, (uint64_t)v16, a6);
    v23(v16, v25);
    return sub_1C0685150((uint64_t)v16, a6);
  }
  else
  {
    v20(v12, 1, 1, v13);
    sub_1C068A9AC((uint64_t)v12, a5);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C068232C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  _QWORD v22[2];
  _BYTE v23[32];
  uint64_t v24;

  v22[0] = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a6(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v22 - v15;
  sub_1C068A530(a1, (uint64_t)v23);
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    v18(v12, 0, 1, v13);
    sub_1C068A658((uint64_t)v12, (uint64_t)v16, a6);
    v19 = v22[1];
    ((void (*)(uint64_t *__return_ptr, char *, uint64_t))v22[0])(&v24, v16, a2);
    sub_1C0685150((uint64_t)v16, a6);
    if (!v19)
      v20 = v24;
  }
  else
  {
    v18(v12, 1, 1, v13);
    sub_1C068A9AC((uint64_t)v12, a5);
    sub_1C068A56C();
    swift_allocError();
    swift_willThrow();
  }
  return v20 & 1;
}

uint64_t type metadata accessor for AskToBuyRequestPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AA70);
}

uint64_t sub_1C06824D8(uint64_t a1, uint64_t a2)
{
  return sub_1C06825A0(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1C06824E4()
{
  sub_1C0747930();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0682524()
{
  uint64_t v0;

  sub_1C0747930();
  sub_1C0748350();
  sub_1C07479A8();
  v0 = sub_1C0748374();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0682594(uint64_t a1, uint64_t a2)
{
  return sub_1C06825A0(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1C06825A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1C0747930();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C06825DC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1C0747918();
  *a2 = 0;
  return result;
}

uint64_t sub_1C0682650(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1C0747924();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C06826CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1C0747930();
  v2 = sub_1C074790C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_1C068270C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1C068271C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_1C0682728(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C068273C()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

uint64_t sub_1C0682780()
{
  return sub_1C074835C();
}

uint64_t sub_1C06827A8()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

void sub_1C06827E8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1C06827F4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0682808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1C0747930();
  v2 = v1;
  if (v0 == sub_1C0747930() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_QWORD *sub_1C0682890@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1C06828A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C074790C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C06828E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C0747930();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C068290C()
{
  sub_1C0684D6C((unint64_t *)&qword_1EF61B1E8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C074B3D8);
  sub_1C0684D6C((unint64_t *)&unk_1EF61B1F0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C074B32C);
  return sub_1C0748194();
}

uint64_t sub_1C0682990(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1C06829A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v5 = (unsigned __int8 *)(a1 + 32);
      sub_1C0746EF8();
      v3 = *v5;
      sub_1C0748350();
      __asm { BR              X8 }
    }
  }
  else
  {
    sub_1C0747030();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1C0683120(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = *a5;
  v8 = a5[1];
  v13 = v6 - 1;
  if (v8 != *(_QWORD *)(*a5 + 16))
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(_QWORD *)(v7 + 16))
    {
      v10 = *(unsigned __int8 *)(v7 + v8 + 32);
      a5[1] = v8 + 1;
      sub_1C0748350();
      __asm { BR              X8 }
    }
    __break(1u);
    JUMPOUT(0x1C0683724);
  }
  sub_1C0746F64();
  return sub_1C0732460(a1, a2, v13, a3);
}

uint64_t sub_1C06837A0(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  _BYTE v36[40];
  __int128 v37[2];
  uint64_t v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B140);
  result = sub_1C0748164();
  v3 = (_QWORD *)result;
  v4 = 0;
  v32 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v28 = a1 + 64;
  v29 = (_QWORD *)result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v30 = (unint64_t)(v6 + 63) >> 6;
  v31 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * i);
    v15 = v14[1];
    v16 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * i);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v33 = *v14;
      v34 = v8;
      v35 = v4;
      v38 = MEMORY[0x1E0DEE9D8];
      sub_1C0746EF8();
      sub_1C0746EF8();
      sub_1C06BF6F8(0, v17, 0);
      v18 = v16 + 32;
      v19 = v38;
      do
      {
        sub_1C068A438(v18, (uint64_t)v36);
        sub_1C0685C78((uint64_t)v36, (uint64_t)v37);
        sub_1C068A478((uint64_t)v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C06BF6F8(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v19 = v38;
        }
        v21 = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1C06BF6F8(v20 > 1, v21 + 1, 1);
          v19 = v38;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        sub_1C0685BC4(v37, v19 + 40 * v21 + 32);
        v18 += 40;
        --v17;
      }
      while (v17);
      result = swift_bridgeObjectRelease();
      v3 = v29;
      v8 = v34;
      v4 = v35;
      v22 = v33;
    }
    else
    {
      v23 = *v14;
      result = sub_1C0746EF8();
      v22 = v23;
      v19 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v24 = (_QWORD *)(v3[6] + 16 * i);
    *v24 = v22;
    v24[1] = v15;
    *(_QWORD *)(v3[7] + 8 * i) = v19;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v3[2] = v27;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_31;
    if (v11 >= v30)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v28 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v30)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v28 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v30)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v28 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v30)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v28 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C0683A7C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  uint64_t v40;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B138);
  result = sub_1C0748164();
  v3 = (_QWORD *)result;
  v4 = 0;
  v34 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v30 = (_QWORD *)result;
  v31 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v32 = (unint64_t)(v6 + 63) >> 6;
  v33 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * i);
    v16 = *v14;
    v15 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * i);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v35 = *v14;
      v36 = v8;
      v37 = v4;
      v40 = MEMORY[0x1E0DEE9D8];
      sub_1C0746EF8();
      sub_1C0746EF8();
      sub_1C06BF724(0, v18, 0);
      v19 = v40;
      v20 = v17 + 32;
      do
      {
        sub_1C0685C78(v20, (uint64_t)v38);
        v40 = v19;
        v22 = *(_QWORD *)(v19 + 16);
        v21 = *(_QWORD *)(v19 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1C06BF724(v21 > 1, v22 + 1, 1);
          v19 = v40;
        }
        *(_QWORD *)(v19 + 16) = v22 + 1;
        v23 = v19 + 40 * v22;
        v24 = v38[0];
        v25 = v38[1];
        *(_QWORD *)(v23 + 64) = v39;
        *(_OWORD *)(v23 + 32) = v24;
        *(_OWORD *)(v23 + 48) = v25;
        v20 += 40;
        --v18;
      }
      while (v18);
      result = swift_bridgeObjectRelease();
      v3 = v30;
      v8 = v36;
      v4 = v37;
      v16 = v35;
    }
    else
    {
      result = sub_1C0746EF8();
      v19 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v3[6] + 16 * i);
    *v26 = v16;
    v26[1] = v15;
    *(_QWORD *)(v3[7] + 8 * i) = v19;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v3[2] = v29;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_31;
    if (v11 >= v32)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v31 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v32)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v31 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v32)
          return (uint64_t)v3;
        v12 = *(_QWORD *)(v31 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 >= v32)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v31 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v32)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v31 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C0683D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680864(a1, a2, &qword_1EF61B168, type metadata accessor for ChildStatePersonStatus, (uint64_t (*)(uint64_t, char *))_s6People22ChildStatePersonStatusV2eeoiySbAC_ACtFZ_0);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C0683D8C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C06809D0(v5, a2);
}

uint64_t sub_1C0683DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680864(a1, a2, &qword_1EF61B178, type metadata accessor for CalendarPersonStatus, (uint64_t (*)(uint64_t, char *))_s6People20CalendarPersonStatusV2eeoiySbAC_ACtFZ_0);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C0683E08@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C0680B0C(v5, a2);
}

uint64_t sub_1C0683E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680864(a1, a2, &qword_1EF61B180, type metadata accessor for MissedCallPersonStatus, (uint64_t (*)(uint64_t, char *))_s6People22MissedCallPersonStatusV2eeoiySbAC_ACtFZ_0);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C0683E84@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C0680C34(v5, a2);
}

uint64_t sub_1C0683EBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C06802DC(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C0683EE8@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  sub_1C07479A8();
  sub_1C074835C();
  type metadata accessor for MessagePersonStatus(0);
  sub_1C07473E4();
  sub_1C0684D6C(&qword_1EF61A620, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C0747858();
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  return result;
}

uint64_t sub_1C0683FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680484(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

void sub_1C0683FDC(uint64_t a1)
{
  sub_1C0680D5C(a1);
}

uint64_t sub_1C0684014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680864(a1, a2, &qword_1EF61B198, type metadata accessor for LocationPersonStatus, (uint64_t (*)(uint64_t, char *))_s6People20LocationPersonStatusV2eeoiySbAC_ACtFZ_0);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C0684058@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C0680ED8(v5, a2);
}

uint64_t sub_1C0684090@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680674(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C06840BC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C0681030(v5, a2);
}

uint64_t sub_1C06840F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680864(a1, a2, &qword_1EF61B1A8, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t (*)(uint64_t, char *))_s6People29ScreenTimeRequestPersonStatusV2eeoiySbAC_ACtFZ_0);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C0684138@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C0681140(v5, a2);
}

uint64_t sub_1C0684170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0680864(a1, a2, &qword_1EF61B1B0, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t (*)(uint64_t, char *))_s6People27AskToBuyRequestPersonStatusV2eeoiySbAC_ACtFZ_0);
  if (!v3)
    *a3 = result & 1;
  return result;
}

double sub_1C06841B4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v5[4];
  uint64_t v6;

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v6 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return sub_1C068125C(v5, a2);
}

uint64_t _s6People18MotionPersonStatusV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  if ((sub_1C07473B4() & 1) != 0
    && (v2 = type metadata accessor for MotionPersonStatus(0),
        sub_1C06B9D98(*(_BYTE *)(a1 + *(int *)(v2 + 20))),
        (v3 & 1) != 0))
  {
    v4 = sub_1C06F6A10();
    v6 = v5;
    if (v4 == sub_1C06F6A10() && v6 == v7)
      v9 = 1;
    else
      v9 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t _s6People19MessagePersonStatusV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C0748284() & 1) == 0 || a1[2] != a2[2])
    return 0;
  type metadata accessor for MessagePersonStatus(0);
  return sub_1C07473B4();
}

uint64_t _s6People20CalendarPersonStatusV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  double v14;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1C0748284(), result = 0, (v5 & 1) != 0))
  {
    v7 = type metadata accessor for CalendarPersonStatus(0);
    if ((sub_1C07473B4() & 1) != 0)
    {
      v8 = *(int *)(v7 + 24);
      v9 = 8 * *((char *)a1 + v8);
      v10 = 8 * *((char *)a2 + v8);
      if (*(_QWORD *)&aAlert_1[v9] == *(_QWORD *)&aAlert_1[v10]
        && *(_QWORD *)((char *)&unk_1C074B7D8 + v9) == *(_QWORD *)((char *)&unk_1C074B7D8 + v10))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v12 = sub_1C0748284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
      v13 = *(int *)(v7 + 28);
      if (*((_BYTE *)a2 + v13) == 1)
      {
        if ((*((_BYTE *)a1 + v13) & 1) == 0)
          return 0;
      }
      else
      {
        v14 = 0.4;
        if (!*((_BYTE *)a1 + v13))
          v14 = 1.0;
        if (v14 != 1.0)
          return 0;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s6People20LocationPersonStatusV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1C0748284(), result = 0, (v5 & 1) != 0))
  {
    v7 = type metadata accessor for LocationPersonStatus(0);
    if ((sub_1C07473B4() & 1) != 0 && (sub_1C07473B4() & 1) != 0)
    {
      v8 = sub_1C06F6A10();
      v10 = v9;
      if (v8 == sub_1C06F6A10() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v13 = sub_1C0748284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v13 & 1) == 0)
          return result;
      }
      return *(double *)((char *)a1 + *(int *)(v7 + 32)) == *(double *)((char *)a2 + *(int *)(v7 + 32));
    }
    return 0;
  }
  return result;
}

uint64_t _s6People22ChildStatePersonStatusV2eeoiySbAC_ACtFZ_0(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x61446C6F6F686373;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x80000001C0751F00;
  else
    v4 = 0xE900000000000079;
  if (*a2)
    v5 = 0x61446C6F6F686373;
  else
    v5 = 0xD000000000000010;
  if (*a2)
    v6 = 0xE900000000000079;
  else
    v6 = 0x80000001C0751F00;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = 0;
    if ((v8 & 1) == 0)
      return v9 & 1;
  }
  type metadata accessor for ChildStatePersonStatus(0);
  if ((sub_1C07473B4() & 1) != 0)
  {
    v10 = sub_1C06F6A10();
    v12 = v11;
    if (v10 == sub_1C06F6A10() && v12 == v13)
      v9 = 1;
    else
      v9 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t _s6People22MissedCallPersonStatusV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (sub_1C0748284() & 1) != 0)
  {
    v5 = 0xD000000000000012;
    v6 = 0x80000001C0751F70;
    v7 = 0xE500000000000000;
    v8 = 0x726568746FLL;
    if (*(_BYTE *)(a1 + 16) == 1)
    {
      v8 = 0xD000000000000012;
      v7 = 0x80000001C0751F70;
    }
    if (*(_BYTE *)(a1 + 16))
      v9 = v8;
    else
      v9 = 0xD000000000000015;
    if (*(_BYTE *)(a1 + 16))
      v10 = v7;
    else
      v10 = 0x80000001C0751F50;
    if (*(_BYTE *)(a2 + 16) != 1)
    {
      v5 = 0x726568746FLL;
      v6 = 0xE500000000000000;
    }
    if (*(_BYTE *)(a2 + 16))
      v11 = v5;
    else
      v11 = 0xD000000000000015;
    if (*(_BYTE *)(a2 + 16))
      v12 = v6;
    else
      v12 = 0x80000001C0751F50;
    if (v9 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      type metadata accessor for MissedCallPersonStatus(0);
      return sub_1C07473B4();
    }
    v13 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      goto LABEL_26;
  }
  return 0;
}

uint64_t _s6People24AvailabilityPersonStatusV2eeoiySbAC_ACtFZ_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (*a1)
    v2 = 2037609794;
  else
    v2 = 1701147206;
  if (*a2)
    v3 = 2037609794;
  else
    v3 = 1701147206;
  if (v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_1C0748284();
    swift_bridgeObjectRelease_n();
    if ((v4 & 1) == 0)
      return 0;
  }
  type metadata accessor for AvailabilityPersonStatus(0);
  if ((sub_1C07473B4() & 1) != 0)
    return sub_1C07473B4();
  return 0;
}

uint64_t _s6People27AskToBuyRequestPersonStatusV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  if (*(_QWORD *)&aPending_3[8 * *a1] == *(_QWORD *)&aPending_3[8 * *a2]
    && qword_1C074B808[*a1] == qword_1C074B808[*a2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
      return 0;
  }
  v6 = type metadata accessor for AskToBuyRequestPersonStatus(0);
  if ((sub_1C07473B4() & 1) == 0)
    return 0;
  v7 = sub_1C06F6A10();
  v9 = v8;
  if (v7 == sub_1C06F6A10() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  return sub_1C06B9A04(a1[*(int *)(v6 + 28)], a2[*(int *)(v6 + 28)]);
}

uint64_t _s6People29ScreenTimeRequestPersonStatusV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)&aPending_3[8 * *a1] == *(_QWORD *)&aPending_3[8 * *a2]
    && qword_1C074B808[*a1] == qword_1C074B808[*a2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = 0;
    if ((v3 & 1) == 0)
      return v4 & 1;
  }
  type metadata accessor for ScreenTimeRequestPersonStatus(0);
  if ((sub_1C07473B4() & 1) != 0)
  {
    v5 = sub_1C06F6A10();
    v7 = v6;
    if (v5 == sub_1C06F6A10() && v7 == v8)
      v4 = 1;
    else
      v4 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1C0684BA8()
{
  sub_1C0748350();
  sub_1C07479A8();
  return sub_1C0748374();
}

uint64_t sub_1C0684BF8()
{
  return sub_1C07479A8();
}

uint64_t sub_1C0684C14()
{
  sub_1C0748350();
  sub_1C07479A8();
  return sub_1C0748374();
}

void *sub_1C0684C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  char v5;

  v1 = type metadata accessor for AskToBuyRequestPersonStatus(0);
  v2 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + *(int *)(v1 + 24)) + 136))();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1C069C818(5u), (v4 & 1) != 0))
  {
    v5 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v3);
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return &unk_1E79E38D8;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return &unk_1E79E3900;
}

unint64_t sub_1C0684CE4()
{
  unint64_t result;

  result = qword_1EF61A630;
  if (!qword_1EF61A630)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074B17C, &type metadata for AskToBuyRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A630);
  }
  return result;
}

unint64_t sub_1C0684D28()
{
  unint64_t result;

  result = qword_1EF61A638;
  if (!qword_1EF61A638)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for RequestStatus, &type metadata for RequestStatus);
    atomic_store(result, (unint64_t *)&qword_1EF61A638);
  }
  return result;
}

uint64_t sub_1C0684D6C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1C3BA0C2C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0684DAC()
{
  unint64_t result;

  result = qword_1EF61A650;
  if (!qword_1EF61A650)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for BMAskToBuyEvent.ProductType, &type metadata for BMAskToBuyEvent.ProductType);
    atomic_store(result, (unint64_t *)&qword_1EF61A650);
  }
  return result;
}

unint64_t sub_1C0684DF0()
{
  unint64_t result;

  result = qword_1EF61A660;
  if (!qword_1EF61A660)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for RequestStatus, &type metadata for RequestStatus);
    atomic_store(result, (unint64_t *)&qword_1EF61A660);
  }
  return result;
}

unint64_t sub_1C0684E34()
{
  unint64_t result;

  result = qword_1EF61A678;
  if (!qword_1EF61A678)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for BMAskToBuyEvent.ProductType, &type metadata for BMAskToBuyEvent.ProductType);
    atomic_store(result, (unint64_t *)&qword_1EF61A678);
  }
  return result;
}

uint64_t type metadata accessor for ScreenTimeRequestPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AB08);
}

uint64_t sub_1C0684E8C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x5374736575716572 && a2 == 0xEC00000065746174;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void *sub_1C068504C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  char v5;

  v1 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
  v2 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + *(int *)(v1 + 24)) + 136))();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1C069C818(5u), (v4 & 1) != 0))
  {
    v5 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v3);
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return &unk_1E79E3978;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return &unk_1E79E39A0;
}

unint64_t sub_1C06850C8()
{
  unint64_t result;

  result = qword_1EF61A688;
  if (!qword_1EF61A688)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074B12C, &type metadata for ScreenTimeRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A688);
  }
  return result;
}

uint64_t sub_1C068510C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0685150(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ChildStatePersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61ABA0);
}

unint64_t sub_1C06851A0()
{
  unint64_t result;

  result = qword_1EF61A6A0;
  if (!qword_1EF61A6A0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074B0DC, &type metadata for ChildStatePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A6A0);
  }
  return result;
}

unint64_t sub_1C06851E4()
{
  unint64_t result;

  result = qword_1EF61A6A8;
  if (!qword_1EF61A6A8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ChildStateType, &type metadata for ChildStateType);
    atomic_store(result, (unint64_t *)&qword_1EF61A6A8);
  }
  return result;
}

unint64_t sub_1C0685228()
{
  unint64_t result;

  result = qword_1EF61A6B8;
  if (!qword_1EF61A6B8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ChildStateType, &type metadata for ChildStateType);
    atomic_store(result, (unint64_t *)&qword_1EF61A6B8);
  }
  return result;
}

uint64_t type metadata accessor for AvailabilityPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AC38);
}

unint64_t sub_1C0685280()
{
  unint64_t result;

  result = qword_1EF61A6C8;
  if (!qword_1EF61A6C8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074B08C, &type metadata for AvailabilityPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A6C8);
  }
  return result;
}

unint64_t sub_1C06852C4()
{
  unint64_t result;

  result = qword_1EF61A6D0;
  if (!qword_1EF61A6D0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for AvailabilityType, &type metadata for AvailabilityType);
    atomic_store(result, (unint64_t *)&qword_1EF61A6D0);
  }
  return result;
}

unint64_t sub_1C0685308()
{
  unint64_t result;

  result = qword_1EF61A6E0;
  if (!qword_1EF61A6E0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for AvailabilityType, &type metadata for AvailabilityType);
    atomic_store(result, (unint64_t *)&qword_1EF61A6E0);
  }
  return result;
}

uint64_t type metadata accessor for LocationPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61ACD0);
}

uint64_t sub_1C0685360(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x5374736575716572 && a2 == 0xEC00000065746174;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1C06854B4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x617453646C696863 && a2 == 0xEE00657079546574;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1C0685610(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C0752800)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void *sub_1C0685750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  char v5;

  v1 = type metadata accessor for LocationPersonStatus(0);
  v2 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + *(int *)(v1 + 28)) + 136))();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1C069C818(5u), (v4 & 1) != 0))
  {
    v5 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v3);
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return &unk_1E79E3B58;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return &unk_1E79E3B80;
}

unint64_t sub_1C06857CC()
{
  unint64_t result;

  result = qword_1EF61A6F8;
  if (!qword_1EF61A6F8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074B03C, &type metadata for LocationPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A6F8);
  }
  return result;
}

uint64_t type metadata accessor for MotionPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AD70);
}

unint64_t sub_1C0685824()
{
  unint64_t result;

  result = qword_1EF61A710;
  if (!qword_1EF61A710)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AFEC, &type metadata for MotionPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A710);
  }
  return result;
}

unint64_t sub_1C0685868()
{
  unint64_t result;

  result = qword_1EF61A718;
  if (!qword_1EF61A718)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_1EF61A718);
  }
  return result;
}

unint64_t sub_1C06858AC()
{
  unint64_t result;

  result = qword_1EF61A728;
  if (!qword_1EF61A728)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_1EF61A728);
  }
  return result;
}

uint64_t type metadata accessor for MessagePersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AE08);
}

unint64_t sub_1C0685904()
{
  unint64_t result;

  result = qword_1EF61A738;
  if (!qword_1EF61A738)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AF9C, &type metadata for MessagePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A738);
  }
  return result;
}

uint64_t type metadata accessor for MissedCallPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AEA0);
}

unint64_t sub_1C068595C()
{
  unint64_t result;

  result = qword_1EF61A750;
  if (!qword_1EF61A750)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AF4C, &type metadata for MissedCallPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A750);
  }
  return result;
}

unint64_t sub_1C06859A0()
{
  unint64_t result;

  result = qword_1EF61A758;
  if (!qword_1EF61A758)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CallServiceProvider, &type metadata for CallServiceProvider);
    atomic_store(result, (unint64_t *)&qword_1EF61A758);
  }
  return result;
}

unint64_t sub_1C06859E4()
{
  unint64_t result;

  result = qword_1EF61A768;
  if (!qword_1EF61A768)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CallServiceProvider, &type metadata for CallServiceProvider);
    atomic_store(result, (unint64_t *)&qword_1EF61A768);
  }
  return result;
}

uint64_t type metadata accessor for CalendarPersonStatus(uint64_t a1)
{
  return sub_1C0685A3C(a1, qword_1EF61AF38);
}

uint64_t sub_1C0685A3C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C0685A70()
{
  unint64_t result;

  result = qword_1EF61A778;
  if (!qword_1EF61A778)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AEFC, &type metadata for CalendarPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A778);
  }
  return result;
}

unint64_t sub_1C0685AB4()
{
  unint64_t result;

  result = qword_1EF61A780;
  if (!qword_1EF61A780)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Representation, &type metadata for CalendarPersonStatus.Representation);
    atomic_store(result, (unint64_t *)&qword_1EF61A780);
  }
  return result;
}

unint64_t sub_1C0685AF8()
{
  unint64_t result;

  result = qword_1EF61A788;
  if (!qword_1EF61A788)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Priority, &type metadata for CalendarPersonStatus.Priority);
    atomic_store(result, (unint64_t *)&qword_1EF61A788);
  }
  return result;
}

unint64_t sub_1C0685B3C()
{
  unint64_t result;

  result = qword_1EF61A798;
  if (!qword_1EF61A798)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Representation, &type metadata for CalendarPersonStatus.Representation);
    atomic_store(result, (unint64_t *)&qword_1EF61A798);
  }
  return result;
}

unint64_t sub_1C0685B80()
{
  unint64_t result;

  result = qword_1EF61A7A0;
  if (!qword_1EF61A7A0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Priority, &type metadata for CalendarPersonStatus.Priority);
    atomic_store(result, (unint64_t *)&qword_1EF61A7A0);
  }
  return result;
}

uint64_t sub_1C0685BC4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1C0685BDC()
{
  unint64_t result;

  result = qword_1EF61A7C0;
  if (!qword_1EF61A7C0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AEAC, &type metadata for AnyPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61A7C0);
  }
  return result;
}

uint64_t sub_1C0685C20(uint64_t a1)
{
  destroy for ChainOfResponsibilityError.InvalidArguments(a1);
  return a1;
}

uint64_t sub_1C0685C54()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0685C78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1C0685CBC()
{
  unint64_t result;

  result = qword_1EF61A7D8;
  if (!qword_1EF61A7D8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ChainOfResponsibilityError.InvalidArguments, &type metadata for ChainOfResponsibilityError.InvalidArguments);
    atomic_store(result, (unint64_t *)&qword_1EF61A7D8);
  }
  return result;
}

_OWORD *sub_1C0685D00(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1C0685D14()
{
  unint64_t result;

  result = qword_1EF61A8A0;
  if (!qword_1EF61A8A0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for StatusType, &type metadata for StatusType);
    atomic_store(result, (unint64_t *)&qword_1EF61A8A0);
  }
  return result;
}

uint64_t sub_1C0685D58()
{
  return sub_1C0686528(&qword_1EF61A8A8, &qword_1EF61A8B0);
}

unint64_t sub_1C0685D80()
{
  unint64_t result;

  result = qword_1EF61A8B8;
  if (!qword_1EF61A8B8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for AvailabilityType, &type metadata for AvailabilityType);
    atomic_store(result, (unint64_t *)&qword_1EF61A8B8);
  }
  return result;
}

unint64_t sub_1C0685DC8()
{
  unint64_t result;

  result = qword_1EF61A8C0;
  if (!qword_1EF61A8C0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ChildStateType, &type metadata for ChildStateType);
    atomic_store(result, (unint64_t *)&qword_1EF61A8C0);
  }
  return result;
}

uint64_t sub_1C0685E0C(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A8C8, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0685E48()
{
  return sub_1C0684D6C(&qword_1EF61A8D0, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
}

uint64_t sub_1C0685E74(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A8D8, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A8E0, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0685ED0(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A8E8, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0685F0C()
{
  return sub_1C0684D6C(&qword_1EF61A8F0, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
}

uint64_t sub_1C0685F38(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A8F8, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A900, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0685F94(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A908, type metadata accessor for ChildStatePersonStatus, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0685FD0()
{
  return sub_1C0684D6C(&qword_1EF61A910, type metadata accessor for ChildStatePersonStatus, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
}

uint64_t sub_1C0685FFC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A918, type metadata accessor for ChildStatePersonStatus, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A920, type metadata accessor for ChildStatePersonStatus, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0686058(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A928, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0686094()
{
  return sub_1C0684D6C(&qword_1EF61A930, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
}

uint64_t sub_1C06860C0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A938, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A940, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C068611C(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A948, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0686158()
{
  return sub_1C0684D6C(&qword_1EF61A950, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
}

uint64_t sub_1C0686184(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A958, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A960, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1C06861E4()
{
  unint64_t result;

  result = qword_1EF61A968;
  if (!qword_1EF61A968)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_1EF61A968);
  }
  return result;
}

uint64_t sub_1C0686228(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A970, type metadata accessor for MotionPersonStatus, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0686264()
{
  return sub_1C0684D6C(&qword_1EF61A978, type metadata accessor for MotionPersonStatus, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
}

uint64_t sub_1C0686290(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A980, type metadata accessor for MotionPersonStatus, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A988, type metadata accessor for MotionPersonStatus, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C06862EC(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A990, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0686328()
{
  return sub_1C0684D6C(&qword_1EF61A998, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
}

uint64_t sub_1C0686354(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A9A0, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A9A8, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1C06863B4()
{
  unint64_t result;

  result = qword_1EF61A9B0;
  if (!qword_1EF61A9B0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CallServiceProvider, &type metadata for CallServiceProvider);
    atomic_store(result, (unint64_t *)&qword_1EF61A9B0);
  }
  return result;
}

uint64_t sub_1C06863F8(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0684D6C(&qword_1EF61A9B8, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0686434()
{
  return sub_1C0684D6C(&qword_1EF61A9C0, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
}

uint64_t sub_1C0686460(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A9C8, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61A9D0, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1C06864C0()
{
  unint64_t result;

  result = qword_1EF61A9D8;
  if (!qword_1EF61A9D8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Representation, &type metadata for CalendarPersonStatus.Representation);
    atomic_store(result, (unint64_t *)&qword_1EF61A9D8);
  }
  return result;
}

uint64_t sub_1C0686504()
{
  return sub_1C0686528(&qword_1EF61A9E0, &qword_1EF61A9E8);
}

uint64_t sub_1C0686528(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C068656C()
{
  unint64_t result;

  result = qword_1EF61A9F0;
  if (!qword_1EF61A9F0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Priority, &type metadata for CalendarPersonStatus.Priority);
    atomic_store(result, (unint64_t *)&qword_1EF61A9F0);
  }
  return result;
}

uint64_t sub_1C06865B0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1C0684D6C(&qword_1EF61A9F8, type metadata accessor for CalendarPersonStatus, (uint64_t)&protocol conformance descriptor for CalendarPersonStatus);
  result = sub_1C0684D6C(&qword_1EF61AA00, type metadata accessor for CalendarPersonStatus, (uint64_t)&protocol conformance descriptor for CalendarPersonStatus);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C068660C()
{
  return sub_1C0684D6C(&qword_1EF61AA08, type metadata accessor for CalendarPersonStatus, (uint64_t)&protocol conformance descriptor for CalendarPersonStatus);
}

unint64_t sub_1C068663C()
{
  unint64_t result;

  result = qword_1EF61AA10;
  if (!qword_1EF61AA10)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for AnyPersonStatus, &type metadata for AnyPersonStatus);
    atomic_store(result, (unint64_t *)&qword_1EF61AA10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StatusType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C068675C + 4 * byte_1C0748F22[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C0686790 + 4 * byte_1C0748F1D[v4]))();
}

uint64_t sub_1C0686790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0686798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06867A0);
  return result;
}

uint64_t sub_1C06867AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06867B4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C06867B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06867C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06867CC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1C06867D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StatusType()
{
  return &type metadata for StatusType;
}

ValueMetadata *type metadata accessor for AvailabilityType()
{
  return &type metadata for AvailabilityType;
}

_BYTE *sub_1C0686804(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ChildStateType()
{
  return &type metadata for ChildStateType;
}

uint64_t dispatch thunk of PersonStatus.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PersonStatus.statusType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PersonStatus.compatibleWithStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TextStatus.localizedDisplayString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AccessoryPersonStatus.compatibleWithStatusOnLockScreenCircular.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

_QWORD *initializeBufferWithCopyOfBuffer for AskToBuyRequestPersonStatus(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_1C07473E4();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
  }
  sub_1C0746F64();
  return v4;
}

_BYTE *initializeWithCopy for AskToBuyRequestPersonStatus(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  sub_1C0746F64();
  return a1;
}

_BYTE *assignWithCopy for AskToBuyRequestPersonStatus(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  sub_1C0746F64();
  sub_1C0747030();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *initializeWithTake for AskToBuyRequestPersonStatus(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

_BYTE *assignWithTake for AskToBuyRequestPersonStatus(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  sub_1C0747030();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for AskToBuyRequestPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for AskToBuyRequestPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0686B3C()
{
  return sub_1C068899C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ScreenTimeRequestPersonStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C07473E4();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  sub_1C0746F64();
  return v4;
}

_BYTE *initializeWithCopy for ScreenTimeRequestPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  sub_1C0746F64();
  return a1;
}

_BYTE *assignWithCopy for ScreenTimeRequestPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  sub_1C0746F64();
  sub_1C0747030();
  return a1;
}

_BYTE *initializeWithTake for ScreenTimeRequestPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *assignWithTake for ScreenTimeRequestPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  sub_1C0747030();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenTimeRequestPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ScreenTimeRequestPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0686E1C()
{
  return sub_1C0686EA8();
}

uint64_t _s6People27AskToBuyRequestPersonStatusVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return sub_1C0747030();
}

uint64_t getEnumTagSinglePayload for ChildStatePersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ChildStatePersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0686E9C()
{
  return sub_1C0686EA8();
}

uint64_t sub_1C0686EA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AvailabilityPersonStatus(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1C07473E4();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  }
  return v4;
}

uint64_t destroy for AvailabilityPersonStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C07473E4();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

_BYTE *initializeWithCopy for AvailabilityPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

_BYTE *assignWithCopy for AvailabilityPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

_BYTE *initializeWithTake for AvailabilityPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

_BYTE *assignWithTake for AvailabilityPersonStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailabilityPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0687284(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_1C07473E4();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AvailabilityPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1C0687304(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_1C07473E4();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C0687374()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for LocationPersonStatus(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1C07473E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1C0746EF8();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[8];
    *(_QWORD *)&v4[a3[7]] = *(_QWORD *)&a2[a3[7]];
    *(_QWORD *)&v4[v13] = *(_QWORD *)&a2[v13];
  }
  sub_1C0746F64();
  return v4;
}

uint64_t destroy for LocationPersonStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C07473E4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);
  return sub_1C0747030();
}

char *initializeWithCopy for LocationPersonStatus(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1C07473E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1C0746EF8();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  sub_1C0746F64();
  return a1;
}

char *assignWithCopy for LocationPersonStatus(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  sub_1C0746F64();
  sub_1C0747030();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *initializeWithTake for LocationPersonStatus(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C07473E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  return a1;
}

char *assignWithTake for LocationPersonStatus(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1C07473E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  sub_1C0747030();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for LocationPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0687820()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C068798C + 4 * byte_1C0748F2C[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C06879C0 + 4 * byte_1C0748F27[v4]))();
}

uint64_t sub_1C06879C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06879C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06879D0);
  return result;
}

uint64_t sub_1C06879DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06879E4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C06879E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06879F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityState()
{
  return &type metadata for ActivityState;
}

_QWORD *initializeBufferWithCopyOfBuffer for MotionPersonStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C07473E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
  }
  sub_1C0746F64();
  return a1;
}

uint64_t destroy for MotionPersonStatus(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return sub_1C0747030();
}

uint64_t initializeWithCopy for MotionPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  sub_1C0746F64();
  return a1;
}

uint64_t assignWithCopy for MotionPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  sub_1C0746F64();
  sub_1C0747030();
  return a1;
}

uint64_t initializeWithTake for MotionPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MotionPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  sub_1C0747030();
  return a1;
}

uint64_t getEnumTagSinglePayload for MotionPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0687C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C07473E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0687D24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C07473E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1C0687D9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePersonStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1C0746F64();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C07473E4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_1C0746EF8();
    v10(v7, v8, v9);
  }
  return v3;
}

_QWORD *initializeWithCopy for MessagePersonStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1C07473E4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  sub_1C0746EF8();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for MessagePersonStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for MessagePersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for MessagePersonStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for MessagePersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06880B8()
{
  return sub_1C06884BC();
}

ValueMetadata *type metadata accessor for CallServiceProvider()
{
  return &type metadata for CallServiceProvider;
}

_QWORD *initializeBufferWithCopyOfBuffer for MissedCallPersonStatus(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1C0746F64();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1C07473E4();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_1C0746EF8();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s6People19MessagePersonStatusVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for MissedCallPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1C07473E4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  sub_1C0746EF8();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for MissedCallPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for MissedCallPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for MissedCallPersonStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MissedCallPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_11Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07473E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MissedCallPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_12Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C07473E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C06884B0()
{
  return sub_1C06884BC();
}

uint64_t sub_1C06884BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CalendarPersonStatus(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C07473E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1C0746EF8();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
  }
  return v4;
}

uint64_t destroy for CalendarPersonStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CalendarPersonStatus(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C07473E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1C0746EF8();
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_QWORD *assignWithCopy for CalendarPersonStatus(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for CalendarPersonStatus(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

_QWORD *assignWithTake for CalendarPersonStatus(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalendarPersonStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_7Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07473E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CalendarPersonStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_8Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C07473E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C0688980()
{
  return sub_1C068899C();
}

uint64_t sub_1C068899C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarPersonStatus.Representation()
{
  return &type metadata for CalendarPersonStatus.Representation;
}

ValueMetadata *type metadata accessor for CalendarPersonStatus.Priority()
{
  return &type metadata for CalendarPersonStatus.Priority;
}

uint64_t initializeBufferWithCopyOfBuffer for AnyPersonStatus(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  sub_1C0746F64();
  return v3;
}

uint64_t destroy for AnyPersonStatus(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t initializeWithCopy for AnyPersonStatus(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyPersonStatus(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for AnyPersonStatus(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyPersonStatus(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyPersonStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyPersonStatus()
{
  return &type metadata for AnyPersonStatus;
}

void type metadata accessor for SPMotionActivityState(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AF78);
}

void type metadata accessor for BMAskToBuyRequestStatus(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AF80);
}

void type metadata accessor for BMMotionActivityState(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AF88);
}

void type metadata accessor for BMFindMyLocationChangeType(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AF90);
}

void type metadata accessor for BMScreenTimeApprovedTime(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AF98);
}

void type metadata accessor for BMScreenTimeRequestStatus(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AFA0);
}

void type metadata accessor for BMScreenTimeRequestKind(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61AFA8);
}

uint64_t getEnumTagSinglePayload for PeopleURL.Scheme(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6People16AvailabilityTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0688D1C + 4 * byte_1C0748F36[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0688D50 + 4 * byte_1C0748F31[v4]))();
}

uint64_t sub_1C0688D50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0688D58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0688D60);
  return result;
}

uint64_t sub_1C0688D6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0688D74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0688D78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0688D80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyPersonStatus.CodingKeys()
{
  return &type metadata for AnyPersonStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for CalendarPersonStatus.CodingKeys()
{
  return &type metadata for CalendarPersonStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for MissedCallPersonStatus.CodingKeys()
{
  return &type metadata for MissedCallPersonStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePersonStatus.CodingKeys()
{
  return &type metadata for MessagePersonStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for MotionPersonStatus.CodingKeys()
{
  return &type metadata for MotionPersonStatus.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LocationPersonStatus.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationPersonStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0688EC0 + 4 * byte_1C0748F40[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0688EF4 + 4 * byte_1C0748F3B[v4]))();
}

uint64_t sub_1C0688EF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0688EFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0688F04);
  return result;
}

uint64_t sub_1C0688F10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0688F18);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0688F1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0688F24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationPersonStatus.CodingKeys()
{
  return &type metadata for LocationPersonStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for AvailabilityPersonStatus.CodingKeys()
{
  return &type metadata for AvailabilityPersonStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for ChildStatePersonStatus.CodingKeys()
{
  return &type metadata for ChildStatePersonStatus.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RequestStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6People19CallServiceProviderOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C068903C + 4 * byte_1C0748F4A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0689070 + 4 * byte_1C0748F45[v4]))();
}

uint64_t sub_1C0689070(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0689078(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0689080);
  return result;
}

uint64_t sub_1C068908C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0689094);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0689098(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06890A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenTimeRequestPersonStatus.CodingKeys()
{
  return &type metadata for ScreenTimeRequestPersonStatus.CodingKeys;
}

uint64_t _s11ProductTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6People20CalendarPersonStatusV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0689198 + 4 * byte_1C0748F54[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C06891CC + 4 * byte_1C0748F4F[v4]))();
}

uint64_t sub_1C06891CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06891D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06891DCLL);
  return result;
}

uint64_t sub_1C06891E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06891F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C06891F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06891FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AskToBuyRequestPersonStatus.CodingKeys()
{
  return &type metadata for AskToBuyRequestPersonStatus.CodingKeys;
}

unint64_t sub_1C068921C()
{
  unint64_t result;

  result = qword_1EF61AFB0;
  if (!qword_1EF61AFB0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A5D4, &type metadata for AskToBuyRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFB0);
  }
  return result;
}

unint64_t sub_1C0689264()
{
  unint64_t result;

  result = qword_1EF61AFB8;
  if (!qword_1EF61AFB8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A68C, &type metadata for ScreenTimeRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFB8);
  }
  return result;
}

unint64_t sub_1C06892AC()
{
  unint64_t result;

  result = qword_1EF61AFC0;
  if (!qword_1EF61AFC0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A744, &type metadata for ChildStatePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFC0);
  }
  return result;
}

unint64_t sub_1C06892F4()
{
  unint64_t result;

  result = qword_1EF61AFC8;
  if (!qword_1EF61AFC8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A7FC, &type metadata for AvailabilityPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFC8);
  }
  return result;
}

unint64_t sub_1C068933C()
{
  unint64_t result;

  result = qword_1EF61AFD0;
  if (!qword_1EF61AFD0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A8B4, &type metadata for LocationPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFD0);
  }
  return result;
}

unint64_t sub_1C0689384()
{
  unint64_t result;

  result = qword_1EF61AFD8;
  if (!qword_1EF61AFD8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A96C, &type metadata for MotionPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFD8);
  }
  return result;
}

unint64_t sub_1C06893CC()
{
  unint64_t result;

  result = qword_1EF61AFE0;
  if (!qword_1EF61AFE0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AA24, &type metadata for MessagePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFE0);
  }
  return result;
}

unint64_t sub_1C0689414()
{
  unint64_t result;

  result = qword_1EF61AFE8;
  if (!qword_1EF61AFE8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AADC, &type metadata for MissedCallPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFE8);
  }
  return result;
}

unint64_t sub_1C068945C()
{
  unint64_t result;

  result = qword_1EF61AFF0;
  if (!qword_1EF61AFF0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AB94, &type metadata for CalendarPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFF0);
  }
  return result;
}

unint64_t sub_1C06894A4()
{
  unint64_t result;

  result = qword_1EF61AFF8;
  if (!qword_1EF61AFF8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AC84, &type metadata for AnyPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61AFF8);
  }
  return result;
}

unint64_t sub_1C06894EC()
{
  unint64_t result;

  result = qword_1EF61B000;
  if (!qword_1EF61B000)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074ABBC, &type metadata for AnyPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B000);
  }
  return result;
}

unint64_t sub_1C0689534()
{
  unint64_t result;

  result = qword_1EF61B008;
  if (!qword_1EF61B008)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074ABE4, &type metadata for AnyPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B008);
  }
  return result;
}

unint64_t sub_1C068957C()
{
  unint64_t result;

  result = qword_1EF61B010;
  if (!qword_1EF61B010)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AB04, &type metadata for CalendarPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B010);
  }
  return result;
}

unint64_t sub_1C06895C4()
{
  unint64_t result;

  result = qword_1EF61B018;
  if (!qword_1EF61B018)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AB2C, &type metadata for CalendarPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B018);
  }
  return result;
}

unint64_t sub_1C068960C()
{
  unint64_t result;

  result = qword_1EF61B020;
  if (!qword_1EF61B020)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AA4C, &type metadata for MissedCallPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B020);
  }
  return result;
}

unint64_t sub_1C0689654()
{
  unint64_t result;

  result = qword_1EF61B028;
  if (!qword_1EF61B028)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074AA74, &type metadata for MissedCallPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B028);
  }
  return result;
}

unint64_t sub_1C068969C()
{
  unint64_t result;

  result = qword_1EF61B030;
  if (!qword_1EF61B030)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A994, &type metadata for MessagePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B030);
  }
  return result;
}

unint64_t sub_1C06896E4()
{
  unint64_t result;

  result = qword_1EF61B038;
  if (!qword_1EF61B038)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A9BC, &type metadata for MessagePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B038);
  }
  return result;
}

unint64_t sub_1C068972C()
{
  unint64_t result;

  result = qword_1EF61B040;
  if (!qword_1EF61B040)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A8DC, &type metadata for MotionPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B040);
  }
  return result;
}

unint64_t sub_1C0689774()
{
  unint64_t result;

  result = qword_1EF61B048;
  if (!qword_1EF61B048)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A904, &type metadata for MotionPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B048);
  }
  return result;
}

unint64_t sub_1C06897BC()
{
  unint64_t result;

  result = qword_1EF61B050;
  if (!qword_1EF61B050)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A824, &type metadata for LocationPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B050);
  }
  return result;
}

unint64_t sub_1C0689804()
{
  unint64_t result;

  result = qword_1EF61B058;
  if (!qword_1EF61B058)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A84C, &type metadata for LocationPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B058);
  }
  return result;
}

unint64_t sub_1C068984C()
{
  unint64_t result;

  result = qword_1EF61B060;
  if (!qword_1EF61B060)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A76C, &type metadata for AvailabilityPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B060);
  }
  return result;
}

unint64_t sub_1C0689894()
{
  unint64_t result;

  result = qword_1EF61B068;
  if (!qword_1EF61B068)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A794, &type metadata for AvailabilityPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B068);
  }
  return result;
}

unint64_t sub_1C06898DC()
{
  unint64_t result;

  result = qword_1EF61B070;
  if (!qword_1EF61B070)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A6B4, &type metadata for ChildStatePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B070);
  }
  return result;
}

unint64_t sub_1C0689924()
{
  unint64_t result;

  result = qword_1EF61B078;
  if (!qword_1EF61B078)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A6DC, &type metadata for ChildStatePersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B078);
  }
  return result;
}

unint64_t sub_1C068996C()
{
  unint64_t result;

  result = qword_1EF61B080;
  if (!qword_1EF61B080)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A5FC, &type metadata for ScreenTimeRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B080);
  }
  return result;
}

unint64_t sub_1C06899B4()
{
  unint64_t result;

  result = qword_1EF61B088;
  if (!qword_1EF61B088)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A624, &type metadata for ScreenTimeRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B088);
  }
  return result;
}

unint64_t sub_1C06899FC()
{
  unint64_t result;

  result = qword_1EF61B090;
  if (!qword_1EF61B090)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A544, &type metadata for AskToBuyRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B090);
  }
  return result;
}

unint64_t sub_1C0689A44()
{
  unint64_t result;

  result = qword_1EF61B098;
  if (!qword_1EF61B098)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074A56C, &type metadata for AskToBuyRequestPersonStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF61B098);
  }
  return result;
}

uint64_t sub_1C0689A88(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x657A696C61636F6CLL && a2 == 0xEF676E6972745364;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065746144 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6361727563634168 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1C0689CB4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xED00006574617453 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1C0689E10(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001C0752820 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43646165726E75 && a2 == 0xEB00000000746E75 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1C0689F58(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x657A696C61636F6CLL && a2 == 0xEF676E6972745364;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5065636976726573 && a2 == 0xEF72656469766F72 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1C068A0BC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v3 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65736572706572 && a2 == 0xEE006E6F69746174 || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1C068A25C()
{
  unint64_t result;

  result = qword_1EF61B100;
  if (!qword_1EF61B100)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Priority, &type metadata for CalendarPersonStatus.Priority);
    atomic_store(result, (unint64_t *)&qword_1EF61B100);
  }
  return result;
}

unint64_t sub_1C068A2A0()
{
  unint64_t result;

  result = qword_1EF61B108;
  if (!qword_1EF61B108)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CalendarPersonStatus.Representation, &type metadata for CalendarPersonStatus.Representation);
    atomic_store(result, (unint64_t *)&qword_1EF61B108);
  }
  return result;
}

unint64_t sub_1C068A2E4()
{
  unint64_t result;

  result = qword_1EF61B110;
  if (!qword_1EF61B110)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for CallServiceProvider, &type metadata for CallServiceProvider);
    atomic_store(result, (unint64_t *)&qword_1EF61B110);
  }
  return result;
}

unint64_t sub_1C068A328()
{
  unint64_t result;

  result = qword_1EF61B118;
  if (!qword_1EF61B118)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_1EF61B118);
  }
  return result;
}

unint64_t sub_1C068A36C()
{
  unint64_t result;

  result = qword_1EF61B120;
  if (!qword_1EF61B120)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ChildStateType, &type metadata for ChildStateType);
    atomic_store(result, (unint64_t *)&qword_1EF61B120);
  }
  return result;
}

unint64_t sub_1C068A3B0()
{
  unint64_t result;

  result = qword_1EF61B128;
  if (!qword_1EF61B128)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for AvailabilityType, &type metadata for AvailabilityType);
    atomic_store(result, (unint64_t *)&qword_1EF61B128);
  }
  return result;
}

unint64_t sub_1C068A3F4()
{
  unint64_t result;

  result = qword_1EF61B130;
  if (!qword_1EF61B130)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for StatusType, &type metadata for StatusType);
    atomic_store(result, (unint64_t *)&qword_1EF61B130);
  }
  return result;
}

uint64_t sub_1C068A438(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C068A478(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return a1;
}

uint64_t sub_1C068A49C()
{
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C068A4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B168, type metadata accessor for ChildStatePersonStatus, a3);
}

uint64_t sub_1C068A4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B168, type metadata accessor for ChildStatePersonStatus);
}

uint64_t sub_1C068A530(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1C068A56C()
{
  unint64_t result;

  result = qword_1EF61B170;
  if (!qword_1EF61B170)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ChainOfResponsibilityError.InvalidHandler, &type metadata for ChainOfResponsibilityError.InvalidHandler);
    atomic_store(result, (unint64_t *)&qword_1EF61B170);
  }
  return result;
}

uint64_t sub_1C068A5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B178, type metadata accessor for CalendarPersonStatus, a3);
}

uint64_t sub_1C068A5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = sub_1C068232C(a1, a2, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a3, a4);
  if (!v6)
    *a5 = result & 1;
  return result;
}

uint64_t sub_1C068A60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B178, type metadata accessor for CalendarPersonStatus);
}

uint64_t sub_1C068A658(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C068A69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B180, type metadata accessor for MissedCallPersonStatus, a3);
}

uint64_t sub_1C068A6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B180, type metadata accessor for MissedCallPersonStatus);
}

uint64_t sub_1C068A70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B188, type metadata accessor for MessagePersonStatus, a3);
}

uint64_t sub_1C068A730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B188, type metadata accessor for MessagePersonStatus);
}

uint64_t sub_1C068A77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B190, type metadata accessor for MotionPersonStatus, a3);
}

uint64_t sub_1C068A7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B190, type metadata accessor for MotionPersonStatus);
}

uint64_t sub_1C068A7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B198, type metadata accessor for LocationPersonStatus, a3);
}

uint64_t sub_1C068A810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B198, type metadata accessor for LocationPersonStatus);
}

uint64_t sub_1C068A85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B1A0, type metadata accessor for AvailabilityPersonStatus, a3);
}

uint64_t sub_1C068A880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B1A0, type metadata accessor for AvailabilityPersonStatus);
}

uint64_t sub_1C068A8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B1A8, type metadata accessor for ScreenTimeRequestPersonStatus, a3);
}

uint64_t sub_1C068A8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B1A8, type metadata accessor for ScreenTimeRequestPersonStatus);
}

uint64_t sub_1C068A93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C068A5D4(a1, a2, &qword_1EF61B1B0, type metadata accessor for AskToBuyRequestPersonStatus, a3);
}

uint64_t sub_1C068A960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(char *, _OWORD *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  uint64_t v9;

  v3 = *(void (**)(char *, _OWORD *))(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v9 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  return sub_1C0682180(a1, (uint64_t)v8, v3, v4, &qword_1EF61B1B0, type metadata accessor for AskToBuyRequestPersonStatus);
}

uint64_t sub_1C068A9AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61B1B8);
}

void type metadata accessor for _CDInteractionMechanism(uint64_t a1)
{
  sub_1C068AA10(a1, &qword_1EF61B1C0);
}

void sub_1C068AA10(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1C068AA54()
{
  return sub_1C0684D6C(&qword_1EF61B1C8, (uint64_t (*)(uint64_t))type metadata accessor for _CDInteractionMechanism, (uint64_t)&unk_1C074B258);
}

uint64_t sub_1C068AA80()
{
  return sub_1C0684D6C(&qword_1EF61B1D0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C074B2F0);
}

uint64_t sub_1C068AAAC()
{
  return sub_1C0684D6C(&qword_1EF61B1D8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C074B2C4);
}

uint64_t sub_1C068AAD8()
{
  return sub_1C0684D6C(&qword_1EF61B1E0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C074B360);
}

uint64_t sub_1C068AB9C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1C06BF76C(0, v1, 0);
  v2 = v29;
  result = sub_1C068DC4C(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v23 = v3 + 80;
  v24 = v1;
  v25 = v5;
  v26 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v28 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v6);
    v13 = v12[1];
    v27 = *v12;
    v14 = v3;
    v15 = *(_QWORD *)(v29 + 16);
    v16 = *(_QWORD *)(v29 + 24);
    result = sub_1C0746EF8();
    if (v15 >= v16 >> 1)
      result = sub_1C06BF76C(v16 > 1, v15 + 1, 1);
    *(_QWORD *)(v29 + 16) = v15 + 1;
    v17 = v29 + 32 * v15;
    *(_QWORD *)(v17 + 32) = v28;
    *(_QWORD *)(v17 + 40) = v27;
    *(_QWORD *)(v17 + 48) = v13;
    *(_BYTE *)(v17 + 56) = 0;
    v9 = 1 << *(_BYTE *)(v14 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v26;
    v18 = *(_QWORD *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v14;
    v5 = v25;
    if (*(_DWORD *)(v14 + 36) != v25)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(v23 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C068ADC0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1C06BF76C(0, v1, 0);
  v2 = v24;
  result = sub_1C068DC4C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = *(_QWORD *)(v24 + 16);
    v14 = *(_QWORD *)(v24 + 24);
    result = sub_1C0746EF8();
    if (v13 >= v14 >> 1)
      result = sub_1C06BF76C(v14 > 1, v13 + 1, 1);
    *(_QWORD *)(v24 + 16) = v13 + 1;
    v15 = v24 + 32 * v13;
    *(_QWORD *)(v15 + 40) = 0;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 32) = v12;
    *(_BYTE *)(v15 + 56) = 1;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static PeopleURL.macPeopleSchemeURLHost.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF61B3E0;
  sub_1C0746EF8();
  return v0;
}

uint64_t static PeopleURL.macPeopleSchemeURLHost.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EF61B3E0 = a1;
  qword_1EF61B3E8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PeopleURL.macPeopleSchemeURLHost.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL static PeopleURL.Scheme.valid(_:)()
{
  unint64_t v0;

  sub_1C0746EF8();
  v0 = sub_1C07481AC();
  swift_bridgeObjectRelease();
  return v0 < 2;
}

People::PeopleURL::Scheme_optional __swiftcall PeopleURL.Scheme.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  People::PeopleURL::Scheme_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t static PeopleURL.Scheme.== infix(_:_:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v3 = *a3;
  if (a2)
  {
    v4 = a2;
  }
  else
  {
    a1 = 0;
    v4 = 0xE000000000000000;
  }
  if (*a3)
    v5 = 0x654D656C706F6570;
  else
    v5 = 0x656C706F6570;
  if (v3)
    v6 = 0xED00006567617373;
  else
    v6 = 0xE600000000000000;
  if (a1 == v5 && v6 == v4)
    v8 = 1;
  else
    v8 = sub_1C0748284();
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t PeopleURL.Scheme.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x654D656C706F6570;
  else
    return 0x656C706F6570;
}

uint64_t static PeopleURL.Scheme.== infix(_:_:)(_BYTE *a1, uint64_t a2, unint64_t a3)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v4 = *a1 == 0;
  if (*a1)
    v5 = 0x654D656C706F6570;
  else
    v5 = 0x656C706F6570;
  if (v4)
    v6 = 0xE600000000000000;
  else
    v6 = 0xED00006567617373;
  v7 = a3 == 0;
  if (a3)
    v8 = a2;
  else
    v8 = 0;
  if (v7)
    v9 = 0xE000000000000000;
  else
    v9 = a3;
  if (v5 == v8 && v6 == v9)
    v11 = 1;
  else
    v11 = sub_1C0748284();
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t PeopleURL.Scheme.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x654D656C706F6570;
  else
    return 0x656C706F6570;
}

uint64_t sub_1C068B360(char *a1, char *a2)
{
  return sub_1C06BAD84(*a1, *a2);
}

uint64_t sub_1C068B36C()
{
  return sub_1C067540C();
}

uint64_t sub_1C068B374()
{
  return sub_1C0676678();
}

uint64_t sub_1C068B37C()
{
  return sub_1C0676918();
}

People::PeopleURL::Scheme_optional sub_1C068B384(Swift::String *a1)
{
  return PeopleURL.Scheme.init(rawValue:)(*a1);
}

uint64_t sub_1C068B390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PeopleURL.Scheme.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C068B3B8()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    return 0x697469726F697270;
  else
    return PeopleURL.Parameter.rawValue.getter();
}

uint64_t PeopleURL.Parameter.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C068B444 + 4 * byte_1C074B840[*v0]))(0xD000000000000011, 0x80000001C0752020);
}

uint64_t sub_1C068B444()
{
  return 1701869940;
}

uint64_t sub_1C068B454@<X0>(uint64_t a1@<X8>)
{
  return a1 - 3;
}

uint64_t sub_1C068B46C()
{
  return 0x656C646E6168;
}

uint64_t sub_1C068B480()
{
  return 0x657263536B636F6CLL;
}

uint64_t sub_1C068B49C()
{
  return 0x4449656C646E7562;
}

unint64_t sub_1C068B4B4()
{
  return 0xD000000000000013;
}

uint64_t sub_1C068B5C8()
{
  return 0x4674736575716572;
}

uint64_t sub_1C068B5EC()
{
  return 0x656C746974;
}

uint64_t sub_1C068B600()
{
  return 0x73556E6F69746361;
}

uint64_t sub_1C068B624()
{
  return 0x737574617473;
}

uint64_t sub_1C068B638()
{
  return 0x6C61766F72707061;
}

uint64_t PeopleURL.ArrayParameter.rawValue.getter()
{
  return 0x697469726F697270;
}

People::PeopleURL::PathAction_optional __swiftcall PeopleURL.PathAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  People::PeopleURL::PathAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PeopleURL.PathAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C068B728 + 4 * byte_1C074B857[*v0]))(0xD000000000000011, 0x80000001C0751FC0);
}

unint64_t sub_1C068B728()
{
  return 0xD000000000000010;
}

uint64_t sub_1C068B744()
{
  return 0x7373654D646E6573;
}

uint64_t sub_1C068B764@<X0>(uint64_t a1@<X8>)
{
  return a1 + 3;
}

void sub_1C068B77C(char *a1)
{
  sub_1C06BAE2C(*a1);
}

void sub_1C068B788()
{
  char *v0;

  sub_1C0675494(*v0);
}

void sub_1C068B790(uint64_t a1)
{
  char *v1;

  sub_1C06766D8(a1, *v1);
}

void sub_1C068B798(uint64_t a1)
{
  char *v1;

  sub_1C0676840(a1, *v1);
}

People::PeopleURL::PathAction_optional sub_1C068B7A0(Swift::String *a1)
{
  return PeopleURL.PathAction.init(rawValue:)(*a1);
}

uint64_t sub_1C068B7AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PeopleURL.PathAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

People::PeopleURL::Parameter_optional __swiftcall PeopleURL.Parameter.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  People::PeopleURL::Parameter_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1C07482A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
LABEL_7:
      v6 = v5;
      break;
    case 5:
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    default:
      v6 = 23;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1C068B8FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C06BACE0(*a1, *a2);
}

uint64_t sub_1C068B908()
{
  sub_1C0748350();
  PeopleURL.Parameter.rawValue.getter();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C068B96C()
{
  PeopleURL.Parameter.rawValue.getter();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C068B9BC()
{
  sub_1C0748350();
  PeopleURL.Parameter.rawValue.getter();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

People::PeopleURL::Parameter_optional sub_1C068BA1C(Swift::String *a1)
{
  return PeopleURL.Parameter.init(rawValue:)(*a1);
}

uint64_t sub_1C068BA28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PeopleURL.Parameter.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t PeopleURL.ArrayParameter.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C07481AC();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C068BAB0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C07481AC();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C068BB00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PeopleURL.ArrayParameter.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Void __swiftcall URLComponents.set(_:forQueryParam:)(Swift::String_optional _, People::PeopleURL::Parameter forQueryParam)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  object = _.value._object;
  if (_.value._object)
  {
    countAndFlagsBits = _.value._countAndFlagsBits;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C074B820;
    *(_QWORD *)(v4 + 32) = countAndFlagsBits;
    *(_QWORD *)(v4 + 40) = object;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v5 = PeopleURL.Parameter.rawValue.getter();
  v7 = v6;
  sub_1C0746EF8();
  sub_1C068BBDC(v4, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C068BBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  void (*v14)(_BYTE *, _QWORD);
  unint64_t *v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  char *v22;
  _BYTE v23[40];

  v21 = sub_1C074712C();
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C0747144();
  if (v8)
  {
    v9 = v8;
    sub_1C0746EF8();
    sub_1C068DCD4(v9, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = sub_1C0747150();
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v20[1] = a2;
    sub_1C0746EF8();
    v20[0] = a1;
    v12 = a1 + 40;
    v20[2] = a3;
    do
    {
      sub_1C0746EF8();
      v14 = (void (*)(_BYTE *, _QWORD))sub_1C0747138();
      if (*v13)
      {
        v15 = v13;
        sub_1C0747108();
        v16 = *v15;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v15 = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v16 = sub_1C06B351C(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
          *v15 = v16;
        }
        v19 = *(_QWORD *)(v16 + 16);
        v18 = *(_QWORD *)(v16 + 24);
        if (v19 >= v18 >> 1)
        {
          v16 = sub_1C06B351C(v18 > 1, v19 + 1, 1, v16);
          *v15 = v16;
        }
        *(_QWORD *)(v16 + 16) = v19 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, v22, v21);
        v14(v23, 0);
      }
      else
      {
        v14(v23, 0);
      }
      v12 += 16;
      swift_bridgeObjectRelease();
      --v11;
    }
    while (v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t URLComponents.set(_:forQueryParam:)(uint64_t a1)
{
  return sub_1C068BBDC(a1, 0x697469726F697270, 0xEA00000000007365);
}

Swift::String_optional __swiftcall URLComponents.value(forQueryParam:)(People::PeopleURL::Parameter forQueryParam)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  Swift::String_optional result;

  v1 = PeopleURL.Parameter.rawValue.getter();
  v3 = v2;
  v4 = sub_1C0747144();
  if (v4)
  {
    v5 = v4;
    sub_1C0746EF8();
    v6 = sub_1C068DEE0(v5, v1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (v6[2])
  {
    v7 = v6[4];
    v8 = (void *)v6[5];
    sub_1C0746EF8();
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  v9 = v7;
  v10 = v8;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

_QWORD *URLComponents.value(forQueryParam:)()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = sub_1C0747144();
  if (!v0)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v1 = sub_1C068DEE0(v0, 0x697469726F697270, 0xEA00000000007365);
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String_optional __swiftcall URLComponents.valueOrNil(forQueryParam:)(People::PeopleURL::Parameter forQueryParam)
{
  Swift::String_optional v1;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String_optional result;
  char v5;

  v5 = *(_BYTE *)forQueryParam;
  URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)&v5);
  v1 = String.trimToNil()();
  swift_bridgeObjectRelease();
  countAndFlagsBits = v1.value._countAndFlagsBits;
  object = v1.value._object;
  result.value._object = object;
  result.value._countAndFlagsBits = countAndFlagsBits;
  return result;
}

uint64_t URLComponents.subscript.getter(char *a1)
{
  char v2;

  v2 = *a1;
  return URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)&v2).value._countAndFlagsBits;
}

uint64_t sub_1C068BFC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = a1[1];
  if (v1)
  {
    v2 = *a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C074B820;
    *(_QWORD *)(v3 + 32) = v2;
    *(_QWORD *)(v3 + 40) = v1;
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v4 = PeopleURL.Parameter.rawValue.getter();
  v6 = v5;
  swift_bridgeObjectRetain_n();
  sub_1C068BBDC(v3, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t URLComponents.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C074B820;
    *(_QWORD *)(v4 + 32) = a1;
    *(_QWORD *)(v4 + 40) = a2;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v5 = PeopleURL.Parameter.rawValue.getter();
  v7 = v6;
  sub_1C0746EF8();
  sub_1C068BBDC(v4, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*URLComponents.subscript.modify(uint64_t a1, char *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  char v3;
  char v5;

  *(_QWORD *)(a1 + 16) = v2;
  v3 = *a2;
  *(_BYTE *)(a1 + 24) = *a2;
  v5 = v3;
  *(Swift::String_optional *)a1 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)&v5);
  return sub_1C068C198;
}

uint64_t sub_1C068C198(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    if (v2)
    {
      v3 = *a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1C074B820;
      *(_QWORD *)(v4 + 32) = v3;
      *(_QWORD *)(v4 + 40) = v2;
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    v7 = PeopleURL.Parameter.rawValue.getter();
    v9 = v8;
    swift_bridgeObjectRetain_n();
    sub_1C068BBDC(v4, v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v2)
    {
      v5 = *a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C074B820;
      *(_QWORD *)(v6 + 32) = v5;
      *(_QWORD *)(v6 + 40) = v2;
    }
    else
    {
      v6 = MEMORY[0x1E0DEE9D8];
    }
    v10 = PeopleURL.Parameter.rawValue.getter();
    v12 = v11;
    sub_1C0746EF8();
    sub_1C068BBDC(v6, v10, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *URLComponents.subscript.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = sub_1C0747144();
  if (!v0)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v1 = sub_1C068DEE0(v0, 0x697469726F697270, 0xEA00000000007365);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C068C36C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  _QWORD *v3;

  result = sub_1C0747144();
  if (result)
  {
    v3 = sub_1C068DEE0(result, 0x697469726F697270, 0xEA00000000007365);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1C068C3E4()
{
  uint64_t v0;

  v0 = sub_1C0746EF8();
  sub_1C068BBDC(v0, 0x697469726F697270, 0xEA00000000007365);
  return swift_bridgeObjectRelease();
}

uint64_t URLComponents.subscript.setter(uint64_t a1)
{
  sub_1C068BBDC(a1, 0x697469726F697270, 0xEA00000000007365);
  return swift_bridgeObjectRelease();
}

uint64_t (*URLComponents.subscript.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  a1[1] = v1;
  v3 = sub_1C0747144();
  if (v3)
  {
    v4 = sub_1C068DEE0(v3, 0x697469726F697270, 0xEA00000000007365);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *a1 = v4;
  return sub_1C068C4EC;
}

uint64_t sub_1C068C4EC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = sub_1C0746EF8();
    sub_1C068BBDC(v3, 0x697469726F697270, 0xEA00000000007365);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C068BBDC(v2, 0x697469726F697270, 0xEA00000000007365);
  }
  return swift_bridgeObjectRelease();
}

void URLComponents.init(action:params:arrayParams:scheme:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unsigned __int8 v5;

  v5 = *a1;
  sub_1C068AB9C(a2);
  swift_bridgeObjectRelease();
  v4 = sub_1C068ADC0(a3);
  swift_bridgeObjectRelease();
  sub_1C068CC84(v4);
  URLComponents.init(action:params:scheme:)(&v5);
}

void URLComponents.init(action:params:scheme:)(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1C07471B0();
  sub_1C07471A4();
  __asm { BR              X9 }
}

uint64_t sub_1C068C6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1C074718C();
  swift_getKeyPath();
  v12 = v0;
  sub_1C0746F64();
  sub_1C0746EF8();
  sub_1C068F218(&v12);
  swift_bridgeObjectRelease();
  swift_release_n();
  v1 = v12;
  v2 = *(_QWORD *)(v12 + 16);
  if (v2)
  {
    sub_1C0746F64();
    v3 = (_BYTE *)(v1 + 56);
    do
    {
      v4 = *((_QWORD *)v3 - 3);
      v5 = *((_QWORD *)v3 - 2);
      v6 = *((_QWORD *)v3 - 1);
      if ((*v3 & 1) != 0)
      {
        sub_1C068F2B8();
        sub_1C068BBDC(v4, 0x697469726F697270, 0xEA00000000007365);
      }
      else
      {
        if (v6)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
          v7 = swift_allocObject();
          *(_OWORD *)(v7 + 16) = xmmword_1C074B820;
          *(_QWORD *)(v7 + 32) = v5;
          *(_QWORD *)(v7 + 40) = v6;
        }
        else
        {
          v7 = MEMORY[0x1E0DEE9D8];
        }
        LOBYTE(v12) = v4;
        v8 = PeopleURL.Parameter.rawValue.getter();
        v10 = v9;
        swift_bridgeObjectRetain_n();
        sub_1C068BBDC(v7, v8, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v3 += 32;
      sub_1C068F2C4();
      --v2;
    }
    while (v2);
    sub_1C0747030();
  }
  return sub_1C0747030();
}

People::PeopleURL::PathAction_optional URLComponents.peopleAction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  _QWORD v10[2];

  v0 = sub_1C07470FC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = sub_1C0747180();
  v10[1] = v4;
  sub_1C07470D8();
  sub_1C068F2D0();
  v5 = sub_1C0747E64();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v5;
  v8._object = v7;
  return PeopleURL.PathAction.init(rawValue:)(v8);
}

uint64_t URL.init(action:params:scheme:)@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[15];
  unsigned __int8 v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1C07471BC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *a2;
  v19 = *a1;
  v18[14] = v13;
  URLComponents.init(action:params:scheme:)(&v19);
  sub_1C0747168();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  v14 = sub_1C07472C4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    sub_1C068F314((uint64_t)v8);
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(a3, v8, v14);
    v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, v16, 1, v14);
}

uint64_t URL.init(action:params:arrayParams:scheme:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07471BC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a4;
  v26 = *a1;
  v18 = sub_1C068AB9C(a2);
  swift_bridgeObjectRelease();
  v19 = sub_1C068ADC0(a3);
  swift_bridgeObjectRelease();
  v25 = v18;
  sub_1C068CC84(v19);
  LOBYTE(v25) = v17;
  URLComponents.init(action:params:scheme:)(&v26);
  sub_1C0747168();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v20 = sub_1C07472C4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20) == 1)
  {
    sub_1C068F314((uint64_t)v12);
    v22 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a5, v12, v20);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(a5, v22, 1, v20);
}

uint64_t sub_1C068CC84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1C06B363C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C068CDD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1C06B3530(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C068CF24(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1C06B3754(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B450);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C068D098(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  unint64_t v41;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1C06B3530(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_1C06E2080((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_1C068FCD0();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v3 = v38[0];
  v37 = v38[1];
  v13 = v39;
  v6 = v40;
  if (v41)
  {
    v17 = (v41 - 1) & v41;
    v18 = __clz(__rbit64(v41)) | (v40 << 6);
    v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  v32 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_66;
  v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36)
    goto LABEL_13;
  v33 = *(_QWORD *)(v37 + 8 * v32);
  v34 = v6 + 1;
  if (!v33)
  {
    v34 = v6 + 2;
    if (v6 + 2 >= v36)
      goto LABEL_13;
    v33 = *(_QWORD *)(v37 + 8 * v34);
    if (!v33)
    {
      v34 = v6 + 3;
      if (v6 + 3 >= v36)
        goto LABEL_13;
      v33 = *(_QWORD *)(v37 + 8 * v34);
      if (!v33)
      {
        v34 = v6 + 4;
        if (v6 + 4 >= v36)
          goto LABEL_13;
        v33 = *(_QWORD *)(v37 + 8 * v34);
        if (!v33)
        {
          v34 = v6 + 5;
          if (v6 + 5 >= v36)
            goto LABEL_13;
          v33 = *(_QWORD *)(v37 + 8 * v34);
          if (!v33)
          {
            v35 = v6 + 6;
            do
            {
              if (v36 == v35)
                goto LABEL_13;
              v33 = *(_QWORD *)(v37 + 8 * v35++);
            }
            while (!v33);
            v34 = v35 - 1;
          }
        }
      }
    }
  }
  v17 = (v33 - 1) & v33;
  v18 = __clz(__rbit64(v33)) + (v34 << 6);
  v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
  v21 = *v19;
  v20 = v19[1];
  result = sub_1C0746EF8();
  while (1)
  {
    v22 = v4[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
      break;
    if (v2 < v23)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_1C06B3530((_QWORD *)(v22 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v23 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v23)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v24 = &v4[2 * v2 + 4];
    *v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v27 >= v36)
      goto LABEL_45;
    v28 = *(_QWORD *)(v37 + 8 * v27);
    v29 = v6 + 1;
    if (!v28)
    {
      v29 = v6 + 2;
      if (v6 + 2 >= v36)
        goto LABEL_45;
      v28 = *(_QWORD *)(v37 + 8 * v29);
      if (!v28)
      {
        v29 = v6 + 3;
        if (v6 + 3 >= v36)
          goto LABEL_45;
        v28 = *(_QWORD *)(v37 + 8 * v29);
        if (!v28)
        {
          v29 = v6 + 4;
          if (v6 + 4 >= v36)
            goto LABEL_45;
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (!v28)
          {
            v29 = v6 + 5;
            if (v6 + 5 >= v36)
              goto LABEL_45;
            v28 = *(_QWORD *)(v37 + 8 * v29);
            if (!v28)
            {
              v30 = v6 + 6;
              while (v36 != v30)
              {
                v28 = *(_QWORD *)(v37 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v26);
    v21 = *v31;
    v20 = v31[1];
    if (v2 >= v23)
    {
      result = sub_1C0746EF8();
      goto LABEL_20;
    }
    result = sub_1C0746EF8();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1C068D460(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    sub_1C0746EF8();
    v3 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    sub_1C0746EF8();
    v5 = sub_1C074814C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    sub_1C0746EF8();
    v4 = MEMORY[0x1C3BA02A8](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1C06E1084(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1C0746EF8();
    v9 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1C0747B34();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C068D618(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    sub_1C0746EF8();
    v3 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    sub_1C0746EF8();
    v5 = sub_1C074814C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    sub_1C0746EF8();
    v4 = MEMORY[0x1C3BA02A8](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1C06E1298(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1C0746EF8();
    v9 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1C0747B34();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C068D7D0(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    sub_1C0746EF8();
    v3 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    sub_1C0746EF8();
    v5 = sub_1C074814C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    sub_1C0746EF8();
    v4 = MEMORY[0x1C3BA02A8](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1C06E14A0(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1C0746EF8();
    v9 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1C0747B34();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C068D988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1C06B3768(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C068DAF0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1C06B4594(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C068DC4C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1C068DCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v7 = sub_1C074712C();
  v8 = MEMORY[0x1E0C80A78](v7);
  v29 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v25 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v16 = *(_QWORD *)(v10 + 72);
    v25[1] = v3;
    v26 = v15;
    v17 = a1 + v15;
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v31 = v16;
    v18 = v10;
    v27 = v10;
    v28 = a2;
    v30(v12, a1 + v15, v7);
    while (sub_1C0747114() != a2 || v19 != a3)
    {
      v20 = sub_1C0748284();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_4;
      v21 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v21(v29, v12, v7);
      v22 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C06BF740(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v32;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1C06BF740(v23 > 1, v24 + 1, 1);
        v22 = v32;
      }
      *(_QWORD *)(v22 + 16) = v24 + 1;
      v21((char *)(v22 + v26 + v24 * v31), v29, v7);
      v32 = v22;
      v18 = v27;
      a2 = v28;
LABEL_5:
      v17 += v31;
      if (!--v14)
        return v32;
      v30(v12, v17, v7);
    }
    swift_bridgeObjectRelease();
LABEL_4:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v7);
    goto LABEL_5;
  }
  return result;
}

_QWORD *sub_1C068DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(sub_1C074712C() - 8);
  v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v9 = *(_QWORD *)(v7 + 72);
  sub_1C0746EF8();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v21 = v9;
  do
  {
    if (sub_1C0747114() == a2 && v12 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = sub_1C0748284();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
        goto LABEL_4;
    }
    v14 = sub_1C0747120();
    if (v15)
    {
      v16 = v14;
      v17 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C06B3530(0, v10[2] + 1, 1, v10);
      v19 = v10[2];
      v18 = v10[3];
      if (v19 >= v18 >> 1)
        v10 = sub_1C06B3530((_QWORD *)(v18 > 1), v19 + 1, 1, v10);
      v10[2] = v19 + 1;
      v11 = &v10[2 * v19];
      v11[4] = v16;
      v11[5] = v17;
      v9 = v21;
    }
LABEL_4:
    v8 += v9;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C068E060@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t result;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v3 = 0xEA00000000007365;
    result = 0x697469726F697270;
  }
  else
  {
    result = PeopleURL.Parameter.rawValue.getter();
  }
  *a2 = result;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C068E0BC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  char v27;
  char v28;
  char *v29;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;

  v4 = __dst;
  v5 = __src;
  v6 = a2 - __src;
  v7 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v7 = a2 - __src;
  v8 = v7 >> 5;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 5;
  v42 = __src;
  v41 = __dst;
  if (v8 >= v11)
  {
    if (v9 >= -31)
    {
      v17 = 32 * v11;
      if (__dst != a2 || &a2[v17] <= __dst)
      {
        v18 = a2;
        memmove(__dst, a2, 32 * v11);
        a2 = v18;
      }
      v19 = &v4[v17];
      v40 = &v4[v17];
      v42 = a2;
      if (v5 < a2 && (unint64_t)(v9 - 32) <= 0xFFFFFFFFFFFFFFC0)
      {
        v20 = (char *)(a3 - 32);
        v21 = a2;
        v33 = v4;
        do
        {
          v35 = a2;
          v31 = v19;
          v19 -= 32;
          v21 -= 32;
          sub_1C068F2B8();
          sub_1C068F2B8();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v38 == v36 && v39 == v37)
            v27 = 0;
          else
            v27 = sub_1C0748284();
          v22 = v20 + 32;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C068F2C4();
          sub_1C068F2C4();
          if ((v27 & 1) != 0)
          {
            v23 = (unint64_t)v33;
            v19 = v31;
            if (v22 != v35 || v20 >= v35)
            {
              v24 = *((_OWORD *)v21 + 1);
              *(_OWORD *)v20 = *(_OWORD *)v21;
              *((_OWORD *)v20 + 1) = v24;
            }
            v42 = v21;
          }
          else
          {
            v40 = v19;
            v23 = (unint64_t)v33;
            v21 = v35;
            if (v22 < v31 || v20 >= v31 || v22 != v31)
            {
              v25 = *((_OWORD *)v19 + 1);
              *(_OWORD *)v20 = *(_OWORD *)v19;
              *((_OWORD *)v20 + 1) = v25;
            }
          }
          if (v21 <= v5)
            break;
          v20 -= 32;
          a2 = v21;
        }
        while ((unint64_t)v19 > v23);
      }
LABEL_48:
      sub_1C0737CAC((void **)&v42, (const void **)&v41, &v40);
      return 1;
    }
  }
  else if (v6 >= -31)
  {
    v12 = 32 * v8;
    if (__dst != __src || &__src[v12] <= __dst)
    {
      v13 = a2;
      memmove(__dst, __src, v12);
      a2 = v13;
    }
    v29 = &v4[v12];
    v40 = &v4[v12];
    if ((unint64_t)a2 < a3 && (unint64_t)(v6 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      while (1)
      {
        v32 = v4;
        v34 = a2;
        sub_1C068F2B8();
        sub_1C068F2B8();
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        if (v38 == v36 && v39 == v37)
        {
          swift_bridgeObjectRelease_n();
          sub_1C068F2C4();
          sub_1C068F2C4();
        }
        else
        {
          v28 = sub_1C0748284();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C068F2C4();
          sub_1C068F2C4();
          if ((v28 & 1) != 0)
          {
            v14 = v34 + 32;
            if (v5 < v34 || v5 >= v14 || v5 != v34)
            {
              v15 = *((_OWORD *)v34 + 1);
              *(_OWORD *)v5 = *(_OWORD *)v34;
              *((_OWORD *)v5 + 1) = v15;
            }
            goto LABEL_23;
          }
        }
        v14 = v34;
        if (v5 != v4)
        {
          v16 = *((_OWORD *)v4 + 1);
          *(_OWORD *)v5 = *(_OWORD *)v4;
          *((_OWORD *)v5 + 1) = v16;
        }
        v4 += 32;
        v41 = v32 + 32;
LABEL_23:
        v5 += 32;
        if (v4 < v29)
        {
          a2 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v42 = v5;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  sub_1C0747030();
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C068E578(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15 = a3;
  v12 = result;
  if (a3 != a2)
  {
    v14 = *a4;
    v4 = *a4 + 32 * a3;
LABEL_6:
    v13 = v4;
    v5 = v12;
    while (1)
    {
      sub_1C068F2B8();
      sub_1C068F2B8();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v18 == v16 && v19 == v17)
      {
        swift_bridgeObjectRelease_n();
        sub_1C068F2C4();
        result = sub_1C068F2C4();
LABEL_5:
        v4 = v13 + 32;
        if (++v15 == a2)
          return result;
        goto LABEL_6;
      }
      v6 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C068F2C4();
      result = sub_1C068F2C4();
      if ((v6 & 1) == 0)
        goto LABEL_5;
      if (!v14)
        break;
      v7 = *(_QWORD *)(v4 + 16);
      v8 = *(_BYTE *)(v4 + 24);
      v9 = *(_OWORD *)v4;
      v10 = *(_OWORD *)(v4 - 16);
      *(_OWORD *)v4 = *(_OWORD *)(v4 - 32);
      *(_OWORD *)(v4 + 16) = v10;
      *(_QWORD *)(v4 - 16) = v7;
      *(_BYTE *)(v4 - 8) = v8;
      *(_OWORD *)(v4 - 32) = v9;
      v4 -= 32;
      if (v15 == ++v5)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C068E760(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  unint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t result;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;

  v3 = a1[1];
  swift_retain_n();
  v4 = sub_1C074823C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_149;
    if (v3)
    {
      sub_1C0746F64();
      sub_1C068E578(0, v3, 1, a1);
    }
    swift_release_n();
    return sub_1C0747030();
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_157;
  v106 = v3;
  v102 = v4;
  v110 = v1;
  v99 = a1;
  if (v3 < 2)
  {
    v109 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v101 = MEMORY[0x1E0DEE9D8];
    if (v3 == 1)
      goto LABEL_13;
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_113:
    if (v12 >= 2)
    {
      v89 = *v99;
      v122 = *v99;
      do
      {
        v90 = v12 - 2;
        if (v12 < 2)
          goto LABEL_144;
        if (!v89)
          goto LABEL_156;
        v91 = *(_QWORD *)&v10[16 * v90 + 32];
        v92 = *(_QWORD *)&v10[16 * v12 + 24];
        v93 = (char *)(v89 + 32 * v91);
        v94 = (char *)(v89 + 32 * *(_QWORD *)&v10[16 * v12 + 16]);
        v95 = v89 + 32 * v92;
        sub_1C0746F64();
        sub_1C068E0BC(v93, v94, v95, v109);
        if (v110)
          goto LABEL_125;
        sub_1C0747030();
        if (v92 < v91)
          goto LABEL_145;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1C0737EB0((uint64_t)v10);
        if (v90 >= *((_QWORD *)v10 + 2))
          goto LABEL_146;
        v96 = &v10[16 * v90 + 32];
        *(_QWORD *)v96 = v91;
        *((_QWORD *)v96 + 1) = v92;
        v97 = *((_QWORD *)v10 + 2);
        if (v12 > v97)
          goto LABEL_147;
        memmove(&v10[16 * v12 + 16], &v10[16 * v12 + 32], 16 * (v97 - v12));
        *((_QWORD *)v10 + 2) = v97 - 1;
        v12 = v97 - 1;
        v89 = v122;
      }
      while (v97 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v101 + 16) = 0;
LABEL_126:
    swift_release_n();
    swift_bridgeObjectRelease();
    return sub_1C0747030();
  }
  v6 = v5 >> 1;
  v7 = sub_1C0747B88();
  *(_QWORD *)(v7 + 16) = v6;
  v101 = v7;
  v109 = (char *)(v7 + 32);
LABEL_13:
  v8 = 0;
  v9 = *a1;
  v100 = *a1 + 48;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = v106;
  v111 = *a1;
  while (1)
  {
    v13 = v8;
    v14 = v8 + 1;
    v107 = v8;
    if (v8 + 1 < v11)
    {
      v103 = v10;
      sub_1C068F2B8();
      sub_1C068F2B8();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v119 == v117 && v120 == v118)
        v115 = 0;
      else
        v115 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C068F2C4();
      sub_1C068F2C4();
      v13 = v107;
      v14 = v107 + 2;
      if (v107 + 2 < v11)
      {
        v15 = v100 + 32 * v107;
        while (1)
        {
          v112 = v14;
          sub_1C068F2B8();
          sub_1C068F2B8();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v119 == v117 && v120 == v118)
            v116 = 0;
          else
            v116 = sub_1C0748284();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C068F2C4();
          sub_1C068F2C4();
          if (((v115 ^ v116) & 1) != 0)
            break;
          ++v14;
          v15 += 32;
          v11 = v106;
          if (v106 == v112 + 1)
          {
            v14 = v106;
            goto LABEL_32;
          }
        }
        v11 = v106;
LABEL_32:
        v13 = v107;
      }
      v10 = v103;
      v9 = v111;
      if ((v115 & 1) != 0)
      {
        if (v14 < v13)
          goto LABEL_150;
        if (v13 < v14)
        {
          v16 = 32 * v14 - 32;
          v17 = 32 * v13;
          v18 = v14;
          v19 = v13;
          do
          {
            if (v19 != --v18)
            {
              if (!v111)
                goto LABEL_155;
              v22 = (_OWORD *)(v111 + v17);
              v23 = (_OWORD *)(v111 + v16);
              v24 = *(_OWORD *)(v111 + v17);
              v25 = *(_QWORD *)(v111 + v17 + 16);
              v26 = *(_BYTE *)(v111 + v17 + 24);
              if (v17 != v16 || v22 >= v23 + 2)
              {
                v20 = v23[1];
                *v22 = *v23;
                v22[1] = v20;
              }
              v21 = v111 + v16;
              *(_OWORD *)v21 = v24;
              *(_QWORD *)(v21 + 16) = v25;
              *(_BYTE *)(v21 + 24) = v26;
            }
            ++v19;
            v16 -= 32;
            v17 += 32;
          }
          while (v19 < v18);
        }
      }
    }
    if (v14 < v11)
    {
      if (__OFSUB__(v14, v13))
        goto LABEL_148;
      if (v14 - v13 < v102)
        break;
    }
LABEL_64:
    if (v14 < v13)
      goto LABEL_143;
    v114 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C0737B0C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v36 = *((_QWORD *)v10 + 2);
    v35 = *((_QWORD *)v10 + 3);
    v12 = v36 + 1;
    v9 = v111;
    if (v36 >= v35 >> 1)
    {
      v88 = sub_1C0737B0C((char *)(v35 > 1), v36 + 1, 1, v10);
      v9 = v111;
      v10 = v88;
    }
    *((_QWORD *)v10 + 2) = v12;
    v37 = v10 + 32;
    v38 = &v10[16 * v36 + 32];
    *(_QWORD *)v38 = v13;
    *((_QWORD *)v38 + 1) = v114;
    if (v36)
    {
      while (1)
      {
        v39 = v12 - 1;
        if (v12 >= 4)
        {
          v44 = &v37[16 * v12];
          v45 = *((_QWORD *)v44 - 8);
          v46 = *((_QWORD *)v44 - 7);
          v50 = __OFSUB__(v46, v45);
          v47 = v46 - v45;
          if (v50)
            goto LABEL_132;
          v49 = *((_QWORD *)v44 - 6);
          v48 = *((_QWORD *)v44 - 5);
          v50 = __OFSUB__(v48, v49);
          v42 = v48 - v49;
          v43 = v50;
          if (v50)
            goto LABEL_133;
          v51 = v12 - 2;
          v52 = &v37[16 * v12 - 32];
          v54 = *(_QWORD *)v52;
          v53 = *((_QWORD *)v52 + 1);
          v50 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          if (v50)
            goto LABEL_135;
          v50 = __OFADD__(v42, v55);
          v56 = v42 + v55;
          if (v50)
            goto LABEL_138;
          if (v56 >= v47)
          {
            v74 = &v37[16 * v39];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v50 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v50)
              goto LABEL_142;
            v67 = v42 < v77;
            goto LABEL_101;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v68 = *((_QWORD *)v10 + 4);
            v69 = *((_QWORD *)v10 + 5);
            v50 = __OFSUB__(v69, v68);
            v61 = v69 - v68;
            v62 = v50;
            goto LABEL_95;
          }
          v41 = *((_QWORD *)v10 + 4);
          v40 = *((_QWORD *)v10 + 5);
          v50 = __OFSUB__(v40, v41);
          v42 = v40 - v41;
          v43 = v50;
        }
        if ((v43 & 1) != 0)
          goto LABEL_134;
        v51 = v12 - 2;
        v57 = &v37[16 * v12 - 32];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v60 = __OFSUB__(v58, v59);
        v61 = v58 - v59;
        v62 = v60;
        if (v60)
          goto LABEL_137;
        v63 = &v37[16 * v39];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v50 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v50)
          goto LABEL_140;
        if (__OFADD__(v61, v66))
          goto LABEL_141;
        if (v61 + v66 >= v42)
        {
          v67 = v42 < v66;
LABEL_101:
          if (v67)
            v39 = v51;
          goto LABEL_103;
        }
LABEL_95:
        if ((v62 & 1) != 0)
          goto LABEL_136;
        v70 = &v37[16 * v39];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v50 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v50)
          goto LABEL_139;
        if (v73 < v61)
          goto LABEL_15;
LABEL_103:
        v78 = v39 - 1;
        if (v39 - 1 >= v12)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!v9)
          goto LABEL_154;
        v79 = &v37[16 * v78];
        v80 = *(_QWORD *)v79;
        v81 = v39;
        v82 = &v37[16 * v39];
        v83 = *((_QWORD *)v82 + 1);
        v84 = (char *)(v9 + 32 * *(_QWORD *)v79);
        v121 = (char *)(v9 + 32 * *(_QWORD *)v82);
        v85 = v9 + 32 * v83;
        sub_1C0746F64();
        sub_1C068E0BC(v84, v121, v85, v109);
        if (v110)
        {
LABEL_125:
          swift_bridgeObjectRelease();
          sub_1C0747030();
          *(_QWORD *)(v101 + 16) = 0;
          goto LABEL_126;
        }
        sub_1C0747030();
        if (v83 < v80)
          goto LABEL_129;
        if (v81 > *((_QWORD *)v10 + 2))
          goto LABEL_130;
        v86 = v81;
        *(_QWORD *)v79 = v80;
        v37 = v10 + 32;
        *(_QWORD *)&v10[16 * v78 + 40] = v83;
        v87 = *((_QWORD *)v10 + 2);
        if (v86 >= v87)
          goto LABEL_131;
        v12 = v87 - 1;
        memmove(v82, v82 + 16, 16 * (v87 - 1 - v86));
        *((_QWORD *)v10 + 2) = v87 - 1;
        v9 = v111;
        if (v87 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v11 = v106;
    v8 = v114;
    if (v114 >= v106)
      goto LABEL_113;
  }
  v27 = v13 + v102;
  if (__OFADD__(v13, v102))
    goto LABEL_151;
  if (v27 >= v11)
    v27 = v11;
  if (v27 >= v13)
  {
    if (v14 != v27)
    {
      v104 = v10;
      v105 = v27;
      v28 = v9 + 32 * v14;
      do
      {
        v113 = v14;
        v108 = v28;
        v29 = v13;
        while (1)
        {
          sub_1C068F2B8();
          sub_1C068F2B8();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v119 == v117 && v120 == v118)
            break;
          v30 = sub_1C0748284();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C068F2C4();
          sub_1C068F2C4();
          if ((v30 & 1) == 0)
            goto LABEL_55;
          if (!v111)
            goto LABEL_153;
          v31 = *(_QWORD *)(v28 + 16);
          v32 = *(_BYTE *)(v28 + 24);
          v33 = *(_OWORD *)v28;
          v34 = *(_OWORD *)(v28 - 16);
          *(_OWORD *)v28 = *(_OWORD *)(v28 - 32);
          *(_OWORD *)(v28 + 16) = v34;
          *(_QWORD *)(v28 - 16) = v31;
          *(_BYTE *)(v28 - 8) = v32;
          *(_OWORD *)(v28 - 32) = v33;
          v28 -= 32;
          if (v14 == ++v29)
            goto LABEL_55;
        }
        swift_bridgeObjectRelease_n();
        sub_1C068F2C4();
        sub_1C068F2C4();
LABEL_55:
        ++v14;
        v13 = v107;
        v28 = v108 + 32;
      }
      while (v113 + 1 != v105);
      v14 = v105;
      v10 = v104;
    }
    goto LABEL_64;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  swift_release_n();
  __break(1u);
LABEL_154:
  swift_release_n();
  __break(1u);
LABEL_155:
  swift_release_n();
  __break(1u);
LABEL_156:
  swift_release_n();
  __break(1u);
LABEL_157:
  swift_release_n();
  result = sub_1C0748110();
  __break(1u);
  return result;
}

uint64_t sub_1C068F218(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[2];

  v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1C0738708(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  sub_1C0746F64();
  sub_1C068E760(v5);
  sub_1C0747030();
  *a1 = v2;
  return swift_release_n();
}

uint64_t sub_1C068F2B8()
{
  return sub_1C0746EF8();
}

uint64_t sub_1C068F2C4()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C068F2D0()
{
  unint64_t result;

  result = qword_1EF61CF00;
  if (!qword_1EF61CF00)
  {
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF61CF00);
  }
  return result;
}

uint64_t sub_1C068F314(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C068F358()
{
  unint64_t result;

  result = qword_1EF61B3F0;
  if (!qword_1EF61B3F0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleURL.Scheme, &type metadata for PeopleURL.Scheme);
    atomic_store(result, (unint64_t *)&qword_1EF61B3F0);
  }
  return result;
}

unint64_t sub_1C068F3A0()
{
  unint64_t result;

  result = qword_1EF61B3F8;
  if (!qword_1EF61B3F8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleURL.PathAction, &type metadata for PeopleURL.PathAction);
    atomic_store(result, (unint64_t *)&qword_1EF61B3F8);
  }
  return result;
}

unint64_t sub_1C068F3E8()
{
  unint64_t result;

  result = qword_1EF61B400;
  if (!qword_1EF61B400)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleURL.Parameter, &type metadata for PeopleURL.Parameter);
    atomic_store(result, (unint64_t *)&qword_1EF61B400);
  }
  return result;
}

unint64_t sub_1C068F42C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C068F450();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C068F450()
{
  unint64_t result;

  result = qword_1EF61B420;
  if (!qword_1EF61B420)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleURL.Parameter, &type metadata for PeopleURL.Parameter);
    atomic_store(result, (unint64_t *)&qword_1EF61B420);
  }
  return result;
}

unint64_t sub_1C068F498()
{
  unint64_t result;

  result = qword_1EF61B428;
  if (!qword_1EF61B428)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleURL.ArrayParameter, &type metadata for PeopleURL.ArrayParameter);
    atomic_store(result, (unint64_t *)&qword_1EF61B428);
  }
  return result;
}

unint64_t sub_1C068F4DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C068F500();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C068F500()
{
  unint64_t result;

  result = qword_1EF61B448;
  if (!qword_1EF61B448)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleURL.ArrayParameter, &type metadata for PeopleURL.ArrayParameter);
    atomic_store(result, (unint64_t *)&qword_1EF61B448);
  }
  return result;
}

uint64_t sub_1C068F544@<X0>(char *a1@<X1>, Swift::String_optional *a2@<X8>)
{
  uint64_t result;
  Swift::String_optional v4;
  char v5;

  v5 = *a1;
  v4 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)&v5);
  result = v4.value._countAndFlagsBits;
  *a2 = v4;
  return result;
}

uint64_t sub_1C068F584()
{
  return 0;
}

uint64_t sub_1C068F59C()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for PeopleURL(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PeopleURL(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C068F68C + 4 * byte_1C074B87B[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1C068F6C0 + 4 * byte_1C074B876[v4]))();
}

uint64_t sub_1C068F6C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C068F6C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C068F6D0);
  return result;
}

uint64_t sub_1C068F6DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C068F6E4);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1C068F6E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C068F6F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleURL()
{
  return &type metadata for PeopleURL;
}

uint64_t storeEnumTagSinglePayload for PeopleURL.Scheme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C068F758 + 4 * byte_1C074B885[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C068F78C + 4 * byte_1C074B880[v4]))();
}

uint64_t sub_1C068F78C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C068F794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C068F79CLL);
  return result;
}

uint64_t sub_1C068F7A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C068F7B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C068F7B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C068F7BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleURL.Scheme()
{
  return &type metadata for PeopleURL.Scheme;
}

uint64_t destroy for PeopleURL.ParamType()
{
  return sub_1C068F2C4();
}

uint64_t initializeWithCopy for PeopleURL.ParamType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1C068F2B8();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for PeopleURL.ParamType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1C068F2B8();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1C068F2C4();
  return a1;
}

uint64_t assignWithTake for PeopleURL.ParamType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1C068F2C4();
  return a1;
}

uint64_t getEnumTagSinglePayload for PeopleURL.ParamType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PeopleURL.ParamType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C068F990(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C068F998(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleURL.ParamType()
{
  return &type metadata for PeopleURL.ParamType;
}

uint64_t storeEnumTagSinglePayload for PeopleURL.PathAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C068FA00 + 4 * byte_1C074B88F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C068FA34 + 4 * byte_1C074B88A[v4]))();
}

uint64_t sub_1C068FA34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C068FA3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C068FA44);
  return result;
}

uint64_t sub_1C068FA50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C068FA58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C068FA5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C068FA64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleURL.PathAction()
{
  return &type metadata for PeopleURL.PathAction;
}

uint64_t getEnumTagSinglePayload for PeopleURL.Parameter(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PeopleURL.Parameter(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1C068FB5C + 4 * byte_1C074B899[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1C068FB90 + 4 * byte_1C074B894[v4]))();
}

uint64_t sub_1C068FB90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C068FB98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C068FBA0);
  return result;
}

uint64_t sub_1C068FBAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C068FBB4);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1C068FBB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C068FBC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleURL.Parameter()
{
  return &type metadata for PeopleURL.Parameter;
}

uint64_t getEnumTagSinglePayload for PeopleURL.ArrayParameter(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PeopleURL.ArrayParameter(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C068FC6C + 4 * byte_1C074B89E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C068FC8C + 4 * byte_1C074B8A3[v4]))();
}

_BYTE *sub_1C068FC6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C068FC8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C068FC94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C068FC9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C068FCA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C068FCAC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1C068FCB8()
{
  return 0;
}

ValueMetadata *type metadata accessor for PeopleURL.ArrayParameter()
{
  return &type metadata for PeopleURL.ArrayParameter;
}

uint64_t sub_1C068FCD0()
{
  return sub_1C0747030();
}

uint64_t sub_1C068FCD8()
{
  return 1;
}

uint64_t sub_1C068FCE0()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

uint64_t sub_1C068FD20()
{
  return sub_1C074835C();
}

uint64_t sub_1C068FD44()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

uint64_t sub_1C068FD90(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1C0746F64();
  v1(v2);
  return sub_1C0747030();
}

uint64_t sub_1C068FDBC()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_remoteObjectProxy);
  sub_1C0747EAC();
  return swift_unknownObjectRelease();
}

id sub_1C068FE00()
{
  void *v0;

  return objc_msgSend(v0, sel_invalidate);
}

uint64_t sub_1C068FE10()
{
  return swift_deallocClassInstance();
}

_QWORD *DaemonConnection.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v1 = type metadata accessor for PeopleXPCConnectionFactory();
  v2 = swift_allocObject();
  v0[8] = v1;
  v0[9] = &off_1E79E67F0;
  v0[5] = v2;
  return v0;
}

_QWORD *DaemonConnection.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0[2] = 0;
  v0[3] = 0;
  v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v1 = type metadata accessor for PeopleXPCConnectionFactory();
  v2 = swift_allocObject();
  v0[8] = v1;
  v0[9] = &off_1E79E67F0;
  v0[5] = v2;
  return v0;
}

uint64_t type metadata accessor for PeopleXPCConnectionFactory()
{
  return objc_opt_self();
}

id sub_1C068FF14()
{
  _QWORD *v0;
  void *v1;
  _UNKNOWN **v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  uint64_t (*v19)();
  _QWORD *v20;

  v1 = (void *)v0[4];
  objc_msgSend(v1, sel_lock);
  if (v0[2])
  {
    v2 = (_UNKNOWN **)v0[3];
    v3 = (id)v0[2];
  }
  else
  {
    v4 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
    v5 = (void *)sub_1C074790C();
    v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 0);

    v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF630978);
    objc_msgSend(v6, sel_setRemoteObjectInterface_, v7);
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    sub_1C0747030();
    v8 = (_QWORD *)swift_allocObject();
    v2 = &off_1E79E6780;
    v8[2] = v0;
    v8[3] = v6;
    v8[4] = &off_1E79E6780;
    v19 = sub_1C0691074;
    v20 = v8;
    v9 = MEMORY[0x1E0C809B0];
    v15 = MEMORY[0x1E0C809B0];
    v16 = 1107296256;
    v17 = sub_1C068FD90;
    v18 = &block_descriptor_9;
    v10 = _Block_copy(&v15);
    v11 = v6;
    sub_1C0747030();
    objc_msgSend(v11, sel_setInterruptionHandler_, v10);
    _Block_release(v10);
    swift_unownedRelease();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    sub_1C0747030();
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v0;
    v12[3] = v11;
    v12[4] = &off_1E79E6780;
    v19 = sub_1C06910D0;
    v20 = v12;
    v15 = v9;
    v16 = 1107296256;
    v17 = sub_1C068FD90;
    v18 = &block_descriptor_15;
    v13 = _Block_copy(&v15);
    v3 = v11;
    sub_1C0747030();
    objc_msgSend(v3, sel_setInvalidationHandler_, v13);
    _Block_release(v13);
    swift_unownedRelease();
    objc_msgSend(v3, sel_resume);

  }
  v0[2] = v3;
  v0[3] = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_unlock);
  return v3;
}

id sub_1C06901B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1ED4FE9A8 != -1)
    swift_once();
  v6 = sub_1C0747720();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED4FE9D8);
  v7 = sub_1C0747708();
  v8 = sub_1C0747D80();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0671000, v7, v8, "Connection was invalidated", v9, 2u);
    MEMORY[0x1C3BA0D04](v9, -1, -1);
  }

  sub_1C0747FF0();
  sub_1C07479CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B500);
  sub_1C0748104();
  sub_1C0747414();
  swift_bridgeObjectRelease();
  v10 = *(void **)(v3 + 32);
  objc_msgSend(v10, sel_lock, a1, a2, 0, 0xE000000000000000);
  v13 = *(_QWORD *)(v3 + 16);
  v12 = (_QWORD *)(v3 + 16);
  v11 = v13;
  if (v13 && v11 == a1)
  {
    *v12 = 0;
    v12[1] = 0;
    swift_unknownObjectRelease();
  }
  return objc_msgSend(v10, sel_unlock);
}

void sub_1C0690360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t aBlock[6];
  uint64_t v23;

  sub_1C068FF14();
  v7 = v6;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 88))(aBlock, ObjectType, v7);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B458);
  swift_dynamicCast();
  v9 = (void *)v23;
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v10 = sub_1C0747720();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED4FF8B0);
  swift_unknownObjectRetain_n();
  v11 = sub_1C0747708();
  v12 = sub_1C0747D80();
  if (os_log_type_enabled(v11, v12))
  {
    v21 = a3;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v23 = (uint64_t)v9;
    swift_unknownObjectRetain();
    v15 = sub_1C074796C();
    v23 = sub_1C069092C(v15, v16, aBlock);
    sub_1C0747E40();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v11, v12, "got remote object: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v14, -1, -1);
    v17 = v13;
    a3 = v21;
    MEMORY[0x1C3BA0D04](v17, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v18 = (void *)sub_1C07472E8();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  aBlock[4] = (uint64_t)sub_1C0690894;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C0690704;
  aBlock[3] = (uint64_t)&block_descriptor;
  v20 = _Block_copy(aBlock);
  sub_1C0746F64();
  sub_1C0747030();
  objc_msgSend(v9, sel_sendMessageWith_completion_, v18, v20);
  _Block_release(v20);
  swift_unknownObjectRelease();

}

void sub_1C0690648(uint64_t a1, unint64_t a2, id a3, void (*a4)(uint64_t, unint64_t, uint64_t))
{
  id v5;
  id v6;
  uint64_t v7;

  if (a2 >> 60 == 15)
  {
    v5 = a3;
    if (a3)
    {
      v6 = a3;
      v7 = (uint64_t)v5;
    }
    else
    {
      sub_1C0690FE8();
      v7 = swift_allocError();
      v5 = (id)v7;
    }
    a4(v7, 0, 1);

  }
  else
  {
    sub_1C069102C(a1, a2);
    a4(a1, a2, 0);
    sub_1C0690F90(a1, a2);
  }
}

uint64_t sub_1C0690704(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C0746F64();
    v6 = v4;
    v4 = (void *)sub_1C074730C();
    v8 = v7;

  }
  else
  {
    sub_1C0746F64();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_1C0690F90((uint64_t)v4, v8);
  return sub_1C0747030();
}

uint64_t DaemonConnection.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t DaemonConnection.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t sub_1C06907F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  v6 = a1[1];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  sub_1C0746F64();
  sub_1C0690360(v5, v6, (uint64_t)sub_1C0690F58, v7);
  return sub_1C0747030();
}

uint64_t sub_1C0690870()
{
  sub_1C0747030();
  return swift_deallocObject();
}

void sub_1C0690894(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1C0690648(a1, a2, a3, *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16));
}

uint64_t sub_1C069089C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C06908BC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1C069092C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1C0747E40();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1C069092C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1C06909FC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1C068A530((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1C068A530((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_1C0746EF8();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1C06909FC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C0747E4C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1C0690BB4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1C0748080();
  if (!v8)
  {
    sub_1C0748110();
    __break(1u);
LABEL_17:
    result = sub_1C0748188();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1C0690BB4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1C0690C48(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1C0690DBC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1C0690DBC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C0690C48(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1C0734F10(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1C0747FFC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1C0748110();
      __break(1u);
LABEL_10:
      v2 = sub_1C07479E4();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1C0748188();
    __break(1u);
LABEL_14:
    result = sub_1C0748110();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C0690DBC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

_BYTE **sub_1C0690F08(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t type metadata accessor for DaemonConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for DaemonConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonConnection.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of DaemonConnection.send(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1C0690F58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  char v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_1C0690F90(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C0690FA4(a1, a2);
  return a1;
}

uint64_t sub_1C0690FA4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    sub_1C0747030();
  }
  return sub_1C0747030();
}

unint64_t sub_1C0690FE8()
{
  unint64_t result;

  result = qword_1EF61B508;
  if (!qword_1EF61B508)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074BE60, &type metadata for DaemonMessagingError);
    atomic_store(result, (unint64_t *)&qword_1EF61B508);
  }
  return result;
}

uint64_t sub_1C069102C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    sub_1C0746F64();
  }
  return sub_1C0746F64();
}

uint64_t sub_1C0691074()
{
  swift_unownedRetainStrong();
  sub_1C0691114();
  return sub_1C0747030();
}

uint64_t objectdestroy_5Tm()
{
  swift_unownedRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06910D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_unownedRetainStrong();
  sub_1C06901B0(v1, v2);
  return sub_1C0747030();
}

id sub_1C0691114()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0;
  if (qword_1ED4FE9A8 != -1)
    swift_once();
  v2 = sub_1C0747720();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED4FE9D8);
  v3 = sub_1C0747708();
  v4 = sub_1C0747D80();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1C0671000, v3, v4, "Connection was interrupted", v5, 2u);
    MEMORY[0x1C3BA0D04](v5, -1, -1);
  }

  v6 = (void *)v1[4];
  objc_msgSend(v6, sel_lock);
  if (v1[2])
  {
    v7 = v1[3];
    ObjectType = swift_getObjectType();
    v9 = *(void (**)(uint64_t, uint64_t))(v7 + 104);
    swift_unknownObjectRetain();
    v9(ObjectType, v7);
    v1[2] = 0;
    v1[3] = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return objc_msgSend(v6, sel_unlock);
}

uint64_t storeEnumTagSinglePayload for DaemonMessagingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C06912A0 + 4 * byte_1C074BCB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C06912C0 + 4 * byte_1C074BCB5[v4]))();
}

_BYTE *sub_1C06912A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C06912C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C06912C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C06912D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C06912D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C06912E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DaemonMessagingError()
{
  return &type metadata for DaemonMessagingError;
}

unint64_t sub_1C0691300()
{
  unint64_t result;

  result = qword_1EF61B510;
  if (!qword_1EF61B510)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074BE38, &type metadata for DaemonMessagingError);
    atomic_store(result, (unint64_t *)&qword_1EF61B510);
  }
  return result;
}

_QWORD *sub_1C0691350(uint64_t (*a1)(uint64_t *), _QWORD *a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v5 = a3;
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
  {
LABEL_18:
    v8 = sub_1C074814C();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      v9 = 0;
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
      v16 = v5 & 0xC000000000000001;
      v14 = v5;
      while (1)
      {
        if (v16)
        {
          v10 = MEMORY[0x1C3BA029C](v9, v5);
          v11 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            sub_1C0747030();
            return v3;
          }
        }
        else
        {
          if (v9 >= *(_QWORD *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          v10 = *(_QWORD *)(v5 + 8 * v9 + 32);
          swift_unknownObjectRetain();
          v11 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_14;
        }
        v17 = v10;
        v3 = a2;
        v12 = a1(&v17);
        if (v4)
          goto LABEL_15;
        if ((v12 & 1) != 0)
        {
          sub_1C074808C();
          sub_1C07480BC();
          v5 = v14;
          sub_1C07480C8();
          v3 = &v18;
          sub_1C0748098();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v9;
        if (v11 == v8)
        {
          v3 = v18;
          goto LABEL_20;
        }
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C0691504(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(__int128 *);
  __int128 v15[2];
  __int128 v16[2];
  unint64_t v17;

  v5 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(a3 + 16);
    v14 = (uint64_t (*)(__int128 *))result;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      sub_1C0685C78(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        sub_1C0747030();
        swift_bridgeObjectRelease();
        return v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_1C0685BC4(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C06BF830(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v17;
        v12 = *(_QWORD *)(v17 + 16);
        v11 = *(_QWORD *)(v17 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1C06BF830(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        *(_QWORD *)(v9 + 16) = v12 + 1;
        result = sub_1C0685BC4(v15, v9 + 40 * v12 + 32);
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
      }
      ++v5;
      v8 += 40;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t ReindexCoordinator.indexer.getter()
{
  return sub_1C0746F64();
}

uint64_t ReindexCoordinator.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for SpotlightIndexer();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t ReindexCoordinator.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for SpotlightIndexer();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1C069171C(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v19 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61DF50);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[4];
  v18 = a2[3];
  v17 = __swift_project_boxed_opaque_existential_1(a2, v18);
  v20 = a3;
  if (qword_1EF61A538 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1EF61E3B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v5);
  v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  (*(void (**)(char *, char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8))(&v20, v11, sub_1C069321C, v15, v18, v12);
  sub_1C0747030();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C06918CC()
{
  sub_1C0746EF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61DF50);
  return sub_1C0747C18();
}

uint64_t sub_1C0691910(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v8 + 120) = a8;
  *(_QWORD *)(v8 + 128) = v12;
  *(_QWORD *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 112) = a7;
  *(_QWORD *)(v8 + 88) = a4;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 72) = a2;
  *(_QWORD *)(v8 + 80) = a3;
  v10 = sub_1C0747720();
  *(_QWORD *)(v8 + 136) = v10;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  *(_BYTE *)(v8 + 224) = *a1;
  return swift_task_switch();
}

uint64_t sub_1C06919A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61DC40);
  *v4 = v0;
  v4[1] = sub_1C0691A58;
  return sub_1C0748260();
}

uint64_t sub_1C0691A58()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0691AB4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  if (qword_1ED4FE9A8 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED4FE9D8);
  *(_QWORD *)(v0 + 184) = v5;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v44(v2, v5, v3);
  swift_bridgeObjectRetain_n();
  v6 = sub_1C0747708();
  v7 = sub_1C0747D68();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(unsigned __int8 *)(v0 + 224);
    v9 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v9 = 136315394;
    __asm { BR              X9 }
  }
  v10 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRelease_n();

  v43 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v43(v10, v11);
  v13 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 136);
  v16 = *(uint64_t (**)(uint64_t))(v0 + 72);
  v17 = swift_task_alloc();
  v18 = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v17 + 16) = v15;
  *(_OWORD *)(v17 + 24) = v18;
  sub_1C0691350((uint64_t (*)(uint64_t *))sub_1C0692EF8, (_QWORD *)v17, v1);
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B530);
  v19 = sub_1C07480F8();
  swift_bridgeObjectRelease();
  v20 = v16(v19);
  *(_QWORD *)(v0 + 192) = v20;
  swift_bridgeObjectRelease();
  v44(v13, v5, v14);
  swift_bridgeObjectRetain_n();
  v21 = sub_1C0747708();
  v22 = sub_1C0747D80();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = *(unsigned __int8 *)(v0 + 224);
    v24 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v24 = 136315394;
    __asm { BR              X9 }
  }
  v25 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease_n();

  v43(v25, v26);
  *(_QWORD *)(v0 + 24) = v20;
  v27 = sub_1C0747BDC();
  MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF50], v27);
  if ((sub_1C0747D2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v29 = *(_QWORD *)(v0 + 128);
  v30 = sub_1C0746EF8();
  if (!MEMORY[0x1C3B9FE28](v30, v29))
  {
    swift_bridgeObjectRelease();
    sub_1C0746EF8();
    v36 = sub_1C0747708();
    v37 = sub_1C0747D80();
    v38 = os_log_type_enabled(v36, v37);
    v39 = *(_QWORD *)(v0 + 192);
    if (v38)
    {
      v40 = *(_QWORD *)(v0 + 128);
      v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v41 = 134217984;
      v42 = MEMORY[0x1C3B9FE10](v39, v40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 32) = v42;
      sub_1C0747E40();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0671000, v36, v37, "completed re-indexing %ld events", v41, 0xCu);
      MEMORY[0x1C3BA0D04](v41, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_9;
  }
  v31 = sub_1C0747B94();
  sub_1C0747B4C();
  if ((v31 & 1) != 0)
  {
    v32 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + 32);
    swift_unknownObjectRetain();
  }
  else
  {
    v32 = sub_1C074802C();
  }
  *(_QWORD *)(v0 + 200) = v32;
  *(_QWORD *)(v0 + 208) = 1;
  sub_1C0746F64();
  v33 = swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v33;
  *(_QWORD *)v33 = v0;
  *(_QWORD *)(v33 + 8) = sub_1C0692420;
  v34 = *(_BYTE *)(v0 + 224);
  v35 = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v33 + 40) = *(_QWORD *)(v0 + 128);
  *(_BYTE *)(v33 + 64) = v34;
  *(_OWORD *)(v33 + 24) = v35;
  *(_QWORD *)(v33 + 16) = v32;
  return swift_task_switch();
}

uint64_t sub_1C0692420()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0692474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  __int128 v17;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 128);
  sub_1C0747030();
  swift_unknownObjectRelease();
  if (v1 == MEMORY[0x1C3B9FE28](v2, v3))
  {
    swift_bridgeObjectRelease();
    sub_1C0746EF8();
    v4 = sub_1C0747708();
    v5 = sub_1C0747D80();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 192);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 128);
      v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v9 = 134217984;
      v10 = MEMORY[0x1C3B9FE10](v7, v8);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 32) = v10;
      sub_1C0747E40();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0671000, v4, v5, "completed re-indexing %ld events", v9, 0xCu);
      MEMORY[0x1C3BA0D04](v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 208);
    v12 = sub_1C0747B94();
    sub_1C0747B4C();
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + 8 * v11 + 32);
      result = swift_unknownObjectRetain();
    }
    else
    {
      result = sub_1C074802C();
      v13 = result;
    }
    *(_QWORD *)(v0 + 200) = v13;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v0 + 208) = v11 + 1;
      sub_1C0746F64();
      v15 = swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v15;
      *(_QWORD *)v15 = v0;
      *(_QWORD *)(v15 + 8) = sub_1C0692420;
      v16 = *(_BYTE *)(v0 + 224);
      v17 = *(_OWORD *)(v0 + 104);
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v0 + 128);
      *(_BYTE *)(v15 + 64) = v16;
      *(_OWORD *)(v15 + 24) = v17;
      *(_QWORD *)(v15 + 16) = v13;
      return swift_task_switch();
    }
  }
  return result;
}

uint64_t sub_1C06926C4(uint64_t a1, uint64_t (*a2)())
{
  char v3;

  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B530);
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v3 = a2();
    swift_unknownObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C0692794(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C06927B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 40) = v3;
  *(_BYTE *)(v4 + 48) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *v6 = v0;
  v6[1] = sub_1C069286C;
  return sub_1C0748260();
}

uint64_t sub_1C069286C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06928C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C06928D0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, char a5)
{
  void *v10;

  v10 = (void *)MEMORY[0x1C3BA06EC]();
  sub_1C069294C(a2, a3, a4, a5, a1);
  objc_autoreleasePoolPop(v10);
}

uint64_t sub_1C069294C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B600);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  a1(a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1C0747684();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t sub_1C0692A60(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _DWORD *v16;
  _QWORD v18[8];

  v6 = sub_1C0747720();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v10 = *(id *)a1;
    v11 = *(id *)a1;
    if (qword_1ED4FE9A8 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED4FE9D8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_1C06931A0(v10, 1);
    v13 = v10;
    v14 = sub_1C0747708();
    v15 = sub_1C0747D74();
    if (os_log_type_enabled(v14, v15))
    {
      v18[1] = a3;
      v16 = (_DWORD *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      v18[7] = v18[0];
      *v16 = 136315394;
      __asm { BR              X10 }
    }
    sub_1C06931AC(v10, 1);
    sub_1C06931AC(v10, 1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B600);
  return sub_1C0747C18();
}

uint64_t ReindexCoordinator.deinit()
{
  uint64_t v0;

  sub_1C0747030();
  return v0;
}

uint64_t ReindexCoordinator.__deallocating_deinit()
{
  sub_1C0747030();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0692EB8(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  return StatusType.description.getter();
}

uint64_t sub_1C0692EEC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C069171C(a1, *(_QWORD **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1C0692EF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C06926C4(a1, *(uint64_t (**)())(v1 + 24)) & 1;
}

uint64_t dispatch thunk of SpotlightReindexHandler.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SpotlightReindexHandler.bundleId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SpotlightReindexHandler.reindexEvents(includeIds:withCoordinator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C069325C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of EventCollectorProtocol.collectEvents(statusType:maxAge:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for ReindexCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReindexCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReindexCoordinator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ReindexCoordinator.reindex<A>(statusType:squashEvents:includeEvent:handleEvent:withReader:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v9 + 104) + *(_QWORD *)(*(_QWORD *)v9 + 104));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_1C06930A0;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1C06930A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1C06930E8(uint64_t a1)
{
  uint64_t v1;

  sub_1C06928D0(a1, *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_1C06930F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B600);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C069315C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B600) - 8) + 80);
  return sub_1C0692A60(a1, *(_BYTE *)(v1 + 16), v1 + ((v3 + 17) & ~v3));
}

id sub_1C06931A0(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

void sub_1C06931AC(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1C06931B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61DF50);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C069321C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61DF50);
  return sub_1C06918CC();
}

unint64_t static PeopleSpotlightConstants.screentimeRequestKind.getter()
{
  return 0xD000000000000020;
}

unint64_t static PeopleSpotlightConstants.screentimeRequestStatus.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static PeopleSpotlightConstants.screentimActionUserID.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static PeopleSpotlightConstants.screentimeApprovalTime.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static PeopleSpotlightConstants.screentimeApprovalTimeEnum.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_1C06932EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074BF60;
  *(_QWORD *)(v0 + 32) = sub_1C0747930();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1C0747930();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1C0747930();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = sub_1C0747930();
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v0 + 96) = sub_1C0747930();
  *(_QWORD *)(v0 + 104) = v5;
  result = sub_1C0747930();
  *(_QWORD *)(v0 + 112) = result;
  *(_QWORD *)(v0 + 120) = v7;
  qword_1EF629C70 = v0;
  return result;
}

uint64_t sub_1C06933AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074BF70;
  *(_QWORD *)(v0 + 32) = sub_1C0747930();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1C0747930();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = 0xD000000000000022;
  *(_QWORD *)(v0 + 72) = 0x80000001C0752DD0;
  *(_QWORD *)(v0 + 80) = 0xD000000000000020;
  *(_QWORD *)(v0 + 88) = 0x80000001C0752D40;
  if (qword_1EF61A268 != -1)
    swift_once();
  sub_1C0746EF8();
  v3 = sub_1C0746EF8();
  sub_1C068CDD4(v3);
  result = swift_bridgeObjectRelease();
  qword_1EF61B608 = v0;
  return result;
}

uint64_t static PeopleSpotlightConstants.screenTimeAttributes.getter()
{
  return sub_1C0693640(&qword_1EF61A270);
}

uint64_t sub_1C06934D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074BF80;
  *(_QWORD *)(v0 + 32) = sub_1C0747930();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1C0747930();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1C0747930();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = sub_1C0747930();
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v0 + 96) = sub_1C0747930();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = sub_1C0747930();
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = sub_1C0747930();
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = sub_1C0747930();
  *(_QWORD *)(v0 + 152) = v8;
  if (qword_1EF61A268 != -1)
    swift_once();
  sub_1C0746EF8();
  v9 = sub_1C0746EF8();
  sub_1C068CDD4(v9);
  result = swift_bridgeObjectRelease();
  qword_1EF61B610 = v0;
  return result;
}

uint64_t static PeopleSpotlightConstants.askToBuyAttributes.getter()
{
  return sub_1C0693640(qword_1EF61A278);
}

uint64_t sub_1C0693640(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return sub_1C0746EF8();
}

ValueMetadata *type metadata accessor for PeopleSpotlightConstants()
{
  return &type metadata for PeopleSpotlightConstants;
}

uint64_t static PeopleWidgetVerticalLayoutToggleKind.getVerticalToggleKind(from:)@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1C068F2D0();
  result = sub_1C0747EA0();
  if ((result & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    result = sub_1C0747EA0();
    if ((result & 1) != 0)
      v3 = 0;
    else
      v3 = 2;
  }
  *a1 = v3;
  return result;
}

unint64_t PeopleWidgetVerticalLayoutToggleKind.rawValue.getter()
{
  return 0xD00000000000001ALL;
}

People::PeopleWidgetVerticalLayoutToggleKind_optional __swiftcall PeopleWidgetVerticalLayoutToggleKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  People::PeopleWidgetVerticalLayoutToggleKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1C06937F0(char *a1, char *a2)
{
  return sub_1C06BAFA0(*a1, *a2);
}

uint64_t sub_1C06937FC()
{
  return sub_1C0675570();
}

uint64_t sub_1C0693804()
{
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C069385C()
{
  return sub_1C06767C8();
}

People::PeopleWidgetVerticalLayoutToggleKind_optional sub_1C0693864(Swift::String *a1)
{
  return PeopleWidgetVerticalLayoutToggleKind.init(rawValue:)(*a1);
}

void sub_1C0693870(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x80000001C0752160;
  if (*v1)
    v2 = 0x80000001C0752180;
  *a1 = 0xD00000000000001ALL;
  a1[1] = v2;
}

uint64_t VerticalTextHelper.featureFlags.getter()
{
  return sub_1C0746F64();
}

_QWORD *sub_1C06938B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;

  type metadata accessor for PeopleFeatureFlags();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  if (qword_1ED500188 != -1)
    swift_once();
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = v1;
  swift_bridgeObjectRelease();
  v2 = sub_1C0693994();
  v4 = v3;
  type metadata accessor for VerticalTextHelper();
  result = (_QWORD *)swift_allocObject();
  result[3] = v4;
  result[4] = v0;
  result[2] = v2;
  qword_1ED4FEE98 = (uint64_t)result;
  return result;
}

uint64_t sub_1C0693994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_1C074748C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C07474A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE60);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0747468();
  sub_1C0747498();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C0747474();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = sub_1C074742C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C0693F0C((uint64_t)v10);
    return 0;
  }
  else
  {
    v13 = sub_1C0747420();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  return v13;
}

_QWORD *VerticalTextHelper.__allocating_init(featureFlags:deviceLanguageCode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[3] = a3;
  result[4] = a1;
  result[2] = a2;
  return result;
}

uint64_t static VerticalTextHelper.shared.getter()
{
  if (qword_1ED4FEEA0 != -1)
    swift_once();
  return sub_1C0746F64();
}

_QWORD *VerticalTextHelper.init(featureFlags:deviceLanguageCode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a3;
  v3[4] = a1;
  v3[2] = a2;
  return v3;
}

uint64_t sub_1C0693BA8()
{
  void *v0;
  uint64_t IsSuitableForVerticalLayout;

  v0 = (void *)sub_1C074790C();
  IsSuitableForVerticalLayout = CTStringIsSuitableForVerticalLayout();

  return IsSuitableForVerticalLayout;
}

unint64_t sub_1C0693BDC()
{
  uint64_t v0;
  void *v1;
  int IsSuitableForVerticalLayout;
  unint64_t v3;

  v1 = (void *)sub_1C074790C();
  IsSuitableForVerticalLayout = CTStringIsSuitableForVerticalLayout();

  if (!IsSuitableForVerticalLayout)
    return 0;
  v3 = 0xD00000000000001ALL;
  if (*(_QWORD *)(v0 + 24) && (sub_1C0747A2C() & 1) == 0)
    sub_1C0747A2C();
  return v3;
}

uint64_t sub_1C0693C90()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 24))
    return 0;
  if ((sub_1C0747A2C() & 1) != 0)
    return 1;
  return sub_1C0747A2C();
}

uint64_t VerticalTextHelper.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C0747030();
  return v0;
}

uint64_t VerticalTextHelper.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C0747030();
  return swift_deallocClassInstance();
}

unint64_t sub_1C0693D48()
{
  unint64_t result;

  result = qword_1EF61B618;
  if (!qword_1EF61B618)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleWidgetVerticalLayoutToggleKind, &type metadata for PeopleWidgetVerticalLayoutToggleKind);
    atomic_store(result, (unint64_t *)&qword_1EF61B618);
  }
  return result;
}

unint64_t sub_1C0693D8C()
{
  return sub_1C0693BDC();
}

uint64_t sub_1C0693DAC()
{
  return sub_1C0693C90() & 1;
}

uint64_t storeEnumTagSinglePayload for PeopleWidgetVerticalLayoutToggleKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0693E1C + 4 * byte_1C074BFD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0693E50 + 4 * asc_1C074BFD0[v4]))();
}

uint64_t sub_1C0693E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0693E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0693E60);
  return result;
}

uint64_t sub_1C0693E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0693E74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0693E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0693E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleWidgetVerticalLayoutToggleKind()
{
  return &type metadata for PeopleWidgetVerticalLayoutToggleKind;
}

uint64_t dispatch thunk of VerticalTextHelperProtocol.canShowVerticalLayoutToggle(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of VerticalTextHelperProtocol.makeIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of VerticalTextHelperProtocol.isDeviceLanguageChineseOrJapanese()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for VerticalTextHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for VerticalTextHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VerticalTextHelper.__allocating_init(featureFlags:deviceLanguageCode:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of VerticalTextHelper.canShowVerticalLayoutToggle(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of VerticalTextHelper.makeIdentifier(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of VerticalTextHelper.isDeviceLanguageChineseOrJapanese()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1C0693F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void NSFileManager.ppl_url(for:in:create:)(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v9[0] = 0;
  v4 = objc_msgSend(v3, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a1, a2, 0, a3 & 1, v9);
  v5 = v9[0];
  if (v4)
  {
    v6 = v4;
    sub_1C0747288();
    v7 = v5;

  }
  else
  {
    v8 = v9[0];
    sub_1C0747204();

    swift_willThrow();
  }
}

uint64_t NSFileManager.ppl_containerURL(forSecurityApplicationGroupIdentifier:)@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = (void *)sub_1C074790C();
  v4 = objc_msgSend(v1, sel_containerURLForSecurityApplicationGroupIdentifier_, v3);

  if (v4)
  {
    sub_1C0747288();

    v5 = sub_1C07472C4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1C07472C4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t NSFileManager.ppl_write(data:to:)()
{
  return sub_1C0747318();
}

uint64_t NSFileManager.ppl_load(from:)()
{
  return sub_1C07472D0();
}

id sub_1C0694108()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_1C074790C();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  return v3;
}

id sub_1C069414C(uint64_t a1, char a2, void *a3)
{
  return sub_1C069416C(a1, a2, a3);
}

id sub_1C069416C(uint64_t a1, char a2, void *a3)
{
  void *v3;
  void *v4;
  void *v7;
  unsigned int v8;
  id v10;
  id v11[2];

  v4 = v3;
  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)sub_1C0747258();
  if (a3)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_1C06969E0();
    a3 = (void *)sub_1C07477E0();
  }
  v11[0] = 0;
  v8 = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, a2 & 1, a3, v11);

  if (v8)
    return v11[0];
  v10 = v11[0];
  sub_1C0747204();

  return (id)swift_willThrow();
}

void sub_1C069427C(uint64_t a1, uint64_t a2, char a3)
{
  NSFileManager.ppl_url(for:in:create:)(a1, a2, a3);
}

uint64_t sub_1C069429C@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  v4 = (void *)sub_1C074790C();
  v5 = objc_msgSend(v3, sel_containerURLForSecurityApplicationGroupIdentifier_, v4);

  if (v5)
  {
    sub_1C0747288();

    v6 = sub_1C07472C4();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a1;
    v9 = 0;
  }
  else
  {
    v6 = sub_1C07472C4();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a1;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t sub_1C0694344()
{
  return sub_1C07472D0();
}

uint64_t sub_1C069435C()
{
  return sub_1C0747318();
}

uint64_t MessageDetailsCache.__allocating_init(statusSource:fileManager:)(char *a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  MessageDetailsCache.init(statusSource:fileManager:)(a1, a2);
  return v4;
}

uint64_t MessageDetailsCache.init(statusSource:fileManager:)(char *a1, __int128 *a2)
{
  uint64_t v2;
  char v4;
  _OWORD *v5;
  __int128 v6;
  _QWORD *v7;
  __int128 v9;
  ValueMetadata *v10;
  _UNKNOWN **v11;
  __int128 v12;
  _BYTE v13[25];

  v4 = *a1;
  *(_QWORD *)(v2 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  sub_1C0685C78((uint64_t)a2, (uint64_t)&v12);
  v13[24] = v4;
  v10 = &type metadata for MessageDetailsPersistentCacheURLProvider;
  v11 = &off_1E79E6D08;
  v5 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v9 = v5;
  v6 = *(_OWORD *)v13;
  v5[1] = v12;
  v5[2] = v6;
  *(_OWORD *)((char *)v5 + 41) = *(_OWORD *)&v13[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B620);
  v7 = (_QWORD *)swift_allocObject();
  sub_1C0685BC4(&v9, (uint64_t)(v7 + 2));
  sub_1C0685BC4(a2, (uint64_t)(v7 + 7));
  v7[12] = sub_1C06944E0;
  v7[13] = 0;
  v7[14] = sub_1C06946A8;
  v7[15] = 0;
  *(_QWORD *)(v2 + 24) = v7;
  return v2;
}

uint64_t sub_1C06944BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C06944E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD v14[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07472C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07471BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07471B0();
  MessageDetails.queryItems.getter();
  sub_1C0747150();
  sub_1C0747168();
  v11 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1C068A9AC((uint64_t)v2, &qword_1ED4FF788);
    sub_1C0696AF0();
    swift_allocError();
    *v12 = 1;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v11 = sub_1C074724C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1C06946A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B770);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C07471BC();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v22 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07472C4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C0747960();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0747954();
  sub_1C074793C();
  if (v14)
  {
    sub_1C07472B8();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      v15 = &qword_1ED4FF788;
      v16 = (uint64_t)v8;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_1C074715C();
      v17 = v24;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v3, 1, v24) != 1)
      {
        v20 = v22;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v22, v3, v17);
        static MessageDetails.detailsFrom(_:)();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v20, v17);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v15 = &qword_1EF61B770;
      v16 = (uint64_t)v3;
    }
    sub_1C068A9AC(v16, v15);
  }
  sub_1C0696AF0();
  swift_allocError();
  *v18 = 0;
  return swift_willThrow();
}

uint64_t MessageDetailsCache.messageDetails(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint8_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28[5];

  v5 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MessageDetails();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = *(void **)(v3 + 16);
  sub_1C0746EF8();
  sub_1C0696598(a1, a2, v16, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1C068A9AC((uint64_t)v11, &qword_1EF61B628);
    swift_endAccess();
    sub_1C0746F64();
    sub_1C0694C70(a1, a2, a3);
    result = sub_1C0747030();
    if (v5)
      return result;
  }
  else
  {
    v27 = a3;
    sub_1C06966C8((uint64_t)v11, (uint64_t)v15);
    swift_endAccess();
    if (qword_1EF61A398 != -1)
      swift_once();
    v18 = sub_1C0747720();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EF61D388);
    swift_bridgeObjectRetain_n();
    v19 = sub_1C0747708();
    v20 = sub_1C0747D68();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v26 = v5;
      v22 = (uint8_t *)v21;
      v25 = swift_slowAlloc();
      v28[0] = v25;
      *(_DWORD *)v22 = 136315138;
      v24[1] = v22 + 4;
      sub_1C0746EF8();
      v28[4] = sub_1C069092C(a1, a2, v28);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v19, v20, "Returning cached message detail for key: %s", v22, 0xCu);
      v23 = v25;
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v23, -1, -1);
      MEMORY[0x1C3BA0D04](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a3 = v27;
    sub_1C06966C8((uint64_t)v15, (uint64_t)v27);
  }
  return (*(uint64_t (**)(uint8_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
}

uint64_t sub_1C0694C5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint8_t *a3@<X8>)
{
  return sub_1C0694C70(a1, a2, a3);
}

uint64_t sub_1C0694C70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint8_t *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, unint64_t, uint64_t, uint64_t);
  IMP *p_imp;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint8_t *v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v68 = a3;
  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07472C4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v3[5];
  v14 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v13);
  v15 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 16);
  v71 = a1;
  v72 = a2;
  v15(a1, a2, v13, v14);
  p_imp = &stru_1EF619FF0.imp;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1C068A9AC((uint64_t)v9, &qword_1ED4FF788);
    if (qword_1EF61A398 != -1)
      swift_once();
    v17 = sub_1C0747720();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EF61D388);
    v18 = v72;
    swift_bridgeObjectRetain_n();
    v19 = sub_1C0747708();
    v20 = sub_1C0747D68();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v74 = v22;
      *(_DWORD *)v21 = 136315138;
      sub_1C0746EF8();
      v73 = sub_1C069092C(v71, v18, &v74);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v19, v20, "fileURL was nil for: %s", v21, 0xCu);
      swift_arrayDestroy();
      v23 = v22;
      p_imp = &stru_1EF619FF0.imp;
      MEMORY[0x1C3BA0D04](v23, -1, -1);
      MEMORY[0x1C3BA0D04](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C0696A28();
    v35 = (void *)swift_allocError();
    *v36 = 0;
    swift_willThrow();
    goto LABEL_18;
  }
  v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v25 = v70;
  v67 = v10;
  v24(v70, v9, v10);
  v26 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v3[10]);
  v27 = sub_1C07472A0();
  v28 = (*(uint64_t (**)(uint64_t))(v26 + 8))(v27);
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
  {
    p_imp = &stru_1EF619FF0.imp;
    if (qword_1EF61A398 != -1)
      swift_once();
    v37 = v11;
    v38 = sub_1C0747720();
    __swift_project_value_buffer(v38, (uint64_t)qword_1EF61D388);
    v18 = v72;
    swift_bridgeObjectRetain_n();
    v39 = sub_1C0747708();
    v40 = sub_1C0747D68();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v74 = v42;
      *(_DWORD *)v41 = 136315138;
      sub_1C0746EF8();
      v73 = sub_1C069092C(v71, v18, &v74);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v39, v40, "File cache does not exist for: %s", v41, 0xCu);
      swift_arrayDestroy();
      v43 = v42;
      p_imp = (IMP *)(&stru_1EF619FF0 + 16);
      MEMORY[0x1C3BA0D04](v43, -1, -1);
      MEMORY[0x1C3BA0D04](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v44 = v67;
    sub_1C0696A28();
    v35 = (void *)swift_allocError();
    *v45 = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v44);
    goto LABEL_18;
  }
  v29 = v11;
  v30 = v4[10];
  v31 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v30);
  v32 = v69;
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 40))(v25, v30, v31);
  v35 = (void *)v32;
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v67);
    p_imp = &stru_1EF619FF0.imp;
    v18 = v72;
LABEL_18:
    if (p_imp[115] != (IMP)-1)
      swift_once();
    v49 = sub_1C0747720();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EF61D388);
    sub_1C0746EF8();
    v50 = v35;
    sub_1C0746EF8();
    v51 = v35;
    v52 = sub_1C0747708();
    v53 = sub_1C0747D68();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = (_QWORD *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v74 = v56;
      *(_DWORD *)v54 = 136315394;
      sub_1C0746EF8();
      v73 = sub_1C069092C(v71, v18, &v74);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v54 + 12) = 2112;
      v57 = v35;
      v58 = _swift_stdlib_bridgeErrorToNSError();
      v73 = v58;
      sub_1C0747E40();
      *v55 = v58;

      _os_log_impl(&dword_1C0671000, v52, v53, "Did not load object with key: %s from disk cache: %@", (uint8_t *)v54, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B760);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v55, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v56, -1, -1);
      MEMORY[0x1C3BA0D04](v54, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    return swift_willThrow();
  }
  v46 = v33;
  v47 = v34;
  ((void (*)(void))v4[14])();
  v48 = v67;
  v60 = v72;
  if (qword_1EF61A398 != -1)
    swift_once();
  v61 = sub_1C0747720();
  __swift_project_value_buffer(v61, (uint64_t)qword_1EF61D388);
  swift_bridgeObjectRetain_n();
  v62 = sub_1C0747708();
  v63 = sub_1C0747D68();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v74 = v65;
    v69 = v47;
    *(_DWORD *)v64 = 136315138;
    v68 = v64 + 4;
    sub_1C0746EF8();
    v73 = sub_1C069092C(v71, v60, &v74);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v62, v63, "Loaded object with key: %s from disk cache", v64, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v65, -1, -1);
    MEMORY[0x1C3BA0D04](v64, -1, -1);
    sub_1C0690FA4(v46, v69);

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v70, v67);
  }
  else
  {
    sub_1C0690FA4(v46, v47);
    swift_bridgeObjectRelease_n();

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v25, v48);
  }
}

uint64_t MessageDetailsCache.save(messageDetails:for:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];

  v5 = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF61A398 != -1)
    swift_once();
  v12 = sub_1C0747720();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EF61D388);
  swift_bridgeObjectRetain_n();
  v13 = sub_1C0747708();
  v14 = sub_1C0747D68();
  if (os_log_type_enabled(v13, v14))
  {
    v23 = v5;
    v15 = swift_slowAlloc();
    v24 = a1;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v25 = v4;
    v26[0] = v17;
    v18 = v17;
    *(_DWORD *)v16 = 136315138;
    sub_1C0746EF8();
    v26[4] = sub_1C069092C(a2, a3, v26);
    v5 = v23;
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v13, v14, "Saving message detail to cache for key: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v18, -1, -1);
    v19 = v16;
    a1 = v24;
    MEMORY[0x1C3BA0D04](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1C069670C(a1, (uint64_t)v11);
  v20 = type metadata accessor for MessageDetails();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
  swift_beginAccess();
  v21 = *(void **)(v5 + 16);
  sub_1C0746EF8();
  sub_1C06963B8((uint64_t)v11, a2, a3, v21);
  sub_1C068A9AC((uint64_t)v11, &qword_1EF61B628);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1C0746F64();
  sub_1C0695850(a1, a2, a3);
  return sub_1C0747030();
}

uint64_t sub_1C069583C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0695850(a1, a2, a3);
}

uint64_t sub_1C0695850(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v52 = a1;
  v57 = a2;
  v58 = a3;
  v56 = sub_1C0747720();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07472C4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v50 - v13;
  v16 = *(_QWORD *)(v3 + 40);
  v15 = *(_QWORD *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), v16);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v15 + 16))(v57, v58, v16, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C068A9AC((uint64_t)v7, &qword_1ED4FF788);
    if (qword_1EF61A398 != -1)
      swift_once();
    v17 = v56;
    __swift_project_value_buffer(v56, (uint64_t)qword_1EF61D388);
    v18 = v58;
    swift_bridgeObjectRetain_n();
    v19 = sub_1C0747708();
    v20 = sub_1C0747D68();
    v21 = os_log_type_enabled(v19, v20);
    v22 = v57;
    if (v21)
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v59 = v24;
      *(_DWORD *)v23 = 136315138;
      sub_1C0746EF8();
      v63 = sub_1C069092C(v22, v18, &v59);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v19, v20, "fileURL was nil for: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v24, -1, -1);
      MEMORY[0x1C3BA0D04](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v38 = v54;
    sub_1C0696A28();
    v28 = (void *)swift_allocError();
    *v30 = 0;
    swift_willThrow();
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  v51 = v9;
  sub_1C074727C();
  v25 = *(_QWORD *)(v3 + 80);
  v26 = *(_QWORD *)(v3 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 56), v25);
  v27 = v53;
  (*(void (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 16))(v12, 1, 0, v25, v26);
  v28 = v27;
  if (v27)
  {
    v29 = *(void (**)(char *, uint64_t))(v51 + 8);
    v29(v12, v8);
    v29(v14, v8);
    v17 = v56;
    v38 = v54;
LABEL_11:
    if (qword_1EF61A398 != -1)
      swift_once();
    v39 = __swift_project_value_buffer(v17, (uint64_t)qword_1EF61D388);
    v40 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v55, v39, v17);
    v59 = 0;
    v60 = 0xE000000000000000;
    v41 = v28;
    sub_1C0747FF0();
    swift_bridgeObjectRelease();
    v59 = 0xD00000000000001FLL;
    v60 = 0x80000001C0752EE0;
    sub_1C07479CC();
    sub_1C07479CC();
    Logger.ifError(_:message:)(v28);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v17);
    return swift_willThrow();
  }
  v50 = v8;
  v53 = v12;
  v31 = v14;
  sub_1C0685C78(v3 + 56, (uint64_t)&v59);
  v32 = v62;
  __swift_project_boxed_opaque_existential_1(&v59, v61);
  v33 = (*(uint64_t (**)(uint64_t))(v3 + 96))(v52);
  v34 = v56;
  v35 = v33;
  v37 = v36;
  (*(void (**)(void))(v32 + 48))();
  sub_1C0690FA4(v35, v37);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
  if (qword_1EF61A398 != -1)
    swift_once();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EF61D388);
  v43 = v58;
  swift_bridgeObjectRetain_n();
  v44 = sub_1C0747708();
  v45 = sub_1C0747D68();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v59 = v47;
    *(_DWORD *)v46 = 136315138;
    sub_1C0746EF8();
    v63 = sub_1C069092C(v57, v43, &v59);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v44, v45, "Saved object for key: %s to disk cache", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v47, -1, -1);
    MEMORY[0x1C3BA0D04](v46, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v48 = v50;
  v49 = *(void (**)(char *, uint64_t))(v51 + 8);
  v49(v53, v50);
  return ((uint64_t (*)(char *, uint64_t))v49)(v31, v48);
}

uint64_t MessageDetailsCache.deinit()
{
  uint64_t v0;

  sub_1C0747030();
  return v0;
}

uint64_t MessageDetailsCache.__deallocating_deinit()
{
  uint64_t v0;

  sub_1C0747030();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0695F8C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint8_t *a3@<X8>)
{
  return MessageDetailsCache.messageDetails(for:)(a1, a2, a3);
}

uint64_t sub_1C0695FAC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return MessageDetailsCache.save(messageDetails:for:)(a1, a2, a3);
}

uint64_t sub_1C0695FCC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  _QWORD v18[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07472C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v18 - v11;
  v13 = v1[3];
  v14 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v13);
  (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v14 + 32))(0xD000000000000016, 0x80000001C0752EC0, v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C068A9AC((uint64_t)v5, &qword_1ED4FF788);
    v15 = 1;
  }
  else
  {
    sub_1C0747264();
    v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v5, v6);
    sub_1C0747264();
    v16(v10, v6);
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_1C07479CC();
    swift_bridgeObjectRelease();
    sub_1C0747264();
    swift_bridgeObjectRelease();
    v16(v12, v6);
    v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v15, 1, v6);
}

uint64_t sub_1C06961E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07472C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0695FCC((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C068A9AC((uint64_t)v4, &qword_1ED4FF788);
    v9 = 1;
  }
  else
  {
    sub_1C0746EF8();
    sub_1C0747264();
    swift_bridgeObjectRelease();
    v10 = *(void (**)(char *, uint64_t))(v6 + 8);
    v10(v4, v5);
    sub_1C0747270();
    v10(v8, v5);
    v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v9, 1, v5);
}

uint64_t sub_1C069634C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  sub_1C0747030();
  sub_1C0747030();
  return v0;
}

uint64_t sub_1C0696380()
{
  sub_1C069634C();
  return swift_deallocClassInstance();
}

BOOL sub_1C06963A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1C06963B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v20;
  uint64_t v21[3];
  uint64_t v22;
  objc_super v23;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MessageDetails();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B768);
  v16 = (char *)objc_allocWithZone(v15);
  v17 = &v16[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v16) + 0x60)];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  v23.receiver = v16;
  v23.super_class = v15;
  sub_1C0746EF8();
  v18 = objc_msgSendSuper2(&v23, sel_init);
  sub_1C0696A6C(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C068A9AC((uint64_t)v10, &qword_1EF61B628);
    objc_msgSend(a4, sel_removeObjectForKey_, v18);

  }
  else
  {
    sub_1C06966C8((uint64_t)v10, (uint64_t)v14);
    v22 = v11;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v21);
    sub_1C069670C((uint64_t)v14, (uint64_t)boxed_opaque_existential_1Tm);
    type metadata accessor for PPLCacheValue();
    v20 = swift_allocObject();
    sub_1C0685D00(v21, (_OWORD *)(v20 + 16));
    objc_msgSend(a4, sel_setObject_forKey_, v20, v18);

    sub_1C0747030();
    sub_1C0696AB4((uint64_t)v14);
  }
}

uint64_t sub_1C0696598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  objc_class *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  int v14;
  objc_super v16;
  _OWORD v17[2];

  v8 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B768);
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v9) + 0x60)];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v16.receiver = v9;
  v16.super_class = v8;
  sub_1C0746EF8();
  v11 = objc_msgSendSuper2(&v16, sel_init);
  v12 = objc_msgSend(a3, sel_objectForKey_, v11, v16.receiver, v16.super_class);

  if (v12)
  {
    sub_1C068A530((uint64_t)v12 + 16, (uint64_t)v17);
    sub_1C0747030();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE98);
  v13 = type metadata accessor for MessageDetails();
  v14 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a4, v14 ^ 1u, 1, v13);
}

uint64_t sub_1C06966C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageDetails();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C069670C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageDetails();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of FileManagerProtocol.fileExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FileManagerProtocol.createDirectory(at:withIntermediateDirectories:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FileManagerProtocol.ppl_url(for:in:create:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FileManagerProtocol.ppl_containerURL(forSecurityApplicationGroupIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FileManagerProtocol.ppl_load(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FileManagerProtocol.ppl_write(data:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of MessageDetailsCacheProtocol.messageDetails(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MessageDetailsCacheProtocol.save(messageDetails:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t type metadata accessor for MessageDetailsCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessageDetailsCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessageDetailsCache.__allocating_init(statusSource:fileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0696828()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PersistentCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PersistentCache);
}

uint64_t initializeWithCopy for MessageDetailsPersistentCacheURLProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for MessageDetailsPersistentCacheURLProvider(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for MessageDetailsPersistentCacheURLProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageDetailsPersistentCacheURLProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageDetailsPersistentCacheURLProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageDetailsPersistentCacheURLProvider()
{
  return &type metadata for MessageDetailsPersistentCacheURLProvider;
}

unint64_t sub_1C06969E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61B1E8;
  if (!qword_1EF61B1E8)
  {
    type metadata accessor for FileAttributeKey(255);
    result = MEMORY[0x1C3BA0C2C](&unk_1C074B3D8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF61B1E8);
  }
  return result;
}

unint64_t sub_1C0696A28()
{
  unint64_t result;

  result = qword_1EF61B758;
  if (!qword_1EF61B758)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074C418, &type metadata for PersistentCacheError);
    atomic_store(result, (unint64_t *)&qword_1EF61B758);
  }
  return result;
}

uint64_t sub_1C0696A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0696AB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessageDetails();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0696AF0()
{
  unint64_t result;

  result = qword_1EF61B778;
  if (!qword_1EF61B778)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074C3D8, &type metadata for MessageDetailsCacheStoreError);
    atomic_store(result, (unint64_t *)&qword_1EF61B778);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageDetailsCacheStoreError()
{
  return &type metadata for MessageDetailsCacheStoreError;
}

uint64_t _s6People29MessageDetailsCacheStoreErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0696B94 + 4 * byte_1C074C135[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0696BC8 + 4 * byte_1C074C130[v4]))();
}

uint64_t sub_1C0696BC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0696BD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0696BD8);
  return result;
}

uint64_t sub_1C0696BE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0696BECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0696BF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0696BF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersistentCacheError()
{
  return &type metadata for PersistentCacheError;
}

unint64_t sub_1C0696C18()
{
  unint64_t result;

  result = qword_1EF61B780;
  if (!qword_1EF61B780)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074C348, &type metadata for PersistentCacheError);
    atomic_store(result, (unint64_t *)&qword_1EF61B780);
  }
  return result;
}

unint64_t sub_1C0696C60()
{
  unint64_t result;

  result = qword_1EF61B788[0];
  if (!qword_1EF61B788[0])
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074C3B0, &type metadata for MessageDetailsCacheStoreError);
    atomic_store(result, qword_1EF61B788);
  }
  return result;
}

uint64_t sub_1C0696CA8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0696D18(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_1C0696D48();

  return v2;
}

uint64_t sub_1C0696D48()
{
  return sub_1C0747864();
}

uint64_t sub_1C0696D84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v7;
  _BYTE v8[24];
  uint64_t v9;

  v2 = *v1;
  v3 = *MEMORY[0x1E0DEEDD8];
  sub_1C069703C(a1, (uint64_t)v8);
  if (!v9)
  {
    sub_1C0696FFC((uint64_t)v8);
    goto LABEL_5;
  }
  type metadata accessor for PPLCacheKey(0, *(_QWORD *)((v3 & v2) + 0x50), *(_QWORD *)((v3 & v2) + 0x58), v4);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v5 = 0;
    return v5 & 1;
  }
  v5 = sub_1C07478D0();

  return v5 & 1;
}

uint64_t sub_1C0696E64(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  char v6;
  _OWORD v8[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1C0747EAC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    v5 = a1;
  }
  v6 = sub_1C0696D84((uint64_t)v8);

  sub_1C0696FFC((uint64_t)v8);
  return v6 & 1;
}

void sub_1C0696ED8()
{
  sub_1C0696FD0();
}

id sub_1C0696EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for PPLCacheKey(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1C0696F40(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x60)]);
}

uint64_t type metadata accessor for PPLCacheKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PPLCacheKey);
}

uint64_t sub_1C0696F78()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PPLCacheValue()
{
  return objc_opt_self();
}

uint64_t sub_1C0696FBC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for PPLCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PPLCache);
}

void sub_1C0696FD0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0696FFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C069703C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0697084()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1C06970B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_1C06970F0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C069712C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1C074775C();
  v18[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C0747774();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v3 + 32);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = sub_1C0697508;
  v15[6] = v14;
  aBlock[4] = sub_1C069765C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C068FD90;
  aBlock[3] = &block_descriptor_0;
  v16 = _Block_copy(aBlock);
  swift_retain_n();
  v13;
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0747768();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1C069766C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61DC50);
  sub_1C06976B4();
  sub_1C0747EC4();
  MEMORY[0x1C3BA0014](0, v12, v8, v16);
  _Block_release(v16);
  sub_1C0747030();
  (*(void (**)(char *, uint64_t))(v18[0] + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_1C0747030();
}

uint64_t sub_1C0697340(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v3 = sub_1C074775C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C0747774();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = sub_1C0697AD0;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C068FD90;
  aBlock[3] = &block_descriptor_9_0;
  v11 = _Block_copy(aBlock);
  sub_1C0746F64();
  sub_1C0747768();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1C069766C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61DC50);
  sub_1C06976B4();
  sub_1C0747EC4();
  MEMORY[0x1C3BA0014](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1C0747030();
}

uint64_t sub_1C06974DC()
{
  uint64_t v0;

  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C0697508()
{
  uint64_t v0;

  return sub_1C0697340(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C0697510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v11 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v12 = *(_QWORD **)(a1 + 16);
  sub_1C0746F64();
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_1C06B3748(0, v12[2] + 1, 1, v12);
    *v11 = v12;
  }
  v15 = v12[2];
  v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    v12 = sub_1C06B3748((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    *v11 = v12;
  }
  v12[2] = v15 + 1;
  v16 = &v12[2 * v15];
  v16[4] = sub_1C0697AA8;
  v16[5] = v10;
  swift_endAccess();
  return sub_1C0697700();
}

uint64_t sub_1C0697628()
{
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C069765C()
{
  uint64_t *v0;

  return sub_1C0697510(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

unint64_t sub_1C069766C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61DF30;
  if (!qword_1EF61DF30)
  {
    v1 = sub_1C074775C();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61DF30);
  }
  return result;
}

unint64_t sub_1C06976B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61DF40;
  if (!qword_1EF61DF40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF61DC50);
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61DF40);
  }
  return result;
}

uint64_t sub_1C0697700()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v1 = v0;
  v2 = v0[3];
  result = swift_beginAccess();
  if (v2 < v1[5])
  {
    v4 = v1 + 2;
    result = swift_beginAccess();
    if (*(_QWORD *)(v1[2] + 16))
    {
      result = swift_beginAccess();
      if (*(_QWORD *)(*v4 + 16))
      {
        v5 = *(void (**)(uint64_t))(*v4 + 32);
        sub_1C0746F64();
        sub_1C069790C(0, 1);
        result = swift_endAccess();
        v6 = v1[3];
        v7 = __OFADD__(v6, 1);
        v8 = v6 + 1;
        if (!v7)
        {
          v1[3] = v8;
          v5(result);
          return sub_1C0747030();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t AsyncQueue.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AsyncQueue.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C069782C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return result;
}

uint64_t sub_1C0697870(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t type metadata accessor for AsyncQueue()
{
  return objc_opt_self();
}

uint64_t method lookup function for AsyncQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncQueue.maxConcurrentTasks.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AsyncQueue.maxConcurrentTasks.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AsyncQueue.maxConcurrentTasks.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AsyncQueue.schedule(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1C069790C(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1C06B3748(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF078);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C0697A7C()
{
  sub_1C0747030();
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C0697AA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1C0697AD0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = __OFSUB__(v1, 1);
  v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 24) = v3;
    return sub_1C0697700();
  }
  return result;
}

uint64_t StatusRelevance.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StatusRelevance.startDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*StatusRelevance.startDate.modify())()
{
  return nullsub_1;
}

uint64_t StatusRelevance.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StatusRelevance() + 20);
  v4 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for StatusRelevance()
{
  uint64_t result;

  result = qword_1EF61B9B8;
  if (!qword_1EF61B9B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StatusRelevance.endDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StatusRelevance() + 20);
  v4 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*StatusRelevance.endDate.modify())(_QWORD)
{
  type metadata accessor for StatusRelevance();
  return nullsub_1;
}

double StatusRelevance.startScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StatusRelevance() + 24));
}

uint64_t StatusRelevance.startScore.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StatusRelevance();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*StatusRelevance.startScore.modify())(_QWORD)
{
  type metadata accessor for StatusRelevance();
  return nullsub_1;
}

double StatusRelevance.endScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StatusRelevance() + 28));
}

uint64_t StatusRelevance.endScore.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StatusRelevance();
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*StatusRelevance.endScore.modify())(_QWORD)
{
  type metadata accessor for StatusRelevance();
  return nullsub_1;
}

__n128 StatusRelevance.interpolation.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + *(int *)(type metadata accessor for StatusRelevance() + 32);
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

__n128 StatusRelevance.interpolation.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for StatusRelevance() + 32));
  result = v7;
  *v5 = v7;
  v5[1].n128_u64[0] = v2;
  v5[1].n128_u64[1] = v3;
  v5[2].n128_u8[0] = v4;
  return result;
}

uint64_t (*StatusRelevance.interpolation.modify())(_QWORD)
{
  type metadata accessor for StatusRelevance();
  return nullsub_1;
}

void StatusRelevance.Interpolation.curve.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  _Q0 = *((_OWORD *)v1 + 1);
  if (*((_BYTE *)v1 + 32) != 1)
  {
    *(_QWORD *)a1 = v2;
    *(_QWORD *)(a1 + 8) = v3;
LABEL_6:
    *(_OWORD *)(a1 + 16) = _Q0;
    goto LABEL_7;
  }
  if (!((unint64_t)_Q0 | v3 | v2 | *((_QWORD *)&_Q0 + 1)))
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    __asm { FMOV            V0.2D, #1.0 }
    goto LABEL_6;
  }
  *(_OWORD *)a1 = xmmword_1C074C580;
  *(_OWORD *)(a1 + 16) = xmmword_1C074C590;
LABEL_7:
  *(_QWORD *)(a1 + 32) = 0x3EB0C6F7A0B5ED8DLL;
}

double sub_1C0697E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  double result;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v32 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x1E0C80A78](v0);
  v31 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v27 - v3;
  v5 = sub_1C07473E4();
  v29 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v28 = (char *)&v27 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  v13 = (int *)type metadata accessor for StatusRelevance();
  __swift_allocate_value_buffer((uint64_t)v13, qword_1EF61B930);
  v14 = __swift_project_value_buffer((uint64_t)v13, (uint64_t)qword_1EF61B930);
  sub_1C0747348();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_hours);
  sub_1C0698FF4();
  v17 = v4;
  sub_1C07470B4();
  v18 = v29;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v10, v12, v5);
  v19 = objc_msgSend(v15, sel_seconds);
  v20 = v31;
  v21 = v17;
  sub_1C07470CC();

  sub_1C07470C0();
  v22 = *(void (**)(char *, uint64_t))(v32 + 8);
  v22(v20, v0);
  v23 = v30;
  sub_1C0747390();
  v22(v21, v0);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v5);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v24(v14, v28, v5);
  v24(v14 + v13[5], v23, v5);
  *(_QWORD *)(v14 + v13[6]) = 0;
  *(_QWORD *)(v14 + v13[7]) = 0;
  v25 = v14 + v13[8];
  result = 0.0;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_BYTE *)(v25 + 32) = 1;
  return result;
}

double StatusRelevance.init(startDate:duration:startScore:endScore:interpolation:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  int *v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v31 = a1;
  v32 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07473E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v31 - v19;
  v37 = *a3;
  v21 = *((_QWORD *)a3 + 2);
  v35 = *((_QWORD *)a3 + 3);
  v36 = v21;
  v34 = *((unsigned __int8 *)a3 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v31 - v19, a1, v14);
  v22 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  v23 = v32;
  sub_1C07470CC();

  sub_1C07470C0();
  v24 = *(void (**)(char *, uint64_t))(v33 + 8);
  v24(v13, v11);
  v25 = v31;
  sub_1C0747390();
  v24(v23, v11);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v25, v14);
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v26(a4, v20, v14);
  v27 = (int *)type metadata accessor for StatusRelevance();
  v26(a4 + v27[5], v18, v14);
  *(double *)(a4 + v27[6]) = a5;
  *(double *)(a4 + v27[7]) = a6;
  v28 = a4 + v27[8];
  result = *(double *)&v37;
  *(_OWORD *)v28 = v37;
  v30 = v35;
  *(_QWORD *)(v28 + 16) = v36;
  *(_QWORD *)(v28 + 24) = v30;
  *(_BYTE *)(v28 + 32) = v34;
  return result;
}

uint64_t static StatusRelevance.zero.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF61A288 != -1)
    swift_once();
  v2 = type metadata accessor for StatusRelevance();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61B930);
  return sub_1C069845C(v3, a1);
}

__n128 StatusRelevance.init(startDate:endDate:startScore:endScore:interpolation:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  __n128 *v17;
  __n128 result;
  __n128 v19;

  v19 = *a3;
  v11 = a3[1].n128_u64[0];
  v12 = a3[1].n128_u64[1];
  v13 = a3[2].n128_u8[0];
  v14 = sub_1C07473E4();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(a4, a1, v14);
  v16 = (int *)type metadata accessor for StatusRelevance();
  v15(a4 + v16[5], a2, v14);
  *(double *)(a4 + v16[6]) = a5;
  *(double *)(a4 + v16[7]) = a6;
  v17 = (__n128 *)(a4 + v16[8]);
  result = v19;
  *v17 = v19;
  v17[1].n128_u64[0] = v11;
  v17[1].n128_u64[1] = v12;
  v17[2].n128_u8[0] = v13;
  return result;
}

uint64_t sub_1C069845C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatusRelevance();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t StatusRelevance.score(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;

  v2 = v1;
  v68 = a1;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B948);
  v3 = MEMORY[0x1E0C80A78](v65);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v57 - v6;
  v8 = sub_1C07473E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v67 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v57 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v57 - v15;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B950);
  v17 = MEMORY[0x1E0C80A78](v64);
  v66 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v62 = (char *)&v57 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v57 - v21;
  v23 = v9;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v24(v16, v2, v8);
  v59 = type metadata accessor for StatusRelevance();
  v25 = v2 + *(int *)(v59 + 20);
  v24(v14, v25, v8);
  v63 = sub_1C0698968();
  result = sub_1C0747894();
  if ((result & 1) != 0)
  {
    v57 = v25;
    v58 = v2;
    v27 = v65;
    v28 = &v7[*(int *)(v65 + 48)];
    v60 = v24;
    v61 = v22;
    v29 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v29(v7, v16, v8);
    v29(v28, v14, v8);
    v30 = &v5[*(int *)(v27 + 48)];
    v24(v5, (uint64_t)v7, v8);
    v24(v30, (uint64_t)v28, v8);
    v31 = v62;
    v29(v62, v5, v8);
    v32 = *(void (**)(char *, uint64_t))(v23 + 8);
    v32(v30, v8);
    v33 = &v5[*(int *)(v27 + 48)];
    v29(v5, v7, v8);
    v29(v33, v28, v8);
    v29(&v31[*(int *)(v64 + 36)], v33, v8);
    v34 = (uint64_t)v61;
    v32(v5, v8);
    v35 = (uint64_t)v31;
    v36 = v34;
    sub_1C06989B0(v35, v34);
    v37 = v68;
    LOBYTE(v34) = sub_1C0747888();
    v38 = v67;
    v60(v67, v37, v8);
    v39 = v66;
    sub_1C06989F8(v36, v66);
    if ((v34 & 1) != 0)
    {
      v40 = v32;
      v41 = sub_1C0747894();
      sub_1C0698A40(v39);
      v40(v38, v8);
      if ((v41 & 1) != 0)
      {
        v42 = v58;
        sub_1C0747360();
        v44 = v43;
        sub_1C0747360();
        v46 = v42 + *(int *)(v59 + 32);
        v48 = *(double *)v46;
        v47 = *(_QWORD *)(v46 + 8);
        v50 = *(_QWORD *)(v46 + 16);
        v49 = *(_QWORD *)(v46 + 24);
        if (*(_BYTE *)(v46 + 32) == 1)
        {
          v51 = 0.0;
          if (v47 | *(_QWORD *)&v48 | v50 | v49)
            v52 = 0.65;
          else
            v52 = 0.0;
          v53 = 1.0;
          if (v47 | *(_QWORD *)&v48 | v50 | v49)
            v54 = 0.35;
          else
            v54 = 1.0;
        }
        else
        {
          v52 = *(double *)v46;
          v51 = *(double *)(v46 + 8);
          v54 = *(double *)(v46 + 16);
          v53 = *(double *)(v46 + 24);
        }
        v55 = v45 / v44;
        if (v52 != v51 || v54 != v53)
        {
          v69 = v52;
          v70 = v51;
          v71 = v54;
          v72 = v53;
          v73 = 0x3EB0C6F7A0B5ED8DLL;
          v56 = sub_1C07249E4(v55);
          v69 = v52;
          v70 = v51;
          v71 = v54;
          v72 = v53;
          v73 = 0x3EB0C6F7A0B5ED8DLL;
          swift_getKeyPath();
          sub_1C072492C(v56);
          sub_1C0747030();
        }
      }
    }
    else
    {
      sub_1C0698A40(v39);
      v32(v38, v8);
    }
    return sub_1C0698A40(v36);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1C0698968()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61B958;
  if (!qword_1EF61B958)
  {
    v1 = sub_1C07473E4();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61B958);
  }
  return result;
}

uint64_t sub_1C06989B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06989F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0698A40(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for StatusRelevance(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    v7 = sub_1C07473E4();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[8];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    v11[32] = v12[32];
  }
  return a1;
}

uint64_t destroy for StatusRelevance(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1C07473E4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for StatusRelevance(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v6 = sub_1C07473E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_BYTE *)(v10 + 32) = *(_BYTE *)(v11 + 32);
  return a1;
}

uint64_t assignWithCopy for StatusRelevance(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;

  v6 = sub_1C07473E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 32);
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(v9 + 32) = v11;
  return a1;
}

uint64_t initializeWithTake for StatusRelevance(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v6 = sub_1C07473E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_BYTE *)(v10 + 32) = *(_BYTE *)(v11 + 32);
  return a1;
}

uint64_t assignWithTake for StatusRelevance(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v6 = sub_1C07473E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_BYTE *)(v10 + 32) = *(_BYTE *)(v11 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StatusRelevance()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0698E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StatusRelevance()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0698E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1C0698ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StatusRelevance.Interpolation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StatusRelevance.Interpolation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_1C0698FA4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C0698FC0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    *(_BYTE *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusRelevance.Interpolation()
{
  return &type metadata for StatusRelevance.Interpolation;
}

unint64_t sub_1C0698FF4()
{
  unint64_t result;

  result = qword_1ED4FEC78;
  if (!qword_1ED4FEC78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4FEC78);
  }
  return result;
}

uint64_t Result<>.people_tryMap<A>(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1C06991F4((void (*)(char *))sub_1C0699064, a1, a2);
}

uint64_t sub_1C0699064@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
  return sub_1C06990D8((void (*)(_BYTE *))sub_1C0699340, a1);
}

uint64_t sub_1C06990D8@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  MEMORY[0x1E0C80A78](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C0748380();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t sub_1C06991F4@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 32))(a3, v12, *(_QWORD *)(a2 + 24));
    sub_1C0748380();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1C0699340(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v1 + 32))(*(_QWORD *)(v1 + 48));
  if (v2)
    *a1 = v2;
  return result;
}

uint64_t ContactFetcher.familyWithDSIDs()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0699390()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA08);
  *v1 = v0;
  v1[1] = sub_1C0699420;
  return sub_1C0748260();
}

uint64_t sub_1C0699420()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0699474()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
  swift_willThrowTypedImpl();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06994EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA30);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  _s6People14ContactFetcherC15familyWithDSIDs10completionyys6ResultOySDySiSo14FAFamilyMemberCGs5Error_pGc_tF_0((uint64_t)sub_1C0699FC8, v6);
  return sub_1C0747030();
}

uint64_t sub_1C06995BC(uint64_t a1)
{
  return sub_1C06994EC(a1);
}

uint64_t sub_1C06995C4(void *a1, char a2)
{
  sub_1C069A018(a1, a2 & 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA30);
  return sub_1C0747C18();
}

void sub_1C0699614(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, _QWORD))
{
  void *v7;
  uint64_t v8;
  void *v9;

  sub_1C070DB74();
  sub_1C06996A8(a2, a1, &v8, &v9);
  v7 = v9;
  a4(v9, 0);
  sub_1C0699ED8(v7, 0);
}

uint64_t sub_1C06996A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id i;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  void *v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v6 = v4;
  if (a1)
  {
    swift_getErrorValue();
    result = sub_1C06B85F4(v50);
    if (v4)
      goto LABEL_33;
  }
  if (!a2)
  {
    sub_1C0699EE4();
    v6 = swift_allocError();
    result = swift_willThrow();
LABEL_33:
    *a3 = v6;
    return result;
  }
  v45 = a2;
  v10 = objc_msgSend(v45, sel_members);
  sub_1C0699F28();
  v11 = sub_1C0747B1C();

  v46 = a4;
  if (v11 >> 62)
  {
    sub_1C0746EF8();
    v12 = sub_1C074814C();
    if (v12)
      goto LABEL_6;
LABEL_35:
    v47 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_36:

    result = swift_bridgeObjectRelease_n();
    *v46 = v47;
    return result;
  }
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1C0746EF8();
  if (!v12)
    goto LABEL_35;
LABEL_6:
  if (v12 >= 1)
  {
    v13 = v11 & 0xC000000000000001;
    v48 = v11 + 32;
    v47 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v49 = v11;
    v14 = 0;
    if ((v11 & 0xC000000000000001) != 0)
      goto LABEL_12;
LABEL_13:
    for (i = *(id *)(v48 + 8 * v14); ; i = (id)MEMORY[0x1C3BA029C](v14, v11))
    {
      v19 = i;
      v20 = v14 + 1;
      v21 = objc_msgSend(i, sel_dsid, v43);
      if (v21)
      {
        v26 = v21;
        v27 = objc_msgSend(v21, sel_integerValue);
        v44 = v19;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v43 = (uint64_t)v27;
        v30 = sub_1C069C97C((uint64_t)v27);
        v31 = v47[2];
        v32 = (v29 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
          goto LABEL_38;
        v34 = v29;
        if (v47[3] >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1C06DE93C();
        }
        else
        {
          sub_1C07052FC(v33, isUniquelyReferenced_nonNull_native);
          v35 = sub_1C069C97C(v43);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_40;
          v30 = v35;
        }
        v11 = v49;
        v37 = 8 * v30;
        if ((v34 & 1) != 0)
        {
          v38 = v47[7];

          v39 = v44;
          *(_QWORD *)(v38 + v37) = v44;
        }
        else
        {
          v47[(v30 >> 6) + 8] |= 1 << v30;
          *(_QWORD *)(v47[6] + 8 * v30) = v43;
          v39 = v44;
          *(_QWORD *)(v47[7] + 8 * v30) = v44;
          v40 = v47[2];
          v41 = __OFADD__(v40, 1);
          v42 = v40 + 1;
          if (v41)
            goto LABEL_39;
          v47[2] = v42;
        }

        swift_bridgeObjectRelease();
        if (v12 - 1 == v14)
          goto LABEL_36;
        ++v14;
        if (!v13)
          goto LABEL_13;
      }
      else
      {
        if (qword_1ED4FF8D0 != -1)
          swift_once();
        v22 = sub_1C0747720();
        __swift_project_value_buffer(v22, (uint64_t)qword_1ED4FF8B0);
        v23 = v19;
        v24 = sub_1C0747708();
        v25 = sub_1C0747D74();
        if (os_log_type_enabled(v24, v25))
        {
          v15 = swift_slowAlloc();
          v16 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v15 = 138412290;
          *(_QWORD *)(v15 + 4) = v23;
          *v16 = v23;
          _os_log_impl(&dword_1C0671000, v24, v25, "Impossible, no dsid for %@", (uint8_t *)v15, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B760);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v16, -1, -1);
          v17 = v15;
          v11 = v49;
          MEMORY[0x1C3BA0D04](v17, -1, -1);
        }
        else
        {

          v24 = v23;
        }

        v14 = v20;
        if (v12 == v20)
          goto LABEL_36;
        if (!v13)
          goto LABEL_13;
      }
LABEL_12:
      ;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C0699B04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0699B64;
  v3[5] = v2;
  return swift_task_switch();
}

uint64_t sub_1C0699B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t _s6People14ContactFetcherC15familyWithDSIDs10completionyys6ResultOySDySiSo14FAFamilyMemberCGs5Error_pGc_tF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD aBlock[6];

  v4 = sub_1C07473E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D20EB0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074B820;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 80) = &protocol witness table for String;
  *(_QWORD *)(inited + 48) = 0x6120796C696D6166;
  *(_QWORD *)(inited + 56) = 0xEA00000000006C6CLL;
  v10 = sub_1C06F5C3C(inited);
  type metadata accessor for PeopleAnalytics.StopWatch();
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 40) = 1;
  *(_QWORD *)(v11 + 48) = 0;
  *(_BYTE *)(v11 + 56) = 1;
  *(_BYTE *)(v11 + 16) = 11;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = 0;
  swift_bridgeObjectRelease();
  sub_1C07473D8();
  sub_1C0747330();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(v11 + 32) = v13;
  *(_BYTE *)(v11 + 40) = 0;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1C0699ECC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C072BE78;
  aBlock[3] = &block_descriptor_1;
  v15 = _Block_copy(aBlock);
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  objc_msgSend(v8, sel_startRequestWithCompletionHandler_, v15);
  _Block_release(v15);

  sub_1C0747030();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t dispatch thunk of FamilyMemberContactFetching.familyWithDSIDs(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FamilyMemberContactFetching.familyWithDSIDs@Sendable ()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C0699E50;
  return v7(a1, a2);
}

uint64_t sub_1C0699E50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1C0699EA0()
{
  sub_1C0747030();
  sub_1C0747030();
  return swift_deallocObject();
}

void sub_1C0699ECC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0699614(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, _QWORD))(v2 + 24));
}

void sub_1C0699ED8(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

unint64_t sub_1C0699EE4()
{
  unint64_t result;

  result = qword_1EF61BA20;
  if (!qword_1EF61BA20)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074C698, &type metadata for NoFamilyCircleAvailable);
    atomic_store(result, (unint64_t *)&qword_1EF61BA20);
  }
  return result;
}

unint64_t sub_1C0699F28()
{
  unint64_t result;

  result = qword_1EF61BA28;
  if (!qword_1EF61BA28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF61BA28);
  }
  return result;
}

uint64_t sub_1C0699F64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA30);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C0699FC8(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA30);
  return sub_1C06995C4(a1, v3);
}

id sub_1C069A018(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)sub_1C0746EF8();
}

ValueMetadata *type metadata accessor for NoFamilyCircleAvailable()
{
  return &type metadata for NoFamilyCircleAvailable;
}

uint64_t SpotlightIndexer.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t SpotlightIndexer.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t sub_1C069A074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[28] = a4;
  v5[29] = v4;
  v5[26] = a2;
  v5[27] = a3;
  v5[25] = a1;
  v6 = sub_1C0747720();
  v5[30] = v6;
  v5[31] = *(_QWORD *)(v6 - 8);
  v5[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C069A0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 232);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_8;
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  sub_1C0746EF8();
  sub_1C0746EF8();
  v5 = sub_1C069C918(v3, v4);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    v17 = objc_allocWithZone(MEMORY[0x1E0CA6B38]);
    sub_1C0746EF8();
    sub_1C0746EF8();
    v18 = (void *)sub_1C074790C();
    v19 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v17, sel_initWithName_protectionClass_bundleIdentifier_, v18, v19, v20);
    *(_QWORD *)(v0 + 264) = v21;

    *(_QWORD *)(v0 + 56) = v0 + 168;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1C069A470;
    v22 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v23 = (_QWORD *)(v0 + 80);
    v23[1] = 0x40000000;
    v23[2] = sub_1C069A8BC;
    v23[3] = &block_descriptor_2;
    v23[4] = v22;
    objc_msgSend(v21, sel_fetchLastClientStateWithCompletionHandler_, v23);
    return swift_continuation_await();
  }
  v7 = *(_QWORD *)(v2 + 56) + 24 * v5;
  v8 = *(_QWORD *)(v7 + 8);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(id *)v7;
  sub_1C069102C(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1C0690FA4(v8, v9);
  if (qword_1EF61A378 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_1EF61D340);
  swift_bridgeObjectRetain_n();
  v11 = sub_1C0747708();
  v12 = sub_1C0747D74();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 208);
  if (v13)
  {
    v25 = *(_QWORD *)(v0 + 200);
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v26 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_1C0746EF8();
    *(_QWORD *)(v0 + 192) = sub_1C069092C(v25, v14, &v26);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v11, v12, "%s indexer already in batch mode", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v16, -1, -1);
    MEMORY[0x1C3BA0D04](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069A470()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 272) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1C069A4D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v17;
  unint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  swift_beginAccess();
  sub_1C0746EF8();
  v7 = v1;
  sub_1C069102C(v5, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_1C069CEB0((uint64_t)v7, v5, v6, v4, v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 16) = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  objc_msgSend(v7, sel_beginIndexBatch);
  if (qword_1EF61A378 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_1EF61D340);
  swift_bridgeObjectRetain_n();
  v9 = sub_1C0747708();
  v10 = sub_1C0747D68();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 208);
  if (v11)
  {
    v17 = *(void **)(v0 + 264);
    v18 = v6;
    v13 = *(_QWORD *)(v0 + 200);
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v19 = v15;
    *(_DWORD *)v14 = 136315138;
    sub_1C0746EF8();
    *(_QWORD *)(v0 + 184) = sub_1C069092C(v13, v12, &v19);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v9, v10, "Started batch mode indexing for: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v15, -1, -1);
    MEMORY[0x1C3BA0D04](v14, -1, -1);

    sub_1C0690FA4(v5, v18);
  }
  else
  {

    sub_1C0690FA4(v5, v6);
    swift_bridgeObjectRelease_n();

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069A764()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  swift_willThrow();
  if (qword_1EF61A378 != -1)
    swift_once();
  v2 = *(void **)(v0 + 264);
  v1 = *(void **)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1EF61D340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v7 = v1;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C07479CC();
  Logger.ifError(_:message:)(v1);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069A8BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = a2;
    v9 = sub_1C074730C();
    v11 = v10;

    v12 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C069A95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  return swift_task_switch();
}

uint64_t sub_1C069A978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  void *v24;
  void *v25[4];

  v1 = *(_QWORD *)(v0 + 160) + 16;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v4 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 152);
    sub_1C0746EF8();
    sub_1C0746EF8();
    v5 = sub_1C069C918(v4, v3);
    if ((v6 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 144);
      v7 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v2 + 56) + 24 * v5;
      v10 = *(void **)v9;
      *(_QWORD *)(v0 + 168) = *(_QWORD *)v9;
      v11 = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v0 + 176) = v11;
      v12 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v0 + 184) = v12;
      v13 = v10;
      sub_1C069102C(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1C0746EF8();
      sub_1C069CB5C(v8, v7, (uint64_t)v25);
      swift_bridgeObjectRelease();
      sub_1C069D010(v25[0], (uint64_t)v25[1], (unint64_t)v25[2]);
      swift_endAccess();
      v14 = v13;
      v15 = sub_1C07472E8();
      *(_QWORD *)(v0 + 192) = v15;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1C069AD00;
      *(_QWORD *)(v0 + 112) = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 88) = 0x40000000;
      *(_QWORD *)(v0 + 96) = sub_1C069AFC0;
      *(_QWORD *)(v0 + 104) = &block_descriptor_1;
      objc_msgSend(v14, sel_endIndexBatchWithClientState_completionHandler_, v15, v0 + 80);
      return swift_continuation_await();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EF61A378 != -1)
    swift_once();
  v17 = sub_1C0747720();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EF61D340);
  swift_bridgeObjectRetain_n();
  v18 = sub_1C0747708();
  v19 = sub_1C0747D74();
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(_QWORD *)(v0 + 152);
  if (v20)
  {
    v22 = *(_QWORD *)(v0 + 144);
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = (void *)swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)v23 = 136315138;
    sub_1C0746EF8();
    *(_QWORD *)(v0 + 80) = sub_1C069092C(v22, v21, (uint64_t *)v25);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v18, v19, "Attempt to end batch mode that was not started for: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v24, -1, -1);
    MEMORY[0x1C3BA0D04](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_1EF61A410 != -1)
    swift_once();
  (id)qword_1EF629DF8;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069AD00()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 200) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1C069AD60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 192);

  if (qword_1EF61A378 != -1)
    swift_once();
  v2 = sub_1C0747720();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF61D340);
  swift_bridgeObjectRetain_n();
  v3 = sub_1C0747708();
  v4 = sub_1C0747D68();
  v5 = os_log_type_enabled(v3, v4);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v8 = *(void **)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 152);
  if (v5)
  {
    v10 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 184);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136315138;
    sub_1C0746EF8();
    *(_QWORD *)(v0 + 80) = sub_1C069092C(v10, v9, &v16);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v3, v4, "Batch mode indexing complete for: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v12, -1, -1);
    MEMORY[0x1C3BA0D04](v11, -1, -1);

    sub_1C0690FA4(v15, v14);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    sub_1C0690FA4(v7, v6);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069AF5C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;

  v1 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(void **)(v0 + 168);
  swift_willThrow();

  sub_1C0690FA4(v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069AFC0(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

void sub_1C069B034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t inited;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v35 = a5;
  v34 = a4;
  v33 = a1;
  v8 = sub_1C07473E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(v5 + 16);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_6;
  sub_1C0746EF8();
  sub_1C0746EF8();
  v13 = sub_1C069C918(a2, a3);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(v12 + 56) + 24 * v13;
  v16 = *(_QWORD *)(v15 + 8);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(id *)v15;
  sub_1C069102C(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_6:
    v20 = objc_allocWithZone(MEMORY[0x1E0CA6B38]);
    sub_1C0746EF8();
    v21 = (void *)sub_1C074790C();
    v22 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v20, sel_initWithName_protectionClass_bundleIdentifier_, v21, 0, v22, v33);

    goto LABEL_7;
  }
  v19 = v18;
  sub_1C069D010(v18, v16, v17);
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074B820;
  *(_QWORD *)(inited + 32) = 0x6449656C646E7562;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 80) = &protocol witness table for String;
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  sub_1C0746EF8();
  v24 = sub_1C06F5C3C(inited);
  type metadata accessor for PeopleAnalytics.StopWatch();
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 40) = 1;
  *(_QWORD *)(v25 + 48) = 0;
  *(_BYTE *)(v25 + 56) = 1;
  *(_BYTE *)(v25 + 16) = 9;
  *(_QWORD *)(v25 + 24) = v24;
  *(_QWORD *)(v25 + 32) = 0;
  swift_bridgeObjectRelease();
  sub_1C07473D8();
  sub_1C0747330();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)(v25 + 32) = v27;
  *(_BYTE *)(v25 + 40) = 0;
  sub_1C069DDE4(0, &qword_1EF61BA48);
  v28 = (void *)sub_1C0747B04();
  v29 = (_QWORD *)swift_allocObject();
  v30 = v34;
  v31 = v35;
  v29[2] = v34;
  v29[3] = v31;
  v29[4] = v25;
  aBlock[4] = sub_1C069D078;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C069B688;
  aBlock[3] = &block_descriptor_3;
  v32 = _Block_copy(aBlock);
  sub_1C069D084(v30);
  sub_1C0746F64();
  sub_1C0747030();
  objc_msgSend(v19, sel_indexSearchableItems_completionHandler_, v28, v32);
  _Block_release(v32);

  sub_1C0747030();
}

uint64_t sub_1C069B3B4(void *a1, void (*a2)(void *))
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v20;

  if (a1)
  {
    v4 = a1;
    if (qword_1EF61A378 != -1)
      swift_once();
    v5 = sub_1C0747720();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EF61D340);
    v6 = a1;
    v7 = a1;
    v8 = sub_1C0747708();
    v9 = sub_1C0747D74();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v20 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_getErrorValue();
      v12 = sub_1C07482FC();
      sub_1C069092C(v12, v13, &v20);
      sub_1C0747E40();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0671000, v8, v9, "Indexing error: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v11, -1, -1);
      MEMORY[0x1C3BA0D04](v10, -1, -1);

      if (!a2)
        goto LABEL_15;
    }
    else
    {

      if (!a2)
      {
LABEL_15:

        return sub_1C070DB74();
      }
    }
    v18 = a1;
    a2(a1);

    goto LABEL_15;
  }
  if (qword_1EF61A378 != -1)
    swift_once();
  v14 = sub_1C0747720();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF61D340);
  v15 = sub_1C0747708();
  v16 = sub_1C0747D68();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1C0671000, v15, v16, "Search item successfully indexed!", v17, 2u);
    MEMORY[0x1C3BA0D04](v17, -1, -1);
  }

  if (a2)
    a2(0);
  return sub_1C070DB74();
}

void sub_1C069B688(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  sub_1C0746F64();
  v4 = a2;
  v3(a2);
  sub_1C0747030();

}

void sub_1C069B6E0(void *a1, void (*a2)(void *))
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;

  if (a1)
  {
    v4 = a1;
    if (qword_1EF61A378 != -1)
      swift_once();
    v5 = sub_1C0747720();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EF61D340);
    v6 = a1;
    v7 = a1;
    v8 = sub_1C0747708();
    v9 = sub_1C0747D68();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v19 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_getErrorValue();
      v12 = sub_1C07482FC();
      sub_1C069092C(v12, v13, &v19);
      sub_1C0747E40();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0671000, v8, v9, "Domain clearing: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v11, -1, -1);
      MEMORY[0x1C3BA0D04](v10, -1, -1);

      if (!a2)
        goto LABEL_15;
    }
    else
    {

      if (!a2)
      {
LABEL_15:

        return;
      }
    }
    v18 = a1;
    a2(a1);

    goto LABEL_15;
  }
  if (qword_1EF61A378 != -1)
    swift_once();
  v14 = sub_1C0747720();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF61D340);
  v15 = sub_1C0747708();
  v16 = sub_1C0747D68();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1C0671000, v15, v16, "Domain successfully purged!", v17, 2u);
    MEMORY[0x1C3BA0D04](v17, -1, -1);
  }

  if (a2)
    a2(0);
}

uint64_t SpotlightIndexer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SpotlightIndexer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C069B9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C069325C;
  return sub_1C069A074(a1, a2, a3, a4);
}

uint64_t sub_1C069BA58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C06930A0;
  v7[19] = a2;
  v7[20] = v6;
  v7[18] = a1;
  return swift_task_switch();
}

void sub_1C069BACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C069B034(a1, a2, a3, a4, a5);
}

unint64_t sub_1C069BAEC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1C069BB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    while (1)
    {
      v7 = PeopleURL.Parameter.rawValue.getter();
      v9 = v8;
      if (v7 == PeopleURL.Parameter.rawValue.getter() && v9 == v10)
        break;
      v12 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v5 = (v5 + 1) & v6;
        if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
          continue;
      }
      return v5;
    }
    swift_bridgeObjectRelease_n();
  }
  return v5;
}

unint64_t sub_1C069BCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    v7 = sub_1C068FCD8();
    v8 = v5;
    while ((v7 & 1) == 0)
    {
      v8 = (v8 + 1) & v6;
      if (((*(_QWORD *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        return v8;
    }
  }
  return v5;
}

unint64_t sub_1C069BD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C0748284() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C0748284() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C069BE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1C069BEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1C069DD74(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1C3BA01E8](v9, a1);
      sub_1C069DDB0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1C069BF70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1C069C5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1C069DDE4(0, (unint64_t *)&qword_1EF61BA28);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1C0747E04();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1C0747E04();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1C069C6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1C0747558();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1C069DE1C(&qword_1EF61BA78, MEMORY[0x1E0D21550]);
      v14 = sub_1C07478D0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1C069C818(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1C0748350();
  sub_1C074835C();
  v2 = sub_1C0748374();
  return sub_1C069BAEC(a1, v2);
}

unint64_t sub_1C069C870(uint64_t a1)
{
  uint64_t v2;

  sub_1C0748350();
  PeopleURL.Parameter.rawValue.getter();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  v2 = sub_1C0748374();
  return sub_1C069BB8C(a1, v2);
}

unint64_t sub_1C069C8EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C0684BA8();
  return sub_1C069BCA8(a1, v2);
}

unint64_t sub_1C069C918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C0748350();
  sub_1C07479A8();
  v4 = sub_1C0748374();
  return sub_1C069BD30(a1, a2, v4);
}

unint64_t sub_1C069C97C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C0748344();
  return sub_1C069BE10(a1, v2);
}

unint64_t sub_1C069C9AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C0747F78();
  return sub_1C069BEAC(a1, v2);
}

uint64_t sub_1C069C9DC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0748350();
  PeopleURL.Parameter.rawValue.getter();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  v2 = sub_1C0748374();
  return sub_1C069BF70(a1, v2);
}

unint64_t sub_1C069CA54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C0747DF8();
  return sub_1C069C5C8(a1, v2);
}

unint64_t sub_1C069CA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C0748350();
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  v4 = sub_1C0748374();
  return sub_1C069BD30(a1, a2, v4);
}

unint64_t sub_1C069CAF8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0747558();
  sub_1C069DE1C(&qword_1EF61BA70, MEMORY[0x1E0D21548]);
  v2 = sub_1C074784C();
  return sub_1C069C6E0(a1, v2);
}

uint64_t sub_1C069CB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  sub_1C0746EF8();
  v8 = sub_1C069C918(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v14 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C06DEADC();
      v12 = v14;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 24 * v8;
    *(_QWORD *)a3 = *(_QWORD *)v13;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v13 + 8);
    sub_1C06DDF94(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t sub_1C069CC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  sub_1C0746EF8();
  v8 = sub_1C069C918(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C06DF92C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_1C07473E4();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_1C06DE338(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_1C07473E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1C069CD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  sub_1C0746EF8();
  v8 = sub_1C069CA84(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C06DFBF4();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for PeopleLocation();
    v14 = *(_QWORD *)(v13 - 8);
    sub_1C069DD30(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_1C06DE344(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for PeopleLocation();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1C069CEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1C069C918(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        v24 = *(_QWORD *)(v23 + 8);
        v25 = *(_QWORD *)(v23 + 16);

        result = sub_1C0690FA4(v24, v25);
        *(_QWORD *)v23 = a1;
        *(_QWORD *)(v23 + 8) = a2;
        *(_QWORD *)(v23 + 16) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1C06DEADC();
      goto LABEL_7;
    }
    sub_1C07055AC(v19, a6 & 1);
    v27 = sub_1C069C918(a4, a5);
    if ((v20 & 1) == (v28 & 1))
    {
      v16 = v27;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C0722338(v16, a4, a5, a1, a2, a3, v22);
      return sub_1C0746EF8();
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

void *sub_1C069D010(void *result, uint64_t a2, unint64_t a3)
{
  if (result)
  {

    return (void *)sub_1C0690FA4(a2, a3);
  }
  return result;
}

uint64_t sub_1C069D044()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    sub_1C0747030();
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C069D078(void *a1)
{
  uint64_t v1;

  return sub_1C069B3B4(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1C069D084(uint64_t result)
{
  if (result)
    return sub_1C0746F64();
  return result;
}

uint64_t sub_1C069D094(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1C069C97C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1C072238C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C06DECB4();
      goto LABEL_7;
    }
    sub_1C07058E8(v13, a3 & 1);
    v19 = sub_1C069C97C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1C072238C(v10, a2, a1, v16);
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C069D1A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C069C918(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C06DEE54();
      goto LABEL_7;
    }
    sub_1C0705B9C(v15, a4 & 1);
    v21 = sub_1C069C918(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C07223D4(v12, a2, a3, a1, v18);
      return sub_1C0746EF8();
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C069D2D4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1C069C97C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for ResolvedFamily();
        return sub_1C069DE5C(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
      }
      return sub_1C072241C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C06DF1C0();
      goto LABEL_7;
    }
    sub_1C07061D4(v13, a3 & 1);
    v20 = sub_1C069C97C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1C072241C(v10, a2, a1, v16);
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

_OWORD *sub_1C069D3FC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C069C918(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        return sub_1C0685D00(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C06DF748();
      goto LABEL_7;
    }
    sub_1C0706AEC(v15, a4 & 1);
    v21 = sub_1C069C918(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C07224A8(v12, a2, a3, a1, v18);
      return (_OWORD *)sub_1C0746EF8();
    }
  }
  result = (_OWORD *)sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C069D52C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C069C918(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_1C07473E4();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C06DF92C();
      goto LABEL_7;
    }
    sub_1C0706DE8(v15, a4 & 1);
    v22 = sub_1C069C918(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C0722510(v12, a2, a3, a1, v18);
      return sub_1C0746EF8();
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C069D668(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C069CA84(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for PeopleLocation();
        return sub_1C069DE5C(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for PeopleLocation);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C06DFBF4();
      goto LABEL_7;
    }
    sub_1C0707150(v15, a4 & 1);
    v22 = sub_1C069CA84(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C07225A0(v12, a2, a3, a1, v18);
      return sub_1C0746EF8();
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C069D7A8(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C069C918(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v18[7] + v12) = a1 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1C06E014C();
      goto LABEL_7;
    }
    sub_1C0707A40(result, a4 & 1);
    result = sub_1C069C918(a2, a3);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C0722630(v12, a2, a3, a1 & 1, v18);
      return sub_1C0746EF8();
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

void sub_1C069D8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v7 = objc_allocWithZone(MEMORY[0x1E0CA6B38]);
  sub_1C0746EF8();
  v8 = (void *)sub_1C074790C();
  v9 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithName_protectionClass_bundleIdentifier_, v8, 0, v9);

  v11 = (void *)sub_1C0747B04();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  v14[4] = sub_1C069DECC;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1C069B688;
  v14[3] = &block_descriptor_14;
  v13 = _Block_copy(v14);
  sub_1C069D084(a4);
  sub_1C0747030();
  objc_msgSend(v10, sel_deleteSearchableItemsWithIdentifiers_completionHandler_, v11, v13);
  _Block_release(v13);

}

uint64_t type metadata accessor for SpotlightIndexer()
{
  return objc_opt_self();
}

uint64_t method lookup function for SpotlightIndexer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SpotlightIndexer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SpotlightIndexer.startBatchMode(forBundle:protectionClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 120)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 120));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1C06930A0;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SpotlightIndexer.endBatchMode(forBundle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 128) + *(_QWORD *)(*(_QWORD *)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C06930A0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of SpotlightIndexer.indexItems(items:indexBundleId:completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of SpotlightIndexer.deleteItems(withIds:indexBundleId:completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t destroy for SpotlightIndexer.IndexBatchInfo(uint64_t a1)
{

  return sub_1C0690FA4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *_s6People16SpotlightIndexerC14IndexBatchInfoVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v3;
  sub_1C069102C(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t assignWithCopy for SpotlightIndexer.IndexBatchInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  sub_1C069102C(v8, v7);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  sub_1C0690FA4(v9, v10);
  return a1;
}

uint64_t assignWithTake for SpotlightIndexer.IndexBatchInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C0690FA4(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SpotlightIndexer.IndexBatchInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpotlightIndexer.IndexBatchInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpotlightIndexer.IndexBatchInfo()
{
  return &type metadata for SpotlightIndexer.IndexBatchInfo;
}

uint64_t sub_1C069DD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeopleLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C069DD74(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C069DDB0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1C069DDE4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1C069DE1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C0747558();
    result = MEMORY[0x1C3BA0C2C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C069DE5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C069DEA0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    sub_1C0747030();
  return swift_deallocObject();
}

void sub_1C069DECC(void *a1)
{
  uint64_t v1;

  sub_1C069B6E0(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1C069DEDC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  __int128 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF788(0, v1, 0);
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      sub_1C0685C78(v4, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BAD0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B450);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C06BF788(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C06BF788(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1C0685BC4(&v9, v2 + 40 * v6 + 32);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C069E014(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF8A4(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      sub_1C0746EF8();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C06BF8A4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C06BF8A4(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1C0685D00(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C069E138(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  unint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    sub_1C0746EF8();
    v2 = sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1C06BF8C0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1C3BA029C](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C06BF8C0(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1C069FA80();
        v16 = &protocol witness table for LSApplicationProxy;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1C0685BC4(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v11 = *(_QWORD *)(v3 + 16);
        v12 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_1C06BF8C0(v12 > 1, v11 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1C069FA80();
        v16 = &protocol witness table for LSApplicationProxy;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1C0685BC4(&v14, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t StatusProviderProtocol.fetchStatus(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return StatusProviderProtocol.fetchStatus(for:types:completion:)(a1, a2, MEMORY[0x1E0DEE9D8], a3, a4, a5, a6);
}

uint64_t StatusProviderProtocol.fetchStatus(for:types:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t, void (*)(_QWORD *, char), _QWORD *, uint64_t, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C074B820;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a4;
  v15[5] = a5;
  v16 = *(void (**)(uint64_t, uint64_t, void (*)(_QWORD *, char), _QWORD *, uint64_t, uint64_t))(a7 + 8);
  swift_bridgeObjectRetain_n();
  sub_1C0746F64();
  v16(v14, a3, sub_1C069E51C, v15, a6, a7);
  swift_bridgeObjectRelease();
  return sub_1C0747030();
}

void sub_1C069E400(_QWORD *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, uint64_t))
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v11;
  char v12;
  _QWORD *v13;

  v6 = a1;
  v7 = a2 & 1;
  if ((a2 & 1) == 0)
  {
    if (a1[2])
    {
      sub_1C069A018(a1, 0);
      sub_1C0746EF8();
      v11 = sub_1C069C918(a3, a4);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD **)(v6[7] + 8 * v11);
        sub_1C0746EF8();
        swift_bridgeObjectRelease();
        sub_1C0699ED8(v6, 0);
        v6 = v13;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0746EF8();
    }
    sub_1C0699ED8(v6, 0);
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_9;
  }
  v8 = a1;
LABEL_9:
  a5(v6, v7);
  sub_1C0699ED8(v6, v7);
}

uint64_t sub_1C069E4F0()
{
  swift_bridgeObjectRelease();
  sub_1C0747030();
  return swift_deallocObject();
}

void sub_1C069E51C(_QWORD *a1, char a2)
{
  uint64_t v2;

  sub_1C069E400(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(_QWORD *, uint64_t))(v2 + 32));
}

uint64_t StatusProviderProtocol.fetchStatus(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, MEMORY[0x1E0DEE9D8], a2, a3, a4);
}

uint64_t sub_1C069E54C()
{
  uint64_t v0;
  uint64_t result;
  __int128 v2;
  uint64_t v3;
  _UNKNOWN **v4;

  v3 = type metadata accessor for DaemonStatusFetcherFactory();
  v4 = &protocol witness table for DaemonStatusFetcherFactory;
  *(_QWORD *)&v2 = swift_allocObject();
  type metadata accessor for StatusProvider();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  result = sub_1C0685BC4(&v2, v0 + 24);
  qword_1ED4FF9E8 = v0;
  return result;
}

uint64_t static StatusProvider.shared.getter()
{
  if (qword_1ED4FF9F0 != -1)
    swift_once();
  return sub_1C0746F64();
}

uint64_t sub_1C069E608(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2[2])
    sub_1C0746EF8();
  else
    a2 = &unk_1E79E36D0;
  v30 = v4;
  sub_1C0746EF8();
  v11 = sub_1C0746EF8();
  v12 = sub_1C069F828(v11, (uint64_t)a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = a2[2];
  if (v34)
  {
    v26 = v12;
    v27 = a3;
    v28 = a1;
    v29 = a4;
    if (qword_1EF61A238 != -1)
LABEL_15:
      swift_once();
    v13 = 0;
    v33 = (char *)(a2 + 4);
    v14 = MEMORY[0x1E0DEE9D8];
    v32 = a2;
    do
    {
      if (v13 >= a2[2])
      {
        __break(1u);
        goto LABEL_15;
      }
      v15 = qword_1EF629C68;
      if (*(_QWORD *)(qword_1EF629C68 + 16))
      {
        v35 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain_n();
        __asm { BR              X9 }
      }
      ++v13;
    }
    while (v13 != v34);
    swift_bridgeObjectRelease();
    a1 = v28;
    a4 = v29;
    v12 = v26;
    a3 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  v16 = v30[6];
  v17 = v30[7];
  __swift_project_boxed_opaque_existential_1(v30 + 3, v16);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v17 + 8))(v37, v14, v16, v17);
  sub_1C0747030();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA88);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C074B820;
  sub_1C0685C78((uint64_t)v37, v18 + 32);
  v19 = sub_1C069DEDC(v12);
  swift_bridgeObjectRelease();
  v36 = v18;
  sub_1C068CF24(v19);
  v20 = v36;
  v21 = sub_1C0747C60();
  v22 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v31, 1, 1, v21);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = a1;
  v23[5] = v20;
  v23[6] = a3;
  v23[7] = a4;
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C069F40C(v22, (uint64_t)&unk_1EF61BA98, (uint64_t)v23);
  sub_1C0747030();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
}

uint64_t sub_1C069ECD8(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C0746EF8();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1C069F078(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1C0748284();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C0748284() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C069F13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C069F1B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double v7;
  double v8;
  void (*v9)(uint64_t, uint64_t);
  _QWORD *v10;

  if (qword_1EF61A528 != -1)
    swift_once();
  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[6];
  v4 = v0[7];
  v5 = __swift_project_value_buffer(v3, (uint64_t)qword_1EF61E380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
  v6 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v2, v3);
  v9(v1, v3);
  v10 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_1C069F2D8;
  return static StatusCoalescer.fetchStatus(for:statusFetchers:timeout:)(v0[2], v0[3], v8);
}

uint64_t sub_1C069F2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_1C069F34C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 32))(*(_QWORD *)(v0 + 96), 0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069F3A0()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);
  id v3;

  v1 = *(void **)(v0 + 88);
  v2 = *(void (**)(void *, uint64_t))(v0 + 32);
  v3 = v1;
  v2(v1, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C069F40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1C0747C60();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C0747C54();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1C069FABC(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C0747C00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C069F550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1C0747C60();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C0747C54();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1C069FABC(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C0747C00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BAB8);
  return swift_task_create();
}

uint64_t StatusProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return v0;
}

uint64_t StatusProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1C069F6EC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C069E608(a1, a2, a3, a4);
}

uint64_t sub_1C069F70C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C069FC00;
  return v6(a1);
}

uint64_t sub_1C069F770(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C069F7D4;
  return v6(a1);
}

uint64_t sub_1C069F7D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C069F820(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1C069F828(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1C0685C78(v6, (uint64_t)&v13);
      v8 = v14;
      v9 = v15;
      __swift_project_boxed_opaque_existential_1(&v13, v14);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 16))(v12, v8, v9);
      if ((sub_1C069ECD8(LOBYTE(v12[0]), a2) & 1) != 0)
      {
        sub_1C0685BC4(&v13, (uint64_t)v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C06BF7D8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
        v11 = *(_QWORD *)(v16 + 16);
        v10 = *(_QWORD *)(v16 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1C06BF7D8(v10 > 1, v11 + 1, 1);
          v7 = v16;
        }
        *(_QWORD *)(v7 + 16) = v11 + 1;
        sub_1C0685BC4(v12, v7 + 40 * v11 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    return v16;
  }
  return result;
}

uint64_t sub_1C069F978()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C069F9B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1C06930A0;
  return sub_1C069F13C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t dispatch thunk of StatusProviderProtocol.fetchStatus(for:types:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for StatusProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for StatusProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatusProvider.fetchStatus(for:types:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

unint64_t sub_1C069FA80()
{
  unint64_t result;

  result = qword_1EF61BAA0;
  if (!qword_1EF61BAA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF61BAA0);
  }
  return result;
}

uint64_t sub_1C069FABC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C069FAFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C06930A0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF61BAA8 + dword_1EF61BAA8))(a1, v4);
}

uint64_t sub_1C069FB6C()
{
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C069FB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C069325C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF61BAC0 + dword_1EF61BAC0))(a1, v4);
}

uint64_t sub_1C069FC08()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_familyMember), sel_contactsIncludingImage_, 0);
  sub_1C069DDE4(0, (unint64_t *)&qword_1ED4FFE30);
  v2 = sub_1C0747B1C();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1C0746EF8();
  v3 = sub_1C074814C();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1C06BF6B8(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v16;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1C3BA029C](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_identifier);
      v10 = sub_1C0747930();
      v12 = v11;

      v14 = *(_QWORD *)(v16 + 16);
      v13 = *(_QWORD *)(v16 + 24);
      if (v14 >= v13 >> 1)
        sub_1C06BF6B8(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v16 + 16) = v14 + 1;
      v15 = v16 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C069FDD0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_minutes);
  sub_1C069DDE4(0, (unint64_t *)&qword_1ED4FEC78);
  return sub_1C07470B4();
}

uint64_t sub_1C069FE70()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_status) - 1;
  if (v1 > 2)
    return 0;
  v2 = 8 * v1;
  v3 = *(_QWORD *)&aRequestpreques[v2];
  v4 = *(_QWORD *)&aRequestpreques[v2 + 24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074B820;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  sub_1C0746EF8();
  v6 = sub_1C06DAF80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C069FF40()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_approvalTime) - 1;
  if (v1 > 2)
    return 0;
  v2 = *(_QWORD *)&a15mins[8 * v1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074B820;
  *(_QWORD *)(inited + 32) = 0x6C61766F72707061;
  *(_QWORD *)(inited + 40) = v2;
  sub_1C0746EF8();
  v4 = sub_1C06DAF80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C06A0010(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, void *a8, void *a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  _QWORD *v52;
  _QWORD **v53;
  _QWORD *v54;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  void *v68;
  uint8_t *v69;
  uint8_t *v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;

  v21 = v20;
  v22 = a8;
  if (a3 == 1)
  {
    v77 = a7;
    v78 = a10;
    v81 = a1;
    v82 = a2;
    v83 = a8;
    v84 = a5;
    sub_1C0746F64();
    swift_bridgeObjectRelease();
    if (a12)
      v30 = a12;
    else
      v30 = 0xE000000000000000;
    if (a12)
      v31 = a11;
    else
      v31 = 0;
    v79 = v31;
    v80 = v30;
    type metadata accessor for DaemonConnection();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v74 = 0xE700000000000000;
LABEL_16:
    v33 = sub_1C07471EC();
    v75 = v34;
    v76 = v33;

    if (a4 != 1 && !a9)
    {
      if (qword_1EF61A378 != -1)
        swift_once();
      v35 = sub_1C0747720();
      __swift_project_value_buffer(v35, (uint64_t)qword_1EF61D340);
      v36 = sub_1C0747708();
      v37 = sub_1C0747D68();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_1C0671000, v36, v37, "ScreenTimeRequestItem responding user missing!", v38, 2u);
        MEMORY[0x1C3BA0D04](v38, -1, -1);
      }

    }
    v39 = (_QWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_bundleId);
    *v39 = a15;
    v39[1] = a16;
    v40 = (_QWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailPath);
    *v40 = a17;
    v40[1] = a18;
    v41 = (uint64_t *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailData);
    *v41 = a19;
    v41[1] = a20;
    *(_DWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_kind) = a3;
    *(_DWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_status) = a4;
    *(_DWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_approvalTime) = v77;
    *(_QWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_actionFamilyMember) = a9;
    *(_QWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_familyMember) = v83;
    *(_QWORD *)(v21 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_requestApprovers) = v78;
    sub_1C06A0A38(a19, a20);
    v42 = a9;
    v43 = v83;
    sub_1C0747030();
    v44 = objc_msgSend(v43, sel_contactIncludingImage_, 0, v74);
    v45 = v21 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
    v46 = sub_1C07473E4();
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
    v48(v45, v84, v46);
    v49 = v21 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate;
    v48(v21 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate, a6, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    *(_QWORD *)(v21 + OBJC_IVAR____TtC6People13IndexableItem_keywordStrings) = MEMORY[0x1E0DEE9D8];
    v50 = (_QWORD *)(v21 + OBJC_IVAR____TtC6People13IndexableItem_title);
    *v50 = v79;
    v50[1] = v80;
    v51 = (uint64_t *)(v21 + OBJC_IVAR____TtC6People13IndexableItem_description);
    *v51 = v76;
    v51[1] = v75;
    *(_QWORD *)(v21 + 16) = v44;
    v52 = (_QWORD *)(v21 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
    *v52 = v81;
    v52[1] = v82;
    v53 = (_QWORD **)(v21 + OBJC_IVAR____TtC6People13IndexableItem_keywordStrings);
    swift_beginAccess();
    v54 = *v53;
    swift_retain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v53 = v54;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v54 = sub_1C06B3530(0, v54[2] + 1, 1, v54);
      *v53 = v54;
    }
    v57 = v54[2];
    v56 = v54[3];
    if (v57 >= v56 >> 1)
    {
      v54 = sub_1C06B3530((_QWORD *)(v56 > 1), v57 + 1, 1, v54);
      *v53 = v54;
    }
    v54[2] = v57 + 1;
    v58 = &v54[2 * v57];
    v58[4] = 0x74736575716572;
    v58[5] = 0xE700000000000000;
    swift_endAccess();
    sub_1C0747030();
    swift_beginAccess();
    v59 = *v53;
    sub_1C0746F64();
    v60 = swift_isUniquelyReferenced_nonNull_native();
    *v53 = v59;
    if ((v60 & 1) == 0)
    {
      v59 = sub_1C06B3530(0, v59[2] + 1, 1, v59);
      *v53 = v59;
    }
    v62 = v59[2];
    v61 = v59[3];
    if (v62 >= v61 >> 1)
    {
      v59 = sub_1C06B3530((_QWORD *)(v61 > 1), v62 + 1, 1, v59);
      *v53 = v59;
    }
    v59[2] = v62 + 1;
    v63 = &v59[2 * v62];
    v63[4] = 0xD000000000000011;
    v63[5] = 0x80000001C07531D0;
    swift_endAccess();
    sub_1C0747030();
    sub_1C0690F90(a19, a20);
    sub_1C0747030();

    v64 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v64(a6, v46);
    v64(v84, v46);
    return v21;
  }
  if (a3 == 2)
  {
    v77 = a7;
    v78 = a10;
    v81 = a1;
    v82 = a2;
    v83 = a8;
    v84 = a5;
    sub_1C0746F64();
    swift_bridgeObjectRelease();
    if (a14)
      v26 = a13;
    else
      v26 = 0;
    v27 = 0xE000000000000000;
    if (a14)
      v27 = a14;
    v79 = v26;
    v80 = v27;
    type metadata accessor for DaemonConnection();
    v28 = swift_getObjCClassFromMetadata();
    v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v28);
    v74 = 0xE300000000000000;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EF61A378 != -1)
    swift_once();
  v65 = sub_1C0747720();
  __swift_project_value_buffer(v65, (uint64_t)qword_1EF61D340);
  v66 = sub_1C0747708();
  v67 = sub_1C0747D74();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = v22;
    v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v69 = 0;
    _os_log_impl(&dword_1C0671000, v66, v67, "ScreenTimeRequestItem invalid event kind", v69, 2u);
    v70 = v69;
    v22 = v68;
    MEMORY[0x1C3BA0D04](v70, -1, -1);
  }
  sub_1C0690F90(a19, a20);

  v71 = sub_1C07473E4();
  v72 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8);
  v72(a6, v71);
  v72(a5, v71);
  type metadata accessor for ScreenTimeRequestItem();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1C06A0768()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C0690F90(*(_QWORD *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailData), *(_QWORD *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailData + 8));

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06A07E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C06A09F8(v0 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0690F90(*(_QWORD *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailData), *(_QWORD *)(v0 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailData + 8));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C06A090C()
{
  sub_1C06A07E0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06A0930()
{
  return type metadata accessor for ScreenTimeRequestItem();
}

uint64_t type metadata accessor for ScreenTimeRequestItem()
{
  uint64_t result;

  result = qword_1EF61BB00;
  if (!qword_1EF61BB00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C06A0974()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C06A09F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C06A0A38(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C069102C(a1, a2);
  return a1;
}

uint64_t static ScreenTimeSupport.getCurrentStatusDetails(withDetails:forId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  return swift_task_switch();
}

uint64_t sub_1C06A0A68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = *(uint64_t **)(v0 + 128);
  type metadata accessor for RequestMessageDetailsBuilder();
  inited = swift_initStackObject();
  *(_BYTE *)(v0 + 184) = 2;
  *(_QWORD *)(v0 + 152) = inited;
  v3 = *v1;
  v4 = v1[1];
  if (qword_1ED4FEB98 != -1)
    swift_once();
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED4FEB78);
  v7 = _s6People14ContactFetcherCACycfC_0();
  *(_QWORD *)(v0 + 40) = type metadata accessor for ContactFetcher();
  *(_QWORD *)(v0 + 48) = &protocol witness table for ContactFetcher;
  *(_QWORD *)(v0 + 16) = v7;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v8;
  *v8 = v0;
  v8[1] = sub_1C06A0B80;
  return sub_1C06CE620(*(_QWORD *)(v0 + 120), (_BYTE *)(v0 + 184), v3, v4, 1, 0, v6, v0 + 16);
}

uint64_t sub_1C06A0B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1 + 16;
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v2);
  return swift_task_switch();
}

uint64_t sub_1C06A0BF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06A0BFC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  if (qword_1EF61A398 != -1)
    swift_once();
  v1 = (void *)v0[21];
  v2 = sub_1C0747720();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF61D388);
  v3 = v1;
  v4 = v1;
  v5 = sub_1C0747708();
  v6 = sub_1C0747D68();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[21];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_1C07482FC();
    v0[14] = sub_1C069092C(v11, v12, &v22);
    sub_1C0747E40();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C0671000, v5, v6, "Failed biome lookup %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v10, -1, -1);
    MEMORY[0x1C3BA0D04](v9, -1, -1);

  }
  else
  {

  }
  swift_bridgeObjectRetain_n();
  v13 = sub_1C0747708();
  v14 = sub_1C0747D68();
  v15 = os_log_type_enabled(v13, v14);
  v16 = v0[18];
  if (v15)
  {
    v17 = v0[17];
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_1C0746EF8();
    v0[12] = sub_1C069092C(v17, v16, &v22);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v13, v14, "%s looking at spotlight for backing store", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v19, -1, -1);
    MEMORY[0x1C3BA0D04](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v20 = (_QWORD *)swift_task_alloc();
  v0[22] = v20;
  *v20 = v0;
  v20[1] = sub_1C06A0F40;
  return static SpotlightHelper.fillinDetailsFromSpotlight(withDetails:)(v0[15], v0[16]);
}

uint64_t sub_1C06A0F40()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

ValueMetadata *type metadata accessor for ScreenTimeSupport()
{
  return &type metadata for ScreenTimeSupport;
}

uint64_t sub_1C06A0F98()
{
  id v0;
  void *v1;
  uint64_t result;

  v0 = sub_1C06A1A08();
  type metadata accessor for ServerFeatureFlag();
  v1 = (void *)swift_allocObject();
  result = ServerFeatureFlag.init(familyDataClassProperties:)((uint64_t)v0);
  off_1EF61BC68 = v1;
  return result;
}

uint64_t ServerFeatureFlag.__allocating_init(familyDataClassProperties:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ServerFeatureFlag.init(familyDataClassProperties:)(a1);
  return v2;
}

uint64_t static ServerFeatureFlag.shared.getter()
{
  if (qword_1EF61A298 != -1)
    swift_once();
  return sub_1C0746F64();
}

uint64_t ServerFeatureFlag.isDisplayCityAndStateEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ServerFeatureFlag.preventScreenTimeMessageDeviceValidation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t ServerFeatureFlag.preventAskToBuyDeviceValidation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t ServerFeatureFlag.lpForScreenTimeFallback.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1C0746EF8();
  return v1;
}

uint64_t ServerFeatureFlag.lpForAskToBuyFallback.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1C0746EF8();
  return v1;
}

uint64_t ServerFeatureFlag.locationTriage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 66);
}

double ServerFeatureFlag.contactMoveDistanceInMeters.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t ServerFeatureFlag.init(familyDataClassProperties:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  id v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  unsigned __int8 v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  char v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  const char *v54;
  uint64_t v56;
  unint64_t v57;
  double v58;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = a1;
  v4 = qword_1EF61A540;
  v5 = sub_1C0746EF8();
  if (v4 != -1)
  {
    swift_once();
    v5 = *(_QWORD *)(v2 + 16);
  }
  v6 = qword_1EF61E3C8;
  v7 = unk_1EF61E3D0;
  sub_1C0746EF8();
  LOBYTE(v6) = sub_1C06A1E64(v6, v7, v5);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 + 24) = v6 & 1;
  v8 = *(_QWORD *)(v2 + 16);
  sub_1C0746EF8();
  v9 = sub_1C06A1E64(0xD000000000000028, 0x80000001C07531F0, v8);
  swift_bridgeObjectRelease();
  if (qword_1ED4FFE60 != -1)
    swift_once();
  v10 = (id)qword_1ED4FFE58;
  v11 = (void *)sub_1C074790C();
  v12 = objc_msgSend(v10, sel_BOOLForKey_, v11);

  if (v12)
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v13 = sub_1C0747720();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED4FF8B0);
    v14 = sub_1C0747708();
    v15 = sub_1C0747D80();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1C0671000, v14, v15, "Profile disabling preventScreenTimeMessageDeviceValidation", v16, 2u);
      MEMORY[0x1C3BA0D04](v16, -1, -1);
    }

    v9 = 1;
  }
  *(_BYTE *)(v2 + 25) = v9 & 1;
  v17 = *(_QWORD *)(v2 + 16);
  sub_1C0746EF8();
  v18 = sub_1C06A1E64(0xD00000000000001FLL, 0x80000001C0753240, v17);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 + 64) = v18 & 1;
  v19 = *(_QWORD *)(v2 + 16);
  sub_1C0746EF8();
  v20 = sub_1C06A1E64(0xD000000000000026, 0x80000001C0753260, v19);
  swift_bridgeObjectRelease();
  v21 = (id)qword_1ED4FFE58;
  v22 = (void *)sub_1C074790C();
  v23 = objc_msgSend(v21, sel_BOOLForKey_, v22);

  if (v23)
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v24 = sub_1C0747720();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED4FF8B0);
    v25 = sub_1C0747708();
    v26 = sub_1C0747D80();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1C0671000, v25, v26, "Profile disabling preventAskToBuyDeviceValidation", v27, 2u);
      MEMORY[0x1C3BA0D04](v27, -1, -1);
    }

    v20 = 1;
  }
  *(_BYTE *)(v2 + 26) = v20 & 1;
  v28 = *(_QWORD *)(v2 + 16);
  sub_1C0746EF8();
  v29 = sub_1C06A1E64(0xD000000000000023, 0x80000001C07532B0, v28);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 + 65) = v29 & 1;
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v30 = sub_1C0747720();
  __swift_project_value_buffer(v30, (uint64_t)qword_1ED4FF8B0);
  sub_1C0746F64();
  v31 = sub_1C0747708();
  v32 = sub_1C0747D80();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v33 = 67109120;
    LODWORD(v56) = *(unsigned __int8 *)(v2 + 65);
    sub_1C0747E40();
    sub_1C0747030();
    _os_log_impl(&dword_1C0671000, v31, v32, "'askToBuyOverMessageKillSwitchSydRoE' is %{BOOL}d", v33, 8u);
    MEMORY[0x1C3BA0D04](v33, -1, -1);

    v34 = *(_QWORD *)(a1 + 16);
    if (!v34)
      goto LABEL_27;
  }
  else
  {

    sub_1C0747030();
    v34 = *(_QWORD *)(a1 + 16);
    if (!v34)
    {
LABEL_27:
      v37 = 0xE000000000000000;
      goto LABEL_28;
    }
  }
  v35 = sub_1C069C918(0xD000000000000012, 0x80000001C07532E0);
  if ((v36 & 1) == 0
    || (v58 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v35),
        swift_unknownObjectRetain(),
        !swift_dynamicCast()))
  {
    v34 = 0;
    goto LABEL_27;
  }
  v34 = v56;
  v37 = v57;
LABEL_28:
  *(_QWORD *)(v2 + 48) = v34;
  *(_QWORD *)(v2 + 56) = v37;
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_1C069C918(0xD000000000000014, 0x80000001C0753300), (v39 & 1) != 0))
  {
    v40 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v38);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v58 = v40;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v41 = v56;
      v42 = v57;
      goto LABEL_34;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v41 = 0;
  v42 = 0xE000000000000000;
LABEL_34:
  *(_QWORD *)(v2 + 32) = v41;
  *(_QWORD *)(v2 + 40) = v42;
  v43 = qword_1EF61A568;
  v44 = (id)qword_1ED4FFE58;
  if (v43 != -1)
    swift_once();
  v45 = (void *)sub_1C074790C();
  v46 = objc_msgSend(v44, sel_BOOLForKey_, v45);

  *(_BYTE *)(v2 + 66) = v46;
  sub_1C0746F64();
  v47 = sub_1C0747708();
  v48 = sub_1C0747D80();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v49 = 67109120;
    sub_1C0747E40();
    sub_1C0747030();
    _os_log_impl(&dword_1C0671000, v47, v48, "locationTriage is set to: %{BOOL}d", v49, 8u);
    MEMORY[0x1C3BA0D04](v49, -1, -1);

  }
  else
  {

    sub_1C0747030();
  }
  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
  {
    sub_1C069C918(0xD00000000000001BLL, 0x80000001C0753320);
    if ((v50 & 1) != 0)
    {
      swift_unknownObjectRetain();
      if ((swift_dynamicCast() & 1) != 0 && v58 >= 100.0 && v58 <= 1000.0)
      {
        *(double *)(v2 + 72) = v58;
        sub_1C0746F64();
        v51 = sub_1C0747708();
        v52 = sub_1C0747D80();
        if (!os_log_type_enabled(v51, v52))
        {

          sub_1C0747030();
          return v2;
        }
        v53 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v53 = 134217984;
        sub_1C0747E40();
        sub_1C0747030();
        v54 = "contactMoveDistanceInMeters is set to: %f from server";
        goto LABEL_48;
      }
    }
  }
  *(_QWORD *)(v2 + 72) = 0x4059000000000000;
  v51 = sub_1C0747708();
  v52 = sub_1C0747D80();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v53 = 134217984;
    sub_1C0747E40();
    v54 = "contactMoveDistanceInMeters fallback: %f";
LABEL_48:
    _os_log_impl(&dword_1C0671000, v51, v52, v54, v53, 0xCu);
    MEMORY[0x1C3BA0D04](v53, -1, -1);
  }

  return v2;
}

uint64_t ServerFeatureFlag.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerFeatureFlag.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1C06A1A08()
{
  id result;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_aa_primaryAppleAccount);

    if (v2)
    {
      v3 = (void *)sub_1C074790C();
      v4 = objc_msgSend(v2, sel_propertiesForDataclass_, v3);
      if (v4
        && (v5 = v4, v6 = sub_1C07477EC(), v5, v7 = sub_1C070CFC4(v6), swift_bridgeObjectRelease(), v7))
      {
        if (qword_1ED4FF8D0 != -1)
          swift_once();
        v8 = sub_1C0747720();
        __swift_project_value_buffer(v8, (uint64_t)qword_1ED4FF8B0);
        swift_bridgeObjectRetain_n();
        v9 = sub_1C0747708();
        v10 = sub_1C0747D80();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          v12 = swift_slowAlloc();
          v25 = v12;
          *(_DWORD *)v11 = 136315138;
          sub_1C0746EF8();
          v13 = sub_1C0747804();
          v15 = v14;
          swift_bridgeObjectRelease();
          sub_1C069092C(v13, v15, &v25);
          sub_1C0747E40();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0671000, v9, v10, "Server feature flags %s", v11, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v12, -1, -1);
          MEMORY[0x1C3BA0D04](v11, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return (id)v7;
      }
      else
      {
        if (qword_1ED4FFF68 != -1)
          swift_once();
        v16 = sub_1C0747720();
        __swift_project_value_buffer(v16, (uint64_t)qword_1ED4FFF50);
        v17 = sub_1C0747708();
        v18 = sub_1C0747D74();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v19 = 0;
          _os_log_impl(&dword_1C0671000, v17, v18, "Accounts data class properties is empty", v19, 2u);
          MEMORY[0x1C3BA0D04](v19, -1, -1);
        }

        v20 = sub_1C06F5FB4(MEMORY[0x1E0DEE9D8]);
        return (id)v20;
      }
    }
    else
    {
      if (qword_1ED4FFF68 != -1)
        swift_once();
      v21 = sub_1C0747720();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED4FFF50);
      v22 = sub_1C0747708();
      v23 = sub_1C0747D74();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1C0671000, v22, v23, "Unable to get primary apple account", v24, 2u);
        MEMORY[0x1C3BA0D04](v24, -1, -1);
      }

      return (id)sub_1C06F5FB4(MEMORY[0x1E0DEE9D8]);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C06A1E64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unsigned __int8 v21;
  uint64_t v22;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C0746EF8();
    v6 = sub_1C069C918(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v6);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v22 = v8;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v9 = v21;
        if (qword_1ED4FFF68 != -1)
          swift_once();
        v10 = sub_1C0747720();
        __swift_project_value_buffer(v10, (uint64_t)qword_1ED4FFF50);
        swift_bridgeObjectRetain_n();
        v11 = sub_1C0747708();
        v12 = sub_1C0747D5C();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = swift_slowAlloc();
          v14 = swift_slowAlloc();
          v22 = v14;
          *(_DWORD *)v13 = 136315394;
          sub_1C0746EF8();
          sub_1C069092C(a1, a2, &v22);
          sub_1C0747E40();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v13 + 12) = 1024;
          sub_1C0747E40();
          _os_log_impl(&dword_1C0671000, v11, v12, "%s property is %{BOOL}d", (uint8_t *)v13, 0x12u);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v14, -1, -1);
          MEMORY[0x1C3BA0D04](v13, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return v9;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_1ED4FFF68 != -1)
    swift_once();
  v15 = sub_1C0747720();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED4FFF50);
  swift_bridgeObjectRetain_n();
  v16 = sub_1C0747708();
  v17 = sub_1C0747D74();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_1C0746EF8();
    sub_1C069092C(a1, a2, &v22);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v16, v17, "%s property does not exist", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v19, -1, -1);
    MEMORY[0x1C3BA0D04](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t type metadata accessor for ServerFeatureFlag()
{
  return objc_opt_self();
}

uint64_t method lookup function for ServerFeatureFlag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServerFeatureFlag.__allocating_init(familyDataClassProperties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t MessageConduit.enabledOnPlatform.getter()
{
  return 1;
}

uint64_t MessageConduit.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 1;
  return result;
}

uint64_t MessageConduit.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 1;
  return result;
}

uint64_t MessageConduit.sendMessage@Sendable (details:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF61BD60 + dword_1EF61BD60);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C06A22C8;
  return v5(a1);
}

uint64_t sub_1C06A22C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t MessageConduit.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MessageConduit.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06A2330(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF61BD60 + dword_1EF61BD60);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C06A2938;
  return v5(a1);
}

uint64_t sub_1C06A2390(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[23] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v1[24] = swift_task_alloc();
  v2 = sub_1C07472C4();
  v1[25] = v2;
  v1[26] = *(_QWORD *)(v2 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06A2424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  char v43;
  uint64_t v44;

  v1 = *(char *)(*(_QWORD *)(v0 + 184) + 16);
  if (v1 == 3)
  {
    v2 = 0xD000000000000014;
    v3 = "Unknown event source";
LABEL_5:
    v14 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v2, (unint64_t)(v3 - 32) | 0x8000000000000000, 500);
    goto LABEL_6;
  }
  v42 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BD70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074C980;
  *(_BYTE *)(inited + 32) = 7;
  v5 = *(_QWORD *)&aUnknown_4[8 * v1];
  v6 = *(_QWORD *)&aAsktobuyscreen_1[8 * v1 + 16];
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD **)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = v6;
  *(_BYTE *)(inited + 56) = 8;
  v11 = v9[1];
  *(_QWORD *)(inited + 64) = *v9;
  *(_QWORD *)(inited + 72) = v11;
  sub_1C0746EF8();
  v12 = sub_1C06F60CC(inited);
  v43 = 1;
  v13 = sub_1C06F5B4C(MEMORY[0x1E0DEE9D8]);
  URL.init(action:params:arrayParams:scheme:)(&v42, v12, v13, &v43, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7) == 1)
  {
    sub_1C068F314(*(_QWORD *)(v0 + 192));
    v2 = 0xD000000000000021;
    v3 = "Failed to create message send URL";
    goto LABEL_5;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  if (qword_1EF61A398 != -1)
    swift_once();
  v17 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 224);
  v18 = *(_QWORD *)(v0 + 200);
  v19 = *(_QWORD *)(v0 + 208);
  v20 = sub_1C0747720();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EF61D388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v16, v18);
  v21 = sub_1C0747708();
  v22 = sub_1C0747D68();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 200);
  if (v23)
  {
    v41 = *(_QWORD *)(v0 + 208);
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v44 = v27;
    *(_DWORD *)v26 = 136315138;
    sub_1C06A28F0();
    v28 = sub_1C0748248();
    *(_QWORD *)(v0 + 176) = sub_1C069092C(v28, v29, &v44);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    v30 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v30(v24, v25);
    _os_log_impl(&dword_1C0671000, v21, v22, "Launching with %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v27, -1, -1);
    MEMORY[0x1C3BA0D04](v26, -1, -1);
  }
  else
  {
    v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 208) + 8);
    v30(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  }

  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  v32 = *(_QWORD *)(v0 + 224);
  if (v31)
  {
    v33 = v31;
    v34 = (void *)sub_1C0747258();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BD78);
    v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C074B820;
    *(_QWORD *)(v35 + 32) = 0xD000000000000013;
    *(_QWORD *)(v35 + 40) = 0x80000001C07534F0;
    *(_QWORD *)(v35 + 72) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(v35 + 48) = 1;
    sub_1C06F61D8(v35);
    v36 = (void *)sub_1C07477E0();
    swift_bridgeObjectRelease();
    v37 = objc_msgSend(v33, sel_openSensitiveURL_withOptions_, v34, v36);

    v38 = *(_QWORD *)(v0 + 224);
    v39 = *(_QWORD *)(v0 + 200);
    if (v37)
    {
      v30(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));

      v14 = 0;
    }
    else
    {
      v14 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000017, 0x80000001C0753510, 500);

      v30(v38, v39);
    }
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 200);
    v14 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD00000000000002ELL, 0x80000001C07534C0, 500);
    v30(v32, v40);
  }
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v14);
}

uint64_t type metadata accessor for MessageConduit()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessageConduit()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessageConduit.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1C06A28F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61BD80;
  if (!qword_1EF61BD80)
  {
    v1 = sub_1C07472C4();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61BD80);
  }
  return result;
}

uint64_t sub_1C06A293C(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD **v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  id v57;
  id v58;
  uint64_t v59;
  __int128 v60;

  v14 = *((_QWORD *)a3 + 2);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC6People10FindMyItem_type) = a5;
  v15 = v8 + OBJC_IVAR____TtC6People10FindMyItem_contactPerson;
  v60 = *a3;
  *(_OWORD *)v15 = *a3;
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC6People10FindMyItem_motionState) = a6;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC6People10FindMyItem_latitude) = a7;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC6People10FindMyItem_longitude) = a8;
  type metadata accessor for DaemonConnection();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v17 = (void *)objc_opt_self();
  v18 = (id)v60;
  sub_1C0746EF8();
  v58 = a7;
  v57 = a8;
  v19 = objc_msgSend(v17, sel_bundleForClass_, ObjCClassFromMetadata);
  v20 = sub_1C07471EC();
  v22 = v21;

  v23 = v8 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
  v24 = sub_1C07473E4();
  v25 = *(_QWORD *)(v24 - 8);
  v59 = a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, a4, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v8 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate, 1, 1, v24);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC6People13IndexableItem_keywordStrings) = MEMORY[0x1E0DEE9D8];
  v26 = (uint64_t *)(v8 + OBJC_IVAR____TtC6People13IndexableItem_title);
  *v26 = v20;
  v26[1] = v22;
  v27 = (_QWORD *)(v8 + OBJC_IVAR____TtC6People13IndexableItem_description);
  *v27 = 0;
  v27[1] = 0xE000000000000000;
  *(_QWORD *)(v8 + 16) = v60;
  v28 = (_QWORD *)(v8 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
  *v28 = a1;
  v28[1] = a2;
  swift_bridgeObjectRelease();
  v29 = (_QWORD **)(v8 + OBJC_IVAR____TtC6People13IndexableItem_keywordStrings);
  swift_beginAccess();
  v30 = *v29;
  swift_retain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v29 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v30 = sub_1C06B3530(0, v30[2] + 1, 1, v30);
    *v29 = v30;
  }
  v33 = v30[2];
  v32 = v30[3];
  if (v33 >= v32 >> 1)
  {
    v30 = sub_1C06B3530((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
    *v29 = v30;
  }
  v30[2] = v33 + 1;
  v34 = &v30[2 * v33];
  v34[4] = 0x6E6F697461636F6CLL;
  v34[5] = 0xE800000000000000;
  swift_endAccess();
  sub_1C0747030();
  if (a5 == 2)
  {
    swift_beginAccess();
    v41 = *v29;
    sub_1C0746F64();
    v42 = swift_isUniquelyReferenced_nonNull_native();
    *v29 = v41;
    if ((v42 & 1) == 0)
    {
      v41 = sub_1C06B3530(0, v41[2] + 1, 1, v41);
      *v29 = v41;
    }
    v44 = v41[2];
    v43 = v41[3];
    if (v44 >= v43 >> 1)
    {
      v41 = sub_1C06B3530((_QWORD *)(v43 > 1), v44 + 1, 1, v41);
      *v29 = v41;
    }
    v41[2] = v44 + 1;
    v45 = &v41[2 * v44];
    v45[4] = 0xD000000000000011;
    v45[5] = 0x80000001C0753580;
  }
  else
  {
    if (a5 == 1)
    {
      swift_beginAccess();
      v46 = *v29;
      sub_1C0746F64();
      v47 = swift_isUniquelyReferenced_nonNull_native();
      *v29 = v46;
      if ((v47 & 1) == 0)
      {
        v46 = sub_1C06B3530(0, v46[2] + 1, 1, v46);
        *v29 = v46;
      }
      v49 = v46[2];
      v48 = v46[3];
      if (v49 >= v48 >> 1)
      {
        v46 = sub_1C06B3530((_QWORD *)(v48 > 1), v49 + 1, 1, v46);
        *v29 = v46;
      }
      v46[2] = v49 + 1;
      v39 = &v46[2 * v49];
      v40 = 0xEE00646572616853;
    }
    else
    {
      if (a5)
      {

        swift_release_n();
        v8 = 0;
        goto LABEL_30;
      }
      swift_beginAccess();
      v35 = *v29;
      sub_1C0746F64();
      v36 = swift_isUniquelyReferenced_nonNull_native();
      *v29 = v35;
      if ((v36 & 1) == 0)
      {
        v35 = sub_1C06B3530(0, v35[2] + 1, 1, v35);
        *v29 = v35;
      }
      v38 = v35[2];
      v37 = v35[3];
      if (v38 >= v37 >> 1)
      {
        v35 = sub_1C06B3530((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
        *v29 = v35;
      }
      v35[2] = v38 + 1;
      v39 = &v35[2 * v38];
      v40 = 0xEF64657461647055;
    }
    v39[4] = 0x6E6F697461636F6CLL;
    v39[5] = v40;
    swift_endAccess();
    sub_1C0747030();
    swift_beginAccess();
    v50 = *v29;
    sub_1C0746F64();
    v51 = swift_isUniquelyReferenced_nonNull_native();
    *v29 = v50;
    if ((v51 & 1) == 0)
    {
      v50 = sub_1C06B3530(0, v50[2] + 1, 1, v50);
      *v29 = v50;
    }
    v53 = v50[2];
    v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      v50 = sub_1C06B3530((_QWORD *)(v52 > 1), v53 + 1, 1, v50);
      *v29 = v50;
    }
    v50[2] = v53 + 1;
    v54 = &v50[2 * v53];
    v54[4] = 0x794D646E6946;
    v54[5] = 0xE600000000000000;
  }
  swift_endAccess();

  swift_release_n();
LABEL_30:
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v59, v24);
  return v8;
}

void sub_1C06A2F44()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6People10FindMyItem_contactPerson);
  swift_bridgeObjectRelease();

}

uint64_t sub_1C06A2F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C06A09F8(v0 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC6People10FindMyItem_contactPerson);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1C06A3090()
{
  sub_1C06A2F94();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06A30B4()
{
  return type metadata accessor for FindMyItem();
}

uint64_t type metadata accessor for FindMyItem()
{
  uint64_t result;

  result = qword_1EF61BDB0;
  if (!qword_1EF61BDB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C06A30F8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C06A3158(id *a1, _QWORD **a2, _QWORD **a3, uint64_t *a4)
{
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t result;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;

  v7 = *a1;
  v8 = objc_msgSend(*a1, sel_fullName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1C0747930();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  v13 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_1C06B3530(0, v13[2] + 1, 1, v13);
    *a2 = v13;
  }
  v16 = v13[2];
  v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    v13 = sub_1C06B3530((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
    *a2 = v13;
  }
  v13[2] = v16 + 1;
  v17 = &v13[2 * v16];
  v17[4] = v10;
  v17[5] = v12;
  v18 = objc_msgSend(v7, sel_appleID);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1C0747930();
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0xE000000000000000;
  }
  v23 = *a3;
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v23;
  if ((v24 & 1) == 0)
  {
    v23 = sub_1C06B3530(0, v23[2] + 1, 1, v23);
    *a3 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_1C06B3530((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *a3 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = v20;
  v27[5] = v22;
  v28 = objc_msgSend(v7, sel_contactIncludingImage_, 0);
  v29 = v28;
  if (v28)
  {
    v30 = objc_msgSend(v28, sel_identifier);

    v29 = (void *)sub_1C0747930();
    v32 = v31;

  }
  else
  {
    v32 = 0xE000000000000000;
  }
  v33 = (_QWORD *)*a4;
  result = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v33;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C06B3530(0, v33[2] + 1, 1, v33);
    v33 = (_QWORD *)result;
    *a4 = result;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    result = (uint64_t)sub_1C06B3530((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    v33 = (_QWORD *)result;
    *a4 = result;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = v29;
  v37[5] = v32;
  return result;
}

void sub_1C06A33E8(void *a1, void *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;

  v4 = objc_msgSend(a1, sel_fullName);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1C0747930();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = objc_msgSend(a1, sel_appleID);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1C0747930();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0xE000000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C074B820;
  *(_QWORD *)(v14 + 32) = v6;
  *(_QWORD *)(v14 + 40) = v8;
  v15 = (void *)sub_1C0747B04();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setAttribute_forKey_, v15, *MEMORY[0x1E0CA6048]);

  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C074B820;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v13;
  v17 = (void *)sub_1C0747B04();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setAttribute_forKey_, v17, *MEMORY[0x1E0CA6030]);

  v18 = objc_msgSend(a1, sel_dsid);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(a2, sel_setAttribute_forKey_);

  }
}

void sub_1C06A35C0(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (a1 >> 62)
  {
    sub_1C0746EF8();
    v4 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v4)
      return;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return;
  }
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C0746EF8();
    v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1C3BA029C](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v11 = v6;
      sub_1C06A3158(&v11, &v14, &v13, &v12);

    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    sub_1C0746EF8();
    v8 = (void *)sub_1C0747B04();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setAttribute_forKey_, v8, *MEMORY[0x1E0CA67D8]);

    sub_1C0746EF8();
    v9 = (void *)sub_1C0747B04();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setAttribute_forKey_, v9, *MEMORY[0x1E0CA67D0]);

    sub_1C0746EF8();
    v10 = (void *)sub_1C0747B04();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setAttribute_forKey_, v10, *MEMORY[0x1E0CA67C8]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1C06A37B0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void (*v25)(char *, char *);
  void *v26;
  char **p_name;
  Swift::String_optional v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75[2];
  uint64_t v76;

  v4 = sub_1C07470FC();
  v74 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v68 - v11;
  v13 = sub_1C07472C4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v73 = (char *)&v68 - v18;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC6People12AskToBuyItem_thumbnailPath + 8))
    goto LABEL_4;
  sub_1C07472B8();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v19(v12, 1, v13) == 1)
  {
    sub_1C068A9AC((uint64_t)v12, &qword_1ED4FF788);
LABEL_4:
    if (qword_1EF61A378 != -1)
      swift_once();
    v20 = sub_1C0747720();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF61D340);
    v21 = sub_1C0747708();
    v22 = sub_1C0747D74();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1C0671000, v21, v22, "Missing thumbnail path in AskToBuy", v23, 2u);
      MEMORY[0x1C3BA0D04](v23, -1, -1);
    }

    return 0;
  }
  v70 = v14;
  v71 = v13;
  v25 = *(void (**)(char *, char *))(v14 + 32);
  v25(v73, v12);
  v26 = (void *)sub_1C074790C();
  p_name = &FamilyRequestFactory.name;
  objc_msgSend(a2, sel_setAttribute_forKey_, v26, *MEMORY[0x1E0CA6968]);

  v28 = String.trimToNil()();
  v72 = a1;
  if (v28.value._object)
  {
    v29 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setAttribute_forKey_, v29, *MEMORY[0x1E0CA6150]);

    a1 = v72;
  }
  v30 = (void *)sub_1C0748338();
  objc_msgSend(a2, sel_setAttribute_forKey_, v30, *MEMORY[0x1E0CA5FC0]);

  v31 = (void *)sub_1C06C8940();
  if (v31)
  {
    v32 = v31;
    v33 = (void *)sub_1C074790C();
    objc_msgSend(a2, sel_setAttribute_forKey_, v32, v33);

    a1 = v72;
  }
  sub_1C06A33E8(*(void **)(a1 + OBJC_IVAR____TtC6People12AskToBuyItem_familyMember), a2);
  sub_1C06A35C0(*(_QWORD *)(a1 + OBJC_IVAR____TtC6People12AskToBuyItem_requestApprovers), a2);
  v34 = (void *)sub_1C0747258();
  objc_msgSend(a2, sel_setAttribute_forKey_, v34, *MEMORY[0x1E0CA6960]);

  v35 = (void *)sub_1C074790C();
  objc_msgSend(a2, sel_setAttribute_forKey_, v35, *MEMORY[0x1E0CA63C0]);

  if ((unint64_t)String.trimToNil()().value._object)
  {
    v36 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setAttribute_forKey_, v36, *MEMORY[0x1E0CA6770]);

    a1 = v72;
  }
  objc_msgSend(a2, sel_setAttribute_forKey_, *(_QWORD *)(a1 + OBJC_IVAR____TtC6People12AskToBuyItem_starRating), *MEMORY[0x1E0CA68C0]);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC6People12AskToBuyItem_storeLink + 8))
  {
    v37 = (void (*)(char *, char *, uint64_t))v25;
    sub_1C07472B8();
    v38 = v71;
    if (v19(v10, 1, v71) == 1)
    {
      sub_1C068A9AC((uint64_t)v10, &qword_1ED4FF788);
    }
    else
    {
      v37(v17, v10, v38);
      v39 = (void *)sub_1C0747258();
      objc_msgSend(a2, sel_setAttribute_forKey_, v39, *MEMORY[0x1E0CA6108]);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v38);
    }
  }
  v40 = (void *)sub_1C074790C();
  objc_msgSend(a2, sel_setAttribute_forKey_, v40, *MEMORY[0x1E0CA60F8]);

  v41 = sub_1C06C8A10();
  v76 = MEMORY[0x1E0DEE9D8];
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    v68 = v41;
    v69 = a2;
    v43 = (uint64_t *)(v41 + 40);
    do
    {
      v44 = *(v43 - 1);
      v45 = *v43;
      v75[0] = v44;
      v75[1] = v45;
      sub_1C0746EF8();
      sub_1C07470F0();
      sub_1C068F2D0();
      v46 = sub_1C0747E64();
      v48 = v47;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v6, v4);
      swift_bridgeObjectRelease();
      v49 = HIBYTE(v48) & 0xF;
      if ((v48 & 0x2000000000000000) == 0)
        v49 = v46 & 0xFFFFFFFFFFFFLL;
      if (v49)
      {
        v50 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C06BF6B8(0, *(_QWORD *)(v50 + 16) + 1, 1);
          v50 = v76;
        }
        v52 = *(_QWORD *)(v50 + 16);
        v51 = *(_QWORD *)(v50 + 24);
        if (v52 >= v51 >> 1)
        {
          sub_1C06BF6B8(v51 > 1, v52 + 1, 1);
          v50 = v76;
        }
        *(_QWORD *)(v50 + 16) = v52 + 1;
        v53 = v50 + 16 * v52;
        *(_QWORD *)(v53 + 32) = v44;
        *(_QWORD *)(v53 + 40) = v45;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v43 += 2;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    v54 = v76;
    a2 = v69;
    p_name = (char **)(&FamilyRequestFactory + 24);
  }
  else
  {
    swift_bridgeObjectRelease();
    v54 = MEMORY[0x1E0DEE9D8];
  }
  if (qword_1EF61A378 != -1)
    swift_once();
  v55 = sub_1C0747720();
  __swift_project_value_buffer(v55, (uint64_t)qword_1EF61D340);
  sub_1C0746F64();
  v56 = sub_1C0747708();
  v57 = sub_1C0747D68();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v75[0] = v59;
    *(_DWORD *)v58 = 134218242;
    v76 = *(_QWORD *)(v54 + 16);
    sub_1C0747E40();
    sub_1C0747030();
    *(_WORD *)(v58 + 12) = 2080;
    v60 = *MEMORY[0x1E0CA6028];
    v61 = sub_1C0747930();
    v76 = sub_1C069092C(v61, v62, v75);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v56, v57, "Adding %ld identifiers for %s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    v63 = v59;
    p_name = (char **)(&FamilyRequestFactory + 24);
    MEMORY[0x1C3BA0D04](v63, -1, -1);
    MEMORY[0x1C3BA0D04](v58, -1, -1);

  }
  else
  {

    sub_1C0747030();
    v60 = *MEMORY[0x1E0CA6028];
  }
  v65 = v70;
  v64 = v71;
  v66 = (void *)sub_1C0747B04();
  sub_1C0747030();
  objc_msgSend(a2, p_name[276], v66, v60);

  v67 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, p_name[276], v67, *MEMORY[0x1E0CA6940]);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v73, v64);
  return 1;
}

uint64_t sub_1C06A409C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  void *v46;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51[2];
  uint64_t v52;

  v4 = sub_1C07470FC();
  v50 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07472C4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailPath + 8))
  {
    sub_1C07472B8();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      v15 = (void *)sub_1C0747258();
      objc_msgSend(a2, sel_setAttribute_forKey_, v15, *MEMORY[0x1E0CA6960]);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      goto LABEL_9;
    }
    sub_1C068A9AC((uint64_t)v9, &qword_1ED4FF788);
  }
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_thumbnailData + 8) >> 60 == 15)
    v14 = 0;
  else
    v14 = sub_1C07472E8();
  objc_msgSend(a2, sel_setAttribute_forKey_, v14, *MEMORY[0x1E0CA6948]);
  swift_unknownObjectRelease();
LABEL_9:
  v16 = (void *)sub_1C0748338();
  objc_msgSend(a2, sel_setAttribute_forKey_, v16, *MEMORY[0x1E0CA5FC0]);

  v17 = (void *)sub_1C069FE70();
  if (v17)
  {
    v18 = v17;
    v19 = (void *)sub_1C074790C();
    objc_msgSend(a2, sel_setAttribute_forKey_, v18, v19);

  }
  sub_1C06A33E8(*(void **)(a1 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_familyMember), a2);
  sub_1C06A35C0(*(_QWORD *)(a1 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_requestApprovers), a2);
  v20 = (void *)sub_1C074790C();
  objc_msgSend(a2, sel_setAttribute_forKey_, v20, *MEMORY[0x1E0CA67F0]);

  v21 = (void *)sub_1C0748338();
  v22 = (void *)sub_1C074790C();
  v49 = a2;
  objc_msgSend(a2, sel_setAttribute_forKey_, v21, v22);

  v23 = sub_1C069FC08();
  v52 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v48 = v23;
    v25 = (uint64_t *)(v23 + 40);
    do
    {
      v26 = *(v25 - 1);
      v27 = *v25;
      v51[0] = v26;
      v51[1] = v27;
      sub_1C0746EF8();
      sub_1C07470F0();
      sub_1C068F2D0();
      v28 = sub_1C0747E64();
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v4);
      swift_bridgeObjectRelease();
      v31 = HIBYTE(v30) & 0xF;
      if ((v30 & 0x2000000000000000) == 0)
        v31 = v28 & 0xFFFFFFFFFFFFLL;
      if (v31)
      {
        v32 = v52;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C06BF6B8(0, *(_QWORD *)(v32 + 16) + 1, 1);
          v32 = v52;
        }
        v34 = *(_QWORD *)(v32 + 16);
        v33 = *(_QWORD *)(v32 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_1C06BF6B8(v33 > 1, v34 + 1, 1);
          v32 = v52;
        }
        *(_QWORD *)(v32 + 16) = v34 + 1;
        v35 = v32 + 16 * v34;
        *(_QWORD *)(v35 + 32) = v26;
        *(_QWORD *)(v35 + 40) = v27;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    v36 = v52;
  }
  else
  {
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
  }
  if (qword_1EF61A378 != -1)
    swift_once();
  v37 = sub_1C0747720();
  __swift_project_value_buffer(v37, (uint64_t)qword_1EF61D340);
  sub_1C0746F64();
  v38 = sub_1C0747708();
  v39 = sub_1C0747D68();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v51[0] = v41;
    *(_DWORD *)v40 = 134218242;
    v52 = *(_QWORD *)(v36 + 16);
    sub_1C0747E40();
    sub_1C0747030();
    *(_WORD *)(v40 + 12) = 2080;
    v42 = *MEMORY[0x1E0CA6028];
    v43 = sub_1C0747930();
    v52 = sub_1C069092C(v43, v44, v51);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v38, v39, "Adding %ld identifiers for %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v41, -1, -1);
    MEMORY[0x1C3BA0D04](v40, -1, -1);

  }
  else
  {

    sub_1C0747030();
    v42 = *MEMORY[0x1E0CA6028];
  }
  v45 = v49;
  v46 = (void *)sub_1C0747B04();
  sub_1C0747030();
  objc_msgSend(v45, sel_setAttribute_forKey_, v46, v42);

  return 1;
}

void sub_1C06A4700(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  Swift::String_optional v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  Swift::String_optional v21;
  id v22;
  Swift::String_optional v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id *v38;
  uint64_t v39;
  id v40;
  void *v41;
  double v42;
  void *v43;
  double v44;
  void *v45;
  id v46;
  Swift::String_optional v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v4 = *(void **)(a1 + 16);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(a1 + 16), sel_identifier);
    sub_1C0747930();

  }
  v6 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v6.value._object)
  {
    v49 = MEMORY[0x1E0DEA968];
    v47 = v6;
    v7 = sub_1C06B39B4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_1C06B39B4((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    sub_1C0685D00(&v47, &v7[4 * v9 + 4]);
  }
  v10 = (void *)sub_1C0747B04();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setAttribute_forKey_, v10, *MEMORY[0x1E0CA6028]);

  if (v4)
  {
    v11 = v4;
    v12 = objc_msgSend(v11, sel_phoneNumbers);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EF61CE40);
    v13 = sub_1C0747B1C();

    if (v13 >> 62)
    {
      sub_1C0746EF8();
      v14 = sub_1C074814C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v14)
    {
      v15 = objc_msgSend(v11, sel_phoneNumbers);
      if (!v15)
      {
        sub_1C0747B1C();
        v15 = (id)sub_1C0747B04();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(a2, sel_setAttribute_forKey_, v15, *MEMORY[0x1E0CA6570]);

    }
    v16 = objc_msgSend(v11, sel_emailAddresses);
    v17 = sub_1C0747B1C();

    if (v17 >> 62)
    {
      sub_1C0746EF8();
      v18 = sub_1C074814C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v18)
    {
      v19 = objc_msgSend(v11, sel_emailAddresses);
      if (!v19)
      {
        sub_1C0747B1C();
        v19 = (id)sub_1C0747B04();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(a2, sel_setAttribute_forKey_, v19, *MEMORY[0x1E0CA6030]);

    }
    v46 = a2;
    v50 = MEMORY[0x1E0DEE9E8];
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97218]), sel_init);
    objc_msgSend(v20, sel_setStyle_, 0);
    v47.value._countAndFlagsBits = 0;
    v47.value._object = (void *)0xE000000000000000;
    v48 = v20;
    ContactFormatter.displayName(for:includePhone:)((CNContact)v11, 0);

    swift_bridgeObjectRelease();
    v21 = String.trimToNil()();
    swift_bridgeObjectRelease();
    if (v21.value._object)
    {
      sub_1C06D5370(&v47.value._countAndFlagsBits, v21.value._countAndFlagsBits, (uint64_t)v21.value._object);
      swift_bridgeObjectRelease();
    }
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97218]), sel_init);
    objc_msgSend(v22, sel_setStyle_, 1000);
    v47.value._countAndFlagsBits = 0;
    v47.value._object = (void *)0xE000000000000000;
    v48 = v22;
    ContactFormatter.displayName(for:includePhone:)((CNContact)v11, 0);

    swift_bridgeObjectRelease();
    v23 = String.trimToNil()();
    swift_bridgeObjectRelease();
    if (v23.value._object)
    {
      sub_1C06D5370(&v47.value._countAndFlagsBits, v23.value._countAndFlagsBits, (uint64_t)v23.value._object);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v50 + 16))
    {
      sub_1C06E092C(v50);
      swift_bridgeObjectRelease();
      v24 = (void *)sub_1C0747B04();
      sub_1C0747030();
      v25 = (id)*MEMORY[0x1E0CA6048];
      objc_msgSend(a2, sel_setAttribute_forKey_, v24, v25);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6People10FindMyItem_contactPerson + 8);
    v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6People10FindMyItem_contactPerson + 16);
    v28 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    sub_1C0746EF8();
    v29 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v28, sel_initWithStringValue_, v29);

    if (v30 && (v31 = objc_msgSend(v30, sel_fullyQualifiedDigits)) != 0)
    {
      v32 = v31;
      v33 = sub_1C0747930();
      v35 = v34;

      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1C074B820;
      *(_QWORD *)(v36 + 32) = v33;
      *(_QWORD *)(v36 + 40) = v35;
      v37 = (void *)sub_1C0747B04();
      swift_bridgeObjectRelease();
      v38 = (id *)MEMORY[0x1E0CA6570];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1C074B820;
      *(_QWORD *)(v39 + 32) = v27;
      *(_QWORD *)(v39 + 40) = v26;
      sub_1C0746EF8();
      v37 = (void *)sub_1C0747B04();
      swift_bridgeObjectRelease();
      v38 = (id *)MEMORY[0x1E0CA6030];
    }
    v40 = *v38;
    objc_msgSend(a2, sel_setAttribute_forKey_, v37, v40);

  }
  v41 = *(void **)(a1 + OBJC_IVAR____TtC6People10FindMyItem_latitude);
  objc_msgSend(v41, sel_doubleValue, v46, v47);
  if (v42 != 0.0)
  {
    v43 = *(void **)(a1 + OBJC_IVAR____TtC6People10FindMyItem_longitude);
    objc_msgSend(v43, sel_doubleValue);
    if (v44 != 0.0)
    {
      objc_msgSend(a2, sel_setLatitude_, v41);
      objc_msgSend(a2, sel_setLongitude_, v43);
    }
  }
  v45 = (void *)sub_1C0747CD8();
  objc_msgSend(a2, sel_setAttribute_forKey_, v45, *MEMORY[0x1E0CA6448]);

}

unint64_t sub_1C06A4E00(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char **p_name;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  char **v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1C07473E4();
  v5 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v76 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1C07470FC();
  v91 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v93 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07476B4();
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  MEMORY[0x1E0C80A78](v8);
  v88 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = MEMORY[0x1E0DEE9D8];
  v10 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C0746EF8();
    if (v11)
      goto LABEL_3;
LABEL_54:
    swift_bridgeObjectRelease();
    v66 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_50;
    goto LABEL_55;
  }
  sub_1C0746EF8();
  v11 = sub_1C074814C();
  if (!v11)
    goto LABEL_54;
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_63;
  }
  v85 = v5;
  v74 = a1 >> 62;
  v12 = 0;
  v82 = *MEMORY[0x1E0CA6968];
  v83 = a1 & 0xC000000000000001;
  v78 = *MEMORY[0x1E0CA6150];
  v77 = *MEMORY[0x1E0CA6428];
  v81 = *MEMORY[0x1E0CA60B0];
  v80 = *MEMORY[0x1E0CA60D0];
  v79 = *MEMORY[0x1E0CA6450];
  p_name = (char **)(&FamilyRequestFactory + 24);
  v75 = *MEMORY[0x1E0CA6570];
  v86 = v4;
  v87 = a1;
  v84 = v11;
  do
  {
    if (v83)
    {
      v14 = MEMORY[0x1C3BA029C](v12, a1);
    }
    else
    {
      v14 = *(_QWORD *)(a1 + 8 * v12 + 32);
      sub_1C0746F64();
    }
    v15 = v88;
    sub_1C07476A8();
    v16 = objc_allocWithZone(MEMORY[0x1E0CA6B50]);
    v17 = (void *)sub_1C074769C();
    v18 = objc_msgSend(v16, sel_initWithContentType_, v17);

    (*(void (**)(char *, uint64_t))(v89 + 8))(v15, v90);
    v19 = (void *)sub_1C074790C();
    objc_msgSend(v18, p_name[276], v19, v82);

    v20 = p_name;
    v21 = *(_QWORD *)(v14 + OBJC_IVAR____TtC6People13IndexableItem_description + 8);
    v95 = *(_QWORD *)(v14 + OBJC_IVAR____TtC6People13IndexableItem_description);
    v96 = v21;
    sub_1C0746EF8();
    v22 = v93;
    sub_1C07470F0();
    sub_1C068F2D0();
    v23 = sub_1C0747E64();
    v25 = v24;
    v26 = *(void (**)(char *, uint64_t))(v91 + 8);
    v26(v22, v94);
    if ((v25 & 0x2000000000000000) != 0)
      v27 = HIBYTE(v25) & 0xF;
    else
      v27 = v23 & 0xFFFFFFFFFFFFLL;
    swift_bridgeObjectRelease();
    if (v27)
    {
      v28 = (void *)sub_1C074790C();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, (SEL)v20 + 817, v28, v78);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    p_name = v20;
    swift_beginAccess();
    v29 = sub_1C0746EF8();
    v30 = (void *)sub_1C06DAF80(v29);
    swift_bridgeObjectRelease();
    a1 = v87;
    if (v30)
    {
      objc_msgSend(v18, (SEL)v20 + 817, v30, v77);

    }
    v31 = *(void **)(v14 + 16);
    if (v31)
    {
      v32 = objc_msgSend(v31, sel_identifier);
      v33 = sub_1C0747930();
      v35 = v34;

      p_name = (char **)(&FamilyRequestFactory + 24);
    }
    else
    {
      v33 = 0;
      v35 = 0xE000000000000000;
    }
    v95 = v33;
    v96 = v35;
    v36 = v93;
    sub_1C07470F0();
    v37 = sub_1C0747E64();
    v39 = v38;
    v26(v36, v94);
    if ((v39 & 0x2000000000000000) != 0)
      v40 = HIBYTE(v39) & 0xF;
    else
      v40 = v37 & 0xFFFFFFFFFFFFLL;
    swift_bridgeObjectRelease();
    if (v40)
    {
      v41 = (void *)sub_1C074790C();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v41 = (void *)sub_1C074790C();
    }
    objc_msgSend(v18, p_name[276], v41, v81, v74);

    v42 = (uint64_t)v86;
    sub_1C06A5810(v14 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate, (uint64_t)v86);
    v43 = v85;
    v44 = v92;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v42, 1, v92) == 1)
    {
      sub_1C068A9AC(v42, &qword_1EF61BC58);
    }
    else
    {
      v45 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v76, v42, v44);
      v46 = (void *)sub_1C074736C();
      objc_msgSend(v18, sel_setExpirationDate_, v46);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
    }
    v47 = (void *)sub_1C074736C();
    objc_msgSend(v18, p_name[276], v47, v80);

    v48 = (void *)sub_1C074736C();
    objc_msgSend(v18, p_name[276], v48, v79);

    v49 = *(void **)(v14 + 16);
    if (v49)
    {
      v50 = v49;
      v51 = objc_msgSend(v50, sel_phoneNumbers);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EF61CE40);
      v52 = sub_1C0747B1C();

      if (v52 >> 62)
      {
        sub_1C0746EF8();
        v53 = sub_1C074814C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v53)
      {
        v54 = objc_msgSend(v50, sel_phoneNumbers);
        if (!v54)
        {
          sub_1C0747B1C();
          v54 = (id)sub_1C0747B04();
          swift_bridgeObjectRelease();
        }
        p_name = &FamilyRequestFactory.name;
        objc_msgSend(v18, sel_setAttribute_forKey_, v54, v75);

        v50 = v54;
      }
      else
      {
        p_name = &FamilyRequestFactory.name;
      }

    }
    type metadata accessor for AskToBuyItem();
    v55 = swift_dynamicCastClass();
    if (v55)
    {
      v56 = v55;
      sub_1C0746F64();
      LOBYTE(v56) = sub_1C06A37B0(v56, v18);
      sub_1C0747030();
      if ((v56 & 1) == 0)
        goto LABEL_5;
    }
    type metadata accessor for ScreenTimeRequestItem();
    v57 = swift_dynamicCastClass();
    if (v57 && (v58 = v57, sub_1C0746F64(), LOBYTE(v58) = sub_1C06A409C(v58, v18), sub_1C0747030(), (v58 & 1) == 0))
    {
LABEL_5:
      sub_1C0747030();
    }
    else
    {
      type metadata accessor for FindMyItem();
      v59 = swift_dynamicCastClass();
      if (v59)
      {
        v60 = v59;
        sub_1C0746F64();
        sub_1C06A4700(v60, v18);
        sub_1C0747030();
      }
      v61 = objc_allocWithZone(MEMORY[0x1E0CA6B48]);
      sub_1C0746EF8();
      v62 = v18;
      v63 = (void *)sub_1C074790C();
      swift_bridgeObjectRelease();
      v64 = objc_msgSend(v61, sel_initWithUniqueIdentifier_domainIdentifier_attributeSet_, v63, 0, v62);

      v65 = v64;
      MEMORY[0x1C3B9FD5C]();
      if (*(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C0747B58();
      sub_1C0747BA0();
      sub_1C0747B34();
      sub_1C0747030();

      p_name = (char **)(&FamilyRequestFactory + 24);
    }
    ++v12;

  }
  while (v84 != v12);
  swift_bridgeObjectRelease();
  v66 = v97;
  v10 = v74;
  if (!(v97 >> 62))
  {
LABEL_50:
    v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_51;
    goto LABEL_56;
  }
LABEL_55:
  sub_1C0746EF8();
  v67 = sub_1C074814C();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_51:
    if (v67 == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      return v66;
    goto LABEL_57;
  }
LABEL_56:
  sub_1C0746EF8();
  v68 = sub_1C074814C();
  swift_bridgeObjectRelease();
  if (v67 == v68)
    return v66;
LABEL_57:
  swift_bridgeObjectRelease();
  if (qword_1EF61A378 != -1)
LABEL_63:
    swift_once();
  v69 = sub_1C0747720();
  __swift_project_value_buffer(v69, (uint64_t)qword_1EF61D340);
  v70 = sub_1C0747708();
  v71 = sub_1C0747D74();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v72 = 0;
    _os_log_impl(&dword_1C0671000, v70, v71, "Failed to create all searchable items from input", v72, 2u);
    MEMORY[0x1C3BA0D04](v72, -1, -1);
  }

  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C06A5810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C06A5858(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  int64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _OWORD v46[2];
  _QWORD v47[2];
  __int128 v48;

  v38 = a3;
  v39 = a1;
  v40 = a2;
  v5 = sub_1C07473E4();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07476B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07476A8();
  v11 = objc_allocWithZone(MEMORY[0x1E0CA6B50]);
  v12 = (void *)sub_1C074769C();
  v13 = objc_msgSend(v11, sel_initWithContentType_, v12);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = *(_QWORD *)(a4 + 64);
  v44 = a4 + 64;
  v15 = 1 << *(_BYTE *)(a4 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  v37 = v18 - 1;
  sub_1C0746EF8();
  v19 = 0;
  if (!v17)
    goto LABEL_8;
LABEL_6:
  v22 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v23 = v22 | (v19 << 6);
  while (2)
  {
    v24 = *(_QWORD *)(a4 + 56);
    v25 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v23);
    v26 = v25[1];
    *(_QWORD *)&v45 = *v25;
    *((_QWORD *)&v45 + 1) = v26;
    sub_1C068A530(v24 + 32 * v23, (uint64_t)v46);
    sub_1C0746EF8();
    while (1)
    {
      sub_1C06A5C78((uint64_t)&v45, (uint64_t)v47);
      if (!v47[1])
      {
        sub_1C0747030();
        v30 = v41;
        sub_1C07473D8();
        v31 = (void *)sub_1C074736C();
        objc_msgSend(v13, sel_setAttribute_forKey_, v31, *MEMORY[0x1E0CA6450]);

        v32 = (void *)sub_1C074736C();
        objc_msgSend(v13, sel_setAttribute_forKey_, v32, *MEMORY[0x1E0CA5FB8]);

        if ((v38 & 1) != 0)
          objc_msgSend(v13, sel_setExpirationDate_, 0);
        v33 = objc_allocWithZone(MEMORY[0x1E0CA6B48]);
        v34 = v13;
        sub_1C0746EF8();
        v35 = (void *)sub_1C074790C();
        swift_bridgeObjectRelease();
        v36 = objc_msgSend(v33, sel_initWithUniqueIdentifier_domainIdentifier_attributeSet_, v35, 0, v34);

        objc_msgSend(v36, sel_setIsUpdate_, 1);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
        return;
      }
      sub_1C0685D00(&v48, &v45);
      __swift_project_boxed_opaque_existential_1(&v45, *((uint64_t *)&v46[0] + 1));
      v20 = sub_1C0748278();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v45);
      v21 = (void *)sub_1C074790C();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setAttribute_forKey_, v20, v21);
      swift_unknownObjectRelease();

      if (v17)
        goto LABEL_6;
LABEL_8:
      v27 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v27 < v18)
      {
        v28 = *(_QWORD *)(v44 + 8 * v27);
        if (v28)
          goto LABEL_11;
        v29 = v19 + 2;
        ++v19;
        if (v27 + 1 < v18)
        {
          v28 = *(_QWORD *)(v44 + 8 * v29);
          if (v28)
            goto LABEL_14;
          v19 = v27 + 1;
          if (v27 + 2 < v18)
          {
            v28 = *(_QWORD *)(v44 + 8 * (v27 + 2));
            if (v28)
            {
              v27 += 2;
              goto LABEL_11;
            }
            v29 = v27 + 3;
            v19 = v27 + 2;
            if (v27 + 3 < v18)
              break;
          }
        }
      }
LABEL_25:
      v17 = 0;
      memset(v46, 0, sizeof(v46));
      v45 = 0u;
    }
    v28 = *(_QWORD *)(v44 + 8 * v29);
    if (v28)
    {
LABEL_14:
      v27 = v29;
LABEL_11:
      v17 = (v28 - 1) & v28;
      v23 = __clz(__rbit64(v28)) + (v27 << 6);
      v19 = v27;
      continue;
    }
    break;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v18)
    {
      v19 = v37;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v44 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_11;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1C06A5C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1C06A5CC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *result;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t i;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31[2];
  _QWORD v32[2];
  _BYTE v33[32];
  _QWORD *v34;

  v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v27 = (unint64_t)(v3 + 63) >> 6;
  result = (_QWORD *)sub_1C0746EF8();
  v7 = 0;
  if (v5)
    goto LABEL_28;
LABEL_6:
  v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v8 < v27)
    {
      v9 = *(_QWORD *)(v26 + 8 * v8);
      ++v7;
      if (v9)
        goto LABEL_21;
      v7 = v8 + 1;
      if (v8 + 1 >= v27)
        goto LABEL_29;
      v9 = *(_QWORD *)(v26 + 8 * v7);
      if (v9)
        goto LABEL_21;
      v7 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_29;
      v9 = *(_QWORD *)(v26 + 8 * v7);
      if (v9)
        goto LABEL_21;
      v7 = v8 + 3;
      if (v8 + 3 >= v27)
        goto LABEL_29;
      v9 = *(_QWORD *)(v26 + 8 * v7);
      if (v9)
      {
LABEL_21:
        v5 = (v9 - 1) & v9;
        for (i = __clz(__rbit64(v9)) + (v7 << 6); ; i = v24 | (v7 << 6))
        {
          v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
          v13 = *v12;
          v14 = v12[1];
          sub_1C068A530(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)v33);
          v32[0] = v13;
          v32[1] = v14;
          sub_1C0746EF8();
          sub_1C06A67C8(v13, v14, (uint64_t)v33, (uint64_t)&v28);
          sub_1C068A9AC((uint64_t)v32, &qword_1EF61BF70);
          if (v29)
          {
            sub_1C0685BC4(&v28, (uint64_t)v31);
            sub_1C0685BC4(v31, (uint64_t)&v28);
            v15 = v34;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v15 = sub_1C06B3768(0, v15[2] + 1, 1, v15);
              v34 = v15;
            }
            v17 = v15[2];
            v16 = v15[3];
            if (v17 >= v16 >> 1)
              v34 = sub_1C06B3768((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
            v18 = v29;
            v19 = v30;
            v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v29);
            MEMORY[0x1E0C80A78](v20);
            v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v23 + 16))(v22);
            sub_1C06A7A9C(v17, (uint64_t)v22, (uint64_t *)&v34, v18, v19);
            result = (_QWORD *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
            if (!v5)
              goto LABEL_6;
          }
          else
          {
            result = (_QWORD *)sub_1C068A9AC((uint64_t)&v28, &qword_1EF61BF78);
            if (!v5)
              goto LABEL_6;
          }
LABEL_28:
          v24 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v10 = v8 + 4;
      if (v10 < v27)
      {
        v9 = *(_QWORD *)(v26 + 8 * v10);
        if (v9)
        {
          v7 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          v7 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_31;
          if (v7 >= v27)
            break;
          v9 = *(_QWORD *)(v26 + 8 * v7);
          ++v10;
          if (v9)
            goto LABEL_21;
        }
      }
    }
LABEL_29:
    sub_1C0747030();
    return v34;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C06A5FC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = sub_1C0746EF8();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    sub_1C0746EF8();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C06B38A8(0, v9[2] + 1, 1, v9);
      v9 = (_QWORD *)result;
    }
    v17 = v9[2];
    v16 = v9[3];
    if (v17 >= v16 >> 1)
    {
      result = (uint64_t)sub_1C06B38A8((_QWORD *)(v16 > 1), v17 + 1, 1, v9);
      v9 = (_QWORD *)result;
    }
    v9[2] = v17 + 1;
    v9[v17 + 4] = v15;
    if (v5)
      goto LABEL_4;
LABEL_5:
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v6)
      goto LABEL_27;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_27;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_27;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_27;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_20:
    v5 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_27:
    sub_1C0747030();
    return (uint64_t)v9;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_27;
    v13 = *(_QWORD *)(v2 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t kPeopleOverrideConactIdentifierKey.getter()
{
  return 0xD000000000000011;
}

void sub_1C06A61B4()
{
  strcpy((char *)&qword_1EF61BED0, "FindMyStatus");
  algn_1EF61BED8[5] = 0;
  *(_WORD *)&algn_1EF61BED8[6] = -5120;
}

uint64_t kPeopleOverrideLocationStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2A0, &qword_1EF61BED0);
}

void sub_1C06A6200()
{
  qword_1EF61BEE0 = 0x7975426F546B7341;
  *(_QWORD *)algn_1EF61BEE8 = 0xE800000000000000;
}

uint64_t kPeopleOverrideAskToBuyStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2A8, &qword_1EF61BEE0);
}

void sub_1C06A6244()
{
  qword_1EF61BEF0 = 0x6C62616C69617641;
  *(_QWORD *)algn_1EF61BEF8 = 0xEF73757461745365;
}

uint64_t kPeopleOverrideAvailableStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2B0, &qword_1EF61BEF0);
}

void sub_1C06A6294()
{
  qword_1EF61BF00 = 0x69546E6565726353;
  *(_QWORD *)algn_1EF61BF08 = 0xEA0000000000656DLL;
}

uint64_t kPeopleOverrideScreenTimeStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2B8, &qword_1EF61BF00);
}

unint64_t kPeopleOverrideDODStatusKey.getter()
{
  return 0xD000000000000010;
}

void sub_1C06A62F8()
{
  qword_1EF61BF10 = 0x61446C6F6F686353;
  *(_QWORD *)algn_1EF61BF18 = 0xE900000000000079;
}

uint64_t kPeopleOverrideSchooleDayStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2C0, &qword_1EF61BF10);
}

void sub_1C06A6340()
{
  qword_1EF61BF20 = 0x614364657373694DLL;
  *(_QWORD *)algn_1EF61BF28 = 0xEA00000000006C6CLL;
}

uint64_t kPeopleOverrideMissedCallStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2C8, &qword_1EF61BF20);
}

void sub_1C06A6388()
{
  strcpy((char *)&qword_1EF61BF30, "UnreadMessage");
  *(_WORD *)&algn_1EF61BF38[6] = -4864;
}

uint64_t kPeopleOverrideUnreadMessageStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2D0, &qword_1EF61BF30);
}

void sub_1C06A63D8()
{
  qword_1EF61BF40 = 0x6E6F69746F4DLL;
  *(_QWORD *)algn_1EF61BF48 = 0xE600000000000000;
}

uint64_t kPeopleOverrideMotionStatusKey.getter()
{
  return sub_1C06A6418(&qword_1EF61A2D8, &qword_1EF61BF40);
}

uint64_t sub_1C06A6418(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  sub_1C0746EF8();
  return v3;
}

uint64_t PeopleDemoOverride.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PeopleDemoOverride.init()()
{
  uint64_t v0;

  return v0;
}

void sub_1C06A6484(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;

  if (qword_1EF61A390 != -1)
    swift_once();
  v2 = sub_1C0747720();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF61D370);
  swift_bridgeObjectRetain_n();
  v3 = sub_1C0747708();
  v4 = sub_1C0747D80();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 136315394;
    sub_1C069092C(0xD00000000000001BLL, 0x80000001C0753620, &v14);
    sub_1C0747E40();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1C0746EF8();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BF58);
    v8 = MEMORY[0x1C3B9FD8C](a1, v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_1C069092C(v8, v10, &v14);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v3, v4, "%s - writing overrides: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v6, -1, -1);
    MEMORY[0x1C3BA0D04](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1ED4FFE60 != -1)
    swift_once();
  v11 = (id)qword_1ED4FFE58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BF58);
  v12 = (void *)sub_1C0747B04();
  v13 = (void *)sub_1C074790C();
  objc_msgSend(v11, sel_setObject_forKey_, v12, v13);

}

uint64_t sub_1C06A6738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  sub_1C0746EF8();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *a4;
  *a4 = 0x8000000000000000;
  sub_1C06A7980(a3, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06A67C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *object;
  unint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v47;
  char v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  const char *v52;
  char countAndFlagsBits;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  unint64_t *v67;
  void *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86[3];
  uint64_t v87;
  uint64_t v88;

  v83 = a1;
  v7 = sub_1C07473E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v79 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v82 = (char *)&v73 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v73 - v16;
  *(_QWORD *)(a4 + 32) = 0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  sub_1C07473D8();
  if (qword_1EF61A390 != -1)
    swift_once();
  v78 = sub_1C0747720();
  v18 = __swift_project_value_buffer(v78, (uint64_t)qword_1EF61D370);
  sub_1C068A530(a3, (uint64_t)v86);
  swift_bridgeObjectRetain_n();
  v80 = v18;
  v19 = sub_1C0747708();
  v20 = sub_1C0747D80();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = v7;
    v22 = a2;
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v76 = v15;
    v25 = v24;
    v85 = v24;
    *(_DWORD *)v23 = 136315394;
    v77 = v17;
    v75 = v8;
    sub_1C0746EF8();
    v84._countAndFlagsBits = sub_1C069092C(v83, v22, &v85);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    sub_1C068A530((uint64_t)v86, (uint64_t)&v84);
    v81 = a4;
    v74 = v21;
    v26 = sub_1C074796C();
    v84._countAndFlagsBits = sub_1C069092C(v26, v27, &v85);
    v8 = v75;
    v17 = v77;
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    _os_log_impl(&dword_1C0671000, v19, v20, "Parsing %s with %s", (uint8_t *)v23, 0x16u);
    v28 = v74;
    a4 = v81;
    swift_arrayDestroy();
    v29 = v25;
    v15 = v76;
    MEMORY[0x1C3BA0D04](v29, -1, -1);
    v30 = v23;
    a2 = v22;
    v7 = v28;
    MEMORY[0x1C3BA0D04](v30, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
  }

  v31 = v82;
  if (qword_1EF61A2A0 != -1)
    swift_once();
  v32 = v83;
  if ((qword_1EF61BED0 != v83 || *(_QWORD *)algn_1EF61BED8 != a2) && (sub_1C0748284() & 1) == 0)
  {
    if (qword_1EF61A2A8 != -1)
      swift_once();
    if (qword_1EF61BEE0 == v32 && *(_QWORD *)algn_1EF61BEE8 == a2 || (sub_1C0748284() & 1) != 0)
    {
      sub_1C068A530(a3, (uint64_t)v86);
      if ((swift_dynamicCast() & 1) == 0
        || (v47 = v15, sub_1C0747978(), swift_bridgeObjectRelease(), v48 = sub_1C06A7CAC(), v48 == 4))
      {
        v49 = sub_1C0747708();
        v50 = sub_1C0747D80();
        if (!os_log_type_enabled(v49, v50))
        {
LABEL_29:

          return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
        }
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        v52 = "Invalid product type";
LABEL_28:
        _os_log_impl(&dword_1C0671000, v49, v50, v52, v51, 2u);
        MEMORY[0x1C3BA0D04](v51, -1, -1);
        goto LABEL_29;
      }
      v57 = v48;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v17, v7);
      type metadata accessor for PeopleFeatureFlags();
      v58 = swift_allocObject();
      *(_QWORD *)(v58 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
      if (qword_1ED500188 != -1)
        swift_once();
      v59 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
      swift_beginAccess();
      *(_QWORD *)(v58 + 16) = v59;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      sub_1C068A9AC(a4, &qword_1EF61BF78);
      v60 = (int *)type metadata accessor for AskToBuyRequestPersonStatus(0);
      v87 = (uint64_t)v60;
      v88 = sub_1C0684D6C(&qword_1EF61A8C8, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v86);
      *(_BYTE *)boxed_opaque_existential_1Tm = 0;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)boxed_opaque_existential_1Tm + v60[5], v47, v7);
      *((_BYTE *)boxed_opaque_existential_1Tm + v60[7]) = v57;
      *(uint64_t *)((char *)boxed_opaque_existential_1Tm + v60[6]) = v58;
      goto LABEL_43;
    }
    if (qword_1EF61A2B0 != -1)
      swift_once();
    if (qword_1EF61BEF0 == v32 && *(_QWORD *)algn_1EF61BEF8 == a2 || (sub_1C0748284() & 1) != 0)
    {
      sub_1C068A530(a3, (uint64_t)v86);
      if ((swift_dynamicCast() & 1) == 0)
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      countAndFlagsBits = v84._countAndFlagsBits;
      sub_1C068A9AC(a4, &qword_1EF61BF78);
      v54 = type metadata accessor for AvailabilityPersonStatus(0);
      v87 = v54;
      v88 = sub_1C0684D6C(&qword_1EF61A928, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
      v55 = __swift_allocate_boxed_opaque_existential_1Tm(v86);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v55 + *(int *)(v54 + 20), v17, v7);
      *(_BYTE *)v55 = (countAndFlagsBits & 1) == 0;
      v56 = (char *)v55 + *(int *)(v54 + 24);
LABEL_39:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v56, v17, v7);
      v45 = a4;
      return sub_1C06A9B88((uint64_t)v86, v45, &qword_1EF61BF78);
    }
    if (qword_1EF61A2B8 != -1)
      swift_once();
    if (qword_1EF61BF00 == v32 && *(_QWORD *)algn_1EF61BF08 == a2 || (sub_1C0748284() & 1) != 0)
    {
      sub_1C068A530(a3, (uint64_t)v86);
      if (!swift_dynamicCast() || (v84._countAndFlagsBits & 1) == 0)
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v17, v7);
      type metadata accessor for PeopleFeatureFlags();
      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
      v63 = v15;
      if (qword_1ED500188 != -1)
        swift_once();
      v64 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
      swift_beginAccess();
      *(_QWORD *)(v62 + 16) = v64;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      sub_1C068A9AC(a4, &qword_1EF61BF78);
      v65 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
      v66 = type metadata accessor for ScreenTimeRequestPersonStatus;
      v87 = v65;
      v67 = &qword_1EF61A8E8;
      v68 = &protocol conformance descriptor for ScreenTimeRequestPersonStatus;
    }
    else
    {
      if ((v32 != 0xD000000000000010 || a2 != 0x80000001C07535E0) && (sub_1C0748284() & 1) == 0)
      {
        if (qword_1EF61A2C8 != -1)
          swift_once();
        if (qword_1EF61BF20 == v32 && *(_QWORD *)algn_1EF61BF28 == a2 || (sub_1C0748284() & 1) != 0)
        {
          sub_1C068A530(a3, (uint64_t)v86);
          if (!swift_dynamicCast() || (v84._countAndFlagsBits & 1) == 0)
            return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
          sub_1C068A9AC(a4, &qword_1EF61BF78);
          v71 = type metadata accessor for MissedCallPersonStatus(0);
          v87 = v71;
          v88 = sub_1C0684D6C(&qword_1EF61A9B8, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
          v72 = __swift_allocate_boxed_opaque_existential_1Tm(v86);
          *v72 = 0x6465726F6E6769;
          v72[1] = 0xE700000000000000;
          *((_BYTE *)v72 + 16) = 1;
        }
        else
        {
          if (qword_1EF61A2D0 != -1)
            swift_once();
          if ((qword_1EF61BF30 != v32 || *(_QWORD *)algn_1EF61BF38 != a2) && (sub_1C0748284() & 1) == 0)
          {
            if (qword_1EF61A2D8 != -1)
              swift_once();
            if ((qword_1EF61BF40 != v32 || *(_QWORD *)algn_1EF61BF48 != a2) && (sub_1C0748284() & 1) == 0)
            {
              if (qword_1EF61A2C0 != -1)
                swift_once();
              return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
            }
            sub_1C068A530(a3, (uint64_t)v86);
            if ((swift_dynamicCast() & 1) != 0)
            {
              ActivityState.init(rawValue:)(v84);
              __asm { BR              X10 }
            }
            if (qword_1ED4FF8D0 != -1)
              swift_once();
            __swift_project_value_buffer(v78, (uint64_t)qword_1ED4FF8B0);
            v49 = sub_1C0747708();
            v50 = sub_1C0747D80();
            if (!os_log_type_enabled(v49, v50))
              goto LABEL_29;
            v51 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v51 = 0;
            v52 = "Unable to determin motion state";
            goto LABEL_28;
          }
          sub_1C068A530(a3, (uint64_t)v86);
          if (!swift_dynamicCast() || (v84._countAndFlagsBits & 1) == 0)
            return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
          sub_1C068A9AC(a4, &qword_1EF61BF78);
          v71 = type metadata accessor for MessagePersonStatus(0);
          v87 = v71;
          v88 = sub_1C0684D6C(&qword_1EF61A990, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
          v72 = __swift_allocate_boxed_opaque_existential_1Tm(v86);
          *v72 = 49;
          v72[1] = 0xE100000000000000;
          v72[2] = 2;
        }
        v56 = (char *)v72 + *(int *)(v71 + 24);
        goto LABEL_39;
      }
      sub_1C068A530(a3, (uint64_t)v86);
      if (!swift_dynamicCast() || (v84._countAndFlagsBits & 1) == 0)
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v17, v7);
      type metadata accessor for PeopleFeatureFlags();
      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
      v63 = v15;
      if (qword_1ED500188 != -1)
        swift_once();
      v70 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
      swift_beginAccess();
      *(_QWORD *)(v62 + 16) = v70;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      sub_1C068A9AC(a4, &qword_1EF61BF78);
      v65 = type metadata accessor for ChildStatePersonStatus(0);
      v66 = type metadata accessor for ChildStatePersonStatus;
      v87 = v65;
      v67 = &qword_1EF61A908;
      v68 = &protocol conformance descriptor for ChildStatePersonStatus;
    }
    v88 = sub_1C0684D6C(v67, v66, (uint64_t)v68);
    v69 = __swift_allocate_boxed_opaque_existential_1Tm(v86);
    *(_BYTE *)v69 = 0;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)v69 + *(int *)(v65 + 20), v63, v7);
    *(uint64_t *)((char *)v69 + *(int *)(v65 + 24)) = v62;
LABEL_43:
    v45 = a4;
    return sub_1C06A9B88((uint64_t)v86, v45, &qword_1EF61BF78);
  }
  sub_1C068A530(a3, (uint64_t)v86);
  if ((swift_dynamicCast() & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  v33 = v84._countAndFlagsBits;
  object = v84._object;
  v35 = ((unint64_t)v84._object >> 56) & 0xF;
  if (((uint64_t)v84._object & 0x2000000000000000) == 0)
    v35 = v84._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v35)
  {
    v81 = a4;
    v36 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v36(v15, v17, v7);
    v36(v31, v17, v7);
    type metadata accessor for PeopleFeatureFlags();
    v37 = swift_allocObject();
    v38 = v7;
    v39 = v15;
    *(_QWORD *)(v37 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
    if (qword_1ED500188 != -1)
      swift_once();
    v40 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
    swift_beginAccess();
    *(_QWORD *)(v37 + 16) = v40;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v38);
    v41 = v81;
    sub_1C068A9AC(v81, &qword_1EF61BF78);
    v42 = (int *)type metadata accessor for LocationPersonStatus(0);
    v87 = (uint64_t)v42;
    v88 = sub_1C0684D6C(&qword_1EF61A948, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
    v43 = __swift_allocate_boxed_opaque_existential_1Tm(v86);
    *v43 = v33;
    v43[1] = (uint64_t)object;
    v44 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v44((char *)v43 + v42[5], v39, v38);
    v44((char *)v43 + v42[6], v82, v38);
    *(uint64_t *)((char *)v43 + v42[7]) = v37;
    *(uint64_t *)((char *)v43 + v42[8]) = 0;
    v45 = v41;
    return sub_1C06A9B88((uint64_t)v86, v45, &qword_1EF61BF78);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  return swift_bridgeObjectRelease();
}

uint64_t PeopleDemoOverride.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PeopleDemoOverride.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06A7980(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C069C918(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = *(_QWORD *)(v19 + 8 * v12);
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C06DEE54();
      goto LABEL_7;
    }
    sub_1C0705B9C(v15, a4 & 1);
    v21 = sub_1C069C918(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C07223D4(v12, a2, a3, a1, v18);
      sub_1C0746EF8();
      return 0;
    }
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C06A7A9C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1Tm, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1C0685BC4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C06A7B14(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = sub_1C0746EF8();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return sub_1C0747030();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return sub_1C0747030();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return sub_1C0747030();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return sub_1C0747030();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    sub_1C0746EF8();
    sub_1C0746EF8();
    a2(v14, v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return sub_1C0747030();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return sub_1C0747030();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C06A7CAC()
{
  unint64_t v0;

  v0 = sub_1C07481AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1C06A7CF4(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  _QWORD *v34;
  unint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  BOOL v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50[5];

  if (!os_variant_has_internal_ui())
    return sub_1C06F8D3C(MEMORY[0x1E0DEE9D8]);
  if (qword_1EF61A390 != -1)
    goto LABEL_45;
LABEL_3:
  v3 = sub_1C0747720();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EF61D370);
  swift_bridgeObjectRetain_n();
  v4 = sub_1C0747708();
  v5 = sub_1C0747D80();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v50[0] = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)&v49[0] = sub_1C069092C(0xD000000000000017, 0x80000001C0753680, v50);
    sub_1C0747E40();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1C0746EF8();
    *(_QWORD *)&v49[0] = sub_1C069092C(a1, a2, v50);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v4, v5, "%s - internal device for contactID: -%s-", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v7, -1, -1);
    MEMORY[0x1C3BA0D04](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1ED4FFE60 != -1)
    swift_once();
  v9 = (id)qword_1ED4FFE58;
  v10 = (void *)sub_1C074790C();
  v11 = objc_msgSend(v9, sel_objectForKey_, v10);

  if (v11)
  {
    sub_1C0747EAC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v49, 0, sizeof(v49));
  }
  sub_1C06A9B88((uint64_t)v49, (uint64_t)v50, &qword_1ED4FFE98);
  if (v50[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BF68);
    if (swift_dynamicCast())
    {
      v12 = v48;
      goto LABEL_17;
    }
  }
  else
  {
    sub_1C068A9AC((uint64_t)v50, &qword_1ED4FFE98);
  }
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  v46 = sub_1C06F8D3C(MEMORY[0x1E0DEE9D8]);
  v44 = *(_QWORD *)(v12 + 16);
  if (v44)
  {
    v39 = v9;
    v47 = 0;
    v13 = a2;
    a2 = 0;
    v14 = 0;
    v40 = v13;
    v15 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v15 = a1 & 0xFFFFFFFFFFFFLL;
    v43 = v15;
    v16 = v12;
    v17 = *(_QWORD *)(v12 + 16);
    v42 = v12;
    while (1)
    {
      v18 = *(_QWORD *)(v16 + 8 * a2 + 32);
      if (!*(_QWORD *)(v18 + 16))
        goto LABEL_29;
      sub_1C0746EF8();
      v19 = sub_1C069C918(0xD000000000000011, 0x80000001C07535C0);
      if ((v20 & 1) == 0)
        break;
      sub_1C068A530(*(_QWORD *)(v18 + 56) + 32 * v19, (uint64_t)v50);
      if ((swift_dynamicCast() & 1) == 0)
        break;
      v22 = *((_QWORD *)&v49[0] + 1);
      v21 = *(_QWORD *)&v49[0];
      swift_bridgeObjectRetain_n();
      v23 = sub_1C0747708();
      v24 = sub_1C0747D80();
      if (os_log_type_enabled(v23, v24))
      {
        v41 = v14;
        v25 = v21;
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v50[0] = v27;
        *(_DWORD *)v26 = 136315394;
        *(_QWORD *)&v49[0] = sub_1C069092C(0xD000000000000017, 0x80000001C0753680, v50);
        sub_1C0747E40();
        *(_WORD *)(v26 + 12) = 2080;
        sub_1C0746EF8();
        *(_QWORD *)&v49[0] = sub_1C069092C(v25, v22, v50);
        sub_1C0747E40();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0671000, v23, v24, "%s - contactsID to override: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3BA0D04](v27, -1, -1);
        v28 = v26;
        v21 = v25;
        v14 = v41;
        MEMORY[0x1C3BA0D04](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BF60);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074B820;
      *(_QWORD *)(inited + 32) = v21;
      *(_QWORD *)(inited + 40) = v22;
      sub_1C0746EF8();
      v34 = sub_1C06A5CC0(v18);
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 48) = v34;
      v35 = sub_1C06F5E9C(inited);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50[0] = v46;
      sub_1C069D094(v35, v47, isUniquelyReferenced_nonNull_native);
      v46 = v50[0];
      swift_bridgeObjectRelease();
      v17 = v44;
      if (v43)
      {
        if (v21 == a1 && v22 == v40)
        {

          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
        v37 = sub_1C0748284();
        swift_bridgeObjectRelease();
        if ((v37 & 1) != 0)
        {
LABEL_36:

          goto LABEL_42;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v38 = __OFADD__(v47++, 1);
      v16 = v42;
      if (v38)
      {
        __break(1u);
LABEL_45:
        swift_once();
        goto LABEL_3;
      }
LABEL_22:
      if (v17 == ++a2)
        goto LABEL_36;
    }
    swift_bridgeObjectRelease();
LABEL_29:
    v29 = sub_1C0747708();
    v30 = sub_1C0747D80();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v50[0] = v32;
      *(_DWORD *)v31 = 136315138;
      *(_QWORD *)(v31 + 4) = sub_1C069092C(0xD000000000000017, 0x80000001C0753680, v50);
      _os_log_impl(&dword_1C0671000, v29, v30, "%s - contactIdentifer is nil or contact is nil", (uint8_t *)v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v32, -1, -1);
      MEMORY[0x1C3BA0D04](v31, -1, -1);
    }

    goto LABEL_22;
  }

LABEL_42:
  swift_bridgeObjectRelease();
  return v46;
}

unint64_t sub_1C06A84B0(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **p_name;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  unint64_t result;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  if (!os_variant_has_internal_ui())
    return sub_1C06F5E9C(MEMORY[0x1E0DEE9D8]);
  v2 = sub_1C06A7CF4(0, 0xE000000000000000);
  v3 = sub_1C06A5FC0(v2);
  v4 = swift_bridgeObjectRelease();
  v47 = MEMORY[0x1E0DEE9E0];
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = 0;
    do
    {
      ++v6;
      MEMORY[0x1E0C80A78](v4);
      v7 = sub_1C0746EF8();
      sub_1C06A7B14(v7, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C06A9B80);
      v4 = swift_bridgeObjectRelease();
    }
    while (v5 != v6);
  }
  swift_bridgeObjectRelease();
  v8 = sub_1C06F5E9C(MEMORY[0x1E0DEE9D8]);
  if (a1 >> 62)
  {
LABEL_32:
    v42 = v8;
    sub_1C0746EF8();
    v9 = sub_1C074814C();
    swift_bridgeObjectRelease();
    v8 = v42;
    if (v9)
      goto LABEL_7;
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
LABEL_7:
      v46 = (_QWORD *)v8;
      v10 = a1 & 0xC000000000000001;
      sub_1C0746EF8();
      v11 = 4;
      p_name = &FamilyRequestFactory.name;
      v44 = v9;
      v45 = a1;
      v43 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v10)
          v13 = (id)MEMORY[0x1C3BA029C](v11 - 4, a1);
        else
          v13 = *(id *)(a1 + 8 * v11);
        v14 = v13;
        v15 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v16 = objc_msgSend(v13, p_name[266]);
        v17 = sub_1C0747930();
        v19 = v18;

        if (*(_QWORD *)(v47 + 16) && (v20 = sub_1C069C918(v17, v19), (v21 & 1) != 0))
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v20);
          sub_1C0746EF8();
          swift_bridgeObjectRelease();
          v23 = objc_msgSend(v14, p_name[266]);
          v24 = sub_1C0747930();
          v26 = v25;

          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v29 = sub_1C069C918(v24, v26);
          v30 = v46[2];
          v8 = (v28 & 1) == 0;
          v31 = v30 + v8;
          if (__OFADD__(v30, v8))
            goto LABEL_30;
          a1 = v28;
          if (v46[3] >= v31)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1C06DEE54();
          }
          else
          {
            sub_1C0705B9C(v31, isUniquelyReferenced_nonNull_native);
            v32 = sub_1C069C918(v24, v26);
            if ((a1 & 1) != (v33 & 1))
            {
              result = sub_1C07482F0();
              __break(1u);
              return result;
            }
            v29 = v32;
          }
          if ((a1 & 1) != 0)
          {
            v34 = v46[7];
            swift_bridgeObjectRelease();
            *(_QWORD *)(v34 + 8 * v29) = v22;
          }
          else
          {
            v35 = &v46[v29 >> 6];
            v8 = v35[8] | (1 << v29);
            v35[8] = v8;
            v36 = (uint64_t *)(v46[6] + 16 * v29);
            *v36 = v24;
            v36[1] = v26;
            *(_QWORD *)(v46[7] + 8 * v29) = v22;
            v37 = v46[2];
            v38 = __OFADD__(v37, 1);
            v39 = v37 + 1;
            if (v38)
              goto LABEL_31;
            v46[2] = v39;
            sub_1C0746EF8();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = v44;
          a1 = v45;
          v10 = v43;
          p_name = (char **)(&FamilyRequestFactory + 24);
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        ++v11;
        if (v15 == v9)
        {
          swift_bridgeObjectRelease();
          v41 = (uint64_t)v46;
          goto LABEL_34;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v41 = sub_1C0746EF8();
LABEL_34:
  swift_bridgeObjectRelease();
  return v41;
}

BOOL _s6People0A12DemoOverrideC010isContactsC7EnabledSbyFZ_0()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _OWORD v8[2];

  if (qword_1ED4FFE60 != -1)
    swift_once();
  v0 = (id)qword_1ED4FFE58;
  v1 = (void *)sub_1C074790C();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_1C0747EAC();
    swift_unknownObjectRelease();
    sub_1C068A9AC((uint64_t)v8, &qword_1ED4FFE98);
    if ((byte_1EF61BF50 & 1) == 0)
    {
      if (qword_1EF61A390 != -1)
        swift_once();
      v3 = sub_1C0747720();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EF61D370);
      v4 = sub_1C0747708();
      v5 = sub_1C0747D80();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_1C0671000, v4, v5, "override defaults are available ", v6, 2u);
        MEMORY[0x1C3BA0D04](v6, -1, -1);
      }

      byte_1EF61BF50 = 1;
    }

  }
  else
  {
    memset(v8, 0, sizeof(v8));

    sub_1C068A9AC((uint64_t)v8, &qword_1ED4FFE98);
  }
  return v2 != 0;
}

uint64_t sub_1C06A8A40(char *a1, char *__src, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;

  v4 = __dst;
  v6 = __src;
  v7 = __src - a1;
  v8 = __src - a1 + 15;
  if (__src - a1 >= 0)
    v8 = __src - a1;
  v9 = v8 >> 4;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 4;
  v29 = a1;
  v28 = __dst;
  if (v9 >= v11 >> 4)
  {
    if (v10 < -15)
      goto LABEL_46;
    if (__dst != __src || &__src[16 * v12] <= __dst)
      memmove(__dst, __src, 16 * v12);
    v16 = &v4[16 * v12];
    v27 = v16;
    v29 = v6;
    if (a1 >= v6 || v10 < 16)
      goto LABEL_45;
    v17 = (char *)(a3 - 16);
    v18 = v6;
    v23 = v4;
    while (1)
    {
      v19 = v17 + 16;
      v20 = v16 - 16;
      v18 -= 16;
      sub_1C0746EF8();
      sub_1C0746EF8();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26 >= v25)
      {
        v27 = v16 - 16;
        if (v19 >= v16 && v17 < v16)
        {
          v21 = v23;
          if (v19 != v16)
            *(_OWORD *)v17 = *(_OWORD *)v20;
          v18 = v6;
          v16 -= 16;
          goto LABEL_43;
        }
        *(_OWORD *)v17 = *(_OWORD *)v20;
        v18 = v6;
        v16 -= 16;
      }
      else
      {
        if (v19 != v6 || v17 >= v6)
          *(_OWORD *)v17 = *(_OWORD *)v18;
        v29 = v18;
      }
      v21 = v23;
LABEL_43:
      if (v18 > a1)
      {
        v17 -= 16;
        v6 = v18;
        if (v16 > v21)
          continue;
      }
      goto LABEL_45;
    }
  }
  if (v7 >= -15)
  {
    if (__dst != a1 || &a1[16 * v9] <= __dst)
      memmove(__dst, a1, 16 * v9);
    v13 = &v4[16 * v9];
    v27 = v13;
    if ((unint64_t)v6 < a3 && v7 >= 16)
    {
      v14 = a1;
      do
      {
        sub_1C0746EF8();
        sub_1C0746EF8();
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26 >= v25)
        {
          if (v14 != v4)
            *(_OWORD *)v14 = *(_OWORD *)v4;
          v4 += 16;
          v28 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v14 < v6 || v14 >= v15 || v14 != v6)
            *(_OWORD *)v14 = *(_OWORD *)v6;
        }
        v14 += 16;
        if (v4 >= v13)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v29 = v14;
    }
LABEL_45:
    sub_1C0737C04((void **)&v29, (const void **)&v28, &v27);
    return 1;
  }
LABEL_46:
  sub_1C0747030();
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06A8D80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 16 * a3;
LABEL_5:
    v7 = v12;
    v8 = (_QWORD *)v6;
    while (1)
    {
      sub_1C0746EF8();
      sub_1C0746EF8();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v14 >= v13)
      {
LABEL_4:
        ++v4;
        v6 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v9 = *v8;
      v10 = v8[1];
      *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v10;
      *(v8 - 2) = v9;
      v8 -= 2;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C06A8E98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  unint64_t v86;
  uint64_t result;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *__dst;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v3 = a1[1];
  swift_retain_n();
  v4 = sub_1C074823C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_133;
    if (v3)
    {
      sub_1C0746F64();
      sub_1C06A8D80(0, v3, 1, a1);
    }
    swift_release_n();
    return sub_1C0747030();
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_141;
  v101 = v1;
  v91 = v4;
  v88 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v90 = MEMORY[0x1E0DEE9D8];
    if (v3 == 1)
      goto LABEL_13;
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_98:
    if (v11 >= 2)
    {
      v80 = *v88;
      do
      {
        v98 = v8;
        v81 = v11 - 2;
        if (v11 < 2)
          goto LABEL_128;
        if (!v80)
          goto LABEL_140;
        v82 = *(_QWORD *)&v98[16 * v81 + 32];
        v83 = *(_QWORD *)&v98[16 * v11 + 24];
        v84 = (char *)(v80 + 16 * *(_QWORD *)&v98[16 * v11 + 16]);
        sub_1C0746F64();
        sub_1C06A8A40((char *)(v80 + 16 * v82), v84, v80 + 16 * v83, __dst);
        if (v101)
          goto LABEL_110;
        sub_1C0747030();
        if (v83 < v82)
          goto LABEL_129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v98 = sub_1C0737EB0((uint64_t)v98);
        if (v81 >= *((_QWORD *)v98 + 2))
          goto LABEL_130;
        v85 = &v98[16 * v81 + 32];
        *(_QWORD *)v85 = v82;
        *((_QWORD *)v85 + 1) = v83;
        v86 = *((_QWORD *)v98 + 2);
        if (v11 > v86)
          goto LABEL_131;
        v8 = v98;
        memmove(&v98[16 * v11 + 16], &v98[16 * v11 + 32], 16 * (v86 - v11));
        *((_QWORD *)v98 + 2) = v86 - 1;
        v11 = v86 - 1;
      }
      while (v86 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v90 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return sub_1C0747030();
  }
  v6 = v5 >> 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BF80);
  v7 = sub_1C0747B88();
  *(_QWORD *)(v7 + 16) = v6;
  v90 = v7;
  __dst = (char *)(v7 + 32);
LABEL_13:
  v9 = 0;
  v10 = *a1;
  v89 = v10 + 24;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v92 = v3;
  v95 = v10;
  while (1)
  {
    v12 = v9++;
    v99 = v12;
    if (v9 < v3)
    {
      sub_1C0746EF8();
      sub_1C0746EF8();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        v13 = v89 + 16 * v12;
        while (1)
        {
          v13 += 16;
          sub_1C0746EF8();
          sub_1C0746EF8();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v103 < v102 == v103 >= v102)
            break;
          if (v92 == ++v9)
          {
            v9 = v92;
            break;
          }
        }
        v10 = v95;
        v12 = v99;
      }
      if (v103 >= v102)
      {
        v3 = v92;
      }
      else
      {
        v3 = v92;
        if (v9 < v12)
          goto LABEL_134;
        if (v12 < v9)
        {
          v14 = 16 * v9;
          v15 = 16 * v12;
          v16 = v9;
          v17 = v12;
          do
          {
            if (v17 != --v16)
            {
              if (!v10)
                goto LABEL_139;
              v18 = v10 + v14;
              v19 = *(_QWORD *)(v10 + v15);
              v20 = *(_QWORD *)(v10 + v15 + 8);
              *(_OWORD *)(v10 + v15) = *(_OWORD *)(v10 + v14 - 16);
              *(_QWORD *)(v18 - 16) = v19;
              *(_QWORD *)(v18 - 8) = v20;
            }
            ++v17;
            v14 -= 16;
            v15 += 16;
          }
          while (v17 < v16);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_132;
      if (v9 - v12 < v91)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_127;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1C0737B0C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v27 = *((_QWORD *)v8 + 2);
    v26 = *((_QWORD *)v8 + 3);
    v11 = v27 + 1;
    if (v27 >= v26 >> 1)
      v8 = sub_1C0737B0C((char *)(v26 > 1), v27 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v28 = v8 + 32;
    v29 = &v8[16 * v27 + 32];
    *(_QWORD *)v29 = v12;
    *((_QWORD *)v29 + 1) = v9;
    if (v27)
    {
      v10 = v95;
      v97 = v8;
      v100 = v8 + 32;
      v94 = v9;
      while (1)
      {
        v30 = v11 - 1;
        if (v11 >= 4)
        {
          v35 = &v28[16 * v11];
          v36 = *((_QWORD *)v35 - 8);
          v37 = *((_QWORD *)v35 - 7);
          v41 = __OFSUB__(v37, v36);
          v38 = v37 - v36;
          if (v41)
            goto LABEL_116;
          v40 = *((_QWORD *)v35 - 6);
          v39 = *((_QWORD *)v35 - 5);
          v41 = __OFSUB__(v39, v40);
          v33 = v39 - v40;
          v34 = v41;
          if (v41)
            goto LABEL_117;
          v42 = v11 - 2;
          v43 = &v28[16 * v11 - 32];
          v45 = *(_QWORD *)v43;
          v44 = *((_QWORD *)v43 + 1);
          v41 = __OFSUB__(v44, v45);
          v46 = v44 - v45;
          if (v41)
            goto LABEL_119;
          v41 = __OFADD__(v33, v46);
          v47 = v33 + v46;
          if (v41)
            goto LABEL_122;
          if (v47 >= v38)
          {
            v65 = &v28[16 * v30];
            v67 = *(_QWORD *)v65;
            v66 = *((_QWORD *)v65 + 1);
            v41 = __OFSUB__(v66, v67);
            v68 = v66 - v67;
            if (v41)
              goto LABEL_126;
            v58 = v33 < v68;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v59 = *((_QWORD *)v8 + 4);
            v60 = *((_QWORD *)v8 + 5);
            v41 = __OFSUB__(v60, v59);
            v52 = v60 - v59;
            v53 = v41;
            goto LABEL_80;
          }
          v32 = *((_QWORD *)v8 + 4);
          v31 = *((_QWORD *)v8 + 5);
          v41 = __OFSUB__(v31, v32);
          v33 = v31 - v32;
          v34 = v41;
        }
        if ((v34 & 1) != 0)
          goto LABEL_118;
        v42 = v11 - 2;
        v48 = &v28[16 * v11 - 32];
        v50 = *(_QWORD *)v48;
        v49 = *((_QWORD *)v48 + 1);
        v51 = __OFSUB__(v49, v50);
        v52 = v49 - v50;
        v53 = v51;
        if (v51)
          goto LABEL_121;
        v54 = &v28[16 * v30];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v41 = __OFSUB__(v55, v56);
        v57 = v55 - v56;
        if (v41)
          goto LABEL_124;
        if (__OFADD__(v52, v57))
          goto LABEL_125;
        if (v52 + v57 >= v33)
        {
          v58 = v33 < v57;
LABEL_86:
          if (v58)
            v30 = v42;
          goto LABEL_88;
        }
LABEL_80:
        if ((v53 & 1) != 0)
          goto LABEL_120;
        v61 = &v28[16 * v30];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v41 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v41)
          goto LABEL_123;
        if (v64 < v52)
          goto LABEL_15;
LABEL_88:
        v69 = v30 - 1;
        if (v30 - 1 >= v11)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v10)
          goto LABEL_138;
        v70 = v10;
        v71 = &v28[16 * v69];
        v72 = *(_QWORD *)v71;
        v73 = v30;
        v74 = &v28[16 * v30];
        v75 = *((_QWORD *)v74 + 1);
        v76 = (char *)(v70 + 16 * *(_QWORD *)v71);
        v77 = (char *)(v70 + 16 * *(_QWORD *)v74);
        v78 = v70 + 16 * v75;
        sub_1C0746F64();
        sub_1C06A8A40(v76, v77, v78, __dst);
        if (v101)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          sub_1C0747030();
          *(_QWORD *)(v90 + 16) = 0;
          swift_release_n();
          swift_bridgeObjectRelease();
          return sub_1C0747030();
        }
        sub_1C0747030();
        if (v75 < v72)
          goto LABEL_113;
        v8 = v97;
        if (v73 > *((_QWORD *)v97 + 2))
          goto LABEL_114;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v100[16 * v69 + 8] = v75;
        v79 = *((_QWORD *)v97 + 2);
        if (v73 >= v79)
          goto LABEL_115;
        v101 = 0;
        v11 = v79 - 1;
        memmove(v74, v74 + 16, 16 * (v79 - 1 - v73));
        v28 = v100;
        *((_QWORD *)v97 + 2) = v79 - 1;
        v58 = v79 > 2;
        v9 = v94;
        v10 = v95;
        if (!v58)
          goto LABEL_15;
      }
    }
    v11 = 1;
    v10 = v95;
LABEL_15:
    v3 = v92;
    if (v9 >= v92)
      goto LABEL_98;
  }
  v21 = v12 + v91;
  if (__OFADD__(v12, v91))
    goto LABEL_135;
  if (v21 >= v3)
    v21 = v3;
  if (v21 >= v12)
  {
    if (v9 != v21)
    {
      v22 = (_QWORD *)(v10 + 16 * v9);
      v93 = v21;
      do
      {
        v23 = v22;
        do
        {
          sub_1C0746EF8();
          sub_1C0746EF8();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v103 >= v102)
            break;
          if (!v10)
            goto LABEL_137;
          v24 = *v23;
          v25 = v23[1];
          *(_OWORD *)v23 = *((_OWORD *)v23 - 1);
          *(v23 - 1) = v25;
          *(v23 - 2) = v24;
          v23 -= 2;
          ++v12;
        }
        while (v9 != v12);
        ++v9;
        v22 += 2;
        v12 = v99;
      }
      while (v9 != v93);
      v9 = v93;
    }
    goto LABEL_48;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  swift_release_n();
  __break(1u);
LABEL_138:
  swift_release_n();
  __break(1u);
LABEL_139:
  swift_release_n();
  __break(1u);
LABEL_140:
  swift_release_n();
  __break(1u);
LABEL_141:
  swift_release_n();
  result = sub_1C0748110();
  __break(1u);
  return result;
}

uint64_t sub_1C06A9758(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5[2];

  v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1C073871C(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  sub_1C0746F64();
  sub_1C06A8E98(v5);
  sub_1C0747030();
  *a1 = v2;
  return swift_release_n();
}

uint64_t sub_1C06A97F8()
{
  int has_internal_ui;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD **v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v18[3];
  uint64_t v19;

  has_internal_ui = os_variant_has_internal_ui();
  v1 = MEMORY[0x1E0DEE9D8];
  if (has_internal_ui)
  {
    sub_1C06A7CF4(0, 0xE000000000000000);
    swift_getKeyPath();
    sub_1C0746F64();
    v2 = sub_1C0746EF8();
    v3 = sub_1C06E0948(v2);
    swift_bridgeObjectRelease();
    v18[0] = v3;
    sub_1C06A9758(v18);
    swift_bridgeObjectRelease();
    swift_release_n();
    v4 = v18[0];
    swift_getKeyPath();
    v19 = v1;
    v5 = v4[2];
    if (v5)
    {
      sub_1C0746F64();
      v6 = (_QWORD **)(v4 + 5);
      do
      {
        v7 = *v6;
        v18[0] = *(v6 - 1);
        v18[1] = v7;
        sub_1C0746EF8();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        sub_1C068D098((uint64_t)v18[2]);
        v6 += 2;
        --v5;
      }
      while (v5);
      sub_1C0747030();
      swift_release_n();
      v1 = v19;
    }
    else
    {
      sub_1C0747030();
      sub_1C0747030();
    }
    if (qword_1EF61A390 != -1)
      swift_once();
    v8 = sub_1C0747720();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EF61D370);
    swift_bridgeObjectRetain_n();
    v9 = sub_1C0747708();
    v10 = sub_1C0747D80();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v18[0] = v12;
      *(_DWORD *)v11 = 136315394;
      v19 = sub_1C069092C(0xD00000000000001CLL, 0x80000001C07536A0, (uint64_t *)v18);
      sub_1C0747E40();
      *(_WORD *)(v11 + 12) = 2080;
      v13 = sub_1C0746EF8();
      v14 = MEMORY[0x1C3B9FD8C](v13, MEMORY[0x1E0DEA968]);
      v16 = v15;
      swift_bridgeObjectRelease();
      v19 = sub_1C069092C(v14, v16, (uint64_t *)v18);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0671000, v9, v10, "%s - contactOverride values: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v12, -1, -1);
      MEMORY[0x1C3BA0D04](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return v1;
}

uint64_t type metadata accessor for PeopleDemoOverride()
{
  return objc_opt_self();
}

uint64_t method lookup function for PeopleDemoOverride()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleDemoOverride.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PeopleDemoOverride.writeDefaultOverride(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PeopleDemoOverride.contactSuggestionsOverride()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PeopleDemoOverride.peopleStatusOverride(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1C06A9B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C06A6738(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_1C06A9B88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C06A9BCC()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1C06A9BD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return sub_1C0746EF8();
}

double Measurement<>.timeInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  double v5;
  double v6;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t Measurement<>.dispatchTimeInterval.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  double v7;
  double v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v8 = v7;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    *a1 = (uint64_t)v8;
    v10 = *MEMORY[0x1E0DEF4A0];
    v11 = sub_1C0747744();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

double Measurement<>.factor(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  double v7;
  double v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8 * (double)a1;
}

uint64_t Double.hours.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_hours);
}

uint64_t Double.minutes.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_minutes);
}

uint64_t Double.seconds.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_seconds);
}

uint64_t Double.milliseconds.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_milliseconds);
}

uint64_t Double.microseconds.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_microseconds);
}

uint64_t Double.nanoseconds.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_nanoseconds);
}

uint64_t Double.picoseconds.getter()
{
  return sub_1C06A9F0C((SEL *)&selRef_picoseconds);
}

uint64_t sub_1C06A9F0C(SEL *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), *a1);
  sub_1C0698FF4();
  return sub_1C07470B4();
}

uint64_t iMessageServiceAvailabilty.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t iMessageServiceAvailabilty.init()()
{
  uint64_t v0;

  return v0;
}

void sub_1C06A9F88(uint64_t a1, uint64_t a2)
{
  sub_1C06A9FA0(a1, a2, (SEL *)&selRef_removeListenerID_forService_);
}

void sub_1C06A9F94(uint64_t a1, uint64_t a2)
{
  sub_1C06A9FA0(a1, a2, (SEL *)&selRef_addListenerID_forService_);
}

void sub_1C06A9FA0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v4)
  {
    v5 = v4;
    v6 = (id)sub_1C074790C();
    objc_msgSend(v5, *a3, v6, 1);

  }
  else
  {
    __break(1u);
  }
}

id sub_1C06AA02C()
{
  id result;
  void *v1;
  void *v2;
  id v3;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_1C074790C();
    v3 = objc_msgSend(v1, sel_availabilityForListenerID_forService_, v2, 1);

    return (id)(v3 == (id)1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t iMessageServiceAvailabilty.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t iMessageServiceAvailabilty.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1C06AA0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C06AA0EC(a1, a2, a3, a4, (SEL *)&selRef_removeListenerID_forService_);
}

void sub_1C06AA0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C06AA0EC(a1, a2, a3, a4, (SEL *)&selRef_addListenerID_forService_);
}

void sub_1C06AA0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  id v6;
  void *v7;
  id v8;

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v6)
  {
    v7 = v6;
    v8 = (id)sub_1C074790C();
    objc_msgSend(v7, *a5, v8, 1);

  }
  else
  {
    __break(1u);
  }
}

_QWORD *MessageSendRules.deinit()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v2 + 8))(v0[14], v0[15], v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
  sub_1C0747030();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MessageSendRules.__deallocating_deinit()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v2 + 8))(v0[14], v0[15], v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
  sub_1C0747030();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06AA288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t result;

  if (qword_1EF61A3E8 != -1)
    swift_once();
  v0 = qword_1EF61D888;
  type metadata accessor for PeopleFeatureFlags();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  v2 = qword_1ED500188;
  sub_1C0746F64();
  if (v2 != -1)
    swift_once();
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  swift_bridgeObjectRelease();
  type metadata accessor for iMessageServiceAvailabilty();
  v4 = swift_allocObject();
  if (qword_1EF61A298 != -1)
    swift_once();
  v5 = off_1EF61BC68;
  type metadata accessor for MessageSendRules();
  v6 = (_QWORD *)swift_allocObject();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  v7 = sub_1C06ADEC0(v0, v1, v4, (uint64_t)v5, 0xD000000000000016, 0x80000001C07538E0, v6);
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  result = sub_1C0747030();
  qword_1EF61BF88 = (uint64_t)v7;
  return result;
}

_QWORD *MessageSendRules.__allocating_init(lookupProvider:featureFlags:serviceAvailabiltyProvider:serverFeatureFlag:listenerId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a5;
  v27 = a6;
  v25 = (_QWORD *)swift_allocObject();
  v11 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v17 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(a3 + 32);
  v18 = __swift_mutable_project_boxed_opaque_existential_1(a3, v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  v22 = sub_1C06ADFC4((uint64_t)v14, a2, (uint64_t)v20, a4, v26, v27, v25, v11, v17, v10, v16);
  sub_1C0747030();
  sub_1C0747030();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v22;
}

uint64_t static MessageSendRules.sharedInstance.getter()
{
  if (qword_1EF61A2E0 != -1)
    swift_once();
  return sub_1C0746F64();
}

_QWORD *MessageSendRules.init(lookupProvider:featureFlags:serviceAvailabiltyProvider:serverFeatureFlag:listenerId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v26 = a6;
  v25 = a5;
  v11 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v17 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(a3 + 32);
  v18 = __swift_mutable_project_boxed_opaque_existential_1(a3, v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  v22 = sub_1C06ADFC4((uint64_t)v14, a2, (uint64_t)v20, a4, v25, v26, v27, v11, v17, v10, v16);
  sub_1C0747030();
  sub_1C0747030();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v22;
}

uint64_t sub_1C06AA738(uint64_t a1, uint64_t a2, char a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 968) = v5;
  *(_BYTE *)(v6 + 1017) = a4;
  *(_BYTE *)(v6 + 1016) = a3;
  *(_QWORD *)(v6 + 960) = a2;
  *(_QWORD *)(v6 + 952) = a1;
  *(_QWORD *)(v6 + 976) = *a5;
  return swift_task_switch();
}

uint64_t sub_1C06AA768()
{
  uint64_t v0;
  char v1;
  id v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *object;
  void *v12;
  void *v13;
  unsigned int v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)();
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char v27;
  uint64_t inited;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  const char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  BOOL v58;
  id v59;
  void *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  char v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char v76;
  uint64_t v77;

  v1 = *(_BYTE *)(v0 + 1016);
  if ((v1 & 1) == 0)
  {
    v2 = objc_allocWithZone((Class)sub_1C0747738());
    v3 = (void *)sub_1C074772C();
    MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v3, 900);

  }
  v4 = *(_QWORD **)(v0 + 968);
  v5 = v4[5];
  v6 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v5);
  if (((*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v6 + 24))(v4[14], v4[15], v5, v6) & 1) == 0)
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v23 = sub_1C0747720();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED4FF8B0);
    v24 = sub_1C0747708();
    v25 = sub_1C0747D80();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1C0671000, v24, v25, "MessageSendRule: iMessage not enabled for sender, will not send", v26, 2u);
      MEMORY[0x1C3BA0D04](v26, -1, -1);
    }

    if ((v1 & 1) == 0)
    {
      if (qword_1ED4FFC40 != -1)
        swift_once();
      v27 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074C980;
      *(_QWORD *)(inited + 32) = 0x746E65696C63;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
      *(_BYTE *)(inited + 48) = v27;
      v29 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 88) = 0x746E657665;
      *(_QWORD *)(inited + 96) = 0xE500000000000000;
      *(_QWORD *)(inited + 128) = v29;
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      v30 = 0xD000000000000017;
      v31 = "noSendMessageNotEnabled";
      goto LABEL_39;
    }
    if (qword_1ED4FFC40 != -1)
      swift_once();
    v37 = *(_BYTE *)(v0 + 1017);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    v38 = swift_initStackObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C074C980;
    *(_QWORD *)(v38 + 32) = 0x746E65696C63;
    *(_QWORD *)(v38 + 40) = 0xE600000000000000;
    *(_QWORD *)(v38 + 72) = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(v38 + 80) = &protocol witness table for Bool;
    *(_BYTE *)(v38 + 48) = v37;
    v39 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 88) = 0x746E657665;
    *(_QWORD *)(v38 + 96) = 0xE500000000000000;
    *(_QWORD *)(v38 + 128) = v39;
    *(_QWORD *)(v38 + 136) = &protocol witness table for String;
    v40 = 0xD000000000000017;
    v41 = "noSendMessageNotEnabled";
LABEL_44:
    *(_QWORD *)(v38 + 104) = v40;
    *(_QWORD *)(v38 + 112) = (unint64_t)(v41 - 32) | 0x8000000000000000;
    goto LABEL_45;
  }
  if ((v1 & 1) == 0)
  {
    v7 = objc_allocWithZone((Class)sub_1C0747738());
    v8 = (void *)sub_1C074772C();
    MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v8, 1000);

  }
  v9 = objc_msgSend(*(id *)(v0 + 952), sel_appleID);
  if (!v9)
    goto LABEL_24;
  v10 = v9;
  sub_1C0747930();

  object = String.trimToNil()().value._object;
  swift_bridgeObjectRelease();
  if (!object
    || (v12 = (void *)objc_opt_self(),
        v13 = (void *)sub_1C074790C(),
        swift_bridgeObjectRelease(),
        v14 = objc_msgSend(v12, sel_canSendIMessage_, v13),
        v13,
        !v14))
  {
LABEL_24:
    v32 = objc_msgSend(*(id *)(v0 + 952), sel_appleID);
    if (v32)
    {
      v33 = v32;
      v34 = sub_1C0747930();
      v36 = v35;

    }
    else
    {
      v34 = 0;
      v36 = 0;
    }
    *(_QWORD *)(v0 + 896) = v34;
    *(_QWORD *)(v0 + 904) = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C198);
    v42 = sub_1C074796C();
    v44 = v43;
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v45 = sub_1C0747720();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED4FF8B0);
    sub_1C0746EF8();
    v46 = sub_1C0747708();
    v47 = sub_1C0747D80();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v76 = v1;
      v49 = swift_slowAlloc();
      v77 = v49;
      *(_DWORD *)v48 = 136315138;
      sub_1C0746EF8();
      *(_QWORD *)(v0 + 928) = sub_1C069092C(v42, v44, &v77);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v46, v47, "MessageSendRule: '%s' not enabled for sender, will not send", v48, 0xCu);
      swift_arrayDestroy();
      v50 = v49;
      v1 = v76;
      MEMORY[0x1C3BA0D04](v50, -1, -1);
      MEMORY[0x1C3BA0D04](v48, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if ((v1 & 1) == 0)
    {
      if (qword_1ED4FFC40 != -1)
        swift_once();
      v51 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074C980;
      *(_QWORD *)(inited + 32) = 0x746E65696C63;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
      *(_BYTE *)(inited + 48) = v51;
      v52 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 88) = 0x746E657665;
      *(_QWORD *)(inited + 96) = 0xE500000000000000;
      *(_QWORD *)(inited + 128) = v52;
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      v30 = 0xD00000000000001CLL;
      v31 = "noSendWrongAppleIDForMessage";
LABEL_39:
      *(_QWORD *)(inited + 104) = v30;
      *(_QWORD *)(inited + 112) = (unint64_t)(v31 - 32) | 0x8000000000000000;
LABEL_40:
      v53 = sub_1C06F5C3C(inited);
      v54 = 14;
LABEL_46:
      LOBYTE(v77) = v54;
      sub_1C070E1AC((char *)&v77, v53);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    if (qword_1ED4FFC40 != -1)
      swift_once();
    v55 = *(_BYTE *)(v0 + 1017);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    v38 = swift_initStackObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C074C980;
    *(_QWORD *)(v38 + 32) = 0x746E65696C63;
    *(_QWORD *)(v38 + 40) = 0xE600000000000000;
    *(_QWORD *)(v38 + 72) = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(v38 + 80) = &protocol witness table for Bool;
    *(_BYTE *)(v38 + 48) = v55;
    v56 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 88) = 0x746E657665;
    *(_QWORD *)(v38 + 96) = 0xE500000000000000;
    *(_QWORD *)(v38 + 128) = v56;
    *(_QWORD *)(v38 + 136) = &protocol witness table for String;
    v40 = 0xD00000000000001CLL;
    v41 = "noSendWrongAppleIDForMessage";
    goto LABEL_44;
  }
  if ((v1 & 1) == 0)
  {
    v15 = objc_allocWithZone((Class)sub_1C0747738());
    v16 = (void *)sub_1C074772C();
    MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v16, 1100);

    if (qword_1EF61A298 == -1)
    {
      v17 = *(_QWORD *)(v0 + 976);
      if (!v17)
      {
LABEL_12:
        if ((*((_BYTE *)off_1EF61BC68 + 25) & 1) != 0)
        {
          v18 = v0 + 816;
          v19 = v0 + 920;
          if (qword_1EF61A3E8 != -1)
            swift_once();
          v20 = qword_1EF61D888;
          *(_QWORD *)(v0 + 840) = type metadata accessor for MessageDeviceCapabilityLookup();
          *(_QWORD *)(v0 + 848) = &protocol witness table for MessageDeviceCapabilityLookup;
          *(_QWORD *)(v0 + 816) = v20;
          sub_1C0746F64();
          v21 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 992) = v21;
          v22 = sub_1C06AB9AC;
LABEL_79:
          *v21 = v0;
          v21[1] = v22;
          return sub_1C06ADC48(v19, *(_QWORD *)(v0 + 960), v18);
        }
        if (qword_1EF61A3E8 != -1)
          swift_once();
        v71 = qword_1EF61D888;
        *(_QWORD *)(v0 + 880) = type metadata accessor for MessageDeviceCapabilityLookup();
        *(_QWORD *)(v0 + 888) = &protocol witness table for MessageDeviceCapabilityLookup;
        *(_QWORD *)(v0 + 856) = v71;
        sub_1C0746F64();
        v72 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 984) = v72;
        *v72 = v0;
        v72[1] = sub_1C06AB57C;
        return sub_1C06AD630(v0 + 936, *(_QWORD *)(v0 + 960), v0 + 856);
      }
    }
    else
    {
      swift_once();
      v17 = *(_QWORD *)(v0 + 976);
      if (!v17)
        goto LABEL_12;
    }
    goto LABEL_49;
  }
  if (qword_1EF61A298 == -1)
  {
    v17 = *(_QWORD *)(v0 + 976);
    if (v17)
    {
LABEL_49:
      v77 = v17;
      sub_1C0746EF8();
      v58 = DiscoveredHandles.allMembersMeetRequirements.getter();
      swift_bridgeObjectRelease();
      if (v58)
      {
        if ((*(_BYTE *)(v0 + 1016) & 1) == 0)
        {
          v59 = objc_allocWithZone((Class)sub_1C0747738());
          v60 = (void *)sub_1C074772C();
          MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v60, 1200);

        }
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
      }
      if ((*(_BYTE *)(v0 + 1016) & 1) == 0)
      {
        if (qword_1ED4FF8D0 != -1)
          swift_once();
        v61 = sub_1C0747720();
        __swift_project_value_buffer(v61, (uint64_t)qword_1ED4FF8B0);
        v62 = sub_1C0747708();
        v63 = sub_1C0747D80();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v64 = 0;
          _os_log_impl(&dword_1C0671000, v62, v63, "Screen Time iMessage not supported across all approver devices, will not send", v64, 2u);
          MEMORY[0x1C3BA0D04](v64, -1, -1);
        }

        if (qword_1ED4FFC40 != -1)
          swift_once();
        v65 = *(_BYTE *)(v0 + 1017);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
        inited = swift_allocObject();
        *(_OWORD *)(inited + 16) = xmmword_1C074C980;
        *(_QWORD *)(inited + 32) = 0x746E65696C63;
        *(_QWORD *)(inited + 40) = 0xE600000000000000;
        *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
        *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
        *(_BYTE *)(inited + 48) = v65;
        *(_QWORD *)(inited + 88) = 0x746E657665;
        *(_QWORD *)(inited + 96) = 0xE500000000000000;
        *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(inited + 136) = &protocol witness table for String;
        *(_QWORD *)(inited + 104) = 0x7041646E65536F6ELL;
        *(_QWORD *)(inited + 112) = 0xEF737265766F7270;
        goto LABEL_40;
      }
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v66 = sub_1C0747720();
      __swift_project_value_buffer(v66, (uint64_t)qword_1ED4FF8B0);
      v67 = sub_1C0747708();
      v68 = sub_1C0747D80();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v69 = 0;
        _os_log_impl(&dword_1C0671000, v67, v68, "Ask To Buy iMessage not supported across all approver devices, will not send", v69, 2u);
        MEMORY[0x1C3BA0D04](v69, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v70 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      v38 = swift_initStackObject();
      *(_OWORD *)(v38 + 16) = xmmword_1C074C980;
      *(_QWORD *)(v38 + 32) = 0x746E65696C63;
      *(_QWORD *)(v38 + 40) = 0xE600000000000000;
      *(_QWORD *)(v38 + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v38 + 80) = &protocol witness table for Bool;
      *(_BYTE *)(v38 + 48) = v70;
      *(_QWORD *)(v38 + 88) = 0x746E657665;
      *(_QWORD *)(v38 + 96) = 0xE500000000000000;
      *(_QWORD *)(v38 + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v38 + 136) = &protocol witness table for String;
      *(_QWORD *)(v38 + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(v38 + 112) = 0xEF737265766F7270;
LABEL_45:
      v53 = sub_1C06F5C3C(v38);
      v54 = 15;
      goto LABEL_46;
    }
  }
  else
  {
    swift_once();
    v17 = *(_QWORD *)(v0 + 976);
    if (v17)
      goto LABEL_49;
  }
  if ((*((_BYTE *)off_1EF61BC68 + 26) & 1) != 0)
  {
    v18 = v0 + 736;
    v19 = v0 + 944;
    if (qword_1EF61A3E8 != -1)
      swift_once();
    v73 = qword_1EF61D888;
    *(_QWORD *)(v0 + 760) = type metadata accessor for MessageDeviceCapabilityLookup();
    *(_QWORD *)(v0 + 768) = &protocol witness table for MessageDeviceCapabilityLookup;
    *(_QWORD *)(v0 + 736) = v73;
    sub_1C0746F64();
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1008) = v21;
    v22 = sub_1C06AC20C;
    goto LABEL_79;
  }
  if (qword_1EF61A3E8 != -1)
    swift_once();
  v74 = qword_1EF61D888;
  *(_QWORD *)(v0 + 800) = type metadata accessor for MessageDeviceCapabilityLookup();
  *(_QWORD *)(v0 + 808) = &protocol witness table for MessageDeviceCapabilityLookup;
  *(_QWORD *)(v0 + 776) = v74;
  sub_1C0746F64();
  v75 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1000) = v75;
  *v75 = v0;
  v75[1] = sub_1C06ABDDC;
  return sub_1C06AD93C(v0 + 912, *(_QWORD *)(v0 + 960), v0 + 776);
}

uint64_t sub_1C06AB57C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 856;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return swift_task_switch();
}

uint64_t sub_1C06AB5DC()
{
  uint64_t v0;
  BOOL v1;
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  uint64_t inited;
  char v19;
  char v20;

  sub_1C0746EF8();
  v1 = DiscoveredHandles.allMembersMeetRequirements.getter();
  swift_bridgeObjectRelease();
  if (v1)
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) == 0)
    {
      v2 = objc_allocWithZone((Class)sub_1C0747738());
      v3 = (void *)sub_1C074772C();
      MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v3, 1200);

    }
  }
  else
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) != 0)
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v12 = sub_1C0747720();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED4FF8B0);
      v13 = sub_1C0747708();
      v14 = sub_1C0747D80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1C0671000, v13, v14, "Ask To Buy iMessage not supported across all approver devices, will not send", v15, 2u);
        MEMORY[0x1C3BA0D04](v15, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v16 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074C980;
      *(_QWORD *)(inited + 32) = 0x746E65696C63;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
      *(_BYTE *)(inited + 48) = v16;
      *(_QWORD *)(inited + 88) = 0x746E657665;
      *(_QWORD *)(inited + 96) = 0xE500000000000000;
      *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      *(_QWORD *)(inited + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(inited + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(inited);
      v19 = 15;
      v11 = &v19;
    }
    else
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v4 = sub_1C0747720();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
      v5 = sub_1C0747708();
      v6 = sub_1C0747D80();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1C0671000, v5, v6, "Screen Time iMessage not supported across all approver devices, will not send", v7, 2u);
        MEMORY[0x1C3BA0D04](v7, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v8 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C074C980;
      *(_QWORD *)(v9 + 32) = 0x746E65696C63;
      *(_QWORD *)(v9 + 40) = 0xE600000000000000;
      *(_QWORD *)(v9 + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v9 + 80) = &protocol witness table for Bool;
      *(_BYTE *)(v9 + 48) = v8;
      *(_QWORD *)(v9 + 88) = 0x746E657665;
      *(_QWORD *)(v9 + 96) = 0xE500000000000000;
      *(_QWORD *)(v9 + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v9 + 136) = &protocol witness table for String;
      *(_QWORD *)(v9 + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(v9 + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(v9);
      v20 = 14;
      v11 = &v20;
    }
    sub_1C070E1AC(v11, v10);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v1);
}

uint64_t sub_1C06AB9AC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 816;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return swift_task_switch();
}

uint64_t sub_1C06ABA0C()
{
  uint64_t v0;
  BOOL v1;
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  uint64_t inited;
  char v19;
  char v20;

  sub_1C0746EF8();
  v1 = DiscoveredHandles.allMembersMeetRequirements.getter();
  swift_bridgeObjectRelease();
  if (v1)
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) == 0)
    {
      v2 = objc_allocWithZone((Class)sub_1C0747738());
      v3 = (void *)sub_1C074772C();
      MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v3, 1200);

    }
  }
  else
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) != 0)
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v12 = sub_1C0747720();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED4FF8B0);
      v13 = sub_1C0747708();
      v14 = sub_1C0747D80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1C0671000, v13, v14, "Ask To Buy iMessage not supported across all approver devices, will not send", v15, 2u);
        MEMORY[0x1C3BA0D04](v15, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v16 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074C980;
      *(_QWORD *)(inited + 32) = 0x746E65696C63;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
      *(_BYTE *)(inited + 48) = v16;
      *(_QWORD *)(inited + 88) = 0x746E657665;
      *(_QWORD *)(inited + 96) = 0xE500000000000000;
      *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      *(_QWORD *)(inited + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(inited + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(inited);
      v19 = 15;
      v11 = &v19;
    }
    else
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v4 = sub_1C0747720();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
      v5 = sub_1C0747708();
      v6 = sub_1C0747D80();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1C0671000, v5, v6, "Screen Time iMessage not supported across all approver devices, will not send", v7, 2u);
        MEMORY[0x1C3BA0D04](v7, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v8 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C074C980;
      *(_QWORD *)(v9 + 32) = 0x746E65696C63;
      *(_QWORD *)(v9 + 40) = 0xE600000000000000;
      *(_QWORD *)(v9 + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v9 + 80) = &protocol witness table for Bool;
      *(_BYTE *)(v9 + 48) = v8;
      *(_QWORD *)(v9 + 88) = 0x746E657665;
      *(_QWORD *)(v9 + 96) = 0xE500000000000000;
      *(_QWORD *)(v9 + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v9 + 136) = &protocol witness table for String;
      *(_QWORD *)(v9 + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(v9 + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(v9);
      v20 = 14;
      v11 = &v20;
    }
    sub_1C070E1AC(v11, v10);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v1);
}

uint64_t sub_1C06ABDDC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 776;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return swift_task_switch();
}

uint64_t sub_1C06ABE3C()
{
  uint64_t v0;
  BOOL v1;
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  uint64_t inited;
  char v19;
  char v20;

  sub_1C0746EF8();
  v1 = DiscoveredHandles.allMembersMeetRequirements.getter();
  swift_bridgeObjectRelease();
  if (v1)
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) == 0)
    {
      v2 = objc_allocWithZone((Class)sub_1C0747738());
      v3 = (void *)sub_1C074772C();
      MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v3, 1200);

    }
  }
  else
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) != 0)
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v12 = sub_1C0747720();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED4FF8B0);
      v13 = sub_1C0747708();
      v14 = sub_1C0747D80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1C0671000, v13, v14, "Ask To Buy iMessage not supported across all approver devices, will not send", v15, 2u);
        MEMORY[0x1C3BA0D04](v15, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v16 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074C980;
      *(_QWORD *)(inited + 32) = 0x746E65696C63;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
      *(_BYTE *)(inited + 48) = v16;
      *(_QWORD *)(inited + 88) = 0x746E657665;
      *(_QWORD *)(inited + 96) = 0xE500000000000000;
      *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      *(_QWORD *)(inited + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(inited + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(inited);
      v19 = 15;
      v11 = &v19;
    }
    else
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v4 = sub_1C0747720();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
      v5 = sub_1C0747708();
      v6 = sub_1C0747D80();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1C0671000, v5, v6, "Screen Time iMessage not supported across all approver devices, will not send", v7, 2u);
        MEMORY[0x1C3BA0D04](v7, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v8 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C074C980;
      *(_QWORD *)(v9 + 32) = 0x746E65696C63;
      *(_QWORD *)(v9 + 40) = 0xE600000000000000;
      *(_QWORD *)(v9 + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v9 + 80) = &protocol witness table for Bool;
      *(_BYTE *)(v9 + 48) = v8;
      *(_QWORD *)(v9 + 88) = 0x746E657665;
      *(_QWORD *)(v9 + 96) = 0xE500000000000000;
      *(_QWORD *)(v9 + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v9 + 136) = &protocol witness table for String;
      *(_QWORD *)(v9 + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(v9 + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(v9);
      v20 = 14;
      v11 = &v20;
    }
    sub_1C070E1AC(v11, v10);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v1);
}

uint64_t sub_1C06AC20C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 736;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return swift_task_switch();
}

uint64_t sub_1C06AC26C()
{
  uint64_t v0;
  BOOL v1;
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  uint64_t inited;
  char v19;
  char v20;

  sub_1C0746EF8();
  v1 = DiscoveredHandles.allMembersMeetRequirements.getter();
  swift_bridgeObjectRelease();
  if (v1)
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) == 0)
    {
      v2 = objc_allocWithZone((Class)sub_1C0747738());
      v3 = (void *)sub_1C074772C();
      MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v3, 1200);

    }
  }
  else
  {
    if ((*(_BYTE *)(v0 + 1016) & 1) != 0)
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v12 = sub_1C0747720();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED4FF8B0);
      v13 = sub_1C0747708();
      v14 = sub_1C0747D80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1C0671000, v13, v14, "Ask To Buy iMessage not supported across all approver devices, will not send", v15, 2u);
        MEMORY[0x1C3BA0D04](v15, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v16 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074C980;
      *(_QWORD *)(inited + 32) = 0x746E65696C63;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
      *(_BYTE *)(inited + 48) = v16;
      *(_QWORD *)(inited + 88) = 0x746E657665;
      *(_QWORD *)(inited + 96) = 0xE500000000000000;
      *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      *(_QWORD *)(inited + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(inited + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(inited);
      v19 = 15;
      v11 = &v19;
    }
    else
    {
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v4 = sub_1C0747720();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
      v5 = sub_1C0747708();
      v6 = sub_1C0747D80();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1C0671000, v5, v6, "Screen Time iMessage not supported across all approver devices, will not send", v7, 2u);
        MEMORY[0x1C3BA0D04](v7, -1, -1);
      }

      if (qword_1ED4FFC40 != -1)
        swift_once();
      v8 = *(_BYTE *)(v0 + 1017);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C074C980;
      *(_QWORD *)(v9 + 32) = 0x746E65696C63;
      *(_QWORD *)(v9 + 40) = 0xE600000000000000;
      *(_QWORD *)(v9 + 72) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v9 + 80) = &protocol witness table for Bool;
      *(_BYTE *)(v9 + 48) = v8;
      *(_QWORD *)(v9 + 88) = 0x746E657665;
      *(_QWORD *)(v9 + 96) = 0xE500000000000000;
      *(_QWORD *)(v9 + 128) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v9 + 136) = &protocol witness table for String;
      *(_QWORD *)(v9 + 104) = 0x7041646E65536F6ELL;
      *(_QWORD *)(v9 + 112) = 0xEF737265766F7270;
      v10 = sub_1C06F5C3C(v9);
      v20 = 14;
      v11 = &v20;
    }
    sub_1C070E1AC(v11, v10);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v1);
}

uint64_t sub_1C06AC63C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 392) = a3;
  *(_QWORD *)(v5 + 344) = a1;
  *(_QWORD *)(v5 + 352) = a2;
  v6 = *a4;
  *(_QWORD *)(v5 + 360) = v4;
  *(_QWORD *)(v5 + 368) = v6;
  return swift_task_switch();
}

uint64_t sub_1C06AC660()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  char v6;
  uint64_t inited;
  uint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v1 = sub_1C0747720();
  *(_QWORD *)(v0 + 376) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED4FF8B0);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v21 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 336) = sub_1C069092C(0xD00000000000003CLL, 0x80000001C0753700, &v21);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v5, -1, -1);
    MEMORY[0x1C3BA0D04](v4, -1, -1);
  }

  if (qword_1EF61A298 != -1)
    swift_once();
  if ((*((_BYTE *)off_1EF61BC68 + 64) & 1) != 0)
  {
    if (qword_1ED4FFC40 != -1)
      swift_once();
    v6 = *(_BYTE *)(v0 + 392);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C074C980;
    *(_QWORD *)(inited + 32) = 0x746E65696C63;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 48) = v6;
    v8 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 88) = 0x746E657665;
    *(_QWORD *)(inited + 96) = 0xE500000000000000;
    *(_QWORD *)(inited + 128) = v8;
    *(_QWORD *)(inited + 136) = &protocol witness table for String;
    *(_QWORD *)(inited + 104) = 0xD000000000000010;
    *(_QWORD *)(inited + 112) = 0x80000001C0752580;
    v9 = sub_1C06F5C3C(inited);
    LOBYTE(v21) = 14;
    sub_1C070E1AC((char *)&v21, v9);
    swift_bridgeObjectRelease();
    v10 = sub_1C0747708();
    v11 = sub_1C0747D68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v21 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 328) = sub_1C069092C(0xD00000000000003CLL, 0x80000001C0753700, &v21);
      sub_1C0747E40();
      _os_log_impl(&dword_1C0671000, v10, v11, "%s returns false, killswitch set", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v13, -1, -1);
      MEMORY[0x1C3BA0D04](v12, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 368);
    v16 = objc_allocWithZone((Class)sub_1C0747738());
    v17 = (void *)sub_1C074772C();
    MEMORY[0x1C3B9FA08](0xD000000000000019, 0x80000001C07536C0, v17, 800);

    *(_QWORD *)(v0 + 320) = v15;
    v18 = swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v18;
    *(_QWORD *)v18 = v0;
    *(_QWORD *)(v18 + 8) = sub_1C06ACAE0;
    v19 = *(_QWORD *)(v0 + 344);
    v20 = *(_OWORD *)(v0 + 352);
    *(_BYTE *)(v18 + 1017) = *(_BYTE *)(v0 + 392);
    *(_BYTE *)(v18 + 1016) = 0;
    *(_OWORD *)(v18 + 960) = v20;
    *(_QWORD *)(v18 + 952) = v19;
    *(_QWORD *)(v18 + 976) = *(_QWORD *)(v0 + 320);
    return swift_task_switch();
  }
}

uint64_t sub_1C06ACAE0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 393) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06ACB3C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint8_t *v5;
  uint64_t v6;
  char v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(unsigned __int8 *)(v0 + 393);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D68();
  v4 = os_log_type_enabled(v2, v3);
  if ((_DWORD)v1 == 1)
  {
    if (v4)
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v14 = v6;
      *(_DWORD *)v5 = 136315138;
      *(_QWORD *)(v0 + 312) = sub_1C069092C(0xD00000000000003CLL, 0x80000001C0753700, &v14);
      sub_1C0747E40();
      _os_log_impl(&dword_1C0671000, v2, v3, "%s logging and returning true", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v6, -1, -1);
      MEMORY[0x1C3BA0D04](v5, -1, -1);
    }

    if (qword_1ED4FFC40 != -1)
      swift_once();
    v7 = *(_BYTE *)(v0 + 392);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = 0x746E65696C63;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v9 = MEMORY[0x1E0DEAFA0];
    *(_OWORD *)(inited + 16) = xmmword_1C074C980;
    *(_QWORD *)(inited + 72) = v9;
    *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 48) = v7;
    *(_QWORD *)(inited + 88) = 0x746E657665;
    *(_QWORD *)(inited + 96) = 0xE500000000000000;
    *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 136) = &protocol witness table for String;
    *(_QWORD *)(inited + 104) = 1684956531;
    *(_QWORD *)(inited + 112) = 0xE400000000000000;
    v10 = sub_1C06F5C3C(inited);
    LOBYTE(v14) = 14;
    sub_1C070E1AC((char *)&v14, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v4)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v0 + 304) = sub_1C069092C(0xD00000000000003CLL, 0x80000001C0753700, &v14);
      sub_1C0747E40();
      _os_log_impl(&dword_1C0671000, v2, v3, "%s returns false, common checks fail", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v12, -1, -1);
      MEMORY[0x1C3BA0D04](v11, -1, -1);
    }

  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1C06ACE5C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 392) = a3;
  *(_QWORD *)(v5 + 344) = a1;
  *(_QWORD *)(v5 + 352) = a2;
  v6 = *a4;
  *(_QWORD *)(v5 + 360) = v4;
  *(_QWORD *)(v5 + 368) = v6;
  return swift_task_switch();
}

uint64_t sub_1C06ACE80()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  char v6;
  uint64_t inited;
  uint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v1 = sub_1C0747720();
  *(_QWORD *)(v0 + 376) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED4FF8B0);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v18 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 336) = sub_1C069092C(0xD00000000000003ALL, 0x80000001C0753740, &v18);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v5, -1, -1);
    MEMORY[0x1C3BA0D04](v4, -1, -1);
  }

  if (qword_1EF61A298 != -1)
    swift_once();
  if ((*((_BYTE *)off_1EF61BC68 + 65) & 1) != 0)
  {
    if (qword_1ED4FFC40 != -1)
      swift_once();
    v6 = *(_BYTE *)(v0 + 392);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C074C980;
    *(_QWORD *)(inited + 32) = 0x746E65696C63;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 48) = v6;
    v8 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 88) = 0x746E657665;
    *(_QWORD *)(inited + 96) = 0xE500000000000000;
    *(_QWORD *)(inited + 128) = v8;
    *(_QWORD *)(inited + 136) = &protocol witness table for String;
    *(_QWORD *)(inited + 104) = 0xD000000000000010;
    *(_QWORD *)(inited + 112) = 0x80000001C0752580;
    v9 = sub_1C06F5C3C(inited);
    LOBYTE(v18) = 15;
    sub_1C070E1AC((char *)&v18, v9);
    swift_bridgeObjectRelease();
    v10 = sub_1C0747708();
    v11 = sub_1C0747D68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 328) = sub_1C069092C(0xD00000000000003ALL, 0x80000001C0753740, &v18);
      sub_1C0747E40();
      _os_log_impl(&dword_1C0671000, v10, v11, "%s returns false, killswitch set", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v13, -1, -1);
      MEMORY[0x1C3BA0D04](v12, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 368);
    v15 = swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v15;
    *(_QWORD *)v15 = v0;
    *(_QWORD *)(v15 + 8) = sub_1C06AD2B4;
    v16 = *(_QWORD *)(v0 + 344);
    v17 = *(_OWORD *)(v0 + 352);
    *(_BYTE *)(v15 + 1017) = *(_BYTE *)(v0 + 392);
    *(_BYTE *)(v15 + 1016) = 1;
    *(_OWORD *)(v15 + 960) = v17;
    *(_QWORD *)(v15 + 952) = v16;
    *(_QWORD *)(v15 + 976) = *(_QWORD *)(v0 + 320);
    return swift_task_switch();
  }
}

uint64_t sub_1C06AD2B4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 393) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06AD310()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint8_t *v5;
  uint64_t v6;
  char v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(unsigned __int8 *)(v0 + 393);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D68();
  v4 = os_log_type_enabled(v2, v3);
  if ((_DWORD)v1 == 1)
  {
    if (v4)
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v14 = v6;
      *(_DWORD *)v5 = 136315138;
      *(_QWORD *)(v0 + 312) = sub_1C069092C(0xD00000000000003ALL, 0x80000001C0753740, &v14);
      sub_1C0747E40();
      _os_log_impl(&dword_1C0671000, v2, v3, "%s logging and returning true", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v6, -1, -1);
      MEMORY[0x1C3BA0D04](v5, -1, -1);
    }

    if (qword_1ED4FFC40 != -1)
      swift_once();
    v7 = *(_BYTE *)(v0 + 392);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = 0x746E65696C63;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v9 = MEMORY[0x1E0DEAFA0];
    *(_OWORD *)(inited + 16) = xmmword_1C074C980;
    *(_QWORD *)(inited + 72) = v9;
    *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 48) = v7;
    *(_QWORD *)(inited + 88) = 0x746E657665;
    *(_QWORD *)(inited + 96) = 0xE500000000000000;
    *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 136) = &protocol witness table for String;
    *(_QWORD *)(inited + 104) = 1684956531;
    *(_QWORD *)(inited + 112) = 0xE400000000000000;
    v10 = sub_1C06F5C3C(inited);
    LOBYTE(v14) = 15;
    sub_1C070E1AC((char *)&v14, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v4)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v0 + 304) = sub_1C069092C(0xD00000000000003ALL, 0x80000001C0753740, &v14);
      sub_1C0747E40();
      _os_log_impl(&dword_1C0671000, v2, v3, "%s returns false, common checks fail", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v12, -1, -1);
      MEMORY[0x1C3BA0D04](v11, -1, -1);
    }

  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1C06AD630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_1C0747720();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06AD694()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = sub_1C0747930();
  v4 = v3;
  v0[8] = v2;
  v0[9] = v3;
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v9 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 16)
                                                                                  + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v0[10] = v7;
  *v7 = v0;
  v7[1] = sub_1C06AD744;
  return v9(v0[2], v0[3], v2, v4, v5, v6);
}

uint64_t sub_1C06AD744()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C06AD7C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;

  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(unint64_t **)(v0 + 16);
  v6 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  v7 = v1;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  Logger.ifError(_:message:)(v1);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = sub_1C06F630C(MEMORY[0x1E0DEE9D8]);

  *v5 = v8;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06AD93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_1C0747720();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06AD9A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = sub_1C0747930();
  v4 = v3;
  v0[8] = v2;
  v0[9] = v3;
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v9 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 16)
                                                                                  + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v0[10] = v7;
  *v7 = v0;
  v7[1] = sub_1C06ADA50;
  return v9(v0[2], v0[3], v2, v4, v5, v6);
}

uint64_t sub_1C06ADA50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C06ADACC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;

  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(unint64_t **)(v0 + 16);
  v6 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  v7 = v1;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  Logger.ifError(_:message:)(v1);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = sub_1C06F630C(MEMORY[0x1E0DEE9D8]);

  *v5 = v8;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06ADC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_1C0747720();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06ADCAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_1C06ADD2C;
  return v6(v0[2], v0[3], v2, v3);
}

uint64_t sub_1C06ADD2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C06ADDA0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;

  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(unint64_t **)(v0 + 16);
  v6 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  v7 = v1;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  Logger.ifError(_:message:)(v1);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = sub_1C06F630C(MEMORY[0x1E0DEE9D8]);

  *v5 = v8;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1C06ADEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v20[5];
  _QWORD v21[5];

  v21[3] = type metadata accessor for MessageDeviceCapabilityLookup();
  v21[4] = &protocol witness table for MessageDeviceCapabilityLookup;
  v21[0] = a1;
  v20[3] = type metadata accessor for iMessageServiceAvailabilty();
  v20[4] = &protocol witness table for iMessageServiceAvailabilty;
  v20[0] = a3;
  sub_1C0685C78((uint64_t)v21, (uint64_t)(a7 + 7));
  a7[12] = a2;
  a7[14] = a5;
  a7[15] = a6;
  sub_1C0685C78((uint64_t)v20, (uint64_t)(a7 + 2));
  a7[13] = a4;
  v14 = a7[5];
  v15 = a7[6];
  __swift_project_boxed_opaque_existential_1(a7 + 2, v14);
  v16 = a7[14];
  v17 = a7[15];
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  sub_1C0746F64();
  sub_1C0746F64();
  v18(v16, v17, v14, v15);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  return a7;
}

_QWORD *sub_1C06ADFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27[5];
  uint64_t v28[5];

  v28[3] = a8;
  v28[4] = a10;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a8);
  v27[3] = a9;
  v27[4] = a11;
  v20 = __swift_allocate_boxed_opaque_existential_1Tm(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(v20, a3, a9);
  sub_1C0685C78((uint64_t)v28, (uint64_t)(a7 + 7));
  a7[12] = a2;
  a7[14] = a5;
  a7[15] = a6;
  sub_1C0685C78((uint64_t)v27, (uint64_t)(a7 + 2));
  a7[13] = a4;
  v21 = a7[5];
  v22 = a7[6];
  __swift_project_boxed_opaque_existential_1(a7 + 2, v21);
  v23 = a7[14];
  v24 = a7[15];
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16);
  sub_1C0746F64();
  sub_1C0746F64();
  v25(v23, v24, v21, v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return a7;
}

uint64_t dispatch thunk of ServiceAvailabiltyProvider.removeListenerID(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ServiceAvailabiltyProvider.addListenerID(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ServiceAvailabiltyProvider.available(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t type metadata accessor for iMessageServiceAvailabilty()
{
  return objc_opt_self();
}

uint64_t method lookup function for iMessageServiceAvailabilty()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of iMessageServiceAvailabilty.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of iMessageServiceAvailabilty.removeListenerID(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of iMessageServiceAvailabilty.addListenerID(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of iMessageServiceAvailabilty.available(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t type metadata accessor for MessageSendRules()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessageSendRules()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessageSendRules.__allocating_init(lookupProvider:featureFlags:serviceAvailabiltyProvider:serverFeatureFlag:listenerId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MessageSendRules.willSendScreenTimeRequest(from:to:client:discoveredHandles:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 144)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 144));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1C06A2938;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MessageSendRules.willSendAskToBuyRequest(from:to:client:discoveredHandles:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 152)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 152));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1C06A22C8;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MessageSendRules.approversSupportingScreenTimeMessage(_:lookup:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 160)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 160));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1C069325C;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MessageSendRules.approversSupportingAskToBuyMessage(_:lookup:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 168)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 168));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1C069325C;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MessageSendRules.iMessageHandles(for:lookup:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 176)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 176));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1C06930A0;
  return v10(a1, a2, a3);
}

uint64_t sub_1C06AE420(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ResolvedFamily();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1C068A9AC(a1, &qword_1EF61C1B0);
    v13 = sub_1C069C97C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1C06DF1C0();
        v17 = v22;
      }
      sub_1C068A658(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
      sub_1C06DE17C(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_1C068A9AC((uint64_t)v8, &qword_1EF61C1B0);
  }
  else
  {
    sub_1C068A658(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1C069D2D4((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C06AE5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07473E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_1C068A9AC(a1, &qword_1EF61BC58);
    sub_1C069CC58(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1C068A9AC((uint64_t)v10, &qword_1EF61BC58);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1C069D52C((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C06AE76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C2A0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PeopleLocation();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1C068A9AC(a1, &qword_1EF61C2A0);
    sub_1C069CD88(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1C068A9AC((uint64_t)v10, &qword_1EF61C2A0);
  }
  else
  {
    sub_1C068A658(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PeopleLocation);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1C069D668((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t ResolvedFamilyCache.__allocating_init(usePersistentCache:)(char a1)
{
  void *v1;
  id v2;
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t result;
  __int128 v7;
  unint64_t v8;
  _UNKNOWN **v9;
  __int128 v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;

  if ((a1 & 1) != 0)
  {
    v1 = (void *)objc_opt_self();
    v2 = objc_msgSend(v1, sel_defaultManager);
    v11 = &type metadata for ResolvedFamilyCacheURLProvider;
    v12 = &off_1E79E7560;
    v3 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v10 = v3;
    v4 = sub_1C06AEA4C();
    v3[5] = v4;
    v3[6] = &protocol witness table for NSFileManager;
    v3[2] = v2;
    v8 = v4;
    v9 = &protocol witness table for NSFileManager;
    *(_QWORD *)&v7 = objc_msgSend(v1, sel_defaultManager);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1A8);
    v5 = (_QWORD *)swift_allocObject();
    sub_1C0685BC4(&v10, (uint64_t)(v5 + 2));
    sub_1C0685BC4(&v7, (uint64_t)(v5 + 7));
    v5[12] = sub_1C06AEA88;
    v5[13] = 0;
    v5[14] = sub_1C06AEB24;
    v5[15] = 0;
  }
  else
  {
    v5 = 0;
  }
  type metadata accessor for ResolvedFamilyCache();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(result + 24) = v5;
  return result;
}

uint64_t type metadata accessor for ResolvedFamilyCache()
{
  return objc_opt_self();
}

uint64_t sub_1C06AEA28()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1C06AEA4C()
{
  unint64_t result;

  result = qword_1EF61C1A0;
  if (!qword_1EF61C1A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF61C1A0);
  }
  return result;
}

uint64_t sub_1C06AEA88()
{
  uint64_t v0;

  sub_1C07470A8();
  swift_allocObject();
  sub_1C074709C();
  type metadata accessor for ResolvedFamily();
  sub_1C06AF698((unint64_t *)&unk_1EF61C2B0, (uint64_t)&protocol conformance descriptor for ResolvedFamily);
  v0 = sub_1C0747090();
  sub_1C0747030();
  return v0;
}

uint64_t sub_1C06AEB24()
{
  sub_1C0747084();
  swift_allocObject();
  sub_1C0747078();
  type metadata accessor for ResolvedFamily();
  sub_1C06AF698(&qword_1EF61C2A8, (uint64_t)&protocol conformance descriptor for ResolvedFamily);
  sub_1C074706C();
  return sub_1C0747030();
}

void sub_1C06AEBCC(id *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;

  v2 = v1;
  v4 = sub_1C0747720();
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*a1, sel_dsid);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_integerValue);
    sub_1C06AF580((uint64_t)a1, (uint64_t)v7);
    v11 = type metadata accessor for ResolvedFamily();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
    swift_beginAccess();
    sub_1C06AE420((uint64_t)v7, (uint64_t)v10);
    swift_endAccess();
    if (*(_QWORD *)(v2 + 24))
    {
      sub_1C0746F64();
      v12 = objc_msgSend(v9, sel_description);
      v13 = sub_1C0747930();
      v15 = v14;

      sub_1C069583C((uint64_t)a1, v13, v15);
      swift_bridgeObjectRelease();

      sub_1C0747030();
    }
    else
    {

    }
  }
  else
  {
    if (qword_1EF61A398 != -1)
      swift_once();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EF61D388);
    v19 = sub_1C0747708();
    v16 = sub_1C0747D74();
    if (os_log_type_enabled(v19, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1C0671000, v19, v16, "requestingFamilyMember dsid is nil", v17, 2u);
      MEMORY[0x1C3BA0D04](v17, -1, -1);
    }

  }
}

uint64_t sub_1C06AEF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v29 = a1;
  v28 = sub_1C0747720();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint8_t *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1C069C97C(v29), (v14 & 1) != 0))
  {
    v15 = v13;
    v16 = *(_QWORD *)(v12 + 56);
    v17 = type metadata accessor for ResolvedFamily();
    v18 = v5;
    v19 = *(_QWORD *)(v17 - 8);
    sub_1C06AF580(v16 + *(_QWORD *)(v19 + 72) * v15, a2);
    v20 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56);
    v5 = v18;
    result = v20(a2, 0, 1, v17);
  }
  else
  {
    v22 = type metadata accessor for ResolvedFamily();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  if (*(_QWORD *)(v3 + 24))
  {
    sub_1C06AF5C4(a2, (uint64_t)v11);
    v23 = type metadata accessor for ResolvedFamily();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23) == 1)
    {
      v27 = v5;
      sub_1C0746F64();
      sub_1C068A9AC((uint64_t)v11, &qword_1EF61C1B0);
      v30 = v29;
      v25 = sub_1C0748248();
      sub_1C0694C5C(v25, v26, v9);
      sub_1C068A9AC(a2, &qword_1EF61C1B0);
      sub_1C0747030();
      swift_bridgeObjectRelease();
      (*(void (**)(uint8_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
      return sub_1C06AF60C((uint64_t)v9, a2);
    }
    else
    {
      return sub_1C068A9AC((uint64_t)v11, &qword_1EF61C1B0);
    }
  }
  return result;
}

uint64_t ResolvedFamilyCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C0747030();
  return v0;
}

uint64_t ResolvedFamilyCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C0747030();
  return swift_deallocClassInstance();
}

void sub_1C06AF350(id *a1)
{
  sub_1C06AEBCC(a1);
}

uint64_t sub_1C06AF370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C06AEF7C(a1, a2);
}

uint64_t sub_1C06AF390@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];

  v19[0] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07472C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[3];
  v12 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 24))(13, 1, 0, v11, v12);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v13((uint64_t)v6, 0, 1, v7);
  v14 = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C068A9AC((uint64_t)v6, &qword_1ED4FF788);
    v15 = a2;
    v16 = 1;
  }
  else
  {
    sub_1C0746EF8();
    sub_1C0747264();
    swift_bridgeObjectRelease();
    v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v6, v7);
    sub_1C0747270();
    v17(v10, v7);
    v15 = v14;
    v16 = 0;
  }
  return v13(v15, v16, 1, v7);
}

uint64_t sub_1C06AF580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResolvedFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06AF5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06AF60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of ResolvedFamilyCacheProtocol.addFamilyToCacheByChild(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ResolvedFamilyCacheProtocol.familyFromCacheForChild(dsid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for ResolvedFamilyCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResolvedFamilyCache.addFamilyToCacheByChild(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ResolvedFamilyCache.familyFromCacheForChild(dsid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

ValueMetadata *type metadata accessor for ResolvedFamilyCacheURLProvider()
{
  return &type metadata for ResolvedFamilyCacheURLProvider;
}

uint64_t sub_1C06AF698(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ResolvedFamily();
    result = MEMORY[0x1C3BA0C2C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SpotLightFetcher.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SpotLightFetcher.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C06AF6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF61C2C0 + dword_1EF61C2C0);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C06A22C8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1C06AF780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    sub_1C06B056C();
    v3 = sub_1C0747B1C();
  }
  else
  {
    v3 = 0;
  }
  v5 = v3;
  sub_1C06B0524((uint64_t)&v5, *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t SpotLightFetcher.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SpotLightFetcher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06AF7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF61C2C0 + dword_1EF61C2C0);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C06A2938;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1C06AF88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return swift_task_switch();
}

uint64_t sub_1C06AF8AC()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v1 = objc_allocWithZone(MEMORY[0x1E0CA6B38]);
  sub_1C0746EF8();
  v2 = (void *)sub_1C074790C();
  v3 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v1, sel_initWithName_protectionClass_bundleIdentifier_, v2, 0, v3);
  v0[21] = v25;

  if (qword_1EF61A398 != -1)
    swift_once();
  v4 = sub_1C0747720();
  v0[22] = __swift_project_value_buffer(v4, (uint64_t)qword_1EF61D388);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v5 = sub_1C0747708();
  v6 = sub_1C0747D68();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v0[19];
  if (v7)
  {
    v21 = v0[18];
    v22 = v0[17];
    v23 = v0[16];
    v9 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26 = v24;
    *(_DWORD *)v9 = 136315650;
    v10 = sub_1C0746EF8();
    v11 = MEMORY[0x1C3B9FD8C](v10, MEMORY[0x1E0DEA968]);
    v13 = v12;
    swift_bridgeObjectRelease();
    v0[10] = sub_1C069092C(v11, v13, &v26);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1C0746EF8();
    v0[10] = sub_1C069092C(v21, v8, &v26);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2080;
    sub_1C0746EF8();
    v0[10] = sub_1C069092C(v23, v22, &v26);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v5, v6, "Searching for atts:%s bundleID:%s id:%s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v24, -1, -1);
    MEMORY[0x1C3BA0D04](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v14 = v0[17];
  v15 = v0[16];
  v16 = sub_1C0747B04();
  v0[23] = v16;
  v17 = sub_1C074790C();
  v0[24] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C074B820;
  *(_QWORD *)(v18 + 32) = v15;
  *(_QWORD *)(v18 + 40) = v14;
  sub_1C0746EF8();
  v19 = sub_1C0747B04();
  v0[25] = v19;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1C06AFCDC;
  v0[14] = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1C06AF780;
  v0[13] = &block_descriptor_3;
  objc_msgSend(v25, sel_slowFetchAttributes_protectionClass_bundleID_identifiers_completionHandler_, v16, 0, v17, v19, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_1C06AFCDC()
{
  return swift_task_switch();
}

void sub_1C06AFD28()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  _BOOL4 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;

  v1 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 120);

  if (!v3)
    goto LABEL_44;
  v4 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFF8);
  if (v3 >> 62)
    goto LABEL_42;
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_43:
    swift_bridgeObjectRelease();
LABEL_44:
    swift_bridgeObjectRetain_n();
    v41 = sub_1C0747708();
    v42 = sub_1C0747D80();
    v43 = os_log_type_enabled(v41, v42);
    v44 = *(void **)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 136);
    if (v43)
    {
      v46 = *(_QWORD *)(v0 + 128);
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v54 = (_QWORD *)v48;
      *(_DWORD *)v47 = 136315138;
      sub_1C0746EF8();
      *(_QWORD *)(v0 + 80) = sub_1C069092C(v46, v45, (uint64_t *)&v54);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v41, v42, "No search results for %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v48, -1, -1);
      MEMORY[0x1C3BA0D04](v47, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_48:
    (*(void (**)(_QWORD *))(v0 + 8))(v4);
    return;
  }
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v5 = (id)MEMORY[0x1C3BA029C](0, v3);
      goto LABEL_7;
    }
    if (!v4[2])
      break;
    v5 = *(id *)(v3 + 32);
LABEL_7:
    v6 = v5;
    swift_bridgeObjectRelease();
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
    {

      goto LABEL_44;
    }
    v54 = 0;
    v7 = MEMORY[0x1E0DEE9B0];
    sub_1C0747B10();

    v8 = (uint64_t)v54;
    if (!v54)
      goto LABEL_44;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v3 = sub_1C0747708();
    v9 = sub_1C0747D68();
    v10 = os_log_type_enabled((os_log_t)v3, v9);
    v11 = *(_QWORD *)(v0 + 136);
    v53 = v8;
    if (v10)
    {
      v12 = *(_QWORD *)(v0 + 128);
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v54 = (_QWORD *)v14;
      *(_DWORD *)v13 = 136315394;
      sub_1C0746EF8();
      *(_QWORD *)(v0 + 80) = sub_1C069092C(v12, v11, (uint64_t *)&v54);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2080;
      v15 = MEMORY[0x1C3B9FDC8](v53, v7 + 8);
      *(_QWORD *)(v0 + 80) = sub_1C069092C(v15, v16, (uint64_t *)&v54);
      v8 = v53;
      sub_1C0747E40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, (os_log_t)v3, v9, "Results for %s results %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v14, -1, -1);
      MEMORY[0x1C3BA0D04](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v17 = *(_QWORD *)(v0 + 160);
    v50 = v0;
    v51 = *(_QWORD *)(v17 + 16);
    if (!v51)
      goto LABEL_51;
    v18 = 0;
    v52 = v8 & 0xC000000000000001;
    v49 = v8 & 0xFFFFFFFFFFFFFF8;
    v19 = (unint64_t *)(v17 + 40);
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v0 = *(v19 - 1);
      v20 = *v19;
      if (v52)
      {
        sub_1C0746EF8();
        v21 = MEMORY[0x1C3BA029C](v18, v8);
      }
      else
      {
        if (v18 >= *(_QWORD *)(v49 + 16))
          goto LABEL_41;
        v21 = *(_QWORD *)(v8 + 8 * v18 + 32);
        sub_1C0746EF8();
        swift_unknownObjectRetain();
      }
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        swift_bridgeObjectRetain_n();
        v22 = sub_1C0747708();
        v23 = sub_1C0747D68();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = swift_slowAlloc();
          v25 = swift_slowAlloc();
          v54 = (_QWORD *)v25;
          *(_DWORD *)v24 = 136315138;
          sub_1C0746EF8();
          *(_QWORD *)(v24 + 4) = sub_1C069092C(v0, v20, (uint64_t *)&v54);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0671000, v22, v23, "Nil value for %s", (uint8_t *)v24, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v25, -1, -1);
          MEMORY[0x1C3BA0D04](v24, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

      }
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v54 = v4;
      v3 = (unint64_t)v4;
      v28 = sub_1C069C918(v0, v20);
      v29 = v4[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
        break;
      v32 = v27;
      if (v4[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v8 = v53;
          if ((v27 & 1) != 0)
            goto LABEL_15;
        }
        else
        {
          v3 = (unint64_t)&v54;
          sub_1C06DF3EC();
          v4 = v54;
          v8 = v53;
          if ((v32 & 1) != 0)
            goto LABEL_15;
        }
      }
      else
      {
        sub_1C0706504(v31, isUniquelyReferenced_nonNull_native);
        v4 = v54;
        v3 = (unint64_t)v54;
        v33 = sub_1C069C918(v0, v20);
        if ((v32 & 1) != (v34 & 1))
        {
          sub_1C07482F0();
          return;
        }
        v28 = v33;
        v8 = v53;
        if ((v32 & 1) != 0)
        {
LABEL_15:
          v3 = v4[7];
          swift_unknownObjectRelease();
          *(_QWORD *)(v3 + 8 * v28) = v21;
          goto LABEL_16;
        }
      }
      v4[(v28 >> 6) + 8] |= 1 << v28;
      v35 = (uint64_t *)(v4[6] + 16 * v28);
      *v35 = v0;
      v35[1] = v20;
      *(_QWORD *)(v4[7] + 8 * v28) = v21;
      v36 = v4[2];
      v37 = __OFADD__(v36, 1);
      v38 = v36 + 1;
      if (v37)
        goto LABEL_40;
      v4[2] = v38;
      sub_1C0746EF8();
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      ++v18;
      v19 += 2;
      if (v51 == v18)
      {
        v0 = v50;
        v39 = *(void **)(v50 + 168);
        swift_bridgeObjectRelease();

        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    sub_1C0746EF8();
    v40 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v40)
      goto LABEL_43;
  }
  __break(1u);
LABEL_51:
  __break(1u);
}

uint64_t type metadata accessor for SpotLightFetcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for SpotLightFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SpotLightFetcher.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SpotLightFetcher.fetchItem(itemID:indexBundleId:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 88)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 88));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1C06A2938;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_1C06B0524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C06B056C()
{
  unint64_t result;

  result = qword_1ED4FFE28;
  if (!qword_1ED4FFE28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4FFE28);
  }
  return result;
}

uint64_t type metadata accessor for DemoContactSuggester()
{
  return objc_opt_self();
}

uint64_t sub_1C06B05CC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v0 = sub_1C06A97F8();
  if (qword_1EF61A390 != -1)
    swift_once();
  v1 = sub_1C0747720();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF61D370);
  swift_bridgeObjectRetain_n();
  v2 = sub_1C0747708();
  v3 = sub_1C0747D80();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_1C0746EF8();
    v7 = MEMORY[0x1C3B9FD8C](v6, MEMORY[0x1E0DEA968]);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1C069092C(v7, v9, &v11);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v2, v3, "overriding contact suggestions: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v5, -1, -1);
    MEMORY[0x1C3BA0D04](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v0;
}

uint64_t sub_1C06B0798(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, _QWORD *a4)
{
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(unint64_t, unint64_t, unint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074CD70;
  *(_QWORD *)(inited + 32) = a1;
  v16 = inited;
  sub_1C0747B34();
  sub_1C0746F64();
  v9 = sub_1C06A4E00(v16);
  swift_bridgeObjectRelease();
  if (v9 >> 62)
  {
    sub_1C0746EF8();
    v15 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v15 == 1)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
LABEL_3:
    v10 = a4[3];
    v11 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v10);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = a1;
    v13 = *(void (**)(unint64_t, unint64_t, unint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v11 + 24);
    sub_1C0746F64();
    sub_1C0746F64();
    v13(v9, 0xD000000000000022, 0x80000001C0752730, sub_1C06B1CF8, v12, v10, v11);
    swift_bridgeObjectRelease();
    return sub_1C0747030();
  }
  swift_bridgeObjectRelease();
  if (qword_1EF61A3F8 != -1)
    swift_once();
  return a2(qword_1EF629DE0, 1);
}

void sub_1C06B095C(void *a1, void (*a2)(void))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    ((void (*)(void *, uint64_t))a2)(a1, 1);

  }
  else
  {
    sub_1C069FC08();
    a2();
    swift_bridgeObjectRelease();
  }
}

uint64_t ScreenTimeRequestEventConsumer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ScreenTimeRequestEventConsumer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScreenTimeRequestEventConsumer()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScreenTimeRequestEventConsumer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1C06B0A14(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, void *a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t);
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;

  v63 = a8;
  v64 = a7;
  v65 = a6;
  v66 = a4;
  v60 = a5;
  v67 = a3;
  v68 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v51 - v16;
  v18 = sub_1C07473E4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v70 = (uint64_t)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v51 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v51 - v25;
  objc_msgSend(a1, sel_eventTime);
  sub_1C0747324();
  v27 = objc_msgSend(a1, sel_requestID);
  v28 = sub_1C0747930();
  v56 = v29;
  v57 = v28;

  v55 = objc_msgSend(a1, sel_kind);
  v54 = objc_msgSend(a1, sel_status);
  v61 = v19;
  v62 = v18;
  v30 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v58 = v24;
  v30(v24, v26, v18);
  if (qword_1EF61A348 != -1)
    swift_once();
  v31 = __swift_project_value_buffer(v11, (uint64_t)qword_1EF629D58);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v31, v11);
  v32 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v33 = *(void (**)(char *, uint64_t))(v12 + 8);
  v33(v15, v11);
  sub_1C0747390();
  v33(v17, v11);
  v69 = objc_msgSend(a1, sel_approvalTime);
  v34 = objc_msgSend(a1, sel_websitePath);
  if (v34)
  {
    v35 = v34;
    v36 = sub_1C0747930();
    v52 = v37;
    v53 = v36;

  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  v38 = objc_msgSend(a1, sel_bundleID);
  v59 = v26;
  if (v38)
  {
    v39 = v38;
    v40 = sub_1C0747930();
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0;
  }
  type metadata accessor for ScreenTimeRequestItem();
  swift_allocObject();
  v43 = v60;
  sub_1C0746EF8();
  v44 = v64;
  v45 = v65;
  sub_1C06A0A38(v65, v64);
  v46 = a9;
  v47 = v63;
  v48 = v67;
  sub_1C0746EF8();
  sub_1C0746EF8();
  v49 = sub_1C06A0010(v57, v56, v55, v54, (uint64_t)v58, v70, v69, v47, a9, a10, v53, v52, v68, v48, v40, v42, v66, v43, v45,
          v44);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v62);
  return v49;
}

uint64_t sub_1C06B0DD4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, void *a9, uint64_t a10, _QWORD *a11, uint64_t (*a12)(uint64_t, uint64_t), uint64_t a13)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *boxed_opaque_existential_1Tm;
  void (*v38)(uint64_t *, char *, uint64_t);
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  void (*v103)(uint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  void *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  char v116;
  id v117;
  void *object;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  void *v124;
  id v125;
  char v126;
  uint64_t v127;
  void *v128;
  id v129;
  char v130;
  int v131;
  char v132;
  char *v133;
  id v134;
  char *v135;
  void (*v136)(char *, uint64_t);
  double v137;
  double v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  char v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  void (*v158)(uint64_t, unint64_t, unint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  id v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t (*v172)(uint64_t, uint64_t);
  uint64_t v173;
  uint64_t v174;
  _OWORD v175[2];
  __int128 v176;
  uint64_t v177;

  v172 = a12;
  v173 = a13;
  v171 = a11;
  v164 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v167 = *(_QWORD *)(v164 - 8);
  v21 = MEMORY[0x1E0C80A78](v164);
  v165 = (char *)&v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v166 = (char *)&v160 - v23;
  v24 = sub_1C07473E4();
  v169 = *(_QWORD *)(v24 - 8);
  v170 = v24;
  MEMORY[0x1E0C80A78](v24);
  v168 = (char *)&v160 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1C06B0A14(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  if (v26)
  {
    v27 = v26;
    v28 = OBJC_IVAR____TtC6People21ScreenTimeRequestItem_status;
    if (*(_DWORD *)(v26 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_status) == 1)
    {
      v29 = (void *)MEMORY[0x1C3BA06EC]();
      sub_1C06B0798(v27, v172, v173, v171);
      objc_autoreleasePoolPop(v29);
      return sub_1C0747030();
    }
    v31 = OBJC_IVAR____TtC6People21ScreenTimeRequestItem_actionFamilyMember;
    if (!*(_QWORD *)(v26 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_actionFamilyMember))
    {
      if (qword_1EF61A378 == -1)
      {
LABEL_16:
        v88 = sub_1C0747720();
        __swift_project_value_buffer(v88, (uint64_t)qword_1EF61D340);
        sub_1C0746F64();
        v89 = sub_1C0747708();
        v90 = sub_1C0747D68();
        if (os_log_type_enabled(v89, v90))
        {
          v91 = (uint8_t *)swift_slowAlloc();
          v92 = swift_slowAlloc();
          *(_DWORD *)v91 = 136315138;
          *(_QWORD *)&v176 = v92;
          v93 = *(_QWORD *)(v27 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
          v94 = *(_QWORD *)(v27 + OBJC_IVAR____TtC6People13IndexableItem_indexableID + 8);
          sub_1C0746EF8();
          *(_QWORD *)&v175[0] = sub_1C069092C(v93, v94, (uint64_t *)&v176);
          sub_1C0747E40();
          sub_1C0747030();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0671000, v89, v90, "Deleting screenTimeRequest %s - no actionFamilyMember", v91, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v92, -1, -1);
          MEMORY[0x1C3BA0D04](v91, -1, -1);

        }
        else
        {

          sub_1C0747030();
        }
        v97 = v171[3];
        v98 = v171[4];
        __swift_project_boxed_opaque_existential_1(v171, v97);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
        v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = xmmword_1C074B820;
        v100 = *(_QWORD *)(v27 + OBJC_IVAR____TtC6People13IndexableItem_indexableID + 8);
        *(_QWORD *)(v99 + 32) = *(_QWORD *)(v27 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
        *(_QWORD *)(v99 + 40) = v100;
        v101 = (_QWORD *)swift_allocObject();
        v102 = v173;
        v101[2] = v172;
        v101[3] = v102;
        v101[4] = v27;
        v103 = *(void (**)(uint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t))(v98 + 32);
        sub_1C0746F64();
        sub_1C0746EF8();
        sub_1C0746F64();
        v103(v99, 0xD000000000000022, 0x80000001C0752730, sub_1C06B1CD8, v101, v97, v98);
        swift_bridgeObjectRelease();
        sub_1C0747030();
        return sub_1C0747030();
      }
LABEL_45:
      swift_once();
      goto LABEL_16;
    }
    v163 = a1;
    objc_msgSend(a1, sel_eventTime);
    v32 = v168;
    sub_1C0747324();
    v33 = sub_1C0747930();
    v35 = v34;
    v36 = v170;
    v177 = v170;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v176);
    v38 = *(void (**)(uint64_t *, char *, uint64_t))(v169 + 16);
    v38(boxed_opaque_existential_1Tm, v32, v36);
    sub_1C0685D00(&v176, v175);
    v39 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v174 = v39;
    sub_1C069D3FC(v175, v33, v35, isUniquelyReferenced_nonNull_native);
    v41 = v174;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = sub_1C0747930();
    v44 = v43;
    v177 = v36;
    v45 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v176);
    v38(v45, v32, v36);
    sub_1C0685D00(&v176, v175);
    v46 = swift_isUniquelyReferenced_nonNull_native();
    v174 = v41;
    sub_1C069D3FC(v175, v42, v44, v46);
    v47 = v174;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = sub_1C0747930();
    v50 = v49;
    v51 = *(_DWORD *)(v27 + v28);
    v52 = MEMORY[0x1E0DEDBC8];
    v177 = MEMORY[0x1E0DEDBC8];
    LODWORD(v176) = v51;
    sub_1C0685D00(&v176, v175);
    v53 = swift_isUniquelyReferenced_nonNull_native();
    v174 = v47;
    sub_1C069D3FC(v175, v48, v50, v53);
    v54 = v174;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = *(void **)(v27 + v31);
    if (v55)
    {
      v56 = v55;
      v57 = objc_msgSend(v56, sel_dsid);
      if (v57)
      {
        v58 = v57;
        v59 = sub_1C0747930();
        v61 = v60;
        v177 = sub_1C069DDE4(0, (unint64_t *)&qword_1EF61CEA0);
        *(_QWORD *)&v176 = v58;
        sub_1C0685D00(&v176, v175);
        v62 = v58;
        v63 = swift_isUniquelyReferenced_nonNull_native();
        v174 = v54;
        sub_1C069D3FC(v175, v59, v61, v63);
        v54 = v174;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v64 = objc_msgSend(v56, sel_contactIncludingImage_, 0);
      if (v64)
      {
        v65 = v64;
        v66 = objc_msgSend(v64, sel_identifier);
        v67 = sub_1C0747930();
        v69 = v68;

        v177 = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v176 = v67;
        *((_QWORD *)&v176 + 1) = v69;
        sub_1C0685D00(&v176, v175);
        v70 = swift_isUniquelyReferenced_nonNull_native();
        v174 = v54;
        sub_1C069D3FC(v175, 0xD00000000000001DLL, 0x80000001C0752D90, v70);
        v71 = v174;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v162 = sub_1C0747930();
        v73 = v72;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
        v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_1C074B820;
        v75 = objc_msgSend(v65, sel_identifier);
        v76 = sub_1C0747930();
        v78 = v77;

        *(_QWORD *)(v74 + 32) = v76;
        *(_QWORD *)(v74 + 40) = v78;
        v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
        *(_QWORD *)&v176 = v74;
        sub_1C0685D00(&v176, v175);
        v79 = swift_isUniquelyReferenced_nonNull_native();
        v174 = v71;
        sub_1C069D3FC(v175, v162, v73, v79);
        v54 = v174;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v161 = sub_1C0747930();
      v81 = v80;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v82 = swift_allocObject();
      v162 = xmmword_1C074B820;
      *(_OWORD *)(v82 + 16) = xmmword_1C074B820;
      v83 = objc_msgSend(v56, sel_fullName);
      if (v83)
      {
        v84 = v83;
        v85 = sub_1C0747930();
        v87 = v86;

      }
      else
      {
        v85 = 0;
        v87 = 0xE000000000000000;
      }
      *(_QWORD *)(v82 + 32) = v85;
      *(_QWORD *)(v82 + 40) = v87;
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
      v177 = v104;
      *(_QWORD *)&v176 = v82;
      sub_1C0685D00(&v176, v175);
      v105 = swift_isUniquelyReferenced_nonNull_native();
      v174 = v54;
      sub_1C069D3FC(v175, v161, v81, v105);
      v106 = v174;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v107 = sub_1C0747930();
      v109 = v108;
      v110 = swift_allocObject();
      *(_OWORD *)(v110 + 16) = v162;
      v111 = objc_msgSend(v56, sel_appleID);
      if (v111)
      {
        v112 = v111;
        v113 = sub_1C0747930();
        v115 = v114;

      }
      else
      {
        v113 = 0;
        v115 = 0xE000000000000000;
      }
      v95 = v164;
      *(_QWORD *)(v110 + 32) = v113;
      *(_QWORD *)(v110 + 40) = v115;
      v177 = v104;
      *(_QWORD *)&v176 = v110;
      sub_1C0685D00(&v176, v175);
      v116 = swift_isUniquelyReferenced_nonNull_native();
      v174 = v106;
      sub_1C069D3FC(v175, v107, v109, v116);
      v54 = v174;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = MEMORY[0x1E0DEDBC8];
      v96 = *(void **)(v27 + 16);
      if (v96)
        goto LABEL_27;
    }
    else
    {
      v95 = v164;
      v96 = *(void **)(v27 + 16);
      if (v96)
      {
LABEL_27:
        sub_1C0746F64();
        v117 = objc_msgSend(v96, sel_identifier);
        sub_1C0747930();

LABEL_28:
        object = String.trimToNil()().value._object;
        sub_1C0747030();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!object)
        {
          v119 = sub_1C0747930();
          v121 = v120;
          v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
          *(_QWORD *)&v176 = MEMORY[0x1E0DEE9D8];
          sub_1C0685D00(&v176, v175);
          v122 = swift_isUniquelyReferenced_nonNull_native();
          v174 = v54;
          sub_1C069D3FC(v175, v119, v121, v122);
          v54 = v174;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v123 = sub_1C069FE70();
        if (v123)
        {
          v124 = (void *)v123;
          v177 = sub_1C069DDE4(0, &qword_1EF61C4D0);
          *(_QWORD *)&v176 = v124;
          sub_1C0685D00(&v176, v175);
          v125 = v124;
          v126 = swift_isUniquelyReferenced_nonNull_native();
          v174 = v54;
          sub_1C069D3FC(v175, 0xD00000000000001ELL, 0x80000001C0752D70, v126);
          v54 = v174;

          swift_bridgeObjectRelease();
        }
        v127 = sub_1C069FF40();
        if (v127)
        {
          v128 = (void *)v127;
          v177 = sub_1C069DDE4(0, &qword_1EF61C4D0);
          *(_QWORD *)&v176 = v128;
          sub_1C0685D00(&v176, v175);
          v129 = v128;
          v130 = swift_isUniquelyReferenced_nonNull_native();
          v174 = v54;
          sub_1C069D3FC(v175, 0xD00000000000001DLL, 0x80000001C0752DB0, v130);
          v54 = v174;

          swift_bridgeObjectRelease();
        }
        v131 = *(_DWORD *)(v27 + OBJC_IVAR____TtC6People21ScreenTimeRequestItem_approvalTime);
        if (v131)
        {
          v177 = v52;
          LODWORD(v176) = v131;
          sub_1C0685D00(&v176, v175);
          v132 = swift_isUniquelyReferenced_nonNull_native();
          v174 = v54;
          sub_1C069D3FC(v175, 0xD000000000000022, 0x80000001C0752DD0, v132);
          v54 = v174;
          swift_bridgeObjectRelease();
        }
        v133 = v165;
        sub_1C069FDD0();
        v134 = objc_msgSend((id)objc_opt_self(), sel_seconds);
        v135 = v166;
        sub_1C07470CC();

        v136 = *(void (**)(char *, uint64_t))(v167 + 8);
        v136(v133, v95);
        sub_1C07470C0();
        v138 = v137;
        v136(v135, v95);
        if ((~*(_QWORD *)&v138 & 0x7FF0000000000000) != 0)
        {
          if (v138 > -9.22337204e18)
          {
            if (v138 < 9.22337204e18)
            {
              v139 = (uint64_t)v138;
              v140 = sub_1C0747930();
              v142 = v141;
              if ((uint64_t)v138 < 0)
                v139 = -1;
              v143 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v139);
              v177 = sub_1C069DDE4(0, (unint64_t *)&qword_1EF61CEA0);
              *(_QWORD *)&v176 = v143;
              sub_1C0685D00(&v176, v175);
              v144 = swift_isUniquelyReferenced_nonNull_native();
              v174 = v54;
              sub_1C069D3FC(v175, v140, v142, v144);
              v145 = v174;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v146 = objc_msgSend(v163, sel_requestID);
              v147 = sub_1C0747930();
              v149 = v148;

              sub_1C06A5858(v147, v149, 1, v145);
              v151 = v150;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v152 = v171[3];
              v153 = v171[4];
              __swift_project_boxed_opaque_existential_1(v171, v152);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
              v154 = swift_allocObject();
              *(_OWORD *)(v154 + 16) = xmmword_1C074CD70;
              *(_QWORD *)(v154 + 32) = v151;
              *(_QWORD *)&v176 = v154;
              sub_1C0747B34();
              v155 = v176;
              v156 = (_QWORD *)swift_allocObject();
              v157 = v173;
              v156[2] = v172;
              v156[3] = v157;
              v156[4] = v27;
              v158 = *(void (**)(uint64_t, unint64_t, unint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v153 + 24);
              sub_1C0746F64();
              sub_1C0746F64();
              v159 = v151;
              v158(v155, 0xD000000000000022, 0x80000001C0752730, sub_1C06B1CF8, v156, v152, v153);

              sub_1C0747030();
              swift_bridgeObjectRelease();
              sub_1C0747030();
              return (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v168, v170);
            }
            goto LABEL_44;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
    }
    sub_1C0746F64();
    goto LABEL_28;
  }
  if (qword_1EF61A3F8 != -1)
    swift_once();
  return v172(qword_1EF629DE0, 1);
}

void sub_1C06B1CD8(void *a1)
{
  uint64_t v1;

  sub_1C06B095C(a1, *(void (**)(void))(v1 + 16));
}

People::QuickActionType_optional __swiftcall QuickActionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  People::QuickActionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t QuickActionType.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aVoicecalvideoc_0[8 * *v0];
}

uint64_t sub_1C06B1D78(char *a1, char *a2)
{
  return sub_1C06B9FA0(*a1, *a2);
}

uint64_t sub_1C06B1D84()
{
  return sub_1C0675C14();
}

uint64_t sub_1C06B1D8C()
{
  return sub_1C067600C();
}

uint64_t sub_1C06B1D94()
{
  return sub_1C06771BC();
}

People::QuickActionType_optional sub_1C06B1D9C(Swift::String *a1)
{
  return QuickActionType.init(rawValue:)(*a1);
}

uint64_t sub_1C06B1DA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = QuickActionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *nativeQuickActions(deviceClass:type:contactIdentifier:handle:customIdentifier:isPhoneNumber:)(unsigned __int8 *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char v37;
  char v38;
  char v39;

  LODWORD(v11) = *a1;
  v12 = *a2;
  if (!*a2)
  {
    v38 = *a2;
    if ((_DWORD)v11 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = sub_1C0748284();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C074C980;
    *(_QWORD *)(v13 + 32) = sub_1C0747930();
    *(_QWORD *)(v13 + 40) = v16;
    v39 = 0;
    *(_QWORD *)(v13 + 48) = sub_1C0747930();
    *(_QWORD *)(v13 + 56) = v17;
    goto LABEL_13;
  }
  if (v12 == 1)
  {
    v38 = 1;
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C074B820;
    goto LABEL_12;
  }
  if (v12 == 2)
  {
    v38 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C074B820;
LABEL_12:
    *(_QWORD *)(v13 + 32) = sub_1C0747930();
    *(_QWORD *)(v13 + 40) = v18;
    v39 = 1;
LABEL_13:
    sub_1C0746EF8();
    v19 = *(_QWORD *)(v13 + 32);
    v20 = *(_QWORD *)(v13 + 40);
    v22 = v19 == sub_1C0747930() && v20 == v21;
    if ((v22 || (v23 = sub_1C0748284(), sub_1C0746EF8(), swift_bridgeObjectRelease(), (v23 & 1) != 0)) && (a9 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if ((v39 & 1) != 0)
      {
LABEL_38:
        swift_bridgeObjectRelease_n();
        return v14;
      }
    }
    else
    {
      v37 = v11;
      sub_1C0746EF8();
      v11 = a8;
      sub_1C0746EF8();
      v24 = a6;
      sub_1C0746EF8();
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1C06B3AC0(0, v14[2] + 1, 1, v14);
      v26 = v14[2];
      v25 = v14[3];
      if (v26 >= v25 >> 1)
        v14 = sub_1C06B3AC0((_QWORD *)(v25 > 1), v26 + 1, 1, v14);
      v14[2] = v26 + 1;
      v27 = &v14[10 * v26];
      *((_BYTE *)v27 + 32) = v38;
      v27[5] = a3;
      v27[6] = a4;
      v27[7] = a7;
      v27[8] = v11;
      a6 = v24;
      a8 = v11;
      v27[9] = a5;
      v27[10] = a6;
      v27[11] = v19;
      v27[12] = v20;
      *((_BYTE *)v27 + 104) = 1;
      LOBYTE(v11) = v37;
      *((_BYTE *)v27 + 105) = v37;
      if ((v39 & 1) != 0)
        goto LABEL_38;
    }
    v28 = *(_QWORD *)(v13 + 48);
    v29 = *(_QWORD *)(v13 + 56);
    v31 = v28 == sub_1C0747930() && v29 == v30;
    if ((v31 || (v32 = sub_1C0748284(), sub_1C0746EF8(), swift_bridgeObjectRelease(), (v32 & 1) != 0)) && (a9 & 1) == 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0746EF8();
      sub_1C0746EF8();
      sub_1C0746EF8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1C06B3AC0(0, v14[2] + 1, 1, v14);
      v34 = v14[2];
      v33 = v14[3];
      if (v34 >= v33 >> 1)
        v14 = sub_1C06B3AC0((_QWORD *)(v33 > 1), v34 + 1, 1, v14);
      v14[2] = v34 + 1;
      v35 = &v14[10 * v34];
      *((_BYTE *)v35 + 32) = v38;
      v35[5] = a3;
      v35[6] = a4;
      v35[7] = a7;
      v35[8] = a8;
      v35[9] = a5;
      v35[10] = a6;
      v35[11] = v28;
      v35[12] = v29;
      *((_BYTE *)v35 + 104) = 1;
      *((_BYTE *)v35 + 105) = v11;
    }
    goto LABEL_38;
  }
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

void __swiftcall QuickAction.init(type:contactIdentifier:customIdentifier:handle:bundleID:useStandardProtocol:deviceClass:)(People::QuickAction *__return_ptr retstr, People::QuickActionType type, Swift::String contactIdentifier, Swift::String_optional customIdentifier, Swift::String_optional handle, Swift::String_optional bundleID, Swift::Bool useStandardProtocol, People::DeviceClass_optional deviceClass)
{
  People::DeviceClass v8;
  People::DeviceClass *v9;

  v8 = *v9;
  retstr->type = *(_BYTE *)type;
  retstr->contactIdentifier = contactIdentifier;
  retstr->customIdentifier = customIdentifier;
  retstr->handle = handle;
  retstr->bundleID = bundleID;
  retstr->useStandardProtocol = useStandardProtocol;
  retstr->deviceClass.value = v8;
}

void QuickAction.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t QuickAction.contactIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C0746EF8();
  return v1;
}

uint64_t QuickAction.customIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1C0746EF8();
  return v1;
}

uint64_t QuickAction.handle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1C0746EF8();
  return v1;
}

uint64_t QuickAction.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1C0746EF8();
  return v1;
}

uint64_t QuickAction.useStandardProtocol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

void QuickAction.deviceClass.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 73);
}

uint64_t QuickAction.iconSystemName.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C06B2348 + 4 * byte_1C074CDB0[*v0]))(0xD000000000000012, 0x80000001C0753A20);
}

uint64_t sub_1C06B2348()
{
  return 0x69662E656E6F6870;
}

uint64_t sub_1C06B2374()
{
  return 0x2E6567617373656DLL;
}

uint64_t sub_1C06B2394()
{
  return 0x65706F6C65766E65;
}

uint64_t QuickAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v28 = a1;
  v27 = sub_1C07471BC();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *v1;
  v4 = *((_QWORD *)v1 + 1);
  v5 = *((_QWORD *)v1 + 2);
  v7 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  v8 = *((_QWORD *)v1 + 6);
  v10 = *((_QWORD *)v1 + 7);
  v11 = *((_QWORD *)v1 + 8);
  v24 = v1[72];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BD70);
  inited = swift_initStackObject();
  v13 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1C074BF60;
  *(_BYTE *)(inited + 32) = 0;
  v14 = *(_QWORD *)&aLocationl_0[8 * v3 + 8];
  *(_QWORD *)(inited + 40) = *(_QWORD *)&aVoicecalvideoc_0[8 * v3];
  *(_QWORD *)(inited + 48) = v14;
  *(_BYTE *)(inited + 56) = 1;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = v5;
  *(_BYTE *)(inited + 80) = 2;
  *(_QWORD *)(inited + 88) = v7;
  *(_QWORD *)(inited + 96) = v6;
  *(_BYTE *)(inited + 104) = 3;
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 120) = v8;
  *(_BYTE *)(inited + 128) = 5;
  *(_QWORD *)(inited + 136) = v10;
  *(_QWORD *)(inited + 144) = v11;
  *(_BYTE *)(inited + 152) = 6;
  v15 = 1702195828;
  if (!v24)
    v15 = 0x65736C6166;
  v16 = 0xE500000000000000;
  if (v24)
    v16 = 0xE400000000000000;
  *(_QWORD *)(inited + 160) = v15;
  *(_QWORD *)(inited + 168) = v16;
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  v17 = sub_1C06F60CC(v13);
  v18 = sub_1C06F5B4C(MEMORY[0x1E0DEE9D8]);
  v30 = 0;
  v19 = sub_1C068AB9C(v17);
  swift_bridgeObjectRelease();
  v20 = sub_1C068ADC0(v18);
  swift_bridgeObjectRelease();
  v29 = v19;
  sub_1C068CC84(v20);
  LOBYTE(v29) = 0;
  v21 = v25;
  URLComponents.init(action:params:scheme:)(&v30);
  sub_1C0747168();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v21, v27);
}

uint64_t QuickAction.standardProtocolURL.getter@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  const char *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v3 = sub_1C07470FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *((_QWORD *)v1 + 6);
  if (!v7)
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v26 = sub_1C0747720();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED4FF8B0);
    v21 = sub_1C0747708();
    v27 = sub_1C0747D74();
    if (os_log_type_enabled(v21, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C0671000, v21, v27, "Missing handle for standardProtocolURL in action", v28, 2u);
      MEMORY[0x1C3BA0D04](v28, -1, -1);
    }
    goto LABEL_26;
  }
  v40 = a1;
  v39 = *v1;
  v8 = *((_QWORD *)v1 + 5);
  v9 = *((_QWORD *)v1 + 8);
  v38 = *((_QWORD *)v1 + 7);
  v10 = v1[72];
  v11 = v1[73];
  v41 = v8;
  v42 = v7;
  sub_1C068F2D0();
  v12 = sub_1C0747E88();
  if (v13)
  {
    v41 = v12;
    v42 = v13;
    sub_1C07470E4();
    sub_1C0747E7C();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    if (v15)
    {
      if (v11 != 3)
        goto LABEL_5;
LABEL_18:
      swift_bridgeObjectRelease();
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v20 = sub_1C0747720();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED4FF8B0);
      v21 = sub_1C0747708();
      v22 = sub_1C0747D74();
      v23 = os_log_type_enabled(v21, v22);
      a1 = v40;
      if (!v23)
        goto LABEL_26;
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      v25 = "Could not find device class";
      goto LABEL_31;
    }
  }
  sub_1C0746EF8();
  if (v11 == 3)
    goto LABEL_18;
LABEL_5:
  if (!v10)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v31 = sub_1C0747720();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED4FF8B0);
    v21 = sub_1C0747708();
    v22 = sub_1C0747D74();
    v32 = os_log_type_enabled(v21, v22);
    a1 = v40;
    if (!v32)
      goto LABEL_26;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    v25 = "Trying to access standardProtocolURL but useStandardProtocol is false";
LABEL_31:
    _os_log_impl(&dword_1C0671000, v21, v22, v25, v24, 2u);
    MEMORY[0x1C3BA0D04](v24, -1, -1);
LABEL_26:

    v29 = sub_1C07472C4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
  if (v9)
    v16 = v38;
  else
    v16 = 0;
  if (v9)
    v17 = v9;
  else
    v17 = 0xE000000000000000;
  if (v16 != sub_1C0747930() || v17 != v18)
    sub_1C0748284();
  v33 = v40;
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
    if (v39 == 1)
    {
      v34 = 0x656D697465636166;
      v35 = 0xE90000000000003ALL;
    }
    else
    {
      if (v39 != 2)
      {
        v36 = sub_1C07472C4();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v33, 1, 1, v36);
        return swift_bridgeObjectRelease();
      }
      v34 = 980643187;
      v35 = 0xE400000000000000;
    }
    v41 = v34;
    v42 = v35;
  }
  else
  {
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_1C07479CC();
    swift_bridgeObjectRelease();
    sub_1C07479CC();
  }
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07472B8();
  return swift_bridgeObjectRelease();
}

double QuickAction.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  char v33;
  Swift::String_optional v34;
  uint64_t v35;
  Swift::String_optional v36;
  Swift::String_optional v37;
  Swift::String_optional v38;
  Swift::String_optional v39;
  Swift::String_optional v40;
  unsigned __int16 v41;
  void *v42;
  __int16 v43;
  uint64_t v44;
  double result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v54;
  _QWORD v55[2];
  char v56;

  v4 = sub_1C07470FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B770);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07471BC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v49 - v16;
  sub_1C074715C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v18 = sub_1C07472C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
    sub_1C068A9AC((uint64_t)v10, &qword_1EF61B770);
LABEL_30:
    result = 0.0;
    *(_OWORD *)(a2 + 58) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v54 = a1;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  v19 = sub_1C0747198();
  if (v20)
  {
    v21 = v20;
  }
  else
  {
    v19 = 0;
    v21 = 0xE000000000000000;
  }
  if (v19 == 0x656C706F6570 && v21 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    goto LABEL_16;
  }
  v23 = sub_1C0748284();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  if ((v23 & 1) != 0)
  {
LABEL_16:
    v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v15, v11);
    goto LABEL_17;
  }
  v24 = sub_1C0747174();
  v26 = v25;
  swift_beginAccess();
  if (!v26)
  {
    v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v15, v11);
    goto LABEL_29;
  }
  if (v24 != qword_1EF61B3E0 || v26 != qword_1EF61B3E8)
  {
    LODWORD(countAndFlagsBits) = sub_1C0748284();
    v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v15, v11);
    swift_bridgeObjectRelease();
    if ((countAndFlagsBits & 1) != 0)
      goto LABEL_17;
LABEL_29:
    v48 = sub_1C07472C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v54, v48);
    v27(v17, v11);
    goto LABEL_30;
  }
  v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v15, v11);
  swift_bridgeObjectRelease();
LABEL_17:
  v55[0] = sub_1C0747180();
  v55[1] = v28;
  sub_1C07470D8();
  sub_1C068F2D0();
  v29 = sub_1C0747E64();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = v29;
  v32._object = v31;
  PeopleURL.PathAction.init(rawValue:)(v32);
  if (v56 == 4)
    goto LABEL_29;
  sub_1C06BAE2C(v56);
  if ((v33 & 1) == 0)
    goto LABEL_29;
  LOBYTE(v55[0]) = 0;
  v34 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v55);
  if (!v34.value._object)
    goto LABEL_29;
  QuickActionType.init(rawValue:)(v34.value);
  v35 = LOBYTE(v55[0]);
  if (LOBYTE(v55[0]) == 5)
    goto LABEL_29;
  LOBYTE(v55[0]) = 1;
  v36 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v55);
  if (!v36.value._object)
    goto LABEL_29;
  LOBYTE(v55[0]) = 2;
  v37 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v55);
  object = v37.value._object;
  countAndFlagsBits = v37.value._countAndFlagsBits;
  LOBYTE(v55[0]) = 3;
  v38 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v55);
  v50 = v38.value._object;
  v51 = v38.value._countAndFlagsBits;
  LOBYTE(v55[0]) = 5;
  v39 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v55);
  v49 = v39.value._object;
  LOBYTE(v55[0]) = 6;
  v40 = URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v55);
  v41 = (unsigned __int16)v40.value._object;
  if (v40.value._object)
  {
    v42 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    v41 = (unsigned __int16)objc_msgSend(v42, sel_BOOLValue);

  }
  if (qword_1EF61A4D0 != -1)
    swift_once();
  v43 = byte_1EF61E290;
  v44 = sub_1C07472C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v54, v44);
  v27(v17, v11);
  *(_QWORD *)a2 = v35;
  *(_QWORD *)(a2 + 8) = v36.value._countAndFlagsBits;
  v46 = countAndFlagsBits;
  *(_QWORD *)(a2 + 16) = v36.value._object;
  *(_QWORD *)(a2 + 24) = v46;
  v47 = v51;
  *(_QWORD *)(a2 + 32) = object;
  *(_QWORD *)(a2 + 40) = v47;
  *(_QWORD *)(a2 + 48) = v50;
  *(_QWORD *)(a2 + 56) = v39.value._countAndFlagsBits;
  *(_QWORD *)(a2 + 64) = v49;
  *(_WORD *)(a2 + 72) = v41 | (v43 << 8);
  return result;
}

void QuickAction.description.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  unint64_t v37;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = *((_QWORD *)v0 + 2);
  v20 = *((_QWORD *)v0 + 1);
  v6 = *((_QWORD *)v0 + 3);
  v7 = *((_QWORD *)v0 + 4);
  v8 = *((_QWORD *)v0 + 6);
  v17 = *((_QWORD *)v0 + 5);
  v18 = v6;
  v9 = *((_QWORD *)v0 + 8);
  v21 = *((_QWORD *)v0 + 7);
  v22 = v4;
  v23 = v0[72];
  v24 = v0[73];
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_1C0747FF0();
  v36 = v25;
  v37 = v26;
  sub_1C07479CC();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v19 = v5;
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v16 = v7;
  v10 = (uint64_t)v3;
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v11 = v17;
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v12 = v21;
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  LOBYTE(v4) = v23;
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  LOBYTE(v25) = v22;
  v26 = v20;
  v27 = v19;
  v28 = v18;
  v29 = v16;
  v30 = v11;
  v31 = v8;
  v32 = v12;
  v33 = v9;
  v13 = v24;
  v34 = v4;
  v35 = v24;
  QuickAction.standardProtocolURL.getter(v10);
  v14 = sub_1C07472C4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
  {
    sub_1C068A9AC(v10, &qword_1ED4FF788);
  }
  else
  {
    sub_1C0747240();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v14);
  }
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  __asm { BR              X9 }
}

uint64_t sub_1C06B3370()
{
  uint64_t v0;

  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  return *(_QWORD *)(v0 - 104);
}

_QWORD *sub_1C06B33E4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B33FC(a1, a2, a3, a4, &qword_1EF61C588);
}

_QWORD *sub_1C06B33F0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B33FC(a1, a2, a3, a4, &qword_1EF61C590);
}

_QWORD *sub_1C06B33FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B52C0(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B3504(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B33FC(a1, a2, a3, a4, &qword_1EF61C598);
}

_QWORD *sub_1C06B3510(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B33FC(a1, a2, a3, a4, &qword_1EF61C5A0);
}

uint64_t sub_1C06B351C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B3E08(a1, a2, a3, a4, &qword_1EF61C578, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

_QWORD *sub_1C06B3530(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B4E00(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B363C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C580);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B51D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B3748(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B33FC(a1, a2, a3, a4, &qword_1EF61C4E8);
}

_QWORD *sub_1C06B3754(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B377C(a1, a2, a3, a4, &qword_1EF61BA88, &qword_1EF61B450);
}

_QWORD *sub_1C06B3768(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06B377C(a1, a2, a3, a4, &qword_1EF61C4F8, &qword_1EF61A618);
}

_QWORD *sub_1C06B377C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1C06B53C8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B38A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C568);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B4FD8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B39B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C558);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B54D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B3AC0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C560);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1C06B55C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B3BDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEFB8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B4D10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C06B3CE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C550);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B57AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06B3DF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B3E08(a1, a2, a3, a4, &qword_1EF61C548, (uint64_t (*)(_QWORD))MEMORY[0x1E0D21538]);
}

uint64_t sub_1C06B3E08(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1C0748110();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C06B5AA4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1C06B4014(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C540);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B589C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06B4120(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B3E08(a1, a2, a3, a4, (uint64_t *)&unk_1EF61D180, (uint64_t (*)(_QWORD))type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem);
}

_QWORD *sub_1C06B4134(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C528);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B50E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06B4240(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B4268(a1, a2, a3, a4, &qword_1EF61C530, &qword_1EF61C538);
}

uint64_t sub_1C06B4254(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B4268(a1, a2, a3, a4, &qword_1EF61C518, &qword_1EF61C520);
}

uint64_t sub_1C06B4268(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1C0748110();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C06B598C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1C06B4474(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C510);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C06B4EF0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06B4580(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B3E08(a1, a2, a3, a4, &qword_1EF61C508, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

_QWORD *sub_1C06B4594(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1C06B56B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06B46B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C06B3E08(a1, a2, a3, a4, &qword_1EF61C500, type metadata accessor for LocationItem);
}

uint64_t _s6People11QuickActionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v23 = *(unsigned __int8 *)(a1 + 72);
  v19 = *(char *)(a1 + 73);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 48);
  v26 = *(_QWORD *)(a2 + 40);
  v27 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a2 + 56);
  v21 = *(_QWORD *)(a1 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a1 + 64);
  v22 = *(unsigned __int8 *)(a2 + 72);
  v18 = *(char *)(a2 + 73);
  if ((sub_1C06B9FA0(*(_BYTE *)a1, *(_BYTE *)a2) & 1) == 0)
    return 0;
  if (v2 == v7 && v3 == v8 || (v12 = sub_1C0748284(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v9)
        return 0;
      if (v5 != v10 || v4 != v9)
      {
        v14 = sub_1C0748284();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v6)
    {
      if (!v11)
        return 0;
      if (v27 != v26 || v6 != v11)
      {
        v15 = sub_1C0748284();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v25)
    {
      if (!v24)
        return 0;
      if (v21 == v20 && v25 == v24)
      {
        if (v23 != v22)
          return 0;
        goto LABEL_29;
      }
      v16 = sub_1C0748284();
      result = 0;
      if ((v16 & 1) == 0)
        return result;
    }
    else
    {
      result = 0;
      if (v24)
        return result;
    }
    if (((v23 ^ v22) & 1) != 0)
      return result;
LABEL_29:
    if ((_DWORD)v19 != 3)
    {
      if ((_DWORD)v18 == 3)
        return 0;
      if (qword_1C074CF60[v19] == qword_1C074CF60[v18] && qword_1C074CF78[v19] == qword_1C074CF78[v18])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (v17 & 1) != 0;
    }
    return (_DWORD)v18 == 3;
  }
  return result;
}

unint64_t sub_1C06B493C()
{
  unint64_t result;

  result = qword_1EF61C4E0;
  if (!qword_1EF61C4E0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionType, &type metadata for QuickActionType);
    atomic_store(result, (unint64_t *)&qword_1EF61C4E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for QuickActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C06B49CC + 4 * byte_1C074CDBE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C06B4A00 + 4 * byte_1C074CDB9[v4]))();
}

uint64_t sub_1C06B4A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06B4A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06B4A10);
  return result;
}

uint64_t sub_1C06B4A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06B4A24);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C06B4A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06B4A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QuickActionType()
{
  return &type metadata for QuickActionType;
}

uint64_t destroy for QuickAction()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuickAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  return a1;
}

uint64_t assignWithCopy for QuickAction(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for QuickAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 74))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuickAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 74) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 74) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickAction()
{
  return &type metadata for QuickAction;
}

uint64_t sub_1C06B4D10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B4E00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

char *sub_1C06B4EF0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B4FD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C570);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B50E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B51D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B52C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF078);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B53C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B54D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B55C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B56B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B57AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B589C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B598C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06B5AA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

id sub_1C06B5BBC()
{
  id *v0;

  return objc_msgSend(*v0, sel_reloadTimeline);
}

uint64_t PeopleTimelineControllerFactory.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PeopleTimelineControllerFactory.init()()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1C06B5BF8@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  unint64_t result;

  v2 = objc_allocWithZone(MEMORY[0x1E0D10110]);
  sub_1C0746EF8();
  sub_1C0746EF8();
  v3 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_initForAvocadoIdentifier_inBundleIdentifier_, v3, v4);

  result = sub_1C06B5CC0();
  a1[3] = result;
  a1[4] = &protocol witness table for CHSTimelineController;
  *a1 = v5;
  return result;
}

unint64_t sub_1C06B5CC0()
{
  unint64_t result;

  result = qword_1ED4FEC80;
  if (!qword_1ED4FEC80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4FEC80);
  }
  return result;
}

uint64_t PeopleTimelineControllerFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PeopleTimelineControllerFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06B5D14(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  _QWORD v6[6];

  v3 = *v2;
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1C06B5E04;
  v6[3] = &block_descriptor_4;
  v4 = _Block_copy(v6);
  sub_1C0746F64();
  objc_msgSend(v3, sel_allConfiguredWidgetsWithCompletion_, v4);
  _Block_release(v4);
  return sub_1C0747030();
}

uint64_t dispatch thunk of TimelineControllerProtocol.reloadTimeline()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineControllerFactoryProtocol.timelineController(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for PeopleTimelineControllerFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for PeopleTimelineControllerFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleTimelineControllerFactory.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PeopleTimelineControllerFactory.timelineController(for:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ChronoConfigurationReaderProtocol.allConfiguredWidgets(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1C06B5E04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C5A8);
    v4 = sub_1C0747B1C();
  }
  sub_1C0746F64();
  v6 = a3;
  v5(v4, a3);
  sub_1C0747030();

  return swift_bridgeObjectRelease();
}

void sub_1C06B5E84(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C06B5EC8()
{
  sub_1C07479CC();
  return swift_bridgeObjectRelease();
}

uint64_t static BiomeUtilities.shared.getter()
{
  type metadata accessor for BiomeUtilities();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for BiomeUtilities()
{
  return objc_opt_self();
}

id sub_1C06B6034(unsigned __int8 *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v31 = a2;
  v3 = sub_1C0747408();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0747D98();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0747774();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C0747DA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_1C0747FF0();
  sub_1C07479CC();
  v30 = sub_1C06B6518();
  sub_1C07479CC();
  v32 = v11;
  sub_1C06B5E84(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D8], v7);
  sub_1C0747768();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1C06B6554();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4FFEA0);
  sub_1C06B659C();
  sub_1C0747EC4();
  v12 = v31;
  v13 = (void *)sub_1C0747DBC();
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_1C07479CC();
  if ((v12 & 1) == 0)
  {
    sub_1C07479CC();
    v14 = v27;
    sub_1C0746DB4();
    sub_1C07473F0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
    sub_1C07479CC();
    swift_bridgeObjectRelease();
  }
  sub_1C07479CC();
  sub_1C06B5E84(v32);
  v36 = v34;
  v37 = v35;
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v15 = sub_1C0747720();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED4FF8B0);
  v16 = v36;
  v17 = v37;
  swift_bridgeObjectRetain_n();
  v18 = sub_1C0747708();
  v19 = sub_1C0747D68();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v34 = v21;
    *(_DWORD *)v20 = 136315394;
    sub_1C0746EF8();
    v33 = sub_1C069092C(v16, v17, &v34);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 1024;
    LODWORD(v33) = v12 & 1;
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v18, v19, "Creating listening scheduler for %s with waking: %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v21, -1, -1);
    MEMORY[0x1C3BA0D04](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v22 = objc_allocWithZone(MEMORY[0x1E0D025E0]);
  v23 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v22, sel_initWithIdentifier_targetQueue_waking_, v23, v13, v12 & 1);

  return v24;
}

uint64_t BiomeUtilities.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BiomeUtilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C06B6518()
{
  unint64_t result;

  result = qword_1ED4FFED0;
  if (!qword_1ED4FFED0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4FFED0);
  }
  return result;
}

unint64_t sub_1C06B6554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4FFEC0;
  if (!qword_1ED4FFEC0)
  {
    v1 = sub_1C0747D98();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4FFEC0);
  }
  return result;
}

unint64_t sub_1C06B659C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4FFEB0;
  if (!qword_1ED4FFEB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED4FFEA0);
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4FFEB0);
  }
  return result;
}

uint64_t method lookup function for BiomeUtilities()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeUtilities.scheduler(for:isDaemon:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t PersonTypeAppEntity.id.getter()
{
  uint64_t v1;

  sub_1C0746E2C();
  return v1;
}

uint64_t PersonTypeAppEntity.displayString.getter()
{
  uint64_t v1;

  sub_1C0746E2C();
  return v1;
}

uint64_t sub_1C06B6664()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE58);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C0747228();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1C0746FE8();
  __swift_allocate_value_buffer(v5, qword_1EF61C5B0);
  __swift_project_value_buffer(v5, (uint64_t)qword_1EF61C5B0);
  sub_1C0747210();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1C0746FDC();
}

uint64_t static PersonTypeAppEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF61A2E8 != -1)
    swift_once();
  v2 = sub_1C0746FE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61C5B0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static PersonTypeAppEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF61A2E8 != -1)
    swift_once();
  v2 = sub_1C0746FE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61C5B0);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static PersonTypeAppEntity.typeDisplayRepresentation.modify())()
{
  uint64_t v0;

  if (qword_1EF61A2E8 != -1)
    swift_once();
  v0 = sub_1C0746FE8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF61C5B0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static PersonTypeAppEntity.decodeContactID(for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];
  _QWORD v11[2];

  v3 = a1;
  if (a2)
  {
    v11[0] = 124;
    v11[1] = 0xE100000000000000;
    MEMORY[0x1E0C80A78](a1);
    v10[2] = v11;
    sub_1C0746EF8();
    v4 = (_QWORD *)sub_1C06B73B0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1C06B7B90, (uint64_t)v10, v3, a2);
    if (v4[2])
    {
      v5 = v4[4];
      v6 = v4[5];
      v7 = v4[6];
      v8 = v4[7];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v3 = MEMORY[0x1C3B9FBF4](v5, v6, v7, v8);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1C06B6A38()
{
  _QWORD *v0;
  uint64_t result;

  v0 = _s6People14ContactFetcherCACycfC_0();
  result = type metadata accessor for ContactFetcher();
  qword_1ED4FEEC0 = result;
  unk_1ED4FEEC8 = &protocol witness table for ContactFetcher;
  qword_1ED4FEEA8 = (uint64_t)v0;
  return result;
}

uint64_t static PersonTypeAppEntity.defaultQuery.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED4FEC90 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1C06B7BE4((uint64_t)&qword_1ED4FEEA8, a1);
}

uint64_t static PersonTypeAppEntity.defaultQuery.setter(uint64_t *a1)
{
  if (qword_1ED4FEC90 != -1)
    swift_once();
  swift_beginAccess();
  sub_1C06B7C20(a1, &qword_1ED4FEEA8);
  swift_endAccess();
  return sub_1C06B7C5C((uint64_t)a1);
}

uint64_t (*static PersonTypeAppEntity.defaultQuery.modify())()
{
  if (qword_1ED4FEC90 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C06B6BDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  result = sub_1C0747030();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C06B6C3C()
{
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t PersonTypeAppEntity.id.setter()
{
  return sub_1C0746E38();
}

uint64_t (*PersonTypeAppEntity.id.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C0746E20();
  return sub_1C06B6D0C;
}

uint64_t PersonTypeAppEntity.$id.getter()
{
  return sub_1C0746E44();
}

uint64_t sub_1C06B6D30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  result = sub_1C0747030();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C06B6D90()
{
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t PersonTypeAppEntity.displayString.setter()
{
  return sub_1C0746E38();
}

uint64_t (*PersonTypeAppEntity.displayString.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C0746E20();
  return sub_1C06B6D0C;
}

void sub_1C06B6E60(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t PersonTypeAppEntity.$displayString.getter()
{
  return sub_1C0746E44();
}

uint64_t PersonTypeAppEntity.displayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE38);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE58);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C0747228();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1C0747900();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07478F4();
  sub_1C07478E8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C07478DC();
  swift_bridgeObjectRelease();
  sub_1C07478E8();
  sub_1C074721C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v9 = sub_1C0746F34();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return sub_1C0746F40();
}

uint64_t PersonTypeAppEntity.init(id:displayString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v10 = sub_1C0747228();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE18);
  sub_1C0747210();
  v13 = MEMORY[0x1C3B9F0C0](v12);
  sub_1C0746F64();
  sub_1C0747210();
  v14 = MEMORY[0x1C3B9F0C0](v12);
  v16 = a1;
  v17 = a2;
  swift_retain_n();
  sub_1C0746F64();
  sub_1C0746E38();
  sub_1C0747030();
  sub_1C0747030();
  v16 = a3;
  v17 = a4;
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  swift_release_n();
  result = swift_release_n();
  *a5 = v13;
  a5[1] = v14;
  return result;
}

uint64_t sub_1C06B71F0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED4FEC90 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1C06B7BE4((uint64_t)&qword_1ED4FEEA8, a1);
}

uint64_t sub_1C06B7268@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1C0746E2C();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C06B72A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF61A2E8 != -1)
    swift_once();
  v2 = sub_1C0746FE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61C5B0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1C06B733C()
{
  sub_1C06B811C();
  return sub_1C0746DC0();
}

uint64_t sub_1C06B7378()
{
  sub_1C06B7E98();
  return sub_1C0747018();
}

uint64_t sub_1C06B73B0(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1C06B784C(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    sub_1C0746EF8();
    sub_1C0747030();
LABEL_39:
    sub_1C0747030();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1C0747A44();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      sub_1C0747030();
      sub_1C0747030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1C07479B4();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1C07479B4();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1C0747A5C();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1C06B3BDC(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1C06B3BDC((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1C07479B4();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    sub_1C0746EF8();
    sub_1C0747030();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1C0747A5C();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1C06B3BDC(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1C06B3BDC((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1C0748110();
  __break(1u);
LABEL_42:
  result = sub_1C0748110();
  __break(1u);
  return result;
}

uint64_t sub_1C06B784C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1C0747A5C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1C06B3BDC(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1C06B3BDC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1C0748110();
  __break(1u);
  return result;
}

uint64_t sub_1C06B79A4(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C0748284() & 1;
}

uint64_t _s6People19PersonTypeAppEntityV2eeoiySbAC_ACtFZ_0()
{
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  sub_1C0747030();
  swift_bridgeObjectRelease_n();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  sub_1C0747030();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1C06B7B90(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1C0748284() & 1;
}

uint64_t sub_1C06B7BE4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyPersonStatus(a2, a1);
  return a2;
}

uint64_t *sub_1C06B7C20(uint64_t *a1, uint64_t *a2)
{
  assignWithCopy for AnyPersonStatus(a2, a1);
  return a2;
}

uint64_t sub_1C06B7C5C(uint64_t a1)
{
  destroy for MessageDetailsPersistentCacheURLProvider();
  return a1;
}

unint64_t sub_1C06B7C94()
{
  unint64_t result;

  result = qword_1ED4FEED8;
  if (!qword_1ED4FEED8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEED8);
  }
  return result;
}

unint64_t sub_1C06B7CDC()
{
  unint64_t result;

  result = qword_1ED4FEEF0;
  if (!qword_1ED4FEEF0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEEF0);
  }
  return result;
}

unint64_t sub_1C06B7D24()
{
  unint64_t result;

  result = qword_1ED4FEF10;
  if (!qword_1ED4FEF10)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF10);
  }
  return result;
}

unint64_t sub_1C06B7D6C()
{
  unint64_t result;

  result = qword_1ED4FEF80;
  if (!qword_1ED4FEF80)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntityQuery, &type metadata for PersonTypeAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF80);
  }
  return result;
}

uint64_t sub_1C06B7DB0()
{
  return MEMORY[0x1E0C91C88];
}

unint64_t sub_1C06B7DC0()
{
  unint64_t result;

  result = qword_1ED4FEEF8;
  if (!qword_1ED4FEEF8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEEF8);
  }
  return result;
}

unint64_t sub_1C06B7E08()
{
  unint64_t result;

  result = qword_1ED4FEED0;
  if (!qword_1ED4FEED0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEED0);
  }
  return result;
}

unint64_t sub_1C06B7E50()
{
  unint64_t result;

  result = qword_1ED4FEEE8;
  if (!qword_1ED4FEEE8)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEEE8);
  }
  return result;
}

unint64_t sub_1C06B7E98()
{
  unint64_t result;

  result = qword_1ED4FEF00;
  if (!qword_1ED4FEF00)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF00);
  }
  return result;
}

uint64_t sub_1C06B7EDC()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_1C06B7EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4FEE48;
  if (!qword_1ED4FEE48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4FEE50);
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0C91998], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4FEE48);
  }
  return result;
}

unint64_t sub_1C06B7F3C()
{
  unint64_t result;

  result = qword_1ED4FEF08;
  if (!qword_1ED4FEF08)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF08);
  }
  return result;
}

uint64_t destroy for PersonTypeAppEntity()
{
  sub_1C0747030();
  return sub_1C0747030();
}

_QWORD *_s6People19PersonTypeAppEntityVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1C0746F64();
  sub_1C0746F64();
  return a1;
}

_QWORD *assignWithCopy for PersonTypeAppEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1C0746F64();
  sub_1C0747030();
  a1[1] = a2[1];
  sub_1C0746F64();
  sub_1C0747030();
  return a1;
}

_OWORD *assignWithTake for PersonTypeAppEntity(_OWORD *a1, _OWORD *a2)
{
  sub_1C0747030();
  *a1 = *a2;
  sub_1C0747030();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonTypeAppEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonTypeAppEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonTypeAppEntity()
{
  return &type metadata for PersonTypeAppEntity;
}

unint64_t sub_1C06B811C()
{
  unint64_t result;

  result = qword_1ED4FEEE0;
  if (!qword_1ED4FEEE0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntity, &type metadata for PersonTypeAppEntity);
    atomic_store(result, (unint64_t *)&qword_1ED4FEEE0);
  }
  return result;
}

uint64_t sub_1C06B8160()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06B8184()
{
  return swift_deallocObject();
}

uint64_t UserDefaultsLaunchDiaryWriter.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x694468636E75616CLL;
  *(_QWORD *)(result + 24) = 0xEB00000000797261;
  return result;
}

uint64_t UserDefaultsLaunchDiaryWriter.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0x694468636E75616CLL;
  *(_QWORD *)(v0 + 24) = 0xEB00000000797261;
  return result;
}

void sub_1C06B8200()
{
  id v0;
  void *v1;
  void *v2;

  if (qword_1ED4FFE60 != -1)
    swift_once();
  v0 = (id)qword_1ED4FFE58;
  v1 = (void *)sub_1C07472E8();
  v2 = (void *)sub_1C074790C();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

  objc_msgSend(v0, sel_synchronize);
}

uint64_t sub_1C06B82C0()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_1ED4FFE60 != -1)
    swift_once();
  v0 = (id)qword_1ED4FFE58;
  v1 = (void *)sub_1C074790C();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_1C0747EAC();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v5, 0, sizeof(v5));
  }
  sub_1C06B8510((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast())
      return v4;
    else
      return 0;
  }
  else
  {
    sub_1C0696FFC((uint64_t)v6);
    return 0;
  }
}

uint64_t UserDefaultsLaunchDiaryWriter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UserDefaultsLaunchDiaryWriter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1C06B842C()
{
  id v0;
  void *v1;
  void *v2;

  if (qword_1ED4FFE60 != -1)
    swift_once();
  v0 = (id)qword_1ED4FFE58;
  v1 = (void *)sub_1C07472E8();
  v2 = (void *)sub_1C074790C();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

  objc_msgSend(v0, sel_synchronize);
}

uint64_t sub_1C06B84F0()
{
  return sub_1C06B82C0();
}

uint64_t sub_1C06B8510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of DataWriterProtocol.write(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of DataWriterProtocol.read()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for UserDefaultsLaunchDiaryWriter()
{
  return objc_opt_self();
}

uint64_t method lookup function for UserDefaultsLaunchDiaryWriter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserDefaultsLaunchDiaryWriter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UserDefaultsLaunchDiaryWriter.write(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of UserDefaultsLaunchDiaryWriter.read()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1C06B85F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (sub_1C074826C())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  return swift_willThrow();
}

uint64_t String.errorDescription.getter(uint64_t a1)
{
  sub_1C0746EF8();
  return a1;
}

unint64_t sub_1C06B8704()
{
  unint64_t result;

  result = qword_1EF61C5C8[0];
  if (!qword_1EF61C5C8[0])
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for String, MEMORY[0x1E0DEA968]);
    atomic_store(result, qword_1EF61C5C8);
  }
  return result;
}

uint64_t sub_1C06B8748()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C0746EF8();
  return v1;
}

uint64_t sub_1C06B8780(void *a1, uint64_t a2)
{
  id v4;

  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF630E80);
  objc_msgSend(a1, sel_setExportedInterface_, v4);

  objc_msgSend(a1, sel_setExportedObject_, a2);
  objc_msgSend(a1, sel_resume);
  return 1;
}

uint64_t sub_1C06B8818(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1C06B89FC(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E79E7BC0, (uint64_t)&unk_1EF61C6E8);
}

uint64_t sub_1C06B882C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v8[2] = v18;
  v8[3] = v19;
  v13 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a4) + 0x58);
  v14 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a4) + 0x50);
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v13 + 16)
                                                                                    + *(_QWORD *)(v13 + 16));
  v15 = (_QWORD *)swift_task_alloc();
  v8[4] = v15;
  *v15 = v8;
  v15[1] = sub_1C06B88E8;
  return v17(a5, a6, a7, a8 & 1, v14, v13);
}

uint64_t sub_1C06B88E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_1C06B895C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  return sub_1C06B8DB4(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E79E7C10, (uint64_t)sub_1C06B9390, (void (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1C06B8818);
}

void sub_1C06B8994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;

  if (a1)
    v4 = sub_1C07471F8();
  else
    v4 = 0;
  v5 = (id)v4;
  (*(void (**)(uint64_t))(a3 + 16))(a3);

}

uint64_t sub_1C06B89E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1C06B89FC(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E79E7B98, (uint64_t)&unk_1EF61C6D8);
}

uint64_t sub_1C06B89FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  _QWORD *v25;
  _QWORD v27[2];
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a5;
  v31 = a8;
  v27[1] = a7;
  v28 = a1;
  v29 = a4;
  v12 = *MEMORY[0x1E0DEEDD8] & *v8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0747C3C();
  v20 = sub_1C0747C60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_1C06B9010(a3, (uint64_t)v16);
  v21 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = v21 + v15;
  v23 = (_QWORD *)swift_allocObject();
  v24 = (char *)v23 + (v22 & 0xFFFFFFFFFFFFFFF8);
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = *(_QWORD *)(v12 + 80);
  v23[5] = *(_QWORD *)(v12 + 88);
  v23[6] = v8;
  v23[7] = v28;
  v23[8] = a2;
  sub_1C06B905C((uint64_t)v16, (uint64_t)v23 + v21);
  *((_BYTE *)v23 + v22) = v29;
  *((_QWORD *)v24 + 1) = v30;
  *((_QWORD *)v24 + 2) = a6;
  v25 = v8;
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C069F40C((uint64_t)v19, v31, (uint64_t)v23);
  return sub_1C0747030();
}

uint64_t sub_1C06B8B9C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v8[2] = v18;
  v8[3] = v19;
  v13 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a4) + 0x58);
  v14 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a4) + 0x50);
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v13 + 24)
                                                                                    + *(_QWORD *)(v13 + 24));
  v15 = (_QWORD *)swift_task_alloc();
  v8[4] = v15;
  *v15 = v8;
  v15[1] = sub_1C06B8C58;
  return v17(a5, a6, a7, a8 & 1, v14, v13);
}

uint64_t sub_1C06B8C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_1C06B8CCC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);
  id v3;

  v1 = *(void **)(v0 + 48);
  v2 = *(void (**)(_QWORD, void *))(v0 + 16);
  v3 = v1;
  v2(0, v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06B8D20()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, _QWORD);
  id v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(void *, _QWORD))(v0 + 16);
  v3 = v1;
  v2(v1, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06B8D7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  return sub_1C06B8DB4(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E79E7BE8, (uint64_t)sub_1C06B9388, (void (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1C06B89E8);
}

uint64_t sub_1C06B8DB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _Block_copy(a6);
  v18 = sub_1C0747930();
  v20 = v19;
  if (a4)
  {
    sub_1C0747288();
    v21 = sub_1C07472C4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 0, 1, v21);
  }
  else
  {
    v22 = sub_1C07472C4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 1, 1, v22);
  }
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v17;
  v24 = a1;
  a9(v18, v20, v16, a5, a8, v23);

  swift_bridgeObjectRelease();
  sub_1C0747030();
  return sub_1C068F314((uint64_t)v16);
}

void sub_1C06B8F14()
{
  sub_1C06B9338();
}

id sub_1C06B8F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for LegacyConfiguration.ExportedObject(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1C06B8F7C(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x60)]);
}

uint64_t type metadata accessor for LegacyConfiguration.ExportedObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LegacyConfiguration.ExportedObject);
}

uint64_t sub_1C06B8FB4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for LegacyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LegacyConfiguration);
}

uint64_t sub_1C06B8FC8(void *a1)
{
  uint64_t *v1;

  sub_1C06B8780(a1, *v1);
  return 1;
}

uint64_t sub_1C06B8FE4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BA0C2C](&unk_1C074D4D0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C06B9010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06B905C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06B90A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (_QWORD *)v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (uint64_t)v1 + v4;
  v11 = *((_BYTE *)v1 + v4 + *(_QWORD *)(v3 + 64));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1C06930A0;
  return sub_1C06B8B9C(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1C06B917C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (_QWORD *)v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (uint64_t)v1 + v4;
  v11 = *((_BYTE *)v1 + v4 + *(_QWORD *)(v3 + 64));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1C069325C;
  return sub_1C06B882C(a1, v5, v6, v7, v8, v9, v10, v11);
}

id sub_1C06B9250(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1);
  v3 = v2[10];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v1[v2[12]], a1, v3);
  v5 = (objc_class *)type metadata accessor for LegacyConfiguration.ExportedObject(0, v3, v2[11], v4);
  v7.receiver = v1;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1C06B92D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for LegacyConfiguration.ExportedObject(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1C06B9250(a1);
}

id sub_1C06B9308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for LegacyConfiguration.ExportedObject(0, a2, a3, a4);
  return sub_1C06B92D0(a1, v5, v6, v7);
}

void sub_1C06B9338()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C06B9364()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1C06B9388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C06B8994(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t LaunchRecorder.__allocating_init(dataWriter:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *boxed_opaque_existential_1Tm;
  __int128 v10;

  v2 = swift_allocObject();
  v10 = *(_OWORD *)(a1 + 24);
  v3 = v10;
  v4 = __swift_mutable_project_boxed_opaque_existential_1(a1, v10);
  v5 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  *(_OWORD *)(v2 + 48) = v10;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v2 + 24));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 32))(boxed_opaque_existential_1Tm, v7, v3);
  *(_QWORD *)(v2 + 16) = 0;
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v2;
}

_QWORD *LaunchRecorder.init(dataWriter:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1C06B98C8((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

void sub_1C06B9514()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v2 = v0;
  v3 = v0[6];
  v4 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v1)
  {

  }
  else
  {
    v7 = v6;
    if (v6 >> 60 != 15)
    {
      v8 = v5;
      type metadata accessor for LaunchDiary();
      swift_allocObject();
      sub_1C069102C(v8, v7);
      v0[2] = LaunchDiary.init(withJSON:)(v8, v7);
      sub_1C0747030();
      sub_1C0690F90(v8, v7);
    }
  }
  if (!v0[2])
  {
    type metadata accessor for LaunchDiary();
    v9 = swift_allocObject();
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v10 = sub_1C0747720();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED4FF8B0);
    v11 = sub_1C0747708();
    v12 = sub_1C0747D68();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C0671000, v11, v12, "Creating empty launch map", v13, 2u);
      MEMORY[0x1C3BA0D04](v13, -1, -1);
    }

    *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9E0];
    v2[2] = v9;
    sub_1C0747030();
  }
}

uint64_t sub_1C06B96E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    sub_1C0685C78(v0 + 24, (uint64_t)v10);
    v3 = v11;
    v4 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1C07470A8();
    swift_allocObject();
    sub_1C0746F64();
    sub_1C074709C();
    swift_beginAccess();
    v13 = *(_QWORD *)(v2 + 16);
    sub_1C0746EF8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF768);
    sub_1C06B9950();
    v5 = sub_1C0747090();
    if (v1)
    {
      sub_1C0747030();
      sub_1C0747030();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = v5;
      v9 = v6;
      sub_1C0747030();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 8))(v8, v9, v3, v4);
      sub_1C0747030();
      sub_1C0690FA4(v8, v9);
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0x7972616964206F4ELL, 0xEA00000000002120, 500);
    return swift_willThrow();
  }
}

uint64_t LaunchRecorder.deinit()
{
  uint64_t v0;

  sub_1C0747030();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return v0;
}

uint64_t LaunchRecorder.__deallocating_deinit()
{
  uint64_t v0;

  sub_1C0747030();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocClassInstance();
}

_QWORD *sub_1C06B98C8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1Tm;

  a2[6] = a3;
  a2[7] = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a2 + 3);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a3);
  a2[2] = 0;
  return a2;
}

uint64_t type metadata accessor for LaunchRecorder()
{
  return objc_opt_self();
}

uint64_t method lookup function for LaunchRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LaunchRecorder.__allocating_init(dataWriter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

unint64_t sub_1C06B9950()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED4FF770;
  if (!qword_1ED4FF770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4FF768);
    v2 = sub_1C06B99BC();
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED4FF770);
  }
  return result;
}

unint64_t sub_1C06B99BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4FF080;
  if (!qword_1ED4FF080)
  {
    v1 = sub_1C07473E4();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB0890], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4FF080);
  }
  return result;
}

uint64_t sub_1C06B9A04(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aBooks_3[8 * a1] == *(_QWORD *)&aBooks_3[8 * a2]
    && *(_QWORD *)&aAppstoresubscr_1[8 * a1 + 16] == *(_QWORD *)&aAppstoresubscr_1[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1C0748284();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06B9A88(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aPending_4[8 * a1] == *(_QWORD *)&aPending_4[8 * a2] && qword_1C074D8B8[a1] == qword_1C074D8B8[a2])
    v3 = 1;
  else
    v3 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06B9B0C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 2037609794;
  else
    v2 = 1701147206;
  if ((a2 & 1) != 0)
    v3 = 2037609794;
  else
    v3 = 1701147206;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C0748284();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1C06B9B78(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000015;
  v3 = 0x80000001C0751F50;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000012;
    else
      v5 = 0x726568746FLL;
    if (v4 == 1)
      v6 = 0x80000001C0751F70;
    else
      v6 = 0xE500000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000015;
  v6 = 0x80000001C0751F50;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000012;
    else
      v2 = 0x726568746FLL;
    if (v7 == 1)
      v3 = 0x80000001C0751F70;
    else
      v3 = 0xE500000000000000;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C06B9C68(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x61446C6F6F686373;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x80000001C0751F00;
  else
    v4 = 0xE900000000000079;
  if ((a2 & 1) != 0)
    v5 = 0x61446C6F6F686373;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000079;
  else
    v6 = 0x80000001C0751F00;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C06B9D14(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aAlert_2[8 * a1] == *(_QWORD *)&aAlert_2[8 * a2] && qword_1C074D8E8[a1] == qword_1C074D8E8[a2])
    v3 = 1;
  else
    v3 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C06B9D98(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C06B9DD0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C06B9E54 + 4 * byte_1C074D556[a2]))(0x676E696E6E7572);
}

uint64_t sub_1C06B9E54(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E696E6E7572 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C06B9F1C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aArtworkuartwor_0[8 * a1] == *(_QWORD *)&aArtworkuartwor_0[8 * a2]
    && *(_QWORD *)&aArtworkuartwor_0[8 * a1 + 32] == *(_QWORD *)&aArtworkuartwor_0[8 * a2 + 32])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1C0748284();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06B9FA0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aVoicecalvideoc_1[8 * a1] == *(_QWORD *)&aVoicecalvideoc_1[8 * a2]
    && *(_QWORD *)&aLocationl_1[8 * a1 + 8] == *(_QWORD *)&aLocationl_1[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1C0748284();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06BA024(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65756C6176;
  else
    v3 = 1701869940;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65756C6176;
  else
    v5 = 1701869940;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C06BA0B8(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aUnknown_5[8 * a1] == *(_QWORD *)&aUnknown_5[8 * a2] && qword_1C074DAE0[a1] == qword_1C074DAE0[a2])
    v3 = 1;
  else
    v3 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06BA13C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aUnknown_6[8 * a1] == *(_QWORD *)&aUnknown_6[8 * a2]
    && *(_QWORD *)&aAsktobuyscreen_3[8 * a1 + 16] == *(_QWORD *)&aAsktobuyscreen_3[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1C0748284();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06BA1C0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aNone_3[8 * a1] == *(_QWORD *)&aNone_3[8 * a2]
    && *(_QWORD *)&aScreenti_0[8 * a1 + 8] == *(_QWORD *)&aScreenti_0[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1C0748284();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C06BA244(uint64_t a1, uint64_t a2)
{
  return sub_1C06BACEC(a1, a2, AnalyticsType.rawValue.getter);
}

uint64_t sub_1C06BA250(char a1, char a2)
{
  char v3;

  if (qword_1C074DA10[a1] == qword_1C074DA10[a2] && qword_1C074DA28[a1] == qword_1C074DA28[a2])
    v3 = 1;
  else
    v3 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1C06BA2D4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C06BA320(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C06BA458 + 4 * byte_1C074D566[a2]))(0x6C69617641646E64);
}

uint64_t sub_1C06BA458(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C69617641646E64 && v1 == 0xEF7974696C696261)
    v2 = 1;
  else
    v2 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C06BA5FC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C69616D65;
  else
    v3 = 0x6D754E656E6F6870;
  if (v2)
    v4 = 0xEB00000000726562;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C69616D65;
  else
    v5 = 0x6D754E656E6F6870;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xEB00000000726562;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C06BA6A0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 21587;
  else
    v3 = 4346945;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 21587;
  else
    v5 = 4346945;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C06BA72C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C06BA778(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C06BA800 + 4 * byte_1C074D575[a2]))(1684956531);
}

uint64_t sub_1C06BA800(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1684956531 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C06BA8CC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x657263536B636F6CLL;
  else
    v2 = 0x65726353656D6F68;
  if ((a2 & 1) != 0)
    v3 = 0x657263536B636F6CLL;
  else
    v3 = 0x65726353656D6F68;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C0748284();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_1C06BA954(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C06BA9A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C06BAA14 + 4 * byte_1C074D57E[a2]))(0x6120796C696D6166);
}

uint64_t sub_1C06BAA14(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6120796C696D6166 && v1 == 0xEA00000000006C6CLL)
    v2 = 1;
  else
    v2 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C06BAACC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C7069746C756DLL;
  else
    v3 = 0x656C676E6973;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C7069746C756DLL;
  else
    v5 = 0x656C676E6973;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C06BAB68(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C06BABB4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C06BAC2C + 4 * byte_1C074D586[a2]))(0x6D536D6574737973);
}

uint64_t sub_1C06BAC2C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D536D6574737973 && v1 == 0xEB000000006C6C61)
    v2 = 1;
  else
    v2 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C06BACE0(uint64_t a1, uint64_t a2)
{
  return sub_1C06BACEC(a1, a2, PeopleURL.Parameter.rawValue.getter);
}

uint64_t sub_1C06BACEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1C06BAD84(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x654D656C706F6570;
  else
    v3 = 0x656C706F6570;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xED00006567617373;
  if ((a2 & 1) != 0)
    v5 = 0x654D656C706F6570;
  else
    v5 = 0x656C706F6570;
  if ((a2 & 1) != 0)
    v6 = 0xED00006567617373;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1C06BAE2C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C06BAE78(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C06BAEEC + 4 * byte_1C074D58E[a2]))(0xD000000000000010);
}

uint64_t sub_1C06BAEEC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000001C0751FE0)
    v2 = 1;
  else
    v2 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C06BAFA0(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001C0752180;
  else
    v2 = 0x80000001C0752160;
  if ((a2 & 1) != 0)
    v3 = 0x80000001C0752180;
  else
    v3 = 0x80000001C0752160;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t MessageDetails.queryItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v1 = v0;
  v91 = *MEMORY[0x1E0C80C00];
  v87 = sub_1C074712C();
  v2 = *(_QWORD *)(v87 - 8);
  v3 = MEMORY[0x1E0C80A78](v87);
  v78 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v80 = (char *)&v77 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v79 = (char *)&v77 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v83 = (char *)&v77 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v82 = (char *)&v77 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v86 = (char *)&v77 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v85 = (char *)&v77 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v77 - v18;
  MEMORY[0x1E0C80A78](v17);
  v77 = (char *)&v77 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C578);
  v20 = *(_QWORD *)(v2 + 72);
  v21 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v81 = 8 * v20;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C074BF80;
  sub_1C0747108();
  swift_bridgeObjectRelease();
  sub_1C0747108();
  sub_1C0747108();
  sub_1C0747108();
  v89 = 0;
  v90 = 0xE000000000000000;
  v23 = (int *)type metadata accessor for MessageDetails();
  sub_1C0747330();
  sub_1C0747C84();
  v24 = v87;
  sub_1C0747108();
  swift_bridgeObjectRelease();
  sub_1C0747108();
  sub_1C0747108();
  swift_bridgeObjectRelease();
  v25 = (char *)v21;
  v26 = v2;
  sub_1C0747108();
  v89 = nullsub_1(v22);
  v27 = v0 + v23[9];
  if ((*(_BYTE *)(v27 + 8) & 1) == 0)
  {
    v88 = *(id *)v27;
    sub_1C0748248();
    v28 = v77;
    sub_1C0747108();
    swift_bridgeObjectRelease();
    sub_1C06BF670();
    v29 = v89;
    v31 = *(_QWORD *)(v89 + 16);
    v30 = *(_QWORD *)(v89 + 24);
    if (v31 >= v30 >> 1)
    {
      v29 = sub_1C06B351C(v30 > 1, v31 + 1, 1, v89);
      v89 = v29;
    }
    *(_QWORD *)(v29 + 16) = v31 + 1;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v25[v29 + v31 * v20], v28, v24);
  }
  v33 = v82;
  v32 = v83;
  if (*(_QWORD *)(v0 + v23[18] + 8))
  {
    sub_1C0747108();
    sub_1C06BF670();
    v34 = v89;
    v36 = *(_QWORD *)(v89 + 16);
    v35 = *(_QWORD *)(v89 + 24);
    if (v36 >= v35 >> 1)
    {
      v34 = sub_1C06B351C(v35 > 1, v36 + 1, 1, v89);
      v89 = v34;
    }
    *(_QWORD *)(v34 + 16) = v36 + 1;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v25[v34 + v36 * v20], v84, v24);
  }
  if (*(_QWORD *)(v0 + v23[13] + 8))
  {
    sub_1C0747108();
    sub_1C06BF670();
    v37 = v89;
    v39 = *(_QWORD *)(v89 + 16);
    v38 = *(_QWORD *)(v89 + 24);
    if (v39 >= v38 >> 1)
    {
      v37 = sub_1C06B351C(v38 > 1, v39 + 1, 1, v89);
      v89 = v37;
    }
    *(_QWORD *)(v37 + 16) = v39 + 1;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v25[v37 + v39 * v20], v85, v24);
  }
  if (*(_QWORD *)(v0 + v23[20] + 8))
  {
    sub_1C0747108();
    sub_1C06BF670();
    v40 = v89;
    v42 = *(_QWORD *)(v89 + 16);
    v41 = *(_QWORD *)(v89 + 24);
    if (v42 >= v41 >> 1)
    {
      v40 = sub_1C06B351C(v41 > 1, v42 + 1, 1, v89);
      v89 = v40;
    }
    *(_QWORD *)(v40 + 16) = v42 + 1;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v25[v40 + v42 * v20], v86, v24);
  }
  if (*(_QWORD *)(v0 + v23[21] + 8))
  {
    sub_1C0747108();
    sub_1C06BF670();
    v43 = v89;
    v45 = *(_QWORD *)(v89 + 16);
    v44 = *(_QWORD *)(v89 + 24);
    if (v45 >= v44 >> 1)
    {
      v43 = sub_1C06B351C(v44 > 1, v45 + 1, 1, v89);
      v89 = v43;
    }
    *(_QWORD *)(v43 + 16) = v45 + 1;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v25[v43 + v45 * v20], v33, v24);
  }
  MessageDetails.notificationCaption.getter();
  sub_1C0747108();
  swift_bridgeObjectRelease();
  sub_1C06BF670();
  v46 = v89;
  v48 = *(_QWORD *)(v89 + 16);
  v47 = *(_QWORD *)(v89 + 24);
  if (v48 >= v47 >> 1)
  {
    v46 = sub_1C06B351C(v47 > 1, v48 + 1, 1, v89);
    v89 = v46;
  }
  *(_QWORD *)(v46 + 16) = v48 + 1;
  v49 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v49(&v25[v46 + v48 * v20], v32, v24);
  if (*(_QWORD *)(v0 + v23[16] + 8))
  {
    v50 = v79;
    sub_1C0747108();
    sub_1C06BF670();
    v51 = v89;
    v53 = *(_QWORD *)(v89 + 16);
    v52 = *(_QWORD *)(v89 + 24);
    if (v53 >= v52 >> 1)
    {
      v51 = sub_1C06B351C(v52 > 1, v53 + 1, 1, v89);
      v89 = v51;
    }
    *(_QWORD *)(v51 + 16) = v53 + 1;
    v49(&v25[v51 + v53 * v20], v50, v24);
  }
  v54 = v0 + v23[14];
  v55 = *(_QWORD *)(v54 + 8);
  if (v55 >> 60 != 15)
  {
    v56 = *(_QWORD *)v54;
    sub_1C069102C(*(_QWORD *)v54, *(_QWORD *)(v54 + 8));
    v57 = (void *)sub_1C07472E8();
    v88 = 0;
    v58 = objc_msgSend(v57, sel_compressedDataUsingAlgorithm_error_, 3, &v88);

    v59 = v88;
    if (v58)
    {
      v86 = v25;
      v60 = sub_1C074730C();
      v62 = v61;

      sub_1C07472F4();
      sub_1C0747108();
      swift_bridgeObjectRelease();
      sub_1C06BF670();
      v63 = v89;
      v65 = *(_QWORD *)(v89 + 16);
      v64 = *(_QWORD *)(v89 + 24);
      if (v65 >= v64 >> 1)
      {
        v63 = sub_1C06B351C(v64 > 1, v65 + 1, 1, v89);
        v89 = v63;
      }
      *(_QWORD *)(v63 + 16) = v65 + 1;
      v66 = v86;
      v67 = &v86[v63 + v65 * v20];
      v24 = v87;
      v49(v67, v80, v87);
      sub_1C0690F90(v56, v55);
      v68 = v62;
      v25 = v66;
      sub_1C0690FA4(v60, v68);
    }
    else
    {
      v69 = v59;
      v70 = (void *)sub_1C0747204();

      swift_willThrow();
      sub_1C0690F90(v56, v55);

    }
  }
  v71 = v1 + v23[10];
  if ((*(_BYTE *)(v71 + 8) & 1) == 0)
  {
    v88 = *(id *)v71;
    sub_1C0748248();
    v72 = v78;
    sub_1C0747108();
    swift_bridgeObjectRelease();
    sub_1C06BF670();
    v73 = v89;
    v75 = *(_QWORD *)(v89 + 16);
    v74 = *(_QWORD *)(v89 + 24);
    if (v75 >= v74 >> 1)
    {
      v73 = sub_1C06B351C(v74 > 1, v75 + 1, 1, v89);
      v89 = v73;
    }
    *(_QWORD *)(v73 + 16) = v75 + 1;
    v49(&v25[v73 + v75 * v20], v72, v24);
  }
  return v89;
}

uint64_t static MessageDetails.detailsFrom(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String_optional v8;
  _QWORD v10[26];
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[4];

  v14[3] = *MEMORY[0x1E0C80C00];
  v0 = sub_1C07473E4();
  v10[23] = *(_QWORD *)(v0 - 8);
  v10[24] = v0;
  MEMORY[0x1E0C80A78](v0);
  v10[22] = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MessageDetails();
  MEMORY[0x1E0C80A78](v11);
  v2 = sub_1C074712C();
  v3 = MEMORY[0x1E0C80A78](v2);
  v12 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v13 = (char *)v10 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C700);
  MEMORY[0x1E0C80A78](v6);
  v10[25] = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v14[0]) = 7;
  URLComponents.value(forQueryParam:)((People::PeopleURL::Parameter)v14);
  v8 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v8.value._object)
  {
    MessageDetails.EventSource.init(rawValue:)(v8.value);
    __asm { BR              X9 }
  }
  _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000014, 0x80000001C0753E10, 500);
  return swift_willThrow();
}

uint64_t MessageDetails.EventSource.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUnknown_6[8 * *v0];
}

double MessageDetails.init()@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double result;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 3;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  v2 = (int *)type metadata accessor for MessageDetails();
  sub_1C0747348();
  v3 = a1 + v2[9];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + v2[10];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(a1 + v2[11]) = 0;
  v5 = a1 + v2[12];
  v6 = type metadata accessor for ResolvedFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)(a1 + v2[13]);
  *v7 = 0;
  v7[1] = 0;
  result = 0.0;
  *(_OWORD *)(a1 + v2[14]) = xmmword_1C074DB10;
  v9 = (_QWORD *)(a1 + v2[15]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(a1 + v2[16]);
  *v10 = 0;
  v10[1] = 0;
  v11 = (_QWORD *)(a1 + v2[17]);
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = (_QWORD *)(a1 + v2[18]);
  *v12 = 0;
  v12[1] = 0;
  v13 = (_QWORD *)(a1 + v2[19]);
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v14 = (_QWORD *)(a1 + v2[20]);
  *v14 = 0;
  v14[1] = 0;
  v15 = (_QWORD *)(a1 + v2[21]);
  *v15 = 0;
  v15[1] = 0;
  return result;
}

People::MessageDetails::EventSource_optional __swiftcall MessageDetails.EventSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  People::MessageDetails::EventSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1C06BD2E8(char *a1, char *a2)
{
  return sub_1C06BA13C(*a1, *a2);
}

uint64_t sub_1C06BD2F4()
{
  return sub_1C0675B44();
}

uint64_t sub_1C06BD2FC()
{
  return sub_1C06760D8();
}

uint64_t sub_1C06BD304()
{
  return sub_1C0677084();
}

People::MessageDetails::EventSource_optional sub_1C06BD30C(Swift::String *a1)
{
  return MessageDetails.EventSource.init(rawValue:)(*a1);
}

uint64_t sub_1C06BD318@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MessageDetails.EventSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

People::MessageDetails::EventStatus_optional __swiftcall MessageDetails.EventStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  People::MessageDetails::EventStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MessageDetails.EventStatus.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUnknown_5[8 * *v0];
}

uint64_t type metadata accessor for MessageDetails()
{
  uint64_t result;

  result = qword_1EF61C798;
  if (!qword_1EF61C798)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C06BD3F4(char *a1, char *a2)
{
  return sub_1C06BA0B8(*a1, *a2);
}

uint64_t sub_1C06BD400()
{
  return sub_1C0675BAC();
}

uint64_t sub_1C06BD408()
{
  return sub_1C0676098();
}

uint64_t sub_1C06BD410()
{
  return sub_1C06770E8();
}

People::MessageDetails::EventStatus_optional sub_1C06BD418(Swift::String *a1)
{
  return MessageDetails.EventStatus.init(rawValue:)(*a1);
}

uint64_t sub_1C06BD424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MessageDetails.EventStatus.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C06BD448()
{
  qword_1EF61C6F0 = 6235171;
  *(_QWORD *)algn_1EF61C6F8 = 0xE300000000000000;
}

uint64_t static MessageDetails.titleFallbackKey.getter()
{
  uint64_t v0;

  if (qword_1EF61A2F8 != -1)
    swift_once();
  v0 = qword_1EF61C6F0;
  sub_1C0746EF8();
  return v0;
}

uint64_t MessageDetails.requestID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.requestID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MessageDetails.requestID.modify())()
{
  return nullsub_1;
}

void MessageDetails.eventSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *MessageDetails.eventSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MessageDetails.eventSource.modify())()
{
  return nullsub_1;
}

uint64_t MessageDetails.requestFormat.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.requestFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*MessageDetails.requestFormat.modify())()
{
  return nullsub_1;
}

uint64_t MessageDetails.childName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.childName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*MessageDetails.childName.modify())()
{
  return nullsub_1;
}

uint64_t MessageDetails.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MessageDetails() + 32);
  v4 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MessageDetails.expirationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MessageDetails() + 32);
  v4 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MessageDetails.expirationDate.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.userDSID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 36));
}

uint64_t MessageDetails.userDSID.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MessageDetails();
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MessageDetails.userDSID.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.actionUserDSID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 40));
}

uint64_t MessageDetails.actionUserDSID.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MessageDetails();
  v6 = v2 + *(int *)(result + 40);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MessageDetails.actionUserDSID.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.status.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MessageDetails();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t MessageDetails.status.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for MessageDetails();
  *(_BYTE *)(v1 + *(int *)(result + 44)) = v2;
  return result;
}

uint64_t (*MessageDetails.status.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.family.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MessageDetails() + 48);
  return sub_1C06AF5C4(v3, a1);
}

uint64_t MessageDetails.family.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MessageDetails() + 48);
  return sub_1C06C0ED4(a1, v3);
}

uint64_t (*MessageDetails.family.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.thumbnailPath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 52));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.thumbnailPath.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails.thumbnailPath.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.thumbnailData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MessageDetails() + 56);
  v2 = *(_QWORD *)v1;
  sub_1C06A0A38(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MessageDetails.thumbnailData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for MessageDetails() + 56);
  result = sub_1C0690F90(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*MessageDetails.thumbnailData.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails._bubbleCaption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 64));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails._bubbleCaption.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails._bubbleCaption.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.notificationCaption.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MessageDetails();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v1 + *(int *)(v3 + 60));
  v7 = *v6;
  v8 = v6[1];
  sub_1C069670C(v1, (uint64_t)v5);
  if (!v8)
  {
    type metadata accessor for DaemonConnection();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C07471EC();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6E8);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C074C980;
    v13 = *((_QWORD *)v5 + 5);
    v12 = *((_QWORD *)v5 + 6);
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    v15 = sub_1C06C0F1C();
    *(_QWORD *)(v11 + 64) = v15;
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v12;
    v16 = &v5[*(int *)(v2 + 76)];
    v17 = *(_QWORD *)v16;
    v18 = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v11 + 96) = v14;
    *(_QWORD *)(v11 + 104) = v15;
    *(_QWORD *)(v11 + 72) = v17;
    *(_QWORD *)(v11 + 80) = v18;
    sub_1C0746EF8();
    sub_1C0746EF8();
    v7 = sub_1C0747948();
    swift_bridgeObjectRelease();
  }
  sub_1C0746EF8();
  sub_1C0685150((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  return v7;
}

uint64_t sub_1C06BDCD4(uint64_t a1, uint64_t a2)
{
  Swift::String_optional v3;
  Swift::String_optional *v4;
  uint64_t result;

  sub_1C0746EF8();
  v3 = String.trimToNil()();
  swift_bridgeObjectRelease();
  v4 = (Swift::String_optional *)(a2 + *(int *)(type metadata accessor for MessageDetails() + 60));
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  return result;
}

uint64_t MessageDetails.notificationCaption.setter()
{
  uint64_t v0;
  Swift::String_optional v1;
  Swift::String_optional *v2;
  uint64_t result;

  v1 = String.trimToNil()();
  swift_bridgeObjectRelease();
  v2 = (Swift::String_optional *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 60));
  result = swift_bridgeObjectRelease();
  *v2 = v1;
  return result;
}

uint64_t (*MessageDetails.notificationCaption.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = MessageDetails.notificationCaption.getter();
  a1[1] = v3;
  return sub_1C06BDDC4;
}

uint64_t sub_1C06BDDC4(uint64_t a1, char a2)
{
  uint64_t v2;
  Swift::String_optional v3;
  Swift::String_optional *v4;
  uint64_t result;
  Swift::String_optional v6;
  Swift::String_optional *v7;

  v2 = *(_QWORD *)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1C0746EF8();
    v3 = String.trimToNil()();
    swift_bridgeObjectRelease();
    v4 = (Swift::String_optional *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 60));
    swift_bridgeObjectRelease();
    *v4 = v3;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = String.trimToNil()();
    swift_bridgeObjectRelease();
    v7 = (Swift::String_optional *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 60));
    result = swift_bridgeObjectRelease();
    *v7 = v6;
  }
  return result;
}

uint64_t MessageDetails.bubbleCaption.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for MessageDetails();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v25 - v7;
  v9 = (uint64_t *)(v1 + *(int *)(v6 + 64));
  v10 = *v9;
  v11 = v9[1];
  sub_1C069670C(v1, (uint64_t)&v25 - v7);
  if (!v11)
  {
    v12 = (uint64_t *)&v8[*(int *)(v2 + 60)];
    v10 = *v12;
    v13 = v12[1];
    sub_1C069670C((uint64_t)v8, (uint64_t)v5);
    if (!v13)
    {
      type metadata accessor for DaemonConnection();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C07471EC();

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6E8);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C074C980;
      v18 = *((_QWORD *)v5 + 5);
      v17 = *((_QWORD *)v5 + 6);
      v19 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
      v20 = sub_1C06C0F1C();
      *(_QWORD *)(v16 + 64) = v20;
      *(_QWORD *)(v16 + 32) = v18;
      *(_QWORD *)(v16 + 40) = v17;
      v21 = &v5[*(int *)(v2 + 76)];
      v22 = *(_QWORD *)v21;
      v23 = *((_QWORD *)v21 + 1);
      *(_QWORD *)(v16 + 96) = v19;
      *(_QWORD *)(v16 + 104) = v20;
      *(_QWORD *)(v16 + 72) = v22;
      *(_QWORD *)(v16 + 80) = v23;
      sub_1C0746EF8();
      sub_1C0746EF8();
      v10 = sub_1C0747948();
      swift_bridgeObjectRelease();
    }
    sub_1C0746EF8();
    sub_1C0685150((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  }
  sub_1C0746EF8();
  sub_1C0685150((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  return v10;
}

uint64_t sub_1C06BE094@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = type metadata accessor for MessageDetails();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a1 + *(int *)(v5 + 64));
  v9 = *v8;
  v10 = v8[1];
  sub_1C069670C(a1, (uint64_t)v7);
  if (v10)
  {
    v11 = v10;
  }
  else
  {
    v9 = MessageDetails.notificationCaption.getter();
    v11 = v12;
  }
  sub_1C0746EF8();
  result = sub_1C0685150((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1C06BE148(uint64_t a1, uint64_t a2)
{
  Swift::String_optional v3;
  Swift::String_optional *v4;
  uint64_t result;

  sub_1C0746EF8();
  v3 = String.trimToNil()();
  swift_bridgeObjectRelease();
  v4 = (Swift::String_optional *)(a2 + *(int *)(type metadata accessor for MessageDetails() + 64));
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  return result;
}

uint64_t MessageDetails.bubbleCaption.setter()
{
  uint64_t v0;
  Swift::String_optional v1;
  Swift::String_optional *v2;
  uint64_t result;

  v1 = String.trimToNil()();
  swift_bridgeObjectRelease();
  v2 = (Swift::String_optional *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 64));
  result = swift_bridgeObjectRelease();
  *v2 = v1;
  return result;
}

void (*MessageDetails.bubbleCaption.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[2] = v2;
  v5 = type metadata accessor for MessageDetails();
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[3] = v6;
  v7 = *(int *)(v5 + 64);
  *((_DWORD *)v4 + 8) = v7;
  v8 = (uint64_t *)(v2 + v7);
  v9 = *v8;
  v10 = v8[1];
  sub_1C069670C(v2, (uint64_t)v6);
  if (v10)
  {
    v11 = v10;
  }
  else
  {
    v9 = MessageDetails.notificationCaption.getter();
    v11 = v12;
  }
  sub_1C0746EF8();
  sub_1C0685150((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  *v4 = v9;
  v4[1] = v11;
  return sub_1C06BE2C4;
}

void sub_1C06BE2C4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  Swift::String_optional *v4;
  Swift::String_optional v5;
  Swift::String_optional v6;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = (Swift::String_optional *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + *(int *)(*(_QWORD *)a1 + 32));
  if ((a2 & 1) != 0)
  {
    sub_1C0746EF8();
    v5 = String.trimToNil()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v4 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = String.trimToNil()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v4 = v6;
  }
  free(v3);
  free(v2);
}

uint64_t MessageDetails.approvalTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 68));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.approvalTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 68));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails.approvalTime.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.bundleId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 72));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.bundleId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 72));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails.bundleId.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 76));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails.title.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.storeLink.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 80));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.storeLink.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 80));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails.storeLink.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.productType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessageDetails() + 84));
  sub_1C0746EF8();
  return v1;
}

uint64_t MessageDetails.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessageDetails() + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MessageDetails.productType.modify())(_QWORD)
{
  type metadata accessor for MessageDetails();
  return nullsub_1;
}

uint64_t MessageDetails.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t v45;
  _QWORD v46[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  strcpy((char *)v46, " eventSource:");
  HIWORD(v46[1]) = -4864;
  LOBYTE(v44) = *(_BYTE *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C710);
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v4 = v46[0];
  v5 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v4;
  v46[1] = v5;
  sub_1C07479CC();
  v6 = (int *)type metadata accessor for MessageDetails();
  sub_1C07473E4();
  sub_1C06C0F60();
  sub_1C0748248();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C07479CC();
  v7 = v0 + v6[9];
  v8 = *(_QWORD *)v7;
  LOBYTE(v7) = *(_BYTE *)(v7 + 8);
  v44 = v8;
  LOBYTE(v45) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C720);
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v9 = v46[0];
  v10 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v9;
  v46[1] = v10;
  sub_1C07479CC();
  v11 = v0 + v6[10];
  v12 = *(_QWORD *)v11;
  LOBYTE(v11) = *(_BYTE *)(v11 + 8);
  v44 = v12;
  LOBYTE(v45) = v11;
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v13 = v46[0];
  v14 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v13;
  v46[1] = v14;
  sub_1C07479CC();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  LOBYTE(v44) = *(_BYTE *)(v0 + v6[11]);
  sub_1C0748104();
  sub_1C07479CC();
  v15 = v46[0];
  v16 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v15;
  v46[1] = v16;
  sub_1C07479CC();
  v17 = (uint64_t *)(v0 + v6[18]);
  v18 = v17[1];
  v44 = *v17;
  v45 = v18;
  sub_1C0746EF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C198);
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v19 = v46[0];
  v20 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v19;
  v46[1] = v20;
  sub_1C07479CC();
  v21 = (uint64_t *)(v0 + v6[13]);
  v22 = v21[1];
  v44 = *v21;
  v45 = v22;
  sub_1C0746EF8();
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v23 = v46[0];
  v24 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v23;
  v46[1] = v24;
  sub_1C07479CC();
  v25 = (uint64_t *)(v0 + v6[14]);
  v26 = v25[1];
  v44 = *v25;
  v45 = v26;
  sub_1C06A0A38(v44, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C728);
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v27 = v46[0];
  v28 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v27;
  v46[1] = v28;
  sub_1C07479CC();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C07479CC();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C07479CC();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C07479CC();
  sub_1C06AF5C4(v0 + v6[12], (uint64_t)v3);
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v29 = v46[0];
  v30 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v29;
  v46[1] = v30;
  sub_1C07479CC();
  v31 = (uint64_t *)(v0 + v6[20]);
  v32 = v31[1];
  v44 = *v31;
  v45 = v32;
  sub_1C0746EF8();
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v33 = v46[0];
  v34 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v33;
  v46[1] = v34;
  sub_1C07479CC();
  v35 = (uint64_t *)(v0 + v6[21]);
  v36 = v35[1];
  v44 = *v35;
  v45 = v36;
  sub_1C0746EF8();
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v37 = v46[0];
  v38 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v37;
  v46[1] = v38;
  sub_1C07479CC();
  MessageDetails.notificationCaption.getter();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v39 = v46[0];
  v40 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v46[0] = v39;
  v46[1] = v40;
  sub_1C07479CC();
  v41 = (uint64_t *)(v0 + v6[16]);
  v42 = v41[1];
  v44 = *v41;
  v45 = v42;
  sub_1C0746EF8();
  sub_1C074796C();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  return v46[0];
}

void MessageDetails.actioned.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = type metadata accessor for MessageDetails();
  v2 = (char *)sub_1C06BEF44 + 4 * byte_1C074D592[*(unsigned __int8 *)(v0 + *(int *)(MEMORY[0x1E0C80A78](v1) + 44))];
  __asm { BR              X10 }
}

uint64_t sub_1C06BEF44()
{
  uint64_t v0;
  uint64_t v1;
  char v3;

  v3 = sub_1C0748284();
  swift_bridgeObjectRelease();
  sub_1C069670C(v1, v0);
  if ((v3 & 1) == 0)
    __asm { BR              X10 }
  sub_1C0685150(v0, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  return 1;
}

uint64_t MessageDetails.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1C07473E4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07473D8();
  type metadata accessor for MessageDetails();
  v4 = sub_1C0747378();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

void MessageDetails.TTL.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1C06BF18C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 1, v1);
}

uint64_t MessageDetails.updateFromDetails(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  uint64_t v30;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ResolvedFamily();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (id *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C069670C(v3, a2);
  v13 = (int *)type metadata accessor for MessageDetails();
  v14 = v13[12];
  v15 = a1 + v14;
  sub_1C06C0FA8(a1 + v14, a2 + v14);
  sub_1C06AF5C4(v15, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C068A9AC((uint64_t)v8, &qword_1EF61C1B0);
  }
  else
  {
    sub_1C06C0FF0((uint64_t)v8, (uint64_t)v12);
    v16 = *v12;
    v17 = FAFamilyMember.displayNameWithFallback.getter();
    v19 = v18;

    sub_1C0685150((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 40) = v17;
    *(_QWORD *)(a2 + 48) = v19;
  }
  v20 = v13[10];
  v21 = *(_QWORD *)(a1 + v20);
  v22 = *(_BYTE *)(a1 + v20 + 8);
  v23 = a2 + v20;
  *(_QWORD *)v23 = v21;
  *(_BYTE *)(v23 + 8) = v22;
  *(_BYTE *)(a2 + v13[11]) = *(_BYTE *)(a1 + v13[11]);
  v24 = v13[17];
  v25 = a1 + v24;
  v27 = *(_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(v25 + 8);
  v28 = (_QWORD *)(a2 + v24);
  sub_1C0746EF8();
  result = swift_bridgeObjectRelease();
  *v28 = v27;
  v28[1] = v26;
  return result;
}

uint64_t sub_1C06BF424(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1C0748080();
      v7 = (uint64_t)sub_1C0737EC4(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_1C0737ED8(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1C06BF670()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!(_DWORD)result)
  {
    result = sub_1C06B351C(0, *(_QWORD *)(v1 + 16) + 1, 1, v1);
    *v0 = result;
  }
  return result;
}

uint64_t sub_1C06BF6B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06BF988(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF6D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06BFDD4(a1, a2, a3, *v3, &qword_1ED500290);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF6F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0560(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C4F8, &qword_1EF61A618);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF724(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06BFAF0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF740(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C00B8(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C578, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF76C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06BFC70(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF788(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0560(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61BA88, &qword_1EF61B450);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF7B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06BFDD4(a1, a2, a3, *v3, &qword_1EF61C850);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF7D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0560(a1, a2, a3, (_QWORD *)*v3, &qword_1ED4FFC18, &qword_1EF61BAD0);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF804(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0A0C(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C848, &qword_1EF61C4D8);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF830(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0560(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C838, &qword_1EF61C840);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF85C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C00B8(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C508, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF888(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06C0298(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF8A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06C03F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF8C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0560(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C828, &qword_1EF61C830);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF8EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0704(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF908(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06C088C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF924(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C06C0A0C(a1, a2, a3, (_QWORD *)*v3, &qword_1EF61C818, &qword_1EF61C820);
  *v3 = result;
  return result;
}

uint64_t sub_1C06BF950(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06C0B98(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF96C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C06C0D00(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C06BF988(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06BFAF0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C858);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06BFC70(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C580);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06BFDD4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    sub_1C0747030();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06BFF1C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D1D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BF80);
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C00A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C06C0560(a1, a2, a3, a4, &qword_1EF61C838, &qword_1EF61C840);
}

uint64_t sub_1C06C00B8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    sub_1C0747030();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C0298(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C510);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C03F4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C558);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C0560(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    sub_1C0747030();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C0704(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFA8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE90);
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C088C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C0A0C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C0B98(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C550);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06C0D00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C540);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    sub_1C0747030();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

_BYTE *sub_1C06C0E68@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1C06C0ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C06C0F1C()
{
  unint64_t result;

  result = qword_1EF61C708;
  if (!qword_1EF61C708)
  {
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF61C708);
  }
  return result;
}

unint64_t sub_1C06C0F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61C718;
  if (!qword_1EF61C718)
  {
    v1 = sub_1C07473E4();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61C718);
  }
  return result;
}

uint64_t sub_1C06C0FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06C0FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResolvedFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C06C1038()
{
  unint64_t result;

  result = qword_1EF61C730;
  if (!qword_1EF61C730)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for MessageDetails.EventSource, &type metadata for MessageDetails.EventSource);
    atomic_store(result, (unint64_t *)&qword_1EF61C730);
  }
  return result;
}

unint64_t sub_1C06C1080()
{
  unint64_t result;

  result = qword_1EF61C738;
  if (!qword_1EF61C738)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for MessageDetails.EventStatus, &type metadata for MessageDetails.EventStatus);
    atomic_store(result, (unint64_t *)&qword_1EF61C738);
  }
  return result;
}

uint64_t sub_1C06C10C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MessageDetails.notificationCaption.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MessageDetails(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  _OWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v72;
  void (*v73)(char *, char *, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    v10 = a3[8];
    v11 = (char *)(a1 + v10);
    v12 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v13 = sub_1C07473E4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C0746EF8();
    v14(v11, v12, v13);
    v15 = a3[9];
    v16 = a3[10];
    v17 = (char *)v4 + v15;
    v18 = (uint64_t)a2 + v15;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = *(_BYTE *)(v18 + 8);
    v19 = (char *)v4 + v16;
    v20 = (uint64_t)a2 + v16;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = *(_BYTE *)(v20 + 8);
    v21 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v22 = (void **)((char *)v4 + v21);
    v23 = (void **)((char *)a2 + v21);
    v24 = type metadata accessor for ResolvedFamily();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v73 = v14;
      v28 = *v23;
      v29 = v23[1];
      *v22 = *v23;
      v22[1] = v29;
      v22[2] = v23[2];
      v30 = *(int *)(v24 + 28);
      v72 = (char *)v22 + v30;
      v31 = (char *)v23 + v30;
      v32 = v28;
      v33 = v29;
      sub_1C0746EF8();
      v73(v72, v31, v13);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v34 = a3[13];
    v35 = a3[14];
    v36 = (_QWORD *)((char *)v4 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (char *)v4 + v35;
    v40 = (_OWORD *)((char *)a2 + v35);
    v41 = *(uint64_t *)((char *)a2 + v35 + 8);
    sub_1C0746EF8();
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)v39 = *v40;
    }
    else
    {
      v42 = *(_QWORD *)v40;
      sub_1C069102C(v42, v41);
      *(_QWORD *)v39 = v42;
      *((_QWORD *)v39 + 1) = v41;
    }
    v43 = a3[15];
    v44 = a3[16];
    v45 = (_QWORD *)((char *)v4 + v43);
    v46 = (uint64_t *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = (_QWORD *)((char *)v4 + v44);
    v49 = (uint64_t *)((char *)a2 + v44);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = a3[17];
    v52 = a3[18];
    v53 = (_QWORD *)((char *)v4 + v51);
    v54 = (uint64_t *)((char *)a2 + v51);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = (_QWORD *)((char *)v4 + v52);
    v57 = (uint64_t *)((char *)a2 + v52);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = a3[19];
    v60 = a3[20];
    v61 = (_QWORD *)((char *)v4 + v59);
    v62 = (uint64_t *)((char *)a2 + v59);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = (_QWORD *)((char *)v4 + v60);
    v65 = (uint64_t *)((char *)a2 + v60);
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    v67 = a3[21];
    v68 = (_QWORD *)((char *)v4 + v67);
    v69 = (uint64_t *)((char *)a2 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C0746EF8();
  }
  return v4;
}

uint64_t destroy for MessageDetails(uint64_t a1, int *a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  id *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)(a1 + a2[8]);
  v5 = sub_1C07473E4();
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = (id *)(a1 + a2[12]);
  v8 = type metadata accessor for ResolvedFamily();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {

    swift_bridgeObjectRelease();
    v6((char *)v7 + *(int *)(v8 + 28), v5);
  }
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[14]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_1C0690FA4(*v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessageDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  char *v70;
  void (*v71)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  v9 = a3[8];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  v12 = sub_1C07473E4();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  v13(v10, v11, v12);
  v14 = a3[9];
  v15 = a3[10];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v21 = (void **)(a1 + v20);
  v22 = (void **)(a2 + v20);
  v23 = type metadata accessor for ResolvedFamily();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v71 = v13;
    v26 = *v22;
    v27 = v22[1];
    *v21 = *v22;
    v21[1] = v27;
    v21[2] = v22[2];
    v28 = *(int *)(v23 + 28);
    v70 = (char *)v21 + v28;
    v29 = (char *)v22 + v28;
    v30 = v26;
    v31 = v27;
    sub_1C0746EF8();
    v71(v70, v29, v12);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v32 = a3[13];
  v33 = a3[14];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a1 + v33;
  v38 = (_OWORD *)(a2 + v33);
  v39 = *(_QWORD *)(a2 + v33 + 8);
  sub_1C0746EF8();
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)v37 = *v38;
  }
  else
  {
    v40 = *(_QWORD *)v38;
    sub_1C069102C(v40, v39);
    *(_QWORD *)v37 = v40;
    *(_QWORD *)(v37 + 8) = v39;
  }
  v41 = a3[15];
  v42 = a3[16];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = (_QWORD *)(a1 + v42);
  v47 = (_QWORD *)(a2 + v42);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = a3[17];
  v50 = a3[18];
  v51 = (_QWORD *)(a1 + v49);
  v52 = (_QWORD *)(a2 + v49);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = (_QWORD *)(a1 + v50);
  v55 = (_QWORD *)(a2 + v50);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = a3[19];
  v58 = a3[20];
  v59 = (_QWORD *)(a1 + v57);
  v60 = (_QWORD *)(a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = (_QWORD *)(a1 + v58);
  v63 = (_QWORD *)(a2 + v58);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v65 = a3[21];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (_QWORD *)(a2 + v65);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746EF8();
  return a1;
}

uint64_t assignWithCopy for MessageDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void **, uint64_t, uint64_t);
  int v24;
  int v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C07473E4();
  v74 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  v10 = *(void (**)(char *, char *, uint64_t))(v74 + 24);
  ((void (*)(uint64_t, uint64_t))v10)(v7, v8);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  *(_BYTE *)(v12 + 8) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  v15 = a3[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  LOBYTE(v14) = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v14;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v18 = a3[12];
  v19 = (void **)(a1 + v18);
  v20 = (void **)(a2 + v18);
  v21 = type metadata accessor for ResolvedFamily();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      v26 = *v20;
      *v19 = *v20;
      v27 = v20[1];
      v19[1] = v27;
      v19[2] = v20[2];
      v28 = *(int *)(v21 + 28);
      v73 = (char *)v19 + v28;
      v29 = (char *)v20 + v28;
      v30 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
      v31 = v26;
      v32 = v27;
      sub_1C0746EF8();
      v30(v73, v29, v75);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    sub_1C0685150((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
LABEL_6:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  v67 = *v20;
  v68 = *v19;
  *v19 = *v20;
  v69 = v67;

  v70 = v19[1];
  v71 = v20[1];
  v19[1] = v71;
  v72 = v71;

  v19[2] = v20[2];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v10((char *)v19 + *(int *)(v21 + 28), (char *)v20 + *(int *)(v21 + 28), v75);
LABEL_7:
  v34 = a3[13];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v37 = a3[14];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v40 = *(_QWORD *)(a2 + v37 + 8);
  if (*(_QWORD *)(a1 + v37 + 8) >> 60 != 15)
  {
    if (v40 >> 60 != 15)
    {
      v42 = *v39;
      sub_1C069102C(v42, v40);
      v43 = *v38;
      v44 = v38[1];
      *v38 = v42;
      v38[1] = v40;
      sub_1C0690FA4(v43, v44);
      goto LABEL_14;
    }
    sub_1C06C1C30((uint64_t)v38);
    goto LABEL_12;
  }
  if (v40 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    goto LABEL_14;
  }
  v41 = *v39;
  sub_1C069102C(v41, v40);
  *v38 = v41;
  v38[1] = v40;
LABEL_14:
  v45 = a3[15];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v48 = a3[16];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v51 = a3[17];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v54 = a3[18];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v57 = a3[19];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v60 = a3[20];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v63 = a3[21];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C06C1C30(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for MessageDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_1C07473E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[9];
  v12 = a3[10];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = type metadata accessor for ResolvedFamily();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v18[2] = v19[2];
    v10((char *)v18 + *(int *)(v20 + 28), (char *)v19 + *(int *)(v20 + 28), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  v24 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v25 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  v26 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  return a1;
}

uint64_t assignWithTake for MessageDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C07473E4();
  v78 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  v13 = *(void (**)(uint64_t, uint64_t))(v78 + 40);
  v13(v10, v11);
  v14 = a3[9];
  v15 = a3[10];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  v23 = type metadata accessor for ResolvedFamily();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v21[*(int *)(v23 + 28)], &v22[*(int *)(v23 + 28)], v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    sub_1C0685150((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v76 = *(void **)v21;
  *(_QWORD *)v21 = *(_QWORD *)v22;

  v77 = (void *)*((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);

  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v13)(&v21[*(int *)(v23 + 28)], &v22[*(int *)(v23 + 28)], v79);
LABEL_7:
  v29 = a3[13];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[14];
  v35 = (uint64_t *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 8);
  if (v37 >> 60 != 15)
  {
    v38 = v36[1];
    if (v38 >> 60 != 15)
    {
      v39 = *v35;
      *v35 = *v36;
      v35[1] = v38;
      sub_1C0690FA4(v39, v37);
      goto LABEL_12;
    }
    sub_1C06C1C30((uint64_t)v35);
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
LABEL_12:
  v40 = a3[15];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[16];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = a3[17];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  v55 = a3[18];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)(a2 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = a3[19];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  v65 = a3[20];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (uint64_t *)(a2 + v65);
  v69 = *v67;
  v68 = v67[1];
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  v70 = a3[21];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (uint64_t *)(a2 + v70);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06C2164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07473E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MessageDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06C2214(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C07473E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C06C22B4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C07473E4();
  if (v0 <= 0x3F)
  {
    sub_1C06C2384();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1C06C2384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF61C7A8[0])
  {
    type metadata accessor for ResolvedFamily();
    v0 = sub_1C0747E28();
    if (!v1)
      atomic_store(v0, qword_1EF61C7A8);
  }
}

uint64_t storeEnumTagSinglePayload for MessageDetails.EventSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C06C2424 + 4 * byte_1C074D5A7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C06C2458 + 4 * byte_1C074D5A2[v4]))();
}

uint64_t sub_1C06C2458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06C2460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06C2468);
  return result;
}

uint64_t sub_1C06C2474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06C247CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C06C2480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06C2488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessageDetails.EventSource()
{
  return &type metadata for MessageDetails.EventSource;
}

uint64_t storeEnumTagSinglePayload for MessageDetails.EventStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C06C24F0 + 4 * byte_1C074D5B1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C06C2524 + 4 * byte_1C074D5AC[v4]))();
}

uint64_t sub_1C06C2524(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06C252C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06C2534);
  return result;
}

uint64_t sub_1C06C2540(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06C2548);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C06C254C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06C2554(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessageDetails.EventStatus()
{
  return &type metadata for MessageDetails.EventStatus;
}

uint64_t dispatch thunk of ItemIndexer.startBatchMode(forBundle:protectionClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1C06930A0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ItemIndexer.endBatchMode(forBundle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C06930A0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ItemIndexer.indexItems(items:indexBundleId:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of ItemIndexer.deleteItems(withIds:indexBundleId:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of ItemFetcher.fetchItem(itemID:indexBundleId:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 8)
                                                                                              + *(_QWORD *)(a7 + 8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1C06A22C8;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t LinearScale.init(from:to:validRange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32);
  v11(a6, a1, a4);
  v13 = type metadata accessor for LinearScale(0, a4, a5, v12);
  v11(a6 + *(int *)(v13 + 36), a2, a4);
  v14 = a6 + *(int *)(v13 + 40);
  sub_1C07478C4();
  v15 = sub_1C0747E28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a3, v15);
}

uint64_t type metadata accessor for LinearScale(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearScale);
}

double LinearScale.ratio(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v12 - v8;
  MEMORY[0x1E0C80A78](v7);
  sub_1C0748140();
  sub_1C0748140();
  sub_1C0747840();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v9, v2);
  sub_1C06C296C();
  sub_1C07477C8();
  return *(double *)&v12[1];
}

unint64_t sub_1C06C296C()
{
  unint64_t result;

  result = qword_1EF61C878;
  if (!qword_1EF61C878)
  {
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEB078], MEMORY[0x1E0DEB070]);
    atomic_store(result, &qword_1EF61C878);
  }
  return result;
}

uint64_t LinearScale.value(forRatio:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v3 = v2;
  v50 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v49 = *(char **)(a1 + 24);
  v42 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)v49 + 2) + 24) + 8);
  v45 = sub_1C07478C4();
  v6 = sub_1C0747E28();
  v7 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  v48 = v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v39 - v9;
  v44 = *(_QWORD *)(v45 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v39 - v11;
  v12 = *(_QWORD *)(v5 - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v39 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v39 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v39 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v39 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v24, v3, v5);
  v43 = v3;
  sub_1C0748140();
  sub_1C07477D4();
  sub_1C0747CE4();
  v40 = v12;
  v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28 = v15;
  v29 = v44;
  v27(v28, v5);
  v30 = v18;
  v32 = v45;
  v31 = v46;
  v27(v30, v5);
  v49 = v26;
  sub_1C0748134();
  v33 = v21;
  v34 = v47;
  v27(v33, v5);
  v27(v24, v5);
  v35 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v31, v43 + *(int *)(a1 + 40), v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v31, 1, v32) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v50, v49, v5);
  }
  else
  {
    v37 = v41;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v41, v31, v32);
    v38 = v49;
    sub_1C07482C0();
    sub_1C07482CC();
    v27(v24, v5);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v32);
    return ((uint64_t (*)(char *, uint64_t))v27)(v38, v5);
  }
}

uint64_t LinearScale.convert<A>(_:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  LinearScale.ratio(for:)(a1, a2);
  v9 = type metadata accessor for LinearScale(0, a3, a4, v8);
  return LinearScale.value(forRatio:)(v9, a5);
}

uint64_t LinearScale.reversed()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v21 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1C07478C4();
  v7 = sub_1C0747E28();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18((char *)&v20 - v15, v3 + *(int *)(a1 + 36), v5);
  v18(v14, v3, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v3 + *(int *)(a1 + 40), v7);
  return LinearScale.init(from:to:validRange:)((uint64_t)v16, (uint64_t)v14, (uint64_t)v11, v5, v6, v21);
}

uint64_t sub_1C06C2E98()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_1C07478C4();
    v0 = sub_1C0747E28();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_1C06C2F4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  int v15;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  unint64_t v26;
  size_t __n;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = *(unsigned int *)(v6 + 84);
  v10 = v8;
  v11 = ~(unint64_t)v8;
  v12 = v7 + v8;
  v13 = ((v7 + v10) & ~v10) + v7;
  if ((_DWORD)v9)
    v14 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  else
    v14 = v13 + 1;
  v15 = v8 & 0x100000;
  if (v10 > 7 || v15 != 0 || ((v13 + v10) & ~v10) + v14 > 0x18)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v10 + 16) & v11));
    sub_1C0746F64();
    return v4;
  }
  __n = v14;
  v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
  v19(a1, a2, v5);
  v20 = (unint64_t)a2 + v12;
  v21 = v9;
  v22 = v20 & v11;
  v19((uint64_t *)(((unint64_t)v4 + v12) & v11), (uint64_t *)(v20 & v11), v5);
  v23 = (v12 + v22) & v11;
  if (!(_DWORD)v21)
  {
    if (!*(_BYTE *)(v23 + v13))
      goto LABEL_26;
    v24 = (*(unsigned __int8 *)(v23 + v13) - 1) << (8 * v13);
    if (v13 > 3)
      v24 = 0;
    if ((_DWORD)v13)
    {
      if (v13 <= 3)
        v25 = v13;
      else
        v25 = 4;
      __asm { BR              X11 }
    }
    if (v24 == -1)
      goto LABEL_26;
LABEL_25:
    memcpy((void *)((v12 + (((unint64_t)v4 + v12) & v11)) & v11), (const void *)((v12 + v22) & v11), __n);
    return v4;
  }
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((v12 + v22) & v11, v21, v5))
    goto LABEL_25;
LABEL_26:
  v26 = (v12 + (((unint64_t)v4 + v12) & v11)) & v11;
  v19((uint64_t *)v26, (uint64_t *)((v12 + v22) & v11), v5);
  v19((uint64_t *)((v12 + v26) & v11), (uint64_t *)((v12 + v23) & v11), v5);
  if (!(_DWORD)v21)
    *(_BYTE *)(v26 + v13) = 0;
  return v4;
}

uint64_t sub_1C06C313C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  int v13;
  void (*v14)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v14(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = (v5 + v6 + a1) & ~v6;
  v14(v8, v3);
  v9 = (v5 + v6 + v8) & ~v6;
  v10 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v10)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, v10, v3);
    if (!(_DWORD)result)
    {
LABEL_13:
      v14(v9, v3);
      return ((uint64_t (*)(uint64_t, uint64_t))v14)((v7 + v9) & ~v6, v3);
    }
  }
  else
  {
    v12 = (v7 & ~v6) + v5;
    if (!*(_BYTE *)(v9 + v12))
      goto LABEL_13;
    v13 = (*(unsigned __int8 *)(v9 + v12) - 1) << (8 * v12);
    if (v12 > 3)
      v13 = 0;
    if ((_DWORD)v12)
    {
      if (v12 > 3)
        LODWORD(v12) = 4;
      __asm { BR              X11 }
    }
    result = (v13 + 1);
    if (v13 == -1)
      goto LABEL_13;
  }
  return result;
}

_BYTE *sub_1C06C3298(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  int v14;
  size_t v15;
  int v16;
  int v17;
  size_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = (_BYTE *)((unint64_t)&a2[v8 + v9] & ~v9);
  v7((_BYTE *)((unint64_t)&a1[v8 + v9] & ~v9), v11, v5);
  v12 = (_BYTE *)((v8 + v9 + ((unint64_t)&a1[v8 + v9] & ~v9)) & ~v9);
  v13 = (_BYTE *)((unint64_t)&v11[v8 + v9] & ~v9);
  v14 = *(_DWORD *)(v6 + 84);
  v15 = ((v8 + v9) & ~v9) + v8;
  if (v14)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v6 + 48))(v13, *(unsigned int *)(v6 + 84), v5))
    {
LABEL_17:
      v7(v12, v13, v5);
      v7((_BYTE *)((unint64_t)&v12[v10] & ~v9), (_BYTE *)((unint64_t)&v13[v10] & ~v9), v5);
      if (!v14)
        v12[v15] = 0;
      return a1;
    }
  }
  else
  {
    if (!v13[v15])
      goto LABEL_17;
    v16 = (v13[v15] - 1) << (8 * v15);
    if (v15 > 3)
      v16 = 0;
    if ((_DWORD)v15)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X11 }
    }
    if (v16 == -1)
      goto LABEL_17;
  }
  if (v14)
    v18 = v15;
  else
    v18 = v15 + 1;
  memcpy(v12, v13, v18);
  return a1;
}

_BYTE *sub_1C06C3424(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  size_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  int v17;
  int v18;
  char v19;
  int v20;
  int v21;
  int v22;
  int v23;
  void (*v24)(_BYTE *, uint64_t);
  size_t v25;
  _BYTE *result;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  _BYTE *v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v28 = ~v9;
  v11 = (_BYTE *)((unint64_t)&a2[v8 + v9] & ~v9);
  v7((_BYTE *)((unint64_t)&a1[v8 + v9] & ~v9), v11, v5);
  v12 = (_BYTE *)((v8 + v9 + ((unint64_t)&a1[v8 + v9] & ~v9)) & ~v9);
  v13 = (_BYTE *)((unint64_t)&v11[v8 + v9] & ~v9);
  v14 = *(unsigned int *)(v6 + 84);
  v15 = ((v8 + v9) & ~v9) + v8;
  v29 = a1;
  if (!(_DWORD)v14)
  {
    v19 = 8 * v15;
    if (v12[v15])
    {
      v20 = (v12[v15] - 1) << v19;
      if (v15 > 3)
        v20 = 0;
      if ((_DWORD)v15)
      {
        if (v15 <= 3)
          v21 = v15;
        else
          v21 = 4;
        __asm { BR              X12 }
      }
      if (v20 != -1)
      {
        if (!v13[v15] || (v13[v15] - 1) << v19 == -1)
          goto LABEL_35;
        goto LABEL_27;
      }
    }
    if (!v13[v15])
      goto LABEL_31;
    v22 = (v13[v15] - 1) << v19;
    if (v15 > 3)
      v22 = 0;
    if ((_DWORD)v15)
    {
      if (v15 <= 3)
        v23 = v15;
      else
        v23 = 4;
      __asm { BR              X11 }
    }
    v18 = v22 + 1;
LABEL_25:
    if (v18)
    {
      v24 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
      v24(v12, v5);
      v24((_BYTE *)((unint64_t)&v12[v10] & v28), v5);
      goto LABEL_27;
    }
LABEL_31:
    v7(v12, v13, v5);
    v7((_BYTE *)((unint64_t)&v12[v10] & v28), (_BYTE *)((unint64_t)&v13[v10] & v28), v5);
    return v29;
  }
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v17 = v16(v12, v14, v5);
  v18 = v16(v13, v14, v5);
  if (!v17)
    goto LABEL_25;
  if (v18)
  {
LABEL_27:
    if ((_DWORD)v14)
      v25 = v15;
    else
      v25 = v15 + 1;
    memcpy(v12, v13, v25);
    return v29;
  }
LABEL_35:
  v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v27(v12, v13, v5);
  v27((_BYTE *)((unint64_t)&v12[v10] & v28), (_BYTE *)((unint64_t)&v13[v10] & v28), v5);
  result = v29;
  if (!(_DWORD)v14)
    v12[v15] = 0;
  return result;
}

_BYTE *sub_1C06C3730(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  int v14;
  size_t v15;
  int v16;
  int v17;
  size_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = (_BYTE *)((unint64_t)&a2[v8 + v9] & ~v9);
  v7((_BYTE *)((unint64_t)&a1[v8 + v9] & ~v9), v11, v5);
  v12 = (_BYTE *)((v8 + v9 + ((unint64_t)&a1[v8 + v9] & ~v9)) & ~v9);
  v13 = (_BYTE *)((unint64_t)&v11[v8 + v9] & ~v9);
  v14 = *(_DWORD *)(v6 + 84);
  v15 = ((v8 + v9) & ~v9) + v8;
  if (v14)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v6 + 48))(v13, *(unsigned int *)(v6 + 84), v5))
    {
LABEL_17:
      v7(v12, v13, v5);
      v7((_BYTE *)((unint64_t)&v12[v10] & ~v9), (_BYTE *)((unint64_t)&v13[v10] & ~v9), v5);
      if (!v14)
        v12[v15] = 0;
      return a1;
    }
  }
  else
  {
    if (!v13[v15])
      goto LABEL_17;
    v16 = (v13[v15] - 1) << (8 * v15);
    if (v15 > 3)
      v16 = 0;
    if ((_DWORD)v15)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X11 }
    }
    if (v16 == -1)
      goto LABEL_17;
  }
  if (v14)
    v18 = v15;
  else
    v18 = v15 + 1;
  memcpy(v12, v13, v18);
  return a1;
}

_BYTE *sub_1C06C38BC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  size_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  int v17;
  int v18;
  char v19;
  int v20;
  int v21;
  int v22;
  int v23;
  void (*v24)(_BYTE *, uint64_t);
  size_t v25;
  _BYTE *result;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  _BYTE *v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v28 = ~v9;
  v11 = (_BYTE *)((unint64_t)&a2[v8 + v9] & ~v9);
  v7((_BYTE *)((unint64_t)&a1[v8 + v9] & ~v9), v11, v5);
  v12 = (_BYTE *)((v8 + v9 + ((unint64_t)&a1[v8 + v9] & ~v9)) & ~v9);
  v13 = (_BYTE *)((unint64_t)&v11[v8 + v9] & ~v9);
  v14 = *(unsigned int *)(v6 + 84);
  v15 = ((v8 + v9) & ~v9) + v8;
  v29 = a1;
  if (!(_DWORD)v14)
  {
    v19 = 8 * v15;
    if (v12[v15])
    {
      v20 = (v12[v15] - 1) << v19;
      if (v15 > 3)
        v20 = 0;
      if ((_DWORD)v15)
      {
        if (v15 <= 3)
          v21 = v15;
        else
          v21 = 4;
        __asm { BR              X12 }
      }
      if (v20 != -1)
      {
        if (!v13[v15] || (v13[v15] - 1) << v19 == -1)
          goto LABEL_35;
        goto LABEL_27;
      }
    }
    if (!v13[v15])
      goto LABEL_31;
    v22 = (v13[v15] - 1) << v19;
    if (v15 > 3)
      v22 = 0;
    if ((_DWORD)v15)
    {
      if (v15 <= 3)
        v23 = v15;
      else
        v23 = 4;
      __asm { BR              X11 }
    }
    v18 = v22 + 1;
LABEL_25:
    if (v18)
    {
      v24 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
      v24(v12, v5);
      v24((_BYTE *)((unint64_t)&v12[v10] & v28), v5);
      goto LABEL_27;
    }
LABEL_31:
    v7(v12, v13, v5);
    v7((_BYTE *)((unint64_t)&v12[v10] & v28), (_BYTE *)((unint64_t)&v13[v10] & v28), v5);
    return v29;
  }
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v17 = v16(v12, v14, v5);
  v18 = v16(v13, v14, v5);
  if (!v17)
    goto LABEL_25;
  if (v18)
  {
LABEL_27:
    if ((_DWORD)v14)
      v25 = v15;
    else
      v25 = v15 + 1;
    memcpy(v12, v13, v25);
    return v29;
  }
LABEL_35:
  v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
  v27(v12, v13, v5);
  v27((_BYTE *)((unint64_t)&v12[v10] & v28), (_BYTE *)((unint64_t)&v13[v10] & v28), v5);
  result = v29;
  if (!(_DWORD)v14)
    v12[v15] = 0;
  return result;
}

uint64_t sub_1C06C3BC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v6 + v7) & ~v7;
  v9 = v8 + v6;
  if (v5)
    v10 = v8 + v6;
  else
    v10 = v9 + 1;
  if (!a2)
    return 0;
  v11 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_21;
  v12 = v10 + ((v9 + v7) & ~v7);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_21:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_21;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v5 + v16 + 1;
  if (v12 > 3)
    LODWORD(v12) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C06C3C9C + 4 * byte_1C074DB68[(v12 - 1)]))();
}

void sub_1C06C3CEC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  BOOL v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((*(_QWORD *)(v6 + 64) + v8) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = (v9 + v8) & ~v8;
  if (!v7)
    ++v9;
  v11 = v9 + v10;
  v12 = a3 >= v7;
  v13 = a3 - v7;
  if (v13 != 0 && v12)
  {
    if (v11 <= 3)
    {
      v16 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v16))
      {
        v14 = 4u;
      }
      else if (v16 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v16 > 1;
      }
    }
    else
    {
      v14 = 1u;
    }
  }
  else
  {
    v14 = 0u;
  }
  if (v7 < a2)
  {
    v15 = ~v7 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1C06C3EC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 96) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  *(_QWORD *)(v4 + 40) = swift_task_alloc();
  v5 = type metadata accessor for ResolvedFamily();
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  *(_QWORD *)(v4 + 72) = type metadata accessor for MessageDetails();
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06C3F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  sub_1C068510C(*(_QWORD *)(v0 + 32), v2, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  v3 = v2 + *(int *)(v1 + 36);
  v4 = *(_QWORD *)(v0 + 80);
  if ((*(_BYTE *)(v3 + 8) & 1) != 0)
  {
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000015, 0x80000001C0753F30, 500);
    swift_willThrow();
    sub_1C0685150(v4, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)v3;
    sub_1C06C4304();
    v8 = v4 + *(int *)(v6 + 40);
    v9 = *(_QWORD *)v8;
    LOBYTE(v6) = *(_BYTE *)(v8 + 8);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v10;
    *v10 = v0;
    v10[1] = sub_1C06C40B4;
    return static FAFamilyCircle.resolveFamily(userDSID:actionUserDSID:withContactFetcher:useCache:)(*(_QWORD *)(v0 + 40), v7, v9, v6, *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 96));
  }
}

uint64_t sub_1C06C40B4()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_1C06C4120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(id **)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 56);
  v7(v4, 0, 1, v5);
  sub_1C06C0FF0(v4, (uint64_t)v3);
  v8 = v1 + *(int *)(v2 + 48);
  sub_1C06C4340(v8);
  sub_1C068510C((uint64_t)v3, v8, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  v7(v8, 0, 1, v5);
  v9 = *v3;
  v10 = FAFamilyMember.displayNameWithFallback.getter();
  v12 = v11;

  sub_1C0685150((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v10;
  *(_QWORD *)(v1 + 48) = v12;
  sub_1C068510C(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  sub_1C0685150(v1, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06C4244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 56))(v1, 1, 1, *(_QWORD *)(v0 + 48));
  sub_1C06C4340(v1);
  v2 = *(_QWORD *)(v0 + 80);
  _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000015, 0x80000001C0753F30, 500);
  swift_willThrow();
  sub_1C0685150(v2, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1C06C4304()
{
  unint64_t result;

  result = qword_1EF61C888;
  if (!qword_1EF61C888)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF61C888);
  }
  return result;
}

uint64_t sub_1C06C4340(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C06C4380()
{
  uint64_t v0;

  v0 = sub_1C0746FE8();
  __swift_allocate_value_buffer(v0, qword_1EF61C890);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF61C890);
  return sub_1C0746FD0();
}

uint64_t static QuickActionAppHandle.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF61A300 != -1)
    swift_once();
  v2 = sub_1C0746FE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61C890);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static QuickActionAppHandle.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF61A300 != -1)
    swift_once();
  v2 = sub_1C0746FE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61C890);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static QuickActionAppHandle.typeDisplayRepresentation.modify())()
{
  uint64_t v0;

  if (qword_1EF61A300 != -1)
    swift_once();
  v0 = sub_1C0746FE8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF61C890);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t QuickActionAppHandle.bundleID.getter()
{
  uint64_t v1;

  sub_1C0746E2C();
  return v1;
}

double sub_1C06C45D0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1C06C4660()
{
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t QuickActionAppHandle.$bundleID.getter()
{
  return sub_1C0746E44();
}

uint64_t QuickActionAppHandle.handle.getter()
{
  uint64_t v1;

  sub_1C0746E2C();
  return v1;
}

double sub_1C06C4744@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1C06C47D4()
{
  sub_1C0746EF8();
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t QuickActionAppHandle.$handle.getter()
{
  return sub_1C0746E44();
}

uint64_t QuickActionAppHandle.url.getter()
{
  return sub_1C0746E2C();
}

uint64_t sub_1C06C48A8()
{
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t sub_1C06C4924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1C06B9010(a1, (uint64_t)&v9 - v6);
  sub_1C06B9010((uint64_t)v7, (uint64_t)v5);
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  sub_1C068F314((uint64_t)v7);
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t QuickActionAppHandle.$url.getter()
{
  return sub_1C0746E44();
}

void QuickActionAppHandle.displayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  void *v32;
  id v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[12];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE38);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE58);
  MEMORY[0x1E0C80A78](v6);
  v46 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1C0747228();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1C0747900();
  v11 = MEMORY[0x1E0C80A78](v10);
  v42 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v41 = &v37[-v13];
  v14 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  v16 = v49;
  if (!v49)
    goto LABEL_8;
  v40 = v14;
  v17 = v48;
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746EF8();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  if (!v49)
    goto LABEL_7;
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v39 = (uint64_t)v5;
  v18 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  sub_1C0746EF8();
  v19 = sub_1C06C5854(v17, v16, 0);
  v32 = v19;
  if (v19)
  {
    sub_1C07478F4();
    sub_1C07478E8();
    sub_1C07478DC();
    swift_bridgeObjectRelease();
    sub_1C07478E8();
    sub_1C074721C();
    sub_1C07478F4();
    sub_1C07478E8();
    v33 = objc_msgSend(v32, sel_localizedName);
    sub_1C0747930();

    sub_1C07478DC();
    swift_bridgeObjectRelease();
    sub_1C07478E8();
    v34 = v46;
    sub_1C074721C();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v34, 0, 1, v44);
    v35 = v39;
    sub_1C0746F28();
    v36 = sub_1C0746F34();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
    sub_1C0746F40();

    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (_BYTE *)v39;
LABEL_8:
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v20 = sub_1C0747720();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED4FF8B0);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v21 = sub_1C0747708();
  v22 = sub_1C0747D74();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v38 = v23;
    v24 = swift_slowAlloc();
    v40 = a1;
    v25 = (uint8_t *)v24;
    v39 = swift_slowAlloc();
    v47 = v39;
    *(_DWORD *)v25 = 136315138;
    sub_1C0746F64();
    sub_1C0746F64();
    sub_1C0746F64();
    sub_1C0746EF8();
    sub_1C0746E2C();
    swift_bridgeObjectRelease();
    sub_1C0747030();
    sub_1C0747030();
    sub_1C0747030();
    if (v49)
      v26 = v48;
    else
      v26 = 0;
    if (v49)
      v27 = v49;
    else
      v27 = 0xE000000000000000;
    v48 = sub_1C069092C(v26, v27, &v47);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    v28 = v25;
    _os_log_impl(&dword_1C0671000, v21, (os_log_type_t)v38, "Error finding LSApplicationRecord for bundleID: %s", v25, 0xCu);
    v29 = v39;
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v29, -1, -1);
    MEMORY[0x1C3BA0D04](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
  }
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746EF8();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746EF8();
  sub_1C0746E2C();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C07478F4();
  sub_1C07478E8();
  sub_1C07478DC();
  swift_bridgeObjectRelease();
  sub_1C07478E8();
  sub_1C074721C();
  sub_1C07478F4();
  sub_1C07478E8();
  sub_1C07478DC();
  swift_bridgeObjectRelease();
  sub_1C07478E8();
  v30 = v46;
  sub_1C074721C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v30, 0, 1, v44);
  v31 = sub_1C0746F34();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v5, 1, 1, v31);
  sub_1C0746F40();
}

void QuickActionAppHandle.init(_:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;

  v22 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v4 = MEMORY[0x1E0C80A78](v3);
  v25 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - v6;
  v8 = sub_1C0747228();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *((_QWORD *)a1 + 1);
  v13 = *((_QWORD *)a1 + 2);
  v23 = *((_QWORD *)a1 + 3);
  v24 = v12;
  v14 = *((_QWORD *)a1 + 4);
  v15 = *((_QWORD *)a1 + 5);
  v26 = v13;
  v27 = v14;
  v17 = *((_QWORD *)a1 + 6);
  v16 = *((_QWORD *)a1 + 7);
  v18 = *((_QWORD *)a1 + 8);
  LODWORD(v12) = a1[72];
  v20 = a1[73];
  v21 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C8A8);
  sub_1C0747210();
  MEMORY[0x1C3B9F0C0](v10);
  sub_1C0746F64();
  sub_1C0747210();
  MEMORY[0x1C3B9F0C0](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C8B0);
  sub_1C0746F64();
  sub_1C0747210();
  MEMORY[0x1C3B9F0B4](v10);
  v28 = v16;
  v29 = v18;
  sub_1C0746EF8();
  swift_retain_n();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  v28 = v15;
  v29 = v17;
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746E38();
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  LOBYTE(v28) = v11;
  v29 = v24;
  v30 = v26;
  v31 = v23;
  v32 = v27;
  v33 = v15;
  v34 = v17;
  v35 = v16;
  v36 = v18;
  v37 = v21;
  v38 = v20;
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  QuickAction.url.getter((uint64_t)v7);
  sub_1C06B9010((uint64_t)v7, v25);
  sub_1C0746E38();
  sub_1C068F314((uint64_t)v7);
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  __asm { BR              X9 }
}

uint64_t sub_1C06C54EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD **)(v4 - 208);
  *v5 = v1;
  v5[1] = v3;
  v5[2] = v2;
  v5[3] = 0x69662E6F65646976;
  v5[4] = v0;
  swift_bridgeObjectRelease();
  sub_1C0747030();
  sub_1C0747030();
  return sub_1C0747030();
}

uint64_t QuickActionAppHandle.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_1C0747228();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C8A8);
  sub_1C0747210();
  v5 = MEMORY[0x1C3B9F0C0](v4);
  sub_1C0747210();
  v6 = MEMORY[0x1C3B9F0C0](v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C8B0);
  sub_1C0747210();
  result = MEMORY[0x1C3B9F0B4](v4);
  *a1 = v5;
  a1[1] = v6;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = result;
  return result;
}

uint64_t sub_1C06C56D8()
{
  sub_1C06C5EE0();
  return sub_1C0746DA8();
}

uint64_t sub_1C06C5710()
{
  sub_1C06C5EE0();
  return sub_1C0746DB4();
}

uint64_t sub_1C06C5748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF61A300 != -1)
    swift_once();
  v2 = sub_1C0746FE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61C890);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1C06C57E0()
{
  sub_1C06C5930();
  return sub_1C0746DC0();
}

uint64_t sub_1C06C581C()
{
  sub_1C06C5B60();
  return sub_1C0747018();
}

id sub_1C06C5854(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1C0747204();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1C06C5930()
{
  unint64_t result;

  result = qword_1ED4FEF38;
  if (!qword_1ED4FEF38)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF38);
  }
  return result;
}

unint64_t sub_1C06C5978()
{
  unint64_t result;

  result = qword_1ED4FEF30;
  if (!qword_1ED4FEF30)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF30);
  }
  return result;
}

unint64_t sub_1C06C59C0()
{
  unint64_t result;

  result = qword_1ED4FEF48;
  if (!qword_1ED4FEF48)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF48);
  }
  return result;
}

unint64_t sub_1C06C5A08()
{
  unint64_t result;

  result = qword_1ED4FEF70;
  if (!qword_1ED4FEF70)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF70);
  }
  return result;
}

uint64_t sub_1C06C5A4C()
{
  return sub_1C06C5C1C(&qword_1ED4FEE00, &qword_1ED4FEE08, MEMORY[0x1E0C902F8]);
}

uint64_t sub_1C06C5A78()
{
  return MEMORY[0x1E0C91C48];
}

unint64_t sub_1C06C5A88()
{
  unint64_t result;

  result = qword_1ED4FEF50;
  if (!qword_1ED4FEF50)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF50);
  }
  return result;
}

unint64_t sub_1C06C5AD0()
{
  unint64_t result;

  result = qword_1ED4FEF58;
  if (!qword_1ED4FEF58)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF58);
  }
  return result;
}

unint64_t sub_1C06C5B18()
{
  unint64_t result;

  result = qword_1ED4FEF40;
  if (!qword_1ED4FEF40)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF40);
  }
  return result;
}

unint64_t sub_1C06C5B60()
{
  unint64_t result;

  result = qword_1ED4FEF60;
  if (!qword_1ED4FEF60)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF60);
  }
  return result;
}

unint64_t sub_1C06C5BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61C8B8;
  if (!qword_1EF61C8B8)
  {
    v1 = sub_1C0747408();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61C8B8);
  }
  return result;
}

uint64_t sub_1C06C5BF0()
{
  return sub_1C06C5C1C(&qword_1EF61C8C0, &qword_1EF61C8C8, MEMORY[0x1E0C91998]);
}

uint64_t sub_1C06C5C1C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BA0C2C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C06C5C60()
{
  unint64_t result;

  result = qword_1ED4FEF68;
  if (!qword_1ED4FEF68)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF68);
  }
  return result;
}

uint64_t destroy for QuickActionAppHandle()
{
  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for QuickActionAppHandle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0746EF8();
  return a1;
}

_QWORD *assignWithCopy for QuickActionAppHandle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1C0746F64();
  sub_1C0747030();
  a1[1] = a2[1];
  sub_1C0746F64();
  sub_1C0747030();
  a1[2] = a2[2];
  sub_1C0746F64();
  sub_1C0747030();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QuickActionAppHandle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C0747030();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C0747030();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1C0747030();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickActionAppHandle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuickActionAppHandle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickActionAppHandle()
{
  return &type metadata for QuickActionAppHandle;
}

unint64_t sub_1C06C5EE0()
{
  unint64_t result;

  result = qword_1ED4FEF28;
  if (!qword_1ED4FEF28)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for QuickActionAppHandle, &type metadata for QuickActionAppHandle);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF28);
  }
  return result;
}

Swift::String_optional __swiftcall String.trimToNil()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  Swift::String_optional result;
  _QWORD v15[2];

  v2 = v1;
  v3 = v0;
  v4 = sub_1C07470FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v3;
  v15[1] = v2;
  sub_1C07470F0();
  sub_1C068F2D0();
  v8 = sub_1C0747E64();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
    v8 = 0;
    v10 = 0;
  }
  v12 = v8;
  v13 = (void *)v10;
  result.value._object = v13;
  result.value._countAndFlagsBits = v12;
  return result;
}

Swift::Bool __swiftcall String.isSuitableForVerticalLayout(maxCount:)(Swift::Int maxCount)
{
  void *v1;
  char IsSuitableForVerticalLayout;

  v1 = (void *)sub_1C074790C();
  IsSuitableForVerticalLayout = CTStringIsSuitableForVerticalLayout();

  return IsSuitableForVerticalLayout;
}

uint64_t String.localized.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for DaemonConnection();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1C07471EC();

  return v2;
}

uint64_t String.urlSafeString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1C07470FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1;
  v15 = a2;
  sub_1C068F2D0();
  v8 = sub_1C0747E88();
  if (v9)
  {
    v14 = v8;
    v15 = v9;
    sub_1C07470E4();
    v10 = sub_1C0747E7C();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    if (v12)
      return v10;
  }
  sub_1C0746EF8();
  return a1;
}

Swift::String __swiftcall String.trim()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  _QWORD v14[2];

  v2 = v1;
  v3 = v0;
  v4 = sub_1C07470FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = v3;
  v14[1] = v2;
  sub_1C07470F0();
  sub_1C068F2D0();
  v8 = sub_1C0747E64();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = v8;
  v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

uint64_t String.splitWith(_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[4];
  _QWORD v22[2];

  v22[0] = a1;
  v22[1] = a2;
  v21[2] = v22;
  sub_1C0746EF8();
  v6 = sub_1C06B73B0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1C06C6504, (uint64_t)v21, a3, a4);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v22[0] = MEMORY[0x1E0DEE9D8];
    sub_1C06BF6B8(0, v7, 0);
    v8 = v22[0];
    v9 = (uint64_t *)(v6 + 56);
    do
    {
      v10 = *(v9 - 3);
      v11 = *(v9 - 2);
      v12 = *(v9 - 1);
      v13 = *v9;
      sub_1C0746EF8();
      v14 = MEMORY[0x1C3B9FBF4](v10, v11, v12, v13);
      v16 = v15;
      swift_bridgeObjectRelease();
      v22[0] = v8;
      v18 = *(_QWORD *)(v8 + 16);
      v17 = *(_QWORD *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C06BF6B8(v17 > 1, v18 + 1, 1);
        v8 = v22[0];
      }
      *(_QWORD *)(v8 + 16) = v18 + 1;
      v19 = v8 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      v9 += 4;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

uint64_t String.rebrand.getter(uint64_t a1, unint64_t a2)
{
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  ValueMetadata *v9;
  unint64_t v10;

  v9 = &type metadata for AppleAccountFeatures;
  v10 = sub_1C06C6520();
  v4 = sub_1C07474E0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
  if ((v4 & 1) != 0 && (v7 = a1, v8 = a2, sub_1C068F2D0(), (sub_1C0747EA0() & 1) == 0))
  {
    v7 = 0x444E41524245525FLL;
    v8 = 0xE800000000000000;
    sub_1C0746EF8();
    v6 = sub_1C0747A50();
    sub_1C07479C0();
    return v6;
  }
  else
  {
    sub_1C0746EF8();
  }
  return a1;
}

uint64_t sub_1C06C6504(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C06B79A4(a1, *(_QWORD **)(v1 + 16)) & 1;
}

unint64_t sub_1C06C6520()
{
  unint64_t result;

  result = qword_1EF61C8D0;
  if (!qword_1EF61C8D0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074F038, &type metadata for AppleAccountFeatures);
    atomic_store(result, (unint64_t *)&qword_1EF61C8D0);
  }
  return result;
}

uint64_t sub_1C06C6564(void *a1, uint64_t (*a2)(void *))
{
  uint64_t v4;

  if (qword_1EF61A378 != -1)
    swift_once();
  v4 = sub_1C0747720();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EF61D340);
  Logger.ifError(_:message:)(a1);
  return a2(a1);
}

uint64_t type metadata accessor for LocationChangeEventConsumer()
{
  return objc_opt_self();
}

uint64_t sub_1C06C6624(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, unint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(unint64_t, unint64_t, unint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  __int128 v43;
  uint64_t v44;

  v42 = a4;
  v9 = sub_1C07473E4();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = objc_msgSend(a1, sel_idsHandle);
  v16 = sub_1C0747930();
  v18 = v17;

  *(_QWORD *)&v43 = v13;
  *((_QWORD *)&v43 + 1) = v12;
  v44 = v14;
  v19 = v13;
  sub_1C0746EF8();
  sub_1C07473D8();
  v20 = objc_msgSend(a1, sel_locationChangeType);
  v21 = objc_msgSend(a1, sel_motionActivityState);
  v22 = objc_msgSend(a1, sel_latitude);
  v23 = objc_msgSend(a1, sel_longitude);
  type metadata accessor for FindMyItem();
  swift_allocObject();
  v24 = sub_1C06A293C(v16, v18, &v43, (uint64_t)v11, (uint64_t)v20, (uint64_t)v21, v22, v23);
  if (v24)
  {
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C074CD70;
    *(_QWORD *)(inited + 32) = v25;
    *(_QWORD *)&v43 = inited;
    sub_1C0747B34();
    v27 = v43;
    sub_1C0746F64();
    v28 = sub_1C06A4E00(v27);
    swift_bridgeObjectRelease();
    if (v28 >> 62)
    {
      sub_1C0746EF8();
      v40 = sub_1C074814C();
      swift_bridgeObjectRelease();
      if (v40 == 1)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
    {
LABEL_4:
      if (*(_QWORD *)(v25 + OBJC_IVAR____TtC6People10FindMyItem_type) != 2)
      {
        v36 = a3[3];
        v37 = a3[4];
        __swift_project_boxed_opaque_existential_1(a3, v36);
        v38 = swift_allocObject();
        *(_QWORD *)(v38 + 16) = v42;
        *(_QWORD *)(v38 + 24) = a5;
        v39 = *(void (**)(unint64_t, unint64_t, unint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v37 + 24);
        sub_1C0746F64();
        v39(v28, 0xD000000000000017, 0x80000001C0752760, sub_1C06C6A6C, v38, v36, v37);
        sub_1C0747030();
        sub_1C0747030();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v29 = a3[3];
      v30 = a3[4];
      __swift_project_boxed_opaque_existential_1(a3, v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C074B820;
      v32 = *(_QWORD *)(v25 + OBJC_IVAR____TtC6People13IndexableItem_indexableID + 8);
      *(_QWORD *)(v31 + 32) = *(_QWORD *)(v25 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
      *(_QWORD *)(v31 + 40) = v32;
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = v42;
      *(_QWORD *)(v33 + 24) = a5;
      v34 = *(void (**)(uint64_t, unint64_t, unint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v30 + 32);
      sub_1C0746EF8();
      sub_1C0746F64();
      v34(v31, 0xD000000000000017, 0x80000001C0752760, sub_1C06C6A88, v33, v29, v30);
      swift_bridgeObjectRelease();
      sub_1C0747030();
      return sub_1C0747030();
    }
    swift_bridgeObjectRelease();
    if (qword_1EF61A3F8 != -1)
      swift_once();
    v42(qword_1EF629DE0);
    return sub_1C0747030();
  }
  if (qword_1EF61A3F0 != -1)
    swift_once();
  return ((uint64_t (*)(uint64_t))v42)(qword_1EF629DD8);
}

uint64_t sub_1C06C6A48()
{
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C06C6A6C(void *a1)
{
  uint64_t v1;

  return sub_1C06C6564(a1, *(uint64_t (**)(void *))(v1 + 16));
}

void sub_1C06C6A8C(void *a1, void (*a2)(void))
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;

  if (a1)
  {
    v4 = a1;
    if (qword_1EF61A378 != -1)
      swift_once();
    v5 = sub_1C0747720();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EF61D340);
    v6 = a1;
    v7 = a1;
    v8 = sub_1C0747708();
    v9 = sub_1C0747D74();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v15 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_getErrorValue();
      v12 = sub_1C07482FC();
      sub_1C069092C(v12, v13, &v15);
      sub_1C0747E40();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0671000, v8, v9, "Index error %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v11, -1, -1);
      MEMORY[0x1C3BA0D04](v10, -1, -1);
    }
    else
    {

    }
    v14 = a1;
    ((void (*)(void *, uint64_t))a2)(a1, 1);

  }
  else
  {
    sub_1C06C8A10();
    a2();
    swift_bridgeObjectRelease();
  }
}

void sub_1C06C6CC0(void *a1, void (*a2)(void))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    ((void (*)(void *, uint64_t))a2)(a1, 1);

  }
  else
  {
    sub_1C06C8A10();
    a2();
    swift_bridgeObjectRelease();
  }
}

uint64_t AskToBuyEventConsumer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AskToBuyEventConsumer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AskToBuyEventConsumer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AskToBuyEventConsumer()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for AskToBuyEventConsumer.PropertyNames()
{
  return &type metadata for AskToBuyEventConsumer.PropertyNames;
}

uint64_t sub_1C06C6D88(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  id v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  Swift::String_optional v36;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  Swift::String_optional v58;
  uint64_t v59;
  void *v60;
  unsigned __int8 v61;
  char v62;
  id v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  unsigned __int8 v86[9];

  v84 = a4;
  v85 = a3;
  v81 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v66 - v10;
  v12 = sub_1C07473E4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v83 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v66 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v66 - v19;
  objc_msgSend(a1, sel_eventTime);
  sub_1C0747324();
  v21 = objc_msgSend(a1, sel_requestID);
  v22 = sub_1C0747930();
  v77 = v23;
  v78 = v22;

  v79 = v18;
  v80 = v13;
  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v82 = v12;
  v24(v18, v20, v12);
  if (qword_1EF61A350 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v5, (uint64_t)qword_1EF629D70);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v25, v5);
  v26 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v9, v5);
  sub_1C0747390();
  v27(v11, v5);
  v28 = objc_msgSend(a1, sel_thumbnailPath);
  v29 = sub_1C0747930();
  v75 = v30;
  v76 = v29;

  v31 = objc_msgSend(a1, sel_storeLink);
  if (v31)
  {
    v32 = v31;
    v33 = sub_1C0747930();
    v73 = v34;
    v74 = v33;

  }
  else
  {
    v73 = 0;
    v74 = 0;
  }
  v35 = objc_msgSend(a1, sel_productType);
  sub_1C0747930();

  v36 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v36.value._object)
    countAndFlagsBits = v36.value._countAndFlagsBits;
  else
    countAndFlagsBits = 0;
  if (v36.value._object)
    object = v36.value._object;
  else
    object = (void *)0xE000000000000000;
  if (qword_1EF61A590 != -1)
    swift_once();
  if ((sub_1C069F078(countAndFlagsBits, (uint64_t)object, (_QWORD *)qword_1EF629EC0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v72 = 0xE600000000000000;
    v39 = 0x73656E755469;
    goto LABEL_28;
  }
  if (qword_1EF61A598 != -1)
    swift_once();
  if ((sub_1C069F078(countAndFlagsBits, (uint64_t)object, (_QWORD *)qword_1EF629EC8) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v72 = 0xE500000000000000;
    v39 = 0x736B6F6F62;
    goto LABEL_28;
  }
  if (qword_1EF61A5A0 != -1)
    swift_once();
  if (countAndFlagsBits == qword_1EF629ED0 && object == *(void **)algn_1EF629ED8)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    v72 = 0xED0000736E6F6974;
    v39 = 0x7069726373627573;
    goto LABEL_28;
  }
  v40 = sub_1C0748284();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
    goto LABEL_26;
  v72 = 0xE800000000000000;
  v39 = 0x65726F7453707061;
LABEL_28:
  v71 = v39;
  v41 = objc_msgSend(a1, sel_itemTitle);
  v42 = sub_1C0747930();
  v69 = v43;
  v70 = v42;

  v68 = objc_msgSend(a1, sel_status);
  v44 = objc_msgSend(a1, sel_itemLocalizedPrice);
  v67 = sub_1C0747930();
  v46 = v45;

  v47 = objc_msgSend(a1, sel_itemDescription);
  v48 = sub_1C0747930();
  v50 = v49;

  v51 = objc_msgSend(a1, sel_itemStarRating);
  v52 = objc_msgSend(a1, sel_itemAgeRating);
  v53 = sub_1C0747930();
  v55 = v54;

  v56 = v85;
  sub_1C0746EF8();
  v57 = objc_msgSend(a1, sel_productType);
  sub_1C0747930();

  v58 = String.trimToNil()();
  v59 = v58.value._countAndFlagsBits;
  v60 = v58.value._object;
  swift_bridgeObjectRelease();
  if (!v58.value._object)
  {
    v59 = 0;
    v60 = (void *)0xE000000000000000;
  }
  if ((sub_1C069F078(v59, (uint64_t)v60, (_QWORD *)qword_1EF629EC0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v61 = 1;
  }
  else
  {
    if (qword_1EF61A598 != -1)
      swift_once();
    if ((sub_1C069F078(v59, (uint64_t)v60, (_QWORD *)qword_1EF629EC8) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v61 = 0;
    }
    else
    {
      if (qword_1EF61A5A0 != -1)
        swift_once();
      if (v59 == qword_1EF629ED0 && v60 == *(void **)algn_1EF629ED8)
      {
        swift_bridgeObjectRelease();
        v61 = 3;
      }
      else
      {
        v62 = sub_1C0748284();
        swift_bridgeObjectRelease();
        if ((v62 & 1) != 0)
          v61 = 3;
        else
          v61 = 2;
      }
    }
  }
  v86[0] = v61;
  type metadata accessor for AskToBuyItem();
  swift_allocObject();
  v63 = v81;
  v64 = sub_1C06C8BC8(v78, v77, v63, (uint64_t)v79, v83, v76, v75, v74, v73, v71, v72, v70, v69, v68, v67, v46, v48, v50, v51,
          v53,
          v55,
          v85,
          v84,
          v86);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v20, v82);
  return v64;
}

uint64_t sub_1C06C74F0(void *a1, void *a2, void *a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(unint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char isUniquelyReferenced_nonNull_native;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *boxed_opaque_existential_1Tm;
  void (*v40)(uint64_t *, char *, uint64_t);
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  void (*v101)(uint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char v113;
  _QWORD *v114;
  void *v115;
  id v116;
  void *object;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  void (*v133)(uint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t);
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  void (*v143)(uint64_t, uint64_t);
  char *v144;
  id v145;
  uint64_t v146;
  _OWORD v147[2];
  __int128 v148;
  uint64_t v149;

  v14 = sub_1C07473E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C06C6D88(a1, a2, a3, a4);
  if (v18)
  {
    v19 = v18;
    v145 = a1;
    v20 = OBJC_IVAR____TtC6People12AskToBuyItem_status;
    if (*(_DWORD *)(v18 + OBJC_IVAR____TtC6People12AskToBuyItem_status) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074CD70;
      *(_QWORD *)(inited + 32) = v19;
      *(_QWORD *)&v148 = inited;
      sub_1C0747B34();
      v22 = v148;
      sub_1C0746F64();
      v23 = sub_1C06A4E00(v22);
      swift_bridgeObjectRelease();
      if (v23 >> 62)
      {
        sub_1C0746EF8();
        v135 = sub_1C074814C();
        swift_bridgeObjectRelease();
        if (v135 == 1)
          goto LABEL_5;
      }
      else if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      {
LABEL_5:
        v24 = a5[3];
        v25 = a5[4];
        __swift_project_boxed_opaque_existential_1(a5, v24);
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a6;
        v26[3] = a7;
        v26[4] = v19;
        v27 = *(void (**)(unint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t))(v25 + 24);
        sub_1C0746F64();
        sub_1C0746F64();
        v27(v23, 0xD000000000000020, 0x80000001C0752700, sub_1C06C8250, v26, v24, v25);
        swift_bridgeObjectRelease();
LABEL_25:
        sub_1C0747030();
        return sub_1C0747030();
      }
      swift_bridgeObjectRelease();
      if (qword_1EF61A3F8 != -1)
        swift_once();
      a6(qword_1EF629DE0, 1);
      return sub_1C0747030();
    }
    v143 = a6;
    v144 = v17;
    v29 = OBJC_IVAR____TtC6People12AskToBuyItem_actionFamilyMember;
    if (!*(_QWORD *)(v18 + OBJC_IVAR____TtC6People12AskToBuyItem_actionFamilyMember))
    {
      if (qword_1EF61A378 != -1)
        swift_once();
      v140 = a7;
      v87 = sub_1C0747720();
      __swift_project_value_buffer(v87, (uint64_t)qword_1EF61D340);
      sub_1C0746F64();
      v88 = sub_1C0747708();
      v89 = sub_1C0747D68();
      if (os_log_type_enabled(v88, v89))
      {
        v90 = (uint8_t *)swift_slowAlloc();
        v91 = swift_slowAlloc();
        *(_DWORD *)v90 = 136315138;
        *(_QWORD *)&v148 = v91;
        v92 = *(_QWORD *)(v19 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
        v93 = *(_QWORD *)(v19 + OBJC_IVAR____TtC6People13IndexableItem_indexableID + 8);
        sub_1C0746EF8();
        *(_QWORD *)&v147[0] = sub_1C069092C(v92, v93, (uint64_t *)&v148);
        sub_1C0747E40();
        sub_1C0747030();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0671000, v88, v89, "Deleting askToBuy %s - no actionFamilyMember!", v90, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA0D04](v91, -1, -1);
        MEMORY[0x1C3BA0D04](v90, -1, -1);

      }
      else
      {

        sub_1C0747030();
      }
      v94 = v143;
      v95 = a5[3];
      v96 = a5[4];
      __swift_project_boxed_opaque_existential_1(a5, v95);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = xmmword_1C074B820;
      v98 = *(_QWORD *)(v19 + OBJC_IVAR____TtC6People13IndexableItem_indexableID + 8);
      *(_QWORD *)(v97 + 32) = *(_QWORD *)(v19 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
      *(_QWORD *)(v97 + 40) = v98;
      v99 = (_QWORD *)swift_allocObject();
      v100 = v140;
      v99[2] = v94;
      v99[3] = v100;
      v99[4] = v19;
      v101 = *(void (**)(uint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t))(v96 + 32);
      sub_1C0746F64();
      sub_1C0746F64();
      sub_1C0746EF8();
      v101(v97, 0xD000000000000020, 0x80000001C0752700, sub_1C06C8230, v99, v95, v96);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    v30 = sub_1C06C8940();
    v31 = MEMORY[0x1E0DEE9E0];
    v139 = a5;
    v141 = v15;
    if (v30)
    {
      v32 = (void *)v30;
      v149 = sub_1C069DDE4(0, &qword_1EF61C4D0);
      *(_QWORD *)&v148 = v32;
      sub_1C0685D00(&v148, v147);
      v33 = v32;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v146 = v31;
      sub_1C069D3FC(v147, 0xD00000000000001ELL, 0x80000001C0752D70, isUniquelyReferenced_nonNull_native);
      v31 = v146;

      swift_bridgeObjectRelease();
    }
    objc_msgSend(v145, sel_eventTime);
    v35 = v144;
    sub_1C0747324();
    v36 = sub_1C0747930();
    v38 = v37;
    v149 = v14;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v148);
    v40 = *(void (**)(uint64_t *, char *, uint64_t))(v141 + 16);
    v40(boxed_opaque_existential_1Tm, v35, v14);
    sub_1C0685D00(&v148, v147);
    v41 = swift_isUniquelyReferenced_nonNull_native();
    v146 = v31;
    sub_1C069D3FC(v147, v36, v38, v41);
    v42 = v146;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = sub_1C0747930();
    v45 = v44;
    v149 = v14;
    v46 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v148);
    v40(v46, v35, v14);
    sub_1C0685D00(&v148, v147);
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v146 = v42;
    sub_1C069D3FC(v147, v43, v45, v47);
    v48 = v146;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = sub_1C0747930();
    v51 = v50;
    v52 = *(_DWORD *)(v19 + v20);
    v149 = MEMORY[0x1E0DEDBC8];
    LODWORD(v148) = v52;
    sub_1C0685D00(&v148, v147);
    v53 = swift_isUniquelyReferenced_nonNull_native();
    v146 = v48;
    sub_1C069D3FC(v147, v49, v51, v53);
    v54 = v146;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = *(void **)(v19 + v29);
    if (v55)
    {
      v142 = v55;
      v56 = objc_msgSend(v142, sel_dsid);
      if (v56)
      {
        v57 = v56;
        v58 = sub_1C0747930();
        v60 = v59;
        v149 = sub_1C069DDE4(0, (unint64_t *)&qword_1EF61CEA0);
        *(_QWORD *)&v148 = v57;
        sub_1C0685D00(&v148, v147);
        v61 = v57;
        v62 = swift_isUniquelyReferenced_nonNull_native();
        v146 = v54;
        sub_1C069D3FC(v147, v58, v60, v62);
        v54 = v146;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v140 = a7;
      v63 = objc_msgSend(v142, sel_contactIncludingImage_, 0);
      if (v63)
      {
        v64 = v63;
        v65 = objc_msgSend(v63, sel_identifier);
        v66 = sub_1C0747930();
        v68 = v67;

        v149 = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v148 = v66;
        *((_QWORD *)&v148 + 1) = v68;
        sub_1C0685D00(&v148, v147);
        v69 = swift_isUniquelyReferenced_nonNull_native();
        v146 = v54;
        sub_1C069D3FC(v147, 0xD00000000000001DLL, 0x80000001C0752D90, v69);
        v70 = v146;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v138 = sub_1C0747930();
        v72 = v71;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
        v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1C074B820;
        v74 = objc_msgSend(v64, sel_identifier);
        v75 = sub_1C0747930();
        v77 = v76;

        *(_QWORD *)(v73 + 32) = v75;
        *(_QWORD *)(v73 + 40) = v77;
        v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
        *(_QWORD *)&v148 = v73;
        sub_1C0685D00(&v148, v147);
        v78 = swift_isUniquelyReferenced_nonNull_native();
        v146 = v70;
        sub_1C069D3FC(v147, v138, v72, v78);
        v54 = v146;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v137 = sub_1C0747930();
      v80 = v79;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v81 = swift_allocObject();
      v138 = xmmword_1C074B820;
      *(_OWORD *)(v81 + 16) = xmmword_1C074B820;
      v82 = objc_msgSend(v142, sel_fullName);
      if (v82)
      {
        v83 = v82;
        v84 = sub_1C0747930();
        v86 = v85;

      }
      else
      {
        v84 = 0;
        v86 = 0xE000000000000000;
      }
      a7 = v140;
      *(_QWORD *)(v81 + 32) = v84;
      *(_QWORD *)(v81 + 40) = v86;
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
      v149 = v102;
      *(_QWORD *)&v148 = v81;
      sub_1C0685D00(&v148, v147);
      v103 = swift_isUniquelyReferenced_nonNull_native();
      v146 = v54;
      sub_1C069D3FC(v147, v137, v80, v103);
      v104 = v146;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v140 = sub_1C0747930();
      v106 = v105;
      v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = v138;
      v108 = objc_msgSend(v142, sel_appleID);
      if (v108)
      {
        v109 = v108;
        v110 = sub_1C0747930();
        v112 = v111;

      }
      else
      {
        v110 = 0;
        v112 = 0xE000000000000000;
      }
      *(_QWORD *)(v107 + 32) = v110;
      *(_QWORD *)(v107 + 40) = v112;
      v149 = v102;
      *(_QWORD *)&v148 = v107;
      sub_1C0685D00(&v148, v147);
      v113 = swift_isUniquelyReferenced_nonNull_native();
      v146 = v104;
      sub_1C069D3FC(v147, v140, v106, v113);
      v54 = v146;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v114 = v139;
    v115 = *(void **)(v19 + 16);
    sub_1C0746F64();
    if (v115)
    {
      v116 = objc_msgSend(v115, sel_identifier);
      sub_1C0747930();

    }
    object = String.trimToNil()().value._object;
    sub_1C0747030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!object)
    {
      v118 = sub_1C0747930();
      v120 = v119;
      v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
      *(_QWORD *)&v148 = MEMORY[0x1E0DEE9D8];
      sub_1C0685D00(&v148, v147);
      v121 = swift_isUniquelyReferenced_nonNull_native();
      v146 = v54;
      sub_1C069D3FC(v147, v118, v120, v121);
      v54 = v146;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v122 = objc_msgSend(v145, sel_requestID);
    v123 = sub_1C0747930();
    v125 = v124;

    sub_1C06A5858(v123, v125, 1, v54);
    v127 = v126;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v128 = v114[3];
    v129 = v114[4];
    __swift_project_boxed_opaque_existential_1(v114, v128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
    v130 = swift_allocObject();
    *(_OWORD *)(v130 + 16) = xmmword_1C074CD70;
    *(_QWORD *)(v130 + 32) = v127;
    *(_QWORD *)&v148 = v130;
    sub_1C0747B34();
    v131 = v148;
    v132 = (_QWORD *)swift_allocObject();
    v132[2] = v143;
    v132[3] = a7;
    v132[4] = v19;
    v133 = *(void (**)(uint64_t, unint64_t, unint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t))(v129 + 24);
    sub_1C0746F64();
    sub_1C0746F64();
    v134 = v127;
    v133(v131, 0xD000000000000020, 0x80000001C0752700, sub_1C06C825C, v132, v128, v129);

    sub_1C0747030();
    swift_bridgeObjectRelease();
    sub_1C0747030();
    return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v144, v14);
  }
  else
  {
    if (qword_1EF61A3F8 != -1)
      swift_once();
    return ((uint64_t (*)(uint64_t, uint64_t))a6)(qword_1EF629DE0, 1);
  }
}

void sub_1C06C8230(void *a1)
{
  uint64_t v1;

  sub_1C06C6CC0(a1, *(void (**)(void))(v1 + 16));
}

void sub_1C06C8250(void *a1)
{
  uint64_t v1;

  sub_1C06C6A8C(a1, *(void (**)(void))(v1 + 16));
}

People::ContactFormatter __swiftcall ContactFormatter.init(style:fallback:)(People::ContactFormatter::Style style, Swift::String fallback)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  objc_class *v12;
  People::ContactFormatter result;

  object = fallback._object;
  countAndFlagsBits = fallback._countAndFlagsBits;
  v5 = v2;
  v6 = *(unsigned __int8 *)style;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97218]), sel_init);
  v8 = (uint64_t)v7;
  if (v6)
    v9 = 1000;
  else
    v9 = 0;
  v10 = objc_msgSend(v7, sel_setStyle_, v9);
  *v5 = countAndFlagsBits;
  v5[1] = (uint64_t)object;
  v5[2] = v8;
  result.formatter.super.super.isa = v12;
  result.fallback._object = v11;
  result.fallback._countAndFlagsBits = (uint64_t)v10;
  return result;
}

Swift::String __swiftcall ContactFormatter.displayName(for:includePhone:)(CNContact a1, Swift::Bool includePhone)
{
  uint64_t v2;
  unint64_t isa;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  Swift::String result;

  isa = (unint64_t)a1.super.isa;
  v5 = *(_QWORD *)v2;
  v6 = *(void **)(v2 + 8);
  v7 = objc_msgSend(*(id *)(v2 + 16), sel_stringFromContact_, a1.super.isa);
  if (v7)
  {
    v8 = v7;
    v5 = sub_1C0747930();
    v6 = v9;

    goto LABEL_24;
  }
  v10 = objc_msgSend((id)isa, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF61CE40);
  v11 = sub_1C0747B1C();

  if (v11 >> 62)
  {
    sub_1C0746EF8();
    v16 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_5;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1C3BA029C](0, v11);
  }
  else
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_21:
      sub_1C0746EF8();
      v25 = sub_1C074814C();
      v18 = swift_bridgeObjectRelease();
      if (v25)
        goto LABEL_15;
      goto LABEL_22;
    }
    v12 = *(id *)(v11 + 32);
  }
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v13, sel_value);

  if (v14)
  {
    v5 = sub_1C0747930();
    v6 = v15;

    goto LABEL_24;
  }
LABEL_12:
  if (!includePhone)
  {
LABEL_23:
    sub_1C0746EF8();
    goto LABEL_24;
  }
  v17 = objc_msgSend((id)isa, sel_phoneNumbers);
  isa = sub_1C0747B1C();

  if (isa >> 62)
    goto LABEL_21;
  if (!*(_QWORD *)((isa & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_15:
  if ((isa & 0xC000000000000001) != 0)
  {
    v20 = (id)MEMORY[0x1C3BA029C](0, isa);
  }
  else
  {
    if (!*(_QWORD *)((isa & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    v20 = *(id *)(isa + 32);
  }
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v21, sel_value);

  v23 = objc_msgSend(v22, sel_stringValue);
  v5 = sub_1C0747930();
  v6 = v24;

LABEL_24:
  v18 = v5;
  v19 = v6;
LABEL_27:
  result._object = v19;
  result._countAndFlagsBits = v18;
  return result;
}

BOOL static ContactFormatter.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContactFormatter.Style.hash(into:)()
{
  return sub_1C074835C();
}

uint64_t ContactFormatter.Style.hashValue.getter()
{
  sub_1C0748350();
  sub_1C074835C();
  return sub_1C0748374();
}

Swift::String __swiftcall ContactFormatter.displayName(for:)(CNContact a1)
{
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v3;
  Swift::String result;

  v3 = ContactFormatter.displayName(for:includePhone:)(a1, 1);
  object = v3._object;
  countAndFlagsBits = v3._countAndFlagsBits;
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

unint64_t sub_1C06C8628()
{
  unint64_t result;

  result = qword_1EF61CA20;
  if (!qword_1EF61CA20)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for ContactFormatter.Style, &type metadata for ContactFormatter.Style);
    atomic_store(result, (unint64_t *)&qword_1EF61CA20);
  }
  return result;
}

uint64_t sub_1C06C866C(CNContact a1)
{
  return ContactFormatter.displayName(for:includePhone:)(a1, 1)._countAndFlagsBits;
}

uint64_t dispatch thunk of ContactFormatterProtocol.displayName(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContactFormatterProtocol.displayName(for:includePhone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void destroy for ContactFormatter(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s6People16ContactFormatterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  sub_1C0746EF8();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for ContactFormatter(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for ContactFormatter(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ContactFormatter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactFormatter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactFormatter()
{
  return &type metadata for ContactFormatter;
}

uint64_t storeEnumTagSinglePayload for ContactFormatter.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C06C88A8 + 4 * byte_1C074DE65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C06C88DC + 4 * asc_1C074DE60[v4]))();
}

uint64_t sub_1C06C88DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06C88E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06C88ECLL);
  return result;
}

uint64_t sub_1C06C88F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06C8900);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C06C8904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06C890C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactFormatter.Style()
{
  return &type metadata for ContactFormatter.Style;
}

void sub_1C06C8928()
{
  qword_1EF629CE8 = 48;
  unk_1EF629CF0 = 0xE100000000000000;
}

uint64_t sub_1C06C8940()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC6People12AskToBuyItem_status) - 1;
  if (v1 > 2)
    return 0;
  v2 = 8 * v1;
  v3 = *(_QWORD *)&aRequestpreques_0[v2];
  v4 = *(_QWORD *)&aRequestpreques_0[v2 + 24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C074B820;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  sub_1C0746EF8();
  v6 = sub_1C06DAF80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C06C8A10()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6People12AskToBuyItem_familyMember), sel_contactsIncludingImage_, 0);
  sub_1C06C9584();
  v2 = sub_1C0747B1C();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1C0746EF8();
  v3 = sub_1C074814C();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1C06BF6B8(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v16;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1C3BA029C](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_identifier);
      v10 = sub_1C0747930();
      v12 = v11;

      v14 = *(_QWORD *)(v16 + 16);
      v13 = *(_QWORD *)(v16 + 24);
      if (v14 >= v13 >> 1)
        sub_1C06BF6B8(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v16 + 16) = v14 + 1;
      v15 = v16 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06C8BC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,unint64_t a21,void *a22,uint64_t a23,unsigned __int8 *a24)
{
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD **v62;
  _QWORD *v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;

  v25 = v24;
  v96 = a7;
  v97 = a8;
  v95 = a6;
  v99 = a3;
  v100 = a1;
  v101 = a2;
  v27 = a21;
  v104 = a20;
  v105 = a5;
  v28 = sub_1C07470FC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v30) = *a24;
  v93 = a14;
  v94 = v30;
  if (a14 == 1 || a22)
  {
    sub_1C0746F64();
  }
  else
  {
    v80 = qword_1EF61A378;
    sub_1C0746F64();
    if (v80 != -1)
      swift_once();
    v81 = sub_1C0747720();
    __swift_project_value_buffer(v81, (uint64_t)qword_1EF61D340);
    v82 = sub_1C0747708();
    v83 = sub_1C0747D68();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = v83;
      v86 = v84;
      *(_WORD *)v84 = 0;
      _os_log_impl(&dword_1C0671000, v82, v85, "AskToBuy responding user missing!", v84, 2u);
      MEMORY[0x1C3BA0D04](v86, -1, -1);
    }

  }
  v98 = a22;
  v103 = a4;
  *(_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_starRating) = a19;
  v106 = v104;
  v107 = a21;
  v102 = a19;
  sub_1C07470F0();
  sub_1C068F2D0();
  v32 = sub_1C0747E64();
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  if (qword_1EF61A308 != -1)
    swift_once();
  v91 = a17;
  v92 = a18;
  v89 = a12;
  v90 = a13;
  v88 = a11;
  if (v32 == qword_1EF629CE8 && v34 == unk_1EF629CF0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v36 = sub_1C0748284();
  swift_bridgeObjectRelease();
  v37 = v104;
  if ((v36 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    v37 = 0;
    v27 = 0xE000000000000000;
  }
  v38 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_ageRating);
  *v38 = v37;
  v38[1] = v27;
  *(_DWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_status) = v93;
  v39 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_thumbnailPath);
  v40 = v96;
  *v39 = v95;
  v39[1] = v40;
  v41 = v98;
  v42 = v99;
  *(_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_actionFamilyMember) = v98;
  *(_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_familyMember) = v42;
  v43 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_localizedPrice);
  *v43 = a15;
  v43[1] = a16;
  *(_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_requestApprovers) = a23;
  v44 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_storeLink);
  *v44 = v97;
  v44[1] = a9;
  v45 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_productTypeCode);
  v46 = v88;
  *v45 = a10;
  v45[1] = v46;
  *(_BYTE *)(v25 + OBJC_IVAR____TtC6People12AskToBuyItem_mappedProductType) = v94;
  v47 = v41;
  v48 = v42;
  sub_1C0747030();
  v49 = objc_msgSend(v48, sel_contactIncludingImage_, 0);
  v50 = v25 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
  v51 = sub_1C07473E4();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
  v54 = v103;
  v53(v50, v103, v51);
  v55 = v25 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate;
  v53(v25 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate, v105, v51);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v55, 0, 1, v51);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC6People13IndexableItem_keywordStrings) = MEMORY[0x1E0DEE9D8];
  v56 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People13IndexableItem_title);
  v57 = v90;
  *v56 = v89;
  v56[1] = v57;
  v58 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People13IndexableItem_description);
  v59 = v92;
  *v58 = v91;
  v58[1] = v59;
  *(_QWORD *)(v25 + 16) = v49;
  v60 = (_QWORD *)(v25 + OBJC_IVAR____TtC6People13IndexableItem_indexableID);
  v61 = v101;
  *v60 = v100;
  v60[1] = v61;
  v62 = (_QWORD **)(v25 + OBJC_IVAR____TtC6People13IndexableItem_keywordStrings);
  swift_beginAccess();
  v63 = *v62;
  sub_1C0746F64();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v62 = v63;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v63 = sub_1C06B3530(0, v63[2] + 1, 1, v63);
    *v62 = v63;
  }
  v66 = v63[2];
  v65 = v63[3];
  if (v66 >= v65 >> 1)
  {
    v63 = sub_1C06B3530((_QWORD *)(v65 > 1), v66 + 1, 1, v63);
    *v62 = v63;
  }
  v63[2] = v66 + 1;
  v67 = &v63[2 * v66];
  v67[4] = 0x74736575716572;
  v67[5] = 0xE700000000000000;
  swift_endAccess();
  swift_beginAccess();
  v68 = *v62;
  sub_1C0746F64();
  v69 = swift_isUniquelyReferenced_nonNull_native();
  *v62 = v68;
  if ((v69 & 1) == 0)
  {
    v68 = sub_1C06B3530(0, v68[2] + 1, 1, v68);
    *v62 = v68;
  }
  v71 = v68[2];
  v70 = v68[3];
  if (v71 >= v70 >> 1)
  {
    v68 = sub_1C06B3530((_QWORD *)(v70 > 1), v71 + 1, 1, v68);
    *v62 = v68;
  }
  v68[2] = v71 + 1;
  v72 = &v68[2 * v71];
  v72[4] = 0x7975426F546B7341;
  v72[5] = 0xE800000000000000;
  swift_endAccess();
  sub_1C0747030();
  swift_beginAccess();
  v73 = *v62;
  sub_1C0746F64();
  v74 = swift_isUniquelyReferenced_nonNull_native();
  *v62 = v73;
  if ((v74 & 1) == 0)
  {
    v73 = sub_1C06B3530(0, v73[2] + 1, 1, v73);
    *v62 = v73;
  }
  v76 = v73[2];
  v75 = v73[3];
  if (v76 >= v75 >> 1)
  {
    v73 = sub_1C06B3530((_QWORD *)(v75 > 1), v76 + 1, 1, v73);
    *v62 = v73;
  }
  v73[2] = v76 + 1;
  v77 = &v73[2 * v76];
  v77[4] = 0x6573616863727550;
  v77[5] = 0xEF74736575716552;
  swift_endAccess();

  swift_release_n();
  v78 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v78(v105, v51);
  v78(v54, v51);
  return v25;
}

uint64_t sub_1C06C9278()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06C9328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C06A09F8(v0 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C06C948C()
{
  sub_1C06C9328();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06C94B0()
{
  return type metadata accessor for AskToBuyItem();
}

uint64_t type metadata accessor for AskToBuyItem()
{
  uint64_t result;

  result = qword_1EF61CA50;
  if (!qword_1EF61CA50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C06C94F4()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_1C06C9584()
{
  unint64_t result;

  result = qword_1ED4FFE30;
  if (!qword_1ED4FFE30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4FFE30);
  }
  return result;
}

uint64_t static PeopleSharedDirectory.groupContainer.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = (void *)sub_1C074790C();
  v4 = objc_msgSend(v2, sel_containerURLForSecurityApplicationGroupIdentifier_, v3);

  if (v4)
  {
    sub_1C0747288();

    v5 = sub_1C07472C4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1C07472C4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t static PeopleSharedDirectory.cacheFolder(create:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v10 = sub_1C07472C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  static PeopleSharedDirectory.groupContainer.getter((uint64_t)v9);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    sub_1C068F314((uint64_t)v9);
    v18 = 1;
  }
  else
  {
    sub_1C0747264();
    v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v9, v10);
    sub_1C0747264();
    v19(v16, v10);
    v18 = 0;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v18, 1, v10);
  if ((a1 & 1) != 0)
  {
    sub_1C06B9010(a2, (uint64_t)v7);
    if (v17(v7, 1, v10) == 1)
    {
      return sub_1C068F314((uint64_t)v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v7, v10);
      sub_1C06C9A64();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  return result;
}

uint64_t static PeopleSharedDirectory.tempFolder(hint:create:)@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  v20 = a2;
  v21 = a3;
  v19 = sub_1C0747408();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07472C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v15 = objc_msgSend(v14, sel_temporaryDirectory);

  sub_1C0747288();
  if (!a1)
  {
    sub_1C0746DB4();
    sub_1C07473F0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  sub_1C0746EF8();
  sub_1C0747264();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if ((v20 & 1) != 0)
    sub_1C06C9A64();
  v16 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21, v13, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
}

id sub_1C06C9A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[2];
  id v13[4];

  v13[3] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1C0747720();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v5 = (void *)sub_1C0747258();
  v13[0] = 0;
  v6 = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 1, 0, v13);

  if (v6)
    return v13[0];
  v12[1] = v13[0];
  v8 = v13[0];
  v9 = (void *)sub_1C0747204();

  swift_willThrow();
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4FF8B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v10, v0);
  v13[0] = 0;
  v13[1] = (id)0xE000000000000000;
  v11 = v9;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  Logger.ifError(_:message:)(v9);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

ValueMetadata *type metadata accessor for PeopleSharedDirectory()
{
  return &type metadata for PeopleSharedDirectory;
}

uint64_t static SpotlightHelper.fillinDetailsFromSpotlight(withDetails:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = a2;
  v3 = type metadata accessor for ResolvedFamily();
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = type metadata accessor for MessageDetails();
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06C9D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  Swift::String_optional v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  sub_1C069670C(*(_QWORD *)(v0 + 104), v1);
  v6 = *(int *)(v2 + 48);
  *(_DWORD *)(v0 + 272) = v6;
  sub_1C06AF5C4(v1 + v6, v3);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(_QWORD *)(v0 + 200) = v7;
  LODWORD(v1) = v7(v3, 1, v4);
  sub_1C06C4340(v3);
  if ((_DWORD)v1 == 1)
  {
    v8 = *(_QWORD *)(v0 + 192) + *(int *)(*(_QWORD *)(v0 + 184) + 36);
    if (*(_BYTE *)(v8 + 8))
      v9 = -1;
    else
      v9 = *(_QWORD *)v8;
    sub_1C06C4304();
    v10 = _s6People14ContactFetcherCACycfC_0();
    *(_QWORD *)(v0 + 40) = type metadata accessor for ContactFetcher();
    *(_QWORD *)(v0 + 48) = &protocol witness table for ContactFetcher;
    *(_QWORD *)(v0 + 16) = v10;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v11;
    *v11 = v0;
    v11[1] = sub_1C06CA168;
    return static FAFamilyCircle.resolveFamily(userDSID:actionUserDSID:withContactFetcher:useCache:)(*(_QWORD *)(v0 + 168), v9, 0, 1, v0 + 16, 1);
  }
  else
  {
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
    v14 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 112);
    sub_1C06AF5C4(*(_QWORD *)(v0 + 192) + *(int *)(v0 + 272), v14);
    if (v13(v14, 1, v15) == 1)
    {
      sub_1C06C4340(*(_QWORD *)(v0 + 160));
      _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000020, 0x80000001C07540A0, 500);
      swift_willThrow();
    }
    else
    {
      sub_1C06C0FF0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
      sub_1C0746EF8();
      v16 = String.trimToNil()();
      swift_bridgeObjectRelease();
      *(Swift::String_optional *)(v0 + 216) = v16;
      if (v16.value._object)
        __asm { BR              X10 }
      v17 = *(_QWORD *)(v0 + 136);
      _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000020, 0x80000001C07540D0, 500);
      swift_willThrow();
      sub_1C0685150(v17, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
    }
    sub_1C0685150(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C06CA050()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_1EF61A320 != -1)
    swift_once();
  v3 = qword_1EF61CBB8;
  v2[29] = 0x80000001C0752700;
  v2[30] = v3;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF61C2C0 + dword_1EF61C2C0);
  sub_1C0746EF8();
  v4 = (_QWORD *)swift_task_alloc();
  v2[31] = v4;
  *v4 = v2;
  v4[1] = sub_1C06CA538;
  return v6(v0, v1, 0xD000000000000020, 0x80000001C0752700, v3);
}

uint64_t sub_1C06CA168()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    __swift_destroy_boxed_opaque_existential_1Tm(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_1C06CA1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  Swift::String_optional v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 192) + *(int *)(v0 + 272);
  v5 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 56);
  v5(v1, 0, 1, v3);
  sub_1C06C0FF0(v1, v2);
  sub_1C06C4340(v4);
  sub_1C06C0FF0(v2, v4);
  v5(v4, 0, 1, v3);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 112);
  sub_1C06AF5C4(*(_QWORD *)(v0 + 192) + *(int *)(v0 + 272), v7);
  if (v6(v7, 1, v8) == 1)
  {
    sub_1C06C4340(*(_QWORD *)(v0 + 160));
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000020, 0x80000001C07540A0, 500);
    swift_willThrow();
  }
  else
  {
    sub_1C06C0FF0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
    sub_1C0746EF8();
    v9 = String.trimToNil()();
    swift_bridgeObjectRelease();
    *(Swift::String_optional *)(v0 + 216) = v9;
    if (v9.value._object)
      __asm { BR              X10 }
    v10 = *(_QWORD *)(v0 + 136);
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000020, 0x80000001C07540D0, 500);
    swift_willThrow();
    sub_1C0685150(v10, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  }
  sub_1C0685150(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06CA420()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_1EF61A320 != -1)
    swift_once();
  v3 = qword_1EF61CBB8;
  v2[29] = 0x80000001C0752700;
  v2[30] = v3;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF61C2C0 + dword_1EF61C2C0);
  sub_1C0746EF8();
  v4 = (_QWORD *)swift_task_alloc();
  v2[31] = v4;
  *v4 = v2;
  v4[1] = sub_1C06CA538;
  return v6(v0, v1, 0xD000000000000020, 0x80000001C0752700, v3);
}

uint64_t sub_1C06CA538(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1C06CA5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 256);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    v2 = sub_1C0747930();
    if (*(_QWORD *)(v1 + 16) && (sub_1C069C918(v2, v3), (v4 & 1) != 0))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      objc_opt_self();
      v5 = (void *)swift_dynamicCastObjCClass();
      if (v5)
      {
        v6 = *(_QWORD *)(v0 + 192);
        objc_msgSend(v5, sel_integerValue);
        __asm { BR              X10 }
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v7 = *(_QWORD *)(v0 + 136);
    v9 = 0x69662074276E6143;
    v10 = 0xEB0000000020646ELL;
    sub_1C0747930();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRelease();
    sub_1C0747FF0();
    swift_bridgeObjectRelease();
    v9 = 0xD000000000000027;
    v10 = 0x80000001C0754220;
  }
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v9, v10, 500);
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_1C0685150(v7, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  sub_1C0685150(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C06CA830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1C0747930();
  if (*(_QWORD *)(v1 + 16) && (sub_1C069C918(v2, v3), (v4 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_intValue);
      switch(v6)
      {
        case 3u:
          v10 = *(_QWORD *)(v0 + 184);
          v9 = *(_QWORD *)(v0 + 192);
          swift_unknownObjectRelease();
          *(_BYTE *)(v9 + *(int *)(v10 + 44)) = 2;
          break;
        case 2u:
          v12 = *(_QWORD *)(v0 + 184);
          v11 = *(_QWORD *)(v0 + 192);
          swift_unknownObjectRelease();
          *(_BYTE *)(v11 + *(int *)(v12 + 44)) = 3;
          break;
        case 1u:
          v8 = *(_QWORD *)(v0 + 184);
          v7 = *(_QWORD *)(v0 + 192);
          swift_unknownObjectRelease();
          *(_BYTE *)(v7 + *(int *)(v8 + 44)) = 1;
          break;
        default:
          swift_bridgeObjectRelease();
          _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000014, 0x80000001C0754140, 500);
          swift_willThrow();
          swift_unknownObjectRelease();
          JUMPOUT(0x1C06CADB8);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  __asm { BR              X10 }
}

void sub_1C06CAAC4()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C06CAB88);
}

void sub_1C06CAB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = sub_1C0748284();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
    JUMPOUT(0x1C06CAB84);
  v4 = sub_1C0747930();
  if (*(_QWORD *)(v1 + 16) && (sub_1C069C918(v4, v5), (v6 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = v7;
      v9 = ResolvedFamily.approverByDSID(with:)(objc_msgSend(v7, (SEL)(v2 + 840)));

      if (v9)
      {
        v11 = *(_QWORD *)(v0 + 184);
        v10 = *(_QWORD *)(v0 + 192);
        v12 = objc_msgSend(v8, (SEL)(v2 + 840));
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        *(_QWORD *)(v10 + *(int *)(v11 + 40)) = v12;
        JUMPOUT(0x1C06CACD4);
      }
      _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000013, 0x80000001C0754200, 500);
      swift_willThrow();
      JUMPOUT(0x1C06CAF50);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1C06CAD9CLL);
}

uint64_t sub_1C06CB2F4()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    __swift_destroy_boxed_opaque_existential_1Tm(v2 + 56);
  return swift_task_switch();
}

uint64_t sub_1C06CB364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 192) + *(int *)(v0 + 272);
  v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 56);
  v6(v1, 0, 1, v4);
  sub_1C0685150(v2, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  sub_1C06C0FF0(v1, v3);
  sub_1C06C4340(v5);
  sub_1C06C0FF0(v3, v5);
  v6(v5, 0, 1, v4);
  v7 = *(_QWORD *)(v0 + 192);
  sub_1C069670C(v7, *(_QWORD *)(v0 + 96));
  sub_1C0685150(v7, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06CB48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  sub_1C06C4340(v1);
  _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000014, 0x80000001C0754180, 500);
  swift_willThrow();
  sub_1C0685150(v2, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  sub_1C0685150(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06CB5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  Swift::String_optional v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  sub_1C06C4340(v1);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 112);
  sub_1C06AF5C4(*(_QWORD *)(v0 + 192) + *(int *)(v0 + 272), v5);
  if (v4(v5, 1, v6) == 1)
  {
    sub_1C06C4340(*(_QWORD *)(v0 + 160));
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000020, 0x80000001C07540A0, 500);
    swift_willThrow();
  }
  else
  {
    sub_1C06C0FF0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
    sub_1C0746EF8();
    v7 = String.trimToNil()();
    swift_bridgeObjectRelease();
    *(Swift::String_optional *)(v0 + 216) = v7;
    if (v7.value._object)
      __asm { BR              X10 }
    v8 = *(_QWORD *)(v0 + 136);
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000020, 0x80000001C07540D0, 500);
    swift_willThrow();
    sub_1C0685150(v8, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  }
  sub_1C0685150(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06CB7BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_1EF61A320 != -1)
    swift_once();
  v3 = qword_1EF61CBB8;
  v2[29] = 0x80000001C0752700;
  v2[30] = v3;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF61C2C0 + dword_1EF61C2C0);
  sub_1C0746EF8();
  v4 = (_QWORD *)swift_task_alloc();
  v2[31] = v4;
  *v4 = v2;
  v4[1] = sub_1C06CA538;
  return v6(v0, v1, 0xD000000000000020, 0x80000001C0752700, v3);
}

uint64_t sub_1C06CB8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074C980;
  *(_QWORD *)(v0 + 32) = sub_1C0747930();
  *(_QWORD *)(v0 + 40) = v1;
  result = sub_1C0747930();
  *(_QWORD *)(v0 + 48) = result;
  *(_QWORD *)(v0 + 56) = v3;
  qword_1EF61CBA8 = v0;
  return result;
}

uint64_t sub_1C06CB944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074C980;
  *(_QWORD *)(v0 + 32) = sub_1C0747930();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 0xD000000000000022;
  *(_QWORD *)(v0 + 56) = 0x80000001C0752DD0;
  if (qword_1EF61A310 != -1)
    swift_once();
  sub_1C0746EF8();
  v2 = sub_1C0746EF8();
  sub_1C068CDD4(v2);
  result = swift_bridgeObjectRelease();
  qword_1EF61CBB0 = v0;
  return result;
}

uint64_t sub_1C06CBA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074B820;
  *(_QWORD *)(v0 + 32) = sub_1C0747930();
  *(_QWORD *)(v0 + 40) = v1;
  if (qword_1EF61A310 != -1)
    swift_once();
  sub_1C0746EF8();
  v2 = sub_1C0746EF8();
  sub_1C068CDD4(v2);
  result = swift_bridgeObjectRelease();
  qword_1EF61CBB8 = v0;
  return result;
}

ValueMetadata *type metadata accessor for SpotlightHelper()
{
  return &type metadata for SpotlightHelper;
}

uint64_t sub_1C06CBAF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  sub_1C0747624();
  swift_allocObject();
  sub_1C0747618();
  sub_1C074760C();
  swift_allocObject();
  sub_1C0747600();
  type metadata accessor for DaemonConnection();
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v1 = type metadata accessor for PeopleXPCConnectionFactory();
  v2 = swift_allocObject();
  v0[8] = v1;
  v0[9] = &off_1E79E67F0;
  v0[5] = v2;
  sub_1C0747654();
  swift_allocObject();
  sub_1C06CBC8C();
  result = sub_1C0747648();
  qword_1EF61CBC8 = result;
  return result;
}

uint64_t static DaemonMessageSender.shared.getter()
{
  if (qword_1EF61A328 != -1)
    swift_once();
  return sub_1C0746F64();
}

ValueMetadata *type metadata accessor for DaemonMessageSender()
{
  return &type metadata for DaemonMessageSender;
}

unint64_t sub_1C06CBC8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61CBD0;
  if (!qword_1EF61CBD0)
  {
    v1 = type metadata accessor for DaemonConnection();
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for DaemonConnection, v1);
    atomic_store(result, &qword_1EF61CBD0);
  }
  return result;
}

id ContactPerson.contact.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t ContactPerson.idsHandle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C0746EF8();
  return v1;
}

uint64_t ContactPerson.init(contact:idsHandle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t destroy for ContactPerson(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s6People13ContactPersonVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  sub_1C0746EF8();
  return a1;
}

uint64_t assignWithCopy for ContactPerson(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactPerson(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactPerson(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactPerson(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactPerson()
{
  return &type metadata for ContactPerson;
}

uint64_t sub_1C06CBED4()
{
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  sub_1C0748248();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  return 0x28206E6F6D656164;
}

uint64_t DaemonStatusFetcher.__allocating_init(statusTypes:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t DaemonStatusFetcher.init(statusTypes:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1C06CBFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_1C06CBFDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t (*v7)(_QWORD *, _QWORD *, ValueMetadata *, unint64_t);

  v1 = v0[5];
  v2 = *(_QWORD *)(v0[6] + 16);
  v0[7] = v2;
  v3 = qword_1EF61A328;
  sub_1C0746EF8();
  sub_1C0746EF8();
  if (v3 != -1)
  {
    swift_once();
    v1 = v0[5];
  }
  v0[2] = v1;
  v0[3] = v2;
  v7 = (uint64_t (*)(_QWORD *, _QWORD *, ValueMetadata *, unint64_t))((int)*MEMORY[0x1E0CF0F50]
                                                                                     + MEMORY[0x1E0CF0F50]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  v5 = sub_1C06CC2FC();
  *v4 = v0;
  v4[1] = sub_1C06CC0C0;
  return v7(v0 + 4, v0 + 2, &type metadata for FetchContactsStatusMessage, v5);
}

uint64_t sub_1C06CC0C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1C06CC138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C06837A0(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1C06CC18C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DaemonStatusFetcher.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DaemonStatusFetcher.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06CC20C()
{
  return sub_1C06CBED4();
}

uint64_t sub_1C06CC22C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C0699B64;
  v5[5] = a1;
  v5[6] = v4;
  return swift_task_switch();
}

uint64_t sub_1C06CC290@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for DaemonStatusFetcher();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  a2[3] = v4;
  a2[4] = (uint64_t)&protocol witness table for DaemonStatusFetcher;
  *a2 = v5;
  return sub_1C0746EF8();
}

uint64_t DaemonStatusFetcherFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DaemonStatusFetcherFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C06CC2FC()
{
  unint64_t result;

  result = qword_1EF61CBE0;
  if (!qword_1EF61CBE0)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for FetchContactsStatusMessage, &type metadata for FetchContactsStatusMessage);
    atomic_store(result, (unint64_t *)&qword_1EF61CBE0);
  }
  return result;
}

uint64_t type metadata accessor for DaemonStatusFetcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for DaemonStatusFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonStatusFetcher.debugID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of DaemonStatusFetcher.__allocating_init(statusTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DaemonStatusFetcher.fetchStatus(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 104) + *(_QWORD *)(*(_QWORD *)v1 + 104));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C0699E50;
  return v6(a1);
}

uint64_t dispatch thunk of DaemonStatusFetcherFactoryProtocol.fetcher(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for DaemonStatusFetcherFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for DaemonStatusFetcherFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonStatusFetcherFactory.fetcher(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t static AskToBuyBuilder.createFromAPRequestHandler(withDetails:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C06CC43C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  *v3 = v0;
  v3[1] = sub_1C06CC4E0;
  return sub_1C0748260();
}

uint64_t sub_1C06CC4E0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1C06CC534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CCB0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  type metadata accessor for MessageDetails();
  v7 = swift_allocBox();
  sub_1C068510C(a2, v8, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  v9 = (void *)objc_opt_self();
  sub_1C0746EF8();
  v10 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1C06CE41C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C06FDD58;
  aBlock[3] = &block_descriptor_5;
  v13 = _Block_copy(aBlock);
  sub_1C0746F64();
  sub_1C0747030();
  objc_msgSend(v9, sel_getRequestWithIdentifier_completion_, v10, v13);
  _Block_release(v13);
  sub_1C0747030();

}

void sub_1C06CC6E8(uint64_t a1)
{
  uint64_t v1;

  sub_1C06CC534(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for AskToBuyBuilder()
{
  return &type metadata for AskToBuyBuilder;
}

void sub_1C06CC700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  id v34;
  unsigned int v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char v45;
  id v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char *v59;
  id v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  char v72;
  char *v73;
  char *v74;
  char v75;
  void (*v76)(char *, uint64_t);
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void *object;
  uint64_t v99;
  unint64_t v100;
  char v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  Swift::String_optional v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  unsigned int v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156[6];
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for MessageDetails();
  v150 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v140 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_1C0747720();
  v143 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v142 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResolvedFamily();
  v137 = *(_QWORD *)(v13 - 8);
  v138 = v13;
  MEMORY[0x1E0C80A78](v13);
  v136 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v144 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v130 - v19;
  v21 = sub_1C07473E4();
  v22 = *(_QWORD *)(v21 - 8);
  v146 = v21;
  v147 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v139 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v145 = (char *)&v130 - v26;
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v130 - v27;
  v141 = a3;
  v149 = swift_projectBox();
  v151 = v10;
  if (a1)
  {
    v157 = 0x737574617473;
    v158 = 0xE600000000000000;
    sub_1C0747F90();
    v29 = *(_QWORD *)(a1 + 16);
    v148 = a1;
    if (v29)
    {
      v30 = sub_1C069C9AC((uint64_t)&v159);
      v31 = a4;
      if ((v32 & 1) != 0)
      {
        sub_1C068A530(*(_QWORD *)(a1 + 56) + 32 * v30, (uint64_t)&v161);
      }
      else
      {
        v161 = 0u;
        v162 = 0u;
      }
    }
    else
    {
      v161 = 0u;
      v162 = 0u;
      v31 = a4;
    }
    sub_1C069DDB0((uint64_t)&v159);
    if (*((_QWORD *)&v162 + 1))
    {
      sub_1C06CE524();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v134 = v31;
        v135 = v28;
        v33 = (id)v157;
        v34 = objc_msgSend((id)v157, sel_integerValue);

        v35 = 0x20301u >> (8 * ((_BYTE)v34 + 1));
        if ((unint64_t)v34 + 1 >= 3)
          v35 = 5;
        v133 = v35;
        type metadata accessor for DaemonConnection();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v132 = (id)objc_opt_self();
        v37 = objc_msgSend(v132, sel_bundleForClass_, ObjCClassFromMetadata);
        v38 = sub_1C07471EC();
        v40 = v39;

        v41 = v149;
        swift_beginAccess();
        *(_QWORD *)(v41 + 24) = v38;
        *(_QWORD *)(v41 + 32) = v40;
        swift_bridgeObjectRelease();
        v156[3] = 0xD000000000000013;
        v156[4] = 0x80000001C0754370;
        sub_1C0747F90();
        v42 = v148;
        if (*(_QWORD *)(v148 + 16))
        {
          v43 = sub_1C069C9AC((uint64_t)&v159);
          v44 = v135;
          if ((v45 & 1) != 0)
          {
            sub_1C068A530(*(_QWORD *)(v42 + 56) + 32 * v43, (uint64_t)&v161);
          }
          else
          {
            v161 = 0u;
            v162 = 0u;
          }
        }
        else
        {
          v161 = 0u;
          v162 = 0u;
          v44 = v135;
        }
        sub_1C069DDB0((uint64_t)&v159);
        if (*((_QWORD *)&v162 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            v131 = ObjCClassFromMetadata;
            sub_1C0747324();
            if (qword_1ED4FEB70 != -1)
              swift_once();
            v48 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED4FEB58);
            v49 = v144;
            (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v20, v48, v15);
            v50 = objc_msgSend((id)objc_opt_self(), sel_seconds);
            sub_1C07470CC();

            sub_1C07470C0();
            v51 = *(void (**)(char *, uint64_t))(v49 + 8);
            v51(v18, v15);
            v52 = v145;
            sub_1C0747390();
            v51(v20, v15);
            v53 = v149;
            swift_beginAccess();
            v47 = (int *)v153;
            v55 = v146;
            v54 = v147;
            (*(void (**)(uint64_t, char *, uint64_t))(v147 + 40))(v53 + *(int *)(v153 + 32), v52, v146);
            strcpy((char *)v156, "requesterDSID");
            HIWORD(v156[1]) = -4864;
            sub_1C0747F90();
            v56 = v148;
            if (*(_QWORD *)(v148 + 16) && (v57 = sub_1C069C9AC((uint64_t)&v159), (v58 & 1) != 0))
            {
              sub_1C068A530(*(_QWORD *)(v56 + 56) + 32 * v57, (uint64_t)&v161);
            }
            else
            {
              v161 = 0u;
              v162 = 0u;
            }
            sub_1C069DDB0((uint64_t)&v159);
            if (*((_QWORD *)&v162 + 1))
            {
              if ((swift_dynamicCast() & 1) != 0)
              {
                v61 = sub_1C0730B3C(v156[0], v156[1]);
                v63 = v62;
                swift_bridgeObjectRelease();
                if ((v63 & 1) == 0)
                {
                  v64 = v149;
                  swift_beginAccess();
                  v65 = v64 + v47[9];
                  *(_QWORD *)v65 = v61;
                  *(_BYTE *)(v65 + 8) = 0;
                  if (v133 == 3)
                  {
                    swift_beginAccess();
                    v71 = v47[11];
                    v72 = 3;
                  }
                  else
                  {
                    if (v133 != 2)
                    {
                      if (v133 != 1)
                      {
                        swift_beginAccess();
                        v73 = v145;
                        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v145, v64 + v47[8], v55);
                        v74 = v139;
                        sub_1C07473D8();
                        v75 = sub_1C0747384();
                        v76 = *(void (**)(char *, uint64_t))(v54 + 8);
                        v76(v74, v55);
                        v76(v73, v55);
                        if ((v75 & 1) != 0)
                        {
                          if (qword_1EF61A398 != -1)
                            swift_once();
                          __swift_project_value_buffer(v152, (uint64_t)qword_1EF61D388);
                          v77 = sub_1C0747708();
                          v78 = sub_1C0747D68();
                          if (os_log_type_enabled(v77, v78))
                          {
                            v79 = (uint8_t *)swift_slowAlloc();
                            *(_WORD *)v79 = 0;
                            _os_log_impl(&dword_1C0671000, v77, v78, "No status but expired set", v79, 2u);
                            MEMORY[0x1C3BA0D04](v79, -1, -1);
                          }

                          v64 = v149;
                          swift_beginAccess();
                          *(_BYTE *)(v64 + v47[11]) = 4;
                        }
LABEL_50:
                        swift_beginAccess();
                        __asm { BR              X10 }
                      }
                      swift_beginAccess();
                      *(_BYTE *)(v64 + v47[11]) = 1;
                      *(_QWORD *)&v161 = 0x55746375646F7270;
                      *((_QWORD *)&v161 + 1) = 0xEA00000000004C52;
                      sub_1C0747F90();
                      v66 = v148;
                      if (*(_QWORD *)(v148 + 16))
                      {
                        v67 = sub_1C069C9AC((uint64_t)&v159);
                        if ((v68 & 1) != 0)
                        {
                          sub_1C068A530(*(_QWORD *)(v66 + 56) + 32 * v67, (uint64_t)&v161);
                        }
                        else
                        {
                          v161 = 0u;
                          v162 = 0u;
                        }
                      }
                      else
                      {
                        v161 = 0u;
                        v162 = 0u;
                      }
                      sub_1C069DDB0((uint64_t)&v159);
                      if (*((_QWORD *)&v162 + 1))
                      {
                        v80 = swift_dynamicCast();
                        if (v80)
                          v81 = v154;
                        else
                          v81 = 0;
                        if (v80)
                          v82 = v155;
                        else
                          v82 = 0;
                      }
                      else
                      {
                        sub_1C0696FFC((uint64_t)&v161);
                        v81 = 0;
                        v82 = 0;
                      }
                      swift_beginAccess();
                      v83 = (_QWORD *)(v64 + v47[20]);
                      *v83 = v81;
                      v83[1] = v82;
                      swift_bridgeObjectRelease();
                      *(_QWORD *)&v161 = 0x54746375646F7270;
                      *((_QWORD *)&v161 + 1) = 0xEB00000000657079;
                      sub_1C0747F90();
                      v84 = v148;
                      if (*(_QWORD *)(v148 + 16) && (v85 = sub_1C069C9AC((uint64_t)&v159), (v86 & 1) != 0))
                      {
                        sub_1C068A530(*(_QWORD *)(v84 + 56) + 32 * v85, (uint64_t)&v161);
                      }
                      else
                      {
                        v161 = 0u;
                        v162 = 0u;
                      }
                      sub_1C069DDB0((uint64_t)&v159);
                      if (*((_QWORD *)&v162 + 1))
                      {
                        v87 = swift_dynamicCast();
                        if (v87)
                          v88 = v154;
                        else
                          v88 = 0;
                        if (v87)
                          v89 = v155;
                        else
                          v89 = 0;
                      }
                      else
                      {
                        sub_1C0696FFC((uint64_t)&v161);
                        v88 = 0;
                        v89 = 0;
                      }
                      swift_beginAccess();
                      v90 = (_QWORD *)(v64 + v47[21]);
                      *v90 = v88;
                      v90[1] = v89;
                      swift_bridgeObjectRelease();
                      strcpy((char *)&v161, "thumbnailURL");
                      BYTE13(v161) = 0;
                      HIWORD(v161) = -5120;
                      sub_1C0747F90();
                      v91 = v148;
                      if (*(_QWORD *)(v148 + 16) && (v92 = sub_1C069C9AC((uint64_t)&v159), (v93 & 1) != 0))
                      {
                        sub_1C068A530(*(_QWORD *)(v91 + 56) + 32 * v92, (uint64_t)&v161);
                      }
                      else
                      {
                        v161 = 0u;
                        v162 = 0u;
                      }
                      sub_1C069DDB0((uint64_t)&v159);
                      if (*((_QWORD *)&v162 + 1))
                      {
                        v94 = swift_dynamicCast();
                        if (v94)
                          v95 = v154;
                        else
                          v95 = 0;
                        if (v94)
                          v96 = v155;
                        else
                          v96 = 0;
                      }
                      else
                      {
                        sub_1C0696FFC((uint64_t)&v161);
                        v95 = 0;
                        v96 = 0;
                      }
                      swift_beginAccess();
                      v97 = (_QWORD *)(v64 + v47[13]);
                      *v97 = v95;
                      v97[1] = v96;
                      swift_bridgeObjectRelease();
                      swift_beginAccess();
                      sub_1C0746EF8();
                      object = String.trimToNil()().value._object;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (object)
                      {
                        strcpy((char *)&v161, "requestString");
                        HIWORD(v161) = -4864;
                        sub_1C0747F90();
                        v99 = v148;
                        if (*(_QWORD *)(v148 + 16) && (v100 = sub_1C069C9AC((uint64_t)&v159), (v101 & 1) != 0))
                        {
                          sub_1C068A530(*(_QWORD *)(v99 + 56) + 32 * v100, (uint64_t)&v161);
                        }
                        else
                        {
                          v161 = 0u;
                          v162 = 0u;
                        }
                        sub_1C069DDB0((uint64_t)&v159);
                        if (*((_QWORD *)&v162 + 1))
                          swift_dynamicCast();
                        else
                          sub_1C0696FFC((uint64_t)&v161);
                        v102 = String.trimToNil()().value._object;
                        swift_bridgeObjectRelease();
                        if (v102)
                        {
                          v103 = v149;
                          swift_beginAccess();
                          *(Swift::String_optional *)(v103 + v47[15]) = String.trimToNil()();
                          swift_endAccess();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          *(_QWORD *)&v161 = 0x637365446D657469;
                          *((_QWORD *)&v161 + 1) = 0xEF6E6F6974706972;
                          v104 = MEMORY[0x1E0DEA968];
                          sub_1C0747F90();
                          v105 = v148;
                          if (*(_QWORD *)(v148 + 16))
                          {
                            v106 = sub_1C069C9AC((uint64_t)&v159);
                            if ((v107 & 1) != 0)
                            {
                              sub_1C068A530(*(_QWORD *)(v105 + 56) + 32 * v106, (uint64_t)&v161);
                            }
                            else
                            {
                              v161 = 0u;
                              v162 = 0u;
                            }
                          }
                          else
                          {
                            v161 = 0u;
                            v162 = 0u;
                          }
                          sub_1C069DDB0((uint64_t)&v159);
                          if (*((_QWORD *)&v162 + 1))
                            swift_dynamicCast();
                          else
                            sub_1C0696FFC((uint64_t)&v161);
                          v108 = String.trimToNil()();
                          swift_bridgeObjectRelease();
                          if (v108.value._object)
                          {
                            v109 = objc_msgSend(v132, sel_bundleForClass_, v131);
                            v145 = (char *)sub_1C07471EC();

                            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6E8);
                            v110 = swift_allocObject();
                            v111 = sub_1C0682990(v110, 2);
                            v113 = v112;
                            v114 = v149;
                            swift_beginAccess();
                            v115 = *(_QWORD *)(v114 + 40);
                            v116 = *(_QWORD *)(v114 + 48);
                            *(_QWORD *)(v113 + 24) = v104;
                            v117 = sub_1C06C0F1C();
                            *(_QWORD *)v113 = v115;
                            *(_QWORD *)(v113 + 8) = v116;
                            v47 = (int *)v153;
                            *(_QWORD *)(v113 + 64) = v104;
                            *(_QWORD *)(v113 + 72) = v117;
                            *(_QWORD *)(v113 + 32) = v117;
                            *(Swift::String_optional *)(v113 + 40) = v108;
                            nullsub_1(v111);
                            sub_1C0746EF8();
                            v118 = sub_1C0747948();
                            v120 = v119;
                            swift_bridgeObjectRelease();
                            swift_beginAccess();
                            v121 = (uint64_t *)(v114 + v47[19]);
                            *v121 = v118;
                            v121[1] = v120;
                          }
                          else
                          {
                            if (qword_1EF61A2F8 != -1)
                              swift_once();
                            v123 = qword_1EF61C6F0;
                            v122 = *(_QWORD *)algn_1EF61C6F8;
                            v124 = v149;
                            swift_beginAccess();
                            v125 = (uint64_t *)(v124 + v47[19]);
                            *v125 = v123;
                            v125[1] = v122;
                            sub_1C0746EF8();
                          }
                          swift_bridgeObjectRelease();
                          strcpy((char *)&v161, "requestSummary");
                          HIBYTE(v161) = -18;
                          sub_1C0747F90();
                          v126 = v148;
                          if (*(_QWORD *)(v148 + 16) && (v127 = sub_1C069C9AC((uint64_t)&v159), (v128 & 1) != 0))
                          {
                            sub_1C068A530(*(_QWORD *)(v126 + 56) + 32 * v127, (uint64_t)&v161);
                          }
                          else
                          {
                            v161 = 0u;
                            v162 = 0u;
                          }
                          sub_1C069DDB0((uint64_t)&v159);
                          if (*((_QWORD *)&v162 + 1))
                            swift_dynamicCast();
                          else
                            sub_1C0696FFC((uint64_t)&v161);
                          v129 = v149;
                          swift_beginAccess();
                          v64 = v129;
                          *(Swift::String_optional *)(v129 + v47[16]) = String.trimToNil()();
                          swift_endAccess();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          goto LABEL_50;
                        }
                        v159 = 0;
                        v160 = 0xE000000000000000;
                        sub_1C0747FF0();
                        swift_bridgeObjectRelease();
                        v159 = 0xD00000000000002BLL;
                        v160 = 0x80000001C07543F0;
                        sub_1C07477F8();
                        sub_1C07479CC();
                        swift_bridgeObjectRelease();
                        v46 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v159, v160, 500);
                        swift_bridgeObjectRelease();
                        swift_willThrow();
                        v69 = *(void (**)(char *, uint64_t))(v147 + 8);
                      }
                      else
                      {
                        v159 = 0;
                        v160 = 0xE000000000000000;
                        sub_1C0747FF0();
                        swift_bridgeObjectRelease();
                        v159 = 0xD00000000000001FLL;
                        v160 = 0x80000001C0754440;
                        sub_1C07477F8();
                        sub_1C07479CC();
                        swift_bridgeObjectRelease();
                        v46 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v159, v160, 500);
                        swift_bridgeObjectRelease();
                        swift_willThrow();
                        v69 = *(void (**)(char *, uint64_t))(v54 + 8);
                      }
                      v70 = v135;
                      goto LABEL_46;
                    }
                    swift_beginAccess();
                    v71 = v47[11];
                    v72 = 2;
                  }
                  *(_BYTE *)(v64 + v71) = v72;
                  goto LABEL_50;
                }
              }
            }
            else
            {
              sub_1C0696FFC((uint64_t)&v161);
            }
            v159 = 0;
            v160 = 0xE000000000000000;
            sub_1C0747FF0();
            swift_bridgeObjectRelease();
            v159 = 0xD000000000000017;
            v160 = 0x80000001C07543B0;
            sub_1C07477F8();
            sub_1C07479CC();
            swift_bridgeObjectRelease();
            v46 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v159, v160, 500);
            swift_bridgeObjectRelease();
            swift_willThrow();
            v69 = *(void (**)(char *, uint64_t))(v54 + 8);
            v70 = v44;
LABEL_46:
            v69(v70, v55);
            goto LABEL_31;
          }
        }
        else
        {
          sub_1C0696FFC((uint64_t)&v161);
        }
        v159 = 0;
        v160 = 0xE000000000000000;
        sub_1C0747FF0();
        swift_bridgeObjectRelease();
        v159 = 0xD000000000000013;
        v160 = 0x80000001C0754390;
        sub_1C07477F8();
        sub_1C07479CC();
        swift_bridgeObjectRelease();
        v46 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v159, v160, 500);
        swift_bridgeObjectRelease();
LABEL_30:
        swift_willThrow();
        v47 = (int *)v153;
        goto LABEL_31;
      }
    }
    else
    {
      sub_1C0696FFC((uint64_t)&v161);
    }
    v46 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000010, 0x80000001C0754120, 500);
    goto LABEL_30;
  }
  if (a2)
  {
    swift_getErrorValue();
    sub_1C07482FC();
  }
  v47 = (int *)v153;
  v159 = 0;
  v160 = 0xE000000000000000;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v161 = 0xD000000000000017;
  *((_QWORD *)&v161 + 1) = 0x80000001C0754310;
  swift_beginAccess();
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  v46 = _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(v161, *((uint64_t *)&v161 + 1), 500);
  swift_bridgeObjectRelease();
  swift_willThrow();
LABEL_31:
  v59 = v151;
  if (qword_1EF61A398 != -1)
    swift_once();
  __swift_project_value_buffer(v152, (uint64_t)qword_1EF61D388);
  v60 = v46;
  Logger.ifError(_:message:)(v46);

  (*(void (**)(char *, uint64_t, uint64_t, int *))(v150 + 56))(v59, 1, 1, v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CCB0);
  sub_1C0747C18();

}

uint64_t sub_1C06CE3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CCB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_1C0747030();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1C06CE41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CCB0) - 8) + 80);
  sub_1C06CC700(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1C06CE470()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for MessageDetails();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = swift_projectBox();
  swift_beginAccess();
  sub_1C068510C(v3, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  v4 = MessageDetails.debugDescription.getter();
  sub_1C0685150((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  return v4;
}

unint64_t sub_1C06CE524()
{
  unint64_t result;

  result = qword_1EF61CEA0;
  if (!qword_1EF61CEA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF61CEA0);
  }
  return result;
}

uint64_t sub_1C06CE560()
{
  return sub_1C06CE470();
}

uint64_t sub_1C06CE568()
{
  return swift_deallocObject();
}

_BYTE **sub_1C06CE578(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0690F08(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1C06CE580()
{
  return swift_deallocObject();
}

uint64_t sub_1C06CE590()
{
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C06CE5B4()
{
  uint64_t v0;

  return sub_1C069089C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C06CE5BC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1C06908BC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t RequestMessageDetailsBuilder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static RequestMessageDetailsBuilder.shared.getter()
{
  type metadata accessor for RequestMessageDetailsBuilder();
  return swift_initStaticObject();
}

uint64_t RequestMessageDetailsBuilder.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for RequestMessageDetailsBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1C06CE620(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = a8;
  *(_BYTE *)(v8 + 238) = a6;
  *(_BYTE *)(v8 + 237) = a5;
  *(_QWORD *)(v8 + 64) = a3;
  *(_QWORD *)(v8 + 72) = a4;
  *(_QWORD *)(v8 + 56) = a1;
  *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B628);
  *(_QWORD *)(v8 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C1B0);
  *(_QWORD *)(v8 + 112) = swift_task_alloc();
  v10 = type metadata accessor for ResolvedFamily();
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v11 = type metadata accessor for MessageDetails();
  *(_QWORD *)(v8 + 144) = v11;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  *(_BYTE *)(v8 + 239) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C06CE720()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v22;

  if (*(_BYTE *)(v0 + 239) && *(_BYTE *)(v0 + 239) == 1)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v2 = *(_QWORD *)(v0 + 168);
    v3 = *(int **)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0xE000000000000000;
    *(_BYTE *)(v2 + 16) = 3;
    *(_QWORD *)(v2 + 24) = 0;
    *(_QWORD *)(v2 + 32) = 0xE000000000000000;
    *(_QWORD *)(v2 + 40) = 0;
    *(_QWORD *)(v2 + 48) = 0xE000000000000000;
    sub_1C0747348();
    v6 = v2 + v3[9];
    *(_QWORD *)v6 = 0;
    *(_BYTE *)(v6 + 8) = 1;
    v7 = v2 + v3[10];
    *(_QWORD *)v7 = 0;
    *(_BYTE *)(v7 + 8) = 1;
    *(_BYTE *)(v2 + v3[11]) = 0;
    v8 = v3[12];
    *(_DWORD *)(v0 + 232) = v8;
    v9 = v2 + v8;
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    *(_QWORD *)(v0 + 176) = v10;
    v10(v9, 1, 1, v4);
    v11 = (_QWORD *)(v2 + v3[13]);
    *v11 = 0;
    v11[1] = 0;
    *(_OWORD *)(v2 + v3[14]) = xmmword_1C074DB10;
    v12 = (_QWORD *)(v2 + v3[15]);
    *v12 = 0;
    v12[1] = 0;
    v13 = (_QWORD *)(v2 + v3[16]);
    *v13 = 0;
    v13[1] = 0;
    v14 = (_QWORD *)(v2 + v3[17]);
    *v14 = 0;
    v14[1] = 0xE000000000000000;
    v15 = (_QWORD *)(v2 + v3[18]);
    *v15 = 0;
    v15[1] = 0;
    v16 = (_QWORD *)(v2 + v3[19]);
    *v16 = 0;
    v16[1] = 0xE000000000000000;
    v17 = (_QWORD *)(v2 + v3[20]);
    *v17 = 0;
    v17[1] = 0;
    v18 = (_QWORD *)(v2 + v3[21]);
    *v18 = 0;
    v18[1] = 0;
    v19 = _s6People14ContactFetcherCACycfC_0();
    *(_QWORD *)(v0 + 40) = type metadata accessor for ContactFetcher();
    *(_QWORD *)(v0 + 48) = &protocol witness table for ContactFetcher;
    *(_QWORD *)(v0 + 16) = v19;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v20;
    *v20 = v0;
    v20[1] = sub_1C06CE974;
    return static ResolvedFamily.getFamilyForLoggedInChild(withContactFetcher:)(*(_QWORD *)(v0 + 112), v0 + 16);
  }
  v1 = sub_1C0748284();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    goto LABEL_5;
  *(_BYTE *)(v0 + 236) = *(_BYTE *)(v0 + 239);
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v22;
  *v22 = v0;
  v22[1] = sub_1C06CEDD4;
  return sub_1C070A2D4(*(_QWORD *)(v0 + 56), (_BYTE *)(v0 + 236), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 237), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 238));
}

uint64_t sub_1C06CE974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1 + 16;
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v2);
  return swift_task_switch();
}

uint64_t sub_1C06CE9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 128) + 48))(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 168);
    sub_1C068A9AC(v2, &qword_1EF61C1B0);
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000028, 0x80000001C0754460, 500);
    swift_willThrow();
    sub_1C0685150(v3, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 168);
    v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 176);
    v7 = *(id **)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = v5 + *(int *)(v0 + 232);
    sub_1C068A658(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
    sub_1C068A9AC(v10, &qword_1EF61C1B0);
    sub_1C06AF580((uint64_t)v7, v10);
    v6(v10, 0, 1, v1);
    v11 = *v7;
    v12 = FAFamilyMember.displayNameWithFallback.getter();
    v14 = v13;

    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 + 40) = v12;
    *(_QWORD *)(v5 + 48) = v14;
    sub_1C0746EF8();
    swift_bridgeObjectRelease();
    *(_QWORD *)v5 = v9;
    *(_QWORD *)(v5 + 8) = v8;
    *(_BYTE *)(v5 + 16) = 1;
    v15 = swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v15;
    *(_QWORD *)(v15 + 16) = v5;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v16;
    *v16 = v0;
    v16[1] = sub_1C06CEC00;
    return sub_1C0748260();
  }
}

uint64_t sub_1C06CEC00()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06CEC5C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 48))(v1, 1, *(_QWORD *)(v0 + 144));
  v3 = *(_QWORD *)(v0 + 168);
  if (v2 == 1)
  {
    v4 = *(_QWORD *)(v0 + 136);
    sub_1C068A9AC(v1, &qword_1EF61B628);
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000022, 0x80000001C0754490, 500);
    swift_willThrow();
    sub_1C0685150(v4, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 56);
    sub_1C0685150(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
    sub_1C068A658(v1, v5, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
    sub_1C068A658(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  }
  sub_1C0685150(v3, (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06CEDD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 224) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C06CEE80()
{
  uint64_t v0;

  sub_1C0685150(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for MessageDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06CEEFC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t RequestMessageDetailsBuilder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RequestMessageDetailsBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06CEF80(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1C06930A0;
  return sub_1C06CE620(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of RequestMessageDetailsBuilderProtocol.fromPersistence(_:eventID:useFamilyCache:resolveAppBundleInfo:maxAge:withContactFetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a10 + 8) + *(_QWORD *)(a10 + 8));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_1C069325C;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t method lookup function for RequestMessageDetailsBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequestMessageDetailsBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RequestMessageDetailsBuilder.fromPersistence(_:eventID:useFamilyCache:resolveAppBundleInfo:maxAge:withContactFetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v8 + 88) + *(_QWORD *)(*(_QWORD *)v8 + 88));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_1C06930A0;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t static PeopleBiomeEventIndexer.indexEvent(askToBuyEvent:withContactFetcher:withIndexer:completion:)(void *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD *v25;
  id v26;
  __int128 v27[2];

  v10 = objc_msgSend(a1, sel_userID);
  v11 = sub_1C0747930();
  v13 = v12;

  v14 = sub_1C0730B3C(v11, v13);
  LOBYTE(v11) = v15;
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    if (qword_1EF61A458 != -1)
      swift_once();
    v23 = qword_1EF629E60;
    return a4(v23, 1);
  }
  v16 = objc_msgSend(a1, sel_actionUserID);
  if (v16)
  {
    v17 = sub_1C0747930();
    v19 = v18;

    v20 = sub_1C0730B3C(v17, v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
      if (qword_1EF61A460 != -1)
        swift_once();
      v23 = qword_1EF629E68;
      return a4(v23, 1);
    }
  }
  else
  {
    v20 = 0;
  }
  sub_1C0685C78(a3, (uint64_t)v27);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a4;
  v25[3] = a5;
  v25[4] = a1;
  sub_1C0685BC4(v27, (uint64_t)(v25 + 5));
  sub_1C0746F64();
  v26 = a1;
  sub_1C0730E84(v14, v20, v16 == 0, a2, (uint64_t)sub_1C06D0AB8, (uint64_t)v25);
  return sub_1C0747030();
}

void sub_1C06CF38C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, void *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  id v17;
  uint64_t v18;

  v10 = type metadata accessor for ResolvedFamily();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CE10);
  MEMORY[0x1E0C80A78](v13);
  v15 = (id *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C06D0BF4(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *v15;
    v17 = *v15;
    a2((uint64_t)v16, 1);

  }
  else
  {
    sub_1C06C0FF0((uint64_t)v15, (uint64_t)v12);
    sub_1C06C74F0(a4, *(void **)v12, *((void **)v12 + 1), *((_QWORD *)v12 + 2), a5, a2, a3);
    sub_1C06D0C3C((uint64_t)v12);
  }
}

uint64_t static PeopleBiomeEventIndexer.indexEvent(locationEvent:withPerson:withIndexer:completion:)(void *a1, __int128 *a2, _QWORD *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  __int128 v7;
  uint64_t v8;

  v5 = *((_QWORD *)a2 + 2);
  v7 = *a2;
  v8 = v5;
  return sub_1C06C6624(a1, (uint64_t)&v7, a3, a4, a5);
}

uint64_t static PeopleBiomeEventIndexer.indexEvent(screenTimeRequest:bundleResolver:withContactFetcher:withIndexer:completion:)(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  void *v35;
  unint64_t v36;
  NSObject *v37;
  Class v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  id v44;
  char *v45;
  double v46;
  double v47;
  char *v48;
  void (**v49)(char *, uint64_t);
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  Class v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t isa;
  Class v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v80;
  unint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  _QWORD *v93;
  id v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  unint64_t v97;
  os_log_type_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, unint64_t, void (*)(uint64_t *), _QWORD *, Class, Class);
  _QWORD *v112;
  Class v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  char *v121;
  uint64_t v122;
  void (**v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  NSObject *v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  unint64_t v138;

  v129 = a6;
  v130 = a5;
  v125 = a4;
  v126 = a3;
  v128 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v123 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v121 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1C074778C();
  v122 = *(_QWORD *)(v124 - 8);
  v9 = MEMORY[0x1E0C80A78](v124);
  v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v127 = (char *)&v110 - v12;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v14 = v13 + 16;
  v132 = v13;
  *(_QWORD *)(v13 + 24) = 0;
  v131 = swift_allocObject();
  *(_OWORD *)(v131 + 16) = xmmword_1C074DB10;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  v16 = v15;
  *(_QWORD *)(v15 + 24) = 0;
  v17 = objc_msgSend(a1, sel_requesterDSID);
  v18 = sub_1C0747930();
  v20 = v19;

  v21 = sub_1C0730B3C(v18, v20);
  LOBYTE(v17) = v22;
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    if (qword_1EF61A458 != -1)
      swift_once();
    v130(qword_1EF629E60, 1);
    sub_1C0747030();
    sub_1C0747030();
  }
  else
  {
    v23 = objc_msgSend(a1, sel_responderDSID);
    v120 = v23;
    if (v23)
    {
      v118 = v14;
      v24 = v7;
      v25 = v11;
      v26 = a1;
      v27 = v21;
      v28 = v23;
      v29 = sub_1C0747930();
      v31 = v30;

      v119 = sub_1C0730B3C(v29, v31);
      LOBYTE(v29) = v32;
      swift_bridgeObjectRelease();
      v33 = v16;
      if ((v29 & 1) != 0)
      {
        if (qword_1EF61A460 != -1)
          swift_once();
        v130(qword_1EF629E68, 1);
        sub_1C0747030();
        goto LABEL_40;
      }
      v21 = v27;
      a1 = v26;
      v11 = v25;
      v7 = v24;
    }
    else
    {
      v119 = 0;
      v33 = v16;
    }
    if (objc_msgSend(a1, sel_kind) != 2)
    {
      isa = (uint64_t)v128[3].isa;
      v63 = v128[4].isa;
      __swift_project_boxed_opaque_existential_1(v128, isa);
      (*((void (**)(__int128 *__return_ptr, unint64_t, unint64_t, uint64_t, Class))v63 + 4))(&v136, 0xD000000000000016, 0x80000001C07535A0, isa, v63);
      v64 = v137;
      v65 = v138;
      sub_1C06A0A38(v137, v138);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0690F90(v64, v65);
      if (v65 >> 60 == 15)
      {
        if (qword_1EF61A378 != -1)
          swift_once();
        v66 = sub_1C0747720();
        __swift_project_value_buffer(v66, (uint64_t)qword_1EF61D340);
        v67 = sub_1C0747708();
        v68 = sub_1C0747D74();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = (uint8_t *)swift_slowAlloc();
          v70 = swift_slowAlloc();
          *(_QWORD *)&v136 = v70;
          *(_DWORD *)v69 = 136315138;
          v135 = sub_1C069092C(0xD000000000000057, 0x80000001C07544F0, (uint64_t *)&v136);
          sub_1C0747E40();
          _os_log_impl(&dword_1C0671000, v67, v68, "%s bundle image failed for safari icon", v69, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v70, -1, -1);
          MEMORY[0x1C3BA0D04](v69, -1, -1);
        }

        v71 = v130;
        if (qword_1EF61A400 != -1)
          swift_once();
        v71(qword_1EF629DE8, 1);
        sub_1C0747030();
        goto LABEL_40;
      }
      if (qword_1EF61A378 != -1)
        swift_once();
      v117 = v21;
      v72 = sub_1C0747720();
      __swift_project_value_buffer(v72, (uint64_t)qword_1EF61D340);
      v73 = sub_1C0747708();
      v74 = sub_1C0747D80();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        v114 = a1;
        v77 = v76;
        *(_QWORD *)&v136 = v76;
        *(_DWORD *)v75 = 136315138;
        v135 = sub_1C069092C(0xD000000000000057, 0x80000001C07544F0, (uint64_t *)&v136);
        sub_1C0747E40();
        _os_log_impl(&dword_1C0671000, v73, v74, "%s safari icon as fallback", v75, 0xCu);
        swift_arrayDestroy();
        v78 = v114;
        MEMORY[0x1C3BA0D04](v77, -1, -1);
        MEMORY[0x1C3BA0D04](v75, -1, -1);
      }
      else
      {
        v78 = a1;
      }

      v42 = v131;
      v86 = v129;
      v87 = (_QWORD *)v126;
      v88 = v125;
      v89 = v119;
      v90 = *(_QWORD *)(v131 + 16);
      v91 = *(_QWORD *)(v131 + 24);
      *(_QWORD *)(v131 + 16) = v64;
      *(_QWORD *)(v42 + 24) = v65;
      sub_1C0690F90(v90, v91);
      goto LABEL_50;
    }
    v34 = objc_msgSend(a1, sel_bundleID);
    if (!v34)
    {
      if (qword_1EF61A400 != -1)
        swift_once();
      v130(qword_1EF629DE8, 1);
      sub_1C0747030();
      goto LABEL_40;
    }
    v35 = v34;
    v117 = v21;
    v114 = a1;
    v116 = sub_1C0747930();
    v118 = v36;

    v37 = dispatch_group_create();
    dispatch_group_enter(v37);
    v38 = v128[4].isa;
    v113 = v128[3].isa;
    v112 = __swift_project_boxed_opaque_existential_1(v128, (uint64_t)v113);
    v39 = v33;
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = v132;
    v40[3] = v33;
    v41 = v131;
    v40[4] = v131;
    v40[5] = v37;
    v111 = (void (*)(uint64_t, unint64_t, void (*)(uint64_t *), _QWORD *, Class, Class))*((_QWORD *)v38 + 1);
    sub_1C0746F64();
    v115 = v39;
    v42 = v41;
    sub_1C0746F64();
    sub_1C0746F64();
    v43 = v37;
    v111(v116, v118, sub_1C06D0BBC, v40, v113, v38);
    sub_1C0747030();
    sub_1C0747780();
    if (qword_1ED4FF7E8 != -1)
      swift_once();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED4FF7D0);
    v44 = objc_msgSend((id)objc_opt_self(), sel_seconds);
    v45 = v121;
    sub_1C07470CC();

    sub_1C07470C0();
    v47 = v46;
    v123[1](v45, v7);
    v48 = v127;
    MEMORY[0x1C3B9F9FC](v11, v47);
    v49 = *(void (***)(char *, uint64_t))(v122 + 8);
    v50 = v124;
    ((void (*)(char *, uint64_t))v49)(v11, v124);
    sub_1C0747D8C();
    v51 = v43;
    if ((sub_1C0747750() & 1) != 0)
    {
      v123 = v49;
      swift_beginAccess();
      v33 = v115;
      if (!*(_QWORD *)(v115 + 24))
      {
        if (qword_1EF61A378 != -1)
          swift_once();
        v96 = sub_1C0747720();
        __swift_project_value_buffer(v96, (uint64_t)qword_1EF61D340);
        v97 = v118;
        sub_1C0746EF8();
        v57 = sub_1C0747708();
        v98 = sub_1C0747D74();
        if (!os_log_type_enabled(v57, v98))
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_62;
        }
        v59 = swift_slowAlloc();
        v99 = swift_slowAlloc();
        *(_QWORD *)&v136 = v99;
        *(_DWORD *)v59 = 136315394;
        v128 = v51;
        v134 = sub_1C069092C(0xD000000000000057, 0x80000001C07544F0, (uint64_t *)&v136);
        sub_1C0747E40();
        *(_WORD *)(v59 + 12) = 2080;
        sub_1C0746EF8();
        v134 = sub_1C069092C(v116, v97, (uint64_t *)&v136);
        v51 = v128;
        sub_1C0747E40();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0671000, v57, v98, "%s %s lookup failed ", (uint8_t *)v59, 0x16u);
        swift_arrayDestroy();
        v61 = v99;
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (*(_QWORD *)(v132 + 24) || (swift_beginAccess(), *(_QWORD *)(v42 + 24) >> 60 != 15))
      {
        ((void (*)(char *, uint64_t))v123)(v127, v50);

        v86 = v129;
        v87 = (_QWORD *)v126;
      }
      else
      {
        v52 = (uint64_t)v128[3].isa;
        v53 = v128[4].isa;
        __swift_project_boxed_opaque_existential_1(v128, v52);
        LOBYTE(v136) = 7;
        v54 = (*((uint64_t (**)(__int128 *, uint64_t, Class))v53 + 2))(&v136, v52, v53);
        if (v55 >> 60 == 15)
        {
          if (qword_1EF61A378 != -1)
            swift_once();
          v56 = sub_1C0747720();
          __swift_project_value_buffer(v56, (uint64_t)qword_1EF61D340);
          v57 = sub_1C0747708();
          v58 = sub_1C0747D74();
          if (!os_log_type_enabled(v57, v58))
            goto LABEL_60;
          v59 = swift_slowAlloc();
          v60 = swift_slowAlloc();
          *(_QWORD *)&v136 = v60;
          *(_DWORD *)v59 = 136315138;
          v133 = sub_1C069092C(0xD000000000000057, 0x80000001C07544F0, (uint64_t *)&v136);
          sub_1C0747E40();
          _os_log_impl(&dword_1C0671000, v57, v58, "%s image failed for screentime icon", (uint8_t *)v59, 0xCu);
          swift_arrayDestroy();
          v61 = v60;
LABEL_59:
          MEMORY[0x1C3BA0D04](v61, -1, -1);
          MEMORY[0x1C3BA0D04](v59, -1, -1);
LABEL_60:

LABEL_62:
          v100 = v130;
          if (qword_1EF61A400 != -1)
            swift_once();
          v100(qword_1EF629DE8, 1);

          ((void (*)(char *, uint64_t))v123)(v127, v50);
          sub_1C0747030();
LABEL_40:
          sub_1C0747030();
          return sub_1C0747030();
        }
        v101 = v54;
        v102 = v55;
        v128 = v51;
        if (qword_1EF61A378 != -1)
          swift_once();
        v103 = sub_1C0747720();
        __swift_project_value_buffer(v103, (uint64_t)qword_1EF61D340);
        v104 = sub_1C0747708();
        v105 = sub_1C0747D80();
        if (os_log_type_enabled(v104, v105))
        {
          v106 = (uint8_t *)swift_slowAlloc();
          v107 = swift_slowAlloc();
          *(_QWORD *)&v136 = v107;
          *(_DWORD *)v106 = 136315138;
          v133 = sub_1C069092C(0xD000000000000057, 0x80000001C07544F0, (uint64_t *)&v136);
          v42 = v131;
          sub_1C0747E40();
          _os_log_impl(&dword_1C0671000, v104, v105, "%s screentime icon as fallback", v106, 0xCu);
          swift_arrayDestroy();
          v33 = v115;
          MEMORY[0x1C3BA0D04](v107, -1, -1);
          MEMORY[0x1C3BA0D04](v106, -1, -1);
        }

        ((void (*)(char *, uint64_t))v123)(v127, v50);
        v86 = v129;
        v87 = (_QWORD *)v126;
        v108 = *(_QWORD *)(v42 + 16);
        v109 = *(_QWORD *)(v42 + 24);
        *(_QWORD *)(v42 + 16) = v101;
        *(_QWORD *)(v42 + 24) = v102;
        sub_1C0690F90(v108, v109);
      }
      v78 = v114;
      v88 = v125;
      v89 = v119;
LABEL_50:
      v92 = v120 == 0;
      sub_1C0685C78(v88, (uint64_t)&v136);
      v93 = (_QWORD *)swift_allocObject();
      v93[2] = v130;
      v93[3] = v86;
      v93[4] = v78;
      v93[5] = v33;
      v93[6] = v132;
      v93[7] = v42;
      sub_1C0685BC4(&v136, (uint64_t)(v93 + 8));
      sub_1C0746F64();
      sub_1C0746F64();
      sub_1C0746F64();
      sub_1C0746F64();
      v94 = v78;
      sub_1C0730E84(v117, v89, v92, v87, (uint64_t)sub_1C06D0B6C, (uint64_t)v93);
      sub_1C0747030();
      sub_1C0747030();
      sub_1C0747030();
      return sub_1C0747030();
    }
    if (qword_1EF61A378 != -1)
      swift_once();
    v80 = sub_1C0747720();
    __swift_project_value_buffer(v80, (uint64_t)qword_1EF61D340);
    v81 = v118;
    sub_1C0746EF8();
    v82 = sub_1C0747708();
    v83 = sub_1C0747D74();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = swift_slowAlloc();
      v126 = swift_slowAlloc();
      *(_QWORD *)&v136 = v126;
      *(_DWORD *)v84 = 136315394;
      v128 = v43;
      v135 = sub_1C069092C(0xD000000000000057, 0x80000001C07544F0, (uint64_t *)&v136);
      sub_1C0747E40();
      *(_WORD *)(v84 + 12) = 2080;
      sub_1C0746EF8();
      v135 = sub_1C069092C(v116, v81, (uint64_t *)&v136);
      v51 = v128;
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v82, v83, "%s %s lookup timeout", (uint8_t *)v84, 0x16u);
      v85 = v126;
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v85, -1, -1);
      MEMORY[0x1C3BA0D04](v84, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v95 = v130;
    if (qword_1EF61A408 != -1)
      swift_once();
    v95(qword_1EF629DF0, 1);

    ((void (*)(char *, uint64_t))v49)(v48, v50);
    sub_1C0747030();
    sub_1C0747030();
  }
  return sub_1C0747030();
}

void sub_1C06D0760(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v8 = a1[1];
  v15 = *a1;
  v10 = a1[2];
  v9 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v9;
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = v15;
  *(_QWORD *)(a3 + 24) = v8;
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = *(_QWORD *)(a4 + 16);
  v14 = *(_QWORD *)(a4 + 24);
  *(_QWORD *)(a4 + 16) = v11;
  *(_QWORD *)(a4 + 24) = v12;
  sub_1C06A0A38(v11, v12);
  sub_1C0690F90(v13, v14);
  dispatch_group_leave(a5);
}

void sub_1C06D0864(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;

  v36 = a4;
  v15 = type metadata accessor for ResolvedFamily();
  MEMORY[0x1E0C80A78](v15);
  v17 = (void **)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CE10);
  MEMORY[0x1E0C80A78](v18);
  v20 = (id *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C06D0BF4(a1, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = *v20;
    v22 = *v20;
    a2((uint64_t)v21, 1);

  }
  else
  {
    v35 = a8;
    sub_1C06C0FF0((uint64_t)v20, (uint64_t)v17);
    swift_beginAccess();
    v23 = *(_QWORD *)(a5 + 16);
    v24 = *(_QWORD *)(a5 + 24);
    v34 = v23;
    swift_beginAccess();
    v25 = *(_QWORD *)(a6 + 16);
    v26 = *(_QWORD *)(a6 + 24);
    v33 = v25;
    swift_beginAccess();
    v27 = *(_QWORD *)(a7 + 16);
    v28 = *(_QWORD *)(a7 + 24);
    v30 = *v17;
    v29 = v17[1];
    v31 = (uint64_t)v17[2];
    sub_1C0746EF8();
    sub_1C0746EF8();
    sub_1C06A0A38(v27, v28);
    sub_1C06B0DD4(v36, v34, v24, v33, v26, v27, v28, v30, v29, v31, v35, a2, a3);
    sub_1C0690F90(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C06D0C3C((uint64_t)v17);
  }
}

uint64_t PeopleBiomeEventIndexer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PeopleBiomeEventIndexer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06D0A84()
{
  uint64_t v0;

  sub_1C0747030();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

void sub_1C06D0AB8(uint64_t a1)
{
  uint64_t v1;

  sub_1C06CF38C(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), (_QWORD *)(v1 + 40));
}

uint64_t sub_1C06D0AC8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06D0AEC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_1C0690FA4(*(_QWORD *)(v0 + 16), v1);
  return swift_deallocObject();
}

uint64_t sub_1C06D0B20()
{
  uint64_t v0;

  sub_1C0747030();

  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return swift_deallocObject();
}

void sub_1C06D0B6C(uint64_t a1)
{
  uint64_t v1;

  sub_1C06D0864(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), (_QWORD *)(v1 + 64));
}

uint64_t sub_1C06D0B80()
{
  uint64_t v0;

  sub_1C0747030();
  sub_1C0747030();
  sub_1C0747030();

  return swift_deallocObject();
}

void sub_1C06D0BBC(uint64_t *a1)
{
  uint64_t v1;

  sub_1C06D0760(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t type metadata accessor for PeopleBiomeEventIndexer()
{
  return objc_opt_self();
}

uint64_t method lookup function for PeopleBiomeEventIndexer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1C06D0BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CE10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06D0C3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ResolvedFamily();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

People::HandleType_optional __swiftcall HandleType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  People::HandleType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C07481AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t HandleType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C69616D65;
  else
    return 0x6D754E656E6F6870;
}

uint64_t sub_1C06D0D18(char *a1, char *a2)
{
  return sub_1C06BA5FC(*a1, *a2);
}

uint64_t sub_1C06D0D24()
{
  return sub_1C06759F0();
}

uint64_t sub_1C06D0D2C()
{
  return sub_1C067630C();
}

uint64_t sub_1C06D0D34()
{
  return sub_1C0676D88();
}

People::HandleType_optional sub_1C06D0D3C(Swift::String *a1)
{
  return HandleType.init(rawValue:)(*a1);
}

uint64_t sub_1C06D0D48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HandleType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C06D0D6C()
{
  sub_1C06D1B00();
  return sub_1C0747AE0();
}

uint64_t sub_1C06D0DC8()
{
  sub_1C06D1B00();
  return sub_1C0747AC8();
}

id Person.contact.getter()
{
  id *v0;

  return *v0;
}

void Person.contact.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*Person.contact.modify())()
{
  return nullsub_1;
}

uint64_t Person.statuses.getter()
{
  return sub_1C0746EF8();
}

uint64_t Person.statuses.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Person.statuses.modify())()
{
  return nullsub_1;
}

uint64_t Person.displayName.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 8))(*v0, v1, v2);
}

uint64_t Person.contactSearchURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[40];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  unsigned __int8 v28[40];

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v3 + 32;
    sub_1C0746EF8();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1C0685C78(v5, (uint64_t)v28);
      sub_1C0685C78((uint64_t)v28, (uint64_t)v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CE18);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v7 = *((_QWORD *)&v26 + 1);
        v8 = v27;
        __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
        v11 = v10;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1C06B3530(0, v6[2] + 1, 1, v6);
        v13 = v6[2];
        v12 = v6[3];
        if (v13 >= v12 >> 1)
          v6 = sub_1C06B3530((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
        v6[2] = v13 + 1;
        v14 = &v6[2 * v13];
        v14[4] = v9;
        v14[5] = v11;
      }
      else
      {
        v27 = 0;
        v25 = 0u;
        v26 = 0u;
        sub_1C068A9AC((uint64_t)&v25, &qword_1EF61CE20);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
      }
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v1 = v22;
    a1 = v23;
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = sub_1C06D1138((uint64_t)v6);
  swift_bridgeObjectRelease();
  v28[0] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C580);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C074C980;
  v17 = objc_msgSend(*(id *)v1, sel_identifier);
  v18 = sub_1C0747930();
  v20 = v19;

  *(_QWORD *)(v16 + 32) = 1;
  *(_QWORD *)(v16 + 40) = v18;
  *(_QWORD *)(v16 + 48) = v20;
  *(_BYTE *)(v16 + 56) = 0;
  *(_QWORD *)(v16 + 72) = 0;
  *(_QWORD *)(v16 + 80) = 0;
  *(_QWORD *)(v16 + 64) = v15;
  *(_BYTE *)(v16 + 88) = 1;
  LOBYTE(v25) = 0;
  return URL.init(action:params:scheme:)(v28, (char *)&v25, a1);
}

uint64_t sub_1C06D1138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    sub_1C0746EF8();
    v3 = 0;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v6 = (uint64_t *)(v2 + 16 * v3);
      v8 = *v6;
      v7 = v6[1];
      v9 = v4[2];
      if (!v9)
        goto LABEL_12;
      v10 = v4[4] == v8 && v4[5] == v7;
      if (!v10 && (sub_1C0748284() & 1) == 0)
      {
        if (v9 == 1)
          goto LABEL_12;
        v13 = v4[6] == v8 && v4[7] == v7;
        if (!v13 && (sub_1C0748284() & 1) == 0)
        {
          if (v9 == 2)
            goto LABEL_12;
          if (v4[8] != v8 || v4[9] != v7)
          {
            result = sub_1C0748284();
            if ((result & 1) == 0)
              break;
          }
        }
      }
LABEL_4:
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
    }
    if (v9 != 3)
    {
      v15 = v4 + 11;
      v16 = 3;
      while (1)
      {
        v17 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        if (*(v15 - 1) == v8 && *v15 == v7)
          goto LABEL_4;
        result = sub_1C0748284();
        if ((result & 1) != 0)
          goto LABEL_4;
        v15 += 2;
        ++v16;
        if (v17 == v9)
          goto LABEL_12;
      }
      __break(1u);
      return result;
    }
LABEL_12:
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1C06B3530(0, v9 + 1, 1, v4);
    v12 = v4[2];
    v11 = v4[3];
    if (v12 >= v11 >> 1)
      v4 = sub_1C06B3530((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
    v4[2] = v12 + 1;
    v5 = &v4[2 * v12];
    v5[4] = v8;
    v5[5] = v7;
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C06D131C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v6;
  unsigned __int8 v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  __swift_allocate_value_buffer(v0, qword_1ED4FF790);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4FF790);
  v7 = 1;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1C06F5A30(MEMORY[0x1E0DEE9D8]);
  v4 = sub_1C06F5B4C(v2);
  v6 = 0;
  return URL.init(action:params:arrayParams:scheme:)(&v7, v3, v4, &v6, v1);
}

uint64_t static Person.emptyContactSearchURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED4FF7B0 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED4FF790);
  swift_beginAccess();
  return sub_1C06B9010(v3, a1);
}

uint64_t static Person.emptyContactSearchURL.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED4FF7B0 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED4FF790);
  swift_beginAccess();
  sub_1C06D17A0(a1, v3);
  swift_endAccess();
  return sub_1C068A9AC(a1, &qword_1ED4FF788);
}

uint64_t (*static Person.emptyContactSearchURL.modify())()
{
  uint64_t v0;

  if (qword_1ED4FF7B0 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED4FF790);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Person.init(from:statuses:contactFormatter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1C0685BC4(a3, (uint64_t)(a4 + 2));
}

Swift::String_optional __swiftcall Person.preferredHandle(ofType:)(People::HandleType ofType)
{
  id *v1;
  char v2;
  id v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  if ((*(_BYTE *)ofType & 1) != 0)
  {
    v2 = sub_1C0748284();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      v3 = objc_msgSend(*v1, sel_emailAddressStrings);
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v3 = objc_msgSend(*v1, sel_phoneNumberStrings);
LABEL_6:
  v4 = v3;
  v5 = (_QWORD *)sub_1C0747B1C();

  if (v5[2])
  {
    v6 = v5[4];
    v7 = (void *)v5[5];
    sub_1C0746EF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = 0;
    v7 = 0;
  }
  v8 = v6;
  v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

unint64_t Person.description.getter()
{
  id *v0;
  id *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  v2 = *v0;
  v3 = objc_msgSend(v2, sel_description);
  sub_1C0747930();

  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  v4 = v1[1];
  sub_1C0746EF8();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
  MEMORY[0x1C3B9FD8C](v4, v5);
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  return 0xD000000000000015;
}

uint64_t sub_1C06D17A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C06D17EC()
{
  unint64_t result;

  result = qword_1EF61CE28;
  if (!qword_1EF61CE28)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for HandleType, &type metadata for HandleType);
    atomic_store(result, (unint64_t *)&qword_1EF61CE28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HandleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C06D187C + 4 * byte_1C074E1CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C06D18B0 + 4 * byte_1C074E1C8[v4]))();
}

uint64_t sub_1C06D18B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06D18B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06D18C0);
  return result;
}

uint64_t sub_1C06D18CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06D18D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C06D18D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06D18E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HandleType()
{
  return &type metadata for HandleType;
}

uint64_t destroy for Person(id *a1)
{

  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 2));
}

uint64_t initializeWithCopy for Person(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a1 + 16;
  v6 = a2 + 16;
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v3;
  sub_1C0746EF8();
  v9(v5, v6, v8);
  return a1;
}

uint64_t assignWithCopy for Person(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for Person(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for Person(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Person(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Person()
{
  return &type metadata for Person;
}

unint64_t sub_1C06D1B00()
{
  unint64_t result;

  result = qword_1EF61CE30;
  if (!qword_1EF61CE30)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for HandleType, &type metadata for HandleType);
    atomic_store(result, (unint64_t *)&qword_1EF61CE30);
  }
  return result;
}

unint64_t static SimpleContactFilter.phraseMatching(for:with:)(unint64_t a1)
{
  Swift::String_optional v2;
  unint64_t v3;

  v2 = String.trimToNil()();
  if (v2.value._object)
  {
    v3 = sub_1C0746EF8();
    a1 = sub_1C06D7F48(v3, v2.value._countAndFlagsBits, (unint64_t)v2.value._object);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0746EF8();
  }
  return a1;
}

uint64_t sub_1C06D1BC0(id *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t *v93;
  void (*v94)(char *, uint64_t);
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;

  v102 = sub_1C07470FC();
  v97 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = *a1;
  v8 = *(_QWORD *)(String.splitWith(_:)(32, 0xE100000000000000, a2, a3) + 16);
  if (v8)
  {
    v96 = sub_1C0746EF8();
    v9 = (uint64_t *)(v96 + 40);
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v11 = *v9;
      v100 = *(v9 - 1);
      v101 = v11;
      sub_1C0746EF8();
      sub_1C07470F0();
      sub_1C068F2D0();
      v12 = sub_1C0747E64();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v7, v102);
      if ((v14 & 0x2000000000000000) != 0)
        v15 = HIBYTE(v14) & 0xF;
      else
        v15 = v12 & 0xFFFFFFFFFFFFLL;
      swift_bridgeObjectRelease();
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1C06B3530(0, v10[2] + 1, 1, v10);
        v17 = v10[2];
        v16 = v10[3];
        if (v17 >= v16 >> 1)
          v10 = sub_1C06B3530((_QWORD *)(v16 > 1), v17 + 1, 1, v10);
        v10[2] = v17 + 1;
        v18 = &v10[2 * v17];
        v18[4] = v12;
        v18[5] = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v9 += 2;
      --v8;
    }
    while (v8);
    result = swift_bridgeObjectRelease_n();
    v20 = v10[2];
    if (v20)
      goto LABEL_15;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v20 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v20)
    {
LABEL_15:
      v21 = 0;
      v22 = v10 + 5;
      v23 = v20 - 1;
      v24 = 1;
      v25 = MEMORY[0x1E0DEA968];
      v89 = v10;
      v90 = v20 - 1;
      v91 = v7;
      while (1)
      {
        if ((v24 & 1) != 0)
        {
          v26 = v7;
          v28 = *(v22 - 1);
          v27 = *v22;
          v93 = v22;
          sub_1C0746EF8();
          v29 = objc_msgSend(v95, sel_givenName);
          v30 = sub_1C0747930();
          v32 = v31;

          v100 = v30;
          v101 = v32;
          sub_1C0746EF8();
          sub_1C07470F0();
          sub_1C068F2D0();
          v33 = sub_1C0747E64();
          v35 = v34;
          v94 = *(void (**)(char *, uint64_t))(v97 + 8);
          v94(v26, v102);
          v36 = v25;
          if ((v35 & 0x2000000000000000) != 0)
            v37 = HIBYTE(v35) & 0xF;
          else
            v37 = v33 & 0xFFFFFFFFFFFFLL;
          swift_bridgeObjectRelease();
          v96 = v27;
          v92 = v28;
          if (!v37)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v25 = v36;
LABEL_27:
            v39 = objc_msgSend(v95, sel_middleName);
            v40 = sub_1C0747930();
            v42 = v41;

            v100 = v40;
            v101 = v42;
            sub_1C0746EF8();
            v7 = v91;
            sub_1C07470F0();
            v43 = sub_1C0747E64();
            v45 = v44;
            v94(v7, v102);
            v46 = v25;
            if ((v45 & 0x2000000000000000) != 0)
              v47 = HIBYTE(v45) & 0xF;
            else
              v47 = v43 & 0xFFFFFFFFFFFFLL;
            swift_bridgeObjectRelease();
            if (v47)
            {
              v100 = v43;
              v101 = v45;
              v48 = v92;
              v98 = v92;
              v99 = v96;
              v49 = sub_1C0747E94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v46;
              if ((v49 & 1) != 0)
                goto LABEL_53;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v46;
              v48 = v92;
            }
            v50 = objc_msgSend(v95, sel_familyName);
            v51 = sub_1C0747930();
            v53 = v52;

            v100 = v51;
            v101 = v53;
            sub_1C0746EF8();
            sub_1C07470F0();
            v54 = sub_1C0747E64();
            v56 = v55;
            v94(v7, v102);
            v57 = v25;
            if ((v56 & 0x2000000000000000) != 0)
              v58 = HIBYTE(v56) & 0xF;
            else
              v58 = v54 & 0xFFFFFFFFFFFFLL;
            swift_bridgeObjectRelease();
            if (v58)
            {
              v100 = v54;
              v101 = v56;
              v98 = v48;
              v99 = v96;
              v59 = sub_1C0747E94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v57;
              if ((v59 & 1) != 0)
                goto LABEL_53;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v57;
            }
            v60 = objc_msgSend(v95, sel_phoneticGivenName);
            v61 = sub_1C0747930();
            v63 = v62;

            v100 = v61;
            v101 = v63;
            sub_1C0746EF8();
            sub_1C07470F0();
            v64 = sub_1C0747E64();
            v66 = v65;
            v94(v7, v102);
            v67 = v25;
            if ((v66 & 0x2000000000000000) != 0)
              v68 = HIBYTE(v66) & 0xF;
            else
              v68 = v64 & 0xFFFFFFFFFFFFLL;
            swift_bridgeObjectRelease();
            if (v68)
            {
              v100 = v64;
              v101 = v66;
              v98 = v48;
              v99 = v96;
              v69 = sub_1C0747E94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v67;
              if ((v69 & 1) != 0)
              {
LABEL_53:
                result = swift_bridgeObjectRelease();
                v24 = 1;
                v10 = v89;
                v23 = v90;
                goto LABEL_61;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v67;
            }
            v70 = objc_msgSend(v95, sel_phoneticMiddleName);
            v71 = sub_1C0747930();
            v73 = v72;

            v100 = v71;
            v101 = v73;
            sub_1C0746EF8();
            sub_1C07470F0();
            v74 = sub_1C0747E64();
            v76 = v75;
            v94(v7, v102);
            v77 = v25;
            if ((v76 & 0x2000000000000000) != 0)
              v78 = HIBYTE(v76) & 0xF;
            else
              v78 = v74 & 0xFFFFFFFFFFFFLL;
            swift_bridgeObjectRelease();
            if (v78)
            {
              v100 = v74;
              v101 = v76;
              v98 = v48;
              v99 = v96;
              v79 = sub_1C0747E94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v77;
              if ((v79 & 1) != 0)
                goto LABEL_53;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v77;
            }
            v80 = objc_msgSend(v95, sel_phoneticFamilyName);
            v81 = sub_1C0747930();
            v83 = v82;

            v100 = v81;
            v101 = v83;
            sub_1C0746EF8();
            sub_1C07470F0();
            v84 = sub_1C0747E64();
            v86 = v85;
            v94(v7, v102);
            v87 = HIBYTE(v86) & 0xF;
            if ((v86 & 0x2000000000000000) == 0)
              v87 = v84 & 0xFFFFFFFFFFFFLL;
            v10 = v89;
            if (v87)
            {
              swift_bridgeObjectRelease();
              v100 = v84;
              v101 = v86;
              v98 = v48;
              v99 = v96;
              v24 = sub_1C0747E94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              result = swift_bridgeObjectRelease();
              v24 = 0;
            }
            v23 = v90;
LABEL_61:
            v22 = v93;
            if (v23 == v21)
              goto LABEL_65;
            goto LABEL_17;
          }
          v100 = v33;
          v101 = v35;
          v98 = v28;
          v99 = v27;
          v38 = sub_1C0747E94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v25 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_27;
          result = swift_bridgeObjectRelease();
          v24 = 1;
          v10 = v89;
          v23 = v90;
          v7 = v91;
          v22 = v93;
          if (v90 == v21)
            goto LABEL_65;
        }
        else
        {
          v24 = 0;
          if (v23 == v21)
            goto LABEL_65;
        }
LABEL_17:
        ++v21;
        v22 += 2;
        if (v21 >= v10[2])
        {
          __break(1u);
          return result;
        }
      }
    }
  }
  v24 = 1;
LABEL_65:
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t CNContact.people_normalizedHandles.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = CNContact.people_normalizedEmails.getter();
  v1 = CNContact.people_normalizedPhoneNumbers.getter();
  sub_1C068CDD4(v1);
  return v0;
}

uint64_t CNContact.people_normalizedEmails.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = objc_msgSend(v0, sel_emailAddressStrings);
  v2 = sub_1C0747B1C();

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF6B8(0, v3, 0);
    v4 = v13;
    v5 = v2 + 40;
    do
    {
      v6 = sub_1C0747978();
      v8 = v7;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_1C06BF6B8(v9 > 1, v10 + 1, 1);
      v5 += 16;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t CNContact.people_normalizedPhoneNumbers.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v1 = objc_msgSend(v0, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF61CE40);
  v2 = sub_1C0747B1C();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1C0746EF8();
    if (v3)
      goto LABEL_3;
LABEL_17:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  sub_1C0746EF8();
  result = sub_1C074814C();
  v3 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1C3BA029C](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_value);
      v10 = objc_msgSend(v9, sel_fullyQualifiedDigits);

      if (v10)
      {
        v11 = sub_1C0747930();
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1C06B3530(0, v6[2] + 1, 1, v6);
        v15 = v6[2];
        v14 = v6[3];
        if (v15 >= v14 >> 1)
          v6 = sub_1C06B3530((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
        v6[2] = v15 + 1;
        v16 = &v6[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {

      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t CNContact.people_emails.getter()
{
  return sub_1C06D2740((SEL *)&selRef_emailAddressStrings);
}

uint64_t CNContact.people_phoneNumbers.getter()
{
  return sub_1C06D2740((SEL *)&selRef_phoneNumberStrings);
}

uint64_t sub_1C06D2740(SEL *a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(v1, *a1);
  v3 = sub_1C0747B1C();

  return v3;
}

uint64_t CNContact.callHistoryHandles.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_emailAddressStrings);
  v3 = sub_1C0747B1C();

  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1C07480B0();
    v6 = v3 + 40;
    do
    {
      v7 = objc_allocWithZone(MEMORY[0x1E0D0CE60]);
      sub_1C0746EF8();
      v8 = (void *)sub_1C074790C();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_initWithType_value_, 3, v8);

      sub_1C074808C();
      sub_1C07480BC();
      sub_1C07480C8();
      sub_1C0748098();
      v6 += 16;
      --v4;
    }
    while (v4);
    v9 = v24;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v10 = objc_msgSend(v1, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF61CE40);
  v11 = sub_1C0747B1C();

  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_8;
LABEL_18:
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    sub_1C068D460(v22);
    return v9;
  }
  sub_1C0746EF8();
  v12 = sub_1C074814C();
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_18;
LABEL_8:
  result = sub_1C07480B0();
  if ((v12 & 0x8000000000000000) == 0)
  {
    v23 = v9;
    v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x1C3BA029C](v14, v11);
      else
        v17 = *(id *)(v11 + 8 * v14 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_value, v23);
      v20 = objc_msgSend(v19, sel_fullyQualifiedDigits);

      if (!v20)
      {
        v21 = objc_msgSend(v18, sel_value);
        v20 = objc_msgSend(v21, sel_stringValue);

      }
      sub_1C0747930();

      ++v14;
      v15 = objc_allocWithZone(MEMORY[0x1E0D0CE60]);
      v16 = (void *)sub_1C074790C();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_initWithType_value_, 2, v16);

      sub_1C074808C();
      sub_1C07480BC();
      sub_1C07480C8();
      sub_1C0748098();
    }
    while (v12 != v14);
    v22 = v5;
    swift_bridgeObjectRelease();
    v9 = v23;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06D2AE0(uint64_t a1)
{
  return sub_1C06D2B00(a1);
}

uint64_t sub_1C06D2B00(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE20);
  v3 = (void *)sub_1C0747B04();
  v9[0] = 0;
  v4 = objc_msgSend(v1, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, a1, v3, v9);

  v5 = v9[0];
  if (v4)
  {
    sub_1C069DDE4(0, (unint64_t *)&qword_1ED4FFE30);
    a1 = sub_1C0747B1C();
    v6 = v5;

  }
  else
  {
    v7 = v9[0];
    sub_1C0747204();

    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1C06D2C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C06D2C30(a1, a2, a3);
}

uint64_t sub_1C06D2C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  uint64_t isEscapingClosureAtFileLocation;
  id v10;
  uint64_t result;
  id v12;
  char v13;
  id v14;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x1E0C80C00];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  aBlock[4] = sub_1C06D8798;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C06D2DE0;
  aBlock[3] = &block_descriptor_6;
  v8 = _Block_copy(aBlock);
  v14 = 0;
  sub_1C0746F64();
  LODWORD(a2) = objc_msgSend(v3, sel_enumerateContactsWithFetchRequest_error_usingBlock_, a1, &v14, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = (uint64_t)v14;
  if ((_DWORD)a2)
  {
    v10 = v14;
    sub_1C0747030();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = sub_1C0747030();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  v12 = (id)isEscapingClosureAtFileLocation;
  sub_1C0747204();

  swift_willThrow();
  sub_1C0747030();
  v13 = swift_isEscapingClosureAtFileLocation();
  result = sub_1C0747030();
  if ((v13 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1C06D2DE0(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id sub_1C06D2E24()
{
  return sub_1C06D2E44();
}

id sub_1C06D2E44()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v1 = objc_msgSend(v0, sel_meContactIdentifiers_, v7);
  v2 = v7[0];
  if (v1)
  {
    v3 = v1;
    v4 = (id)sub_1C0747B1C();
    v5 = v2;

  }
  else
  {
    v4 = v7[0];
    sub_1C0747204();

    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1C06D2F0C(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (void *)sub_1C0747C90();
  v4 = objc_msgSend(v1, sel_contactSuggestionsForPeopleWidgetWithMaxSuggestions_excludeContactsWithIdentifiers_, a1, v3);

  sub_1C069DDE4(0, &qword_1ED4FEFA0);
  v5 = sub_1C0747B1C();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1C0746EF8();
  v6 = sub_1C074814C();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_13;
LABEL_3:
  v20 = MEMORY[0x1E0DEE9D8];
  result = sub_1C06BF6B8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v9 = v20;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1C3BA029C](v8, v5);
      else
        v10 = *(id *)(v5 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_contact);
      v13 = objc_msgSend(v12, sel_identifier);

      v14 = sub_1C0747930();
      v16 = v15;

      v18 = *(_QWORD *)(v20 + 16);
      v17 = *(_QWORD *)(v20 + 24);
      if (v18 >= v17 >> 1)
        sub_1C06BF6B8(v17 > 1, v18 + 1, 1);
      ++v8;
      *(_QWORD *)(v20 + 16) = v18 + 1;
      v19 = v20 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06D3118(uint64_t a1)
{
  return sub_1C06D2F0C(a1);
}

id sub_1C06D3138()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074E320;
  v1 = (void *)*MEMORY[0x1E0C96700];
  v5 = (id)*MEMORY[0x1E0C96890];
  v2 = *MEMORY[0x1E0C96890];
  v6 = v0;
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C96700];
  *(_QWORD *)(v0 + 40) = v2;
  sub_1C0747B34();
  qword_1EF629D50 = v6;
  v3 = v1;
  return v5;
}

uint64_t sub_1C06D31B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t result;
  id v22;
  void *v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C074E330;
  v1 = (void *)*MEMORY[0x1E0C967A0];
  v2 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C967A0];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0C96780];
  v4 = (void *)*MEMORY[0x1E0C966C0];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0C96780];
  *(_QWORD *)(v0 + 56) = v4;
  v5 = (void *)*MEMORY[0x1E0C966A8];
  v6 = (void *)*MEMORY[0x1E0C967C0];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x1E0C966A8];
  *(_QWORD *)(v0 + 72) = v6;
  v7 = (void *)*MEMORY[0x1E0C967D0];
  v8 = (void *)*MEMORY[0x1E0C967D8];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x1E0C967D0];
  *(_QWORD *)(v0 + 88) = v8;
  v9 = (void *)*MEMORY[0x1E0C967E0];
  v23 = (void *)*MEMORY[0x1E0C96778];
  v10 = *MEMORY[0x1E0C96778];
  *(_QWORD *)(v0 + 96) = *MEMORY[0x1E0C967E0];
  *(_QWORD *)(v0 + 104) = v10;
  v22 = (id)objc_opt_self();
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v9;
  v20 = v23;
  *(_QWORD *)(v0 + 112) = objc_msgSend(v22, sel_descriptorForRequiredKeysForStyle_, 0);
  result = sub_1C0747B34();
  qword_1ED501790 = v0;
  return result;
}

uint64_t sub_1C06D3324()
{
  unint64_t v0;
  uint64_t result;
  id v2;
  id v3;

  v0 = sub_1C06D410C(1, 0);
  if (!(v0 >> 62))
  {
    result = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_1C074814C();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v0 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1C3BA029C](0, v0);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v0 + 32);
LABEL_6:
    v3 = v2;
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06D33C4()
{
  return sub_1C06D410C(10, 0);
}

uint64_t sub_1C06D33D0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  if (qword_1ED4FFD40 != -1)
    swift_once();
  v18 = qword_1ED501790;
  if ((a3 & 1) != 0)
  {
    v8 = qword_1EF61A338;
    sub_1C0746EF8();
    if (v8 != -1)
      swift_once();
    v9 = sub_1C0746EF8();
    sub_1C068D618(v9);
  }
  else
  {
    sub_1C0746EF8();
  }
  v10 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C074B820;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  sub_1C0746EF8();
  v12 = (void *)sub_1C0747B04();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v10, sel_predicateForContactsWithIdentifiers_, v12);

  v14 = (void *)MEMORY[0x1C3BA06EC]();
  sub_1C06D354C(v4, (uint64_t)v13, &v18, &v17);
  objc_autoreleasePoolPop(v14);

  v15 = v17;
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1C06D354C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v8 = a1[5];
  v9 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v8);
  v10 = *a3;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
  sub_1C0746EF8();
  v12 = v11(a2, v10, v8, v9);
  if (v4)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED4FEA10 != -1)
      swift_once();
    v13 = sub_1C0747720();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED4FE9F0);
    v14 = v4;
    v15 = v4;
    v16 = sub_1C0747708();
    v17 = sub_1C0747D74();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v25 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_getErrorValue();
      v20 = sub_1C07482FC();
      sub_1C069092C(v20, v21, &v25);
      sub_1C0747E40();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0671000, v16, v17, "error: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v19, -1, -1);
      MEMORY[0x1C3BA0D04](v18, -1, -1);

    }
    else
    {

    }
    v23 = 0;
    goto LABEL_15;
  }
  v22 = v12;
  swift_bridgeObjectRelease();
  if (v22 >> 62)
  {
    sub_1C0746EF8();
    v23 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v23)
      goto LABEL_12;
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v23)
    {
LABEL_12:
      swift_bridgeObjectRelease();
LABEL_15:
      *a4 = v23;
      return;
    }
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    v24 = (id)MEMORY[0x1C3BA029C](0, v22);
    goto LABEL_11;
  }
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v24 = *(id *)(v22 + 32);
LABEL_11:
    v23 = (uint64_t)v24;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1C06D3820(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;

  v3 = v2;
  if (qword_1ED4FFD40 != -1)
    swift_once();
  v6 = qword_1ED501790;
  v17 = qword_1ED501790;
  if ((a2 & 1) != 0)
  {
    v7 = qword_1EF61A338;
    sub_1C0746EF8();
    if (v7 != -1)
      swift_once();
    v8 = sub_1C0746EF8();
    v9 = sub_1C068D618(v8);
    v6 = v17;
  }
  else
  {
    v9 = sub_1C0746EF8();
  }
  v10 = (void *)MEMORY[0x1C3BA06EC](v9);
  v11 = v3 + 2;
  v13 = v3[5];
  v12 = v3[6];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
  sub_1C0746EF8();
  v15 = v14(a1, v6, v13, v12);
  swift_bridgeObjectRelease();
  objc_autoreleasePoolPop(v10);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C06D395C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = v2;
  return swift_task_switch();
}

uint64_t sub_1C06D3978()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D190);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CE70);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_1C06D3A38;
  return sub_1C07481B8();
}

uint64_t sub_1C06D3A38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06D3A94()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C06D3AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 81) = a5;
  *(_QWORD *)(v5 + 112) = a3;
  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 104) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06D3B14()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
  {
    sub_1C0746EF8();
    result = sub_1C074814C();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CEE0);
    *v22 = v0;
    v22[1] = sub_1C06D3DF4;
    return sub_1C0747C78();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1C0746EF8();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v26 = v2;
    v25 = *(_BYTE *)(v0 + 81);
    v24 = v1 & 0xC000000000000001;
    v23 = *(_QWORD *)(v0 + 112) + 32;
    while (1)
    {
      if (v24)
        v6 = (id)MEMORY[0x1C3BA029C](v4, *(_QWORD *)(v0 + 112));
      else
        v6 = *(id *)(v23 + 8 * v4);
      v7 = v6;
      v9 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 136);
      v10 = *(_QWORD *)(v0 + 120);
      v11 = sub_1C0747C60();
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 0;
      v14 = (_QWORD *)(v13 + 16);
      *(_QWORD *)(v13 + 24) = 0;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v7;
      *(_BYTE *)(v13 + 48) = v25;
      sub_1C06D88A0(v8, v9);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
      sub_1C0746F64();
      v15 = v7;
      v16 = *(_QWORD *)(v0 + 128);
      if ((_DWORD)v8 == 1)
      {
        sub_1C069FABC(*(_QWORD *)(v0 + 128));
        if (!*v14)
          goto LABEL_13;
      }
      else
      {
        sub_1C0747C54();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
        if (!*v14)
        {
LABEL_13:
          v17 = 0;
          v19 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v17 = sub_1C0747C00();
      v19 = v18;
      swift_unknownObjectRelease();
LABEL_14:
      v20 = **(_QWORD **)(v0 + 104);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D190);
      v21 = v19 | v17;
      if (v19 | v17)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v17;
        *(_QWORD *)(v0 + 40) = v19;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v20;
      swift_task_create();

      sub_1C0747030();
      sub_1C069FABC(v5);
      if (v26 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06D3DF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
  }
  else
  {
    *(_QWORD *)(v2 + 152) = *(_QWORD *)(v2 + 72);
    *(_BYTE *)(v2 + 82) = *(_BYTE *)(v2 + 80);
  }
  return swift_task_switch();
}

uint64_t sub_1C06D3E68()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(unsigned __int8 *)(v0 + 82);
  if (v1 == 255)
  {
    v2 = *(uint64_t **)(v0 + 96);
    v3 = sub_1C06D7DB4(*(_QWORD *)(v0 + 88), (unint64_t *)&qword_1ED4FFE30, 0x1E0C97200, &qword_1EF61CEE8, (uint64_t *)&unk_1EF61CEF0);
    swift_bridgeObjectRelease();
    *v2 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(void **)(v0 + 152);
    if ((v1 & 1) != 0)
    {
      sub_1C069A018(v5, 1);
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v6 = *(void **)(v0 + 152);
      v7 = *(_BYTE *)(v0 + 82);
      v8 = sub_1C0747720();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED4FF8B0);
      sub_1C06D88E8(v6, v7);
      Logger.ifError(_:message:)(v6);
      sub_1C06D8900(v6, v7);
      sub_1C06D8900(v6, v7);
      sub_1C06D8900(v6, v7);
    }
    else
    {
      sub_1C068D7D0((unint64_t)v5);
    }
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61CEE0);
    *v9 = v0;
    v9[1] = sub_1C06D401C;
    return sub_1C0747C78();
  }
}

uint64_t sub_1C06D4000()
{
  return swift_unexpectedError();
}

uint64_t sub_1C06D401C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
  }
  else
  {
    *(_QWORD *)(v2 + 152) = *(_QWORD *)(v2 + 72);
    *(_BYTE *)(v2 + 82) = *(_BYTE *)(v2 + 80);
  }
  return swift_task_switch();
}

uint64_t sub_1C06D4090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 40) = a6;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C06D40B0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = sub_1C06D3820(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06D410C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v3 = v2;
  if (qword_1ED4FFD40 != -1)
    swift_once();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97210]);
  sub_1C0746EF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE20);
  v7 = (void *)sub_1C0747B04();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithKeysToFetch_, v7);

  objc_msgSend(v8, sel_setSortOrder_, 1);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  v10 = v3[5];
  v11 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  v13 = sub_1C06D7CFC(v12);
  v14 = swift_bridgeObjectRelease();
  v15 = (void *)MEMORY[0x1C3BA06EC](v14);
  sub_1C06D447C(v3, (uint64_t)v8, v13, v9, a1, a2 & 1);
  objc_autoreleasePoolPop(v15);
  swift_bridgeObjectRelease();

  swift_beginAccess();
  v16 = *(_QWORD *)(v9 + 16);
  sub_1C0746EF8();
  sub_1C0747030();
  return v16;
}

void sub_1C06D447C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t (*)(void *, _BYTE *), uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;

  v11 = a1[5];
  v12 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v11);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  *(_QWORD *)(v13 + 32) = a5;
  *(_BYTE *)(v13 + 40) = a6 & 1;
  v14 = *(void (**)(uint64_t, uint64_t (*)(void *, _BYTE *), uint64_t, uint64_t, uint64_t))(v12 + 16);
  sub_1C0746EF8();
  sub_1C0746F64();
  v14(a2, sub_1C06D87E4, v13, v11, v12);
  if (v24)
  {
    sub_1C0747030();
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v15 = sub_1C0747720();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED4FF8B0);
    v16 = v24;
    v17 = v24;
    v18 = sub_1C0747708();
    v19 = sub_1C0747D74();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_getErrorValue();
      v22 = sub_1C07482FC();
      sub_1C069092C(v22, v23, &v25);
      sub_1C0747E40();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0671000, v18, v19, "Error fetching contacts: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v21, -1, -1);
      MEMORY[0x1C3BA0D04](v20, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1C0747030();
  }
}

uint64_t sub_1C06D46FC(void *a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  unint64_t v18;
  uint64_t v19;

  v11 = (unint64_t *)(a4 + 16);
  v12 = objc_msgSend(a1, sel_identifier);
  v13 = sub_1C0747930();
  v15 = v14;

  LOBYTE(a3) = sub_1C06D4870(v13, v15, a3);
  result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    swift_beginAccess();
    v17 = a1;
    MEMORY[0x1C3B9FD5C]();
    if (*(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1C0747B58();
    sub_1C0747BA0();
    sub_1C0747B34();
    result = swift_endAccess();
  }
  if ((a6 & 1) == 0)
  {
    result = swift_beginAccess();
    v18 = *v11;
    if (v18 >> 62)
    {
      sub_1C0746EF8();
      v19 = sub_1C074814C();
      result = swift_bridgeObjectRelease();
      if (v19 != a5)
        return result;
    }
    else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) != a5)
    {
      return result;
    }
    *a2 = 1;
  }
  return result;
}

uint64_t sub_1C06D4870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C0748350();
    sub_1C07479A8();
    v6 = sub_1C0748374();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C0748284() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C0748284() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C06D49A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v5;
  uint64_t v7;

  v7 = MEMORY[0x1E0DEE9D8];
  v5 = (void *)MEMORY[0x1C3BA06EC]();
  sub_1C06D4A20(v2, a1, a2, &v7);
  objc_autoreleasePoolPop(v5);
  swift_beginAccess();
  return v7;
}

void sub_1C06D4A20(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v7 = a1[10];
  v8 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v7);
  v9 = sub_1C0746EF8();
  v10 = sub_1C06D7CFC(v9);
  swift_bridgeObjectRelease();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a2, v10, v7, v8);
  swift_bridgeObjectRelease();
  sub_1C0746F64();
  sub_1C06D80EC(v11, a1);
  v13 = v12;
  swift_bridgeObjectRelease();
  sub_1C0747030();
  swift_beginAccess();
  *a4 = v13;
  swift_bridgeObjectRelease();
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v14 = sub_1C0747720();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED4FF8B0);
  v15 = sub_1C0747708();
  v16 = sub_1C0747D80();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v24 = v18;
    *(_DWORD *)v17 = 136315138;
    swift_beginAccess();
    v19 = sub_1C069DDE4(0, (unint64_t *)&qword_1ED4FFE30);
    v20 = sub_1C0746EF8();
    v21 = MEMORY[0x1C3B9FDC8](v20, v19);
    v23 = v22;
    swift_bridgeObjectRelease();
    sub_1C069092C(v21, v23, &v24);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v15, v16, "contacts returned from core duet: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v18, -1, -1);
    MEMORY[0x1C3BA0D04](v17, -1, -1);
  }

}

uint64_t ContactFetcher.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return v0;
}

uint64_t ContactFetcher.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return swift_deallocClassInstance();
}

uint64_t sub_1C06D4D08()
{
  return sub_1C06D3324();
}

uint64_t sub_1C06D4D28()
{
  return sub_1C06D410C(10, 0);
}

uint64_t sub_1C06D4D50(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C06D33D0(a1, a2, a3);
}

uint64_t sub_1C06D4D70(uint64_t a1, char a2)
{
  return sub_1C06D3820(a1, a2);
}

uint64_t sub_1C06D4D90(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 56) = a2;
  v4 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = v4;
  return swift_task_switch();
}

uint64_t sub_1C06D4DB0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D190);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CE70);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_1C06D3A38;
  return sub_1C07481B8();
}

uint64_t sub_1C06D4E70(uint64_t a1, char a2)
{
  return sub_1C06D410C(a1, a2 & 1);
}

uint64_t sub_1C06D4E94(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  void *v6;
  uint64_t v8;

  v5 = *v2;
  v8 = MEMORY[0x1E0DEE9D8];
  v6 = (void *)MEMORY[0x1C3BA06EC]();
  sub_1C06D4A20(v5, a1, a2, &v8);
  objc_autoreleasePoolPop(v6);
  swift_beginAccess();
  return v8;
}

uint64_t sub_1C06D4F14(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _QWORD *v8;
  _QWORD v10[9];

  v4 = *v2;
  sub_1C0748350();
  sub_1C0746EF8();
  sub_1C0676198((uint64_t)v10, a2);
  v5 = sub_1C0748374() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10[0] = *v8;
  *v8 = 0x8000000000000000;
  sub_1C06D6420(a2, v5, isUniquelyReferenced_nonNull_native);
  *v8 = v10[0];
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1C06D5370(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1C0748350();
  sub_1C0746EF8();
  sub_1C07479A8();
  v8 = sub_1C0748374();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C0748284() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      sub_1C0746EF8();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C0748284() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  sub_1C0746EF8();
  sub_1C06D68D0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C06D551C(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    sub_1C0746EF8();
    v13 = a2;
    v14 = sub_1C0747F30();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_1C069DDE4(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1C0747F24();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1C06D57E4(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_1C06D6108(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_1C06D63A0((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    sub_1C0746EF8();
    v16 = sub_1C0747DF8();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_1C069DDE4(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_1C0747E04();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_1C0747E04();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_1C06D6A68((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_1C06D57E4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_1C0747FC0();
    v19 = v6;
    sub_1C0747EF4();
    if (sub_1C0747F48())
    {
      sub_1C069DDE4(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_1C06D6108(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_1C0747DF8();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_1C0747F48());
    }
    sub_1C0747030();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v6;
}

uint64_t sub_1C06D59E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CF10);
  v3 = sub_1C0747FB4();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v15 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  sub_1C0746F64();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1C06D5E04);
              }
              if (v10 >= v7)
                break;
              v9 = v15[v10];
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1C0748350();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  sub_1C0747030();
  v1 = v0;
  v13 = 1 << *(_BYTE *)(v2 + 32);
  if (v13 > 63)
    bzero(v15, ((unint64_t)(v13 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v15 = -1 << v13;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = sub_1C0747030();
  *v1 = v3;
  return result;
}

uint64_t sub_1C06D5E2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CEC0);
  v3 = sub_1C0747FB4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = sub_1C0746F64();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                sub_1C0747030();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1C0748350();
      sub_1C07479A8();
      result = sub_1C0748374();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = sub_1C0747030();
  *v1 = v4;
  return result;
}

uint64_t sub_1C06D6108(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1C0747FB4();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = sub_1C0746F64();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                sub_1C0747030();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1C0747DF8();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = sub_1C0747030();
  *v3 = v6;
  return result;
}

unint64_t sub_1C06D63A0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1C0747DF8();
  result = sub_1C0747EDC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1C06D6420(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _BYTE v15[72];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C06D59E4();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1C06D6BF8();
        goto LABEL_10;
      }
      sub_1C06D70D8();
    }
    v8 = *v3;
    sub_1C0748350();
    sub_1C0676198((uint64_t)v15, v5);
    result = sub_1C0748374();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1C06D6860);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t sub_1C06D68D0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C06D5E2C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C06D6D88();
      goto LABEL_22;
    }
    sub_1C06D74EC();
  }
  v11 = *v4;
  sub_1C0748350();
  sub_1C07479A8();
  result = sub_1C0748374();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C0748284(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C07482E4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C0748284();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1C06D6A68(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1C06D6108(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1C06D6F38(a4);
      goto LABEL_14;
    }
    sub_1C06D7798(v11, a4);
  }
  v12 = *v5;
  v13 = sub_1C0747DF8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1C069DDE4(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_1C0747E04();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_1C07482E4();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_1C0747E04();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

void *sub_1C06D6BF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CF10);
  v2 = *v0;
  v3 = sub_1C0747FA8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C06D6D88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CEC0);
  v2 = *v0;
  v3 = sub_1C0747FA8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)sub_1C0746EF8();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C06D6F38(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1C0747FA8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)sub_1C0747030();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C06D70D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CF10);
  v3 = sub_1C0747FB4();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = sub_1C0747030();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v4 + 63) >> 6;
  sub_1C0746F64();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v13 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v13 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v13 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v13 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1C06D74C4);
              }
              if (v9 >= v13)
                break;
              v8 = *(_QWORD *)(v2 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v7);
        sub_1C0748350();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_1C06D74EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CEC0);
  v3 = sub_1C0747FB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = sub_1C0747030();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = sub_1C0746F64();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1C0748350();
    sub_1C0746EF8();
    sub_1C07479A8();
    result = sub_1C0748374();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C06D7798(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1C0747FB4();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = sub_1C0747030();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = sub_1C0746F64();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1C0747DF8();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t (*sub_1C06D7A0C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1C06D7B38(v6, a2, a3);
  return sub_1C06D7A60;
}

uint64_t (*sub_1C06D7A64(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1C06D7BA4(v6, a2, a3);
  return sub_1C06D7A60;
}

uint64_t (*sub_1C06D7AB8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1C06D7C18(v6, a2, a3);
  return sub_1C06D7A60;
}

void sub_1C06D7B0C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1C06D7B38(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3BA029C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1C06D899C;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C06D7BA4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1C3BA029C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_1C06D7C10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06D7C10()
{
  return swift_unknownObjectRelease();
}

void (*sub_1C06D7C18(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3BA029C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1C06D7C84;
  }
  __break(1u);
  return result;
}

void sub_1C06D7C84(id *a1)
{

}

uint64_t sub_1C06D7C8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1C06D8958();
  result = sub_1C0747CA8();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1C06D4F14(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C06D7CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C0747CA8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_1C0746EF8();
      sub_1C06D5370(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C06D7D90(unint64_t a1)
{
  return sub_1C06D7DB4(a1, (unint64_t *)&qword_1EF61CEA0, 0x1E0CB37E8, (unint64_t *)&qword_1EF61CEA8, &qword_1EF61CEB0);
}

uint64_t sub_1C06D7DB4(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_1C0746EF8();
    sub_1C074814C();
    swift_bridgeObjectRelease();
  }
  sub_1C069DDE4(0, a2);
  sub_1C06D8918(a4, a2);
  result = sub_1C0747CA8();
  v18 = result;
  if (v10)
  {
    sub_1C0746EF8();
    v12 = sub_1C074814C();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return v18;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return v18;
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v14 = (void *)MEMORY[0x1C3BA029C](i, a1);
        sub_1C06D551C(&v17, v14, a2, a3, a5);

      }
    }
    else
    {
      v15 = (void **)(a1 + 32);
      do
      {
        v16 = *v15++;
        sub_1C06D551C(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C06D7F48(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  char v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;

  v6 = a1;
  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v9 = v6 & 0xC000000000000001;
      v16 = v6;
      v17 = v6 & 0xFFFFFFFFFFFFFF8;
      v15 = v7;
      while (v9)
      {
        v10 = (id)MEMORY[0x1C3BA029C](v8, v6);
LABEL_9:
        v11 = v10;
        v12 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v10;
        v13 = sub_1C06D1BC0(&v18, a2, a3);
        if (v3)
        {
          swift_bridgeObjectRelease();

          sub_1C0747030();
          return a3;
        }
        if ((v13 & 1) != 0)
        {
          sub_1C074808C();
          sub_1C07480BC();
          sub_1C07480C8();
          sub_1C0748098();
          v7 = v15;
          v6 = v16;
        }
        else
        {

        }
        ++v8;
        if (v12 == v7)
        {
          a3 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v17 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1C074814C();
      if (!v7)
        goto LABEL_19;
    }
    v10 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a3 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return a3;
}

void sub_1C06D80EC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    sub_1C0746EF8();
    v6 = (void *)objc_opt_self();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v9 = *(i - 1);
      v8 = *i;
      v10 = qword_1ED4FFD40;
      sub_1C0746EF8();
      if (v10 != -1)
        swift_once();
      v17 = qword_1ED501790;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C074B820;
      *(_QWORD *)(v11 + 32) = v9;
      *(_QWORD *)(v11 + 40) = v8;
      sub_1C0746EF8();
      sub_1C0746EF8();
      v12 = (void *)sub_1C0747B04();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v6, sel_predicateForContactsWithIdentifiers_, v12);

      v14 = (void *)MEMORY[0x1C3BA06EC]();
      sub_1C06D354C(a2, (uint64_t)v13, &v17, &v16);
      if (v3)
        break;
      v3 = 0;
      objc_autoreleasePoolPop(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v16)
      {
        MEMORY[0x1C3B9FD5C]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C0747B58();
        sub_1C0747BA0();
        sub_1C0747B34();
      }
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    objc_autoreleasePoolPop(v14);
    __break(1u);
  }
}

_QWORD *_s6People14ContactFetcherCACycfC_0()
{
  id v0;
  uint64_t v1;
  id v2;
  _UNKNOWN **v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[5];
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  if (_s6People0A12DemoOverrideC010isContactsC7EnabledSbyFZ_0())
  {
    v1 = type metadata accessor for DemoContactSuggester();
    v2 = (id)swift_allocObject();
    v3 = &off_1E79E75B0;
  }
  else
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D70970]), sel_init);
    v1 = sub_1C069DDE4(0, &qword_1ED500488);
    v3 = &off_1E79E8778;
  }
  v19 = v1;
  v20 = v3;
  *(_QWORD *)&v18 = v2;
  v4 = type metadata accessor for FamilyRequestFactory();
  v5 = swift_allocObject();
  v16 = sub_1C069DDE4(0, &qword_1ED500480);
  v17 = &protocol witness table for CNContactStore;
  *(_QWORD *)&v15 = v0;
  v14[3] = v4;
  v14[4] = &off_1E79EAE08;
  v14[0] = v5;
  type metadata accessor for ContactFetcher();
  v6 = (_QWORD *)swift_allocObject();
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v4);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = *v9;
  v6[15] = v4;
  v6[16] = &off_1E79EAE08;
  v6[12] = v11;
  sub_1C0685BC4(&v15, (uint64_t)(v6 + 2));
  sub_1C0685BC4(&v18, (uint64_t)(v6 + 7));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v6;
}

uint64_t sub_1C06D84A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1C069325C;
  return sub_1C06D3AA0(a1, a2, v6, v7, v8);
}

uint64_t sub_1C06D8524()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SimpleContactFilter()
{
  return &type metadata for SimpleContactFilter;
}

uint64_t dispatch thunk of ContactFetcherProtocol.firstContact()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContactFetcherProtocol.preferredContacts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactFetcherProtocol.contact(for:includeImages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of ContactFetcherProtocol.contacts(withPredicate:includeImages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ContactFetcherProtocol.contacts(withPredicates:includeImages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C06D89A0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ContactFetcherProtocol.allContacts(limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 48))(a1, a2 & 1);
}

uint64_t dispatch thunk of ContactFetcherProtocol.recommendedContacts(maxSuggestions:excludeContactIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ContactFetcherProtocol.provideFeedbackForContactRecommendations(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ContactFetcherProtocol.provideFeedbackForContactRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of ContactStoreProtocol.unifiedContacts(matching:keysToFetch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ContactStoreProtocol.enumerateContacts(with:usingBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ContactStoreProtocol.meContactIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for ContactFetcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContactFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactFetcher.firstContact()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ContactFetcher.preferredContacts()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ContactFetcher.contact(for:includeImages:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ContactFetcher.contacts(withPredicate:includeImages:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ContactFetcher.contacts(withPredicates:includeImages:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C0699E50;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ContactFetcher.allContacts(limit:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 152))(a1, a2 & 1);
}

uint64_t dispatch thunk of ContactFetcher.recommendedContacts(maxSuggestions:excludeContactIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ContactFetcher.provideFeedbackForContactRecommendations(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ContactFetcher.provideFeedbackForContactRecommendations(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_1C06D8788()
{
  return swift_deallocObject();
}

uint64_t sub_1C06D8798()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C06D87B8()
{
  swift_bridgeObjectRelease();
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C06D87E4(void *a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_1C06D46FC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t sub_1C06D87F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1C0747030();

  return swift_deallocObject();
}

uint64_t sub_1C06D8828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_BYTE *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1C06930A0;
  *(_BYTE *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C06D88A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1C06D88E8(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1C069A018(result, a2 & 1);
  return result;
}

void sub_1C06D8900(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_1C0699ED8(a1, a2 & 1);
}

uint64_t sub_1C06D8918(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1C069DDE4(255, a2);
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C06D8958()
{
  unint64_t result;

  result = qword_1EF61CF08;
  if (!qword_1EF61CF08)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for StatusType, &type metadata for StatusType);
    atomic_store(result, (unint64_t *)&qword_1EF61CF08);
  }
  return result;
}

uint64_t sub_1C06D89A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void *))((char *)sub_1C06D89C8 + 4 * byte_1C074E478[*v0]))(&unk_1E79E4738);
}

uint64_t sub_1C06D89C8()
{
  return sub_1C06D89F8((uint64_t)&unk_1E79E4798);
}

uint64_t sub_1C06D89D4()
{
  return sub_1C06D89F8((uint64_t)&unk_1E79E47D0);
}

uint64_t sub_1C06D89E0()
{
  return sub_1C06D89F8((uint64_t)&unk_1E79E4760);
}

uint64_t sub_1C06D89EC()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1C06D89F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CF20);
    v3 = sub_1C0747FCC();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      sub_1C0748350();
      sub_1C074835C();
      result = sub_1C0748374();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1C06D8B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61CEC0);
    v3 = sub_1C0747FCC();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1C0748350();
      sub_1C0746EF8();
      sub_1C07479A8();
      result = sub_1C0748374();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1C0748284(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1C0748284();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t static PeopleLegacyExtensionPoint.identifier.getter()
{
  return 0xD000000000000021;
}

id PeopleLegacyExtension.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  id result;

  result = sub_1C06B9308(v4, a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t static PeopleLegacyResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t PeopleLegacyResult.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6People18PeopleLegacyResult_bundleID);
  sub_1C0746EF8();
  return v1;
}

uint64_t PeopleLegacyResult.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6People18PeopleLegacyResult_data);
  sub_1C06A0A38(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC6People18PeopleLegacyResult_data + 8));
  return v1;
}

id PeopleLegacyResult.__allocating_init(bundleID:data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC6People18PeopleLegacyResult_bundleID];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR____TtC6People18PeopleLegacyResult_data];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id PeopleLegacyResult.init(bundleID:data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = &v4[OBJC_IVAR____TtC6People18PeopleLegacyResult_bundleID];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v6 = &v4[OBJC_IVAR____TtC6People18PeopleLegacyResult_data];
  *(_QWORD *)v6 = a3;
  *((_QWORD *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for PeopleLegacyResult();
  return objc_msgSendSuper2(&v8, sel_init);
}

id PeopleLegacyResult.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1C06D9154();

  return v4;
}

id PeopleLegacyResult.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_1C06D9154();

  return v2;
}

void sub_1C06D8F10(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = (void *)sub_1C074790C();
  v4 = (void *)sub_1C074790C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC6People18PeopleLegacyResult_data + 8) >> 60 == 15)
    v5 = 0;
  else
    v5 = (void *)sub_1C07472E8();
  v6 = (id)sub_1C074790C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

}

id PeopleLegacyResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PeopleLegacyResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PeopleLegacyResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PeopleLegacyResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PeopleLegacyResult()
{
  return objc_opt_self();
}

id sub_1C06D9154()
{
  void *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  objc_super v6;

  sub_1C069DDE4(0, &qword_1EF61CF78);
  v1 = v0;
  v2 = sub_1C0747DE0();
  if (v2)
  {
    v3 = (void *)v2;
    sub_1C0747924();

  }
  v4 = &v1[OBJC_IVAR____TtC6People18PeopleLegacyResult_bundleID];
  *(_QWORD *)v4 = 0x21726F727245;
  *((_QWORD *)v4 + 1) = 0xE600000000000000;
  *(_OWORD *)&v1[OBJC_IVAR____TtC6People18PeopleLegacyResult_data] = xmmword_1C074DB10;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for PeopleLegacyResult();
  return objc_msgSendSuper2(&v6, sel_init);
}

ValueMetadata *type metadata accessor for PeopleLegacyExtensionPoint()
{
  return &type metadata for PeopleLegacyExtensionPoint;
}

uint64_t dispatch thunk of PeopleLegacyExtension.messagePayloadForScreenTime(for:baseURL:fallbackToLP:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 16)
                                                                                     + *(_QWORD *)(a6 + 16));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1C06D89A0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PeopleLegacyExtension.messagePayloadForAskToBuy(for:baseURL:fallbackToLP:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24)
                                                                                     + *(_QWORD *)(a6 + 24));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1C0699E50;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t method lookup function for PeopleLegacyResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleLegacyResult.__allocating_init(bundleID:data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PeopleLegacyResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of PeopleLegacyResult.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void sub_1C06D9420(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for LegacyConfiguration(255, *a1, a1[1], a4);
  JUMPOUT(0x1C3BA0C2CLL);
}

uint64_t sub_1C06D9448()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RuntimeEnvironment.__allocating_init(environment:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  RuntimeEnvironment.init(environment:)(a1);
  return v2;
}

uint64_t RuntimeEnvironment.init(environment:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = sub_1C0747720();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16) || (v8 = sub_1C069C918(0xD00000000000001CLL, 0x80000001C0754730), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v14 = 0;
    v15 = 0;
    v17 = 0;
    v18 = 1;
    goto LABEL_14;
  }
  v10 = v7;
  v11 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v8);
  v12 = *v11;
  v13 = v11[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = 0xEB00000000676E69;
    v15 = 0x7473655474696E55;
    if (v12 == 0x7473655474696E55 && v13 == 0xEB00000000676E69)
    {
      v18 = 0;
      v17 = 1;
      goto LABEL_13;
    }
    v17 = sub_1C0748284();
    v18 = 0;
    v14 = v13;
  }
  else
  {
    v14 = 0;
    v17 = 0;
    v18 = 1;
  }
  v15 = v12;
LABEL_13:
  v7 = v10;
LABEL_14:
  *(_BYTE *)(v2 + 16) = v17 & 1;
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED4FF8B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, v4);
  sub_1C0746EF8();
  swift_retain_n();
  v20 = sub_1C0747708();
  v21 = sub_1C0747D68();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v32 = v7;
    v23 = v22;
    v24 = swift_slowAlloc();
    v31 = v4;
    v25 = v24;
    v35 = v24;
    *(_DWORD *)v23 = 136315394;
    v30 = v5;
    if (v18)
      v26 = 0x74657320746F6ELL;
    else
      v26 = v15;
    if (v18)
      v27 = 0xE700000000000000;
    else
      v27 = v14;
    sub_1C0746EF8();
    v34 = sub_1C069092C(v26, v27, &v35);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 1024;
    swift_beginAccess();
    v28 = *(unsigned __int8 *)(v2 + 16);
    sub_1C0747030();
    v33 = v28;
    sub_1C0747E40();
    sub_1C0747030();
    _os_log_impl(&dword_1C0671000, v20, v21, "env is: %s  testing mode:%{BOOL}d", (uint8_t *)v23, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v25, -1, -1);
    MEMORY[0x1C3BA0D04](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v2;
}

uint64_t static RuntimeEnvironment.defaultEnvironment.getter()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_1C07477EC();
  type metadata accessor for RuntimeEnvironment();
  v3 = swift_allocObject();
  RuntimeEnvironment.init(environment:)(v2);
  return v3;
}

uint64_t RuntimeEnvironment.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RuntimeEnvironment.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RuntimeEnvironment()
{
  return objc_opt_self();
}

uint64_t sub_1C06D9914@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1C06D9958(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t method lookup function for RuntimeEnvironment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RuntimeEnvironment.isTesting.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of RuntimeEnvironment.__allocating_init(environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C06D99B8(CGImage *a1)
{
  __CFData *Mutable;
  NSObject *v3;
  CGImageDestination *v4;
  CGImageDestination *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
  {
    if (qword_1ED4FE9A8 != -1)
      swift_once();
    v8 = sub_1C0747720();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED4FE9D8);
    v3 = sub_1C0747708();
    v9 = sub_1C0747D74();
    if (os_log_type_enabled(v3, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0671000, v3, v9, "CFDataCreateMutable failed", v10, 2u);
      MEMORY[0x1C3BA0D04](v10, -1, -1);
    }
    goto LABEL_19;
  }
  v3 = Mutable;
  v4 = CGImageDestinationCreateWithData(Mutable, (CFStringRef)*MEMORY[0x1E0CA5C10], 1uLL, 0);
  if (!v4)
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v11 = sub_1C0747720();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED4FF8B0);
    v12 = sub_1C0747708();
    v13 = sub_1C0747D74();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1C0671000, v12, v13, "CGImageDestinationCreateWithData failed", v14, 2u);
      MEMORY[0x1C3BA0D04](v14, -1, -1);

      return 0;
    }

LABEL_19:
    return 0;
  }
  v5 = v4;
  CGImageDestinationAddImage(v4, a1, 0);
  if (!CGImageDestinationFinalize(v5))
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v15 = sub_1C0747720();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED4FF8B0);
    v16 = sub_1C0747708();
    v17 = sub_1C0747D74();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1C0671000, v16, v17, "CGImageDestinationFinalize failed", v18, 2u);
      MEMORY[0x1C3BA0D04](v18, -1, -1);

      return 0;
    }

    goto LABEL_19;
  }
  v6 = v3;
  v7 = sub_1C074730C();

  return v7;
}

CGImage *sub_1C06D9C94(uint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  CGImage *result;
  CGImage *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27[2];
  uint64_t v28;

  v4 = objc_msgSend((id)objc_opt_self(), sel_imageDescriptorNamed_, *MEMORY[0x1E0D3A870]);
  v5 = objc_allocWithZone(MEMORY[0x1E0D3A820]);
  sub_1C0746EF8();
  v6 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithBundleIdentifier_, v6);

  v8 = objc_msgSend(v7, sel_prepareImageForDescriptor_, v4);
  if (!v8)
    goto LABEL_4;
  v9 = v8;
  if ((objc_msgSend(v8, sel_placeholder) & 1) != 0)
  {

LABEL_4:
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v10 = sub_1C0747720();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED4FF8B0);
    swift_bridgeObjectRetain_n();
    v11 = sub_1C0747708();
    v12 = sub_1C0747D80();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v27[0] = v14;
      *(_DWORD *)v13 = 136315138;
      sub_1C0746EF8();
      v28 = sub_1C069092C(a1, a2, v27);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v11, v12, "Iconservice lookup for %s failed; is placeholder", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v14, -1, -1);
      MEMORY[0x1C3BA0D04](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  result = (CGImage *)objc_msgSend(v9, sel_CGImage);
  if (result)
  {
    v17 = result;
    v15 = sub_1C06D99B8(result);
    v19 = v18;

    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v20 = sub_1C0747720();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED4FF8B0);
    sub_1C0746EF8();
    sub_1C06A0A38(v15, v19);
    sub_1C0746EF8();
    sub_1C06A0A38(v15, v19);
    v21 = sub_1C0747708();
    v22 = sub_1C0747D80();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v23 = 136315394;
      sub_1C0746EF8();
      sub_1C069092C(a1, a2, &v28);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      v27[1] = v19;
      sub_1C06A0A38(v15, v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C728);
      v24 = sub_1C074796C();
      v27[0] = sub_1C069092C(v24, v25, &v28);
      sub_1C0747E40();
      swift_bridgeObjectRelease();
      sub_1C0690F90(v15, v19);
      sub_1C0690F90(v15, v19);
      _os_log_impl(&dword_1C0671000, v21, v22, "Iconservice lookup for %s returned %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v26, -1, -1);
      MEMORY[0x1C3BA0D04](v23, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_1C0690F90(v15, v19);
      sub_1C0690F90(v15, v19);
    }

    return (CGImage *)v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06DA164(uint64_t a1)
{
  return sub_1C06DA17C(a1, qword_1EF629D58);
}

uint64_t sub_1C06DA170(uint64_t a1)
{
  return sub_1C06DA17C(a1, qword_1EF629D70);
}

uint64_t sub_1C06DA17C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_hours);
  sub_1C0698FF4();
  return sub_1C07470B4();
}

uint64_t sub_1C06DA200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6People13IndexableItem_eventDate;
  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C068A9AC(v0 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate, &qword_1EF61BC58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06DA2BC()
{
  return type metadata accessor for IndexableItem();
}

uint64_t type metadata accessor for IndexableItem()
{
  uint64_t result;

  result = qword_1EF61CFB8;
  if (!qword_1EF61CFB8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C06DA300()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C07473E4();
  if (v0 <= 0x3F)
  {
    sub_1C06DA3B0();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1C06DA3B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF61CFC8[0])
  {
    sub_1C07473E4();
    v0 = sub_1C0747E28();
    if (!v1)
      atomic_store(v0, qword_1EF61CFC8);
  }
}

uint64_t sub_1C06DA404(uint64_t *a1, uint64_t *a2)
{
  return sub_1C06DAB68(*a1, *a2);
}

void sub_1C06DA410()
{
  qword_1EF629D88 = 11565;
  unk_1EF629D90 = 0xE200000000000000;
}

void sub_1C06DA428()
{
  qword_1EF629D98 = 1702060386;
  unk_1EF629DA0 = 0xE400000000000000;
}

unint64_t sub_1C06DA444(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0C0);
    v2 = (_QWORD *)sub_1C074817C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = sub_1C0746EF8();
  i = 0;
  v10 = MEMORY[0x1E0DEE9B8] + 8;
  v11 = MEMORY[0x1E0DEA968];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1C068FCD0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    sub_1C0746EF8();
    sub_1C0746EF8();
    swift_dynamicCast();
    sub_1C0685D00(v6, v7);
    sub_1C0685D00(v7, v40);
    sub_1C0685D00(v40, &v38);
    result = sub_1C069C918(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      result = (unint64_t)sub_1C0685D00(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1C0685D00(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C06DA7AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0B8);
    v2 = sub_1C074817C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  sub_1C0746EF8();
  result = sub_1C0746F64();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    sub_1C0746EF8();
    sub_1C0746EF8();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1C0685D00(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1C0685D00(v35, v36);
    sub_1C0685D00(v36, &v32);
    result = sub_1C0747F78();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1C0685D00(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    sub_1C0747030();
    sub_1C068FCD0();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C06DAB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  char v17;
  id v18;
  Swift::String_optional v19;
  id v20;
  Swift::String_optional v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t countAndFlagsBits;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1C07473E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&countAndFlagsBits - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&countAndFlagsBits - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0A8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&countAndFlagsBits - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a2 + 16);
  if (v14)
  {
    if (!v15)
      goto LABEL_26;
  }
  else if (v15)
  {
    goto LABEL_26;
  }
  v32 = v7;
  v33 = v5;
  v34 = v4;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC6People13IndexableItem_indexableID) != *(_QWORD *)(a2
                                                                                         + OBJC_IVAR____TtC6People13IndexableItem_indexableID)
    || *(_QWORD *)(a1 + OBJC_IVAR____TtC6People13IndexableItem_indexableID + 8) != *(_QWORD *)(a2
                                                                                             + OBJC_IVAR____TtC6People13IndexableItem_indexableID
                                                                                             + 8))
  {
    v17 = 0;
    if ((sub_1C0748284() & 1) == 0)
      return v17 & 1;
  }
  if (v14)
  {
    v18 = objc_msgSend(v14, sel_identifier);
    sub_1C0747930();

  }
  v19 = String.trimToNil()();
  countAndFlagsBits = v19.value._countAndFlagsBits;
  swift_bridgeObjectRelease();
  if (v15)
  {
    v20 = objc_msgSend(v15, (SEL)&FamilyRequestFactory.name);
    sub_1C0747930();

  }
  v21 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (!v19.value._object)
  {
    if (!v21.value._object)
      goto LABEL_22;
    goto LABEL_20;
  }
  if (!v21.value._object)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    v17 = 0;
    return v17 & 1;
  }
  if (countAndFlagsBits == v21.value._countAndFlagsBits && v19.value._object == v21.value._object)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v22 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = 0;
  if ((v22 & 1) != 0)
  {
LABEL_22:
    if ((sub_1C07473B4() & 1) != 0)
    {
      v23 = a2 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate;
      v24 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_1C06A5810(a1 + OBJC_IVAR____TtC6People13IndexableItem_expirationDate, (uint64_t)v13);
      sub_1C06A5810(v23, v24);
      v26 = v33;
      v25 = v34;
      v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      if (v27((uint64_t)v13, 1, v34) == 1)
      {
        if (v27(v24, 1, v25) == 1)
        {
          sub_1C068A9AC((uint64_t)v13, &qword_1EF61BC58);
          v17 = 1;
          return v17 & 1;
        }
      }
      else
      {
        sub_1C06A5810((uint64_t)v13, (uint64_t)v10);
        if (v27(v24, 1, v25) != 1)
        {
          v29 = v32;
          (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v32, v24, v25);
          sub_1C06DAF38();
          v17 = sub_1C07478D0();
          v30 = *(void (**)(char *, uint64_t))(v26 + 8);
          v30(v29, v25);
          v30(v10, v25);
          sub_1C068A9AC((uint64_t)v13, &qword_1EF61BC58);
          return v17 & 1;
        }
        (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
      }
      sub_1C068A9AC((uint64_t)v13, &qword_1EF61D0A8);
      v17 = 0;
      return v17 & 1;
    }
LABEL_26:
    v17 = 0;
  }
  return v17 & 1;
}

unint64_t sub_1C06DAF38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61D0B0;
  if (!qword_1EF61D0B0)
  {
    v1 = sub_1C07473E4();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61D0B0);
  }
  return result;
}

uint64_t sub_1C06DAF80(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t result;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  unint64_t v100;

  v89 = sub_1C07470FC();
  v96 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v95 = (char *)v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)sub_1C074790C();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v3);

  if (!v4)
  {
    if (qword_1EF61A378 == -1)
    {
LABEL_65:
      v79 = sub_1C0747720();
      __swift_project_value_buffer(v79, (uint64_t)qword_1EF61D340);
      v80 = sub_1C0747708();
      v81 = sub_1C0747D74();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v82 = 0;
        _os_log_impl(&dword_1C0671000, v80, v81, "Bundle not loaded", v82, 2u);
        MEMORY[0x1C3BA0D04](v82, -1, -1);
      }

      return 0;
    }
LABEL_75:
    swift_once();
    goto LABEL_65;
  }
  v5 = objc_msgSend(v4, sel_localizations);
  v6 = sub_1C0747B1C();

  v7 = sub_1C06D7CFC(v6);
  swift_bridgeObjectRelease();
  v8 = sub_1C06E092C(v7);
  swift_bridgeObjectRelease();
  v93 = v8[2];
  if (!v93)
  {
    sub_1C0747030();
    if (*(_QWORD *)(MEMORY[0x1E0DEE9E0] + 16))
      goto LABEL_63;
LABEL_69:
    swift_bridgeObjectRelease();

    return 0;
  }
  v10 = 0;
  v92 = v8 + 4;
  v86 = a1 + 40;
  v90 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v9 = 136315138;
  v87 = v9;
  v84[1] = MEMORY[0x1E0DEE9B8] + 8;
  v85 = a1;
  v11 = &qword_1EF629D88;
  v88 = v4;
  v91 = v8;
  while (1)
  {
    if (v10 >= v8[2])
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    v94 = v10;
    v12 = &v92[2 * v10];
    v13 = v12[1];
    v97 = *v12;
    v14 = sub_1C0747978();
    v16 = v15;
    v17 = qword_1EF61A360;
    sub_1C0746EF8();
    if (v17 != -1)
      swift_once();
    if (v14 == sub_1C0747978() && v16 == v18)
    {
      swift_bridgeObjectRelease();
LABEL_48:
      swift_bridgeObjectRelease_n();
      goto LABEL_5;
    }
    v20 = sub_1C0748284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      break;
    swift_bridgeObjectRelease();
LABEL_5:
    v10 = v94 + 1;
    v8 = v91;
    if (v94 + 1 == v93)
    {
      sub_1C0747030();
      if (*(_QWORD *)(v90 + 16))
      {
LABEL_63:
        v75 = sub_1C0746EF8();
        sub_1C06DA7AC(v75);
        swift_bridgeObjectRelease();
        v76 = objc_allocWithZone(MEMORY[0x1E0CA6AE8]);
        v77 = (void *)sub_1C07477E0();
        swift_bridgeObjectRelease();
        v78 = objc_msgSend(v76, sel_initWithLocalizedStrings_, v77);
        swift_bridgeObjectRelease();

        return (uint64_t)v78;
      }
      goto LABEL_69;
    }
  }
  v21 = (void *)sub_1C074790C();
  v22 = (void *)sub_1C074790C();
  v23 = objc_msgSend(v4, sel_pathForResource_ofType_, v21, v22);

  if (!v23)
  {
    if (qword_1EF61A378 != -1)
      swift_once();
    v67 = sub_1C0747720();
    __swift_project_value_buffer(v67, (uint64_t)qword_1EF61D340);
    sub_1C0746EF8();
    v68 = sub_1C0747708();
    v69 = sub_1C0747D68();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v99 = (_QWORD *)v71;
      *(_DWORD *)v70 = v87;
      sub_1C0746EF8();
      *(_QWORD *)(v70 + 4) = sub_1C069092C(v97, v13, (uint64_t *)&v99);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v68, v69, "No bundle path for %s", (uint8_t *)v70, 0xCu);
LABEL_58:
      swift_arrayDestroy();
      v74 = v71;
      v11 = &qword_1EF629D88;
      MEMORY[0x1C3BA0D04](v74, -1, -1);
      MEMORY[0x1C3BA0D04](v70, -1, -1);

      goto LABEL_5;
    }
    goto LABEL_59;
  }
  sub_1C0747930();

  v24 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v25 = (void *)sub_1C074790C();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v24, sel_initWithPath_, v25);

  v98 = v26;
  if (!v26)
  {
    if (qword_1EF61A378 != -1)
      swift_once();
    v72 = sub_1C0747720();
    __swift_project_value_buffer(v72, (uint64_t)qword_1EF61D340);
    sub_1C0746EF8();
    v68 = sub_1C0747708();
    v73 = sub_1C0747D74();
    if (os_log_type_enabled(v68, v73))
    {
      v70 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v99 = (_QWORD *)v71;
      *(_DWORD *)v70 = v87;
      sub_1C0746EF8();
      *(_QWORD *)(v70 + 4) = sub_1C069092C(v97, v13, (uint64_t *)&v99);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v68, v73, "No bundle for %s", (uint8_t *)v70, 0xCu);
      goto LABEL_58;
    }
LABEL_59:

    goto LABEL_48;
  }
  v27 = *(_QWORD *)(a1 + 16);
  if (!v27)
  {
    swift_bridgeObjectRelease();

LABEL_61:
    v4 = v88;
    goto LABEL_5;
  }
  sub_1C0746EF8();
  v28 = v86;
  v29 = v89;
  while (1)
  {
    sub_1C0746EF8();
    v30 = (void *)sub_1C074790C();
    swift_bridgeObjectRelease();
    if (qword_1EF61A358 != -1)
      swift_once();
    v31 = (void *)sub_1C074790C();
    v32 = objc_msgSend(v98, sel_localizedStringForKey_value_table_, v30, v31, 0);

    v33 = sub_1C0747930();
    v34 = v11;
    v36 = v35;

    v99 = (_QWORD *)v33;
    v100 = v36;
    v37 = v95;
    sub_1C07470F0();
    sub_1C068F2D0();
    v38 = sub_1C0747E64();
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v37, v29);
    v41 = (v40 & 0x2000000000000000) != 0 ? HIBYTE(v40) & 0xF : v38 & 0xFFFFFFFFFFFFLL;
    swift_bridgeObjectRelease();
    if (v41)
      break;
    swift_bridgeObjectRelease();
    v11 = v34;
LABEL_19:
    v28 += 16;
    if (!--v27)
    {
      swift_bridgeObjectRelease();

      a1 = v85;
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
  }
  v11 = v34;
  if (v38 == *v34 && v40 == v34[1] || (sub_1C0748284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v42 = v90;
  if (*(_QWORD *)(v90 + 16))
  {
    sub_1C0746EF8();
    v43 = sub_1C069C918(v97, v13);
    if ((v44 & 1) != 0)
    {
      v45 = (uint64_t *)(*(_QWORD *)(v42 + 56) + 16 * v43);
      v47 = *v45;
      v46 = v45[1];
      sub_1C0746EF8();
    }
    else
    {
      v47 = 0;
      v46 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v47 = 0;
    v46 = 0xE000000000000000;
  }
  v99 = (_QWORD *)v47;
  v100 = v46;
  sub_1C0746EF8();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  v49 = (uint64_t)v99;
  v48 = v100;
  v50 = v90;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v99 = (_QWORD *)v50;
  v53 = sub_1C069C918(v97, v13);
  v54 = *(_QWORD *)(v50 + 16);
  v55 = (v52 & 1) == 0;
  v56 = v54 + v55;
  if (__OFADD__(v54, v55))
    goto LABEL_73;
  v57 = v52;
  if (*(_QWORD *)(v50 + 24) >= v56)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1C06DF008();
    goto LABEL_42;
  }
  sub_1C0705EB0(v56, isUniquelyReferenced_nonNull_native);
  v58 = sub_1C069C918(v97, v13);
  if ((v57 & 1) == (v59 & 1))
  {
    v53 = v58;
LABEL_42:
    v60 = v99;
    v90 = (uint64_t)v99;
    if ((v57 & 1) != 0)
    {
      v61 = (uint64_t *)(v99[7] + 16 * v53);
      swift_bridgeObjectRelease();
      *v61 = v49;
      v61[1] = v48;
    }
    else
    {
      v99[(v53 >> 6) + 8] |= 1 << v53;
      v62 = (_QWORD *)(v60[6] + 16 * v53);
      *v62 = v97;
      v62[1] = v13;
      v63 = (uint64_t *)(v60[7] + 16 * v53);
      *v63 = v49;
      v63[1] = v48;
      v64 = v60[2];
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (v65)
        goto LABEL_74;
      v60[2] = v66;
      sub_1C0746EF8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v89;
    v11 = &qword_1EF629D88;
    goto LABEL_19;
  }
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

uint64_t sub_1C06DB9E0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1C0747CFC();
  if (!v18)
    return sub_1C0747B7C();
  v19 = v18;
  v25 = v15;
  v39 = sub_1C07477BC();
  v32 = sub_1C07480EC();
  sub_1C07480A4();
  v36 = v17;
  result = sub_1C0747CF0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1C0747D44();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1C07480D4();
      sub_1C0747D14();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    sub_1C0747030();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t sub_1C06DBCBC@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t Collection.sorted<A>(by:)()
{
  return sub_1C0747A98();
}

uint64_t Collection<>.uniqueWithOrder()()
{
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  v1 = sub_1C0747B7C();
  sub_1C0747AB0();
  return v1;
}

uint64_t Collection<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_1C0747B7C();
  if (MEMORY[0x1C3B9FE34](v12, AssociatedTypeWitness))
    v13 = sub_1C06DC93C(v12, AssociatedTypeWitness, a3);
  else
    v13 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v18 = v13;
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a1);
  MEMORY[0x1E0C80A78](v14);
  *(&v17 - 4) = a1;
  *(&v17 - 3) = a2;
  *(&v17 - 2) = a3;
  *(&v17 - 1) = (uint64_t)&v18;
  v15 = sub_1C0747A80();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C06DC08C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, AssociatedTypeWitness);
  sub_1C0747CCC();
  v9 = sub_1C0747CC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
  return v9 & 1;
}

uint64_t sub_1C06DC18C(uint64_t a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)v10 - v6;
  v10[1] = *a2;
  v8 = sub_1C0747BDC();
  MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF38], v8);
  result = sub_1C0747ABC();
  if ((result & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, AssociatedTypeWitness);
    return sub_1C0747BB8();
  }
  return result;
}

uint64_t sub_1C06DC288(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v3 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a3 + 8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  v10 = sub_1C074787C();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  v11(v9, v3);
  return v10 & 1;
}

uint64_t sub_1C06DC388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C06DC288(a1, a2, *(_QWORD **)(v2 + 40)) & 1;
}

uint64_t Collection.expanded(toSize:placeholder:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v12 - v6, a2, AssociatedTypeWitness);
  result = sub_1C0747CFC();
  if (__OFSUB__(a1, result))
  {
    __break(1u);
  }
  else
  {
    v9 = (a1 - result) & ~((a1 - result) >> 63);
    v10 = sub_1C0747BDC();
    v11 = sub_1C06DCC64((uint64_t)v7, v9, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    v12[0] = v11;
    MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF58], v10);
    sub_1C0747D50();
    swift_bridgeObjectRelease();
    return v12[1];
  }
  return result;
}

uint64_t Collection<>.matrix(rowCount:placeholder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v16[11];
  uint64_t v17;

  result = sub_1C0747CFC();
  v10 = ceil((double)result / (double)a1);
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    v16[9] = 0;
    v16[10] = a1;
    MEMORY[0x1E0C80A78](result);
    v16[2] = a3;
    v16[3] = a4;
    v16[4] = &v17;
    v16[5] = v11;
    v16[6] = v4;
    v16[7] = a2;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF7C0);
    swift_getAssociatedTypeWitness();
    v13 = (char *)sub_1C0747BDC();
    v14 = sub_1C06DCD40();
    return sub_1C06DB9E0((void (*)(char *, char *))sub_1C06DCD1C, (uint64_t)v16, v12, v13, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v15);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C06DC648@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;

  v28 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = *a1;
  v31 = a2;
  v16 = __OFADD__(v15, a2);
  v17 = v15 + a2;
  if (v16)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v17 < v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v27 = a3;
  result = sub_1C0747D08();
  if (v30[0] < v15)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v25 = a7;
  v26 = a1;
  v24 = (uint64_t)&v24;
  if (v30[0] >= v17)
    v18 = v17;
  else
    v18 = v30[0];
  MEMORY[0x1E0C80A78](result);
  *(&v24 - 6) = a5;
  *(&v24 - 5) = a6;
  *(&v24 - 4) = v31;
  *(&v24 - 3) = v15;
  *(&v24 - 2) = v18;
  swift_getAssociatedTypeWitness();
  sub_1C0747E28();
  v19 = sub_1C0747BDC();
  v20 = v29;
  sub_1C06DBCBC((void (*)(char *, char *))sub_1C06DCDF0, (uint64_t)(&v24 - 8), MEMORY[0x1E0DEDCE8], v19, v21, (uint64_t)v30);
  v29 = v20;
  if (!v30[0])
    sub_1C0747B7C();
  v30[0] = v15;
  v30[1] = v18;
  sub_1C0747D38();
  swift_getAssociatedConformanceWitness();
  sub_1C0747BE8();
  v22 = sub_1C0747B70();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v23 = v26;
  *v25 = v22;
  if (!__OFADD__(*v23, v31))
  {
    *v23 += v31;
    return result;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1C06DC8A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  v6 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
    __break(1u);
  }
  else
  {
    v7 = a2 - v6;
    if (!__OFSUB__(a2, v6))
    {
      v8 = result;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      result = sub_1C06DCC64(v8, v7, AssociatedTypeWitness);
      *a5 = result;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06DC920(uint64_t a1)
{
  uint64_t v1;

  return sub_1C06DC18C(a1, *(_QWORD **)(v1 + 40));
}

uint64_t sub_1C06DC93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1C3B9FE10](v12))
  {
    sub_1C0747FD8();
    v15 = sub_1C0747FCC();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1C3B9FE34](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1C0747B94();
    sub_1C0747B4C();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1C074802C();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1C074784C();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1C07478D0();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C06DCC44(uint64_t a1)
{
  return sub_1C06DC08C(a1) & 1;
}

uint64_t sub_1C06DCC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_1C0747B7C();
  v15 = result;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v8 = v7;
      v9 = *(_QWORD *)(a3 - 8);
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v10(v7, a1, a3);
      v11 = a2 - 1;
      if (v11)
      {
        v12 = *(_QWORD *)(v9 + 72);
        v13 = v8 + v12;
        do
        {
          v10(v13, a1, a3);
          v13 += v12;
          --v11;
        }
        while (v11);
      }
    }
    v14 = sub_1C0747BDC();
    nullsub_1(v14);
    return v15;
  }
  return result;
}

uint64_t sub_1C06DCD1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C06DC648(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1C06DCD40()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED4FF7C8;
  if (!qword_1ED4FF7C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4FF7C0);
    v2 = sub_1C06DCDAC();
    v3[0] = MEMORY[0x1E0DEB458];
    v3[1] = v2;
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEB8C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED4FF7C8);
  }
  return result;
}

unint64_t sub_1C06DCDAC()
{
  unint64_t result;

  result = qword_1ED4FF7B8;
  if (!qword_1ED4FF7B8)
  {
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED4FF7B8);
  }
  return result;
}

uint64_t sub_1C06DCDF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C06DC8A0(a1, v2[4], v2[5], v2[6], a2);
}

uint64_t LaunchDiary.__allocating_init(withJSON:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  LaunchDiary.init(withJSON:)(a1, a2);
  return v4;
}

uint64_t sub_1C06DCE68()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1C06DCE9C()
{
  uint64_t v0;

  sub_1C07470A8();
  swift_allocObject();
  sub_1C074709C();
  swift_beginAccess();
  sub_1C0746EF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF768);
  sub_1C06B9950();
  v0 = sub_1C0747090();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LaunchDiary.__allocating_init(withData:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t LaunchDiary.init(withData:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t LaunchDiary.init(withJSON:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v13;

  v4 = v2;
  if (a2 >> 60 == 15)
  {
    if (qword_1ED4FF8D0 != -1)
      swift_once();
    v5 = sub_1C0747720();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED4FF8B0);
    v6 = sub_1C0747708();
    v7 = sub_1C0747D68();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0671000, v6, v7, "Creating empty launch map", v8, 2u);
      MEMORY[0x1C3BA0D04](v8, -1, -1);
    }

    v9 = MEMORY[0x1E0DEE9E0];
    goto LABEL_10;
  }
  sub_1C0747084();
  swift_allocObject();
  sub_1C0747078();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FF768);
  sub_1C06DDEB8();
  sub_1C074706C();
  if (!v3)
  {
    sub_1C0690F90(a1, a2);
    sub_1C0747030();
    v9 = v13;
LABEL_10:
    *(_QWORD *)(v4 + 16) = v9;
    return v4;
  }
  sub_1C0690F90(a1, a2);
  sub_1C0747030();
  type metadata accessor for LaunchDiary();
  swift_deallocPartialClassInstance();
  return v4;
}

void sub_1C06DD150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int128 v40;
  unint64_t v41;
  uint64_t *v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t *v76;
  unint64_t v77;
  char v78;
  char v79;
  char v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  __int128 v105;
  void (*v106)(char *, uint64_t, uint64_t, uint64_t);
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  int64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125[4];

  v123 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v111 = *(_QWORD *)(v6 - 8);
  v112 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v110 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v109 = (char *)&v101 - v9;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v118 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v101 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v101 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  v20 = MEMORY[0x1E0C80A78](v19);
  v108 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v102 = (char *)&v101 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v101 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v101 - v27;
  v29 = a3;
  v30 = v10;
  v104 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v104((char *)&v101 - v27, v29, v10);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v31(v28, 0, 1, v10);
  swift_beginAccess();
  sub_1C0746EF8();
  v121 = (uint64_t *)(v3 + 16);
  sub_1C06AE5F8((uint64_t)v28, v123, a2);
  swift_endAccess();
  v113 = v18;
  sub_1C07473D8();
  v32 = *(_QWORD *)(v3 + 16);
  v33 = *(_QWORD *)(v32 + 64);
  v114 = v32 + 64;
  v34 = 1 << *(_BYTE *)(v32 + 32);
  v35 = v16;
  v36 = v31;
  v37 = -1;
  if (v34 < 64)
    v37 = ~(-1 << v34);
  v38 = v37 & v33;
  v116 = (unint64_t)(v34 + 63) >> 6;
  v120 = v32;
  sub_1C0746EF8();
  v39 = 0;
  *(_QWORD *)&v40 = 136315138;
  v105 = v40;
  v103 = MEMORY[0x1E0DEE9B8] + 8;
  v117 = v26;
  v106 = v31;
  v107 = v16;
  if (v38)
    goto LABEL_7;
LABEL_8:
  v43 = v39 + 1;
  v42 = v121;
  if (!__OFADD__(v39, 1))
  {
    if (v43 < v116)
    {
      v44 = *(_QWORD *)(v114 + 8 * v43);
      v45 = v39 + 1;
      if (v44)
        goto LABEL_25;
      v45 = v39 + 2;
      if (v39 + 2 >= v116)
        goto LABEL_59;
      v44 = *(_QWORD *)(v114 + 8 * v45);
      if (v44)
        goto LABEL_25;
      v45 = v39 + 3;
      if (v39 + 3 >= v116)
        goto LABEL_59;
      v44 = *(_QWORD *)(v114 + 8 * v45);
      if (v44)
        goto LABEL_25;
      v45 = v39 + 4;
      if (v39 + 4 >= v116)
        goto LABEL_59;
      v44 = *(_QWORD *)(v114 + 8 * v45);
      if (v44)
        goto LABEL_25;
      v45 = v39 + 5;
      if (v39 + 5 >= v116)
        goto LABEL_59;
      v44 = *(_QWORD *)(v114 + 8 * v45);
      if (v44)
      {
LABEL_25:
        v122 = (v44 - 1) & v44;
        v123 = v45;
        v41 = __clz(__rbit64(v44)) + (v45 << 6);
        while (1)
        {
          v47 = (uint64_t *)(*(_QWORD *)(v120 + 48) + 16 * v41);
          v48 = *v47;
          v49 = v47[1];
          v50 = *v42;
          if (*(_QWORD *)(*v42 + 16))
          {
            swift_bridgeObjectRetain_n();
            sub_1C0746EF8();
            v51 = sub_1C069C918(v48, v49);
            if ((v52 & 1) != 0)
            {
              v104(v26, *(_QWORD *)(v50 + 56) + *(_QWORD *)(v11 + 72) * v51, v30);
              v53 = v26;
              v54 = 0;
            }
            else
            {
              v53 = v26;
              v54 = 1;
            }
            v36(v53, v54, 1, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            v36(v26, 1, 1, v30);
            sub_1C0746EF8();
          }
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v26, 1, v30) == 1)
          {
            v55 = v36;
            sub_1C06A09F8((uint64_t)v26);
            swift_beginAccess();
            sub_1C0746EF8();
            sub_1C0746EF8();
            v56 = v48;
            v57 = sub_1C069C918(v48, v49);
            v59 = v58;
            swift_bridgeObjectRelease();
            if ((v59 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v61 = *v42;
              v124 = *v42;
              *v42 = 0x8000000000000000;
              v62 = v42;
              if (!isUniquelyReferenced_nonNull_native)
              {
                sub_1C06DF92C();
                v61 = v124;
              }
              swift_bridgeObjectRelease();
              v63 = (uint64_t)v108;
              (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v108, *(_QWORD *)(v61 + 56) + *(_QWORD *)(v11 + 72) * v57, v30);
              sub_1C06DE54C(v57, v61, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
              *v62 = v61;
              swift_bridgeObjectRelease();
              v64 = 0;
            }
            else
            {
              v64 = 1;
              v63 = (uint64_t)v108;
            }
            v36 = v55;
            v55((char *)v63, v64, 1, v30);
            swift_bridgeObjectRelease();
            sub_1C06A09F8(v63);
            swift_endAccess();
            if (qword_1ED4FF8D0 != -1)
              swift_once();
            v85 = sub_1C0747720();
            __swift_project_value_buffer(v85, (uint64_t)qword_1ED4FF8B0);
            sub_1C0746EF8();
            v86 = sub_1C0747708();
            v87 = sub_1C0747D74();
            if (os_log_type_enabled(v86, v87))
            {
              v88 = swift_slowAlloc();
              v89 = swift_slowAlloc();
              v125[0] = v89;
              *(_DWORD *)v88 = v105;
              sub_1C0746EF8();
              *(_QWORD *)(v88 + 4) = sub_1C069092C(v56, v49, v125);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1C0671000, v86, v87, "Invalid time for %s, nuking", (uint8_t *)v88, 0xCu);
              swift_arrayDestroy();
              v90 = v89;
              v26 = v117;
              MEMORY[0x1C3BA0D04](v90, -1, -1);
              v91 = v88;
              v36 = v55;
              MEMORY[0x1C3BA0D04](v91, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            v38 = v122;
            v39 = v123;
            v35 = v107;
            if (!v122)
              goto LABEL_8;
          }
          else
          {
            v119 = v48;
            v65 = v11;
            v66 = v26;
            v67 = v30;
            v115 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
            v115(v35, v66, v30);
            if (qword_1EF61A4E0 != -1)
              swift_once();
            v68 = v112;
            v69 = __swift_project_value_buffer(v112, (uint64_t)qword_1EF61E2B0);
            v70 = v111;
            v71 = v109;
            (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v109, v69, v68);
            v72 = objc_msgSend((id)objc_opt_self(), sel_seconds);
            v73 = v110;
            sub_1C07470CC();

            sub_1C07470C0();
            v74 = *(void (**)(char *, uint64_t))(v70 + 8);
            v74(v73, v68);
            v75 = v118;
            sub_1C0747390();
            v74(v71, v68);
            if ((sub_1C0747384() & 1) != 0)
            {
              v76 = v121;
              swift_beginAccess();
              sub_1C0746EF8();
              sub_1C0746EF8();
              v77 = sub_1C069C918(v119, v49);
              v79 = v78;
              swift_bridgeObjectRelease();
              v11 = v65;
              v30 = v67;
              if ((v79 & 1) != 0)
              {
                v80 = swift_isUniquelyReferenced_nonNull_native();
                v81 = *v76;
                v124 = *v76;
                *v76 = 0x8000000000000000;
                v82 = v106;
                v83 = v76;
                if ((v80 & 1) == 0)
                {
                  sub_1C06DF92C();
                  v81 = v124;
                }
                swift_bridgeObjectRelease();
                v84 = (uint64_t)v102;
                v115(v102, (char *)(*(_QWORD *)(v81 + 56) + *(_QWORD *)(v11 + 72) * v77), v67);
                sub_1C06DE54C(v77, v81, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
                *v83 = v81;
                swift_bridgeObjectRelease();
                v36 = v82;
                v82((char *)v84, 0, 1, v67);
              }
              else
              {
                v84 = (uint64_t)v102;
                v36 = v106;
                v106(v102, 1, 1, v67);
              }
              swift_bridgeObjectRelease();
              sub_1C06A09F8(v84);
              swift_endAccess();
              if (qword_1ED4FF8D0 != -1)
                swift_once();
              v93 = sub_1C0747720();
              __swift_project_value_buffer(v93, (uint64_t)qword_1ED4FF8B0);
              sub_1C0746EF8();
              v94 = sub_1C0747708();
              v95 = sub_1C0747D68();
              if (os_log_type_enabled(v94, v95))
              {
                v96 = v36;
                v97 = swift_slowAlloc();
                v98 = swift_slowAlloc();
                v125[0] = v98;
                *(_DWORD *)v97 = v105;
                sub_1C0746EF8();
                *(_QWORD *)(v97 + 4) = sub_1C069092C(v119, v49, v125);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1C0671000, v94, v95, "Time for %s expired, nuking", (uint8_t *)v97, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3BA0D04](v98, -1, -1);
                v99 = v97;
                v36 = v96;
                MEMORY[0x1C3BA0D04](v99, -1, -1);
              }
              else
              {
                swift_bridgeObjectRelease_n();
              }

              v100 = *(void (**)(char *, uint64_t))(v11 + 8);
              v100(v118, v30);
              v100(v35, v30);
              v26 = v117;
            }
            else
            {
              swift_bridgeObjectRelease();
              v11 = v65;
              v92 = *(void (**)(char *, uint64_t))(v65 + 8);
              v30 = v67;
              v92(v75, v67);
              v92(v35, v67);
              v26 = v117;
              v36 = v106;
            }
            v38 = v122;
            v39 = v123;
            if (!v122)
              goto LABEL_8;
          }
LABEL_7:
          v122 = (v38 - 1) & v38;
          v123 = v39;
          v41 = __clz(__rbit64(v38)) | (v39 << 6);
          v42 = v121;
        }
      }
      v46 = v39 + 6;
      if (v39 + 6 < v116)
      {
        v44 = *(_QWORD *)(v114 + 8 * v46);
        if (v44)
        {
          v45 = v39 + 6;
          goto LABEL_25;
        }
        while (1)
        {
          v45 = v46 + 1;
          if (__OFADD__(v46, 1))
            goto LABEL_61;
          if (v45 >= v116)
            break;
          v44 = *(_QWORD *)(v114 + 8 * v45);
          ++v46;
          if (v44)
            goto LABEL_25;
        }
      }
    }
LABEL_59:
    sub_1C0747030();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v113, v30);
    return;
  }
  __break(1u);
LABEL_61:
  __break(1u);
}

uint64_t sub_1C06DDC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v22[-v9];
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v11 + 16))
  {
    v18 = sub_1C07473E4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
LABEL_7:
    v19 = 0;
    goto LABEL_8;
  }
  sub_1C0746EF8();
  sub_1C0746EF8();
  v12 = sub_1C069C918(a1, a2);
  if ((v13 & 1) != 0)
  {
    v14 = v12;
    v15 = *(_QWORD *)(v11 + 56);
    v16 = sub_1C07473E4();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v17 + 16))(v10, v15 + *(_QWORD *)(v17 + 72) * v14, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  }
  else
  {
    v16 = sub_1C07473E4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07473E4();
  v19 = 1;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16) == 1)
    goto LABEL_7;
LABEL_8:
  sub_1C06A09F8((uint64_t)v10);
  v20 = sub_1C07473E4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
  swift_beginAccess();
  sub_1C0746EF8();
  sub_1C06AE5F8((uint64_t)v8, a1, a2);
  swift_endAccess();
  return v19;
}

uint64_t LaunchDiary.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LaunchDiary.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1C06DDEB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED4FF778;
  if (!qword_1ED4FF778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4FF768);
    v2 = sub_1C06DDF34(&qword_1ED4FF088, MEMORY[0x1E0CB08C0]);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED4FF778);
  }
  return result;
}

uint64_t sub_1C06DDF34(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C07473E4();
    result = MEMORY[0x1C3BA0C2C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LaunchDiary()
{
  return objc_opt_self();
}

unint64_t sub_1C06DDF94(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C0747ED0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C0748350();
        sub_1C0746EF8();
        sub_1C07479A8();
        v10 = sub_1C0748374();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C06DE17C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C0747ED0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1C0748344();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ResolvedFamily() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C06DE338(unint64_t a1, uint64_t a2)
{
  return sub_1C06DE54C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

unint64_t sub_1C06DE344(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C0747ED0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1C0748350();
        sub_1C0746EF8();
        sub_1C07479A8();
        v9 = sub_1C0748374();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PeopleLocation() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C06DE540(unint64_t a1, uint64_t a2)
{
  return sub_1C06DE54C(a1, a2, type metadata accessor for LocationItem);
}

unint64_t sub_1C06DE54C(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1C0747ED0();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1C0748350();
        sub_1C0746EF8();
        sub_1C07479A8();
        v11 = sub_1C0748374();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_1C06DE754()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE38);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)sub_1C0747030();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1C0685C78(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1C0685BC4(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)sub_1C0746EF8();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C06DE93C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61D130);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DEADC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  id v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D128);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v22 = *(void **)(v17 + v20);
    v21 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_QWORD *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v22;
    v25[1] = v21;
    v25[2] = v23;
    sub_1C0746EF8();
    v26 = v22;
    result = (void *)sub_1C069102C(v21, v23);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DECB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D118);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)sub_1C0746EF8();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DEE54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B140);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    sub_1C0746EF8();
    result = (void *)sub_1C0746EF8();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DF008()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0D0);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    sub_1C0746EF8();
    result = (void *)sub_1C0746EF8();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DF1C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for ResolvedFamily();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D110);
  v5 = *v0;
  v6 = sub_1C0748164();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)sub_1C0747030();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_1C068510C(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_1C068A658((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedFamily);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C06DF3EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D120);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    sub_1C0746EF8();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DF5A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0E8);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)sub_1C0746EF8();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DF748()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0C0);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)sub_1C0747030();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1C068A530(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1C0685D00(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)sub_1C0746EF8();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C06DF92C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_1C07473E4();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D108);
  v31 = v0;
  v4 = *v0;
  v5 = sub_1C0748164();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)sub_1C0747030();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)sub_1C0746EF8();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t method lookup function for LaunchDiary()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LaunchDiary.itemCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of LaunchDiary.asData()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of LaunchDiary.__allocating_init(withData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of LaunchDiary.__allocating_init(withJSON:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of LaunchDiary.add(contactId:time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of LaunchDiary.remove(contactId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

void *sub_1C06DFBF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for PeopleLocation();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0C8);
  v5 = *v0;
  v6 = sub_1C0748164();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)sub_1C0747030();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_1C068510C(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PeopleLocation);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_1C068A658((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, (uint64_t (*)(_QWORD))type metadata accessor for PeopleLocation);
    result = (void *)sub_1C0746EF8();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C06DFE38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D100);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06DFFC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED500288);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C06E014C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0F8);
  v2 = *v0;
  v3 = sub_1C0748164();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)sub_1C0746EF8();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C06E02F4()
{
  return sub_1C06E0550(&qword_1EF61D0F0);
}

void *sub_1C06E0300()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for LocationItem(0);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0E0);
  v5 = *v0;
  v6 = sub_1C0748164();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)sub_1C0747030();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_1C068510C(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for LocationItem);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_1C068A658((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for LocationItem);
    result = (void *)sub_1C0746EF8();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)sub_1C0747030();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C06E0544()
{
  return sub_1C06E0550(&qword_1EF61D0D8);
}

id sub_1C06E0550(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1C0748164();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)sub_1C0747030();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    sub_1C0746EF8();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t SelectPeopleIntent.people(for:)(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = objc_msgSend(v1, sel_people);
  if (v3)
  {
    v4 = v3;
    type metadata accessor for PersonType();
    v5 = sub_1C0747B1C();

  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  if ((unint64_t)(a1 - 2) > 2)
    v6 = 1;
  else
    v6 = qword_1C074E5E8[a1 - 2];
  v7 = sub_1C06E2674(v6, v5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_8;
  sub_1C074829C();
  swift_unknownObjectRetain_n();
  v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v16 = *(_QWORD *)(v15 + 16);
  sub_1C0747030();
  if (__OFSUB__(v13 >> 1, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 != (v13 >> 1) - v11)
  {
LABEL_17:
    swift_unknownObjectRelease();
LABEL_8:
    v14 = sub_1C06E0A4C(v7, v9, v11, v13);
    goto LABEL_15;
  }
  v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
LABEL_15:
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1C06E0858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C850);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_1C06E1CF0(&v7, (_BYTE *)(v3 + 32), v1, a1);
  sub_1C0746EF8();
  sub_1C068FCD0();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1C06E092C(uint64_t a1)
{
  return sub_1C06E0964(a1, &qword_1ED4FEFB0, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1C06E1E84, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C06E280C);
}

_QWORD *sub_1C06E0948(uint64_t a1)
{
  return sub_1C06E0964(a1, &qword_1EF61D1D0, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1C06E227C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C068FCD0);
}

_QWORD *sub_1C06E0964(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = (_QWORD *)swift_allocObject();
  v9 = _swift_stdlib_malloc_size(v8);
  v10 = v9 - 32;
  if (v9 < 32)
    v10 = v9 - 17;
  v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  v11 = a3(v18, v8 + 4, v4, a1);
  v12 = v18[0];
  v13 = v18[1];
  v14 = v18[2];
  v15 = v18[3];
  v16 = v18[4];
  sub_1C0746EF8();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

uint64_t sub_1C06E0A4C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        type metadata accessor for PersonType();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06E0BCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem() - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61D180);
  v8 = *(_QWORD *)(type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem() - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

_QWORD *sub_1C06E0D94(unint64_t a1)
{
  return sub_1C06E0DAC(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1C06E16B4);
}

_QWORD *sub_1C06E0DA0(unint64_t a1)
{
  return sub_1C06E0DAC(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1C06E18C8);
}

_QWORD *sub_1C06E0DAC(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    sub_1C0746EF8();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    sub_1C0746EF8();
    v4 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1C06E0EAC(unint64_t a1)
{
  return sub_1C06E0DAC(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1C06E1ADC);
}

_QWORD *sub_1C06E0EB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE50);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1C06E247C(&v8, v3 + 4, v1, a1);
  sub_1C0746EF8();
  sub_1C068FCD0();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1C06E0FA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C550);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1C06E2080((uint64_t)&v8, v3 + 4, v1, a1);
  sub_1C0746EF8();
  sub_1C068FCD0();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C06E1084(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_1C0746EF8();
    v7 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_1C0746EF8();
    v10 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C0686528(&qword_1EF61D1C8, &qword_1EF61D1C0);
        sub_1C0746EF8();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D1C0);
          v12 = sub_1C06D7A0C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C069DDE4(0, &qword_1EF61D1B8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06E1298(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_1C0746EF8();
    v7 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_1C0746EF8();
    v10 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C0686528(&qword_1EF61D1B0, &qword_1EF61D1A8);
        sub_1C0746EF8();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D1A8);
          v12 = sub_1C06D7A64(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE20);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06E14A0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_1C0746EF8();
    v7 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_1C0746EF8();
    v10 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C0686528((unint64_t *)&unk_1EF61D198, &qword_1EF61D190);
        sub_1C0746EF8();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D190);
          v12 = sub_1C06D7A0C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C069DDE4(0, (unint64_t *)&qword_1ED4FFE30);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06E16B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_1C0746EF8();
    v7 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_1C0746EF8();
    v10 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C0686528(&qword_1EF61D178, &qword_1EF61D170);
        sub_1C0746EF8();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D170);
          v12 = sub_1C06D7A0C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C069DDE4(0, &qword_1EF61D168);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06E18C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_1C0746EF8();
    v7 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_1C0746EF8();
    v10 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C0686528(&qword_1EF61D160, &qword_1EF61D158);
        sub_1C0746EF8();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D158);
          v12 = sub_1C06D7A0C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C069DDE4(0, &qword_1EF61D150);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06E1ADC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_1C0746EF8();
    v7 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_1C0746EF8();
    v10 = sub_1C074814C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C0686528(&qword_1EF61D148, &qword_1EF61D140);
        sub_1C0746EF8();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D140);
          v12 = sub_1C06D7AB8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C069DDE4(0, (unint64_t *)&unk_1EF61E730);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1C0748188();
  __break(1u);
  return result;
}

_QWORD *sub_1C06E1CF0(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C06E1E84(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1C0746EF8();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1C0746EF8();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C06E2080(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1C0746EF8();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1C0746EF8();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C06E227C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    v11[1] = v20;
    if (v13 == v10)
    {
      sub_1C0746EF8();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1C0746EF8();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1C06E247C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C06E2674(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  sub_1C0746EF8();
  v5 = sub_1C074814C();
  result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    sub_1C0746EF8();
    v9 = sub_1C074814C();
    result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    sub_1C0746EF8();
    v8 = sub_1C074814C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for PersonType();
    v10 = 0;
    do
    {
      v11 = v10 + 1;
      sub_1C0748020();
      v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    sub_1C0746EF8();
    v12 = sub_1C0748158();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
    sub_1C0746EF8();
  }
  return v12;
}

uint64_t PeopleHandle.hash(into:)()
{
  sub_1C0746EF8();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t static PeopleHandle.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C0748284();
}

uint64_t PeopleHandle.hashValue.getter()
{
  sub_1C0748350();
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06E28DC()
{
  sub_1C0748350();
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06E2934()
{
  sub_1C0746EF8();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06E2978()
{
  sub_1C0748350();
  sub_1C0746EF8();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06E29CC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C0748284();
}

uint64_t PeopleFriend.handle.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_1C0746EF8();
}

uint64_t PeopleFriend.handle.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*PeopleFriend.handle.modify())()
{
  return nullsub_1;
}

id static PeopleLocation.emptyLocation(latlng:date:accuracy:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>, double a4@<D0>)
{
  int *v7;
  char *v8;
  uint64_t v9;

  v7 = (int *)type metadata accessor for PeopleLocation();
  v8 = (char *)a3 + v7[5];
  v9 = sub_1C07473E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a2, v9);
  *a3 = xmmword_1C074E600;
  *(_QWORD *)((char *)a3 + v7[6]) = 0;
  *(double *)((char *)a3 + v7[7]) = a4;
  *(_QWORD *)((char *)a3 + v7[8]) = a1;
  return a1;
}

uint64_t type metadata accessor for PeopleLocation()
{
  uint64_t result;

  result = qword_1EF61D298;
  if (!qword_1EF61D298)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C06E2B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1C07475A0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07475F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07475DC();
  v10 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  if (v10 == 0.0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_1C07475E8();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v12 != 0.0)
    {
      sub_1C07475AC();
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D21630], v1);
      v18 = sub_1C07475D0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v18;
    }
  }
  if (qword_1EF61A3B0 != -1)
    swift_once();
  v13 = sub_1C0747720();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EF61D3D0);
  v14 = sub_1C0747708();
  v15 = sub_1C0747D80();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v16 = 136315138;
    v20 = sub_1C069092C(0xD000000000000013, 0x80000001C07548A0, &v21);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v14, v15, "%s invalidate coordinate", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v17, -1, -1);
    MEMORY[0x1C3BA0D04](v16, -1, -1);
  }

  return 0;
}

Swift::Void __swiftcall Session.startRefreshingLocation(forHandles:)(Swift::OpaquePointer forHandles)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  Swift::OpaquePointer *v15;
  uint64_t v16;
  void *v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *((_QWORD *)forHandles._rawValue + 2);
  if (v6)
  {
    v17 = v1;
    sub_1C0746EF8();
    v7 = sub_1C06B3CE8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v8 = (uint64_t *)((char *)forHandles._rawValue + 40);
    do
    {
      v10 = *(v8 - 1);
      v9 = *v8;
      v12 = v7[2];
      v11 = v7[3];
      sub_1C0746EF8();
      if (v12 >= v11 >> 1)
        v7 = sub_1C06B3CE8((_QWORD *)(v11 > 1), v12 + 1, 1, v7);
      v8 += 2;
      v7[2] = v12 + 1;
      v13 = &v7[2 * v12];
      v13[4] = v10;
      v13[5] = v9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v1 = v17;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1C0747C48();
  v14 = sub_1C0747C60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
  v15 = (Swift::OpaquePointer *)swift_allocObject();
  v15[2]._rawValue = 0;
  v15[3]._rawValue = 0;
  v15[4]._rawValue = v1;
  v15[5]._rawValue = forHandles._rawValue;
  v15[6]._rawValue = v7;
  sub_1C0746EF8();
  sub_1C0746F64();
  sub_1C06E3720((uint64_t)v5, (uint64_t)&unk_1EF61D1E0, (uint64_t)v15);
  sub_1C0747030();
  sub_1C068A9AC((uint64_t)v5, &qword_1EF61BA80);
}

uint64_t sub_1C06E2F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_1C0747720();
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D1F0);
  v6[9] = swift_task_alloc();
  v8 = sub_1C0747558();
  v6[10] = v8;
  v6[11] = *(_QWORD *)(v8 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v9 = sub_1C07474EC();
  v6[14] = v9;
  v6[15] = *(_QWORD *)(v9 - 8);
  v6[16] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D300);
  v6[17] = v10;
  v6[18] = *(_QWORD *)(v10 - 8);
  v6[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06E30A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, unint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0[4] + 16);
  if (v1)
  {
    v2 = v0[11];
    v3 = sub_1C0746EF8() + 40;
    v4 = MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = v0[9];
      v5 = v0[10];
      swift_bridgeObjectRetain_n();
      sub_1C074754C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v5);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v5) == 1)
      {
        sub_1C068A9AC(v0[9], &qword_1EF61D1F0);
      }
      else
      {
        v8 = v0[12];
        v7 = v0[13];
        v9 = v0[10];
        v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v2 + 32);
        v10(v7, v0[9], v9);
        v10(v8, v7, v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1C06B3DF4(0, *(_QWORD *)(v4 + 16) + 1, 1, v4);
        v12 = *(_QWORD *)(v4 + 16);
        v11 = *(_QWORD *)(v4 + 24);
        if (v12 >= v11 >> 1)
          v4 = sub_1C06B3DF4(v11 > 1, v12 + 1, 1, v4);
        v13 = v0[12];
        v14 = v0[10];
        *(_QWORD *)(v4 + 16) = v12 + 1;
        v10(v4+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12, v13, v14);
      }
      v3 += 16;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v0[20] = v4;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 104))(v0[16], *MEMORY[0x1E0D213A0], v0[14]);
  v15 = (_QWORD *)swift_task_alloc();
  v0[21] = v15;
  *v15 = v0;
  v15[1] = sub_1C06E32C0;
  return sub_1C0747564();
}

uint64_t sub_1C06E32C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = v2[18];
    v3 = v2[19];
    v6 = v2[16];
    v5 = v2[17];
    v9 = v2 + 14;
    v7 = v2[14];
    v8 = v9[1];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1C06E338C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (qword_1EF61A3B0 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 48), (uint64_t)qword_1EF61D3D0);
  swift_bridgeObjectRetain_n();
  v1 = sub_1C0747708();
  v2 = sub_1C0747D80();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v10 = v4;
    *(_DWORD *)v3 = 136380675;
    v5 = sub_1C0746EF8();
    v6 = MEMORY[0x1C3B9FD8C](v5, &type metadata for PeopleHandle);
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = sub_1C069092C(v6, v8, &v10);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v1, v2, "Started subscriptions: %{private}s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v4, -1, -1);
    MEMORY[0x1C3BA0D04](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06E3594()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (qword_1EF61A3B0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = __swift_project_value_buffer(v4, (uint64_t)qword_1EF61D3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  v7 = v1;
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B9FD8C](v5, &type metadata for PeopleHandle);
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  Logger.ifError(_:message:)(v1);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06E3720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C06D88A0(a1, (uint64_t)v8);
  v9 = sub_1C0747C60();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C068A9AC((uint64_t)v8, &qword_1EF61BA80);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1C0747C00();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C0747C54();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t Session.locations(for:revGeoLookup:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 104) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D1F0);
  *(_QWORD *)(v3 + 32) = swift_task_alloc();
  v4 = sub_1C0747558();
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06E3948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0[2] + 16);
  if (v1)
  {
    v2 = v0[6];
    v3 = sub_1C0746EF8() + 40;
    v4 = MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = v0[4];
      v5 = v0[5];
      swift_bridgeObjectRetain_n();
      sub_1C074754C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v5);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v5) == 1)
      {
        sub_1C068A9AC(v0[4], &qword_1EF61D1F0);
      }
      else
      {
        v8 = v0[7];
        v7 = v0[8];
        v9 = v0[5];
        v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
        v10(v7, v0[4], v9);
        v10(v8, v7, v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1C06B3DF4(0, *(_QWORD *)(v4 + 16) + 1, 1, v4);
        v12 = *(_QWORD *)(v4 + 16);
        v11 = *(_QWORD *)(v4 + 24);
        if (v12 >= v11 >> 1)
          v4 = sub_1C06B3DF4(v11 > 1, v12 + 1, 1, v4);
        v13 = v0[7];
        v14 = v0[5];
        *(_QWORD *)(v4 + 16) = v12 + 1;
        v10(v4+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12, v13, v14);
      }
      v3 += 16;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v0[9] = v4;
  v15 = (_QWORD *)swift_task_alloc();
  v0[10] = v15;
  *v15 = v0;
  v15[1] = sub_1C06E3B40;
  return sub_1C074757C();
}

uint64_t sub_1C06E3B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1C06E3BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1C0746EF8();
  v2 = sub_1C06E511C(MEMORY[0x1E0DEE9E0], v1, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1C06E3C4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1C06E3CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t result;
  uint64_t v26;
  char *v27;
  char v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  void (*v46)(char *, unint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, unint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v87 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C2A0);
  MEMORY[0x1E0C80A78](v5);
  v86 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1C074751C();
  v91 = *(_QWORD *)(v85 - 8);
  v7 = MEMORY[0x1E0C80A78](v85);
  v88 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v90 = (char *)&v71 - v9;
  v82 = sub_1C07473E4();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v89 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for PeopleLocation();
  v81 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v84 = (uint64_t *)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1C07475F4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v79 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v71 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v71 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v71 - v23;
  result = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v71 - v26;
  if (*(_QWORD *)(a3 + 16))
  {
    result = sub_1C069CAF8(a2);
    if ((v28 & 1) != 0)
    {
      v29 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      v29(v24, *(_QWORD *)(a3 + 56) + *(_QWORD *)(v13 + 72) * result, v12);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v27, v24, v12);
      v77 = sub_1C0747540();
      v78 = v30;
      if (qword_1EF61A3B0 != -1)
        swift_once();
      v31 = sub_1C0747720();
      v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EF61D3D0);
      v29(v21, (unint64_t)v27, v12);
      v29(v18, (unint64_t)v27, v12);
      v33 = sub_1C0747708();
      v34 = sub_1C0747D80();
      v35 = v34;
      if (os_log_type_enabled(v33, v34))
      {
        v36 = swift_slowAlloc();
        v73 = v35;
        v37 = v36;
        v74 = swift_slowAlloc();
        v93 = v74;
        *(_DWORD *)v37 = 136315650;
        v72 = v33;
        v92 = sub_1C069092C(0xD00000000000001CLL, 0x80000001C0754880, &v93);
        v75 = v32;
        sub_1C0747E40();
        *(_WORD *)(v37 + 12) = 2080;
        v76 = v29;
        sub_1C06E5D90();
        v38 = sub_1C0748248();
        v92 = sub_1C069092C(v38, v39, &v93);
        sub_1C0747E40();
        swift_bridgeObjectRelease();
        v40 = *(void (**)(char *, uint64_t))(v13 + 8);
        v40(v21, v12);
        *(_WORD *)(v37 + 22) = 2048;
        sub_1C07475AC();
        v92 = v41;
        v29 = v76;
        sub_1C0747E40();
        v40(v18, v12);
        v33 = v72;
        _os_log_impl(&dword_1C0671000, v72, (os_log_type_t)v73, "%s address [%s] horz. accuracy [%f]", (uint8_t *)v37, 0x20u);
        v42 = v74;
        swift_arrayDestroy();
        MEMORY[0x1C3BA0D04](v42, -1, -1);
        MEMORY[0x1C3BA0D04](v37, -1, -1);
      }
      else
      {
        v40 = *(void (**)(char *, uint64_t))(v13 + 8);
        v40(v21, v12);
        v40(v18, v12);
      }

      sub_1C07475DC();
      v44 = v43;
      sub_1C07475E8();
      v46 = (void (*)(char *, unint64_t, uint64_t))objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v44, v45);
      sub_1C06B056C();
      v47 = v91;
      if (qword_1EF61A548 != -1)
        swift_once();
      if ((sub_1C0747E04() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v48 = v79;
        v29(v79, (unint64_t)v27, v12);
        v49 = sub_1C0747708();
        v50 = sub_1C0747D74();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = swift_slowAlloc();
          v76 = v46;
          v52 = v51;
          v91 = swift_slowAlloc();
          v93 = v91;
          *(_DWORD *)v52 = 136315394;
          v92 = sub_1C069092C(0xD00000000000001CLL, 0x80000001C0754880, &v93);
          v90 = (char *)v40;
          sub_1C0747E40();
          *(_WORD *)(v52 + 12) = 2080;
          sub_1C06E5D90();
          v53 = sub_1C0748248();
          v92 = sub_1C069092C(v53, v54, &v93);
          sub_1C0747E40();
          swift_bridgeObjectRelease();
          v55 = v90;
          ((void (*)(char *, uint64_t))v90)(v48, v12);
          _os_log_impl(&dword_1C0671000, v49, v50, "%s Dropping location with null island %s", (uint8_t *)v52, 0x16u);
          v56 = v91;
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v56, -1, -1);
          MEMORY[0x1C3BA0D04](v52, -1, -1);

          return ((uint64_t (*)(char *, uint64_t))v55)(v27, v12);
        }

        v40(v48, v12);
      }
      else
      {
        v76 = v46;
        v57 = v40;
        v58 = sub_1C06E2B20();
        v60 = v59;
        sub_1C07475C4();
        v61 = v90;
        sub_1C07475B8();
        v62 = v88;
        v63 = v85;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v88, v61, v85);
        v64 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v62, v63);
        if (v64 == *MEMORY[0x1E0D21450])
        {
          v65 = 1;
          v40 = v57;
        }
        else
        {
          v40 = v57;
          if (v64 == *MEMORY[0x1E0D21468])
          {
            v65 = 2;
          }
          else if (v64 == *MEMORY[0x1E0D21460])
          {
            v65 = 3;
          }
          else if (v64 == *MEMORY[0x1E0D21458])
          {
            v65 = 4;
          }
          else if (v64 == *MEMORY[0x1E0D21448])
          {
            v65 = 5;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v47 + 8))(v88, v63);
            v65 = 0;
          }
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v90, v63);
        sub_1C07475AC();
        v67 = v66;
        v68 = (int *)v83;
        v69 = (uint64_t)v84;
        *v84 = v58;
        *(_QWORD *)(v69 + 8) = v60;
        (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v69 + v68[5], v89, v82);
        *(_QWORD *)(v69 + v68[6]) = v65;
        *(_QWORD *)(v69 + v68[7]) = v67;
        *(_QWORD *)(v69 + v68[8]) = v76;
        v70 = v86;
        sub_1C06E5D10(v69, v86);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v81 + 56))(v70, 0, 1, v68);
        sub_1C06AE76C(v70, v77, v78);
        sub_1C06E5D54(v69);
      }
      return ((uint64_t (*)(char *, uint64_t))v40)(v27, v12);
    }
  }
  return result;
}

uint64_t Session.friendsSharingLocationsWithMe()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_1C0747558();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v2 = sub_1C0747534();
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v2 - 8);
  v0[7] = swift_task_alloc();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1C06E45E0;
  return sub_1C0747570();
}

uint64_t sub_1C06E45E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1C06E4668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v18 = *(_QWORD *)(v3 + 72);
    v19 = *(_QWORD *)(v0 + 24);
    v20 = v3;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    sub_1C0746EF8();
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *(_QWORD *)(v0 + 56);
      v8 = *(_QWORD *)(v0 + 32);
      v7 = *(_QWORD *)(v0 + 40);
      v9 = *(_QWORD *)(v0 + 16);
      v17(v6, v4, v7);
      sub_1C0747528();
      v10 = sub_1C0747540();
      v12 = v11;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v8, v9);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1C06B4014(0, v5[2] + 1, 1, v5);
      v14 = v5[2];
      v13 = v5[3];
      if (v14 >= v13 >> 1)
        v5 = sub_1C06B4014((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
      v5[2] = v14 + 1;
      v15 = &v5[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v4 += v18;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v5);
}

uint64_t sub_1C06E480C(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C06E5E00;
  return Session.locations(for:revGeoLookup:)(a1, a2);
}

uint64_t sub_1C06E486C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0699B64;
  return Session.friendsSharingLocationsWithMe()();
}

void sub_1C06E48B4(Swift::OpaquePointer a1)
{
  Session.startRefreshingLocation(forHandles:)(a1);
}

uint64_t sub_1C06E48D4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for PeopleLocateFriendProvider();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  qword_1ED4FECF8 = v0;
  return result;
}

uint64_t static PeopleLocateFriendProvider.shared.getter()
{
  if (qword_1ED4FECC8 != -1)
    swift_once();
  return sub_1C0746F64();
}

uint64_t sub_1C06E4950(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06E49AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = v0[4];
  if (!*(_QWORD *)(v1 + 112))
    goto LABEL_8;
  if (qword_1EF61A3B0 != -1)
    swift_once();
  v2 = sub_1C0747720();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF61D3D0);
  v3 = sub_1C0747708();
  v4 = sub_1C0747D68();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    v0[2] = sub_1C069092C(0x286E6F6973736573, 0xE900000000000029, &v13);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v3, v4, "%s has existing session", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v6, -1, -1);
    MEMORY[0x1C3BA0D04](v5, -1, -1);
  }

  if (*(_QWORD *)(v1 + 112))
  {
    v7 = *(_QWORD *)(v1 + 112);
  }
  else
  {
LABEL_8:
    v8 = v0[5];
    v9 = sub_1C0747C60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    v7 = sub_1C069F550(v8, (uint64_t)&unk_1EF61D210, v10);
  }
  v0[6] = v7;
  *(_QWORD *)(v1 + 112) = v7;
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0747030();
  v11 = (_QWORD *)swift_task_alloc();
  v0[7] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BAB8);
  *v11 = v0;
  v11[1] = sub_1C06E4C04;
  return sub_1C0747C6C();
}

uint64_t sub_1C06E4C04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06E4C5C()
{
  uint64_t v0;

  sub_1C0747030();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06E4C94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[3] = a1;
  v2 = sub_1C07474F8();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  sub_1C0747504();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06E4D14()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_1EF61A3B0 != -1)
    swift_once();
  v1 = sub_1C0747720();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF61D3D0);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D80();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[2] = sub_1C069092C(0x286E6F6973736573, 0xE900000000000029, &v8);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v2, v3, "%s requesting new session", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v5, -1, -1);
    MEMORY[0x1C3BA0D04](v4, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[5] + 104))(v0[6], *MEMORY[0x1E0D213F0], v0[4]);
  sub_1C0747510();
  v0[8] = sub_1C0747588();
  swift_allocObject();
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_1C06E4EFC;
  return sub_1C0747594();
}

uint64_t sub_1C06E4EFC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06E4F58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD **)(v0 + 24);
  v2[3] = *(_QWORD *)(v0 + 64);
  v2[4] = &protocol witness table for Session;
  *v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PeopleLocateFriendProvider.deinit()
{
  uint64_t v0;

  sub_1C0747030();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PeopleLocateFriendProvider.__deallocating_deinit()
{
  sub_1C0747030();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PeopleLocateFriendProvider.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C06E5000()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C06E500C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C069325C;
  return sub_1C06E4950(a1);
}

uint64_t sub_1C06E5060()
{
  swift_unknownObjectRelease();
  sub_1C0747030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06E509C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1C06930A0;
  return sub_1C06E2F8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C06E511C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  v7 = sub_1C0747558();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - v12;
  v27 = a1;
  v14 = *(_QWORD *)(a2 + 64);
  v25 = a2 + 64;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v26 = (unint64_t)(v15 + 63) >> 6;
  result = sub_1C0746EF8();
  v19 = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(a2 + 48) + *(_QWORD *)(v8 + 72) * i, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    sub_1C06E3CA8((uint64_t)&v27, (uint64_t)v11, a3);
    if (v3)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return sub_1C0747030();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v17)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v26)
      goto LABEL_26;
    v23 = *(_QWORD *)(v25 + 8 * v19);
    if (!v23)
      break;
LABEL_17:
    v17 = (v23 - 1) & v23;
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v26)
    goto LABEL_26;
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v19 + 2;
  if (v19 + 2 >= v26)
    goto LABEL_26;
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v19 + 3;
  if (v19 + 3 >= v26)
    goto LABEL_26;
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v19 + 4;
  if (v19 + 4 >= v26)
  {
LABEL_26:
    sub_1C0747030();
    return v27;
  }
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
  {
LABEL_16:
    v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v26)
      goto LABEL_26;
    v23 = *(_QWORD *)(v25 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C06E5394()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06E53B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C069325C;
  return sub_1C06E4C94(a1);
}

unint64_t sub_1C06E5420()
{
  unint64_t result;

  result = qword_1EF61D218;
  if (!qword_1EF61D218)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleHandle, &type metadata for PeopleHandle);
    atomic_store(result, (unint64_t *)&qword_1EF61D218);
  }
  return result;
}

uint64_t dispatch thunk of PeopleLocateFriendsSessionProvider.session()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C069325C;
  return v9(a1, a2, a3);
}

ValueMetadata *type metadata accessor for PeopleHandle()
{
  return &type metadata for PeopleHandle;
}

_QWORD *initializeBufferWithCopyOfBuffer for PeopleFriend(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1C0746EF8();
  return a1;
}

uint64_t destroy for PeopleFriend()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for PeopleTaskError.TimedOut(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PeopleFriend(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PeopleTaskError.TimedOut(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PeopleTaskError.TimedOut(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PeopleFriend()
{
  return &type metadata for PeopleFriend;
}

uint64_t *initializeBufferWithCopyOfBuffer for PeopleLocation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C07473E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1C0746EF8();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[8];
    v15 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v15;
    v16 = v15;
  }
  return v4;
}

void destroy for PeopleLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_QWORD *initializeWithCopy for PeopleLocation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C07473E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1C0746EF8();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[8];
  v14 = *(void **)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  v15 = v14;
  return a1;
}

_QWORD *assignWithCopy for PeopleLocation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v10 = a3[8];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  return a1;
}

_OWORD *initializeWithTake for PeopleLocation(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for PeopleLocation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C07473E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[8];
  v13 = *(void **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);

  return a1;
}

uint64_t getEnumTagSinglePayload for PeopleLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06E59EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C07473E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PeopleLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06E5A78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C07473E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_1C06E5AF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of PeopleFriendLocateProtocol.locations(for:revGeoLookup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C06D89A0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PeopleFriendLocateProtocol.friendsSharingLocationsWithMe()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C0699E50;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PeopleFriendLocateProtocol.startRefreshingLocation(forHandles:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for PeopleLocateFriendProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for PeopleLocateFriendProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleLocateFriendProvider.session()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 120) + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C069325C;
  return v6(a1);
}

uint64_t sub_1C06E5D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeopleLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06E5D54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PeopleLocation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C06E5D90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61D2F8;
  if (!qword_1EF61D2F8)
  {
    v1 = sub_1C07475F4();
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0D21698], v1);
    atomic_store(result, (unint64_t *)&qword_1EF61D2F8);
  }
  return result;
}

uint64_t sub_1C06E5DD8()
{
  sub_1C0747030();
  return swift_deallocObject();
}

double sub_1C06E5E10@<D0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  void *v25;
  id v26;
  id v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v37 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  v11 = sub_1C07473E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - v15;
  MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v34 - v18;
  if (*v2)
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v20 = type metadata accessor for StatusRelevance();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EF61B930);
    sub_1C069845C(v21, a2);
  }
  else
  {
    v35 = v17;
    v23 = &v2[*(int *)(a1(0) + 20)];
    v36 = a2;
    v24 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v24(v19, v23, v11);
    v25 = (void *)objc_opt_self();
    v26 = objc_msgSend(v25, sel_hours);
    sub_1C0698FF4();
    sub_1C07470B4();
    v24(v16, v19, v11);
    v27 = objc_msgSend(v25, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v28 = *(void (**)(char *, uint64_t))(v37 + 8);
    v28(v8, v5);
    v29 = v35;
    sub_1C0747390();
    v28(v10, v5);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    v30 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
    v31 = v36;
    v30(v36, v16, v11);
    v32 = (int *)type metadata accessor for StatusRelevance();
    v30(v31 + v32[5], v29, v11);
    *(_QWORD *)(v31 + v32[6]) = 0x4024000000000000;
    *(_QWORD *)(v31 + v32[7]) = 0x4000000000000000;
    v33 = v31 + v32[8];
    result = 0.1;
    *(_OWORD *)v33 = xmmword_1C074E7B0;
    *(_OWORD *)(v33 + 16) = xmmword_1C074E7C0;
    *(_BYTE *)(v33 + 32) = 0;
  }
  return result;
}

double sub_1C06E6108@<D0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void *v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  void (*v28)(uint64_t, char *, uint64_t);
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  if ((*v1 & 1) != 0)
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v18 = type metadata accessor for StatusRelevance();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EF61B930);
    sub_1C069845C(v19, a1);
  }
  else
  {
    v33 = v14;
    v34 = v15;
    v21 = &v1[*(int *)(type metadata accessor for ChildStatePersonStatus(0) + 20)];
    v32 = v4;
    v22 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v22(v17, v21, v10);
    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v23, sel_hours);
    sub_1C0698FF4();
    sub_1C07470B4();
    v22(v34, v17, v10);
    v25 = objc_msgSend(v23, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v26 = *(void (**)(char *, uint64_t))(v32 + 8);
    v26(v7, v3);
    v27 = v33;
    sub_1C0747390();
    v26(v9, v3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    v28 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v28(a1, v34, v10);
    v29 = (int *)type metadata accessor for StatusRelevance();
    v28(a1 + v29[5], v27, v10);
    *(_QWORD *)(a1 + v29[6]) = 0x4016000000000000;
    *(_QWORD *)(a1 + v29[7]) = 0x4012000000000000;
    v30 = a1 + v29[8];
    result = 0.1;
    *(_OWORD *)v30 = xmmword_1C074E7B0;
    *(_OWORD *)(v30 + 16) = xmmword_1C074E7C0;
    *(_BYTE *)(v30 + 32) = 0;
  }
  return result;
}

uint64_t sub_1C06E63F4@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void *v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  int *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  if (*v1 == 1)
  {
    v33 = v14;
    v34 = v15;
    v18 = &v1[*(int *)(type metadata accessor for AvailabilityPersonStatus(0) + 20)];
    v32 = v4;
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v19(v17, v18, v10);
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_hours);
    sub_1C0698FF4();
    sub_1C07470B4();
    v19(v34, v17, v10);
    v22 = objc_msgSend(v20, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v23 = *(void (**)(char *, uint64_t))(v32 + 8);
    v23(v7, v3);
    v24 = v33;
    sub_1C0747390();
    v23(v9, v3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    v25 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v25(a1, v34, v10);
    v26 = (int *)type metadata accessor for StatusRelevance();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v25)(a1 + v26[5], v24, v10);
    *(_QWORD *)(a1 + v26[6]) = 0x4012000000000000;
    *(_QWORD *)(a1 + v26[7]) = 0x4008000000000000;
    v28 = a1 + v26[8];
    *(_OWORD *)v28 = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
    *(_BYTE *)(v28 + 32) = 1;
  }
  else
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v29 = type metadata accessor for StatusRelevance();
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EF61B930);
    return sub_1C069845C(v30, a1);
  }
  return result;
}

uint64_t sub_1C06E66DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  id v22;
  id v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  int *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v33 - v17;
  if (*(uint64_t *)(v1 + 16) < 1)
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v31 = type metadata accessor for StatusRelevance();
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EF61B930);
    return sub_1C069845C(v32, a1);
  }
  else
  {
    v33 = v15;
    v36 = v16;
    v19 = v1 + *(int *)(type metadata accessor for MessagePersonStatus(0) + 24);
    v35 = v4;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v20(v18, v19, v10);
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(v21, sel_hours);
    v34 = v11;
    sub_1C0698FF4();
    sub_1C07470B4();
    v20(v15, (uint64_t)v18, v10);
    v23 = objc_msgSend(v21, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v24 = *(void (**)(char *, uint64_t))(v35 + 8);
    v24(v7, v3);
    v25 = v36;
    sub_1C0747390();
    v24(v9, v3);
    v26 = v34;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v10);
    v27 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 32);
    v27(a1, v33, v10);
    v28 = (int *)type metadata accessor for StatusRelevance();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v27)(a1 + v28[5], v25, v10);
    *(_QWORD *)(a1 + v28[6]) = 0x4020000000000000;
    *(_QWORD *)(a1 + v28[7]) = 0x4016000000000000;
    v30 = a1 + v28[8];
    *(_OWORD *)v30 = xmmword_1C074E7D0;
    *(_OWORD *)(v30 + 16) = xmmword_1C074E7E0;
    *(_BYTE *)(v30 + 32) = 0;
  }
  return result;
}

uint64_t RelevantStatus.relevanceForLockScreenCircularAccessory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

double AskToBuyRequestPersonStatus.relevance.getter@<D0>(uint64_t a1@<X8>)
{
  return sub_1C06E5E10(type metadata accessor for AskToBuyRequestPersonStatus, a1);
}

double sub_1C06E69F0@<D0>(uint64_t a1@<X8>)
{
  return sub_1C06E5E10(type metadata accessor for AskToBuyRequestPersonStatus, a1);
}

double ScreenTimeRequestPersonStatus.relevance.getter@<D0>(uint64_t a1@<X8>)
{
  return sub_1C06E5E10(type metadata accessor for ScreenTimeRequestPersonStatus, a1);
}

double sub_1C06E6A1C@<D0>(uint64_t a1@<X8>)
{
  return sub_1C06E5E10(type metadata accessor for ScreenTimeRequestPersonStatus, a1);
}

double ChildStatePersonStatus.relevance.getter@<D0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void *v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  void (*v28)(uint64_t, char *, uint64_t);
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  if ((*v1 & 1) != 0)
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v18 = type metadata accessor for StatusRelevance();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EF61B930);
    sub_1C069845C(v19, a1);
  }
  else
  {
    v33 = v14;
    v34 = v15;
    v21 = &v1[*(int *)(type metadata accessor for ChildStatePersonStatus(0) + 20)];
    v32 = v4;
    v22 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v22(v17, v21, v10);
    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v23, sel_hours);
    sub_1C0698FF4();
    sub_1C07470B4();
    v22(v34, v17, v10);
    v25 = objc_msgSend(v23, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v26 = *(void (**)(char *, uint64_t))(v32 + 8);
    v26(v7, v3);
    v27 = v33;
    sub_1C0747390();
    v26(v9, v3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    v28 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v28(a1, v34, v10);
    v29 = (int *)type metadata accessor for StatusRelevance();
    v28(a1 + v29[5], v27, v10);
    *(_QWORD *)(a1 + v29[6]) = 0x4016000000000000;
    *(_QWORD *)(a1 + v29[7]) = 0x4012000000000000;
    v30 = a1 + v29[8];
    result = 0.1;
    *(_OWORD *)v30 = xmmword_1C074E7B0;
    *(_OWORD *)(v30 + 16) = xmmword_1C074E7C0;
    *(_BYTE *)(v30 + 32) = 0;
  }
  return result;
}

uint64_t AvailabilityPersonStatus.relevance.getter@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void *v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  int *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  if (*v1 == 1)
  {
    v33 = v14;
    v34 = v15;
    v18 = &v1[*(int *)(type metadata accessor for AvailabilityPersonStatus(0) + 20)];
    v32 = v4;
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v19(v17, v18, v10);
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_hours);
    sub_1C0698FF4();
    sub_1C07470B4();
    v19(v34, v17, v10);
    v22 = objc_msgSend(v20, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v23 = *(void (**)(char *, uint64_t))(v32 + 8);
    v23(v7, v3);
    v24 = v33;
    sub_1C0747390();
    v23(v9, v3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    v25 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v25(a1, v34, v10);
    v26 = (int *)type metadata accessor for StatusRelevance();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v25)(a1 + v26[5], v24, v10);
    *(_QWORD *)(a1 + v26[6]) = 0x4012000000000000;
    *(_QWORD *)(a1 + v26[7]) = 0x4008000000000000;
    v28 = a1 + v26[8];
    *(_OWORD *)v28 = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
    *(_BYTE *)(v28 + 32) = 1;
  }
  else
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v29 = type metadata accessor for StatusRelevance();
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EF61B930);
    return sub_1C069845C(v30, a1);
  }
  return result;
}

double LocationPersonStatus.relevance.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  char *v30;

  v29 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - v7;
  v9 = sub_1C07473E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v29 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - v16;
  v18 = v1 + *(int *)(type metadata accessor for LocationPersonStatus(0) + 20);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v17, v18, v9);
  if (qword_1EF61A4F8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF61E2F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v20, v2);
  v19(v15, (uint64_t)v17, v9);
  v21 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v6, v2);
  v23 = v30;
  sub_1C0747390();
  v22(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v25 = v29;
  v24(v29, v15, v9);
  v26 = (int *)type metadata accessor for StatusRelevance();
  v24(v25 + v26[5], v23, v9);
  *(_QWORD *)(v25 + v26[6]) = 0x4018000000000000;
  *(_QWORD *)(v25 + v26[7]) = 0;
  v27 = v25 + v26[8];
  result = 0.65;
  *(_OWORD *)v27 = xmmword_1C074C580;
  *(_OWORD *)(v27 + 16) = xmmword_1C074E7F0;
  *(_BYTE *)(v27 + 32) = 0;
  return result;
}

double LocationPersonStatus.relevanceForLockScreenCircularAccessory.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  double result;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v29 - v6;
  v8 = sub_1C07473E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  v29 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = type metadata accessor for LocationPersonStatus(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v16, v1 + *(int *)(v17 + 20), v8);
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_minutes);
  sub_1C0698FF4();
  sub_1C07470B4();
  v18(v14, (uint64_t)v16, v8);
  v21 = objc_msgSend(v19, sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v22 = *(void (**)(char *, uint64_t))(v32 + 8);
  v22(v5, v2);
  v23 = v30;
  sub_1C0747390();
  v22(v7, v2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v25 = v31;
  v24(v31, v29, v8);
  v26 = (int *)type metadata accessor for StatusRelevance();
  v24(v25 + v26[5], v23, v8);
  *(_QWORD *)(v25 + v26[6]) = 0x4014000000000000;
  *(_QWORD *)(v25 + v26[7]) = 0x4014000000000000;
  v27 = v25 + v26[8];
  result = 0.0;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_BYTE *)(v27 + 32) = 1;
  return result;
}

void MotionPersonStatus.relevance.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  v10[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v10[4] = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1C07473E4();
  v10[3] = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v10[5] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v10[1] = (char *)v10 - v8;
  MEMORY[0x1E0C80A78](v7);
  v9 = type metadata accessor for MotionPersonStatus(0);
  if (*(_QWORD *)((*(uint64_t (**)(void))(**(_QWORD **)(v1 + *(int *)(v9 + 24)) + 136))() + 16))
    sub_1C069C818(0);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1C06E76B8()
{
  uint64_t v0;
  uint64_t v1;
  SEL *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  int *v20;
  uint64_t result;
  uint64_t v22;

  if ((v5 & 1) != 0)
  {
    v9 = 4.0;
  }
  else
  {
    v2 = (SEL *)&selRef_minutes;
    v9 = 0.0;
  }
  v10 = *(_QWORD *)(v8 - 136);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v11(v6, v7, v0);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, *v2);
  sub_1C0698FF4();
  sub_1C07470B4();
  v14 = *(_QWORD *)(v8 - 152);
  v11(v14, v6, v0);
  v15 = objc_msgSend(v12, sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 128) + 8);
  v16(v4, v1);
  v17 = *(_QWORD *)(v8 - 120);
  sub_1C0747390();
  v16(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v19 = *(_QWORD *)(v8 - 144);
  v18(v19, v14, v0);
  v20 = (int *)type metadata accessor for StatusRelevance();
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v19 + v20[5], v17, v0);
  *(double *)(v19 + v20[6]) = v9;
  *(_QWORD *)(v19 + v20[7]) = 0;
  v22 = v19 + v20[8];
  *(_QWORD *)v22 = 1;
  *(_QWORD *)(v22 + 8) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_BYTE *)(v22 + 32) = 1;
  return result;
}

void MotionPersonStatus.relevanceForLockScreenCircularAccessory.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  v10[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v10[4] = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1C07473E4();
  v10[3] = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v10[5] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v10[1] = (char *)v10 - v8;
  MEMORY[0x1E0C80A78](v7);
  v9 = type metadata accessor for MotionPersonStatus(0);
  if (*(_QWORD *)((*(uint64_t (**)(void))(**(_QWORD **)(v1 + *(int *)(v9 + 24)) + 136))() + 16))
    sub_1C069C818(0);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1C06E79F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  int *v19;
  uint64_t result;
  uint64_t v21;

  if ((v4 & 1) != 0)
    v8 = 6.0;
  else
    v8 = 0.0;
  v9 = *(_QWORD *)(v7 - 120);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v10(v5, v6, v0);
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_minutes);
  sub_1C0698FF4();
  sub_1C07470B4();
  v13 = *(_QWORD *)(v7 - 136);
  v10(v13, v5, v0);
  v14 = objc_msgSend(v11, sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 112) + 8);
  v15(v3, v1);
  v16 = *(_QWORD *)(v7 - 104);
  sub_1C0747390();
  v15(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v18 = *(_QWORD *)(v7 - 128);
  v17(v18, v13, v0);
  v19 = (int *)type metadata accessor for StatusRelevance();
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v18 + v19[5], v16, v0);
  *(double *)(v18 + v19[6]) = v8;
  *(double *)(v18 + v19[7]) = v8;
  v21 = v18 + v19[8];
  *(_QWORD *)v21 = 1;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  *(_BYTE *)(v21 + 32) = 1;
  return result;
}

uint64_t MessagePersonStatus.relevance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  id v22;
  id v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  int *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v33 - v17;
  if (*(uint64_t *)(v1 + 16) < 1)
  {
    if (qword_1EF61A288 != -1)
      swift_once();
    v31 = type metadata accessor for StatusRelevance();
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EF61B930);
    return sub_1C069845C(v32, a1);
  }
  else
  {
    v33 = v15;
    v36 = v16;
    v19 = v1 + *(int *)(type metadata accessor for MessagePersonStatus(0) + 24);
    v35 = v4;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v20(v18, v19, v10);
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(v21, sel_hours);
    v34 = v11;
    sub_1C0698FF4();
    sub_1C07470B4();
    v20(v15, (uint64_t)v18, v10);
    v23 = objc_msgSend(v21, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v24 = *(void (**)(char *, uint64_t))(v35 + 8);
    v24(v7, v3);
    v25 = v36;
    sub_1C0747390();
    v24(v9, v3);
    v26 = v34;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v10);
    v27 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 32);
    v27(a1, v33, v10);
    v28 = (int *)type metadata accessor for StatusRelevance();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v27)(a1 + v28[5], v25, v10);
    *(_QWORD *)(a1 + v28[6]) = 0x4020000000000000;
    *(_QWORD *)(a1 + v28[7]) = 0x4016000000000000;
    v30 = a1 + v28[8];
    *(_OWORD *)v30 = xmmword_1C074E7D0;
    *(_OWORD *)(v30 + 16) = xmmword_1C074E7E0;
    *(_BYTE *)(v30 + 32) = 0;
  }
  return result;
}

double MissedCallPersonStatus.relevance.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  double result;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v29 - v6;
  v8 = sub_1C07473E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  v29 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = type metadata accessor for MissedCallPersonStatus(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v16, v1 + *(int *)(v17 + 24), v8);
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_hours);
  sub_1C0698FF4();
  sub_1C07470B4();
  v18(v14, (uint64_t)v16, v8);
  v21 = objc_msgSend(v19, sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v22 = *(void (**)(char *, uint64_t))(v32 + 8);
  v22(v5, v2);
  v23 = v30;
  sub_1C0747390();
  v22(v7, v2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v25 = v31;
  v24(v31, v29, v8);
  v26 = (int *)type metadata accessor for StatusRelevance();
  v24(v25 + v26[5], v23, v8);
  *(_QWORD *)(v25 + v26[6]) = 0x4020000000000000;
  *(_QWORD *)(v25 + v26[7]) = 0x4016000000000000;
  v27 = v25 + v26[8];
  result = 0.13;
  *(_OWORD *)v27 = xmmword_1C074E7D0;
  *(_OWORD *)(v27 + 16) = xmmword_1C074E800;
  *(_BYTE *)(v27 + 32) = 0;
  return result;
}

uint64_t CalendarPersonStatus.relevance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void (*v38)(char *, uint64_t);
  void *v39;
  id v40;
  char *v41;
  double v42;
  double v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  void (*v53)(char *, uint64_t);
  void *v54;
  id v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  void *v61;
  id v62;
  char *v63;
  id v64;
  void (*v65)(char *, uint64_t);
  void (*v66)(uint64_t, char *, uint64_t);
  uint64_t v67;
  int *v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v2 = v1;
  v79 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v77 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v75 = (void (*)(char *, uint64_t, uint64_t))((char *)&v71 - v7);
  v8 = MEMORY[0x1E0C80A78](v6);
  v74 = (char *)&v71 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v71 - v13;
  v15 = sub_1C07473E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v71 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v78 = (char *)&v71 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v71 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v71 - v28;
  v30 = type metadata accessor for CalendarPersonStatus(0);
  v31 = *(unsigned __int8 *)(v2 + *(int *)(v30 + 24));
  v80 = v16;
  v76 = v30;
  if (!v31)
  {
    v48 = *(int *)(v30 + 20);
    v72 = v2;
    v49 = v2 + v48;
    v75 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v34 = v15;
    v75(v27, v49, v15);
    v50 = (void *)objc_opt_self();
    v51 = objc_msgSend(v50, sel_hours);
    sub_1C0698FF4();
    sub_1C07470B4();
    v52 = objc_msgSend(v50, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v53 = *(void (**)(char *, uint64_t))(v77 + 8);
    v53(v12, v3);
    sub_1C074739C();
    v53(v14, v3);
    v77 = *(_QWORD *)(v80 + 8);
    ((void (*)(char *, uint64_t))v77)(v27, v34);
    v54 = v50;
    v55 = objc_msgSend(v50, sel_hours);
    v56 = v74;
    sub_1C07470B4();
    if (*(_BYTE *)(v72 + *(int *)(v76 + 28)))
      v42 = 1.4;
    else
      v42 = 3.5;
    if (*(_BYTE *)(v72 + *(int *)(v76 + 28)))
      v43 = 3.2;
    else
      v43 = 8.0;
    v75(v27, (uint64_t)v29, v34);
    v57 = objc_msgSend(v54, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v45 = v80;
    v53(v14, v3);
    v46 = v78;
    sub_1C0747390();
    v53(v56, v3);
    v47 = v29;
    goto LABEL_17;
  }
  if (v31 == 1)
  {
    v32 = *(int *)(v30 + 20);
    v72 = v2;
    v33 = v2 + v32;
    v74 = *(char **)(v16 + 16);
    v34 = v15;
    ((void (*)(char *, uint64_t, uint64_t))v74)(v27, v33, v15);
    v35 = (void *)objc_opt_self();
    v36 = objc_msgSend(v35, sel_minutes);
    sub_1C0698FF4();
    sub_1C07470B4();
    v37 = objc_msgSend(v35, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v38 = *(void (**)(char *, uint64_t))(v77 + 8);
    v38(v12, v3);
    sub_1C074739C();
    v38(v14, v3);
    v77 = *(_QWORD *)(v80 + 8);
    ((void (*)(char *, uint64_t))v77)(v27, v34);
    v39 = v35;
    v40 = objc_msgSend(v35, sel_minutes);
    v41 = (char *)v75;
    sub_1C07470B4();
    if (*(_BYTE *)(v72 + *(int *)(v76 + 28)))
      v42 = 1.4;
    else
      v42 = 3.5;
    if (*(_BYTE *)(v72 + *(int *)(v76 + 28)))
      v43 = 3.2;
    else
      v43 = 8.0;
    ((void (*)(char *, char *, uint64_t))v74)(v27, v22, v34);
    v44 = objc_msgSend(v39, sel_seconds);
    sub_1C07470CC();

    sub_1C07470C0();
    v45 = v80;
    v38(v14, v3);
    v46 = v78;
    sub_1C0747390();
    v38(v41, v3);
    v47 = v22;
LABEL_17:
    ((void (*)(char *, uint64_t))v77)(v47, v34);
    goto LABEL_25;
  }
  v58 = v2;
  v59 = v2 + *(int *)(v30 + 20);
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v34 = v15;
  v60(v19, v59, v15);
  v61 = (void *)objc_opt_self();
  v62 = objc_msgSend(v61, sel_minutes);
  sub_1C0698FF4();
  v63 = v73;
  sub_1C07470B4();
  if (*(_BYTE *)(v58 + *(int *)(v76 + 28)))
    v42 = 3.2;
  else
    v42 = 8.0;
  if (*(_BYTE *)(v58 + *(int *)(v76 + 28)))
    v43 = 1.4;
  else
    v43 = 3.5;
  v60(v27, (uint64_t)v19, v34);
  v64 = objc_msgSend(v61, sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v45 = v80;
  v65 = *(void (**)(char *, uint64_t))(v77 + 8);
  v65(v14, v3);
  v46 = v78;
  sub_1C0747390();
  v65(v63, v3);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v34);
LABEL_25:
  v66 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v67 = v79;
  v66(v79, v27, v34);
  v68 = (int *)type metadata accessor for StatusRelevance();
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v66)(v67 + v68[5], v46, v34);
  *(double *)(v67 + v68[6]) = v42;
  *(double *)(v67 + v68[7]) = v43;
  v70 = v67 + v68[8];
  *(_QWORD *)v70 = 1;
  *(_QWORD *)(v70 + 8) = 0;
  *(_QWORD *)(v70 + 16) = 0;
  *(_QWORD *)(v70 + 24) = 0;
  *(_BYTE *)(v70 + 32) = 1;
  return result;
}

uint64_t dispatch thunk of RelevantStatus.relevance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RelevantStatus.relevanceForLockScreenCircularAccessory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

int *sub_1C06E88B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  char v14;
  void (*v15)(char *, uint64_t);
  int *result;
  unsigned int v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v6 = sub_1C07473E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  sub_1C069670C(a2, a3);
  v13 = a1;
  if (objc_msgSend(v13, sel_status) == 1)
  {
    sub_1C07473D8();
    BMScreenTimeRequestEvent.expirationDate.getter((uint64_t)v10);
    v14 = sub_1C0747384();
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    v15(v12, v6);

    if ((v14 & 1) != 0)
    {
      result = (int *)type metadata accessor for MessageDetails();
      *(_BYTE *)(a3 + result[11]) = 4;
      return result;
    }
  }
  else
  {

  }
  v17 = objc_msgSend(v13, sel_status);
  switch(v17)
  {
    case 3u:
      v18 = type metadata accessor for MessageDetails();
      *(_BYTE *)(a3 + *(int *)(v18 + 44)) = 2;
      result = (int *)objc_msgSend(v13, sel_approvalTime);
      if ((_DWORD)result == 3 || (_DWORD)result == 2 || (_DWORD)result == 1)
      {
        type metadata accessor for DaemonConnection();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v20 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v21 = sub_1C07471EC();
        v23 = v22;

        v24 = (uint64_t *)(a3 + *(int *)(v18 + 68));
        result = (int *)swift_bridgeObjectRelease();
        *v24 = v21;
        v24[1] = v23;
      }
      break;
    case 2u:
      result = (int *)type metadata accessor for MessageDetails();
      *(_BYTE *)(a3 + result[11]) = 3;
      break;
    case 1u:
      result = (int *)type metadata accessor for MessageDetails();
      *(_BYTE *)(a3 + result[11]) = 1;
      break;
    default:
      result = (int *)type metadata accessor for MessageDetails();
      *(_BYTE *)(a3 + result[11]) = 0;
      break;
  }
  return result;
}

uint64_t sub_1C06E8BFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 164) = a4;
  *(_QWORD *)(v4 + 72) = a2;
  *(_QWORD *)(v4 + 80) = a3;
  *(_QWORD *)(v4 + 64) = a1;
  v5 = sub_1C07473E4();
  *(_QWORD *)(v4 + 88) = v5;
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  *(_QWORD *)(v4 + 112) = type metadata accessor for MessageDetails();
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06E8C88()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  _QWORD *v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t (*v27)(void);
  uint64_t *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unsigned int v40;
  void *v41;
  uint64_t ObjCClassFromMetadata;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = objc_msgSend(*(id *)(v0 + 72), sel_requesterDSID);
  v2 = sub_1C0747930();
  v4 = v3;

  v5 = sub_1C0730B3C(v2, v4);
  LOBYTE(v2) = v6;
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD00000000000001CLL, 0x80000001C07548F0, 500);
    swift_willThrow();
  }
  else
  {
    v7 = *(int **)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(void **)(v0 + 72);
    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = 0xE000000000000000;
    *(_QWORD *)(v8 + 40) = 0;
    *(_QWORD *)(v8 + 48) = 0xE000000000000000;
    v76 = v8 + v7[8];
    sub_1C0747348();
    v10 = v8 + v7[9];
    *(_BYTE *)(v8 + v7[11]) = 0;
    v11 = v8 + v7[12];
    v12 = type metadata accessor for ResolvedFamily();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = (_QWORD *)(v8 + v7[13]);
    *v13 = 0;
    v13[1] = 0;
    *(_OWORD *)(v8 + v7[14]) = xmmword_1C074DB10;
    v14 = (_QWORD *)(v8 + v7[15]);
    *v14 = 0;
    v14[1] = 0;
    v15 = (_QWORD *)(v8 + v7[16]);
    *v15 = 0;
    v15[1] = 0;
    v16 = (_QWORD *)(v8 + v7[17]);
    *v16 = 0;
    v16[1] = 0xE000000000000000;
    v17 = (uint64_t *)(v8 + v7[18]);
    *v17 = 0;
    v17[1] = 0;
    v18 = v7[19];
    *(_DWORD *)(v0 + 160) = v18;
    v19 = (uint64_t *)(v8 + v18);
    *v19 = 0;
    v19[1] = 0xE000000000000000;
    v20 = (_QWORD *)(v8 + v7[20]);
    *v20 = 0;
    v20[1] = 0;
    v21 = (_QWORD *)(v8 + v7[21]);
    *v21 = 0;
    v21[1] = 0;
    *(_BYTE *)(v8 + 16) = 2;
    *(_QWORD *)v10 = v5;
    *(_BYTE *)(v10 + 8) = 0;
    v22 = objc_msgSend(v9, sel_responderDSID);
    v73 = v19;
    if (v22)
    {
      v23 = v22;
      v24 = sub_1C0747930();
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0;
    }
    v28 = *(uint64_t **)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 104);
    v74 = *(_QWORD *)(v0 + 96);
    v75 = *(_QWORD *)(v0 + 88);
    v30 = *(void **)(v0 + 72);
    v31 = (char *)v28 + *(int *)(*(_QWORD *)(v0 + 112) + 40);
    v32 = sub_1C0730B3C(v24, v26);
    v34 = v33;
    swift_bridgeObjectRelease();
    *(_QWORD *)v31 = v32;
    v31[8] = v34 & 1;
    v35 = objc_msgSend(v30, sel_requestID);
    v36 = sub_1C0747930();
    v38 = v37;

    *v28 = v36;
    v28[1] = v38;
    v39 = v30;
    BMScreenTimeRequestEvent.expirationDate.getter(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 40))(v76, v29, v75);

    v40 = objc_msgSend(v39, sel_kind);
    v41 = *(void **)(v0 + 72);
    if (v40 == 1)
    {
      swift_bridgeObjectRelease();
      *v17 = 0xD000000000000016;
      v17[1] = 0x80000001C07535A0;
      type metadata accessor for DaemonConnection();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v43 = (void *)objc_opt_self();
      v44 = objc_msgSend(v43, sel_bundleForClass_, ObjCClassFromMetadata);
      v45 = sub_1C07471EC();
      v47 = v46;

      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 24) = v45;
      *(_QWORD *)(v8 + 32) = v47;
      v48 = objc_msgSend(v41, sel_websitePath, 0x80000001C0754960);
      if (v48)
      {
        v49 = v48;
        v50 = sub_1C0747930();
      }
      else
      {
        v49 = objc_msgSend(v43, sel_bundleForClass_, ObjCClassFromMetadata);
        v50 = sub_1C07471EC();
      }
      v57 = v50;
      v58 = v51;

      swift_bridgeObjectRelease();
      *v73 = v57;
      v73[1] = v58;
      goto LABEL_19;
    }
    v52 = objc_msgSend(*(id *)(v0 + 72), sel_bundleID);
    if (v52)
    {
      v53 = v52;
      v54 = sub_1C0747930();
      v56 = v55;

    }
    else
    {
      v54 = 0;
      v56 = 0;
    }
    *(_QWORD *)(v0 + 128) = v56;
    v59 = *(unsigned __int8 *)(v0 + 164);
    sub_1C0746EF8();
    swift_bridgeObjectRelease();
    *v17 = v54;
    v17[1] = v56;
    type metadata accessor for DaemonConnection();
    v60 = swift_getObjCClassFromMetadata();
    *(_QWORD *)(v0 + 136) = v60;
    v61 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 144) = v61;
    v62 = objc_msgSend(v61, sel_bundleForClass_, v60);
    v63 = sub_1C07471EC();
    v65 = v64;

    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 24) = v63;
    *(_QWORD *)(v8 + 32) = v65;
    if (v59 != 1)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      v71 = *(_QWORD *)(v0 + 120);
      sub_1C06E88B0(*(void **)(v0 + 72), v71, *(_QWORD *)(v0 + 64));
      sub_1C0696AB4(v71);
      swift_task_dealloc();
      swift_task_dealloc();
      v27 = *(uint64_t (**)(void))(v0 + 8);
      return v27();
    }
    if (v56)
    {
      v66 = *(_QWORD **)(v0 + 80);
      v67 = v66[3];
      v68 = v66[4];
      __swift_project_boxed_opaque_existential_1(v66, v67);
      v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v68 + 24)
                                                                                + *(_QWORD *)(v68 + 24));
      v69 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v69;
      *v69 = v0;
      v69[1] = sub_1C06E92AC;
      return v77(v0 + 16, v54, v56, v67, v68);
    }
    v72 = *(_QWORD *)(v0 + 120);
    _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0xD000000000000023, 0x80000001C0754930, 500);
    swift_willThrow();
    sub_1C0696AB4(v72);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1C06E92AC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1C06E930C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  sub_1C0690F90(v3, v4);
  if (v2)
  {
    v5 = (_QWORD *)(*(_QWORD *)(v0 + 120) + *(int *)(v0 + 160));
    swift_bridgeObjectRelease();
    *v5 = v1;
    v5[1] = v2;
  }
  else
  {
    v6 = (uint64_t *)(*(_QWORD *)(v0 + 120) + *(int *)(v0 + 160));
    v7 = objc_msgSend(*(id *)(v0 + 144), sel_bundleForClass_, *(_QWORD *)(v0 + 136));
    v8 = sub_1C07471EC();
    v10 = v9;

    swift_bridgeObjectRelease();
    *v6 = v8;
    v6[1] = v10;
  }
  v11 = *(_QWORD *)(v0 + 120);
  sub_1C06E88B0(*(void **)(v0 + 72), v11, *(_QWORD *)(v0 + 64));
  sub_1C0696AB4(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void Logger.ifError(_:message:)(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6E8);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C074B820;
    swift_getErrorValue();
    v3 = a1;
    v4 = sub_1C07482FC();
    v6 = v5;
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v2 + 64) = sub_1C06C0F1C();
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v6;
    v7 = sub_1C0747948();
    v9 = v8;
    sub_1C0746EF8();
    v10 = sub_1C0747708();
    v11 = sub_1C0747D74();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v14 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_1C0746EF8();
      sub_1C069092C(v7, v9, &v14);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v10, v11, "%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v13, -1, -1);
      MEMORY[0x1C3BA0D04](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1C06E965C(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1ED4FF8B0);
}

uint64_t static PeopleLogger.common.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1ED4FF8D0, (uint64_t)qword_1ED4FF8B0, a1);
}

uint64_t sub_1C06E9694(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D310);
}

uint64_t static PeopleLogger.viewService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A368, (uint64_t)qword_1EF61D310, a1);
}

uint64_t sub_1C06E96D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C0747720();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1C06E9740(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1ED4FE9F0);
}

uint64_t static PeopleLogger.extension.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(qword_1ED4FEA10, (uint64_t)qword_1ED4FE9F0, a1);
}

uint64_t sub_1C06E9780(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1ED4FE9D8);
}

uint64_t static PeopleLogger.daemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1ED4FE9A8, (uint64_t)qword_1ED4FE9D8, a1);
}

uint64_t sub_1C06E97B8(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D328);
}

uint64_t static PeopleLogger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A370, (uint64_t)qword_1EF61D328, a1);
}

uint64_t sub_1C06E97EC(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D340);
}

uint64_t static PeopleLogger.indexer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A378, (uint64_t)qword_1EF61D340, a1);
}

uint64_t sub_1C06E9828(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D358);
}

uint64_t static PeopleLogger.statuses.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(qword_1EF61A380, (uint64_t)qword_1EF61D358, a1);
}

uint64_t sub_1C06E9864(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1ED4FFF50);
}

uint64_t static PeopleLogger.featureFlags.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1ED4FFF68, (uint64_t)qword_1ED4FFF50, a1);
}

uint64_t sub_1C06E98A8(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D370);
}

uint64_t static PeopleLogger.internalOverrides.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A390, (uint64_t)qword_1EF61D370, a1);
}

uint64_t sub_1C06E98E8(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D388);
}

uint64_t static PeopleLogger.messages.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A398, (uint64_t)qword_1EF61D388, a1);
}

uint64_t sub_1C06E9924(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D3A0);
}

uint64_t static PeopleLogger.legacy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A3A0, (uint64_t)qword_1EF61D3A0, a1);
}

uint64_t sub_1C06E995C(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D3B8);
}

uint64_t static PeopleLogger.askTo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A3A8, (uint64_t)qword_1EF61D3B8, a1);
}

uint64_t sub_1C06E9994(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D3D0);
}

uint64_t static PeopleLogger.location.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A3B0, (uint64_t)qword_1EF61D3D0, a1);
}

uint64_t sub_1C06E99D0(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D3E8);
}

uint64_t static PeopleLogger.timer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A3B8, (uint64_t)qword_1EF61D3E8, a1);
}

uint64_t sub_1C06E9A08(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1ED4FF060);
}

uint64_t static PeopleLogger.biome.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(qword_1ED4FECD0, (uint64_t)qword_1ED4FF060, a1);
}

uint64_t sub_1C06E9A40(uint64_t a1)
{
  return sub_1C06E9A60(a1, qword_1EF61D400);
}

uint64_t sub_1C06E9A60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1C0747720();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C0747714();
}

uint64_t static PeopleLogger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C06E96D8(&qword_1EF61A3C8, (uint64_t)qword_1EF61D400, a1);
}

uint64_t sub_1C06E9AF0()
{
  uint64_t result;

  sub_1C06E9D34();
  result = sub_1C0747E1C();
  qword_1EF61D418 = result;
  return result;
}

id static PeopleLogger.signpost.getter()
{
  if (qword_1EF61A3D0 != -1)
    swift_once();
  return (id)qword_1EF61D418;
}

void Logger.ifErrorElse(_:message:debug:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (a1)
  {
    Logger.ifError(_:message:)(a1);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    oslog = sub_1C0747708();
    v7 = sub_1C0747D68();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v11 = v9;
      *(_DWORD *)v8 = 136315138;
      sub_1C0746EF8();
      sub_1C069092C(a4, a5, &v11);
      sub_1C0747E40();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, oslog, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v9, -1, -1);
      MEMORY[0x1C3BA0D04](v8, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

ValueMetadata *type metadata accessor for PeopleLogger()
{
  return &type metadata for PeopleLogger;
}

unint64_t sub_1C06E9D34()
{
  unint64_t result;

  result = qword_1EF61D420;
  if (!qword_1EF61D420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF61D420);
  }
  return result;
}

id SpotlightFeedbackListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SpotlightFeedbackListener.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightFeedbackListener();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SpotlightFeedbackListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightFeedbackListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C06E9E58(unsigned int a1)
{
  if (a1 > 9)
    return 0x656E696665646E55;
  else
    return *(_QWORD *)&aUnknown_8[8 * a1];
}

void _s6People25SpotlightFeedbackListenerC17didPerformCommandyySo019SFCommandEngagementC0CFZ_0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  id v12;
  uint64_t ObjectType;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t inited;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  id v27;
  uint64_t v28;

  v2 = objc_msgSend(a1, sel_command);
  objc_opt_self();
  v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_applicationBundleIdentifier);
    if (v4)
    {
      v5 = v4;
      v6 = sub_1C0747930();
      v8 = v7;

LABEL_11:
      if (qword_1ED4FF8D0 != -1)
        swift_once();
      v15 = sub_1C0747720();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED4FF8B0);
      swift_bridgeObjectRetain_n();
      v16 = sub_1C0747708();
      v17 = sub_1C0747D5C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v28 = v19;
        *(_DWORD *)v18 = 136315138;
        sub_1C0746EF8();
        sub_1C069092C(v6, v8, &v28);
        sub_1C0747E40();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0671000, v16, v17, "Engagement feedback command %s performed. Sending event to CA.", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA0D04](v19, -1, -1);
        MEMORY[0x1C3BA0D04](v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (qword_1ED4FFC40 != -1)
        swift_once();
      LOBYTE(v28) = 13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C074B820;
      *(_QWORD *)(inited + 32) = 0x6C436E6F69746361;
      *(_QWORD *)(inited + 40) = 0xEB00000000737361;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 80) = &protocol witness table for String;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v8;
      sub_1C0746EF8();
      v21 = sub_1C06F5C3C(inited);
      sub_1C070E1AC((char *)&v28, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }

  v26 = objc_msgSend(a1, sel_command);
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {

    v12 = objc_msgSend(a1, sel_command);
    ObjectType = swift_getObjectType();

    v28 = ObjectType;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EF61D450);
    v6 = sub_1C074796C();
    v8 = v14;
    goto LABEL_11;
  }
  v10 = v9;
  if ((objc_msgSend(v9, sel_didDisplayHandleOptions) & 1) == 0
    && !objc_msgSend(v10, sel_didSelectFromOptionsMenu)
    || objc_msgSend(v10, sel_didDisplayHandleOptions, v26)
    && (objc_msgSend(v10, sel_didSelectFromOptionsMenu) & 1) != 0)
  {
    v6 = sub_1C06E9E58(objc_msgSend(v10, sel_contactActionType, v26));
    v8 = v11;

    goto LABEL_11;
  }
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v22 = sub_1C0747720();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED4FF8B0);
  v23 = sub_1C0747708();
  v24 = sub_1C0747D68();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1C0671000, v23, v24, "Menu disambiguation, not logging these actions", v25, 2u);
    MEMORY[0x1C3BA0D04](v25, -1, -1);
  }

}

uint64_t type metadata accessor for SpotlightFeedbackListener()
{
  return objc_opt_self();
}

uint64_t sub_1C06EA348(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v18 = a5;
  v19 = a6;
  v20 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4F0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a3;
  v14 = a3(0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0685BDC();
  sub_1C0748398();
  v23 = v14;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1C0747984();
  v22 = 0;
  sub_1C0748200();
  if (v6)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = 1;
    sub_1C0684D6C(v18, v17, v19);
    sub_1C0748224();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1C06EA4D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ChildStatePersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E8);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A908, type metadata accessor for ChildStatePersonStatus, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A918, type metadata accessor for ChildStatePersonStatus, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EA714@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CalendarPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4F8);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61D500, type metadata accessor for CalendarPersonStatus, (uint64_t)&protocol conformance descriptor for CalendarPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A9F8, type metadata accessor for CalendarPersonStatus, (uint64_t)&protocol conformance descriptor for CalendarPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EA958@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MissedCallPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D508);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A9B8, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A9C8, type metadata accessor for MissedCallPersonStatus, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EAB9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MessagePersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D510);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A990, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A9A0, type metadata accessor for MessagePersonStatus, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EADE0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MotionPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D518);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A970, type metadata accessor for MotionPersonStatus, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A980, type metadata accessor for MotionPersonStatus, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EB024@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocationPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D520);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A948, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A958, type metadata accessor for LocationPersonStatus, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EB268@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AvailabilityPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D528);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A928, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A938, type metadata accessor for AvailabilityPersonStatus, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EB4AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D530);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A8E8, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A8F8, type metadata accessor for ScreenTimeRequestPersonStatus, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EB6F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _QWORD v18[2];
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AskToBuyRequestPersonStatus(0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0685BDC();
  result = sub_1C074838C();
  if (!v2)
  {
    v20 = 0;
    v11 = sub_1C07481D0();
    v13 = v12;
    v18[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D538);
    v14 = sub_1C0747984();
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1C0748284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C068A56C();
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    v19 = 1;
    a2[3] = v9;
    a2[4] = sub_1C0684D6C(&qword_1EF61A8C8, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
    __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_1C0684D6C(&qword_1EF61A8D8, type metadata accessor for AskToBuyRequestPersonStatus, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
    sub_1C07481F4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C06EB938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v4;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = *(_QWORD *)(v8 + 80);
  v9[3] = *(_QWORD *)(v8 + 88);
  v9[4] = a4;
  v9[5] = a2;
  v9[6] = a3;
  swift_beginAccess();
  swift_getFunctionTypeMetadata2();
  sub_1C0747BDC();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0747BB8();
  swift_endAccess();
  return sub_1C0747030();
}

uint64_t sub_1C06EBA28(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B168);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ChildStatePersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for ChildStatePersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for ChildStatePersonStatus, &qword_1EF61D4E8, &qword_1EF61A920, (uint64_t)&protocol conformance descriptor for ChildStatePersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for ChildStatePersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B168);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EBBD4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B178);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CalendarPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for CalendarPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for CalendarPersonStatus, &qword_1EF61D4F8, &qword_1EF61AA00, (uint64_t)&protocol conformance descriptor for CalendarPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for CalendarPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B178);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EBD80(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B180);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for MissedCallPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for MissedCallPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for MissedCallPersonStatus, &qword_1EF61D508, &qword_1EF61A9D0, (uint64_t)&protocol conformance descriptor for MissedCallPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for MissedCallPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B180);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EBF2C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B188);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for MessagePersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for MessagePersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for MessagePersonStatus, &qword_1EF61D510, &qword_1EF61A9A8, (uint64_t)&protocol conformance descriptor for MessagePersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for MessagePersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B188);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EC0D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B190);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for MotionPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for MotionPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for MotionPersonStatus, &qword_1EF61D518, &qword_1EF61A988, (uint64_t)&protocol conformance descriptor for MotionPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for MotionPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B190);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EC284(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B198);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for LocationPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for LocationPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for LocationPersonStatus, &qword_1EF61D520, &qword_1EF61A960, (uint64_t)&protocol conformance descriptor for LocationPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for LocationPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B198);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EC430(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B1A0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for AvailabilityPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for AvailabilityPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for AvailabilityPersonStatus, &qword_1EF61D528, &qword_1EF61A940, (uint64_t)&protocol conformance descriptor for AvailabilityPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for AvailabilityPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B1A0);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EC5DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B1A8);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ScreenTimeRequestPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for ScreenTimeRequestPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for ScreenTimeRequestPersonStatus, &qword_1EF61D530, &qword_1EF61A900, (uint64_t)&protocol conformance descriptor for ScreenTimeRequestPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for ScreenTimeRequestPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B1A8);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EC788(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v14[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B1B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for AskToBuyRequestPersonStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C068A530(a1, (uint64_t)v14);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1C068A658((uint64_t)v6, (uint64_t)v10, type metadata accessor for AskToBuyRequestPersonStatus);
    sub_1C06EA348((uint64_t)v10, a2, type metadata accessor for AskToBuyRequestPersonStatus, &qword_1EF61D538, &qword_1EF61A8E0, (uint64_t)&protocol conformance descriptor for AskToBuyRequestPersonStatus);
    return sub_1C0685150((uint64_t)v10, type metadata accessor for AskToBuyRequestPersonStatus);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_1C068A9AC((uint64_t)v6, &qword_1EF61B1B0);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06EC934(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _BYTE v23[32];

  v21 = a4;
  v22 = a3;
  v10 = sub_1C0747E28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C068A530(a1, (uint64_t)v23);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if ((v18 & 1) != 0)
  {
    v19(v14, 0, 1, a7);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a7);
    v22(v17, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, a7);
  }
  else
  {
    v19(v14, 1, 1, a7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    sub_1C068A56C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1C06ECACC()
{
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C06ECAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C06EC934(a1, a2, *(void (**)(char *, uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1C06ECB10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v2;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = *(_QWORD *)(v5 + 80);
  v6[3] = *(_QWORD *)(v5 + 88);
  v6[4] = a1;
  v6[5] = a2;
  swift_beginAccess();
  swift_getFunctionTypeMetadata2();
  sub_1C0747BDC();
  sub_1C0746F64();
  sub_1C0746F64();
  sub_1C0747BB8();
  swift_endAccess();
  return sub_1C0747030();
}

uint64_t sub_1C06ECBF4@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EB6F0(a1, a2);
}

uint64_t sub_1C06ECC0C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EB4AC(a1, a2);
}

uint64_t sub_1C06ECC24@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EB268(a1, a2);
}

uint64_t sub_1C06ECC3C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EB024(a1, a2);
}

uint64_t sub_1C06ECC54@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EADE0(a1, a2);
}

uint64_t sub_1C06ECC6C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EAB9C(a1, a2);
}

uint64_t sub_1C06ECC84@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EA958(a1, a2);
}

uint64_t sub_1C06ECC9C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EA714(a1, a2);
}

uint64_t sub_1C06ECCB4@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C06EA4D0(a1, a2);
}

uint64_t sub_1C06ECCCC()
{
  sub_1C0747030();
  return swift_deallocObject();
}

uint64_t sub_1C06ECCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 32))(a2);
}

uint64_t sub_1C06ECD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *__return_ptr, id *, uint64_t);
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v18;
  uint64_t v19;
  id v20[3];
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  swift_beginAccess();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
  if (v8)
  {
    v9 = sub_1C0746EF8() + 40;
    while (1)
    {
      v10 = *(void (**)(uint64_t *__return_ptr, id *, uint64_t))(v9 - 8);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
      v20[0] = (id)swift_allocObject();
      sub_1C0685C78(a1, (uint64_t)v20[0] + 16);
      sub_1C0746F64();
      v11 = v4;
      v10(&v22, v20, a2);
      if (!v4)
      {
        sub_1C0747030();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        return v22;
      }
      v4 = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      v20[0] = v11;
      v12 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
      if (!swift_dynamicCast())
        break;
      sub_1C0747030();

      v9 += 16;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();

    sub_1C0747030();
  }
  else
  {
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
    v21 = v13;
    v20[0] = (id)swift_allocObject();
    sub_1C0685C78(a1, (uint64_t)v20[0] + 16);
    v19 = v13;
    *(_QWORD *)&v18 = swift_allocObject();
    sub_1C0685C78(a2, v18 + 16);
    sub_1C0685CBC();
    v14 = (void *)swift_allocError();
    v16 = v15;
    sub_1C0685D00(v20, v15);
    sub_1C0685D00(&v18, v16 + 2);

  }
  return 0;
}

void sub_1C06ECF50(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  void *v5;
  void *v6;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(id *, __int128 *);
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  id v37[3];
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v6 = v5;
  v11 = a2[2];
  v42 = a2[3];
  v43 = *((_QWORD *)a2 + 8);
  v12 = *a2;
  v40 = a2[1];
  v41 = v11;
  v39 = v12;
  swift_beginAccess();
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
  if (v13)
  {
    v14 = sub_1C0746EF8() + 40;
    while (1)
    {
      v15 = *(void (**)(id *, __int128 *))(v14 - 8);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
      v37[0] = (id)swift_allocObject();
      sub_1C0685C78(a1, (uint64_t)v37[0] + 16);
      sub_1C0746F64();
      v16 = v6;
      v15(v37, &v39);
      if (!v6)
      {
        sub_1C0747030();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
        return;
      }
      v6 = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
      v37[0] = v16;
      v17 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
      if (!swift_dynamicCast())
        break;
      sub_1C0747030();

      v14 += 16;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();

    v34 = *a4;
    v29 = a4[2];
    v31 = a4[1];
    v27 = a4[3];
    v25 = *((_QWORD *)a4 + 8);

    sub_1C0747030();
    *(_OWORD *)a5 = v34;
    *(_OWORD *)(a5 + 16) = v31;
    *(_OWORD *)(a5 + 32) = v29;
    v26 = v27;
  }
  else
  {
LABEL_7:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
    v37[0] = (id)swift_allocObject();
    sub_1C0685C78(a1, (uint64_t)v37[0] + 16);
    v36 = MEMORY[0x1E0DEDF58];
    v18 = swift_allocObject();
    *(_QWORD *)&v35 = v18;
    v19 = v43;
    v20 = v40;
    *(_OWORD *)(v18 + 16) = v39;
    *(_OWORD *)(v18 + 32) = v20;
    v21 = v42;
    *(_OWORD *)(v18 + 48) = v41;
    *(_OWORD *)(v18 + 64) = v21;
    *(_QWORD *)(v18 + 80) = v19;
    sub_1C0685CBC();
    v22 = (void *)swift_allocError();
    v24 = v23;
    sub_1C0685D00(v37, v23);
    sub_1C0685D00(&v35, v24 + 2);
    v32 = a4[1];
    v33 = *a4;
    v28 = a4[3];
    v30 = a4[2];
    v25 = *((_QWORD *)a4 + 8);

    *(_OWORD *)a5 = v33;
    *(_OWORD *)(a5 + 16) = v32;
    *(_OWORD *)(a5 + 32) = v30;
    v26 = v28;
  }
  *(_OWORD *)(a5 + 48) = v26;
  *(_QWORD *)(a5 + 64) = v25;
}

uint64_t sub_1C06ED240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(id *, uint64_t);
  id v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v15;
  uint64_t v16;
  id v17[3];
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  swift_beginAccess();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
  if (v8)
  {
    v19 = sub_1C0746EF8();
    v9 = v19 + 40;
    while (1)
    {
      v10 = *(void (**)(id *, uint64_t))(v9 - 8);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
      v17[0] = (id)swift_allocObject();
      sub_1C0685C78(a1, (uint64_t)v17[0] + 16);
      sub_1C0746F64();
      v10(v17, a2);
      if (!v4)
      {
        sub_1C0747030();
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      v17[0] = v4;
      v11 = v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
      if (!swift_dynamicCast())
        break;
      sub_1C0747030();

      v4 = 0;
      v9 += 16;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();

    swift_willThrow();
    return sub_1C0747030();
  }
  else
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A618);
    v17[0] = (id)swift_allocObject();
    sub_1C0685C78(a1, (uint64_t)v17[0] + 16);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D4D8);
    *(_QWORD *)&v15 = swift_allocObject();
    sub_1C0685C78(a2, v15 + 16);
    sub_1C0685CBC();
    swift_allocError();
    v13 = v12;
    sub_1C0685D00(v17, v12);
    sub_1C0685D00(&v15, v13 + 2);
    return swift_willThrow();
  }
}

void sub_1C06ED478(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void *)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t FunctionTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(id *, uint64_t);
  uint64_t v18;
  BOOL v19;
  uint64_t *boxed_opaque_existential_1Tm;
  void *v21;
  void *v22;
  id v23;
  uint64_t *v24;
  uint64_t *v25;
  void *v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  void (*v30)(void *);
  __int128 v34;
  uint64_t v35;
  id v36[3];
  uint64_t v37;
  uint64_t v38;

  v7 = v6;
  v38 = a5;
  v9 = *v5;
  swift_beginAccess();
  v10 = v5[2];
  v11 = *(_QWORD *)(v9 + 80);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2();
  v13 = sub_1C0746EF8();
  if (MEMORY[0x1C3B9FE28](v13, FunctionTypeMetadata2))
  {
    v29 = v11;
    v30 = a3;
    v14 = 0;
    v15 = v10 + 40;
    while (1)
    {
      v16 = sub_1C0747B94();
      sub_1C0747B4C();
      if ((v16 & 1) == 0)
        break;
      v17 = *(void (**)(id *, uint64_t))(v15 - 8);
      v18 = v14 + 1;
      v19 = __OFADD__(v14, 1);
      sub_1C0746F64();
      if (v19)
        goto LABEL_17;
      v37 = a4;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)v36);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a4);
      v21 = v7;
      v17(v36, a2);
      v22 = v7;
      if (!v7)
      {
        sub_1C0747030();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        return;
      }
      v7 = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
      v36[0] = v21;
      v23 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
      if (!swift_dynamicCast())
      {
        swift_bridgeObjectRelease();

        v30(v21);
        sub_1C0747030();
        return;
      }
      sub_1C0747030();

      ++v14;
      v15 += 16;
      if (v18 == MEMORY[0x1C3B9FE28](v10, FunctionTypeMetadata2))
      {
        swift_bridgeObjectRelease();
        a3 = v30;
        v11 = v29;
        goto LABEL_13;
      }
    }
    sub_1C074802C();
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v37 = a4;
    v24 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)v36);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v24, a1, a4);
    v35 = v11;
    v25 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v34);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v25, a2, v11);
    sub_1C0685CBC();
    v26 = (void *)swift_allocError();
    v28 = v27;
    sub_1C0685D00(v36, v27);
    sub_1C0685D00(&v34, v28 + 2);
    a3(v26);

  }
}

_OWORD *ChainOfResponsibilityError.InvalidArguments.init(input:argument:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_1C0685D00(a1, a3);
  return sub_1C0685D00(a2, a3 + 2);
}

uint64_t ChainOfResponsibility.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChainOfResponsibility.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ChainOfResponsibilityError.InvalidArguments.input.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C068A530(v1, a1);
}

uint64_t ChainOfResponsibilityError.InvalidArguments.argument.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C068A530(v1 + 32, a1);
}

uint64_t sub_1C06ED7FC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ChainOfResponsibility(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ChainOfResponsibility);
}

uint64_t method lookup function for ChainOfResponsibility()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChainOfResponsibility.register<A>(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ChainOfResponsibility.register(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ChainOfResponsibility.process<A>(_:_:recover:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

ValueMetadata *type metadata accessor for ChainOfResponsibilityError()
{
  return &type metadata for ChainOfResponsibilityError;
}

ValueMetadata *type metadata accessor for ChainOfResponsibilityError.InvalidHandler()
{
  return &type metadata for ChainOfResponsibilityError.InvalidHandler;
}

uint64_t destroy for ChainOfResponsibilityError.InvalidArguments(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
}

uint64_t initializeWithCopy for ChainOfResponsibilityError.InvalidArguments(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  return a1;
}

uint64_t *assignWithCopy for ChainOfResponsibilityError.InvalidArguments(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  __swift_assign_boxed_opaque_existential_0(a1 + 4, a2 + 4);
  return a1;
}

_OWORD *assignWithTake for ChainOfResponsibilityError.InvalidArguments(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 2));
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ChainOfResponsibilityError.InvalidArguments(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChainOfResponsibilityError.InvalidArguments(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChainOfResponsibilityError.InvalidArguments()
{
  return &type metadata for ChainOfResponsibilityError.InvalidArguments;
}

uint64_t sub_1C06EDA44()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C06EDA68()
{
  return swift_deallocObject();
}

uint64_t sub_1C06EDA7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = type metadata accessor for StatusRelevance();
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07473E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v17 = v1;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF85C(0, v9, 0);
    v11 = (_QWORD *)(a1 + 32);
    do
    {
      v13 = v11[3];
      v12 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v13);
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v18 + 20)], v5);
      sub_1C06F31B8((uint64_t)v4);
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C06BF85C(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v19;
      }
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C06BF85C(v14 > 1, v15 + 1, 1);
        v10 = v19;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, v8, v5);
      v19 = v10;
      v11 += 5;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C06EDC58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = type metadata accessor for StatusRelevance();
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07473E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v17 = v1;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF85C(0, v9, 0);
    v11 = (_QWORD *)(a1 + 32);
    do
    {
      v13 = v11[3];
      v12 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v13);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v18 + 20)], v5);
      sub_1C06F31B8((uint64_t)v4);
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C06BF85C(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v19;
      }
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C06BF85C(v14 > 1, v15 + 1, 1);
        v10 = v19;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, v8, v5);
      v19 = v10;
      v11 += 5;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C06EDE34(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF888(0, v1, 0);
    v2 = v12;
    v4 = type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = *(_QWORD *)(v6 + *(int *)(v4 + 24));
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      if (v10 >= v9 >> 1)
        sub_1C06BF888(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v12 + 16) = v10 + 1;
      *(_QWORD *)(v12 + 8 * v10 + 32) = v8;
      v6 += v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t StatusPrioritizer.TimeLineEntrySingleItem.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StatusPrioritizer.TimeLineEntrySingleItem.statuses.getter()
{
  type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  return sub_1C0746EF8();
}

uint64_t type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem()
{
  uint64_t result;

  result = qword_1EF61D5C0;
  if (!qword_1EF61D5C0)
    return swift_getSingletonMetadata();
  return result;
}

double StatusPrioritizer.TimeLineEntrySingleItem.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem() + 24));
}

double StatusPrioritizer.TimeLineEntrySingleItem.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem() + 28));
}

uint64_t StatusPrioritizer.TimeLineEntryMultipleItems.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07473E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StatusPrioritizer.TimeLineEntryMultipleItems.items.getter()
{
  return sub_1C0746EF8();
}

double StatusPrioritizer.TimeLineEntryMultipleItems.score.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32));
}

double StatusPrioritizer.TimeLineEntryMultipleItems.duration.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

int *sub_1C06EE054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *result;

  v12 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a4, a1, v12);
  result = (int *)type metadata accessor for StatusPrioritizer.TimeLineEntryMultipleItems(0, a3, v13, v14);
  *(_QWORD *)(a4 + result[7]) = a2;
  *(double *)(a4 + result[8]) = a5;
  *(double *)(a4 + result[9]) = a6;
  return result;
}

uint64_t StatusPrioritizer.TimeLine.entries.getter()
{
  return sub_1C0746EF8();
}

uint64_t StatusPrioritizer.TimeLine.reloadDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C06F31F4(v2 + *(int *)(a1 + 28), a2, &qword_1EF61BC58);
}

uint64_t StatusPrioritizer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StatusPrioritizer.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C06EE120(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v7[24];
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;

  v9[16] = a3;
  v10 = a2;
  sub_1C0746EF8();
  v7[16] = a3;
  v8 = a2;
  v11 = sub_1C0691504((uint64_t)sub_1C06EE298, (uint64_t)v9, a1);
  sub_1C0746EF8();
  sub_1C06F0CEC((uint64_t (*)(__int128 *, _BYTE *))sub_1C06EE600, (uint64_t)v7);
  swift_bridgeObjectRelease();
  return v11;
}

BOOL sub_1C06EE1BC(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v15;

  v6 = type metadata accessor for StatusRelevance();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = 8;
  if ((a2 & 1) != 0)
    v11 = 16;
  (*(void (**)(uint64_t, uint64_t))(v10 + v11))(v9, v10);
  StatusRelevance.score(at:)(a3);
  v13 = v12;
  sub_1C06F31B8((uint64_t)v8);
  return v13 > 0.0;
}

BOOL sub_1C06EE298(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C06EE1BC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C06EE2B8(_QWORD *a1, _QWORD *a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v8 = sub_1C07473E4();
  v47 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v44 - v11;
  v12 = type metadata accessor for StatusRelevance();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v44 - v16;
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  if ((a3 & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    StatusRelevance.score(at:)(a4);
    v21 = v32;
    sub_1C06F31B8((uint64_t)v17);
    v33 = a2[3];
    v34 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v33);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
    StatusRelevance.score(at:)(a4);
    v25 = v35;
    sub_1C06F31B8((uint64_t)v17);
    if (v21 == v25)
    {
      v36 = a1[3];
      v37 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v36);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
      v28 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v29 = v46;
      v28(v46, v17, v8);
      sub_1C06F31B8((uint64_t)v17);
      v38 = a2[3];
      v39 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v38);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
      goto LABEL_6;
    }
LABEL_7:
    v41 = v25 < v21;
    return v41 & 1;
  }
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  StatusRelevance.score(at:)(a4);
  v21 = v20;
  sub_1C06F31B8((uint64_t)v17);
  v22 = a2[3];
  v23 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  StatusRelevance.score(at:)(a4);
  v25 = v24;
  sub_1C06F31B8((uint64_t)v17);
  if (v21 != v25)
    goto LABEL_7;
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  v28 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v29 = v46;
  v28(v46, v17, v8);
  sub_1C06F31B8((uint64_t)v17);
  v30 = a2[3];
  v31 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
LABEL_6:
  v40 = v45;
  v28(v45, v15, v8);
  sub_1C06F31B8((uint64_t)v15);
  v41 = sub_1C0747378();
  v42 = *(void (**)(char *, uint64_t))(v47 + 8);
  v42(v40, v8);
  v42(v29, v8);
  return v41 & 1;
}

uint64_t sub_1C06EE600(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1C06EE2B8(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24)) & 1;
}

uint64_t sub_1C06EE620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  double v14;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1C06F0120(a1, a2, a3, a4, v14);
}

uint64_t sub_1C06EE728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  double v17;
  double v18;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v22 = a6;
  v21 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1C07470CC();

  sub_1C07470C0();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return sub_1C06EE844(a1, a2, a3, a4, v21, v22, a7, v18);
}

uint64_t sub_1C06EE844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>, double a8@<D0>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *TupleTypeMetadata2;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  id v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v95[2];
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  _OWORD v121[2];

  LODWORD(v112) = a5;
  v113 = a2;
  v107 = a7;
  v99 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v98 = *(_QWORD *)(v99 - 8);
  v13 = MEMORY[0x1E0C80A78](v99);
  v96 = (char *)v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v97 = (char *)v95 - v15;
  v109 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D540);
  MEMORY[0x1E0C80A78](v109);
  v110 = (char *)v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  v18 = MEMORY[0x1E0C80A78](v17);
  v106 = (char *)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v95 - v20;
  v22 = sub_1C07473E4();
  v23 = *(_QWORD *)(v22 - 8);
  v114 = v22;
  v115 = v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v102 = (char *)v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v111 = (char *)v95 - v27;
  MEMORY[0x1E0C80A78](v26);
  v100 = (char *)v95 - v28;
  *(_QWORD *)&v121[0] = a1;
  v116 = a6;
  v117 = a3;
  v29 = a3;
  v108 = a4;
  v118 = a4;
  v30 = sub_1C0747BDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D548);
  v31 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF38], v30);
  sub_1C06C5C1C(&qword_1EF61D550, &qword_1EF61D548, v31);
  v32 = 0;
  v33 = sub_1C0747AA4();
  v105 = v33;
  v104 = a1;
  v101 = v30;
  v103 = a6;
  v95[0] = v95;
  *(_QWORD *)&v121[0] = a1;
  if ((v112 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v33);
    v95[-4] = a6;
    v95[-3] = v29;
    v34 = v108;
    v95[-2] = v108;
    v35 = sub_1C0747AA4();
    v36 = sub_1C06EDA7C(v35);
  }
  else
  {
    MEMORY[0x1E0C80A78](v33);
    v95[-4] = a6;
    v95[-3] = v29;
    v34 = v108;
    v95[-2] = v108;
    v37 = sub_1C0747AA4();
    v36 = sub_1C06EDC58(v37);
  }
  v38 = v36;
  v39 = v34;
  swift_bridgeObjectRelease();
  sub_1C06EF348(v38, v21);
  swift_bridgeObjectRelease();
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48))(v21, 1, v114);
  v41 = (uint64_t)v110;
  v42 = (uint64_t)v109;
  if (v40 == 1)
  {
    v43 = v114;
    swift_bridgeObjectRelease();
    sub_1C068A9AC((uint64_t)v21, &qword_1EF61BC58);
LABEL_12:
    v64 = v103;
    v65 = type metadata accessor for StatusPrioritizer.TimeLineEntryMultipleItems(255, v103, v44, v45);
    sub_1C0748254();
    swift_allocObject();
    v110 = (char *)sub_1C0747B40();
    v112 = v66;
    v67 = (uint64_t)v111;
    v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 16))(v111, v113, v43);
    v109 = v95;
    *(_QWORD *)&v121[0] = v104;
    MEMORY[0x1E0C80A78](v68);
    v95[-2] = v64;
    TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
    v70 = v101;
    v71 = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF50], v101);
    v73 = sub_1C06DB9E0((void (*)(char *, char *))sub_1C06F0D8C, (uint64_t)&v95[-4], v70, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v71, MEMORY[0x1E0DEDD18], v72);
    v74 = v102;
    sub_1C0747354();
    sub_1C0747360();
    v76 = v75;
    v77 = v43;
    v78 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v77);
    sub_1C06EE054(v67, v73, v64, v112, 0.0, v76);
    sub_1C0747BDC();
    v79 = 1;
    v80 = (uint64_t)v106;
    goto LABEL_17;
  }
  v46 = v100;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v100, v21, v114);
  v47 = v113;
  if ((sub_1C0747384() & 1) == 0)
  {
    v43 = v114;
    (*(void (**)(char *))(v115 + 8))(v46);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v48 = v111;
  sub_1C0747390();
  v49 = v114;
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16);
  v50(v41, v47, v114);
  v50(v41 + *(int *)(v42 + 36), (uint64_t)v48, v49);
  if (a8 == 0.0)
  {
    __break(1u);
    goto LABEL_19;
  }
  *(double *)(v41 + *(int *)(v42 + 40)) = a8;
  v111 = *(char **)(v115 + 8);
  v51 = ((uint64_t (*)(char *, uint64_t))v111)(v48, v114);
  MEMORY[0x1E0C80A78](v51);
  v52 = v103;
  v53 = v104;
  v95[-8] = v103;
  v95[-7] = v53;
  v95[-6] = v95[1];
  v95[-5] = v29;
  v95[-4] = v39;
  *(double *)&v95[-3] = a8;
  LOBYTE(v95[-2]) = v112 & 1;
  v50 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StatusPrioritizer.TimeLineEntryMultipleItems(0, v52, v54, v55);
  v56 = sub_1C06C5C1C(&qword_1EF61D558, &qword_1EF61D540, MEMORY[0x1E0DEC580]);
  v32 = sub_1C06EFA04((void (*)(char *, char *))sub_1C06F0E14, (uint64_t)&v95[-10], v42, (uint64_t)v50, MEMORY[0x1E0DEDCE8], v56, MEMORY[0x1E0DEDD18], v57);
  sub_1C068A9AC(v41, &qword_1EF61D540);
  if (qword_1ED4FEA10[0] != -1)
LABEL_19:
    swift_once();
  v58 = sub_1C0747720();
  __swift_project_value_buffer(v58, (uint64_t)qword_1ED4FE9F0);
  sub_1C0746EF8();
  v59 = sub_1C0747708();
  v60 = sub_1C0747D80();
  v61 = os_log_type_enabled(v59, v60);
  v112 = (uint64_t)v50;
  if (v61)
  {
    v62 = swift_slowAlloc();
    v63 = swift_slowAlloc();
    *(_QWORD *)&v121[0] = v63;
    *(_DWORD *)v62 = 136315650;
    *(_QWORD *)&v119 = sub_1C069092C(0xD00000000000003DLL, 0x80000001C07549D0, (uint64_t *)v121);
    sub_1C0747E40();
    *(_WORD *)(v62 + 12) = 2048;
    *(_QWORD *)&v119 = MEMORY[0x1C3B9FE10](v32, v112);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 22) = 2048;
    *(_QWORD *)&v119 = 8;
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v59, v60, "%s Timeline entries %ld will be reduced to %ld", (uint8_t *)v62, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v63, -1, -1);
    MEMORY[0x1C3BA0D04](v62, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v119 = v32;
  v81 = sub_1C0747BDC();
  MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF50], v81);
  sub_1C0747D20();
  v119 = v121[0];
  v120 = v121[1];
  v82 = sub_1C0747EB8();
  MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEBF78], v82);
  v78 = sub_1C0747BE8();
  if (qword_1EF61A500 != -1)
    swift_once();
  v83 = v99;
  v84 = __swift_project_value_buffer(v99, (uint64_t)qword_1EF61E310);
  v85 = v98;
  v86 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v84, v83);
  v87 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  v88 = v96;
  sub_1C07470CC();

  sub_1C07470C0();
  v89 = *(void (**)(char *, uint64_t))(v85 + 8);
  v89(v88, v83);
  v80 = (uint64_t)v106;
  sub_1C0747390();
  v89(v86, v83);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v111)(v100, v114);
  v79 = 0;
  v65 = v112;
LABEL_17:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v80, v79, 1, v114);
  v90 = v107;
  *v107 = v78;
  v93 = type metadata accessor for StatusPrioritizer.TimeLine(0, v65, v91, v92);
  return sub_1C06F218C(v80, (uint64_t)v90 + *(int *)(v93 + 28));
}

uint64_t sub_1C06EF348@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v32(v9, a1 + v30, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v34(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1C068A9AC((uint64_t)v9, &qword_1EF61BC58);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v31 = a1;
  sub_1C0746EF8();
  v20 = v17 - 1;
  v21 = v32;
  if (v20)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v31 + v33 + v30;
    while (1)
    {
      v21(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1)
        break;
      v19(v14, v7, v10);
      sub_1C06DDF34((unint64_t *)&qword_1EF61B958, MEMORY[0x1E0CB08B0]);
      v27 = sub_1C074787C();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1C068A9AC((uint64_t)v7, &qword_1EF61BC58);
  v22 = v29;
  v19(v29, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

int *sub_1C06EF630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  double *v37;
  double v38;
  double v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  uint64_t (*v47)();
  char *v48;
  char v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v41 = a1;
  v44 = a8;
  v43 = sub_1C07473E4();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a2;
  v52 = a7;
  v53 = a3;
  v54 = a4;
  v55 = a5;
  v56 = a1;
  v57 = a9;
  v58 = a6;
  v19 = sub_1C0747BDC();
  v20 = (char *)type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  v21 = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF50], v19);
  v23 = sub_1C06DB9E0((void (*)(char *, char *))sub_1C06F327C, (uint64_t)v51, v19, v20, MEMORY[0x1E0DEDCE8], v21, MEMORY[0x1E0DEDD18], v22);
  v59 = a2;
  *(_QWORD *)&v63 = v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D720);
  v25 = MEMORY[0x1E0DEAF38];
  v26 = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEAF38], v19);
  v27 = sub_1C06C5C1C(&qword_1EF61D728, &qword_1EF61D720, v25);
  sub_1C07482D8();
  v63 = v64;
  v50 = a7;
  v46 = a7;
  v47 = sub_1C06F32F4;
  v48 = &v49;
  v59 = v19;
  v60 = v24;
  v61 = v26;
  v62 = v27;
  v28 = sub_1C0748014();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF61D548);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v30 = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0DEC3A0], v28);
  v32 = sub_1C06EFA04((void (*)(char *, char *))sub_1C06F3330, (uint64_t)v45, v28, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v30, MEMORY[0x1E0DEDD18], v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v18, v41, v43);
  v33 = sub_1C06EDE34(v23);
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v35 = *(double *)(v33 + 32);
    v36 = v34 - 1;
    if (v36)
    {
      v37 = (double *)(v33 + 40);
      do
      {
        v38 = *v37++;
        v39 = v38;
        if (v35 < v38)
          v35 = v39;
        --v36;
      }
      while (v36);
    }
  }
  else
  {
    v35 = 0.0;
  }
  swift_bridgeObjectRelease();
  return sub_1C06EE054((uint64_t)v18, v32, a7, v44, v35, a9);
}

uint64_t sub_1C06EF950@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF61D548);
  v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  result = a2(a3, a1, v6);
  *(_QWORD *)(a3 + v7) = result;
  return result;
}

uint64_t sub_1C06EFA04(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1C0747E28();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1C0747A74();
  v57 = sub_1C07477BC();
  v53 = sub_1C07480EC();
  sub_1C07480A4();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1C0747A68();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1C0747E34();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        sub_1C0747030();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1C07480D4();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1C0747E34();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1C07480D4();
      sub_1C0747E34();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    sub_1C0747030();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

int *sub_1C06EFF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *result;
  _BYTE v26[24];
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v10 = sub_1C07473E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for StatusRelevance();
  MEMORY[0x1E0C80A78](v14);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28[16] = a3;
  v29 = a2;
  sub_1C0746EF8();
  v17 = sub_1C0691504((uint64_t)sub_1C06F3368, (uint64_t)v28, a1);
  v26[16] = a3;
  v27 = a2;
  v30[0] = v17;
  sub_1C0746EF8();
  sub_1C06F0CEC((uint64_t (*)(__int128 *, _BYTE *))sub_1C06F3350, (uint64_t)v26);
  swift_bridgeObjectRelease();
  v18 = v30[0];
  if ((a3 & 1) == 0)
  {
    if (*(_QWORD *)(v30[0] + 16))
    {
      sub_1C0685C78(v30[0] + 32, (uint64_t)v30);
      v21 = v31;
      v22 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      goto LABEL_6;
    }
LABEL_7:
    v24 = 0;
    goto LABEL_8;
  }
  if (!*(_QWORD *)(v30[0] + 16))
    goto LABEL_7;
  sub_1C0685C78(v30[0] + 32, (uint64_t)v30);
  v19 = v31;
  v20 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
LABEL_6:
  StatusRelevance.score(at:)(a2);
  v24 = v23;
  sub_1C06F31B8((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
LABEL_8:
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a4, v13, v10);
  result = (int *)type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  *(_QWORD *)(a4 + result[5]) = v18;
  *(_QWORD *)(a4 + result[6]) = v24;
  *(double *)(a4 + result[7]) = a5;
  return result;
}

uint64_t sub_1C06F0120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  int v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, unint64_t, uint64_t);
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  id v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  int v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  void (*v123)(char *, uint64_t);
  uint64_t *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v129 = a2;
  v124 = a4;
  v111 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED4FEAA0);
  v110 = *(_QWORD *)(v111 - 8);
  v8 = MEMORY[0x1E0C80A78](v111);
  v108 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v109 = (char *)&v104 - v10;
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D540);
  MEMORY[0x1E0C80A78](v118);
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07473E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v115 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v119 = (char *)&v104 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v114 = (char *)&v104 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v104 - v21;
  v23 = sub_1C0747720();
  v126 = *(_QWORD *)(v23 - 8);
  v127 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  v27 = MEMORY[0x1E0C80A78](v26);
  v107 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v104 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v104 - v33;
  v35 = MEMORY[0x1E0C80A78](v32);
  v37 = (char *)&v104 - v36;
  MEMORY[0x1E0C80A78](v35);
  v128 = (char *)&v104 - v38;
  v122 = a3;
  v120 = a1;
  if ((a3 & 1) != 0)
    v39 = sub_1C06EDA7C(a1);
  else
    v39 = sub_1C06EDC58(a1);
  v116 = 0;
  v125 = v25;
  v112 = v12;
  v40 = v128;
  sub_1C06EF348(v39, v128);
  swift_bridgeObjectRelease();
  v41 = v127;
  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED4FF8B0);
  v43 = v125;
  v44 = v126;
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v42, v41);
  v117 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v117(v22, v129, v13);
  sub_1C06F31F4((uint64_t)v40, (uint64_t)v37, &qword_1EF61BC58);
  v45 = sub_1C0747708();
  v113 = sub_1C0747D80();
  v46 = os_log_type_enabled(v45, (os_log_type_t)v113);
  v121 = v13;
  if (v46)
  {
    v104 = v31;
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v131 = v48;
    *(_DWORD *)v47 = 136315394;
    sub_1C06DDF34((unint64_t *)&qword_1EF61C718, MEMORY[0x1E0CB08F0]);
    v49 = sub_1C0748248();
    v130 = sub_1C069092C(v49, v50, &v131);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    v51 = *(void (**)(char *, uint64_t))(v14 + 8);
    v51(v22, v13);
    *(_WORD *)(v47 + 12) = 2080;
    sub_1C06F31F4((uint64_t)v37, (uint64_t)v34, &qword_1EF61BC58);
    v105 = v14;
    v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v34, 1, v13);
    v123 = v51;
    if (v52 == 1)
    {
      sub_1C068A9AC((uint64_t)v34, &qword_1EF61BC58);
      v53 = 0xE300000000000000;
      v54 = 7104878;
    }
    else
    {
      v54 = sub_1C074733C();
      v53 = v57;
      v51(v34, v13);
    }
    v59 = v125;
    v58 = v126;
    v130 = sub_1C069092C(v54, v53, &v131);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    sub_1C068A9AC((uint64_t)v37, &qword_1EF61BC58);
    _os_log_impl(&dword_1C0671000, v45, (os_log_type_t)v113, "start date: %s, endDate: %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v48, -1, -1);
    MEMORY[0x1C3BA0D04](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v127);
    v55 = v124;
    v14 = v105;
    v56 = v118;
    v31 = v104;
  }
  else
  {
    v123 = *(void (**)(char *, uint64_t))(v14 + 8);
    v123(v22, v13);
    sub_1C068A9AC((uint64_t)v37, &qword_1EF61BC58);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v41);
    v55 = v124;
    v56 = v118;
  }
  v60 = v129;
  v61 = v120;
  if ((v122 & 1) != 0)
    v62 = sub_1C06EDA7C(v120);
  else
    v62 = sub_1C06EDC58(v120);
  v63 = v121;
  v64 = v123;
  sub_1C06EF348(v62, v31);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v31, 1, v63) == 1)
  {
    v65 = (uint64_t)v31;
    v66 = v63;
    v67 = v14;
    v68 = v60;
    sub_1C068A9AC(v65, &qword_1EF61BC58);
LABEL_23:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF61D180);
    v78 = (int *)type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
    v79 = *(unsigned __int8 *)(*((_QWORD *)v78 - 1) + 80);
    v80 = (v79 + 32) & ~v79;
    v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_1C074B820;
    v82 = v81 + v80;
    v83 = v119;
    v117(v119, v68, v66);
    v84 = v115;
    sub_1C0747354();
    sub_1C0747360();
    v86 = v85;
    v64(v84, v66);
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v82, v83, v66);
    *(_QWORD *)(v82 + v78[5]) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v82 + v78[6]) = 0;
    *(_QWORD *)(v82 + v78[7]) = v86;
    sub_1C068A9AC((uint64_t)v128, &qword_1EF61BC58);
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D560);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))((char *)v55 + *(int *)(v87 + 28), 1, 1, v66);
    *v55 = v81;
    return result;
  }
  v69 = v114;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v114, v31, v63);
  if ((sub_1C0747384() & 1) == 0)
  {
    v77 = v63;
    v67 = v14;
    v68 = v60;
    v66 = v77;
    ((void (*)(char *))v64)(v69);
    goto LABEL_23;
  }
  v70 = (unint64_t)v119;
  sub_1C0747390();
  v71 = (uint64_t)v112;
  v72 = (void (*)(uint64_t, unint64_t, uint64_t))v117;
  ((void (*)(char *))v117)(v112);
  v72(v71 + *(int *)(v56 + 36), v70, v63);
  if (a5 == 0.0)
  {
    __break(1u);
    goto LABEL_37;
  }
  *(double *)(v71 + *(int *)(v56 + 40)) = a5;
  v64((char *)v70, v63);
  v73 = v106;
  sub_1C0746F64();
  sub_1C0746EF8();
  v70 = sub_1C06F1B08(v71, a5, v73, v61, v122 & 1);
  sub_1C0747030();
  swift_bridgeObjectRelease();
  sub_1C068A9AC(v71, &qword_1EF61D540);
  if (qword_1ED4FEA10[0] != -1)
LABEL_37:
    swift_once();
  __swift_project_value_buffer(v127, (uint64_t)qword_1ED4FE9F0);
  sub_1C0746EF8();
  v74 = sub_1C0747708();
  v75 = sub_1C0747D80();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = swift_slowAlloc();
    *(_DWORD *)v76 = 134218240;
    v131 = *(_QWORD *)(v70 + 16);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2048;
    v131 = 8;
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v74, v75, "Timeline entries %ld, max used will be %ld", (uint8_t *)v76, 0x16u);
    MEMORY[0x1C3BA0D04](v76, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v70 + 16) >= 8uLL)
    v89 = 8;
  else
    v89 = *(_QWORD *)(v70 + 16);
  sub_1C074829C();
  swift_unknownObjectRetain_n();
  v90 = swift_dynamicCastClass();
  if (!v90)
  {
    swift_bridgeObjectRelease();
    v90 = MEMORY[0x1E0DEE9D8];
  }
  v91 = *(_QWORD *)(v90 + 16);
  sub_1C0747030();
  if (v91 == v89)
  {
    v92 = swift_dynamicCastClass();
    if (!v92)
    {
      swift_bridgeObjectRelease();
      v92 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v103 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem() - 8)
                              + 80);
    v92 = sub_1C06E0BCC(v70, v70 + ((v103 + 32) & ~v103), 0, (2 * v89) | 1);
  }
  swift_bridgeObjectRelease();
  if (qword_1EF61A500 != -1)
    swift_once();
  v93 = v111;
  v94 = __swift_project_value_buffer(v111, (uint64_t)qword_1EF61E310);
  v95 = v110;
  v96 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v109, v94, v93);
  v97 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  v98 = v108;
  sub_1C07470CC();

  sub_1C07470C0();
  v99 = *(void (**)(char *, uint64_t))(v95 + 8);
  v99(v98, v93);
  v100 = (uint64_t)v107;
  sub_1C0747390();
  v99(v96, v93);
  v123(v114, v63);
  sub_1C068A9AC((uint64_t)v128, &qword_1EF61BC58);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v100, 0, 1, v63);
  v101 = v124;
  *v124 = v92;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D560);
  return sub_1C06F218C(v100, (uint64_t)v101 + *(int *)(v102 + 28));
}

uint64_t StatusPrioritizer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StatusPrioritizer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C06F0CEC(uint64_t (*a1)(__int128 *, _BYTE *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1C0738730(v5);
  result = sub_1C06F0E6C(a1, a2);
  *v2 = v5;
  return result;
}

uint64_t sub_1C06F0D6C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C06F0E40(a1);
}

uint64_t type metadata accessor for StatusPrioritizer.TimeLineEntryMultipleItems(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatusPrioritizer.TimeLineEntryMultipleItems);
}

uint64_t sub_1C06F0D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF61D548);
  v6 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  *(_QWORD *)(a2 + v6) = MEMORY[0x1E0DEE9D8];
  return result;
}

int *sub_1C06F0E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C06EF630(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 64), *(_QWORD *)(v2 + 16), a2, *(double *)(v2 + 56));
}

uint64_t sub_1C06F0E40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 24))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1C06F0E6C(uint64_t (*a1)(__int128 *, _BYTE *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *__dst;
  uint64_t *v105;
  _BYTE v107[40];
  __int128 v108[3];
  uint64_t v109;

  v4 = v3;
  v109 = a2;
  v5 = *(_QWORD *)(v2 + 8);
  result = sub_1C074823C();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_137;
    if (v5)
      return sub_1C06F1660(0, v5, 1, a1);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 <= -2)
    goto LABEL_146;
  v100 = result;
  if (v5 < 2)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v5 != 1)
    {
      v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_104;
    }
    v101 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v8 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C840);
    v9 = sub_1C0747B88();
    *(_QWORD *)(v9 + 16) = v8;
    v101 = v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v13 = v11++;
    if (v11 < v5)
    {
      v14 = *v105;
      sub_1C0685C78(*v105 + 40 * v11, (uint64_t)v108);
      sub_1C0685C78(v14 + 40 * v13, (uint64_t)v107);
      v15 = a1(v108, v107);
      if (v4)
      {
LABEL_101:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v107);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
        goto LABEL_115;
      }
      v16 = v15;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v107);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
      v11 = v13 + 2;
      v102 = v14;
      if (v13 + 2 < v5)
      {
        v17 = v14 + 40 * v13 + 40;
        while (1)
        {
          sub_1C0685C78(v17 + 40, (uint64_t)v108);
          sub_1C0685C78(v17, (uint64_t)v107);
          v18 = a1(v108, v107);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v107);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
          if (((v16 ^ v18) & 1) != 0)
            break;
          ++v11;
          v17 += 40;
          if (v5 == v11)
          {
            v11 = v5;
            break;
          }
        }
        v14 = v102;
      }
      if ((v16 & 1) != 0)
      {
        if (v11 < v13)
          goto LABEL_141;
        if (v13 < v11)
        {
          v19 = v13;
          v20 = v11;
          v21 = v12;
          v22 = 40 * v20 - 40;
          v23 = 40 * v19;
          v24 = v20;
          v98 = v19;
          v25 = v19;
          do
          {
            if (v25 != --v20)
            {
              if (!v14)
                goto LABEL_144;
              v26 = v14 + v23;
              sub_1C0685BC4((__int128 *)v26, (uint64_t)v108);
              v27 = *(_QWORD *)(v102 + v22 + 32);
              v28 = *(_OWORD *)(v102 + v22 + 16);
              *(_OWORD *)v26 = *(_OWORD *)(v102 + v22);
              *(_OWORD *)(v26 + 16) = v28;
              *(_QWORD *)(v26 + 32) = v27;
              v14 = v102;
              sub_1C0685BC4(v108, v102 + v22);
            }
            ++v25;
            v22 -= 40;
            v23 += 40;
          }
          while (v25 < v20);
          v12 = v21;
          v11 = v24;
          v4 = 0;
          v13 = v98;
        }
      }
    }
    if (v11 >= v5)
      goto LABEL_41;
    if (__OFSUB__(v11, v13))
      goto LABEL_138;
    if (v11 - v13 >= v100)
      goto LABEL_41;
    if (__OFADD__(v13, v100))
      goto LABEL_139;
    v29 = v13 + v100 >= v5 ? v5 : v13 + v100;
    if (v29 < v13)
      break;
    if (v11 != v29)
    {
      v99 = v13;
      v83 = 40 * v11 - 40;
      do
      {
        v84 = v99;
        v85 = v83;
        do
        {
          v86 = *v105 + v85;
          sub_1C0685C78(v86 + 40, (uint64_t)v108);
          sub_1C0685C78(v86, (uint64_t)v107);
          v87 = a1(v108, v107);
          if (v4)
            goto LABEL_101;
          v88 = v87;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v107);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
          if ((v88 & 1) == 0)
            break;
          v89 = *v105;
          if (!*v105)
            goto LABEL_143;
          v90 = v89 + v85;
          sub_1C0685BC4((__int128 *)(v89 + v85 + 40), (uint64_t)v108);
          v91 = *(_OWORD *)(v90 + 16);
          *(_OWORD *)(v90 + 40) = *(_OWORD *)v90;
          *(_OWORD *)(v90 + 56) = v91;
          *(_QWORD *)(v90 + 72) = *(_QWORD *)(v90 + 32);
          sub_1C0685BC4(v108, v90);
          v85 -= 40;
          ++v84;
        }
        while (v11 != v84);
        ++v11;
        v83 += 40;
      }
      while (v11 != v29);
      v11 = v29;
      v13 = v99;
      if (v29 < v99)
        goto LABEL_136;
      goto LABEL_42;
    }
LABEL_41:
    if (v11 < v13)
      goto LABEL_136;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1C0737B0C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v31 = *((_QWORD *)v12 + 2);
    v30 = *((_QWORD *)v12 + 3);
    v32 = v31 + 1;
    if (v31 >= v30 >> 1)
      v12 = sub_1C0737B0C((char *)(v30 > 1), v31 + 1, 1, v12);
    *((_QWORD *)v12 + 2) = v32;
    v103 = v12 + 32;
    v33 = &v12[16 * v31 + 32];
    *(_QWORD *)v33 = v13;
    *((_QWORD *)v33 + 1) = v11;
    if (v31)
    {
      v34 = v12 + 32;
      while (1)
      {
        v35 = v32 - 1;
        if (v32 >= 4)
        {
          v40 = &v34[16 * v32];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_121;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_122;
          v47 = v32 - 2;
          v48 = &v34[16 * v32 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_124;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_127;
          if (v52 >= v43)
          {
            v70 = &v34[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_131;
            v63 = v38 < v73;
            goto LABEL_79;
          }
        }
        else
        {
          if (v32 != 3)
          {
            v64 = *((_QWORD *)v12 + 4);
            v65 = *((_QWORD *)v12 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_73;
          }
          v37 = *((_QWORD *)v12 + 4);
          v36 = *((_QWORD *)v12 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_123;
        v47 = v32 - 2;
        v53 = &v34[16 * v32 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_126;
        v59 = &v34[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_129;
        if (__OFADD__(v57, v62))
          goto LABEL_130;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_79:
          if (v63)
            v35 = v47;
          goto LABEL_81;
        }
LABEL_73:
        if ((v58 & 1) != 0)
          goto LABEL_125;
        v66 = &v34[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_128;
        if (v69 < v57)
          goto LABEL_90;
LABEL_81:
        v74 = v35 - 1;
        if (v35 - 1 >= v32)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!*v105)
          goto LABEL_142;
        v75 = v11;
        v76 = v12;
        v77 = v34;
        v78 = &v34[16 * v74];
        v79 = *(_QWORD *)v78;
        v80 = &v77[16 * v35];
        v81 = *((_QWORD *)v80 + 1);
        sub_1C06F1794((char *)(*v105 + 40 * *(_QWORD *)v78), (char *)(*v105 + 40 * *(_QWORD *)v80), *v105 + 40 * v81, __dst, (uint64_t (*)(_BYTE *, _BYTE *))a1);
        if (v4)
          goto LABEL_115;
        if (v81 < v79)
          goto LABEL_118;
        if (v35 > *((_QWORD *)v76 + 2))
          goto LABEL_119;
        *(_QWORD *)v78 = v79;
        v34 = v103;
        *(_QWORD *)&v103[16 * v74 + 8] = v81;
        v82 = *((_QWORD *)v76 + 2);
        if (v35 >= v82)
          goto LABEL_120;
        v12 = v76;
        v32 = v82 - 1;
        memmove(v80, v80 + 16, 16 * (v82 - 1 - v35));
        *((_QWORD *)v76 + 2) = v82 - 1;
        v11 = v75;
        if (v82 <= 2)
          goto LABEL_90;
      }
    }
    v32 = 1;
LABEL_90:
    v5 = v105[1];
    if (v11 >= v5)
    {
      v10 = v101;
LABEL_104:
      v101 = v10;
      if (v32 >= 2)
      {
        v92 = *v105;
        do
        {
          v93 = v32 - 2;
          if (v32 < 2)
            goto LABEL_132;
          if (!v92)
            goto LABEL_145;
          v94 = *(_QWORD *)&v12[16 * v93 + 32];
          v95 = *(_QWORD *)&v12[16 * v32 + 24];
          sub_1C06F1794((char *)(v92 + 40 * v94), (char *)(v92 + 40 * *(_QWORD *)&v12[16 * v32 + 16]), v92 + 40 * v95, __dst, (uint64_t (*)(_BYTE *, _BYTE *))a1);
          if (v4)
            break;
          if (v95 < v94)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1C0737EB0((uint64_t)v12);
          if (v93 >= *((_QWORD *)v12 + 2))
            goto LABEL_134;
          v96 = &v12[16 * v93 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v12 + 2);
          if (v32 > v97)
            goto LABEL_135;
          memmove(&v12[16 * v32 + 16], &v12[16 * v32 + 32], 16 * (v97 - v32));
          *((_QWORD *)v12 + 2) = v97 - 1;
          v32 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1C0748110();
  __break(1u);
  return result;
}

uint64_t sub_1C06F1660(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *, _BYTE *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v17[40];
  __int128 v18[2];
  uint64_t v19;

  v19 = a2;
  if (a3 != a2)
  {
    v7 = a3;
    v8 = result;
    v9 = 40 * a3 - 40;
    v16 = result;
LABEL_4:
    v10 = v9;
    while (1)
    {
      v11 = *v4 + v10;
      sub_1C0685C78(v11 + 40, (uint64_t)v18);
      sub_1C0685C78(v11, (uint64_t)v17);
      v12 = a4(v18, v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      if (v5)
        break;
      if ((v12 & 1) != 0)
      {
        v13 = *v4;
        if (!*v4)
        {
          __break(1u);
          return result;
        }
        v14 = v13 + v10;
        sub_1C0685BC4((__int128 *)(v13 + v10 + 40), (uint64_t)v18);
        v15 = *(_OWORD *)(v14 + 16);
        *(_OWORD *)(v14 + 40) = *(_OWORD *)v14;
        *(_OWORD *)(v14 + 56) = v15;
        *(_QWORD *)(v14 + 72) = *(_QWORD *)(v14 + 32);
        result = sub_1C0685BC4(v18, v14);
        v10 -= 40;
        if (v7 != ++v8)
          continue;
      }
      ++v7;
      v9 += 40;
      v8 = v16;
      if (v7 != v19)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

uint64_t sub_1C06F1794(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(_BYTE *, _BYTE *))
{
  uint64_t v5;
  char *v6;
  char *v7;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  _OWORD *v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  char v28;
  char v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  _BYTE v37[40];
  _BYTE v38[40];
  char *v39;
  char *v40;
  char *v41;

  v6 = __dst;
  v7 = a2;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 40;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v41 = __src;
  v40 = __dst;
  if (v10 >= v12)
  {
    if (v11 > -40)
    {
      if (__dst != a2 || &a2[40 * v12] <= __dst)
        memmove(__dst, a2, 40 * v12);
      v23 = &v6[40 * v12];
      v39 = v23;
      v41 = v7;
      if (__src >= v7 || v11 < 40)
        goto LABEL_44;
      v24 = a3 - 40;
      while (1)
      {
        sub_1C0685C78((uint64_t)(v23 - 40), (uint64_t)v38);
        v27 = v7 - 40;
        sub_1C0685C78((uint64_t)(v7 - 40), (uint64_t)v37);
        v28 = a5(v38, v37);
        if (v5)
          goto LABEL_43;
        v29 = v28;
        v30 = (char *)(v24 + 40);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
        if ((v29 & 1) != 0)
        {
          if (v30 != v7 || v24 >= (unint64_t)v7)
          {
            v25 = *(_OWORD *)v27;
            v26 = *(_OWORD *)(v7 - 24);
            *(_QWORD *)(v24 + 32) = *((_QWORD *)v7 - 1);
            *(_OWORD *)v24 = v25;
            *(_OWORD *)(v24 + 16) = v26;
          }
          v41 -= 40;
          v23 = v39;
          if (v39 <= v6)
            goto LABEL_44;
        }
        else
        {
          v31 = v39;
          v23 = v39 - 40;
          v39 -= 40;
          if (v30 < v31 || v24 >= (unint64_t)v31 || v30 != v31)
          {
            v32 = *(_OWORD *)v23;
            v33 = *(_OWORD *)(v31 - 24);
            *(_QWORD *)(v24 + 32) = *((_QWORD *)v31 - 1);
            *(_OWORD *)v24 = v32;
            *(_OWORD *)(v24 + 16) = v33;
          }
          v27 = v7;
          if (v23 <= v6)
            goto LABEL_44;
        }
        v24 -= 40;
        v7 = v27;
        if (v27 <= __src)
          goto LABEL_44;
      }
    }
  }
  else if (v9 > -40)
  {
    if (__dst != __src || &__src[40 * v10] <= __dst)
      memmove(__dst, __src, 40 * v10);
    v13 = (unint64_t)&v6[40 * v10];
    v39 = (char *)v13;
    if ((unint64_t)v7 >= a3 || v9 < 40)
      goto LABEL_44;
    while (1)
    {
      sub_1C0685C78((uint64_t)v7, (uint64_t)v38);
      sub_1C0685C78((uint64_t)v6, (uint64_t)v37);
      v14 = a5(v38, v37);
      if (v5)
        break;
      v15 = v14;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
      v16 = v41;
      if ((v15 & 1) != 0)
      {
        v17 = (unint64_t)(v7 + 40);
        if (v41 >= v7 && (unint64_t)v41 < v17 && v41 == v7)
        {
          v16 = v7;
        }
        else
        {
          v18 = *(_OWORD *)v7;
          v19 = *((_OWORD *)v7 + 1);
          *((_QWORD *)v41 + 4) = *((_QWORD *)v7 + 4);
          *v16 = v18;
          v16[1] = v19;
        }
      }
      else
      {
        v20 = v40 + 40;
        if (v41 != v40 || v41 >= v20)
        {
          v21 = *(_OWORD *)v40;
          v22 = *((_OWORD *)v40 + 1);
          *((_QWORD *)v41 + 4) = *((_QWORD *)v40 + 4);
          *v16 = v21;
          v16[1] = v22;
        }
        v40 = v20;
        v17 = (unint64_t)v7;
      }
      v41 = (char *)v16 + 40;
      v6 = v40;
      if ((unint64_t)v40 < v13)
      {
        v7 = (char *)v17;
        if (v17 < a3)
          continue;
      }
      goto LABEL_44;
    }
LABEL_43:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
LABEL_44:
    sub_1C0737D50((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

unint64_t sub_1C06F1B08(uint64_t a1, double a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(void);
  double *v31;
  uint64_t v32;
  void (*v33)(void);
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  double v36;
  _QWORD *v37;
  char *v38;
  char *v39;
  char v40;
  void (*v41)(void);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v59[2];
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  double *v77;
  char *v78;
  uint64_t v79;

  v70 = a5;
  v73 = a4;
  v78 = (char *)a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D700);
  MEMORY[0x1E0C80A78](v6);
  v79 = (uint64_t)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  v74 = *(_QWORD *)(v72 - 8);
  v8 = MEMORY[0x1E0C80A78](v72);
  v60 = (uint64_t)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v59[0] = (uint64_t)v59 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D708);
  MEMORY[0x1E0C80A78](v11);
  v66 = (uint64_t *)((char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1C07473E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v71 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v65 = (char *)v59 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v59 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = (double *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D540);
  MEMORY[0x1E0C80A78](v77);
  v25 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D710);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C06F31F4((uint64_t)v78, (uint64_t)v25, &qword_1EF61D540);
  v29 = &v28[v26[11]];
  v67 = v11;
  v68 = v29;
  v78 = &v29[*(int *)(v11 + 48)];
  v30 = *(void (**)(void))(v14 + 32);
  v30();
  v31 = v77;
  v75 = &v28[v26[9]];
  v30();
  v32 = *(_QWORD *)&v25[*((int *)v31 + 10)];
  v33 = v30;
  v77 = (double *)&v28[v26[10]];
  *(_QWORD *)v77 = v32;
  v62 = v26[12];
  v28[v62] = 0;
  v34 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v69 = v28;
  v76 = v34;
  v34(v28, v78, v13);
  v35 = v68;
  *(_QWORD *)v68 = 0;
  v61 = MEMORY[0x1E0DEE9D8];
  v35[8] = 0;
  v70 &= 1u;
  v63 = v20;
  v64 = v23;
  while (1)
  {
    v76(v20, v78, v13);
    v36 = *v77;
    sub_1C06DDF34((unint64_t *)&qword_1EF61B958, MEMORY[0x1E0CB08B0]);
    if (v36 <= 0.0)
    {
      if ((sub_1C0747894() & 1) == 0)
      {
LABEL_4:
        v37 = v66;
        v38 = (char *)v66 + *(int *)(v67 + 48);
        v39 = v68;
        v40 = v68[8];
        *v66 = *(_QWORD *)v68;
        *((_BYTE *)v37 + 8) = v40;
        v41 = v33;
        v42 = (uint64_t)v78;
        v76(v38, v78, v13);
        sub_1C06DDF34(&qword_1EF61D718, MEMORY[0x1E0CB08D0]);
        v43 = v65;
        v44 = sub_1C0747E58();
        v46 = v45;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v13);
        *(_QWORD *)v39 = v44;
        v39[8] = v46 & 1;
        v20 = v63;
        v23 = v64;
        v47 = v42;
        v33 = v41;
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v47, v43, v13);
        ((void (*)(char *, char *, uint64_t))v41)(v23, v20, v13);
        v48 = 0;
        goto LABEL_11;
      }
    }
    else if ((sub_1C0747888() & 1) == 0)
    {
      goto LABEL_4;
    }
    sub_1C06DDF34((unint64_t *)&qword_1EF61D0B0, MEMORY[0x1E0CB08B8]);
    if ((sub_1C07478D0() & 1) != 0
      && (v69[v62] & 1) == 0
      && ((v68[8] & 1) != 0 || *(_QWORD *)v68 != 0x8000000000000000))
    {
      v69[v62] = 1;
      ((void (*)(char *, char *, uint64_t))v33)(v23, v20, v13);
      v48 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      v48 = 1;
    }
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v23, v48, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v23, 1, v13) == 1)
      break;
    v49 = (uint64_t)v71;
    ((void (*)(char *, char *, uint64_t))v33)(v71, v23, v13);
    v50 = v79;
    sub_1C06EFF10(v73, v49, v70, v79, a2);
    v51 = v74;
    v52 = v72;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v50, 0, 1, v72);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v49, v13);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v50, 1, v52) == 1)
    {
      sub_1C068A9AC(v79, &qword_1EF61D700);
    }
    else
    {
      v53 = v59[0];
      sub_1C06F3238(v79, v59[0]);
      sub_1C06F3238(v53, v60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v61 = sub_1C06B4120(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
      v55 = *(_QWORD *)(v61 + 16);
      v54 = *(_QWORD *)(v61 + 24);
      if (v55 >= v54 >> 1)
        v61 = sub_1C06B4120(v54 > 1, v55 + 1, 1, v61);
      v56 = v60;
      v57 = v61;
      *(_QWORD *)(v61 + 16) = v55 + 1;
      sub_1C06F3238(v56, v57+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72) * v55);
    }
  }
  sub_1C068A9AC((uint64_t)v69, &qword_1EF61D710);
  return v61;
}

uint64_t sub_1C06F218C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StatusPrioritizer()
{
  return objc_opt_self();
}

uint64_t method lookup function for StatusPrioritizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatusPrioritizer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of StatusPrioritizer.ranked(statuses:at:lockScreenCircular:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of StatusPrioritizer.timeline(statuses:fromDate:interval:lockScreenCircular:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of StatusPrioritizer.timeline<A>(from:fromDate:interval:applying:lockScreenCircular:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t *initializeBufferWithCopyOfBuffer for StatusPrioritizer.TimeLineEntrySingleItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    v7 = sub_1C07473E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    sub_1C0746EF8();
  }
  return a1;
}

uint64_t destroy for StatusPrioritizer.TimeLineEntrySingleItem(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StatusPrioritizer.TimeLineEntrySingleItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  sub_1C0746EF8();
  return a1;
}

uint64_t assignWithCopy for StatusPrioritizer.TimeLineEntrySingleItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for StatusPrioritizer.TimeLineEntrySingleItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for StatusPrioritizer.TimeLineEntrySingleItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StatusPrioritizer.TimeLineEntrySingleItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06F2514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C07473E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusPrioritizer.TimeLineEntrySingleItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06F259C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C07473E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1C06F2614()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C06F2698()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C07473E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C06F271C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C0746F64();
  }
  else
  {
    v7 = sub_1C07473E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    sub_1C0746EF8();
  }
  return a1;
}

uint64_t sub_1C06F27BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06F2800(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  sub_1C0746EF8();
  return a1;
}

uint64_t sub_1C06F2874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C06F28F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C06F2968(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07473E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v7 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1C06F29E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06F29EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C07473E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1C06F2A68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06F2A74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C07473E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1C06F2AEC()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1C06F2AF4()
{
  unint64_t v0;

  sub_1C06DA3B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1C06F2B6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1C0746F64();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 28);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C07473E4();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    sub_1C0746EF8();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_1C06F2C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1C07473E4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1C06F2CDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C07473E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  sub_1C0746EF8();
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1C06F2DA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *sub_1C06F2EC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C07473E4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1C06F2F84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C07473E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C06F309C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C06F30A8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1C06F3128()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1C06F3134(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BC58);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StatusPrioritizer.TimeLine(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatusPrioritizer.TimeLine);
}

uint64_t sub_1C06F31B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StatusRelevance();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C06F31F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C06F3238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C06F327C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(double *)(v1 + 56);
  v5 = *(_BYTE *)(v1 + 64);
  v6 = (*(uint64_t (**)(void))(v1 + 32))();
  sub_1C06EFF10(v6, v3, v5, a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06F32F4()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 16))();
  type metadata accessor for StatusPrioritizer.TimeLineEntrySingleItem();
  return sub_1C0746EF8();
}

uint64_t sub_1C06F3330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C06EF950(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), a2);
}

uint64_t sub_1C06F3350(_QWORD *a1, _QWORD *a2)
{
  return sub_1C06EE600(a1, a2) & 1;
}

BOOL sub_1C06F3368(_QWORD *a1)
{
  return sub_1C06EE298(a1);
}

uint64_t sub_1C06F3380(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF6B8(0, v1, 0);
    v2 = v12;
    v4 = a1 + 32;
    do
    {
      ++v4;
      v5 = StatusType.description.getter();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1C06BF6B8(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t static StatusCoalescer.fetchStatus(for:statusFetchers:timeout:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v3 + 80) = a3;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a2;
  v4 = sub_1C07476D8();
  *(_QWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  v5 = sub_1C07473E4();
  *(_QWORD *)(v3 + 120) = v5;
  *(_QWORD *)(v3 + 128) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  v6 = sub_1C0747720();
  *(_QWORD *)(v3 + 152) = v6;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 168) = swift_task_alloc();
  v7 = sub_1C07476FC();
  *(_QWORD *)(v3 + 176) = v7;
  *(_QWORD *)(v3 + 184) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06F3560()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  if (qword_1ED4FF8D0 != -1)
    swift_once();
  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  v4 = v0[9];
  v5 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED4FF8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  sub_1C07476E4();
  v6 = *(_QWORD *)(v4 + 16);
  v0[25] = v6;
  sub_1C07473D8();
  if (qword_1EF61A3B8 != -1)
    swift_once();
  v0[26] = __swift_project_value_buffer(v0[19], (uint64_t)qword_1EF61D3E8);
  v7 = sub_1C0747708();
  v8 = sub_1C0747D68();
  if (!os_log_type_enabled(v7, v8))
    goto LABEL_10;
  v9 = (double)v6;
  v10 = v0[10];
  v11 = swift_slowAlloc();
  *(_DWORD *)v11 = 134218240;
  v0[6] = v10;
  result = sub_1C0747E40();
  *(_WORD *)(v11 + 12) = 2048;
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v9 < 9.22337204e18)
  {
    v0[7] = (uint64_t)v9;
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v7, v8, "Max time per source %f in %ld sources", (uint8_t *)v11, 0x16u);
    MEMORY[0x1C3BA0D04](v11, -1, -1);
LABEL_10:

    v13 = v0[10];
    v15 = v0[8];
    v14 = v0[9];
    v0[2] = sub_1C06F5E9C(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D738);
    v16 = (_QWORD *)swift_task_alloc();
    v0[27] = v16;
    v16[2] = v14;
    v16[3] = v13;
    v16[4] = v15;
    v16[5] = v0 + 2;
    v17 = (_QWORD *)swift_task_alloc();
    v0[28] = v17;
    *v17 = v0;
    v17[1] = sub_1C06F37EC;
    return sub_1C07481B8();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1C06F37EC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06F3848()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C0746EF8();
  sub_1C07476CC();
  v1 = sub_1C07476F0();
  v2 = sub_1C0747DC8();
  if ((sub_1C0747E10() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5, v6);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    *(_QWORD *)(v0 + 40) = v3;
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    v9 = sub_1C07476C0();
    _os_signpost_emit_with_name_impl(&dword_1C0671000, v1, v2, v9, "StatusCoalescer", "Completed for %ld statues", v8, 0xCu);
    MEMORY[0x1C3BA0D04](v8, -1, -1);

    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v10(v5, v6);
    v10(v4, v6);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 16))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
  v14 = sub_1C0747708();
  v15 = sub_1C0747D80();
  v16 = os_log_type_enabled(v14, v15);
  v18 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 144);
  v23 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 128);
  if (v16)
  {
    v33 = *(_QWORD *)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 184);
    v24 = swift_slowAlloc();
    v31 = v21;
    v25 = swift_slowAlloc();
    v34 = v25;
    *(_DWORD *)v24 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_1C069092C(0xD000000000000028, 0x80000001C0754A30, &v34);
    sub_1C0747E40();
    *(_WORD *)(v24 + 12) = 2048;
    sub_1C07473A8();
    *(double *)(v0 + 32) = -v26;
    sub_1C0747E40();
    v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v27(v20, v23);
    _os_log_impl(&dword_1C0671000, v14, v15, "%s elapsed %f", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v25, -1, -1);
    MEMORY[0x1C3BA0D04](v24, -1, -1);

    v27(v31, v23);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v19);
  }
  else
  {

    v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v28(v20, v23);
    v28(v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v29 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
}

uint64_t sub_1C06F3BB4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 224) = a5;
  *(_QWORD *)(v6 + 232) = a6;
  *(double *)(v6 + 216) = a1;
  *(_QWORD *)(v6 + 200) = a3;
  *(_QWORD *)(v6 + 208) = a4;
  v7 = sub_1C0747720();
  *(_QWORD *)(v6 + 240) = v7;
  *(_QWORD *)(v6 + 248) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BA80);
  *(_QWORD *)(v6 + 264) = swift_task_alloc();
  *(_QWORD *)(v6 + 272) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06F3C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _QWORD *v33;
  __int128 *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v35 = (__int128 *)(v0 + 16);
    v3 = (_QWORD *)(v1 + 32);
    sub_1C0746EF8();
    while (1)
    {
      v37 = v2;
      v4 = *(_QWORD *)(v0 + 272);
      v5 = *(_QWORD *)(v0 + 224);
      v6 = *(_QWORD *)(v0 + 216);
      v7 = v3[3];
      v8 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v7);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      v11 = v10;
      v12 = sub_1C0747C60();
      v13 = *(_QWORD *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v4, 1, 1, v12);
      v36 = v3;
      sub_1C0685C78((uint64_t)v3, (uint64_t)v35);
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = 0;
      v15 = v14 + 2;
      v14[3] = 0;
      v14[4] = v6;
      sub_1C0685BC4(v35, (uint64_t)(v14 + 5));
      v14[10] = v5;
      v14[11] = v9;
      v14[12] = v11;
      sub_1C0746EF8();
      sub_1C0746EF8();
      v16 = swift_taskGroup_addPending();
      v17 = *(_QWORD *)(v0 + 272);
      if ((v16 & 1) != 0)
        break;
      sub_1C0747030();
      sub_1C069FABC(v17);
      if (qword_1EF61A3B8 != -1)
        swift_once();
      __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_1EF61D3E8);
      sub_1C0746EF8();
      v24 = sub_1C0747708();
      v25 = sub_1C0747D74();
      v26 = v36;
      if (os_log_type_enabled(v24, v25))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v38 = v28;
        *(_DWORD *)v27 = 136315138;
        sub_1C0746EF8();
        *(_QWORD *)(v27 + 4) = sub_1C069092C(v9, v11, &v38);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0671000, v24, v25, "Task add failed for %s", (uint8_t *)v27, 0xCu);
LABEL_21:
        swift_arrayDestroy();
        MEMORY[0x1C3BA0D04](v28, -1, -1);
        MEMORY[0x1C3BA0D04](v27, -1, -1);
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease_n();
LABEL_4:

      v3 = v26 + 5;
      v2 = v37 - 1;
      if (v37 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    v18 = *(_QWORD *)(v0 + 264);
    sub_1C06D88A0(*(_QWORD *)(v0 + 272), v18);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
    v20 = *(_QWORD *)(v0 + 264);
    if (v19 == 1)
    {
      sub_1C069FABC(*(_QWORD *)(v0 + 264));
      if (*v15)
      {
LABEL_8:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v21 = sub_1C0747C00();
        v23 = v22;
        swift_unknownObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      sub_1C0747C54();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v20, v12);
      if (*v15)
        goto LABEL_8;
    }
    v21 = 0;
    v23 = 0;
LABEL_15:
    v26 = v36;
    v29 = **(_QWORD **)(v0 + 200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D738);
    v30 = v23 | v21;
    if (v23 | v21)
    {
      v30 = v0 + 56;
      *(_QWORD *)(v0 + 56) = 0;
      *(_QWORD *)(v0 + 64) = 0;
      *(_QWORD *)(v0 + 72) = v21;
      *(_QWORD *)(v0 + 80) = v23;
    }
    v31 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v0 + 88) = 1;
    *(_QWORD *)(v0 + 96) = v30;
    *(_QWORD *)(v0 + 104) = v29;
    swift_task_create();
    sub_1C0747030();
    sub_1C069FABC(v31);
    if (qword_1EF61A3B8 != -1)
      swift_once();
    __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_1EF61D3E8);
    sub_1C0746EF8();
    v24 = sub_1C0747708();
    v32 = sub_1C0747D68();
    if (os_log_type_enabled(v24, v32))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v38 = v28;
      *(_DWORD *)v27 = 136315138;
      sub_1C0746EF8();
      *(_QWORD *)(v27 + 4) = sub_1C069092C(v9, v11, &v38);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0671000, v24, v32, "Added task for %s", (uint8_t *)v27, 0xCu);
      goto LABEL_21;
    }
    goto LABEL_3;
  }
LABEL_23:
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D760);
  *v33 = v0;
  v33[1] = sub_1C06F4164;
  return sub_1C0747C78();
}

uint64_t sub_1C06F4164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(_QWORD *)(v2 + 296) = *(_QWORD *)(v2 + 168);
    *(_BYTE *)(v2 + 177) = *(_BYTE *)(v2 + 176);
  }
  return swift_task_switch();
}

uint64_t sub_1C06F41D8()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  unsigned __int8 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  unsigned __int8 v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36[2];

  v1 = *(unsigned __int8 *)(v0 + 177);
  if (v1 == 255)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(void **)(v0 + 296);
    if ((v1 & 1) != 0)
    {
      *(_QWORD *)(v0 + 184) = v2;
      sub_1C069A018(v2, 1);
      sub_1C069A018(v2, 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v6 = *(_QWORD *)(v0 + 136);
        v5 = *(_QWORD *)(v0 + 144);
        if (qword_1EF61A3B8 != -1)
          swift_once();
        __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_1EF61D3E8);
        sub_1C0746EF8();
        v7 = sub_1C0747708();
        v8 = sub_1C0747D74();
        v9 = os_log_type_enabled(v7, v8);
        v10 = *(_BYTE *)(v0 + 177);
        v11 = *(void **)(v0 + 296);
        if (v9)
        {
          v12 = *(_QWORD *)(v0 + 216);
          v13 = swift_slowAlloc();
          v14 = swift_slowAlloc();
          v36[0] = v14;
          *(_DWORD *)v13 = 136315394;
          sub_1C0746EF8();
          *(_QWORD *)(v13 + 4) = sub_1C069092C(v6, v5, v36);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v13 + 12) = 2048;
          *(_QWORD *)(v13 + 14) = v12;
          _os_log_impl(&dword_1C0671000, v7, v8, "%s exceeded %f", (uint8_t *)v13, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v14, -1, -1);
          MEMORY[0x1C3BA0D04](v13, -1, -1);

          sub_1C06D8900(v11, v10);
        }
        else
        {
          sub_1C06D8900(*(void **)(v0 + 296), *(_BYTE *)(v0 + 177));
          swift_bridgeObjectRelease_n();

        }
        sub_1C06D8900(v11, v10);
      }
      else
      {
        if (qword_1ED4FE9A8 != -1)
          swift_once();
        v15 = *(void **)(v0 + 296);
        v17 = *(_QWORD *)(v0 + 248);
        v16 = *(_QWORD *)(v0 + 256);
        v18 = *(_QWORD *)(v0 + 240);
        v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED4FE9D8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v19, v18);
        *(_QWORD *)(v0 + 152) = 0;
        *(_QWORD *)(v0 + 160) = 0xE000000000000000;
        sub_1C069A018(v15, 1);
        sub_1C0747FF0();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A6E8);
        v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1C074B820;
        swift_getErrorValue();
        v21 = v2;
        v22 = sub_1C07482FC();
        v24 = v23;
        *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v20 + 64) = sub_1C06C0F1C();
        *(_QWORD *)(v20 + 32) = v22;
        *(_QWORD *)(v20 + 40) = v24;
        v25 = sub_1C0747948();
        v27 = v26;
        sub_1C0746EF8();
        v28 = sub_1C0747708();
        v29 = sub_1C0747D74();
        v30 = os_log_type_enabled(v28, v29);
        v31 = *(_BYTE *)(v0 + 177);
        v32 = *(void **)(v0 + 296);
        if (v30)
        {
          v33 = swift_slowAlloc();
          v34 = swift_slowAlloc();
          v36[0] = v34;
          *(_DWORD *)v33 = 136315138;
          sub_1C0746EF8();
          *(_QWORD *)(v33 + 4) = sub_1C069092C(v25, v27, v36);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0671000, v28, v29, "%s", (uint8_t *)v33, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v34, -1, -1);
          MEMORY[0x1C3BA0D04](v33, -1, -1);

          sub_1C06D8900(v32, v31);
          sub_1C06D8900(v32, v31);
          sub_1C0699ED8(v32, 1);

        }
        else
        {

          sub_1C06D8900(v32, v31);
          swift_bridgeObjectRelease_n();
          sub_1C06D8900(v32, v31);
          sub_1C06D8900(v32, v31);
          sub_1C0699ED8(v32, 1);
        }
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
      }
    }
    else if (v2)
    {
      v3 = *(_QWORD *)(v0 + 232);
      *(_QWORD *)(swift_task_alloc() + 16) = v3;
      sub_1C06D88E8(v2, v1);
      sub_1C06A7B14((uint64_t)v2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C06F5410);
      sub_1C06D8900(v2, v1);
      sub_1C06D8900(v2, v1);
      swift_task_dealloc();
    }
    else
    {
      sub_1C06D8900(0, *(_BYTE *)(v0 + 177));
    }
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D760);
    *v35 = v0;
    v35[1] = sub_1C06F4164;
    return sub_1C0747C78();
  }
}

uint64_t sub_1C06F4788()
{
  return swift_unexpectedError();
}

uint64_t sub_1C06F47A4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 120) = a7;
  *(_QWORD *)(v8 + 128) = a8;
  *(_QWORD *)(v8 + 104) = a5;
  *(_QWORD *)(v8 + 112) = a6;
  *(double *)(v8 + 96) = a2;
  *(_QWORD *)(v8 + 88) = a1;
  v9 = sub_1C074763C();
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06F4810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1C07483A4();
  sub_1C0685C78(v4, v0 + 16);
  v5 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 160) = v5;
  sub_1C0685BC4((__int128 *)(v0 + 16), (uint64_t)(v5 + 2));
  v5[7] = v3;
  v5[8] = v2;
  v5[9] = v1;
  sub_1C0746EF8();
  sub_1C0746EF8();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D738);
  *v6 = v0;
  v6[1] = sub_1C06F4908;
  return sub_1C0747630();
}

uint64_t sub_1C06F4908()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_1C0747030();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C06F4988()
{
  uint64_t v0;
  void *v1;
  id v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(void **)(v0 + 176);
  sub_1C0747030();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61A7A8);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 176);
  if (v3)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);

    swift_bridgeObjectRelease();
    sub_1C06F54C8();
    swift_allocError();
    *v7 = v6;
    v7[1] = v5;
    sub_1C0746EF8();
    swift_willThrow();

  }
  else
  {

    *(_QWORD *)(v0 + 80) = v4;
    v8 = v4;
    if (swift_dynamicCast())
    {
      v10 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 152);
      v11 = *(_QWORD *)(v0 + 128);
      v12 = *(_QWORD *)(v0 + 136);
      v13 = *(_QWORD *)(v0 + 120);

      sub_1C06F54C8();
      swift_allocError();
      *v14 = v13;
      v14[1] = v11;
      sub_1C0746EF8();
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v12);
    }

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06F4B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = sub_1C07473E4();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06F4B9C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[8];
  v2 = v0[9];
  v3 = sub_1C06F550C((uint64_t)v1);
  v5 = v4;
  v6 = (_QWORD *)sub_1C06F55FC((uint64_t)v1);
  v0[16] = _s6People0A9AnalyticsC24statusCoalescerStopwatch_9typeNames12contactCountAC9StopWatchCSS_SaySSGSitFZ_0(v3, v5, v6, *(_QWORD *)(v2 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07473D8();
  v7 = v1[3];
  v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v7);
  v11 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  v0[17] = v9;
  *v9 = v0;
  v9[1] = sub_1C06F4C7C;
  return v11(v0[9], v7, v8);
}

uint64_t sub_1C06F4C7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[18] = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C06F4CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1EF61A3B8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = sub_1C0747720();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EF61D3E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  swift_bridgeObjectRetain_n();
  v6 = sub_1C0747708();
  v7 = sub_1C0747D80();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 88);
  if (v8)
  {
    v22 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 80);
    v23 = *(_QWORD *)(v0 + 120);
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v24 = v16;
    *(_DWORD *)v15 = 136315394;
    sub_1C0746EF8();
    *(_QWORD *)(v0 + 40) = sub_1C069092C(v14, v13, &v24);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2048;
    sub_1C07473A8();
    *(double *)(v0 + 48) = -v17;
    sub_1C0747E40();
    v18 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v18(v9, v12);
    _os_log_impl(&dword_1C0671000, v6, v7, "source: %s elapsed %f", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v16, -1, -1);
    MEMORY[0x1C3BA0D04](v15, -1, -1);

    v19 = v23;
  }
  else
  {

    v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v18(v9, v12);
    swift_bridgeObjectRelease_n();
    v19 = v10;
  }
  v18(v19, v12);
  v20 = *(_QWORD *)(v0 + 128);
  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 24);
  sub_1C06F4FD4(v20);
  sub_1C0747030();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06F4F68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  sub_1C06F4FD4(v1);
  sub_1C0747030();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06F4FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t inited;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[95];
  char v17;

  v2 = sub_1C07473E4();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x1E0C80A78](v2);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(a1 + 56) == 1 && (*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v7 = *(double *)(a1 + 32);
    sub_1C07473D8();
    sub_1C0747330();
    v9 = v8;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
    v10 = v9 - v7;
    *(double *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 56) = 0;
    if (qword_1ED4FFC40 != -1)
      swift_once();
    v17 = *(_BYTE *)(a1 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C074B820;
    v12 = MEMORY[0x1E0DEB070];
    *(_QWORD *)(inited + 32) = 0x5464657370616C65;
    *(_QWORD *)(inited + 40) = 0xEB00000000656D69;
    *(_QWORD *)(inited + 72) = v12;
    *(_QWORD *)(inited + 80) = &protocol witness table for Double;
    *(double *)(inited + 48) = v10;
    v13 = (_QWORD *)sub_1C06F5C3C(inited);
    v14 = sub_1C0746EF8();
    v15 = sub_1C070D77C(v14, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C070E1AC(&v17, v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C06F5158(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD **a4)
{
  char v4;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  _QWORD *v19;

  sub_1C0746EF8();
  sub_1C0746EF8();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *a4;
  v19 = *a4;
  *a4 = (_QWORD *)0x8000000000000000;
  v12 = sub_1C069C918(a1, a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v11;
  if (v10[3] >= v15)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_10:
    sub_1C06DEE54();
    v10 = v19;
    goto LABEL_6;
  }
  sub_1C0705B9C(v15, isUniquelyReferenced_nonNull_native);
  v10 = v19;
  v16 = sub_1C069C918(a1, a2);
  if ((v4 & 1) != (v17 & 1))
  {
    result = sub_1C07482F0();
    __break(1u);
    return result;
  }
  v12 = v16;
LABEL_6:
  *a4 = v10;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    sub_1C07223D4(v12, a1, a2, MEMORY[0x1E0DEE9D8], *a4);
    sub_1C0746EF8();
  }
  sub_1C068D988(a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06F52A8(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *((_QWORD *)v2 + 2);
  v7 = v2[3];
  v9 = *((_QWORD *)v2 + 4);
  v8 = *((_QWORD *)v2 + 5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1C069325C;
  return sub_1C06F3BB4(v7, a1, a2, v6, v9, v8);
}

ValueMetadata *type metadata accessor for StatusCoalescer()
{
  return &type metadata for StatusCoalescer;
}

uint64_t sub_1C06F533C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06F5378(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v8 = *((_QWORD *)v1 + 10);
  v9 = *((_QWORD *)v1 + 11);
  v10 = *((_QWORD *)v1 + 12);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1C069325C;
  return sub_1C06F47A4(a1, v6, v4, v5, v7, v8, v9, v10);
}

uint64_t sub_1C06F5410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C06F5158(a1, a2, a3, *(_QWORD ***)(v3 + 16));
}

uint64_t sub_1C06F5418()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C06F544C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = (uint64_t)(v1 + 2);
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1C06930A0;
  return sub_1C06F4B24(a1, v4, v5, v6, v7);
}

unint64_t sub_1C06F54C8()
{
  unint64_t result;

  result = qword_1EF61D778;
  if (!qword_1EF61D778)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074EC20, &type metadata for PeopleTaskError.TimedOut);
    atomic_store(result, (unint64_t *)&qword_1EF61D778);
  }
  return result;
}

uint64_t sub_1C06F550C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[5];
  _BYTE v4[40];

  sub_1C0685C78(a1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B450);
  type metadata accessor for DaemonStatusFetcher();
  if (swift_dynamicCast())
  {
    sub_1C0747030();
    v1 = 0x6E6F6D656164;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BAD0);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
      v1 = 0x7320737574617473;
    }
    else
    {
      v1 = 0x6E776F6E6B6E75;
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v1;
}

uint64_t sub_1C06F55FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _BYTE v10[40];

  sub_1C0685C78(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B450);
  type metadata accessor for DaemonStatusFetcher();
  if (swift_dynamicCast())
  {
    v1 = sub_1C0746EF8();
    v2 = sub_1C06F3380(v1);
    swift_bridgeObjectRelease();
    sub_1C0747030();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61BAD0);
    if (swift_dynamicCast())
    {
      sub_1C0685BC4(&v9, (uint64_t)v6 + 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C074B820;
      v3 = v7;
      v4 = v8;
      __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v6 + 1), v7);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 16))(v6, v3, v4);
      __asm { BR              X12 }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEFB0);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C074B820;
    *(_QWORD *)(v2 + 32) = 0x6E776F6E6B6E55;
    *(_QWORD *)(v2 + 40) = 0xE700000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v2;
}

ValueMetadata *type metadata accessor for PeopleTaskError.TimedOut()
{
  return &type metadata for PeopleTaskError.TimedOut;
}

uint64_t static PeopleFeatureFlags.shared.getter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PeopleFeatureFlags();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  if (qword_1ED500188 != -1)
    swift_once();
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = v1;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for PeopleFeatureFlags()
{
  return objc_opt_self();
}

uint64_t static FeatureFlagsProvider.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = sub_1C06F6A10();
  v2 = v1;
  if (v0 == sub_1C06F6A10() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_1C06F5A30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D810);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (_QWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    v14[0] = v5;
    v15 = v7;
    v16 = v6;
    sub_1C0746EF8();
    result = sub_1C069C870((uint64_t)v14);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F5B4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D818);
  v2 = sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return v2;
  }
  v4 = (uint64_t *)(a1 + 32);
  sub_1C0746F64();
  while (1)
  {
    v5 = *v4;
    v6 = sub_1C0746EF8();
    result = sub_1C069C8EC(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v2 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * result) = v5;
    v9 = *(_QWORD *)(v2 + 16);
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    *(_QWORD *)(v2 + 16) = v11;
    ++v4;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F5C3C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFE38);
  v2 = sub_1C074817C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1C0746F64();
  while (1)
  {
    sub_1C06F31F4(v6, (uint64_t)&v15, (uint64_t *)&unk_1ED4FFE10);
    v7 = v15;
    v8 = v16;
    result = sub_1C069C918(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1C0685BC4(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F5D7C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0D0);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    sub_1C0746EF8();
    sub_1C0746EF8();
    result = sub_1C069C918(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F5E9C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61B140);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    sub_1C0746EF8();
    sub_1C0746EF8();
    result = sub_1C069C918(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F5FB4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D120);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    sub_1C0746EF8();
    swift_unknownObjectRetain();
    result = sub_1C069C918(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F60CC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D810);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    sub_1C0746EF8();
    result = sub_1C069C9DC(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F61D8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0C0);
  v2 = sub_1C074817C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1C0746F64();
  while (1)
  {
    sub_1C06F31F4(v6, (uint64_t)&v15, &qword_1EF61D808);
    v7 = v15;
    v8 = v16;
    result = sub_1C069C918(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1C0685D00(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F630C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0E8);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    sub_1C0746EF8();
    result = sub_1C069CA54((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F6414(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D7F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0E0);
  v6 = sub_1C074817C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1C0746F64();
  while (1)
  {
    sub_1C06F31F4(v12, (uint64_t)v5, &qword_1EF61D7F0);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1C069C918(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for LocationItem(0);
    result = sub_1C068A658(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, type metadata accessor for LocationItem);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F65B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4FFE40);
  v2 = (_QWORD *)sub_1C074817C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1C0746F64();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    sub_1C0746EF8();
    v8 = v7;
    result = sub_1C069C918(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F66CC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0B8);
  v2 = sub_1C074817C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1C0746F64();
  while (1)
  {
    sub_1C06F31F4(v6, (uint64_t)v15, &qword_1EF61D800);
    result = sub_1C069C9AC((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1C0685D00(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C06F680C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D7F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D0C8);
  v6 = sub_1C074817C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1C0746F64();
  while (1)
  {
    sub_1C06F31F4(v12, (uint64_t)v5, &qword_1EF61D7F8);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1C069CA84(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for PeopleLocation();
    result = sub_1C068A658(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for PeopleLocation);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      sub_1C0747030();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

People::PeopleFeatureFlagNames_optional __swiftcall PeopleFeatureFlagNames.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (People::PeopleFeatureFlagNames_optional)rawValue;
}

void *static PeopleFeatureFlagNames.allCases.getter()
{
  return &unk_1E79E3700;
}

uint64_t PeopleFeatureFlagNames.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

People::PeopleFeatureFlagNames_optional sub_1C06F69D4(Swift::Int *a1)
{
  return PeopleFeatureFlagNames.init(rawValue:)(*a1);
}

void sub_1C06F69DC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_1C06F69E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E79E3700;
}

uint64_t sub_1C06F69F8()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1C06F6A04()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1C06F6A10()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1C0746F64();
  v1 = sub_1C06F87FC((uint64_t)&unk_1E79E3700, v0);
  sub_1C0747030();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1C06BF6B8(0, v2, 0);
    v3 = 0;
    v4 = v13;
    do
    {
      v5 = sub_1C0748248();
      v7 = v6;
      v13 = v4;
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C06BF6B8(v8 > 1, v9 + 1, 1);
        v4 = v13;
      }
      ++v3;
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v13 = v4;
  sub_1C0746EF8();
  sub_1C06F7D48(&v13);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
  sub_1C06C5C1C(&qword_1EF61D820, &qword_1EF61C4D8, MEMORY[0x1E0DEAF20]);
  v11 = sub_1C0747870();
  sub_1C0747030();
  return v11;
}

uint64_t sub_1C06F6BDC()
{
  sub_1C06F6A10();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06F6C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C06F919C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C06F6C4C()
{
  sub_1C06F90F4();
  return sub_1C07483B0();
}

uint64_t sub_1C06F6C74()
{
  sub_1C06F90F4();
  return sub_1C07483BC();
}

uint64_t sub_1C06F6C9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D788);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 136))(v5);
  sub_1C0746F64();
  v9 = sub_1C06F8E38(MEMORY[0x1E0DEE9E0], v8, v1);
  swift_bridgeObjectRelease();
  sub_1C0747030();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06F90F4();
  sub_1C0748398();
  v11[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D798);
  sub_1C06F9138(&qword_1EF61D7A0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAFA8], MEMORY[0x1E0DEA0B8]);
  sub_1C0748224();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06F6E10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  void (*v11)(_QWORD *, _QWORD);
  _QWORD *v12;
  _QWORD *v13;
  _QWORD v14[4];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D7A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06F90F4();
  result = sub_1C074838C();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D798);
    sub_1C06F9138(&qword_1EF61D7B0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAFC0], MEMORY[0x1E0DEA0D8]);
    sub_1C07481F4();
    v10 = v14[0];
    v11 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v3 + 152))(v14);
    v13 = v12;
    swift_bridgeObjectRelease();
    *v13 = MEMORY[0x1E0DEE9E0];
    v11(v14, 0);
    sub_1C0746EF8();
    sub_1C0746F64();
    sub_1C06F8A58(v10, v10, v3);
    swift_bridgeObjectRelease();
    sub_1C0747030();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeatureFlagsProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  return v0;
}

uint64_t FeatureFlagsProvider.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  return v0;
}

uint64_t FeatureFlagsProvider.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(_QWORD *, _QWORD);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v16[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D7A8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(uint64_t (**)(uint64_t))(v1 + 120))(v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C06F90F4();
  sub_1C0746F64();
  sub_1C074838C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_release_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D798);
    sub_1C06F9138(&qword_1EF61D7B0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAFC0], MEMORY[0x1E0DEA0D8]);
    sub_1C07481F4();
    v11 = v16[0];
    v12 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v9 + 152))(v16);
    v14 = v13;
    swift_bridgeObjectRelease();
    *v14 = MEMORY[0x1E0DEE9E0];
    v12(v16, 0);
    sub_1C0746F64();
    v15 = sub_1C0746EF8();
    sub_1C06F8A58(v15, v11, v9);
    swift_bridgeObjectRelease();
    sub_1C0747030();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_1C0747030();
  }
  return v9;
}

uint64_t sub_1C06F7244()
{
  swift_beginAccess();
  return sub_1C0746EF8();
}

uint64_t sub_1C06F7278(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C06F72BC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C06F72F8(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *a1;
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 136))();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1C069C818(v2), (v5 & 1) != 0))
    v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v4);
  else
    v6 = 0;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t FeatureFlagsProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeatureFlagsProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C06F7398()
{
  sub_1C0748350();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06F73F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 128))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1C06F741C(_QWORD *a1)
{
  return sub_1C06F6C9C(a1);
}

uint64_t sub_1C06F743C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 176))();
}

uint64_t sub_1C06F7464()
{
  sub_1C06F6A10();
  sub_1C07479A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06F74A4()
{
  sub_1C0748350();
  sub_1C06F6A10();
  sub_1C07479A8();
  swift_bridgeObjectRelease();
  return sub_1C0748374();
}

uint64_t sub_1C06F74FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1C06F6A10();
  v2 = v1;
  if (v0 == sub_1C06F6A10() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1C0748284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1C06F7584()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PeopleFeatureFlags();
  v0 = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  sub_1C06F8984(v1);
  JUMPOUT(0x1C06F76D0);
}

void sub_1C06F79E0()
{
  off_1EF61D780 = (_UNKNOWN *)MEMORY[0x1E0DEE9E0];
}

uint64_t static PeopleFeatureFlags.isDomainFeatureFlagEnabled(for:feature:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  char v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v20 = sub_1C0748008();
  v21 = v12;
  sub_1C07479CC();
  sub_1C0748008();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  if (qword_1EF61A3E0 != -1)
    swift_once();
  swift_beginAccess();
  v13 = off_1EF61D780;
  if (*((_QWORD *)off_1EF61D780 + 2))
  {
    sub_1C0746EF8();
    v14 = sub_1C069C918(v20, v21);
    if ((v15 & 1) != 0)
    {
      v16 = *(_BYTE *)(v13[7] + v14);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      return v16 & 1;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1C06F8984(MEMORY[0x1E0DEE9D8]);
  if (qword_1ED500188 != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)off_1ED500178 + 136))();
  swift_beginAccess();
  swift_bridgeObjectRelease();
  v16 = sub_1C06F922C(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = off_1EF61D780;
  off_1EF61D780 = (_UNKNOWN *)0x8000000000000000;
  sub_1C069D7A8(v16 & 1, v20, v21, isUniquelyReferenced_nonNull_native);
  off_1EF61D780 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v16 & 1;
}

uint64_t PeopleFeatureFlags.__allocating_init(from:)(uint64_t a1)
{
  _s6People0A6ErrorsO11createError_4codeSo7NSErrorCSS_SitFZ_0(0x726F707075736E55, 0xEB00000000646574, 500);
  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

void PeopleFeatureFlags.__allocating_init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PeopleFeatureFlags.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t PeopleFeatureFlags.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PeopleFeatureFlags.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

const char *sub_1C06F7D20()
{
  return "AppleAccount";
}

const char *sub_1C06F7D34()
{
  return "AABranding";
}

uint64_t sub_1C06F7D48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1C07386F4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1C06F7DB0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C06F7DB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1C074823C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1C06F8498(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1C06F8564((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1C0737EB0((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1C0747B88();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1C0748284();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1C0748284()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C0737B0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1C0737B0C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1C06F8564((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C0748284() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1C0748110();
  __break(1u);
  return result;
}

uint64_t sub_1C06F8498(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1C0748284(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C06F8564(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1C0748284() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1C0748284() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1C0737C04((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1C0748188();
  __break(1u);
  return result;
}

uint64_t sub_1C06F87FC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = 0;
    v5 = a1 + 32;
    result = MEMORY[0x1E0DEE9D8];
    v20 = v5;
    while (1)
    {
      v22 = result;
      v7 = 0;
      if (v4 <= v2)
        v8 = v2;
      else
        v8 = v4;
      v9 = v4 - v8;
      while (1)
      {
        if (!(v9 + v7))
        {
          __break(1u);
          return result;
        }
        v10 = *(_BYTE *)(v5 + v4);
        v11 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 136))();
        if (*(_QWORD *)(v11 + 16))
        {
          v12 = sub_1C069C818(v10);
          if ((v13 & 1) != 0)
            break;
        }
        result = swift_bridgeObjectRelease();
LABEL_8:
        ++v7;
        ++v5;
        if (v4 == --v2)
          return v22;
      }
      v14 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 56) + v12);
      result = swift_bridgeObjectRelease();
      if (v14 != 1)
        goto LABEL_8;
      v15 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C06BF6D4(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v15 = v22;
      }
      result = v15;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(result + 24);
      if (v16 >= v17 >> 1)
      {
        sub_1C06BF6D4(v17 > 1, v16 + 1, 1);
        result = v22;
      }
      v18 = v4 + 1;
      v4 += 1 + v7;
      *(_QWORD *)(result + 16) = v16 + 1;
      *(_BYTE *)(result + v16 + 32) = v10;
      v19 = v18 == v2;
      v2 = v21;
      v5 = v20;
      if (v19)
        return result;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1C06F8984(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED500288);
    v3 = (_QWORD *)sub_1C074817C();
    for (i = (char *)(a1 + 33); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1C069C818(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1C06F8A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(_BYTE *, _QWORD);
  _BYTE v40[32];
  _QWORD *v41;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  sub_1C0746EF8();
  v10 = 0;
  v36 = v5;
  v37 = a2;
  v35 = v9;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_21;
    }
    v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v10 >= v9)
      return sub_1C0747030();
    v14 = *(_QWORD *)(v5 + 8 * v10);
    if (!v14)
      break;
LABEL_20:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_21:
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    if (v16 <= 7)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v17 = sub_1C069C97C(v16);
        if ((v18 & 1) != 0 && *(_BYTE *)(*(_QWORD *)(a2 + 56) + v17) == 1)
        {
          v39 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)a3 + 152))(v40);
          v20 = v19;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v41 = (_QWORD *)*v20;
          v22 = v41;
          *v20 = 0x8000000000000000;
          v24 = sub_1C069C818(v16);
          v25 = v22[2];
          v26 = (v23 & 1) == 0;
          v27 = v25 + v26;
          if (__OFADD__(v25, v26))
            goto LABEL_42;
          v28 = v23;
          if (v22[3] >= v27)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v31 = v41;
              if ((v23 & 1) != 0)
                goto LABEL_4;
            }
            else
            {
              sub_1C06DFFC4();
              v31 = v41;
              if ((v28 & 1) != 0)
                goto LABEL_4;
            }
          }
          else
          {
            sub_1C070777C(v27, isUniquelyReferenced_nonNull_native);
            v29 = sub_1C069C818(v16);
            if ((v28 & 1) != (v30 & 1))
              goto LABEL_45;
            v24 = v29;
            v31 = v41;
            if ((v28 & 1) != 0)
            {
LABEL_4:
              *(_BYTE *)(v31[7] + v24) = 1;
              goto LABEL_5;
            }
          }
          v31[(v24 >> 6) + 8] |= 1 << v24;
          *(_BYTE *)(v31[6] + v24) = v16;
          *(_BYTE *)(v31[7] + v24) = 1;
          v32 = v31[2];
          v13 = __OFADD__(v32, 1);
          v33 = v32 + 1;
          if (v13)
            goto LABEL_43;
          v31[2] = v33;
LABEL_5:
          *v20 = v31;
          swift_bridgeObjectRelease();
          v39(v40, 0);
          v5 = v36;
          a2 = v37;
          v9 = v35;
        }
      }
    }
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v9)
    return sub_1C0747030();
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_19;
  v15 = v10 + 2;
  if (v10 + 2 >= v9)
    return sub_1C0747030();
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_19;
  v15 = v10 + 3;
  if (v10 + 3 >= v9)
    return sub_1C0747030();
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_19;
  v15 = v10 + 4;
  if (v10 + 4 >= v9)
    return sub_1C0747030();
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_19:
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v9)
      return sub_1C0747030();
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

unint64_t sub_1C06F8D3C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D118);
  v3 = (_QWORD *)sub_1C074817C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1C069C97C(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    sub_1C0746EF8();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    sub_1C0746EF8();
    result = sub_1C069C97C(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06F8E38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  char v35;
  unint64_t v36;
  _QWORD *v37;

  v5 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = sub_1C0746EF8();
  v11 = 0;
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v11 << 6);
LABEL_20:
    v17 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v13);
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 136))(v10);
    if (!*(_QWORD *)(v18 + 16))
      goto LABEL_4;
    v19 = sub_1C069C818(v17);
    if ((v20 & 1) == 0)
      goto LABEL_4;
    v21 = *(_BYTE *)(*(_QWORD *)(v18 + 56) + v19);
    v10 = swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v37 = a1;
      v23 = sub_1C069C97C(v17);
      v25 = a1[2];
      v26 = (v24 & 1) == 0;
      v14 = __OFADD__(v25, v26);
      v27 = v25 + v26;
      if (v14)
        goto LABEL_40;
      if (a1[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v36 = v23;
          v32 = v24;
          sub_1C06DFE38();
          v24 = v32;
          v23 = v36;
        }
      }
      else
      {
        v35 = v24;
        sub_1C07074E0(v27, isUniquelyReferenced_nonNull_native);
        v23 = sub_1C069C97C(v17);
        v29 = v28 & 1;
        v24 = v35;
        if ((v35 & 1) != v29)
          goto LABEL_42;
      }
      a1 = v37;
      if ((v24 & 1) != 0)
      {
        *(_BYTE *)(v37[7] + v23) = 1;
      }
      else
      {
        v37[(v23 >> 6) + 8] |= 1 << v23;
        *(_QWORD *)(v37[6] + 8 * v23) = v17;
        *(_BYTE *)(v37[7] + v23) = 1;
        v30 = v37[2];
        v14 = __OFADD__(v30, 1);
        v31 = v30 + 1;
        if (v14)
          goto LABEL_41;
        v37[2] = v31;
      }
LABEL_4:
      v10 = swift_bridgeObjectRelease();
    }
  }
  v14 = __OFADD__(v11++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v11 >= v9)
    goto LABEL_37;
  v15 = *(_QWORD *)(v5 + 8 * v11);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_20;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v9)
    goto LABEL_37;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_18;
  v16 = v11 + 2;
  if (v11 + 2 >= v9)
    goto LABEL_37;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_18;
  v16 = v11 + 3;
  if (v11 + 3 >= v9)
    goto LABEL_37;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_18;
  v16 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_37:
    sub_1C0747030();
    return (uint64_t)a1;
  }
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
LABEL_18:
    v11 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v9)
      goto LABEL_37;
    v15 = *(_QWORD *)(v5 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1C07482F0();
  __break(1u);
  return result;
}

unint64_t sub_1C06F90F4()
{
  unint64_t result;

  result = qword_1EF61D790;
  if (!qword_1EF61D790)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074EFE8, &type metadata for FeatureFlagsProvider.Keys);
    atomic_store(result, (unint64_t *)&qword_1EF61D790);
  }
  return result;
}

uint64_t sub_1C06F9138(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF61D798);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1C3BA0C2C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C06F919C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C0748284();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C06F9218()
{
  return 0x7365756C6176;
}

uint64_t sub_1C06F922C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24[5];

  v24[3] = (uint64_t)&type metadata for FeatureFlagsProvider.Key;
  v24[4] = sub_1C06F99B8();
  v12 = swift_allocObject();
  v24[0] = v12;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_BYTE *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_BYTE *)(v12 + 56) = a6;
  v13 = sub_1C07474E0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  if (qword_1ED4FFF68 != -1)
    swift_once();
  v14 = sub_1C0747720();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED4FFF50);
  v15 = sub_1C0747708();
  v16 = sub_1C0747D80();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v24[0] = v18;
    *(_DWORD *)v17 = 136315650;
    v19 = sub_1C0748008();
    sub_1C069092C(v19, v20, v24);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v21 = sub_1C0748008();
    sub_1C069092C(v21, v22, v24);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 1024;
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v15, v16, "%s:%s is enabled: %{BOOL}d", (uint8_t *)v17, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v18, -1, -1);
    MEMORY[0x1C3BA0D04](v17, -1, -1);
  }

  return v13 & 1;
}

unint64_t sub_1C06F948C()
{
  unint64_t result;

  result = qword_1ED500170;
  if (!qword_1ED500170)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PeopleFeatureFlagNames, &type metadata for PeopleFeatureFlagNames);
    atomic_store(result, (unint64_t *)&qword_1ED500170);
  }
  return result;
}

uint64_t sub_1C06F94D0()
{
  return sub_1C06C5C1C(&qword_1EF61D7B8, &qword_1EF61D7C0, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1C06F9500()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61D7C8;
  if (!qword_1EF61D7C8)
  {
    v1 = type metadata accessor for FeatureFlagsProvider();
    result = MEMORY[0x1C3BA0C2C]("ݤ)'", v1);
    atomic_store(result, (unint64_t *)&qword_1EF61D7C8);
  }
  return result;
}

uint64_t type metadata accessor for FeatureFlagsProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C06F9564@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_1C06F9594(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 144);
  v3 = sub_1C0746EF8();
  return v2(v3);
}

uint64_t getEnumTagSinglePayload for PeopleFeatureFlagNames(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PeopleFeatureFlagNames(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C06F96A0 + 4 * byte_1C074EC65[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C06F96D4 + 4 * byte_1C074EC60[v4]))();
}

uint64_t sub_1C06F96D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06F96DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C06F96E4);
  return result;
}

uint64_t sub_1C06F96F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C06F96F8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C06F96FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C06F9704(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleFeatureFlagNames()
{
  return &type metadata for PeopleFeatureFlagNames;
}

uint64_t method lookup function for FeatureFlagsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureFlagsProvider.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.decode(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.keyValues.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.keyValues.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.keyValues.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.isEnabled(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.isDomainFeatureEnabled(domainName:featureName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FeatureFlagsProvider.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t method lookup function for PeopleFeatureFlags()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for FeatureFlagsProvider.Keys()
{
  return &type metadata for FeatureFlagsProvider.Keys;
}

uint64_t _s6People20FeatureFlagsProviderC4KeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C06F983C + 4 * byte_1C074EC6A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C06F985C + 4 * byte_1C074EC6F[v4]))();
}

_BYTE *sub_1C06F983C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C06F985C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C06F9864(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C06F986C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C06F9874(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C06F987C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountFeatures()
{
  return &type metadata for AppleAccountFeatures;
}

unint64_t sub_1C06F989C()
{
  unint64_t result;

  result = qword_1EF61D7D0;
  if (!qword_1EF61D7D0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074EF08, &type metadata for AppleAccountFeatures);
    atomic_store(result, (unint64_t *)&qword_1EF61D7D0);
  }
  return result;
}

unint64_t sub_1C06F98E4()
{
  unint64_t result;

  result = qword_1EF61D7D8;
  if (!qword_1EF61D7D8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074EFC0, &type metadata for FeatureFlagsProvider.Keys);
    atomic_store(result, (unint64_t *)&qword_1EF61D7D8);
  }
  return result;
}

unint64_t sub_1C06F992C()
{
  unint64_t result;

  result = qword_1EF61D7E0;
  if (!qword_1EF61D7E0)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074EF30, &type metadata for FeatureFlagsProvider.Keys);
    atomic_store(result, (unint64_t *)&qword_1EF61D7E0);
  }
  return result;
}

unint64_t sub_1C06F9974()
{
  unint64_t result;

  result = qword_1EF61D7E8;
  if (!qword_1EF61D7E8)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074EF58, &type metadata for FeatureFlagsProvider.Keys);
    atomic_store(result, (unint64_t *)&qword_1EF61D7E8);
  }
  return result;
}

unint64_t sub_1C06F99B8()
{
  unint64_t result;

  result = qword_1ED500370;
  if (!qword_1ED500370)
  {
    result = MEMORY[0x1C3BA0C2C](&unk_1C074F06C, &type metadata for FeatureFlagsProvider.Key);
    atomic_store(result, (unint64_t *)&qword_1ED500370);
  }
  return result;
}

uint64_t sub_1C06F99FC()
{
  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for FeatureFlagsProvider.Key(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeatureFlagsProvider.Key(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagsProvider.Key()
{
  return &type metadata for FeatureFlagsProvider.Key;
}

uint64_t sub_1C06F9A78(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  uint64_t v13;

  result = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    sub_1C0746EF8();
    v8 = (uint64_t *)(a3 + 40);
    do
    {
      v9 = *v8;
      v12[0] = *(v8 - 1);
      v12[1] = v9;
      sub_1C0746EF8();
      a1(&v11, v12);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v10 = swift_bridgeObjectRelease();
      if (v11)
      {
        MEMORY[0x1C3B9FD5C](v10);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C0747B58();
        sub_1C0747BA0();
        sub_1C0747B34();
      }
      v8 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

_QWORD *sub_1C06F9BB0(void (*a1)(__int128 *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  _QWORD *v14;
  __int128 v17;
  __int128 v18;
  id v19;

  if (a3 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1C0746EF8();
  for (; v5; v5 = sub_1C074814C())
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3BA029C](i - 4, a3) : *(id *)(a3 + 8 * i);
      v9 = v8;
      v10 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v19 = v8;
      a1(&v18, &v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      if ((_QWORD)v18)
      {
        v17 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1C06B4134(0, v6[2] + 1, 1, v6);
        v12 = v6[2];
        v11 = v6[3];
        v13 = v17;
        if (v12 >= v11 >> 1)
        {
          v14 = sub_1C06B4134((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
          v13 = v17;
          v6 = v14;
        }
        v6[2] = v12 + 1;
        *(_OWORD *)&v6[2 * v12 + 4] = v13;
      }
      if (v10 == v5)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    sub_1C0746EF8();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1C06F9D78(void (*a1)(__int128 *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  _QWORD *v13;
  __int128 v15;
  __int128 v16;
  _QWORD v17[2];

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1C0746EF8();
  v7 = (uint64_t *)(a3 + 40);
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *v7;
    v17[0] = *(v7 - 1);
    v17[1] = v9;
    sub_1C0746EF8();
    a1(&v16, v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    if ((_QWORD)v16)
    {
      v15 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1C06B4134(0, v8[2] + 1, 1, v8);
      v11 = v8[2];
      v10 = v8[3];
      v12 = v15;
      if (v11 >= v10 >> 1)
      {
        v13 = sub_1C06B4134((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
        v12 = v15;
        v8 = v13;
      }
      v8[2] = v11 + 1;
      *(_OWORD *)&v8[2 * v11 + 4] = v12;
    }
    v7 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C06F9EDC(void (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t result;
  id v24;
  void (*v25)(id *);
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;

  v7 = v6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D880);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C538);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v22 = a6 >> 1;
  if (v22 == a5)
  {
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v38 = (char *)&v38 - v19;
    v42 = v21;
    v43 = v18;
    v44 = v20;
    result = swift_unknownObjectRetain();
    v45 = MEMORY[0x1E0DEE9D8];
    v39 = a4;
    v40 = a3;
    v41 = a1;
    while (a5 < v22)
    {
      v46 = *(id *)(a4 + 8 * a5);
      v24 = v46;
      v25 = (void (*)(id *))a1;
      v26 = v24;
      v25(&v46);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        return v45;
      }
      v27 = a4;
      v28 = a3;

      v30 = v43;
      v29 = v44;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v15, 1, v43) == 1)
      {
        result = sub_1C06FD65C((uint64_t)v15);
        a1 = v41;
        a3 = v28;
        a4 = v27;
        v7 = 0;
      }
      else
      {
        v31 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v32 = v38;
        v31(v38, v15, v30);
        v31(v42, v32, v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_1C06B4240(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
        v33 = v44;
        v7 = 0;
        v35 = *(_QWORD *)(v45 + 16);
        v34 = *(_QWORD *)(v45 + 24);
        if (v35 >= v34 >> 1)
        {
          v37 = sub_1C06B4240(v34 > 1, v35 + 1, 1, v45);
          v33 = v44;
          v45 = v37;
        }
        v36 = v45;
        *(_QWORD *)(v45 + 16) = v35 + 1;
        result = ((uint64_t (*)(unint64_t))v31)(v36+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v35);
        a4 = v39;
        a3 = v40;
        a1 = v41;
      }
      if (v22 == ++a5)
      {
        swift_unknownObjectRelease();
        return v45;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t PersonTypeAppEntityQuery.init()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  v2 = _s6People14ContactFetcherCACycfC_0();
  result = type metadata accessor for ContactFetcher();
  a1[3] = result;
  a1[4] = &protocol witness table for ContactFetcher;
  *a1 = v2;
  return result;
}

uint64_t PersonTypeAppEntityQuery.init(contactFetcher:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0685BC4(a1, a2);
}

uint64_t sub_1C06FA1DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(10, MEMORY[0x1E0DEE9D8], v2, v3);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    v18 = v1[3];
    v19 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v18);
    v20 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 48))(500, 0, v18, v19);
    v21 = sub_1C06FD10C(v20, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  v6 = sub_1C074814C();
  if (!v6)
    goto LABEL_13;
LABEL_3:
  result = sub_1C06BF6B8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v22 = v0;
    v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1C3BA029C](v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_identifier);
      v12 = sub_1C0747930();
      v14 = v13;

      v16 = v4[2];
      v15 = v4[3];
      if (v16 >= v15 >> 1)
        sub_1C06BF6B8(v15 > 1, v16 + 1, 1);
      ++v8;
      v4[2] = v16 + 1;
      v17 = &v4[2 * v16];
      v17[4] = v12;
      v17[5] = v14;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    v1 = v22;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C06FA3C0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  _QWORD *v22;
  _BYTE v23[16];
  _QWORD *v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D840);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE58);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v1[3];
  v11 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v10);
  v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(10, MEMORY[0x1E0DEE9D8], v10, v11);
  v24 = v1;
  v13 = sub_1C06F9BB0((void (*)(__int128 *__return_ptr, id *))sub_1C06FD50C, (uint64_t)v23, v12);
  swift_bridgeObjectRelease();
  v14 = sub_1C06FA1DC();
  v22 = v1;
  v15 = sub_1C06F9BB0((void (*)(__int128 *__return_ptr, id *))sub_1C06FD50C, (uint64_t)v21, v14);
  swift_bridgeObjectRelease();
  v16 = sub_1C0747228();
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v9, 1, 1, v16);
  sub_1C06B7E50();
  sub_1C0746F10();
  if (v13[2])
  {
    v18 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v17)(v9, 1, 1, v16);
    MEMORY[0x1E0C80A78](v18);
    *(_QWORD *)&v21[-16] = v13;
    *(_QWORD *)&v21[-8] = v15;
    sub_1C0746F10();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v17)(v9, 1, 1, v16);
    MEMORY[0x1E0C80A78](v19);
    *(_QWORD *)&v21[-16] = v15;
    sub_1C0746F10();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v4 + 32))(a1, v6, v3);
}

double PersonTypeAppEntityQuery.buildPersonType(for:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  id v10;
  Swift::String v11;
  void *object;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t countAndFlagsBits;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double result;
  uint64_t v33;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v3 = objc_msgSend(a1, sel_identifier);
  v4 = sub_1C0747930();
  v6 = v5;

  v39 = v4;
  v40 = v6;
  type metadata accessor for DaemonConnection();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C07471EC();

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97218]), sel_init, 0xE700000000000000);
  objc_msgSend(v10, sel_setStyle_, 0);
  v11 = ContactFormatter.displayName(for:includePhone:)((CNContact)a1, 1);
  object = v11._object;

  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_1C07471EC();
  v16 = v15;

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97218]), sel_init, 0xE700000000000000);
  objc_msgSend(v17, sel_setStyle_, 1000);
  v36 = v14;
  v37 = v16;
  v38 = v17;
  ContactFormatter.displayName(for:includePhone:)((CNContact)a1, 1);

  swift_bridgeObjectRelease();
  if (qword_1ED4FEEA0 != -1)
    swift_once();
  sub_1C0693BDC();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v36 = 124;
    v37 = 0xE100000000000000;
    sub_1C07479CC();
    swift_bridgeObjectRelease();
    sub_1C07479CC();
    swift_bridgeObjectRelease();
  }
  if (qword_1ED4FEA10[0] != -1)
    swift_once();
  v20 = sub_1C0747720();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED4FE9F0);
  v22 = v39;
  v21 = v40;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v23 = a1;
  v24 = sub_1C0747708();
  v25 = sub_1C0747D68();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v26 = 136315906;
    sub_1C069092C(0xD000000000000015, 0x80000001C0754C30, &v36);
    sub_1C0747E40();
    *(_WORD *)(v26 + 12) = 2080;
    sub_1C0746EF8();
    sub_1C069092C(v22, v21, &v36);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2080;
    sub_1C0746EF8();
    countAndFlagsBits = v11._countAndFlagsBits;
    sub_1C069092C(v11._countAndFlagsBits, (unint64_t)v11._object, &v36);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 32) = 2080;
    v28 = objc_msgSend(v23, sel_description);
    v29 = sub_1C0747930();
    v31 = v30;

    *(_QWORD *)&v35 = sub_1C069092C(v29, v31, &v36);
    sub_1C0747E40();

    object = v11._object;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v24, v25, "PersonTypeAppEntity: %s id: %s, displayString: %s, contact: %s", (uint8_t *)v26, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v33, -1, -1);
    MEMORY[0x1C3BA0D04](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    countAndFlagsBits = v11._countAndFlagsBits;
  }
  swift_beginAccess();
  PersonTypeAppEntity.init(id:displayString:)(v39, v40, countAndFlagsBits, (uint64_t)object, (uint64_t *)&v35);
  result = *(double *)&v35;
  *a2 = v35;
  return result;
}

uint64_t sub_1C06FABE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v0 = sub_1C0747228();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C520);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  sub_1C0747210();
  sub_1C06B7E50();
  sub_1C0746EF8();
  sub_1C0746F04();
  sub_1C0747210();
  sub_1C0746EF8();
  sub_1C0746F04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C518);
  v8 = *(_QWORD *)(v2 + 72);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C074C980;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v12(v11, v7, v1);
  v12(v11 + v8, v5, v1);
  v13 = sub_1C0746EF8();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v5, v1);
  v14(v7, v1);
  return v13;
}

uint64_t sub_1C06FADE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1C0747228();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C520);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0747210();
  sub_1C06B7E50();
  sub_1C0746EF8();
  sub_1C0746F04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C518);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C074B820;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 16))(v6 + v5, v4, v1);
  v7 = sub_1C0746EF8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

uint64_t PersonTypeAppEntityQuery.entities(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_1C0747720();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06FAFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[2];

  if (qword_1ED4FEA10[0] != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED4FE9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  v5 = sub_1C0747708();
  v6 = sub_1C0747D80();
  v7 = os_log_type_enabled(v5, v6);
  v9 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 32);
  if (v7)
  {
    v22 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 56);
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v23[0] = v13;
    *(_DWORD *)v12 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_1C069092C(0x7365697469746E65, 0xEE00293A726F6628, v23);
    sub_1C0747E40();
    *(_WORD *)(v12 + 12) = 2080;
    v14 = MEMORY[0x1C3B9FD8C](v11, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v0 + 24) = sub_1C069092C(v14, v15, v23);
    sub_1C0747E40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v5, v6, "PersonTypeAppEntity: %s IDs: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v13, -1, -1);
    MEMORY[0x1C3BA0D04](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v10);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v16 = *(_QWORD *)(v0 + 32);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = swift_task_alloc();
  *(_QWORD *)(v18 + 16) = v17;
  v19 = sub_1C06F9D78((void (*)(__int128 *__return_ptr, _QWORD *))sub_1C06FD4BC, v18, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v19);
}

double PersonTypeAppEntityQuery.queryPersonType(for:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Swift::String v24;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  double result;
  NSObject *log;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[16];
  __int128 *v48;
  __int128 v49;
  id v50;
  uint64_t v51;

  *(_QWORD *)&v49 = 124;
  *((_QWORD *)&v49 + 1) = 0xE100000000000000;
  v48 = &v49;
  sub_1C0746EF8();
  v7 = (_QWORD *)sub_1C06B73B0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1C06C6504, (uint64_t)v47, a1, a2);
  if (v7[2])
  {
    v8 = v7[4];
    v9 = v7[5];
    v10 = v7[6];
    v11 = v7[7];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1C3B9FBF4](v8, v9, v10, v11);
    v14 = v13;
    swift_bridgeObjectRelease_n();
    v15 = v3[3];
    v16 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v15);
    v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 24))(v12, v14, 0, v15, v16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      type metadata accessor for DaemonConnection();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v20 = sub_1C07471EC();
      v22 = v21;

      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97218]), sel_init, 0xE700000000000000);
      objc_msgSend(v23, sel_setStyle_, 0);
      *(_QWORD *)&v49 = v20;
      *((_QWORD *)&v49 + 1) = v22;
      v50 = v23;
      v24 = ContactFormatter.displayName(for:includePhone:)((CNContact)v17, 1);
      countAndFlagsBits = v24._countAndFlagsBits;
      object = v24._object;

      swift_bridgeObjectRelease();
      if (qword_1ED4FEA10[0] != -1)
        swift_once();
      v27 = sub_1C0747720();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED4FE9F0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v28 = v17;
      v29 = sub_1C0747708();
      v30 = sub_1C0747D68();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        *(_QWORD *)&v49 = v45;
        *(_DWORD *)v31 = 136315906;
        v51 = sub_1C069092C(0xD000000000000015, 0x80000001C0754C50, (uint64_t *)&v49);
        sub_1C0747E40();
        v46 = a1;
        *(_WORD *)(v31 + 12) = 2080;
        sub_1C0746EF8();
        v51 = sub_1C069092C(a1, a2, (uint64_t *)&v49);
        sub_1C0747E40();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v31 + 22) = 2080;
        sub_1C0746EF8();
        v51 = sub_1C069092C(v24._countAndFlagsBits, (unint64_t)v24._object, (uint64_t *)&v49);
        sub_1C0747E40();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v31 + 32) = 2080;
        log = v29;
        v32 = a3;
        v33 = objc_msgSend(v28, sel_description);
        v34 = sub_1C0747930();
        v36 = v35;

        a3 = v32;
        v37 = v34;
        a1 = v46;
        v51 = sub_1C069092C(v37, v36, (uint64_t *)&v49);
        sub_1C0747E40();

        countAndFlagsBits = v24._countAndFlagsBits;
        object = v24._object;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0671000, log, v30, "Returning existing PersonTypeAppEntity: %s id: %s, displayString: %s, contact: %s", (uint8_t *)v31, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1C3BA0D04](v45, -1, -1);
        MEMORY[0x1C3BA0D04](v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1C0746EF8();
      PersonTypeAppEntity.init(id:displayString:)(a1, a2, countAndFlagsBits, (uint64_t)object, (uint64_t *)&v49);

      result = *(double *)&v49;
      *(_OWORD *)a3 = v49;
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1ED4FEA10[0] != -1)
    swift_once();
  v38 = sub_1C0747720();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED4FE9F0);
  swift_bridgeObjectRetain_n();
  v39 = sub_1C0747708();
  v40 = sub_1C0747D74();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    *(_QWORD *)&v49 = v42;
    *(_DWORD *)v41 = 136315138;
    sub_1C0746EF8();
    v51 = sub_1C069092C(a1, a2, (uint64_t *)&v49);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0671000, v39, v40, "PersonTypeAppEntity: Could not find contact for id: %s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v42, -1, -1);
    MEMORY[0x1C3BA0D04](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  return result;
}

uint64_t PersonTypeAppEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE58);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06FB8F0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  Swift::String_optional v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (qword_1ED4FEA10[0] != -1)
    swift_once();
  v1 = sub_1C0747720();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED4FE9F0);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D80();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v33 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_1C069092C(0xD000000000000013, 0x80000001C0754C70, &v33);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v2, v3, "PersonTypeAppEntity: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v5, -1, -1);
    MEMORY[0x1C3BA0D04](v4, -1, -1);
  }

  v6 = String.trimToNil()();
  v7 = *(_QWORD **)(v0 + 48);
  if (v6.value._object)
  {
    v8 = v7[3];
    v9 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v10 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 48))(0, 1, v8, v9);
    v11 = sub_1C06FD318(v10, v6.value._countAndFlagsBits, (uint64_t)v6.value._object);
    swift_bridgeObjectRelease();
    if (v11 >> 62)
    {
      sub_1C0746EF8();
      v29 = sub_1C074814C();
      swift_bridgeObjectRelease();
      sub_1C0746EF8();
      v30 = sub_1C074814C();
      swift_bridgeObjectRelease();
      if (v30 < 0)
        __break(1u);
      if (v29 >= 500)
        v31 = 500;
      else
        v31 = v29;
      if (v29 >= 0)
        v12 = v31;
      else
        v12 = 500;
      sub_1C0746EF8();
      v32 = sub_1C074814C();
      swift_bridgeObjectRelease();
      if (v32 < v12)
        __break(1u);
    }
    else if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) >= 500)
    {
      v12 = 500;
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if ((v11 & 0xC000000000000001) != 0 && v12 != 0)
    {
      sub_1C06C9584();
      v14 = 0;
      do
      {
        v15 = v14 + 1;
        sub_1C0748020();
        v14 = v15;
      }
      while (v12 != v15);
    }
    if (v11 >> 62)
    {
      sub_1C0746EF8();
      v17 = sub_1C0748158();
      v18 = v20;
      v16 = v21;
      v19 = v22;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = 0;
      v17 = v11 & 0xFFFFFFFFFFFFFF8;
      v18 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
      v19 = (2 * v12) | 1;
    }
    v24 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 56);
    v25 = swift_task_alloc();
    *(_QWORD *)(v25 + 16) = v24;
    v26 = sub_1C06F9EDC((void (*)(_QWORD))sub_1C06FD4EC, v25, v17, v18, v16, v19);
    swift_unknownObjectRelease();
    swift_task_dealloc();
    v27 = sub_1C0747228();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v23, 1, 1, v27);
    *(_QWORD *)(swift_task_alloc() + 16) = v26;
    sub_1C06B7E50();
    sub_1C0746F10();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  else
  {
    sub_1C06FA3C0(*(_QWORD *)(v0 + 24));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06FBCEC(id *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  Swift::String_optional v7;
  char v8;
  id v9;
  Swift::String_optional v10;
  char v11;
  id v12;
  Swift::String_optional v13;
  char v14;
  id v15;
  Swift::String_optional v16;
  char v17;
  id v18;
  Swift::String_optional v19;
  char v20;
  char v21;
  id v23;
  void *object;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String_optional v35;
  Swift::String_optional v36;
  Swift::String_optional v37;
  Swift::String_optional v38;
  Swift::String_optional v39;

  v5 = *a1;
  v6 = objc_msgSend(*a1, sel_givenName);
  sub_1C0747930();

  sub_1C0746EF8();
  v7 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v7.value._object)
  {
    v35 = v7;
    v25 = a2;
    v30 = a3;
    sub_1C068F2D0();
    v8 = sub_1C0747E94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v9 = objc_msgSend(v5, sel_middleName, v25, v30, v35);
  sub_1C0747930();

  sub_1C0746EF8();
  v10 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v10.value._object)
  {
    v36 = v10;
    v26 = a2;
    v31 = a3;
    sub_1C068F2D0();
    v11 = sub_1C0747E94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v12 = objc_msgSend(v5, sel_familyName, v26, v31, v36);
  sub_1C0747930();

  sub_1C0746EF8();
  v13 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v13.value._object)
  {
    v37 = v13;
    v27 = a2;
    v32 = a3;
    sub_1C068F2D0();
    v14 = sub_1C0747E94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend(v5, sel_phoneticGivenName, v27, v32, v37);
  sub_1C0747930();

  sub_1C0746EF8();
  v16 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (!v16.value._object)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v38 = v16;
  v28 = a2;
  v33 = a3;
  sub_1C068F2D0();
  v17 = sub_1C0747E94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
LABEL_19:
    v21 = 1;
    return v21 & 1;
  }
LABEL_17:
  v18 = objc_msgSend(v5, sel_phoneticMiddleName, v28, v33, v38);
  sub_1C0747930();

  sub_1C0746EF8();
  v19 = String.trimToNil()();
  swift_bridgeObjectRelease();
  if (v19.value._object)
  {
    v39 = v19;
    v29 = a2;
    v34 = a3;
    sub_1C068F2D0();
    v20 = sub_1C0747E94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v23 = objc_msgSend(v5, sel_phoneticFamilyName, v29, v34, v39);
  sub_1C0747930();

  sub_1C0746EF8();
  object = String.trimToNil()().value._object;
  swift_bridgeObjectRelease();
  if (object)
  {
    sub_1C068F2D0();
    v21 = sub_1C0747E94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_1C06FC118@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v5;

  PersonTypeAppEntityQuery.buildPersonType(for:)(*a1, &v5);
  sub_1C06B7E50();
  sub_1C0746DFC();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C538);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_1C06FC19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C520);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C06B7E50();
  sub_1C0746EF8();
  sub_1C0746EE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C518);
  v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C074B820;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  v6 = sub_1C0746EF8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t PersonTypeAppEntityQuery.suggestedEntities()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[11] = a1;
  v2[12] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C520);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v4 = sub_1C0747228();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FEE58);
  v2[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C06FC374()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, _QWORD);
  unint64_t *v16;
  unint64_t *v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, _QWORD);
  unint64_t *v30;
  unint64_t *v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  if (qword_1ED4FEA10[0] != -1)
    swift_once();
  v1 = sub_1C0747720();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED4FE9F0);
  v2 = sub_1C0747708();
  v3 = sub_1C0747D80();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v40 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 80) = sub_1C069092C(0xD000000000000013, 0x80000001C0754C90, &v40);
    sub_1C0747E40();
    _os_log_impl(&dword_1C0671000, v2, v3, "PersonTypeAppEntity: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v5, -1, -1);
    MEMORY[0x1C3BA0D04](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD **)(v0 + 96);
  v10 = v9[3];
  v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(10, MEMORY[0x1E0DEE9D8], v10, v11);
  v13 = swift_task_alloc();
  *(_QWORD *)(v13 + 16) = v9;
  v14 = sub_1C06F9BB0((void (*)(__int128 *__return_ptr, id *))sub_1C06FD50C, v13, v12);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, 1, 1, v8);
  sub_1C06B7E50();
  sub_1C0746F10();
  if (v14[2])
  {
    sub_1C0747210();
    sub_1C0746F04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D840);
    v15 = (void (*)(uint64_t, _QWORD))sub_1C0746F1C();
    v17 = v16;
    v18 = *v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v17 = v18;
    v20 = v0 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v18 = sub_1C06B4254(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
      *v17 = v18;
    }
    v22 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(v18 + 24);
    if (v22 >= v21 >> 1)
    {
      v18 = sub_1C06B4254(v21 > 1, v22 + 1, 1, v18);
      *v17 = v18;
    }
    v23 = *(_QWORD *)(v0 + 128);
    v24 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v18 + 16) = v22 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v18+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v22, v23, v24);
    v15(v0 + 16, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = v0 + 48;
  }
  v26 = *(_QWORD *)(v0 + 96);
  sub_1C0747210();
  v27 = sub_1C06FA1DC();
  v28 = swift_task_alloc();
  *(_QWORD *)(v28 + 16) = v26;
  sub_1C06F9BB0((void (*)(__int128 *__return_ptr, id *))sub_1C06FD50C, v28, v27);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1C0746F04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D840);
  v29 = (void (*)(uint64_t, _QWORD))sub_1C0746F1C();
  v31 = v30;
  v32 = *v30;
  v33 = swift_isUniquelyReferenced_nonNull_native();
  *v31 = v32;
  if ((v33 & 1) == 0)
  {
    v32 = sub_1C06B4254(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
    *v31 = v32;
  }
  v35 = *(_QWORD *)(v32 + 16);
  v34 = *(_QWORD *)(v32 + 24);
  if (v35 >= v34 >> 1)
  {
    v32 = sub_1C06B4254(v34 > 1, v35 + 1, 1, v32);
    *v31 = v32;
  }
  v36 = *(_QWORD *)(v0 + 120);
  v37 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v32 + 16) = v35 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v32+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v35, v36, v37);
  v29(v20, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06FC864()
{
  sub_1C06B7E50();
  return sub_1C0746EEC();
}

uint64_t PersonTypeAppEntityQuery.defaultResult()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_1C06FC89C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40[3];

  v1 = *(_QWORD **)(v0 + 216);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(1, MEMORY[0x1E0DEE9D8], v2, v3);
  if (v4 >> 62)
  {
    if (sub_1C074814C())
    {
LABEL_3:
      if ((v4 & 0xC000000000000001) != 0)
      {
        v5 = (_QWORD *)MEMORY[0x1C3BA029C](0, v4);
      }
      else
      {
        if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_32;
        }
        v5 = *(id *)(v4 + 32);
      }
      v1 = v5;
      swift_bridgeObjectRelease();
      if (qword_1ED4FEA10[0] == -1)
      {
LABEL_7:
        v6 = sub_1C0747720();
        __swift_project_value_buffer(v6, (uint64_t)qword_1ED4FE9F0);
        v7 = v1;
        v8 = sub_1C0747708();
        v9 = sub_1C0747D80();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc();
          v11 = swift_slowAlloc();
          v40[0] = v11;
          *(_DWORD *)v10 = 136315138;
          v12 = objc_msgSend(v7, sel_debugDescription);
          v13 = sub_1C0747930();
          v15 = v14;

          *(_QWORD *)(v0 + 192) = sub_1C069092C(v13, v15, v40);
          sub_1C0747E40();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C0671000, v8, v9, "PersonTypeAppEntity: Default contact for is from recommendations list: %s", v10, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA0D04](v11, -1, -1);
          MEMORY[0x1C3BA0D04](v10, -1, -1);
        }
        else
        {

        }
        if (qword_1ED4FFC40 != -1)
          swift_once();
        v16 = *(_OWORD **)(v0 + 208);
        LOBYTE(v40[0]) = 3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C074B820;
        *(_QWORD *)(inited + 32) = 0xD000000000000012;
        *(_QWORD *)(inited + 40) = 0x80000001C0754CB0;
        *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
        *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
        *(_BYTE *)(inited + 48) = 1;
LABEL_28:
        v38 = sub_1C06F5C3C(inited);
        sub_1C070E1AC((char *)v40, v38);
        swift_bridgeObjectRelease();
        PersonTypeAppEntityQuery.buildPersonType(for:)(v7, v40);

        *v16 = *(_OWORD *)v40;
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
LABEL_32:
      swift_once();
      goto LABEL_7;
    }
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v18 = *(_QWORD **)(v0 + 216);
  swift_bridgeObjectRelease();
  v19 = v1[3];
  v20 = v1[4];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  if (v21)
  {
    v22 = (void *)v21;
    if (qword_1ED4FEA10[0] != -1)
      swift_once();
    v23 = sub_1C0747720();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED4FE9F0);
    v7 = v22;
    v24 = sub_1C0747708();
    v25 = sub_1C0747D80();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v40[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = objc_msgSend(v7, sel_debugDescription);
      v29 = sub_1C0747930();
      v31 = v30;

      *(_QWORD *)(v0 + 200) = sub_1C069092C(v29, v31, v40);
      sub_1C0747E40();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0671000, v24, v25, "PersonTypeAppEntity: Default contact for is from contacts list: %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA0D04](v27, -1, -1);
      MEMORY[0x1C3BA0D04](v26, -1, -1);
    }
    else
    {

    }
    if (qword_1ED4FFC40 != -1)
      swift_once();
    v16 = *(_OWORD **)(v0 + 208);
    LOBYTE(v40[0]) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4FFC28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C074B820;
    v37 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x80000001C0754CB0;
    *(_QWORD *)(inited + 72) = v37;
    *(_QWORD *)(inited + 80) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 48) = 0;
    goto LABEL_28;
  }
  if (qword_1ED4FEA10[0] != -1)
    swift_once();
  v32 = sub_1C0747720();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED4FE9F0);
  v33 = sub_1C0747708();
  v34 = sub_1C0747D80();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1C0671000, v33, v34, "PersonTypeAppEntity: No default found, 0 recommendations 0 contacts", v35, 2u);
    MEMORY[0x1C3BA0D04](v35, -1, -1);
  }
  v36 = *(_QWORD **)(v0 + 208);

  *v36 = 0;
  v36[1] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C06FCEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C06930A0;
  return PersonTypeAppEntityQuery.entities(matching:)(a1, a2, a3);
}

uint64_t sub_1C06FCF64@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  v2 = _s6People14ContactFetcherCACycfC_0();
  result = type metadata accessor for ContactFetcher();
  a1[3] = result;
  a1[4] = &protocol witness table for ContactFetcher;
  *a1 = v2;
  return result;
}

uint64_t sub_1C06FCFA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0699B64;
  return PersonTypeAppEntityQuery.entities(for:)(a1);
}

uint64_t sub_1C06FCFEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C069325C;
  return PersonTypeAppEntityQuery.suggestedEntities()(a1);
}

uint64_t sub_1C06FD03C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1C06B7D6C();
  *v1 = v0;
  v1[1] = sub_1C069325C;
  return sub_1C0746E08();
}

uint64_t sub_1C06FD0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C06930A0;
  v4[26] = a1;
  v4[27] = v1;
  return swift_task_switch();
}

uint64_t sub_1C06FD10C(unint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t i;
  unint64_t v4;
  id v5;
  void *v6;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v2 = a1;
  v23 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_31;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1C074814C())
  {
    v18 = v2;
    v4 = 0;
    v20 = v2 & 0xFFFFFFFFFFFFFF8;
    v21 = v2 & 0xC000000000000001;
    v19 = (_QWORD *)(v2 + 32);
    while (1)
    {
      if (v21)
      {
        v5 = (id)MEMORY[0x1C3BA029C](v4, v18);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v20 + 16))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        v5 = (id)v19[v4];
      }
      v6 = v5;
      if (__OFADD__(v4++, 1))
        goto LABEL_29;
      v8 = objc_msgSend(v5, sel_identifier);
      v9 = sub_1C0747930();
      v2 = (unint64_t)v10;

      v11 = a2[2];
      if (!v11)
        goto LABEL_25;
      v12 = a2[4] == v9 && a2[5] == v2;
      if (!v12 && (sub_1C0748284() & 1) == 0)
        break;
LABEL_4:

      swift_bridgeObjectRelease();
LABEL_5:
      if (v4 == i)
        return v23;
    }
    if (v11 == 1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1C074808C();
      sub_1C07480BC();
      sub_1C07480C8();
      v2 = (unint64_t)&v23;
      sub_1C0748098();
      goto LABEL_5;
    }
    v13 = a2 + 7;
    v14 = 1;
    while (1)
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      v16 = *(v13 - 1) == v9 && *v13 == v2;
      if (v16 || (sub_1C0748284() & 1) != 0)
        goto LABEL_4;
      v13 += 2;
      ++v14;
      if (v15 == v11)
        goto LABEL_25;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    ;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C06FD318(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  char v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v6 = a1;
  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v9 = v6 & 0xC000000000000001;
      v16 = v6;
      v17 = v6 & 0xFFFFFFFFFFFFFF8;
      v15 = v7;
      while (v9)
      {
        v10 = (id)MEMORY[0x1C3BA029C](v8, v6);
LABEL_9:
        v11 = v10;
        v12 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v10;
        v13 = sub_1C06FBCEC(&v18, a2, a3);
        if (v3)
        {
          swift_bridgeObjectRelease();

          sub_1C0747030();
          return a3;
        }
        if ((v13 & 1) != 0)
        {
          sub_1C074808C();
          sub_1C07480BC();
          sub_1C07480C8();
          sub_1C0748098();
          v7 = v15;
          v6 = v16;
        }
        else
        {

        }
        ++v8;
        if (v12 == v7)
        {
          a3 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v17 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1C074814C();
      if (!v7)
        goto LABEL_19;
    }
    v10 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a3 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return a3;
}

double sub_1C06FD4BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PersonTypeAppEntityQuery.queryPersonType(for:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_1C06FD4EC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C06FC118(a1, a2);
}

uint64_t sub_1C06FD504()
{
  return sub_1C06FC19C();
}

double sub_1C06FD50C@<D0>(void **a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C06FD69C(a1, a2);
}

unint64_t sub_1C06FD524()
{
  unint64_t result;

  result = qword_1ED4FEF88;
  if (!qword_1ED4FEF88)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntityQuery, &type metadata for PersonTypeAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF88);
  }
  return result;
}

unint64_t sub_1C06FD56C()
{
  unint64_t result;

  result = qword_1ED4FEF90;
  if (!qword_1ED4FEF90)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntityQuery, &type metadata for PersonTypeAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF90);
  }
  return result;
}

unint64_t sub_1C06FD5B8()
{
  unint64_t result;

  result = qword_1ED4FEF78;
  if (!qword_1ED4FEF78)
  {
    result = MEMORY[0x1C3BA0C2C](&protocol conformance descriptor for PersonTypeAppEntityQuery, &type metadata for PersonTypeAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1ED4FEF78);
  }
  return result;
}

unint64_t sub_1C06FD600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF61D868[0];
  if (!qword_1EF61D868[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF61D840);
    result = MEMORY[0x1C3BA0C2C](MEMORY[0x1E0C91390], v1);
    atomic_store(result, qword_1EF61D868);
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonTypeAppEntityQuery()
{
  return &type metadata for PersonTypeAppEntityQuery;
}

uint64_t sub_1C06FD65C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61D880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1C06FD69C@<D0>(void **a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;

  PersonTypeAppEntityQuery.buildPersonType(for:)(*a1, &v4);
  result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1C06FD6DC()
{
  return sub_1C06FABE8();
}

uint64_t sub_1C06FD6E4()
{
  return sub_1C06FADE0();
}

uint64_t sub_1C06FD6F0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1C06BF6B8(0, v1, 0);
  v2 = v26;
  result = sub_1C0700CF0(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v22 = v1;
  v23 = v5;
  v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v13 = v12[1];
    v25 = *v12;
    v15 = *(_QWORD *)(v26 + 16);
    v14 = *(_QWORD *)(v26 + 24);
    result = sub_1C0746EF8();
    if (v15 >= v14 >> 1)
      result = sub_1C06BF6B8(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v26 + 16) = v15 + 1;
    v16 = v26 + 16 * v15;
    *(_QWORD *)(v16 + 32) = v25;
    *(_QWORD *)(v16 + 40) = v13;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v17 = *(_QWORD *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23)
      goto LABEL_27;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C06FD8F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  _QWORD *v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = sub_1C0746EF8();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    v12 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8 * i);
    if (v12[2])
    {
      v16 = v12[5];
      v20 = v12[4];
      sub_1C0746EF8();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1C06B3530(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v18 = v9[2];
      v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        result = (uint64_t)sub_1C06B3530((_QWORD *)(v17 > 1), v18 + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v9[2] = v18 + 1;
      v19 = &v9[2 * v18];
      v19[4] = v20;
      v19[5] = v16;
      if (v5)
        goto LABEL_4;
    }
    else if (v5)
    {
      goto LABEL_4;
    }
LABEL_7:
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6)
      goto LABEL_29;
    v14 = *(_QWORD *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v6)
        goto LABEL_29;
      v14 = *(_QWORD *)(v2 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v6)
          goto LABEL_29;
        v14 = *(_QWORD *)(v2 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v6)
            goto LABEL_29;
          v14 = *(_QWORD *)(v2 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
  }
  v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    sub_1C0747030();
    return (uint64_t)v9;
  }
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v14 = *(_QWORD *)(v2 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t static MessageDeviceCapabilityLookup.sharedInstance.getter()
{
  if (qword_1EF61A3E8 != -1)
    swift_once();
  return sub_1C0746F64();
}

BOOL DiscoveredHandles.allMembersMeetRequirements.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16))
    return 0;
  v1 = sub_1C0746EF8();
  v2 = sub_1C06FDDEC(v1);
  if (qword_1EF61A398 != -1)
    swift_once();
  v3 = sub_1C0747720();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EF61D388);
  swift_bridgeObjectRetain_n();
  v4 = sub_1C0747708();
  v5 = sub_1C0747D80();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_1C0746EF8();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF61C4D8);
    v9 = MEMORY[0x1C3B9FD8C](v2, v8);
    v11 = v10;
    swift_bridgeObjectRelease();
    sub_1C069092C(v9, v11, &v14);
    sub_1C0747E40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0671000, v4, v5, "DevCaps: noGoodHandles is [%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA0D04](v7, -1, -1);
    MEMORY[0x1C3BA0D04](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v13 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v13 == 0;
}

unint64_t static DiscoveredHandles.emptyFamily.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1C06F630C(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t sub_1C06FDD58(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1C07477EC();
  else
    v5 = 0;
  sub_1C0746F64();
  v6 = a3;
  v4(v5, a3);
  sub_1C0747030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C06FDDEC(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v2 << 6); ; i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * i);
    if (*(_QWORD *)(v11 + 16))
    {
      if (v6)
        goto LABEL_4;
    }
    else
    {
      sub_1C0746EF8();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1C06BF804(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v16 = *(_QWORD *)(v8 + 16);
      v15 = *(_QWORD *)(v8 + 24);
      if (v16 >= v15 >> 1)
        result = sub_1C06BF804(v15 > 1, v16 + 1, 1);
      *(_QWORD *)(v8 + 16) = v16 + 1;
      *(_QWORD *)(v8 + 8 * v16 + 32) = v11;
      if (v6)
        goto LABEL_4;
    }
LABEL_7:
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_29;
      v13 = *(_QWORD *)(v3 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_29;
        v13 = *(_QWORD *)(v3 + 8 * v2);
        if (!v13)
        {
          v2 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_29;
          v13 = *(_QWORD *)(v3 + 8 * v2);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_29:
    sub_1C0747030();
    return v8;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t DiscoveredHandles.description.getter()
{
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  sub_1C0748248();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  sub_1C0747FF0();
  swift_bridgeObjectRelease();
  sub_1C07479CC();
  DiscoveredHandles.allMembersMeetRequirements.getter();
  sub_1C07479CC();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t DiscoveredHandles.members.getter()
{
  return sub_1C0746EF8();
}

uint64_t DiscoveredHandles.iMessageHandles.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0746EF8();
  v1 = sub_1C06FD8F8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

