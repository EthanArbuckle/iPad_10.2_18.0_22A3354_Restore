@implementation CKUIBehavior

- (BOOL)canShowContactPhotosInConversationList
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_canShowContactPhotosInConversationList__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (canShowContactPhotosInConversationList_once != -1)
    dispatch_once(&canShowContactPhotosInConversationList_once, block);
  return canShowContactPhotosInConversationList_sBehavior;
}

- (BOOL)contactPhotosEnabled
{
  return CKConversationListContactPhotosEnabled() != 0;
}

+ (id)sharedBehaviors
{
  void *v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  id v7;
  void *v8;

  v3 = (void *)sSharedBehaviors;
  if (sSharedBehaviors)
    return v3;
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (CKIsRunningInMacCatalyst() && CKIsRunningUnitTests())
    goto LABEL_11;
  if (v5 != 4)
  {
    if (v5 != 5)
    {
      if (!CKIsRunningInSiri()
        && !CKIsRunningInMessagesNotificationViewService()
        && CKIsRunningInMessagesNotificationExtension())
      {
        objc_msgSend((id)MEMORY[0x193FF3C18](CFSTR("UNUserNotificationCenter"), CFSTR("UserNotifications")), "supportsContentExtensions");
      }
      objc_msgSend(a1, "_shouldUseClarityUI");
    }
LABEL_11:
    v6 = (objc_class *)objc_opt_class();
    goto LABEL_12;
  }
  v6 = 0;
LABEL_12:
  if (testOverrideCKUIBehaviorClass)
    v6 = (objc_class *)testOverrideCKUIBehaviorClass;
  v7 = objc_alloc_init(v6);
  v8 = (void *)sSharedBehaviors;
  sSharedBehaviors = (uint64_t)v7;

  objc_msgSend((id)sSharedBehaviors, "setHUDStyle:", 1);
  v3 = (void *)sSharedBehaviors;
  return v3;
}

- (CKUITheme)theme
{
  if (theme_once != -1)
    dispatch_once(&theme_once, &__block_literal_global_62);
  return (CKUITheme *)(id)theme_sBehavior;
}

- (unint64_t)conversationListCellMaxSummaryLength
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  unint64_t v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellMaxSummaryLength_sContentSizeCategory_conversationListCellMaxSummaryLength, (UIContentSizeCategory)v2)|| conversationListCellMaxSummaryLength_sIsBoldTextEnabled_conversationListCellMaxSummaryLength != IsBoldTextEnabled|| (*(double *)&conversationListCellMaxSummaryLength_sTextFontSize_conversationListCellMaxSummaryLength == v4? (v11 = *(double *)&conversationListCellMaxSummaryLength_sCustomTextFontSize_conversationListCellMaxSummaryLength == v5): (v11 = 0), !v11|| (objc_msgSend((id)conversationListCellMaxSummaryLength_sCustomTextFontName_conversationListCellMaxSummaryLength, "isEqualToString:", v8, *(double *)&conversationListCellMaxSummaryLength_sTextFontSize_conversationListCellMaxSummaryLength, *(double *)&conversationListCellMaxSummaryLength_sCustomTextFontSize_conversationListCellMaxSummaryLength) & 1) == 0))
  {
    conversationListCellMaxSummaryLength_sBehavior = 1;
    objc_storeStrong((id *)&conversationListCellMaxSummaryLength_sContentSizeCategory_conversationListCellMaxSummaryLength, v2);
    conversationListCellMaxSummaryLength_sIsBoldTextEnabled_conversationListCellMaxSummaryLength = IsBoldTextEnabled;
    conversationListCellMaxSummaryLength_sTextFontSize_conversationListCellMaxSummaryLength = *(_QWORD *)&v4;
    conversationListCellMaxSummaryLength_sCustomTextFontSize_conversationListCellMaxSummaryLength = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellMaxSummaryLength_sCustomTextFontName_conversationListCellMaxSummaryLength, v7);
  }
  if (conversationListCellMaxSummaryLength_sBehavior)
    v9 = 200;
  else
    v9 = 0;

  return v9;
}

- (UIFont)conversationListSummaryFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListSummaryFont_sContentSizeCategory_conversationListSummaryFont, (UIContentSizeCategory)v2)|| conversationListSummaryFont_sIsIncreaseContrastEnabled_conversationListSummaryFont != v3|| conversationListSummaryFont_sIsBoldTextEnabled_conversationListSummaryFont != IsBoldTextEnabled|| (v10 = conversationListSummaryFont_sTextFontSize_conversationListSummaryFont, *(double *)&conversationListSummaryFont_sTextFontSize_conversationListSummaryFont != v5)|| (v10 = conversationListSummaryFont_sCustomTextFontSize_conversationListSummaryFont, *(double *)&conversationListSummaryFont_sCustomTextFontSize_conversationListSummaryFont != v6)|| (objc_msgSend((id)conversationListSummaryFont_sCustomTextFontName_conversationListSummaryFont, "isEqualToString:", v9, *(double *)&conversationListSummaryFont_sCustomTextFontSize_conversationListSummaryFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)conversationListSummaryFont_sBehavior;
    conversationListSummaryFont_sBehavior = v11;

    objc_storeStrong((id *)&conversationListSummaryFont_sContentSizeCategory_conversationListSummaryFont, v2);
    conversationListSummaryFont_sIsIncreaseContrastEnabled_conversationListSummaryFont = v3;
    conversationListSummaryFont_sIsBoldTextEnabled_conversationListSummaryFont = IsBoldTextEnabled;
    conversationListSummaryFont_sTextFontSize_conversationListSummaryFont = *(_QWORD *)&v5;
    conversationListSummaryFont_sCustomTextFontSize_conversationListSummaryFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListSummaryFont_sCustomTextFontName_conversationListSummaryFont, v8);
  }
  v13 = (UIFont *)(id)conversationListSummaryFont_sBehavior;

  return v13;
}

- (BOOL)hidesUnreadIndicatorWhenEditing
{
  if (hidesUnreadIndicatorWhenEditing_once != -1)
    dispatch_once(&hidesUnreadIndicatorWhenEditing_once, &__block_literal_global_282_0);
  return 0;
}

- (BOOL)showsHoverToDeleteButton
{
  if (showsHoverToDeleteButton_once != -1)
    dispatch_once(&showsHoverToDeleteButton_once, &__block_literal_global_284_0);
  return 0;
}

- (BOOL)showsConversationListCellChevronImage
{
  if (showsConversationListCellChevronImage_once != -1)
    dispatch_once(&showsConversationListCellChevronImage_once, &__block_literal_global_283_0);
  return showsConversationListCellChevronImage_sBehavior;
}

- (UIFont)conversationListDateFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListDateFont_sContentSizeCategory_conversationListDateFont, (UIContentSizeCategory)v3)|| conversationListDateFont_sIsIncreaseContrastEnabled_conversationListDateFont != v4|| conversationListDateFont_sIsBoldTextEnabled_conversationListDateFont != IsBoldTextEnabled|| (v11 = conversationListDateFont_sTextFontSize_conversationListDateFont, *(double *)&conversationListDateFont_sTextFontSize_conversationListDateFont != v6)|| (v11 = conversationListDateFont_sCustomTextFontSize_conversationListDateFont, *(double *)&conversationListDateFont_sCustomTextFontSize_conversationListDateFont != v7)|| (objc_msgSend((id)conversationListDateFont_sCustomTextFontName_conversationListDateFont, "isEqualToString:", v10, *(double *)&conversationListDateFont_sCustomTextFontSize_conversationListDateFont) & 1) == 0)
  {
    -[CKUIBehavior conversationListSummaryFont](self, "conversationListSummaryFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)conversationListDateFont_sBehavior;
    conversationListDateFont_sBehavior = v12;

    objc_storeStrong((id *)&conversationListDateFont_sContentSizeCategory_conversationListDateFont, v3);
    conversationListDateFont_sIsIncreaseContrastEnabled_conversationListDateFont = v4;
    conversationListDateFont_sIsBoldTextEnabled_conversationListDateFont = IsBoldTextEnabled;
    conversationListDateFont_sTextFontSize_conversationListDateFont = *(_QWORD *)&v6;
    conversationListDateFont_sCustomTextFontSize_conversationListDateFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&conversationListDateFont_sCustomTextFontName_conversationListDateFont, v9);
  }
  v14 = (UIFont *)(id)conversationListDateFont_sBehavior;

  return v14;
}

- (unint64_t)conversationListCellSummaryNumberOfLines
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  unint64_t v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellSummaryNumberOfLines_sContentSizeCategory_conversationListCellSummaryNumberOfLines, (UIContentSizeCategory)v2)|| conversationListCellSummaryNumberOfLines_sIsBoldTextEnabled_conversationListCellSummaryNumberOfLines != IsBoldTextEnabled|| (*(double *)&conversationListCellSummaryNumberOfLines_sTextFontSize_conversationListCellSummaryNumberOfLines == v4? (v11 = *(double *)&conversationListCellSummaryNumberOfLines_sCustomTextFontSize_conversationListCellSummaryNumberOfLines == v5): (v11 = 0), !v11|| (objc_msgSend((id)conversationListCellSummaryNumberOfLines_sCustomTextFontName_conversationListCellSummaryNumberOfLines, "isEqualToString:", v8, *(double *)&conversationListCellSummaryNumberOfLines_sTextFontSize_conversationListCellSummaryNumberOfLines, *(double *)&conversationListCellSummaryNumberOfLines_sCustomTextFontSize_conversationListCellSummaryNumberOfLines) & 1) == 0))
  {
    conversationListCellSummaryNumberOfLines_sBehavior = 1;
    objc_storeStrong((id *)&conversationListCellSummaryNumberOfLines_sContentSizeCategory_conversationListCellSummaryNumberOfLines, v2);
    conversationListCellSummaryNumberOfLines_sIsBoldTextEnabled_conversationListCellSummaryNumberOfLines = IsBoldTextEnabled;
    conversationListCellSummaryNumberOfLines_sTextFontSize_conversationListCellSummaryNumberOfLines = *(_QWORD *)&v4;
    conversationListCellSummaryNumberOfLines_sCustomTextFontSize_conversationListCellSummaryNumberOfLines = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellSummaryNumberOfLines_sCustomTextFontName_conversationListCellSummaryNumberOfLines, v7);
  }
  if (conversationListCellSummaryNumberOfLines_sBehavior)
    v9 = 2;
  else
    v9 = 0;

  return v9;
}

- (UIImage)chevronImage
{
  if (chevronImage_once != -1)
    dispatch_once(&chevronImage_once, &__block_literal_global_226_0);
  return (UIImage *)(id)chevronImage_sBehavior;
}

+ (BOOL)_shouldUseClarityUI
{
  if (_shouldUseClarityUI_onceToken != -1)
    dispatch_once(&_shouldUseClarityUI_onceToken, &__block_literal_global_100);
  return _shouldUseClarityUI_sIsClarityBoardEnabled;
}

- (BOOL)isAccessibilityPreferredContentSizeCategory
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  NSString *v9;
  BOOL IsAccessibilityCategory;
  char v11;
  BOOL v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)isAccessibilityPreferredContentSizeCategory_sContentSizeCategory_isAccessibilityPreferredContentSizeCategory, (UIContentSizeCategory)v2)|| isAccessibilityPreferredContentSizeCategory_sIsBoldTextEnabled_isAccessibilityPreferredContentSizeCategory != IsBoldTextEnabled|| (*(double *)&isAccessibilityPreferredContentSizeCategory_sTextFontSize_isAccessibilityPreferredContentSizeCategory == v4? (v13 = *(double *)&isAccessibilityPreferredContentSizeCategory_sCustomTextFontSize_isAccessibilityPreferredContentSizeCategory == v5): (v13 = 0), !v13|| (objc_msgSend((id)isAccessibilityPreferredContentSizeCategory_sCustomTextFontName_isAccessibilityPreferredContentSizeCategory, "isEqualToString:", v8, *(double *)&isAccessibilityPreferredContentSizeCategory_sTextFontSize_isAccessibilityPreferredContentSizeCategory, *(double *)&isAccessibilityPreferredContentSizeCategory_sCustomTextFontSize_isAccessibilityPreferredContentSizeCategory) & 1) == 0))
  {
    CKPreferredContentSizeCategory();
    v9 = (NSString *)objc_claimAutoreleasedReturnValue();
    IsAccessibilityCategory = UIContentSizeCategoryIsAccessibilityCategory(v9);

    isAccessibilityPreferredContentSizeCategory_sBehavior = IsAccessibilityCategory;
    objc_storeStrong((id *)&isAccessibilityPreferredContentSizeCategory_sContentSizeCategory_isAccessibilityPreferredContentSizeCategory, v2);
    isAccessibilityPreferredContentSizeCategory_sIsBoldTextEnabled_isAccessibilityPreferredContentSizeCategory = IsBoldTextEnabled;
    isAccessibilityPreferredContentSizeCategory_sTextFontSize_isAccessibilityPreferredContentSizeCategory = *(_QWORD *)&v4;
    isAccessibilityPreferredContentSizeCategory_sCustomTextFontSize_isAccessibilityPreferredContentSizeCategory = *(_QWORD *)&v5;
    objc_storeStrong((id *)&isAccessibilityPreferredContentSizeCategory_sCustomTextFontName_isAccessibilityPreferredContentSizeCategory, v7);
  }
  v11 = isAccessibilityPreferredContentSizeCategory_sBehavior;

  return v11;
}

- (double)previewMaxWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __31__CKUIBehavior_previewMaxWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (previewMaxWidth_once != -1)
    dispatch_once(&previewMaxWidth_once, block);
  return *(double *)&previewMaxWidth_sBehavior;
}

- (double)conversationListSIMLabelBaseRadius
{
  if (conversationListSIMLabelBaseRadius_once != -1)
    dispatch_once(&conversationListSIMLabelBaseRadius_once, &__block_literal_global_585);
  return *(double *)&conversationListSIMLabelBaseRadius_sBehavior;
}

- (BOOL)enableBalloonTextSelection
{
  if (enableBalloonTextSelection_once != -1)
    dispatch_once(&enableBalloonTextSelection_once, &__block_literal_global_711);
  return 0;
}

- (BOOL)shouldUseDynamicGradient
{
  if (shouldUseDynamicGradient_once != -1)
    dispatch_once(&shouldUseDynamicGradient_once, &__block_literal_global_587_0);
  return shouldUseDynamicGradient_sBehavior;
}

- (BOOL)disableTranscriptInteractions
{
  if (disableTranscriptInteractions_once != -1)
    dispatch_once(&disableTranscriptInteractions_once, &__block_literal_global_424_0);
  return 0;
}

- (CGSize)unreadIndicatorImageViewSize
{
  double v2;
  double v3;
  CGSize result;

  if (unreadIndicatorImageViewSize_once != -1)
    dispatch_once(&unreadIndicatorImageViewSize_once, &__block_literal_global_325);
  v2 = *(double *)&unreadIndicatorImageViewSize_sBehavior_0;
  v3 = *(double *)&unreadIndicatorImageViewSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

- (UIImage)conversationListMuteIndicatorImage
{
  if (conversationListMuteIndicatorImage_once != -1)
    dispatch_once(&conversationListMuteIndicatorImage_once, &__block_literal_global_229_0);
  return (UIImage *)(id)conversationListMuteIndicatorImage_sBehavior;
}

- (BOOL)canPluginBalloonsUseOpaqueMask
{
  if (canPluginBalloonsUseOpaqueMask_once != -1)
    dispatch_once(&canPluginBalloonsUseOpaqueMask_once, &__block_literal_global_596);
  return 0;
}

- (Class)navigationBarClass
{
  if (navigationBarClass_once != -1)
    dispatch_once(&navigationBarClass_once, &__block_literal_global_252_1);
  return (Class)(id)navigationBarClass_sBehavior;
}

- (Class)conversationListNavigationControllerClass
{
  if (conversationListNavigationControllerClass_once != -1)
    dispatch_once(&conversationListNavigationControllerClass_once, &__block_literal_global_256_1);
  return (Class)(id)conversationListNavigationControllerClass_sBehavior;
}

- (BOOL)shouldUseTranslucentBars
{
  if (shouldUseTranslucentBars_once != -1)
    dispatch_once(&shouldUseTranslucentBars_once, &__block_literal_global_83_0);
  return shouldUseTranslucentBars_sBehavior;
}

- (void)setupNavBarAppearanceWithNavigationController:(id)a3
{
  -[CKUIBehavior setupNavBarAppearanceWithNavigationController:withBackgroundColor:](self, "setupNavBarAppearanceWithNavigationController:withBackgroundColor:", a3, 0);
}

- (BOOL)showPendingInConversationList
{
  if (showPendingInConversationList_once != -1)
    dispatch_once(&showPendingInConversationList_once, &__block_literal_global_279_0);
  return showPendingInConversationList_sBehavior;
}

- (BOOL)showsNoMessagesDialog
{
  if (showsNoMessagesDialog_once != -1)
    dispatch_once(&showsNoMessagesDialog_once, &__block_literal_global_281_0);
  return 0;
}

- (BOOL)converastionListAlwaysSupportsLargeTitles
{
  if (converastionListAlwaysSupportsLargeTitles_once != -1)
    dispatch_once(&converastionListAlwaysSupportsLargeTitles_once, &__block_literal_global_268_1);
  return 0;
}

- (unint64_t)conversationListScrollingPaddingRowCount
{
  if (conversationListScrollingPaddingRowCount_once != -1)
    dispatch_once(&conversationListScrollingPaddingRowCount_once, &__block_literal_global_290_1);
  if (conversationListScrollingPaddingRowCount_sBehavior)
    return 128;
  else
    return 0;
}

- (unint64_t)appIconPrefetchLimit
{
  if (appIconPrefetchLimit_once != -1)
    dispatch_once(&appIconPrefetchLimit_once, &__block_literal_global_1256);
  if (appIconPrefetchLimit_sBehavior)
    return 20;
  else
    return 0;
}

- (unint64_t)suggestedMinimumRecentsCount
{
  if (suggestedMinimumRecentsCount_once != -1)
    dispatch_once(&suggestedMinimumRecentsCount_once, &__block_literal_global_1258_0);
  if (suggestedMinimumRecentsCount_sBehavior)
    return 3;
  else
    return 0;
}

- (unint64_t)suggestedAppStripLimit
{
  if (suggestedAppStripLimit_once != -1)
    dispatch_once(&suggestedAppStripLimit_once, &__block_literal_global_1257);
  if (suggestedAppStripLimit_sBehavior)
    return 20;
  else
    return 0;
}

void __42__CKUIBehavior_maxTranscriptPortraitWidth__block_invoke(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_referenceBounds");
  v4 = v3;
  objc_msgSend(*(id *)(a1 + 32), "conversationListWidthForInterfaceOrientation:", 1);
  v6 = v4 - v5;

  maxTranscriptPortraitWidth_sBehavior = *(_QWORD *)&v6;
}

void __54__CKUIBehavior_canShowContactPhotosInConversationList__block_invoke(uint64_t a1)
{
  double v2;
  char v3;
  id v4;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_referenceBounds");
  if (v2 <= 320.0)
    v3 = 0;
  else
    v3 = objc_msgSend(*(id *)(a1 + 32), "conversationListCellUsesLargeTextLayout") ^ 1;
  canShowContactPhotosInConversationList_sBehavior = v3;

}

uint64_t __40__CKUIBehavior_isRunningInStoreDemoMode__block_invoke()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0CEA2F8], "isRunningInStoreDemoMode");
  isRunningInStoreDemoMode_sBehavior = result;
  return result;
}

- (BOOL)shouldSuppressRotationInNewCompose
{
  if (shouldSuppressRotationInNewCompose_once != -1)
    dispatch_once(&shouldSuppressRotationInNewCompose_once, &__block_literal_global_73_1);
  return shouldSuppressRotationInNewCompose_sBehavior;
}

- (BOOL)usesUncollapsedSplitview
{
  if (usesUncollapsedSplitview_once != -1)
    dispatch_once(&usesUncollapsedSplitview_once, &__block_literal_global_72_1);
  return usesUncollapsedSplitview_sBehavior;
}

uint64_t __54__CKUIBehavior_initialConversationViewingMessageCount__block_invoke(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t result;

  v2 = objc_msgSend(*(id *)(a1 + 32), "shouldLoadInitialViewingMessageCount");
  v3 = *(void **)(a1 + 32);
  if (v2)
    result = objc_msgSend(v3, "minBalloonsForTranscriptHeight");
  else
    result = objc_msgSend(v3, "defaultConversationViewingMessageCount");
  initialConversationViewingMessageCount_sBehavior = result;
  return result;
}

- (unint64_t)defaultConversationViewingMessageCount
{
  if (defaultConversationViewingMessageCount_once != -1)
    dispatch_once(&defaultConversationViewingMessageCount_once, &__block_literal_global_159_0);
  return defaultConversationViewingMessageCount_sBehavior;
}

- (BOOL)shouldLoadInitialViewingMessageCount
{
  if (shouldLoadInitialViewingMessageCount_once != -1)
    dispatch_once(&shouldLoadInitialViewingMessageCount_once, &__block_literal_global_164_0);
  return 0;
}

- (unint64_t)initialConversationViewingMessageCount
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_initialConversationViewingMessageCount__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (initialConversationViewingMessageCount_once != -1)
    dispatch_once(&initialConversationViewingMessageCount_once, block);
  return initialConversationViewingMessageCount_sBehavior;
}

- (BOOL)isRunningInStoreDemoMode
{
  if (isRunningInStoreDemoMode_once != -1)
    dispatch_once(&isRunningInStoreDemoMode_once, &__block_literal_global_185);
  return isRunningInStoreDemoMode_sBehavior;
}

- (CGSize)appIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (appIconSize_once != -1)
    dispatch_once(&appIconSize_once, &__block_literal_global_189_0);
  v2 = *(double *)&appIconSize_sBehavior_0;
  v3 = *(double *)&appIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

- (BOOL)useSelectedAppearanceForConversationCellState:(id)a3 traitCollection:(id)a4
{
  return objc_msgSend(a3, "isSelected");
}

- (double)conversationCellLeadingSeparatorInsetForEnvironment:(id)a3
{
  id v4;
  double v5;
  double v6;
  void *v7;
  _BOOL4 v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v4 = a3;
  if (-[CKUIBehavior conversationListCellUsesLargeTextLayout](self, "conversationListCellUsesLargeTextLayout"))
  {
    -[CKUIBehavior conversationListCellLargeTextLeftMargin](self, "conversationListCellLargeTextLeftMargin");
    v6 = v5;
  }
  else
  {
    objc_msgSend(v4, "container");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "contentSize");
    v8 = -[CKUIBehavior shouldShowAvatarForWidth:](self, "shouldShowAvatarForWidth:");

    -[CKUIBehavior conversationListCellLeftMargin](self, "conversationListCellLeftMargin");
    v6 = v9;
    if (v8)
    {
      -[CKUIBehavior conversationListContactImageDiameter](self, "conversationListContactImageDiameter");
      v11 = v6 + v10;
      -[CKUIBehavior conversationListContactImageTrailingSpace](self, "conversationListContactImageTrailingSpace");
      v6 = v11 + v12;
    }
  }

  return v6;
}

- (double)conversationListContactImageDiameter
{
  if (conversationListContactImageDiameter_once != -1)
    dispatch_once(&conversationListContactImageDiameter_once, &__block_literal_global_294_0);
  return *(double *)&conversationListContactImageDiameter_sBehavior;
}

- (double)conversationListCellLeftMargin
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellLeftMargin_sContentSizeCategory_conversationListCellLeftMargin, (UIContentSizeCategory)v2)|| conversationListCellLeftMargin_sIsBoldTextEnabled_conversationListCellLeftMargin != IsBoldTextEnabled|| (*(double *)&conversationListCellLeftMargin_sTextFontSize_conversationListCellLeftMargin == v4? (v11 = *(double *)&conversationListCellLeftMargin_sCustomTextFontSize_conversationListCellLeftMargin == v5): (v11 = 0), !v11|| (objc_msgSend((id)conversationListCellLeftMargin_sCustomTextFontName_conversationListCellLeftMargin, "isEqualToString:", v8, *(double *)&conversationListCellLeftMargin_sTextFontSize_conversationListCellLeftMargin, *(double *)&conversationListCellLeftMargin_sCustomTextFontSize_conversationListCellLeftMargin) & 1) == 0))
  {
    conversationListCellLeftMargin_sBehavior = 0x403A000000000000;
    objc_storeStrong((id *)&conversationListCellLeftMargin_sContentSizeCategory_conversationListCellLeftMargin, v2);
    conversationListCellLeftMargin_sIsBoldTextEnabled_conversationListCellLeftMargin = IsBoldTextEnabled;
    conversationListCellLeftMargin_sTextFontSize_conversationListCellLeftMargin = *(_QWORD *)&v4;
    conversationListCellLeftMargin_sCustomTextFontSize_conversationListCellLeftMargin = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellLeftMargin_sCustomTextFontName_conversationListCellLeftMargin, v7);
  }
  v9 = *(double *)&conversationListCellLeftMargin_sBehavior;

  return v9;
}

- (BOOL)shouldShowAvatarForWidth:(double)a3
{
  double v5;
  double v6;

  -[CKUIBehavior conversationListMinimumWidthForHiddenContactImage](self, "conversationListMinimumWidthForHiddenContactImage");
  v6 = v5;
  return -[CKUIBehavior canShowContactPhotosInConversationList](self, "canShowContactPhotosInConversationList")
      && v6 < a3
      && -[CKUIBehavior contactPhotosEnabled](self, "contactPhotosEnabled");
}

- (double)conversationListMinimumWidthForHiddenContactImage
{
  if (conversationListMinimumWidthForHiddenContactImage_once != -1)
    dispatch_once(&conversationListMinimumWidthForHiddenContactImage_once, &__block_literal_global_293_0);
  return *(double *)&conversationListMinimumWidthForHiddenContactImage_sBehavior;
}

- (double)conversationListContactImageTrailingSpace
{
  if (conversationListContactImageTrailingSpace_once != -1)
    dispatch_once(&conversationListContactImageTrailingSpace_once, &__block_literal_global_295_1);
  return *(double *)&conversationListContactImageTrailingSpace_sBehavior;
}

- (int64_t)conversationListSeparatorStyle
{
  if (conversationListSeparatorStyle_once != -1)
    dispatch_once(&conversationListSeparatorStyle_once, &__block_literal_global_192_0);
  return conversationListSeparatorStyle_sBehavior;
}

- (BOOL)conversationListCellUsesLargeTextLayout
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  char v10;
  BOOL v12;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellUsesLargeTextLayout_sContentSizeCategory_conversationListCellUsesLargeTextLayout, (UIContentSizeCategory)v3)|| conversationListCellUsesLargeTextLayout_sIsBoldTextEnabled_conversationListCellUsesLargeTextLayout != IsBoldTextEnabled|| (*(double *)&conversationListCellUsesLargeTextLayout_sTextFontSize_conversationListCellUsesLargeTextLayout == v5? (v12 = *(double *)&conversationListCellUsesLargeTextLayout_sCustomTextFontSize_conversationListCellUsesLargeTextLayout == v6): (v12 = 0), !v12|| (objc_msgSend((id)conversationListCellUsesLargeTextLayout_sCustomTextFontName_conversationListCellUsesLargeTextLayout, "isEqualToString:", v9, *(double *)&conversationListCellUsesLargeTextLayout_sTextFontSize_conversationListCellUsesLargeTextLayout, *(double *)&conversationListCellUsesLargeTextLayout_sCustomTextFontSize_conversationListCellUsesLargeTextLayout) & 1) == 0))
  {
    conversationListCellUsesLargeTextLayout_sBehavior = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    objc_storeStrong((id *)&conversationListCellUsesLargeTextLayout_sContentSizeCategory_conversationListCellUsesLargeTextLayout, v3);
    conversationListCellUsesLargeTextLayout_sIsBoldTextEnabled_conversationListCellUsesLargeTextLayout = IsBoldTextEnabled;
    conversationListCellUsesLargeTextLayout_sTextFontSize_conversationListCellUsesLargeTextLayout = *(_QWORD *)&v5;
    conversationListCellUsesLargeTextLayout_sCustomTextFontSize_conversationListCellUsesLargeTextLayout = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListCellUsesLargeTextLayout_sCustomTextFontName_conversationListCellUsesLargeTextLayout, v8);
  }
  v10 = conversationListCellUsesLargeTextLayout_sBehavior;

  return v10;
}

- (UIFont)conversationListSenderFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListSenderFont_sContentSizeCategory_conversationListSenderFont, (UIContentSizeCategory)v2)|| conversationListSenderFont_sIsIncreaseContrastEnabled_conversationListSenderFont != v3|| conversationListSenderFont_sIsBoldTextEnabled_conversationListSenderFont != IsBoldTextEnabled|| (v10 = conversationListSenderFont_sTextFontSize_conversationListSenderFont, *(double *)&conversationListSenderFont_sTextFontSize_conversationListSenderFont != v5)|| (v10 = conversationListSenderFont_sCustomTextFontSize_conversationListSenderFont, *(double *)&conversationListSenderFont_sCustomTextFontSize_conversationListSenderFont != v6)|| (objc_msgSend((id)conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, "isEqualToString:", v9, *(double *)&conversationListSenderFont_sCustomTextFontSize_conversationListSenderFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB568], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)conversationListSenderFont_sBehavior;
    conversationListSenderFont_sBehavior = v11;

    objc_storeStrong((id *)&conversationListSenderFont_sContentSizeCategory_conversationListSenderFont, v2);
    conversationListSenderFont_sIsIncreaseContrastEnabled_conversationListSenderFont = v3;
    conversationListSenderFont_sIsBoldTextEnabled_conversationListSenderFont = IsBoldTextEnabled;
    conversationListSenderFont_sTextFontSize_conversationListSenderFont = *(_QWORD *)&v5;
    conversationListSenderFont_sCustomTextFontSize_conversationListSenderFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, v8);
  }
  v13 = (UIFont *)(id)conversationListSenderFont_sBehavior;

  return v13;
}

- (double)topConversationListSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v15;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)topConversationListSpace_sContentSizeCategory_topConversationListSpace, (UIContentSizeCategory)v3)|| topConversationListSpace_sIsBoldTextEnabled_topConversationListSpace != IsBoldTextEnabled|| (*(double *)&topConversationListSpace_sTextFontSize_topConversationListSpace == v5? (v15 = *(double *)&topConversationListSpace_sCustomTextFontSize_topConversationListSpace == v6): (v15 = 0), !v15|| (objc_msgSend((id)topConversationListSpace_sCustomTextFontName_topConversationListSpace, "isEqualToString:", v9, *(double *)&topConversationListSpace_sTextFontSize_topConversationListSpace, *(double *)&topConversationListSpace_sCustomTextFontSize_topConversationListSpace) & 1) == 0))
  {
    -[CKUIBehavior conversationListSenderBodyLeading](self, "conversationListSenderBodyLeading");
    v11 = v10 * 0.6;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v12 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v12 = 1.0;
    *(double *)&topConversationListSpace_sBehavior = round(v11 * v12) / v12;
    objc_storeStrong((id *)&topConversationListSpace_sContentSizeCategory_topConversationListSpace, v3);
    topConversationListSpace_sIsBoldTextEnabled_topConversationListSpace = IsBoldTextEnabled;
    topConversationListSpace_sTextFontSize_topConversationListSpace = *(_QWORD *)&v5;
    topConversationListSpace_sCustomTextFontSize_topConversationListSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&topConversationListSpace_sCustomTextFontName_topConversationListSpace, v8);
  }
  v13 = *(double *)&topConversationListSpace_sBehavior;

  return v13;
}

- (double)senderSummaryConversationListSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v15;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)senderSummaryConversationListSpace_sContentSizeCategory_senderSummaryConversationListSpace, (UIContentSizeCategory)v3)|| senderSummaryConversationListSpace_sIsBoldTextEnabled_senderSummaryConversationListSpace != IsBoldTextEnabled|| (*(double *)&senderSummaryConversationListSpace_sTextFontSize_senderSummaryConversationListSpace == v5? (v15 = *(double *)&senderSummaryConversationListSpace_sCustomTextFontSize_senderSummaryConversationListSpace == v6): (v15 = 0), !v15|| (objc_msgSend((id)senderSummaryConversationListSpace_sCustomTextFontName_senderSummaryConversationListSpace, "isEqualToString:", v9, *(double *)&senderSummaryConversationListSpace_sTextFontSize_senderSummaryConversationListSpace, *(double *)&senderSummaryConversationListSpace_sCustomTextFontSize_senderSummaryConversationListSpace) & 1) == 0))
  {
    -[CKUIBehavior conversationListSummaryBodyLeading](self, "conversationListSummaryBodyLeading");
    v11 = v10 * 0.475;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v12 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v12 = 1.0;
    *(double *)&senderSummaryConversationListSpace_sBehavior = round(v11 * v12) / v12;
    objc_storeStrong((id *)&senderSummaryConversationListSpace_sContentSizeCategory_senderSummaryConversationListSpace, v3);
    senderSummaryConversationListSpace_sIsBoldTextEnabled_senderSummaryConversationListSpace = IsBoldTextEnabled;
    senderSummaryConversationListSpace_sTextFontSize_senderSummaryConversationListSpace = *(_QWORD *)&v5;
    senderSummaryConversationListSpace_sCustomTextFontSize_senderSummaryConversationListSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&senderSummaryConversationListSpace_sCustomTextFontName_senderSummaryConversationListSpace, v8);
  }
  v13 = *(double *)&senderSummaryConversationListSpace_sBehavior;

  return v13;
}

- (double)bottomConversationListSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v15;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)bottomConversationListSpace_sContentSizeCategory_bottomConversationListSpace, (UIContentSizeCategory)v3)|| bottomConversationListSpace_sIsBoldTextEnabled_bottomConversationListSpace != IsBoldTextEnabled|| (*(double *)&bottomConversationListSpace_sTextFontSize_bottomConversationListSpace == v5? (v15 = *(double *)&bottomConversationListSpace_sCustomTextFontSize_bottomConversationListSpace == v6): (v15 = 0), !v15|| (objc_msgSend((id)bottomConversationListSpace_sCustomTextFontName_bottomConversationListSpace, "isEqualToString:", v9, *(double *)&bottomConversationListSpace_sTextFontSize_bottomConversationListSpace, *(double *)&bottomConversationListSpace_sCustomTextFontSize_bottomConversationListSpace) & 1) == 0))
  {
    -[CKUIBehavior conversationListSummaryBodyLeading](self, "conversationListSummaryBodyLeading");
    v11 = v10 * 0.6;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v12 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v12 = 1.0;
    *(double *)&bottomConversationListSpace_sBehavior = round(v11 * v12) / v12;
    objc_storeStrong((id *)&bottomConversationListSpace_sContentSizeCategory_bottomConversationListSpace, v3);
    bottomConversationListSpace_sIsBoldTextEnabled_bottomConversationListSpace = IsBoldTextEnabled;
    bottomConversationListSpace_sTextFontSize_bottomConversationListSpace = *(_QWORD *)&v5;
    bottomConversationListSpace_sCustomTextFontSize_bottomConversationListSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&bottomConversationListSpace_sCustomTextFontName_bottomConversationListSpace, v8);
  }
  v13 = *(double *)&bottomConversationListSpace_sBehavior;

  return v13;
}

- (double)conversationListSummaryBodyLeading
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  uint64_t v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListSummaryBodyLeading_sContentSizeCategory_conversationListSummaryBodyLeading, (UIContentSizeCategory)v3)|| conversationListSummaryBodyLeading_sIsBoldTextEnabled_conversationListSummaryBodyLeading != IsBoldTextEnabled|| (*(double *)&conversationListSummaryBodyLeading_sTextFontSize_conversationListSummaryBodyLeading == v5? (v14 = *(double *)&conversationListSummaryBodyLeading_sCustomTextFontSize_conversationListSummaryBodyLeading == v6): (v14 = 0), !v14|| (objc_msgSend((id)conversationListSummaryBodyLeading_sCustomTextFontName_conversationListSummaryBodyLeading, "isEqualToString:", v9, *(double *)&conversationListSummaryBodyLeading_sTextFontSize_conversationListSummaryBodyLeading, *(double *)&conversationListSummaryBodyLeading_sCustomTextFontSize_conversationListSummaryBodyLeading) & 1) == 0))
  {
    -[CKUIBehavior conversationListSummaryFont](self, "conversationListSummaryFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_bodyLeading");
    conversationListSummaryBodyLeading_sBehavior = v11;

    objc_storeStrong((id *)&conversationListSummaryBodyLeading_sContentSizeCategory_conversationListSummaryBodyLeading, v3);
    conversationListSummaryBodyLeading_sIsBoldTextEnabled_conversationListSummaryBodyLeading = IsBoldTextEnabled;
    conversationListSummaryBodyLeading_sTextFontSize_conversationListSummaryBodyLeading = *(_QWORD *)&v5;
    conversationListSummaryBodyLeading_sCustomTextFontSize_conversationListSummaryBodyLeading = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListSummaryBodyLeading_sCustomTextFontName_conversationListSummaryBodyLeading, v8);
  }
  v12 = *(double *)&conversationListSummaryBodyLeading_sBehavior;

  return v12;
}

- (double)conversationListSenderToDateHorizontalPadding
{
  if (conversationListSenderToDateHorizontalPadding_once != -1)
    dispatch_once(&conversationListSenderToDateHorizontalPadding_once, &__block_literal_global_265_0);
  return *(double *)&conversationListSenderToDateHorizontalPadding_sBehavior;
}

- (double)conversationListSenderBodyLeading
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  uint64_t v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListSenderBodyLeading_sContentSizeCategory_conversationListSenderBodyLeading, (UIContentSizeCategory)v3)|| conversationListSenderBodyLeading_sIsBoldTextEnabled_conversationListSenderBodyLeading != IsBoldTextEnabled|| (*(double *)&conversationListSenderBodyLeading_sTextFontSize_conversationListSenderBodyLeading == v5? (v14 = *(double *)&conversationListSenderBodyLeading_sCustomTextFontSize_conversationListSenderBodyLeading == v6): (v14 = 0), !v14|| (objc_msgSend((id)conversationListSenderBodyLeading_sCustomTextFontName_conversationListSenderBodyLeading, "isEqualToString:", v9, *(double *)&conversationListSenderBodyLeading_sTextFontSize_conversationListSenderBodyLeading, *(double *)&conversationListSenderBodyLeading_sCustomTextFontSize_conversationListSenderBodyLeading) & 1) == 0))
  {
    -[CKUIBehavior conversationListSenderFont](self, "conversationListSenderFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_bodyLeading");
    conversationListSenderBodyLeading_sBehavior = v11;

    objc_storeStrong((id *)&conversationListSenderBodyLeading_sContentSizeCategory_conversationListSenderBodyLeading, v3);
    conversationListSenderBodyLeading_sIsBoldTextEnabled_conversationListSenderBodyLeading = IsBoldTextEnabled;
    conversationListSenderBodyLeading_sTextFontSize_conversationListSenderBodyLeading = *(_QWORD *)&v5;
    conversationListSenderBodyLeading_sCustomTextFontSize_conversationListSenderBodyLeading = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListSenderBodyLeading_sCustomTextFontName_conversationListSenderBodyLeading, v8);
  }
  v12 = *(double *)&conversationListSenderBodyLeading_sBehavior;

  return v12;
}

- (double)conversationListBottomTipSectionPadding
{
  if (conversationListBottomTipSectionPadding_once != -1)
    dispatch_once(&conversationListBottomTipSectionPadding_once, &__block_literal_global_205_1);
  return *(double *)&conversationListBottomTipSectionPadding_sBehavior;
}

- (BOOL)showsBalloonBadges
{
  if (showsBalloonBadges_once != -1)
    dispatch_once(&showsBalloonBadges_once, &__block_literal_global_595);
  return showsBalloonBadges_sBehavior;
}

- (BOOL)darkUIEnabled
{
  if (darkUIEnabled_once != -1)
    dispatch_once(&darkUIEnabled_once, &__block_literal_global_87);
  return 0;
}

void __74__CKUIBehavior_conversationListSearchHidesNavigationBarDuringPresentation__block_invoke()
{
  conversationListSearchHidesNavigationBarDuringPresentation_sBehavior = 1;
}

void __65__CKUIBehavior_conversationListMinimumWidthForHiddenContactImage__block_invoke()
{
  conversationListMinimumWidthForHiddenContactImage_sBehavior = 0x4074000000000000;
}

void __61__CKUIBehavior_conversationListSenderToDateHorizontalPadding__block_invoke()
{
  conversationListSenderToDateHorizontalPadding_sBehavior = 0x4000000000000000;
}

void __59__CKUIBehavior_conversationListHidesSearchBarWhenScrolling__block_invoke()
{
  conversationListHidesSearchBarWhenScrolling_sBehavior = 1;
}

void __57__CKUIBehavior_conversationListContactImageTrailingSpace__block_invoke()
{
  conversationListContactImageTrailingSpace_sBehavior = 0x4028000000000000;
}

void __56__CKUIBehavior_searchControllerObscuresConversationList__block_invoke()
{
  searchControllerObscuresConversationList_sBehavior = 1;
}

void __56__CKUIBehavior_conversationListScrollingPaddingRowCount__block_invoke()
{
  conversationListScrollingPaddingRowCount_sBehavior = 1;
}

void __55__CKUIBehavior_conversationListBottomTipSectionPadding__block_invoke()
{
  conversationListBottomTipSectionPadding_sBehavior = 0x4020000000000000;
}

void __53__CKUIBehavior_showsConversationListCellChevronImage__block_invoke()
{
  showsConversationListCellChevronImage_sBehavior = 1;
}

void __53__CKUIBehavior_entryViewPlusButtonToTextFieldPadding__block_invoke()
{
  entryViewPlusButtonToTextFieldPadding_sBehavior = 0x4028000000000000;
}

void __47__CKUIBehavior_supportsConversationListEditing__block_invoke()
{
  supportsConversationListEditing_sBehavior = 1;
}

void __46__CKUIBehavior_conversationListSeparatorStyle__block_invoke()
{
  conversationListSeparatorStyle_sBehavior = 1;
}

void __44__CKUIBehavior_suggestedMinimumRecentsCount__block_invoke()
{
  suggestedMinimumRecentsCount_sBehavior = 1;
}

void __44__CKUIBehavior_entryViewCoverHasOuterStroke__block_invoke()
{
  entryViewCoverHasOuterStroke_sBehavior = 1;
}

void __42__CKUIBehavior_balloonLineFragmentPadding__block_invoke()
{
  balloonLineFragmentPadding_sBehavior = 0x4014000000000000;
}

void __40__CKUIBehavior_shouldUseTranslucentBars__block_invoke()
{
  shouldUseTranslucentBars_sBehavior = 1;
}

void __38__CKUIBehavior_suggestedAppStripLimit__block_invoke()
{
  suggestedAppStripLimit_sBehavior = 1;
}

void __36__CKUIBehavior_balloonMaskTailWidth__block_invoke()
{
  balloonMaskTailWidth_sBehavior = 0x4018000000000000;
}

void __36__CKUIBehavior_appIconPrefetchLimit__block_invoke()
{
  appIconPrefetchLimit_sBehavior = 1;
}

void __34__CKUIBehavior_showsBalloonBadges__block_invoke()
{
  showsBalloonBadges_sBehavior = 1;
}

- (UIFont)balloonTextFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)balloonTextFont_sContentSizeCategory_balloonTextFont, (UIContentSizeCategory)v3)|| balloonTextFont_sIsIncreaseContrastEnabled_balloonTextFont != v4|| balloonTextFont_sIsBoldTextEnabled_balloonTextFont != IsBoldTextEnabled|| (v11 = balloonTextFont_sTextFontSize_balloonTextFont, *(double *)&balloonTextFont_sTextFontSize_balloonTextFont != v6)|| (v11 = balloonTextFont_sCustomTextFontSize_balloonTextFont, *(double *)&balloonTextFont_sCustomTextFontSize_balloonTextFont != v7)|| (objc_msgSend((id)balloonTextFont_sCustomTextFontName_balloonTextFont, "isEqualToString:", v10, *(double *)&balloonTextFont_sCustomTextFontSize_balloonTextFont) & 1) == 0)
  {
    -[CKUIBehavior _balloonTextFont](self, "_balloonTextFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)balloonTextFont_sBehavior;
    balloonTextFont_sBehavior = v12;

    objc_storeStrong((id *)&balloonTextFont_sContentSizeCategory_balloonTextFont, v3);
    balloonTextFont_sIsIncreaseContrastEnabled_balloonTextFont = v4;
    balloonTextFont_sIsBoldTextEnabled_balloonTextFont = IsBoldTextEnabled;
    balloonTextFont_sTextFontSize_balloonTextFont = *(_QWORD *)&v6;
    balloonTextFont_sCustomTextFontSize_balloonTextFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&balloonTextFont_sCustomTextFontName_balloonTextFont, v9);
  }
  v14 = (UIFont *)(id)balloonTextFont_sBehavior;

  return v14;
}

- (id)_balloonTextFont
{
  return (id)objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538]);
}

uint64_t __50__CKUIBehavior_maximumNumberOfPinnedConversations__block_invoke()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D358C8], "maximumNumberOfPinnedConversations");
  maximumNumberOfPinnedConversations_sBehavior = result;
  return result;
}

- (unint64_t)maximumNumberOfPinnedConversations
{
  if (maximumNumberOfPinnedConversations_once != -1)
    dispatch_once(&maximumNumberOfPinnedConversations_once, &__block_literal_global_259_0);
  return maximumNumberOfPinnedConversations_sBehavior;
}

void __38__CKUIBehavior_balloonMaxWidthPercent__block_invoke()
{
  balloonMaxWidthPercent_sBehavior = 0x3FEB333333333333;
}

- (BOOL)useMacToolbar
{
  if (useMacToolbar_once != -1)
    dispatch_once(&useMacToolbar_once, &__block_literal_global_183_0);
  return 0;
}

- (unint64_t)contentRectEdgeForConversationListSearchBarInsetsWithRTL:(BOOL)a3
{
  if (a3)
    return 8;
  else
    return 2;
}

- (UIEdgeInsets)contentInsetsForConversationListSearchBarForLayoutMargins:(UIEdgeInsets)result isRTL:(BOOL)a4
{
  double v4;
  double v5;

  v4 = 0.0;
  if (a4)
    result.left = 0.0;
  else
    result.right = 0.0;
  v5 = 0.0;
  result.bottom = v5;
  result.top = v4;
  return result;
}

- (BOOL)wantsUniversalThreeColumn
{
  if (wantsUniversalThreeColumn_once != -1)
    dispatch_once(&wantsUniversalThreeColumn_once, &__block_literal_global_106);
  return wantsUniversalThreeColumn_sBehavior;
}

- (BOOL)forcesUnknownFiltering
{
  if (forcesUnknownFiltering_once != -1)
    dispatch_once(&forcesUnknownFiltering_once, &__block_literal_global_291_0);
  return 0;
}

- (BOOL)supportsConversationListEditing
{
  if (supportsConversationListEditing_once != -1)
    dispatch_once(&supportsConversationListEditing_once, &__block_literal_global_287_1);
  return supportsConversationListEditing_sBehavior;
}

- (BOOL)alwaysShowSelectionInConversationList
{
  if (alwaysShowSelectionInConversationList_once != -1)
    dispatch_once(&alwaysShowSelectionInConversationList_once, &__block_literal_global_267_1);
  return 0;
}

- (void)setupNavBarAppearanceWithNavigationController:(id)a3 withBackgroundColor:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  v5 = a4;
  objc_msgSend(v10, "navigationBar");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "standardAppearance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v7, "copy");

  objc_msgSend(v8, "configureWithOpaqueBackground");
  objc_msgSend(v8, "setShadowColor:", 0);
  objc_msgSend(v8, "setShadowImage:", 0);
  if (v5)
    objc_msgSend(v8, "setBackgroundColor:", v5);
  objc_msgSend(v10, "navigationBar");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setScrollEdgeAppearance:", v8);

}

- (BOOL)searchControllerObscuresConversationList
{
  if (searchControllerObscuresConversationList_once != -1)
    dispatch_once(&searchControllerObscuresConversationList_once, &__block_literal_global_286_0);
  return searchControllerObscuresConversationList_sBehavior;
}

- (BOOL)conversationListSearchHidesNavigationBarDuringPresentation
{
  if (conversationListSearchHidesNavigationBarDuringPresentation_once != -1)
    dispatch_once(&conversationListSearchHidesNavigationBarDuringPresentation_once, &__block_literal_global_271_0);
  return conversationListSearchHidesNavigationBarDuringPresentation_sBehavior;
}

- (BOOL)conversationListHidesSearchBarWhenScrolling
{
  if (conversationListHidesSearchBarWhenScrolling_once != -1)
    dispatch_once(&conversationListHidesSearchBarWhenScrolling_once, &__block_literal_global_269_0);
  return conversationListHidesSearchBarWhenScrolling_sBehavior;
}

void __50__CKUIBehavior_conversationListSIMLabelBaseRadius__block_invoke()
{
  conversationListSIMLabelBaseRadius_sBehavior = 0x40019999A0000000;
}

void __44__CKUIBehavior_unreadIndicatorImageViewSize__block_invoke()
{
  unreadIndicatorImageViewSize_sBehavior_0 = 0x4026000000000000;
  unreadIndicatorImageViewSize_sBehavior_1 = 0x4026000000000000;
}

void __41__CKUIBehavior_minTranscriptMarginInsets__block_invoke()
{
  minTranscriptMarginInsets_sBehavior_1 = 0x4030000000000000;
  minTranscriptMarginInsets_sBehavior_3 = 0x4030000000000000;
}

void __39__CKUIBehavior_entryViewPlusButtonSize__block_invoke()
{
  entryViewPlusButtonSize_sBehavior_0 = 0x4041000000000000;
  entryViewPlusButtonSize_sBehavior_1 = 0x4041000000000000;
}

void __44__CKUIBehavior_entryViewVerticalCoverInsets__block_invoke()
{
  entryViewVerticalCoverInsets_sBehavior_0 = 0x4014000000000000;
  entryViewVerticalCoverInsets_sBehavior_2 = 0x4010000000000000;
}

- (void)setHUDStyle:(int64_t)a3
{
  id v4;

  if (self->_HUDStyle != a3)
  {
    self->_HUDStyle = a3;
    -[CKUIBehavior theme](self, "theme");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setHUDStyle:", self->_HUDStyle);

  }
}

void __31__CKUIBehavior_balloonMaskSize__block_invoke()
{
  balloonMaskSize_sBehavior_0 = 0x404C000000000000;
  balloonMaskSize_sBehavior_1 = 0x4041800000000000;
}

uint64_t __31__CKUIBehavior_previewMaxWidth__block_invoke(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t result;
  uint64_t v10;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(v2, "maxTranscriptPortraitWidth");
  v4 = v3;
  objc_msgSend(*(id *)(a1 + 32), "minTranscriptMarginInsets");
  objc_msgSend(v2, "balloonMaxWidthForTranscriptWidth:marginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:isStewieMode:", 1, 1, 0, 0, v4, v5, v6, v7, v8);
  result = objc_msgSend(v2, "previewBalloonMaxWidthForBalloonMaxWidth:");
  previewMaxWidth_sBehavior = v10;
  return result;
}

- (UIEdgeInsets)minTranscriptMarginInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (minTranscriptMarginInsets_once != -1)
    dispatch_once(&minTranscriptMarginInsets_once, &__block_literal_global_443_0);
  v2 = *(double *)&minTranscriptMarginInsets_sBehavior_1;
  v3 = *(double *)&minTranscriptMarginInsets_sBehavior_3;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v3;
  result.bottom = v5;
  result.left = v2;
  result.top = v4;
  return result;
}

- (double)maxTranscriptPortraitWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __42__CKUIBehavior_maxTranscriptPortraitWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (maxTranscriptPortraitWidth_once != -1)
    dispatch_once(&maxTranscriptPortraitWidth_once, block);
  return *(double *)&maxTranscriptPortraitWidth_sBehavior;
}

void __46__CKUIBehavior_balloonMaskAlignmentRectInsets__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v2 = v1;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v3 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  v4 = 1.0;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v3 = 1.0;
  v5 = ceil(v3 * 8.0) / v3;
  v6 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v6 = 1.0;
  v7 = ceil(v6 * 12.0) / v6;
  v8 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v8 = 1.0;
  v9 = ceil(v8 * 9.0) / v8;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 != 0.0)
    v4 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  balloonMaskAlignmentRectInsets_sBehavior_0 = *(_QWORD *)&v5;
  balloonMaskAlignmentRectInsets_sBehavior_1 = *(_QWORD *)&v7;
  balloonMaskAlignmentRectInsets_sBehavior_2 = *(_QWORD *)&v9;
  *(double *)&balloonMaskAlignmentRectInsets_sBehavior_3 = ceil((v2 + 12.0) * v4) / v4;
}

- (double)previewBalloonMaxWidthForBalloonMaxWidth:(double)a3
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  -[CKUIBehavior balloonLineFragmentInsets](self, "balloonLineFragmentInsets");
  v6 = v5;
  v8 = v7;
  -[CKUIBehavior balloonMaskAlignmentRectInsetsWithTailShape:](self, "balloonMaskAlignmentRectInsetsWithTailShape:", 1);
  v10 = v9;
  v12 = v11;
  -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
  v14 = v13;
  -[CKUIBehavior balloonLineFragmentInsets](self, "balloonLineFragmentInsets");
  v16 = v15;
  v18 = v17;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v19 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v19 = 1.0;
  return ceil((v14 + v6 + v8 + a3 - (v10 + v12) - (v16 + v18)) * v19) / v19;
}

- (CGSize)balloonMaskTailSizeForTailShape:(char)a3
{
  double v3;
  double v4;
  double v6;
  double v7;
  double v8;
  CGSize result;

  if (a3 == 2)
  {
    v4 = 6.0;
    v3 = 6.0;
  }
  else if (a3 == 1)
  {
    -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
    v4 = v6;
    -[CKUIBehavior balloonMaskTailHeight](self, "balloonMaskTailHeight");
    v3 = v7;
  }
  else
  {
    v4 = *MEMORY[0x1E0C9D820];
    v3 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  }
  v8 = v4;
  result.height = v3;
  result.width = v8;
  return result;
}

- (double)balloonMaskTailWidth
{
  if (balloonMaskTailWidth_once != -1)
    dispatch_once(&balloonMaskTailWidth_once, &__block_literal_global_598);
  return *(double *)&balloonMaskTailWidth_sBehavior;
}

- (double)balloonMaskTailHeight
{
  if (balloonMaskTailHeight_once != -1)
    dispatch_once(&balloonMaskTailHeight_once, &__block_literal_global_599);
  return 0.0;
}

- (UIEdgeInsets)balloonLineFragmentInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __41__CKUIBehavior_balloonLineFragmentInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (balloonLineFragmentInsets_once != -1)
    dispatch_once(&balloonLineFragmentInsets_once, block);
  v2 = *(double *)&balloonLineFragmentInsets_sBehavior_1;
  v3 = *(double *)&balloonLineFragmentInsets_sBehavior_3;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v3;
  result.bottom = v5;
  result.left = v2;
  result.top = v4;
  return result;
}

- (double)balloonMaxWidthForTranscriptWidth:(double)a3 marginInsets:(UIEdgeInsets)a4 shouldShowPluginButtons:(BOOL)a5 shouldShowCharacterCount:(BOOL)a6 shouldCoverSendButton:(BOOL)a7
{
  double right;
  double left;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double result;
  double v29;
  double v30;

  right = a4.right;
  left = a4.left;
  +[CKMessageEntryView contentViewInsetsForMarginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:isStewieMode:](CKMessageEntryView, "contentViewInsetsForMarginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:isStewieMode:", a5, a6, a7, 0, a4.top, a4.left, a4.bottom, a4.right);
  v29 = v13;
  v30 = v12;
  -[CKUIBehavior balloonLineFragmentInsets](self, "balloonLineFragmentInsets");
  v15 = v14;
  v17 = v16;
  -[CKUIBehavior balloonMaskAlignmentRectInsetsWithTailShape:](self, "balloonMaskAlignmentRectInsetsWithTailShape:", 1);
  v19 = v18;
  v21 = v20;
  v22 = 1.0;
  if (!a7)
  {
    -[CKUIBehavior balloonMaxWidthPercent](self, "balloonMaxWidthPercent");
    v22 = v23;
  }
  v24 = a3 - (left + right);
  if (-[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory"))
  {
    -[CKUIBehavior messageAcknowledgmentTranscriptBalloonSize](self, "messageAcknowledgmentTranscriptBalloonSize");
    v26 = v25;
    -[CKUIBehavior messageAcknowledgmentTranscriptBalloonRelativePosition](self, "messageAcknowledgmentTranscriptBalloonRelativePosition");
    return v24 - (v26 - v27);
  }
  else
  {
    result = v19 + v21 + a3 - (v30 + v29) - (v15 + v17);
    if (result >= v24 * v22)
      return v24 * v22;
  }
  return result;
}

- (UIEdgeInsets)balloonMaskAlignmentRectInsetsWithTailShape:(char)a3
{
  double v3;
  double v4;
  double v5;
  double v6;
  UIEdgeInsets result;

  if (a3 == 2)
    goto LABEL_5;
  if (a3 == 1)
  {
    -[CKUIBehavior balloonMaskAlignmentRectInsets](self, "balloonMaskAlignmentRectInsets");
    goto LABEL_7;
  }
  if (a3)
  {
LABEL_5:
    v3 = *MEMORY[0x1E0CEB4B0];
    v4 = *(double *)(MEMORY[0x1E0CEB4B0] + 8);
    v5 = *(double *)(MEMORY[0x1E0CEB4B0] + 16);
    v6 = *(double *)(MEMORY[0x1E0CEB4B0] + 24);
  }
  else
  {
    -[CKUIBehavior taillessBalloonMaskAlignmentRectInsets](self, "taillessBalloonMaskAlignmentRectInsets");
  }
LABEL_7:
  result.right = v6;
  result.bottom = v5;
  result.left = v4;
  result.top = v3;
  return result;
}

- (UIEdgeInsets)balloonMaskAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __46__CKUIBehavior_balloonMaskAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (balloonMaskAlignmentRectInsets_once != -1)
    dispatch_once(&balloonMaskAlignmentRectInsets_once, block);
  v2 = *(double *)&balloonMaskAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&balloonMaskAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&balloonMaskAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&balloonMaskAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (double)balloonMaxWidthPercent
{
  if (balloonMaxWidthPercent_once != -1)
    dispatch_once(&balloonMaxWidthPercent_once, &__block_literal_global_479);
  return *(double *)&balloonMaxWidthPercent_sBehavior;
}

void __48__CKUIBehavior_entryViewVerticalTextFieldInsets__block_invoke(uint64_t a1)
{
  void *v2;
  int v3;
  double v4;
  double v5;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isSendMenuEnabled");

  v4 = 7.25;
  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "entryFieldCoverLineWidth", 7.25);
    v4 = v5 + 7.25;
  }
  entryViewVerticalTextFieldInsets_sBehavior_0 = *(_QWORD *)&v4;
  entryViewVerticalTextFieldInsets_sBehavior_2 = *(_QWORD *)&v4;
}

uint64_t __39__CKUIBehavior_entryViewCoverMinHeight__block_invoke(uint64_t a1)
{
  uint64_t result;
  double v3;
  double v4;

  result = objc_msgSend(*(id *)(a1 + 32), "entryViewCoverHasOuterStroke");
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "entryFieldCoverLineWidth");
    v4 = v3 * 2.0 + 35.0;
  }
  else
  {
    v4 = 35.0;
  }
  entryViewCoverMinHeight_sBehavior = *(_QWORD *)&v4;
  return result;
}

- (double)entryFieldCoverLineWidth
{
  if (entryFieldCoverLineWidth_once != -1)
    dispatch_once(&entryFieldCoverLineWidth_once, &__block_literal_global_845);
  return *(double *)&entryFieldCoverLineWidth_sBehavior;
}

- (double)sendButtonSize
{
  if (sendButtonSize_once != -1)
    dispatch_once(&sendButtonSize_once, &__block_literal_global_841_0);
  return *(double *)&sendButtonSize_sBehavior;
}

- (double)entryViewSendButtonCoverSpace
{
  if (entryViewSendButtonCoverSpace_once != -1)
    dispatch_once(&entryViewSendButtonCoverSpace_once, &__block_literal_global_856);
  return *(double *)&entryViewSendButtonCoverSpace_sBehavior;
}

- (BOOL)entryViewCoverHasOuterStroke
{
  if (entryViewCoverHasOuterStroke_once != -1)
    dispatch_once(&entryViewCoverHasOuterStroke_once, &__block_literal_global_846);
  return entryViewCoverHasOuterStroke_sBehavior;
}

uint64_t __50__CKUIBehavior_entryViewNonCollapsableLeftPadding__block_invoke(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t result;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isSendMenuEnabled");

  v4 = *(void **)(a1 + 32);
  if (v3)
  {
    objc_msgSend(v4, "entryViewPlusButtonSize");
    v6 = v5;
    objc_msgSend(*(id *)(a1 + 32), "entryViewPlusButtonToTextFieldPadding");
    v8 = v7;
    result = objc_msgSend(*(id *)(a1 + 32), "entryViewHorizontalCoverInsets");
    v11 = v8 + v6 + v10;
  }
  else
  {
    objc_msgSend(v4, "browserButtonSize");
    v13 = v12;
    result = objc_msgSend(*(id *)(a1 + 32), "entryViewHorizontalCoverInsets");
    v11 = v13 + v14 * 2.0;
  }
  entryViewNonCollapsableLeftPadding_sBehavior = *(_QWORD *)&v11;
  return result;
}

- (double)entryViewPlusButtonToTextFieldPadding
{
  if (entryViewPlusButtonToTextFieldPadding_once != -1)
    dispatch_once(&entryViewPlusButtonToTextFieldPadding_once, &__block_literal_global_848);
  return *(double *)&entryViewPlusButtonToTextFieldPadding_sBehavior;
}

- (CGSize)entryViewPlusButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (entryViewPlusButtonSize_once != -1)
    dispatch_once(&entryViewPlusButtonSize_once, &__block_literal_global_842);
  v2 = *(double *)&entryViewPlusButtonSize_sBehavior_0;
  v3 = *(double *)&entryViewPlusButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

- (UIEdgeInsets)entryViewHorizontalCoverInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (entryViewHorizontalCoverInsets_once != -1)
    dispatch_once(&entryViewHorizontalCoverInsets_once, &__block_literal_global_849);
  v2 = *(double *)&entryViewHorizontalCoverInsets_sBehavior_0;
  v3 = *(double *)&entryViewHorizontalCoverInsets_sBehavior_1;
  v4 = *(double *)&entryViewHorizontalCoverInsets_sBehavior_2;
  v5 = *(double *)&entryViewHorizontalCoverInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (BOOL)isEntryViewCollapsable
{
  if (isEntryViewCollapsable_once != -1)
    dispatch_once(&isEntryViewCollapsable_once, &__block_literal_global_793);
  return isEntryViewCollapsable_sBehavior;
}

- (UIEdgeInsets)entryViewVerticalCoverInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (entryViewVerticalCoverInsets_once != -1)
    dispatch_once(&entryViewVerticalCoverInsets_once, &__block_literal_global_847);
  v2 = *(double *)&entryViewVerticalCoverInsets_sBehavior_0;
  v3 = *(double *)&entryViewVerticalCoverInsets_sBehavior_2;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v3;
  result.left = v4;
  result.top = v2;
  return result;
}

- (double)entryViewNonCollapsableLeftPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __50__CKUIBehavior_entryViewNonCollapsableLeftPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewNonCollapsableLeftPadding_once != -1)
    dispatch_once(&entryViewNonCollapsableLeftPadding_once, block);
  return *(double *)&entryViewNonCollapsableLeftPadding_sBehavior;
}

- (UIFont)characterCountFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)characterCountFont_sContentSizeCategory_characterCountFont, (UIContentSizeCategory)v2)|| characterCountFont_sIsIncreaseContrastEnabled_characterCountFont != v3|| characterCountFont_sIsBoldTextEnabled_characterCountFont != IsBoldTextEnabled|| (v10 = characterCountFont_sTextFontSize_characterCountFont, *(double *)&characterCountFont_sTextFontSize_characterCountFont != v5)|| (v10 = characterCountFont_sCustomTextFontSize_characterCountFont, *(double *)&characterCountFont_sCustomTextFontSize_characterCountFont != v6)|| (objc_msgSend((id)characterCountFont_sCustomTextFontName_characterCountFont, "isEqualToString:", v9, *(double *)&characterCountFont_sCustomTextFontSize_characterCountFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "defaultFontForTextStyle:", *MEMORY[0x1E0CEB550], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)characterCountFont_sBehavior;
    characterCountFont_sBehavior = v11;

    objc_storeStrong((id *)&characterCountFont_sContentSizeCategory_characterCountFont, v2);
    characterCountFont_sIsIncreaseContrastEnabled_characterCountFont = v3;
    characterCountFont_sIsBoldTextEnabled_characterCountFont = IsBoldTextEnabled;
    characterCountFont_sTextFontSize_characterCountFont = *(_QWORD *)&v5;
    characterCountFont_sCustomTextFontSize_characterCountFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&characterCountFont_sCustomTextFontName_characterCountFont, v8);
  }
  v13 = (UIFont *)(id)characterCountFont_sBehavior;

  return v13;
}

void __50__CKUIBehavior_conversationListMuteIndicatorImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("bell.slash.fill"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v0 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:variant:", *MEMORY[0x1E0CEB540], 1024);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "configurationWithFont:scale:", v1, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "imageWithSymbolConfiguration:", v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)conversationListMuteIndicatorImage_sBehavior;
  conversationListMuteIndicatorImage_sBehavior = v3;

}

void __28__CKUIBehavior_chevronImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("chevron.forward"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v0 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:variant:", *MEMORY[0x1E0CEB538], 1024);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "configurationWithFont:scale:", v1, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "imageWithSymbolConfiguration:", v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)chevronImage_sBehavior;
  chevronImage_sBehavior = v3;

}

void __35__CKUIBehavior__shouldUseClarityUI__block_invoke()
{
  id v0;

  v0 = (id)objc_opt_new();
  _shouldUseClarityUI_sIsClarityBoardEnabled = objc_msgSend(v0, "isClarityBoardEnabled");

}

- (double)minConversationListWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __40__CKUIBehavior_minConversationListWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (minConversationListWidth_once != -1)
    dispatch_once(&minConversationListWidth_once, block);
  return *(double *)&minConversationListWidth_sBehavior;
}

- (double)maxConversationListWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __40__CKUIBehavior_maxConversationListWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (maxConversationListWidth_once != -1)
    dispatch_once(&maxConversationListWidth_once, block);
  return *(double *)&maxConversationListWidth_sBehavior;
}

- (Class)conversationListControllerClass
{
  if (conversationListControllerClass_once != -1)
    dispatch_once(&conversationListControllerClass_once, &__block_literal_global_250_1);
  return (Class)(id)conversationListControllerClass_sBehavior;
}

void __54__CKUIBehavior_defaultConversationViewingMessageCount__block_invoke()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = IMGetCachedDomainIntForKeyWithDefaultValue();
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "_graphicsQuality");

  v3 = 25;
  if (v2 != 10)
    v3 = v0;
  defaultConversationViewingMessageCount_sBehavior = v3;
}

void __27__CKUIBehavior_appIconSize__block_invoke()
{
  void *v0;
  uint64_t v1;
  double v2;
  double v3;
  void *v4;
  uint64_t v5;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  if (CKIsBigIdiom_onceToken != -1)
    dispatch_once(&CKIsBigIdiom_onceToken, &__block_literal_global_4567);
  if (CKIsBigIdiom_sBig)
  {
    v2 = 74.0;
    v3 = 55.0;
  }
  else if (v1)
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "userInterfaceIdiom");

    v3 = 50.0;
    v2 = 0.0;
    if ((v5 & 0xFFFFFFFFFFFFFFFBLL) == 1)
      v2 = 67.0;
    else
      v3 = 0.0;
  }
  else
  {
    v2 = 60.0;
    v3 = 45.0;
  }
  appIconSize_sBehavior_0 = *(_QWORD *)&v2;
  appIconSize_sBehavior_1 = *(_QWORD *)&v3;
}

void __41__CKUIBehavior_wantsUniversalThreeColumn__block_invoke()
{
  void *v0;
  BOOL v1;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom") == 1;

  wantsUniversalThreeColumn_sBehavior = v1;
}

uint64_t __40__CKUIBehavior_minConversationListWidth__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  uint64_t result;
  double v5;

  objc_msgSend(*(id *)(a1 + 32), "conversationListWidthForInterfaceOrientation:", 1);
  v3 = v2;
  result = objc_msgSend(*(id *)(a1 + 32), "conversationListWidthForInterfaceOrientation:", 4);
  if (v3 < v5)
    v5 = v3;
  minConversationListWidth_sBehavior = *(_QWORD *)&v5;
  return result;
}

uint64_t __40__CKUIBehavior_maxConversationListWidth__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  uint64_t result;
  double v5;

  objc_msgSend(*(id *)(a1 + 32), "conversationListWidthForInterfaceOrientation:", 1);
  v3 = v2;
  result = objc_msgSend(*(id *)(a1 + 32), "conversationListWidthForInterfaceOrientation:", 4);
  if (v3 >= v5)
    v5 = v3;
  maxConversationListWidth_sBehavior = *(_QWORD *)&v5;
  return result;
}

- (double)conversationListWidthForInterfaceOrientation:(int64_t)a3
{
  double result;

  result = 320.0;
  if ((unint64_t)(a3 - 3) >= 2)
    return 0.0;
  return result;
}

uint64_t __57__CKUIBehavior_conversationListNavigationControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  conversationListNavigationControllerClass_sBehavior = result;
  return result;
}

uint64_t __47__CKUIBehavior_conversationListControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  conversationListControllerClass_sBehavior = result;
  return result;
}

uint64_t __34__CKUIBehavior_navigationBarClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  navigationBarClass_sBehavior = result;
  return result;
}

uint64_t __27__CKUIBehavior_windowClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  windowClass_sBehavior = result;
  return result;
}

- (Class)windowClass
{
  if (windowClass_once != -1)
    dispatch_once(&windowClass_once, &__block_literal_global_258_0);
  return (Class)(id)windowClass_sBehavior;
}

- (CKMessageEntryViewLayoutMetrics)entryViewlayoutMetrics
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  CKMessageEntryViewLayoutMetrics *v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewlayoutMetrics_sContentSizeCategory_entryViewlayoutMetrics, (UIContentSizeCategory)v3)|| entryViewlayoutMetrics_sIsBoldTextEnabled_entryViewlayoutMetrics != IsBoldTextEnabled|| (*(double *)&entryViewlayoutMetrics_sTextFontSize_entryViewlayoutMetrics == v5? (v14 = *(double *)&entryViewlayoutMetrics_sCustomTextFontSize_entryViewlayoutMetrics == v6): (v14 = 0), !v14|| (objc_msgSend((id)entryViewlayoutMetrics_sCustomTextFontName_entryViewlayoutMetrics, "isEqualToString:", v9, *(double *)&entryViewlayoutMetrics_sTextFontSize_entryViewlayoutMetrics, *(double *)&entryViewlayoutMetrics_sCustomTextFontSize_entryViewlayoutMetrics) & 1) == 0))
  {
    -[CKUIBehavior _entryViewlayoutMetrics](self, "_entryViewlayoutMetrics");
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)entryViewlayoutMetrics_sBehavior;
    entryViewlayoutMetrics_sBehavior = v10;

    objc_storeStrong((id *)&entryViewlayoutMetrics_sContentSizeCategory_entryViewlayoutMetrics, v3);
    entryViewlayoutMetrics_sIsBoldTextEnabled_entryViewlayoutMetrics = IsBoldTextEnabled;
    entryViewlayoutMetrics_sTextFontSize_entryViewlayoutMetrics = *(_QWORD *)&v5;
    entryViewlayoutMetrics_sCustomTextFontSize_entryViewlayoutMetrics = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewlayoutMetrics_sCustomTextFontName_entryViewlayoutMetrics, v8);
  }
  v12 = (CKMessageEntryViewLayoutMetrics *)(id)entryViewlayoutMetrics_sBehavior;

  return v12;
}

- (id)_entryViewlayoutMetrics
{
  if (CKIsRunningInIMTranscoderAgent())
    return 0;
  +[CKMessageEntryViewLayoutMetrics cachedMetricsRecalculatingIfNecessary](CKMessageEntryViewLayoutMetrics, "cachedMetricsRecalculatingIfNecessary");
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t __41__CKUIBehavior_balloonLineFragmentInsets__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "balloonLineFragmentPadding");
  balloonLineFragmentInsets_sBehavior_1 = v2;
  balloonLineFragmentInsets_sBehavior_3 = v2;
  return result;
}

- (double)balloonLineFragmentPadding
{
  if (balloonLineFragmentPadding_once != -1)
    dispatch_once(&balloonLineFragmentPadding_once, &__block_literal_global_624);
  return *(double *)&balloonLineFragmentPadding_sBehavior;
}

- (UIEdgeInsets)entryViewVerticalTextFieldInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __48__CKUIBehavior_entryViewVerticalTextFieldInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewVerticalTextFieldInsets_once != -1)
    dispatch_once(&entryViewVerticalTextFieldInsets_once, block);
  v2 = *(double *)&entryViewVerticalTextFieldInsets_sBehavior_0;
  v3 = *(double *)&entryViewVerticalTextFieldInsets_sBehavior_2;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v3;
  result.left = v4;
  result.top = v2;
  return result;
}

- (double)entryViewCoverMinHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_entryViewCoverMinHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewCoverMinHeight_once != -1)
    dispatch_once(&entryViewCoverMinHeight_once, block);
  return *(double *)&entryViewCoverMinHeight_sBehavior;
}

void __38__CKUIBehavior_isEntryViewCollapsable__block_invoke()
{
  void *v0;
  char v1;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isSendMenuEnabled");

  isEntryViewCollapsable_sBehavior = v1 ^ 1;
}

void __50__CKUIBehavior_shouldSuppressRotationInNewCompose__block_invoke()
{
  if (CKIsGeneralIdiom_onceToken != -1)
    dispatch_once(&CKIsGeneralIdiom_onceToken, &__block_literal_global_4566);
  shouldSuppressRotationInNewCompose_sBehavior = CKIsGeneralIdiom_sGeneralIdiom;
}

void __45__CKUIBehavior_showPendingInConversationList__block_invoke()
{
  if (CKIsGeneralIdiom_onceToken != -1)
    dispatch_once(&CKIsGeneralIdiom_onceToken, &__block_literal_global_4566);
  showPendingInConversationList_sBehavior = CKIsGeneralIdiom_sGeneralIdiom;
}

void __40__CKUIBehavior_usesUncollapsedSplitview__block_invoke()
{
  if (CKIsGeneralIdiom_onceToken != -1)
    dispatch_once(&CKIsGeneralIdiom_onceToken, &__block_literal_global_4566);
  usesUncollapsedSplitview_sBehavior = CKIsGeneralIdiom_sGeneralIdiom;
}

void __40__CKUIBehavior_shouldUseDynamicGradient__block_invoke()
{
  if (CKIsP101_onceToken != -1)
    dispatch_once(&CKIsP101_onceToken, &__block_literal_global_4569);
  shouldUseDynamicGradient_sBehavior = CKIsP101_sIsP101 ^ 1;
}

double __45__CKUIBehavior_entryViewSendButtonCoverSpace__block_invoke()
{
  double result;

  if (CKPixelWidth_once_7 != -1)
    dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
  result = *(double *)&CKPixelWidth_sPixel_7 + 4.5;
  *(double *)&entryViewSendButtonCoverSpace_sBehavior = *(double *)&CKPixelWidth_sPixel_7 + 4.5;
  return result;
}

double __30__CKUIBehavior_sendButtonSize__block_invoke()
{
  double result;

  if (CKPixelWidth_once_7 != -1)
    dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
  result = *(double *)&CKPixelWidth_sPixel_7 + 27.0;
  *(double *)&sendButtonSize_sBehavior = *(double *)&CKPixelWidth_sPixel_7 + 27.0;
  return result;
}

void __21__CKUIBehavior_theme__block_invoke()
{
  int v0;
  __objc2_class **v1;
  id v2;
  void *v3;

  v0 = CKIsRunningInMessagesNotificationExtension();
  v1 = off_1E2733D68;
  if (v0)
    v1 = off_1E2733D88;
  v2 = objc_alloc_init(*v1);
  v3 = (void *)theme_sBehavior;
  theme_sBehavior = (uint64_t)v2;

}

- (CGSize)balloonMaskSizeWithTailShape:(char)a3 isMultiline:(BOOL)a4
{
  double v4;
  double v5;
  CGSize result;

  if (a3 == 2)
    goto LABEL_6;
  if (a3 != 1)
  {
    if (!a3)
    {
      if (a4)
        -[CKUIBehavior taillessMultilineBalloonMaskSize](self, "taillessMultilineBalloonMaskSize");
      else
        -[CKUIBehavior taillessBalloonMaskSize](self, "taillessBalloonMaskSize");
      goto LABEL_11;
    }
LABEL_6:
    v4 = *MEMORY[0x1E0C9D820];
    v5 = *(double *)(MEMORY[0x1E0C9D820] + 8);
    goto LABEL_11;
  }
  if (a4)
    -[CKUIBehavior multilineBalloonMaskSize](self, "multilineBalloonMaskSize");
  else
    -[CKUIBehavior balloonMaskSize](self, "balloonMaskSize");
LABEL_11:
  result.height = v5;
  result.width = v4;
  return result;
}

- (CGSize)balloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (balloonMaskSize_once != -1)
    dispatch_once(&balloonMaskSize_once, &__block_literal_global_600);
  v2 = *(double *)&balloonMaskSize_sBehavior_0;
  v3 = *(double *)&balloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

double __40__CKUIBehavior_entryFieldCoverLineWidth__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = ceil(v0) / v0;
  entryFieldCoverLineWidth_sBehavior = *(_QWORD *)&result;
  return result;
}

double __52__CKUIBehavior_conversationListContactImageDiameter__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = ceil(v0 * 45.0) / v0;
  conversationListContactImageDiameter_sBehavior = *(_QWORD *)&result;
  return result;
}

void __46__CKUIBehavior_entryViewHorizontalCoverInsets__block_invoke()
{
  void *v0;
  int v1;
  double v2;
  double v3;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isSendMenuEnabled");

  v2 = 16.0;
  v3 = 14.0;
  if (v1)
    v2 = 14.0;
  else
    v3 = 15.0;
  entryViewHorizontalCoverInsets_sBehavior_0 = 0;
  entryViewHorizontalCoverInsets_sBehavior_1 = *(_QWORD *)&v3;
  entryViewHorizontalCoverInsets_sBehavior_2 = 0;
  entryViewHorizontalCoverInsets_sBehavior_3 = *(_QWORD *)&v2;
}

void __52__CKUIBehavior_resumeToConversationListTimeInterval__block_invoke()
{
  resumeToConversationListTimeInterval_sBehavior = 0x407E000000000000;
}

- (double)resumeToConversationListTimeInterval
{
  if (resumeToConversationListTimeInterval_once != -1)
    dispatch_once(&resumeToConversationListTimeInterval_once, &__block_literal_global_103_0);
  return *(double *)&resumeToConversationListTimeInterval_sBehavior;
}

+ (void)testOverrideClearSharedBehaviors
{
  void *v2;

  v2 = (void *)sSharedBehaviors;
  sSharedBehaviors = 0;

}

- (double)muteOneHourTimeInterval
{
  if (muteOneHourTimeInterval_once != -1)
    dispatch_once(&muteOneHourTimeInterval_once, &__block_literal_global_65_0);
  return *(double *)&muteOneHourTimeInterval_sBehavior;
}

void __39__CKUIBehavior_muteOneHourTimeInterval__block_invoke()
{
  muteOneHourTimeInterval_sBehavior = 0x40AC200000000000;
}

- (double)muteEightHourTimeInterval
{
  if (muteEightHourTimeInterval_once != -1)
    dispatch_once(&muteEightHourTimeInterval_once, &__block_literal_global_66_0);
  return *(double *)&muteEightHourTimeInterval_sBehavior;
}

void __41__CKUIBehavior_muteEightHourTimeInterval__block_invoke()
{
  muteEightHourTimeInterval_sBehavior = 0x40DC200000000000;
}

- (double)locationShareOneHourTimeInterval
{
  if (locationShareOneHourTimeInterval_once != -1)
    dispatch_once(&locationShareOneHourTimeInterval_once, &__block_literal_global_67_0);
  return *(double *)&locationShareOneHourTimeInterval_sBehavior;
}

void __48__CKUIBehavior_locationShareOneHourTimeInterval__block_invoke()
{
  locationShareOneHourTimeInterval_sBehavior = 0x40AC200000000000;
}

- (int64_t)locationShareEODHour
{
  if (locationShareEODHour_once != -1)
    dispatch_once(&locationShareEODHour_once, &__block_literal_global_68_0);
  if (locationShareEODHour_sBehavior)
    return 4;
  else
    return 0;
}

void __36__CKUIBehavior_locationShareEODHour__block_invoke()
{
  locationShareEODHour_sBehavior = 1;
}

- (double)locationValidInterval
{
  if (locationValidInterval_once != -1)
    dispatch_once(&locationValidInterval_once, &__block_literal_global_69_0);
  return *(double *)&locationValidInterval_sBehavior;
}

void __37__CKUIBehavior_locationValidInterval__block_invoke()
{
  locationValidInterval_sBehavior = 0x4072C00000000000;
}

- (double)raiseToTalkAutoSendMaxDuration
{
  if (raiseToTalkAutoSendMaxDuration_once != -1)
    dispatch_once(&raiseToTalkAutoSendMaxDuration_once, &__block_literal_global_70_0);
  return *(double *)&raiseToTalkAutoSendMaxDuration_sBehavior;
}

void __46__CKUIBehavior_raiseToTalkAutoSendMaxDuration__block_invoke()
{
  raiseToTalkAutoSendMaxDuration_sBehavior = 0x402E000000000000;
}

- (double)raiseToTalkErrorMaxDuration
{
  if (raiseToTalkErrorMaxDuration_once != -1)
    dispatch_once(&raiseToTalkErrorMaxDuration_once, &__block_literal_global_71_0);
  return *(double *)&raiseToTalkErrorMaxDuration_sBehavior;
}

void __43__CKUIBehavior_raiseToTalkErrorMaxDuration__block_invoke()
{
  raiseToTalkErrorMaxDuration_sBehavior = 0x3F9EB851EB851EB8;
}

- (BOOL)lowClearanceInLandscape
{
  if (lowClearanceInLandscape_once != -1)
    dispatch_once(&lowClearanceInLandscape_once, &__block_literal_global_74_0);
  return lowClearanceInLandscape_sBehavior;
}

void __39__CKUIBehavior_lowClearanceInLandscape__block_invoke()
{
  if (CKIsGeneralIdiom_onceToken != -1)
    dispatch_once(&CKIsGeneralIdiom_onceToken, &__block_literal_global_4566);
  lowClearanceInLandscape_sBehavior = CKIsGeneralIdiom_sGeneralIdiom ^ 1;
}

- (BOOL)presentsQuickLookController
{
  if (presentsQuickLookController_once != -1)
    dispatch_once(&presentsQuickLookController_once, &__block_literal_global_75_0);
  return presentsQuickLookController_sBehavior;
}

void __43__CKUIBehavior_presentsQuickLookController__block_invoke()
{
  presentsQuickLookController_sBehavior = 1;
}

- (BOOL)usesPopovers
{
  if (usesPopovers_once != -1)
    dispatch_once(&usesPopovers_once, &__block_literal_global_76_2);
  return 0;
}

- (BOOL)canPresentOverKeyboard
{
  if (canPresentOverKeyboard_once != -1)
    dispatch_once(&canPresentOverKeyboard_once, &__block_literal_global_77_0);
  return canPresentOverKeyboard_sBehavior;
}

uint64_t __38__CKUIBehavior_canPresentOverKeyboard__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMessagesTranscriptExtension();
  canPresentOverKeyboard_sBehavior = (_DWORD)result == 0;
  return result;
}

- (BOOL)fullScreenBalloonWantsWindowedPresentation
{
  if (fullScreenBalloonWantsWindowedPresentation_once != -1)
    dispatch_once(&fullScreenBalloonWantsWindowedPresentation_once, &__block_literal_global_78_0);
  return fullScreenBalloonWantsWindowedPresentation_sBehavior;
}

void __58__CKUIBehavior_fullScreenBalloonWantsWindowedPresentation__block_invoke()
{
  fullScreenBalloonWantsWindowedPresentation_sBehavior = 1;
}

- (BOOL)fullScreenBalloonForceWindowedPresentation
{
  if (fullScreenBalloonForceWindowedPresentation_once != -1)
    dispatch_once(&fullScreenBalloonForceWindowedPresentation_once, &__block_literal_global_79_0);
  return fullScreenBalloonForceWindowedPresentation_sBehavior;
}

void __58__CKUIBehavior_fullScreenBalloonForceWindowedPresentation__block_invoke()
{
  fullScreenBalloonForceWindowedPresentation_sBehavior = 1;
}

- (BOOL)canUseWindowedSendAnimation
{
  if (canUseWindowedSendAnimation_once != -1)
    dispatch_once(&canUseWindowedSendAnimation_once, &__block_literal_global_80_0);
  return canUseWindowedSendAnimation_sBehavior;
}

void __43__CKUIBehavior_canUseWindowedSendAnimation__block_invoke()
{
  id v0;

  if (CKIsRunningInMessagesTranscriptExtension())
  {
    canUseWindowedSendAnimation_sBehavior = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v0 = (id)objc_claimAutoreleasedReturnValue();
    canUseWindowedSendAnimation_sBehavior = objc_msgSend(v0, "isEntryViewInTranscriptEnabled") ^ 1;

  }
}

- (BOOL)shouldGrabBackgroundAssertion
{
  if (shouldGrabBackgroundAssertion_once != -1)
    dispatch_once(&shouldGrabBackgroundAssertion_once, &__block_literal_global_82_0);
  return shouldGrabBackgroundAssertion_sBehavior;
}

void __45__CKUIBehavior_shouldGrabBackgroundAssertion__block_invoke()
{
  shouldGrabBackgroundAssertion_sBehavior = 1;
}

- (BOOL)resetsIdleTimer
{
  if (resetsIdleTimer_once != -1)
    dispatch_once(&resetsIdleTimer_once, &__block_literal_global_84_1);
  return resetsIdleTimer_sBehavior;
}

void __31__CKUIBehavior_resetsIdleTimer__block_invoke()
{
  resetsIdleTimer_sBehavior = 1;
}

- (BOOL)promptsForReadReceiptsSetting
{
  if (promptsForReadReceiptsSetting_once != -1)
    dispatch_once(&promptsForReadReceiptsSetting_once, &__block_literal_global_85_0);
  return promptsForReadReceiptsSetting_sBehavior;
}

void __45__CKUIBehavior_promptsForReadReceiptsSetting__block_invoke()
{
  promptsForReadReceiptsSetting_sBehavior = 1;
}

- (BOOL)isSizeConstrained
{
  if (isSizeConstrained_once != -1)
    dispatch_once(&isSizeConstrained_once, &__block_literal_global_86);
  return 0;
}

- (BOOL)automaticallyShowsKeyboard
{
  if (automaticallyShowsKeyboard_once != -1)
    dispatch_once(&automaticallyShowsKeyboard_once, &__block_literal_global_88_0);
  return automaticallyShowsKeyboard_sBehavior;
}

void __42__CKUIBehavior_automaticallyShowsKeyboard__block_invoke()
{
  automaticallyShowsKeyboard_sBehavior = 1;
}

- (BOOL)showsSendAnimation
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  char v10;
  BOOL v12;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)showsSendAnimation_sContentSizeCategory_showsSendAnimation, (UIContentSizeCategory)v3)|| showsSendAnimation_sIsBoldTextEnabled_showsSendAnimation != IsBoldTextEnabled|| (*(double *)&showsSendAnimation_sTextFontSize_showsSendAnimation == v5? (v12 = *(double *)&showsSendAnimation_sCustomTextFontSize_showsSendAnimation == v6): (v12 = 0), !v12|| (objc_msgSend((id)showsSendAnimation_sCustomTextFontName_showsSendAnimation, "isEqualToString:", v9, *(double *)&showsSendAnimation_sTextFontSize_showsSendAnimation, *(double *)&showsSendAnimation_sCustomTextFontSize_showsSendAnimation) & 1) == 0))
  {
    showsSendAnimation_sBehavior = !-[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    objc_storeStrong((id *)&showsSendAnimation_sContentSizeCategory_showsSendAnimation, v3);
    showsSendAnimation_sIsBoldTextEnabled_showsSendAnimation = IsBoldTextEnabled;
    showsSendAnimation_sTextFontSize_showsSendAnimation = *(_QWORD *)&v5;
    showsSendAnimation_sCustomTextFontSize_showsSendAnimation = *(_QWORD *)&v6;
    objc_storeStrong((id *)&showsSendAnimation_sCustomTextFontName_showsSendAnimation, v8);
  }
  v10 = showsSendAnimation_sBehavior;

  return v10;
}

- (BOOL)showsCompositionPanel
{
  if (showsCompositionPanel_once != -1)
    dispatch_once(&showsCompositionPanel_once, &__block_literal_global_91_0);
  return showsCompositionPanel_sBehavior;
}

void __37__CKUIBehavior_showsCompositionPanel__block_invoke()
{
  showsCompositionPanel_sBehavior = 1;
}

- (BOOL)recordsRecentContact
{
  if (recordsRecentContact_once != -1)
    dispatch_once(&recordsRecentContact_once, &__block_literal_global_92_0);
  return recordsRecentContact_sBehavior;
}

void __36__CKUIBehavior_recordsRecentContact__block_invoke()
{
  recordsRecentContact_sBehavior = 1;
}

- (BOOL)presentForwardingUIModally
{
  if (presentForwardingUIModally_once != -1)
    dispatch_once(&presentForwardingUIModally_once, &__block_literal_global_93_0);
  return presentForwardingUIModally_sBehavior;
}

void __42__CKUIBehavior_presentForwardingUIModally__block_invoke()
{
  presentForwardingUIModally_sBehavior = 1;
}

- (BOOL)usesActionMenu
{
  if (usesActionMenu_once != -1)
    dispatch_once(&usesActionMenu_once, &__block_literal_global_94_0);
  return usesActionMenu_sBehavior;
}

uint64_t __30__CKUIBehavior_usesActionMenu__block_invoke()
{
  uint64_t result;
  BOOL v1;

  result = CKIsRunningInMessagesViewService();
  if ((_DWORD)result || (result = CKIsRunningInMessagesNotificationExtension(), (_DWORD)result))
  {
    v1 = 0;
  }
  else
  {
    result = CKIsRunningInMessagesTranscriptExtension();
    v1 = (_DWORD)result == 0;
  }
  usesActionMenu_sBehavior = v1;
  return result;
}

- (BOOL)joystickUsesWindow
{
  if (joystickUsesWindow_once != -1)
    dispatch_once(&joystickUsesWindow_once, &__block_literal_global_95_0);
  return joystickUsesWindow_sBehavior;
}

uint64_t __34__CKUIBehavior_joystickUsesWindow__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMessagesViewService();
  joystickUsesWindow_sBehavior = (_DWORD)result == 0;
  return result;
}

- (BOOL)isProximityMonitoringSupported
{
  if (isProximityMonitoringSupported_once != -1)
    dispatch_once(&isProximityMonitoringSupported_once, &__block_literal_global_96_0);
  return isProximityMonitoringSupported_sBehavior;
}

uint64_t __46__CKUIBehavior_isProximityMonitoringSupported__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  isProximityMonitoringSupported_sBehavior = result;
  return result;
}

- (BOOL)usesEntryView
{
  if (usesEntryView_once != -1)
    dispatch_once(&usesEntryView_once, &__block_literal_global_99_0);
  return usesEntryView_sBehavior;
}

void __29__CKUIBehavior_usesEntryView__block_invoke()
{
  usesEntryView_sBehavior = 1;
}

- (BOOL)usesNavigationBarControls
{
  if (usesNavigationBarControls_once != -1)
    dispatch_once(&usesNavigationBarControls_once, &__block_literal_global_100);
  return usesNavigationBarControls_sBehavior;
}

void __41__CKUIBehavior_usesNavigationBarControls__block_invoke()
{
  usesNavigationBarControls_sBehavior = 1;
}

- (BOOL)disableTranscriptOrb
{
  if (disableTranscriptOrb_once != -1)
    dispatch_once(&disableTranscriptOrb_once, &__block_literal_global_101_0);
  return disableTranscriptOrb_sBehavior;
}

void __36__CKUIBehavior_disableTranscriptOrb__block_invoke()
{
  disableTranscriptOrb_sBehavior = 1;
}

- (BOOL)supportsFoundInSuggestions
{
  if (supportsFoundInSuggestions_once != -1)
    dispatch_once(&supportsFoundInSuggestions_once, &__block_literal_global_102_0);
  return supportsFoundInSuggestions_sBehavior;
}

void __42__CKUIBehavior_supportsFoundInSuggestions__block_invoke()
{
  supportsFoundInSuggestions_sBehavior = 1;
}

- (double)maxNavigationBarHeightValue
{
  if (maxNavigationBarHeightValue_once != -1)
    dispatch_once(&maxNavigationBarHeightValue_once, &__block_literal_global_104_0);
  return *(double *)&maxNavigationBarHeightValue_sBehavior;
}

void __43__CKUIBehavior_maxNavigationBarHeightValue__block_invoke()
{
  maxNavigationBarHeightValue_sBehavior = 0x4050800000000000;
}

- (double)minNavigationBarHeightValue
{
  if (minNavigationBarHeightValue_once != -1)
    dispatch_once(&minNavigationBarHeightValue_once, &__block_literal_global_105);
  return *(double *)&minNavigationBarHeightValue_sBehavior;
}

void __43__CKUIBehavior_minNavigationBarHeightValue__block_invoke()
{
  minNavigationBarHeightValue_sBehavior = 0x4046000000000000;
}

- (unint64_t)browserViewControllerSheetDetentStyle
{
  return 0;
}

- (double)navigationBarTitleViewVerticalOffsetWantsMinimumSafeAreas:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  uint64_t v6;
  double result;
  int v8;
  _BOOL4 v9;

  v3 = a3;
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "userInterfaceIdiom");

  result = 0.0;
  if (!v6)
  {
    v8 = CKIsRunningInMessagesTranscriptExtension();
    result = 15.0;
    if (!v8)
    {
      result = 0.0;
      if (v3)
      {
        v9 = -[CKUIBehavior contactPhotosEnabled](self, "contactPhotosEnabled", 0.0);
        result = 0.0;
        if (v9)
          return 4.0;
      }
    }
  }
  return result;
}

- (double)navigationBarTitleViewHeightWithContactPhoto
{
  if (navigationBarTitleViewHeightWithContactPhoto_once != -1)
    dispatch_once(&navigationBarTitleViewHeightWithContactPhoto_once, &__block_literal_global_107_1);
  return *(double *)&navigationBarTitleViewHeightWithContactPhoto_sBehavior;
}

void __60__CKUIBehavior_navigationBarTitleViewHeightWithContactPhoto__block_invoke()
{
  navigationBarTitleViewHeightWithContactPhoto_sBehavior = 0x4053800000000000;
}

- (double)navigationBarBackButtonMargin
{
  if (navigationBarBackButtonMargin_once != -1)
    dispatch_once(&navigationBarBackButtonMargin_once, &__block_literal_global_108);
  return *(double *)&navigationBarBackButtonMargin_sBehavior;
}

void __45__CKUIBehavior_navigationBarBackButtonMargin__block_invoke()
{
  navigationBarBackButtonMargin_sBehavior = 0x4030000000000000;
}

- (double)navigationBarLeftItemVerticalCenterOffset
{
  if (navigationBarLeftItemVerticalCenterOffset_once != -1)
    dispatch_once(&navigationBarLeftItemVerticalCenterOffset_once, &__block_literal_global_109_0);
  return *(double *)&navigationBarLeftItemVerticalCenterOffset_sBehavior;
}

void __57__CKUIBehavior_navigationBarLeftItemVerticalCenterOffset__block_invoke()
{
  navigationBarLeftItemVerticalCenterOffset_sBehavior = 0x403C000000000000;
}

- (double)navigationBarHeaderButtonVerticalOffset
{
  if (navigationBarHeaderButtonVerticalOffset_once != -1)
    dispatch_once(&navigationBarHeaderButtonVerticalOffset_once, &__block_literal_global_110_0);
  return *(double *)&navigationBarHeaderButtonVerticalOffset_sBehavior;
}

void __55__CKUIBehavior_navigationBarHeaderButtonVerticalOffset__block_invoke()
{
  navigationBarHeaderButtonVerticalOffset_sBehavior = 0x4026000000000000;
}

- (double)transcriptHeaderChevronRotationAnimationSpeed
{
  if (transcriptHeaderChevronRotationAnimationSpeed_once != -1)
    dispatch_once(&transcriptHeaderChevronRotationAnimationSpeed_once, &__block_literal_global_111_0);
  return *(double *)&transcriptHeaderChevronRotationAnimationSpeed_sBehavior;
}

void __61__CKUIBehavior_transcriptHeaderChevronRotationAnimationSpeed__block_invoke()
{
  transcriptHeaderChevronRotationAnimationSpeed_sBehavior = 0x3FC999999999999ALL;
}

- (double)defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding
{
  if (defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding_once != -1)
    dispatch_once(&defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding_once, &__block_literal_global_112_0);
  return *(double *)&defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding_sBehavior;
}

void __79__CKUIBehavior_defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding__block_invoke()
{
  defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding_sBehavior = 0x4020000000000000;
}

- (double)maxNavigationBarHeightValueWantsMinimumSafeAreasLocationLabelPadding
{
  if (maxNavigationBarHeightValueWantsMinimumSafeAreasLocationLabelPadding_once != -1)
    dispatch_once(&maxNavigationBarHeightValueWantsMinimumSafeAreasLocationLabelPadding_once, &__block_literal_global_113_0);
  return *(double *)&maxNavigationBarHeightValueWantsMinimumSafeAreasLocationLabelPadding_sBehavior;
}

void __84__CKUIBehavior_maxNavigationBarHeightValueWantsMinimumSafeAreasLocationLabelPadding__block_invoke()
{
  maxNavigationBarHeightValueWantsMinimumSafeAreasLocationLabelPadding_sBehavior = 0x4024000000000000;
}

- (double)navBarTitleViewAXFontSizePadding
{
  if (navBarTitleViewAXFontSizePadding_once != -1)
    dispatch_once(&navBarTitleViewAXFontSizePadding_once, &__block_literal_global_114_0);
  return *(double *)&navBarTitleViewAXFontSizePadding_sBehavior;
}

void __48__CKUIBehavior_navBarTitleViewAXFontSizePadding__block_invoke()
{
  navBarTitleViewAXFontSizePadding_sBehavior = 0x4024000000000000;
}

- (double)defaultNavigationBarNoContactPhotoCollapsedHeightValue
{
  double v3;

  if (!-[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory"))
    return 44.0;
  -[CKUIBehavior defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding](self, "defaultNavigationBarNoContactPhotoCollapsedHeightValueAXPadding");
  return v3 + 44.0;
}

- (double)defaultNavigationBarHeightValueWantsMinimumSafeAreas:(BOOL)a3
{
  double v3;

  -[CKUIBehavior navigationBarTitleViewVerticalOffsetWantsMinimumSafeAreas:](self, "navigationBarTitleViewVerticalOffsetWantsMinimumSafeAreas:", a3);
  return v3 + 80.0;
}

- (double)maxNavigationBarCollapsedHeightValueForMinimumSafeArea
{
  if (maxNavigationBarCollapsedHeightValueForMinimumSafeArea_once != -1)
    dispatch_once(&maxNavigationBarCollapsedHeightValueForMinimumSafeArea_once, &__block_literal_global_115_1);
  return *(double *)&maxNavigationBarCollapsedHeightValueForMinimumSafeArea_sBehavior;
}

void __70__CKUIBehavior_maxNavigationBarCollapsedHeightValueForMinimumSafeArea__block_invoke()
{
  maxNavigationBarCollapsedHeightValueForMinimumSafeArea_sBehavior = 0x4056800000000000;
}

- (double)maxNavigationBarExpandedHeightValue
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __51__CKUIBehavior_maxNavigationBarExpandedHeightValue__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (maxNavigationBarExpandedHeightValue_once != -1)
    dispatch_once(&maxNavigationBarExpandedHeightValue_once, block);
  return *(double *)&maxNavigationBarExpandedHeightValue_sBehavior;
}

void __51__CKUIBehavior_maxNavigationBarExpandedHeightValue__block_invoke(uint64_t a1)
{
  void *v2;
  double v3;
  void *v4;
  uint64_t v5;
  double v6;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "isAccessibilityPreferredContentSizeCategory"))
    v3 = 132.0;
  else
    v3 = 128.0;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (!v5 && CKIsRunningInMessagesTranscriptExtension())
  {
    objc_msgSend(*(id *)(a1 + 32), "navigationBarTitleViewVerticalOffsetWantsMinimumSafeAreas:", 0);
    v3 = v3 + v6;
  }
  maxNavigationBarExpandedHeightValue_sBehavior = *(_QWORD *)&v3;
}

- (double)disabledNavigationButtonWidth
{
  if (disabledNavigationButtonWidth_once != -1)
    dispatch_once(&disabledNavigationButtonWidth_once, &__block_literal_global_117);
  return *(double *)&disabledNavigationButtonWidth_sBehavior;
}

void __45__CKUIBehavior_disabledNavigationButtonWidth__block_invoke()
{
  disabledNavigationButtonWidth_sBehavior = 0x4036000000000000;
}

- (double)disabledNavigationButtonStrokeWidth
{
  if (disabledNavigationButtonStrokeWidth_once != -1)
    dispatch_once(&disabledNavigationButtonStrokeWidth_once, &__block_literal_global_118);
  return *(double *)&disabledNavigationButtonStrokeWidth_sBehavior;
}

void __51__CKUIBehavior_disabledNavigationButtonStrokeWidth__block_invoke()
{
  disabledNavigationButtonStrokeWidth_sBehavior = 0x3FF0000000000000;
}

- (id)disabledNavigationButtonStrokeColor
{
  if (disabledNavigationButtonStrokeColor_once != -1)
    dispatch_once(&disabledNavigationButtonStrokeColor_once, &__block_literal_global_119_0);
  return (id)disabledNavigationButtonStrokeColor_sBehavior;
}

void __51__CKUIBehavior_disabledNavigationButtonStrokeColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.898039216, 0.898039216, 0.917647059, 1.0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)disabledNavigationButtonStrokeColor_sBehavior;
  disabledNavigationButtonStrokeColor_sBehavior = v0;

}

- (double)navBarButtonSymbolImageFontSize
{
  if (navBarButtonSymbolImageFontSize_once != -1)
    dispatch_once(&navBarButtonSymbolImageFontSize_once, &__block_literal_global_121_1);
  return *(double *)&navBarButtonSymbolImageFontSize_sBehavior;
}

void __47__CKUIBehavior_navBarButtonSymbolImageFontSize__block_invoke()
{
  navBarButtonSymbolImageFontSize_sBehavior = 0x4031000000000000;
}

- (NSString)conversationListOptionsButtonImageName
{
  if (conversationListOptionsButtonImageName_once != -1)
    dispatch_once(&conversationListOptionsButtonImageName_once, &__block_literal_global_122);
  return (NSString *)(id)conversationListOptionsButtonImageName_sBehavior;
}

void __54__CKUIBehavior_conversationListOptionsButtonImageName__block_invoke()
{
  void *v0;

  v0 = (void *)conversationListOptionsButtonImageName_sBehavior;
  conversationListOptionsButtonImageName_sBehavior = (uint64_t)CFSTR("ellipsis.circle");

}

- (double)navbarButtonImagePointSize
{
  if (navbarButtonImagePointSize_once != -1)
    dispatch_once(&navbarButtonImagePointSize_once, &__block_literal_global_125);
  return *(double *)&navbarButtonImagePointSize_sBehavior;
}

void __42__CKUIBehavior_navbarButtonImagePointSize__block_invoke()
{
  navbarButtonImagePointSize_sBehavior = 0x403E000000000000;
}

- (UIImage)enabledFacetimeAudioImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __41__CKUIBehavior_enabledFacetimeAudioImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (enabledFacetimeAudioImage_once != -1)
    dispatch_once(&enabledFacetimeAudioImage_once, block);
  return (UIImage *)(id)enabledFacetimeAudioImage_sBehavior;
}

void __41__CKUIBehavior_enabledFacetimeAudioImage__block_invoke(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "navbarButtonImagePointSize");
  objc_msgSend(v1, "imageNamed:pointSize:insets:", CFSTR("phone.circle.fill"));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)enabledFacetimeAudioImage_sBehavior;
  enabledFacetimeAudioImage_sBehavior = v2;

}

- (UIImage)enabledFacetimeAudioImagePill
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __45__CKUIBehavior_enabledFacetimeAudioImagePill__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (enabledFacetimeAudioImagePill_once != -1)
    dispatch_once(&enabledFacetimeAudioImagePill_once, block);
  return (UIImage *)(id)enabledFacetimeAudioImagePill_sBehavior;
}

void __45__CKUIBehavior_enabledFacetimeAudioImagePill__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "imageNamed:pointSize:insets:", CFSTR("phone.fill"), 18.0, *MEMORY[0x1E0CEB4B0], *(double *)(MEMORY[0x1E0CEB4B0] + 8), *(double *)(MEMORY[0x1E0CEB4B0] + 16), *(double *)(MEMORY[0x1E0CEB4B0] + 24));
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)enabledFacetimeAudioImagePill_sBehavior;
  enabledFacetimeAudioImagePill_sBehavior = v1;

}

- (UIImage)enabledFacetimeVideoImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __41__CKUIBehavior_enabledFacetimeVideoImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (enabledFacetimeVideoImage_once != -1)
    dispatch_once(&enabledFacetimeVideoImage_once, block);
  return (UIImage *)(id)enabledFacetimeVideoImage_sBehavior;
}

void __41__CKUIBehavior_enabledFacetimeVideoImage__block_invoke(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "navbarButtonImagePointSize");
  objc_msgSend(v1, "imageNamed:pointSize:insets:", CFSTR("video.circle.fill"));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)enabledFacetimeVideoImage_sBehavior;
  enabledFacetimeVideoImage_sBehavior = v2;

}

- (UIImage)enabledFacetimeVideoImagePill
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __45__CKUIBehavior_enabledFacetimeVideoImagePill__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (enabledFacetimeVideoImagePill_once != -1)
    dispatch_once(&enabledFacetimeVideoImagePill_once, block);
  return (UIImage *)(id)enabledFacetimeVideoImagePill_sBehavior;
}

void __45__CKUIBehavior_enabledFacetimeVideoImagePill__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "imageNamed:pointSize:insets:", CFSTR("video.fill"), 18.0, *MEMORY[0x1E0CEB4B0], *(double *)(MEMORY[0x1E0CEB4B0] + 8), *(double *)(MEMORY[0x1E0CEB4B0] + 16), *(double *)(MEMORY[0x1E0CEB4B0] + 24));
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)enabledFacetimeVideoImagePill_sBehavior;
  enabledFacetimeVideoImagePill_sBehavior = v1;

}

- (UIImage)enabledExpanseImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __35__CKUIBehavior_enabledExpanseImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (enabledExpanseImage_once != -1)
    dispatch_once(&enabledExpanseImage_once, block);
  return (UIImage *)(id)enabledExpanseImage_sBehavior;
}

void __35__CKUIBehavior_enabledExpanseImage__block_invoke(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "navbarButtonImagePointSize");
  objc_msgSend(v1, "imageNamed:pointSize:insets:", CFSTR("person.2.circle.fill"));
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)enabledExpanseImage_sBehavior;
  enabledExpanseImage_sBehavior = v2;

}

- (UIImage)enabledExpanseImagePill
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_enabledExpanseImagePill__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (enabledExpanseImagePill_once != -1)
    dispatch_once(&enabledExpanseImagePill_once, block);
  return (UIImage *)(id)enabledExpanseImagePill_sBehavior;
}

void __39__CKUIBehavior_enabledExpanseImagePill__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "imageNamed:pointSize:insets:", CFSTR("shareplay"), 18.0, *MEMORY[0x1E0CEB4B0], *(double *)(MEMORY[0x1E0CEB4B0] + 8), *(double *)(MEMORY[0x1E0CEB4B0] + 16), *(double *)(MEMORY[0x1E0CEB4B0] + 24));
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)enabledExpanseImagePill_sBehavior;
  enabledExpanseImagePill_sBehavior = v1;

}

- (NSString)navBarInfoImageName
{
  if (navBarInfoImageName_once != -1)
    dispatch_once(&navBarInfoImageName_once, &__block_literal_global_138_1);
  return (NSString *)(id)navBarInfoImageName_sBehavior;
}

void __35__CKUIBehavior_navBarInfoImageName__block_invoke()
{
  void *v0;

  v0 = (void *)navBarInfoImageName_sBehavior;
  navBarInfoImageName_sBehavior = (uint64_t)CFSTR("info.circle.fill");

}

- (id)navBarExpanseImageName
{
  if (navBarExpanseImageName_once != -1)
    dispatch_once(&navBarExpanseImageName_once, &__block_literal_global_141);
  return (id)navBarExpanseImageName_sBehavior;
}

void __38__CKUIBehavior_navBarExpanseImageName__block_invoke()
{
  void *v0;

  v0 = (void *)navBarExpanseImageName_sBehavior;
  navBarExpanseImageName_sBehavior = (uint64_t)CFSTR("person.2.circle.fill");

}

- (UIImage)navBarInfoImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __31__CKUIBehavior_navBarInfoImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (navBarInfoImage_once != -1)
    dispatch_once(&navBarInfoImage_once, block);
  return (UIImage *)(id)navBarInfoImage_sBehavior;
}

void __31__CKUIBehavior_navBarInfoImage__block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(v2, "navBarInfoImageName");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "navbarButtonImagePointSize");
  objc_msgSend(v2, "imageNamed:pointSize:insets:", v5);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)navBarInfoImage_sBehavior;
  navBarInfoImage_sBehavior = v3;

}

- (UIImage)navbarJoinPillVideoImage
{
  if (navbarJoinPillVideoImage_once != -1)
    dispatch_once(&navbarJoinPillVideoImage_once, &__block_literal_global_142_0);
  return (UIImage *)(id)navbarJoinPillVideoImage_sBehavior;
}

void __40__CKUIBehavior_navbarJoinPillVideoImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:weight:", *MEMORY[0x1E0CEB588], *MEMORY[0x1E0DC1420]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:scale:", v0, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("video.fill"), v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)navbarJoinPillVideoImage_sBehavior;
  navbarJoinPillVideoImage_sBehavior = v3;

}

- (UIImage)navbarJoinPillAudioImage
{
  if (navbarJoinPillAudioImage_once != -1)
    dispatch_once(&navbarJoinPillAudioImage_once, &__block_literal_global_146);
  return (UIImage *)(id)navbarJoinPillAudioImage_sBehavior;
}

void __40__CKUIBehavior_navbarJoinPillAudioImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:weight:", *MEMORY[0x1E0CEB588], *MEMORY[0x1E0DC1420]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:scale:", v0, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("phone.fill"), v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)navbarJoinPillAudioImage_sBehavior;
  navbarJoinPillAudioImage_sBehavior = v3;

}

- (UIImage)navbarJoinPillSharePlayImage
{
  if (navbarJoinPillSharePlayImage_once != -1)
    dispatch_once(&navbarJoinPillSharePlayImage_once, &__block_literal_global_147);
  return (UIImage *)(id)navbarJoinPillSharePlayImage_sBehavior;
}

void __44__CKUIBehavior_navbarJoinPillSharePlayImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:weight:", *MEMORY[0x1E0CEB588], *MEMORY[0x1E0DC1420]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:scale:", v0, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("shareplay"), v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)navbarJoinPillSharePlayImage_sBehavior;
  navbarJoinPillSharePlayImage_sBehavior = v3;

}

- (id)imageNamed:(id)a3 pointSize:(double)a4 insets:(UIEdgeInsets)a5
{
  double right;
  double bottom;
  double left;
  double top;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  right = a5.right;
  bottom = a5.bottom;
  left = a5.left;
  top = a5.top;
  v10 = (void *)MEMORY[0x1E0CEA650];
  v11 = a3;
  objc_msgSend(v10, "configurationWithPointSize:", a4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "imageWithSymbolConfiguration:", v12);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "imageWithContentInsets:", top, left, bottom, right);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

- (id)imageNamed:(id)a3 pointSize:(double)a4 insets:(UIEdgeInsets)a5 color:(id)a6
{
  double right;
  double bottom;
  double left;
  double top;
  id v13;
  void *v14;
  void *v15;
  void *v16;

  right = a5.right;
  bottom = a5.bottom;
  left = a5.left;
  top = a5.top;
  v13 = a6;
  -[CKUIBehavior imageNamed:pointSize:insets:](self, "imageNamed:pointSize:insets:", a3, a4, top, left, bottom, right);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "imageWithRenderingMode:", 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "ckImageWithTintColor:", v13);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

- (UIImage)disabledFacetimeAudioImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __42__CKUIBehavior_disabledFacetimeAudioImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (disabledFacetimeAudioImage_once != -1)
    dispatch_once(&disabledFacetimeAudioImage_once, block);
  return (UIImage *)(id)disabledFacetimeAudioImage_sBehavior;
}

void __42__CKUIBehavior_disabledFacetimeAudioImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "navbarButtonImagePointSize");
  objc_msgSend(v1, "imageNamed:pointSize:insets:", CFSTR("phone.circle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "systemMidGrayColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_flatImageWithColor:", v4);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)disabledFacetimeAudioImage_sBehavior;
  disabledFacetimeAudioImage_sBehavior = v5;

}

- (UIImage)disabledFacetimeVideoImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __42__CKUIBehavior_disabledFacetimeVideoImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (disabledFacetimeVideoImage_once != -1)
    dispatch_once(&disabledFacetimeVideoImage_once, block);
  return (UIImage *)(id)disabledFacetimeVideoImage_sBehavior;
}

void __42__CKUIBehavior_disabledFacetimeVideoImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "navbarButtonImagePointSize");
  objc_msgSend(v1, "imageNamed:pointSize:insets:", CFSTR("video.circle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "systemMidGrayColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_flatImageWithColor:", v4);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)disabledFacetimeVideoImage_sBehavior;
  disabledFacetimeVideoImage_sBehavior = v5;

}

- (BOOL)_isVerticallyCompact
{
  void *v2;
  BOOL v3;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bounds");
  v3 = _UIUserInterfaceSizeClassForHeight() == 1;

  return v3;
}

- (double)navigationBarDefaultHeight
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double result;

  if (-[CKUIBehavior contactPhotosEnabled](self, "contactPhotosEnabled"))
  {
    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "_referenceBounds");
    if (v4 <= 320.0
      || -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory")|| -[CKUIBehavior _isVerticallyCompact](self, "_isVerticallyCompact"))
    {
      -[CKUIBehavior minNavigationBarHeightValue](self, "minNavigationBarHeightValue");
    }
    else
    {
      -[CKUIBehavior maxNavigationBarHeightValue](self, "maxNavigationBarHeightValue");
    }
    v6 = v5;

    return v6;
  }
  else
  {
    -[CKUIBehavior minNavigationBarHeightValue](self, "minNavigationBarHeightValue");
  }
  return result;
}

+ (id)orderedContentSizeCategories
{
  if (orderedContentSizeCategories_onceToken != -1)
    dispatch_once(&orderedContentSizeCategories_onceToken, &__block_literal_global_153_0);
  return (id)orderedContentSizeCategories__contentSizeCategories;
}

void __44__CKUIBehavior_orderedContentSizeCategories__block_invoke()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[13];

  v8[12] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0CEB438];
  v8[0] = *MEMORY[0x1E0CEB410];
  v8[1] = v0;
  v1 = *MEMORY[0x1E0CEB420];
  v8[2] = *MEMORY[0x1E0CEB428];
  v8[3] = v1;
  v2 = *MEMORY[0x1E0CEB400];
  v8[4] = *MEMORY[0x1E0CEB408];
  v8[5] = v2;
  v3 = *MEMORY[0x1E0CEB3E0];
  v8[6] = *MEMORY[0x1E0CEB3F8];
  v8[7] = v3;
  v4 = *MEMORY[0x1E0CEB3D0];
  v8[8] = *MEMORY[0x1E0CEB3D8];
  v8[9] = v4;
  v5 = *MEMORY[0x1E0CEB3C0];
  v8[10] = *MEMORY[0x1E0CEB3C8];
  v8[11] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 12);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)orderedContentSizeCategories__contentSizeCategories;
  orderedContentSizeCategories__contentSizeCategories = v6;

}

+ (BOOL)isPreferredContentSizeCategoryGreaterThanOrEqualTo:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a3;
  +[CKUIBehavior orderedContentSizeCategories](CKUIBehavior, "orderedContentSizeCategories");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  CKPreferredContentSizeCategory();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "indexOfObject:", v5);
  v7 = objc_msgSend(v4, "indexOfObject:", v3);

  return v6 >= v7;
}

+ (id)fontWithStyle:(id)a3 adjustedForMaxSizeCategory:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;

  v6 = a4;
  objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  CKPreferredContentSizeCategory();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "orderedContentSizeCategories");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "indexOfObject:", v8);
  objc_msgSend(a1, "orderedContentSizeCategories");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "indexOfObject:", v6);

  if (v10 > v12)
  {
    objc_msgSend(MEMORY[0x1E0CEAB40], "traitCollectionWithPreferredContentSizeCategory:", v6);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v13);
    v14 = objc_claimAutoreleasedReturnValue();

    v7 = (void *)v14;
  }

  return v7;
}

+ (id)font:(id)a3 adjustedForMaxSizeCategory:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;

  v6 = a3;
  v7 = a4;
  CKPreferredContentSizeCategory();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "orderedContentSizeCategories");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "indexOfObject:", v8);
  objc_msgSend(a1, "orderedContentSizeCategories");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "indexOfObject:", v7);

  if (v10 > v12)
  {
    objc_msgSend(MEMORY[0x1E0CEAB40], "traitCollectionWithPreferredContentSizeCategory:", v7);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v13);
    v14 = objc_claimAutoreleasedReturnValue();

    v6 = (id)v14;
  }

  return v6;
}

- (double)transcriptHeaderViewMaxRows
{
  if (transcriptHeaderViewMaxRows_once != -1)
    dispatch_once(&transcriptHeaderViewMaxRows_once, &__block_literal_global_156_0);
  return *(double *)&transcriptHeaderViewMaxRows_sBehavior;
}

void __43__CKUIBehavior_transcriptHeaderViewMaxRows__block_invoke()
{
  transcriptHeaderViewMaxRows_sBehavior = 0x4012000000000000;
}

- (unint64_t)supportedInterfaceOrientations
{
  if (supportedInterfaceOrientations_once != -1)
    dispatch_once(&supportedInterfaceOrientations_once, &__block_literal_global_157_0);
  if (supportedInterfaceOrientations_sBehavior)
    return 26;
  else
    return 0;
}

void __46__CKUIBehavior_supportedInterfaceOrientations__block_invoke()
{
  supportedInterfaceOrientations_sBehavior = 1;
}

- (unint64_t)messageCountToLoadForPinnedConversationsIfNecessary
{
  if (messageCountToLoadForPinnedConversationsIfNecessary_once != -1)
    dispatch_once(&messageCountToLoadForPinnedConversationsIfNecessary_once, &__block_literal_global_158_0);
  if (messageCountToLoadForPinnedConversationsIfNecessary_sBehavior)
    return 10;
  else
    return 0;
}

void __67__CKUIBehavior_messageCountToLoadForPinnedConversationsIfNecessary__block_invoke()
{
  messageCountToLoadForPinnedConversationsIfNecessary_sBehavior = 1;
}

- (BOOL)shouldSizeInitialViewingMessageCount
{
  if (shouldSizeInitialViewingMessageCount_once != -1)
    dispatch_once(&shouldSizeInitialViewingMessageCount_once, &__block_literal_global_165_0);
  return 0;
}

- (unint64_t)defaultConversationLoadMoreCount
{
  if (defaultConversationLoadMoreCount_once != -1)
    dispatch_once(&defaultConversationLoadMoreCount_once, &__block_literal_global_166_0);
  if (defaultConversationLoadMoreCount_sBehavior)
    return 50;
  else
    return 0;
}

void __48__CKUIBehavior_defaultConversationLoadMoreCount__block_invoke()
{
  defaultConversationLoadMoreCount_sBehavior = 1;
}

- (unint64_t)minBalloonsForTranscriptHeight
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bounds");
  v6 = fmax(v4, v5);

  v7 = v6 + -84.0;
  -[CKUIBehavior topTranscriptSpace](self, "topTranscriptSpace");
  v9 = v8;
  -[CKUIBehavior balloonMaskSizeWithTailShape:isMultiline:](self, "balloonMaskSizeWithTailShape:isMultiline:", 0, 0);
  v11 = v10;
  -[CKUIBehavior balloonBalloonTranscriptSpace:](self, "balloonBalloonTranscriptSpace:", 2);
  v13 = v12;
  -[CKUIBehavior bottomTranscriptSpace](self, "bottomTranscriptSpace");
  return vcvtpd_u64_f64((v7 - (v9 + v14 - v13)) / (v11 + v13));
}

- (unint64_t)defaultConversationSummaryMessageCount
{
  if (defaultConversationSummaryMessageCount_once != -1)
    dispatch_once(&defaultConversationSummaryMessageCount_once, &__block_literal_global_167_1);
  return defaultConversationSummaryMessageCount_sBehavior;
}

void __54__CKUIBehavior_defaultConversationSummaryMessageCount__block_invoke()
{
  defaultConversationSummaryMessageCount_sBehavior = 1;
}

- (unint64_t)initialConversationSizingMessageCount
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __53__CKUIBehavior_initialConversationSizingMessageCount__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (initialConversationSizingMessageCount_once != -1)
    dispatch_once(&initialConversationSizingMessageCount_once, block);
  return initialConversationSizingMessageCount_sBehavior;
}

uint64_t __53__CKUIBehavior_initialConversationSizingMessageCount__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "minBalloonsForTranscriptHeight");
  initialConversationSizingMessageCount_sBehavior = result;
  return result;
}

- (unint64_t)conversationCacheSize
{
  if (conversationCacheSize_once != -1)
    dispatch_once(&conversationCacheSize_once, &__block_literal_global_168_0);
  return conversationCacheSize_sBehavior;
}

void __37__CKUIBehavior_conversationCacheSize__block_invoke()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "_graphicsQuality");

  v2 = 8;
  if (v1 == 10)
    v2 = 4;
  conversationCacheSize_sBehavior = v2;
}

- (unint64_t)commonRepliesLoadLimit
{
  if (commonRepliesLoadLimit_once != -1)
    dispatch_once(&commonRepliesLoadLimit_once, &__block_literal_global_169_0);
  if (commonRepliesLoadLimit_sBehavior)
    return 3;
  else
    return 0;
}

void __38__CKUIBehavior_commonRepliesLoadLimit__block_invoke()
{
  commonRepliesLoadLimit_sBehavior = 1;
}

- (NSDateFormatter)timestampDateFormatter
{
  return (NSDateFormatter *)+[CKDateUtilities timestampDateFormatter](CKDateUtilities, "timestampDateFormatter");
}

- (NSDateFormatter)locationRelativeDateFormatter
{
  if (locationRelativeDateFormatter_once != -1)
    dispatch_once(&locationRelativeDateFormatter_once, &__block_literal_global_171_0);
  return (NSDateFormatter *)(id)locationRelativeDateFormatter_sBehavior;
}

void __45__CKUIBehavior_locationRelativeDateFormatter__block_invoke()
{
  id v0;
  void *v1;
  void *v2;

  v0 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  objc_msgSend(v0, "setTimeStyle:", 0);
  objc_msgSend(v0, "setDateStyle:", 1);
  objc_msgSend(MEMORY[0x1E0C99DC8], "__ck_currentLocale");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setLocale:", v1);

  v2 = (void *)locationRelativeDateFormatter_sBehavior;
  locationRelativeDateFormatter_sBehavior = (uint64_t)v0;

}

- (BOOL)canAccessContacts
{
  if (canAccessContacts_once != -1)
    dispatch_once(&canAccessContacts_once, &__block_literal_global_174_0);
  return canAccessContacts_sBehavior;
}

uint64_t __33__CKUIBehavior_canAccessContacts__block_invoke()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0C97298], "authorizationStatusForEntityType:", 0);
  canAccessContacts_sBehavior = result == 3;
  return result;
}

- (BOOL)canAccessPhotos
{
  if (canAccessPhotos_once != -1)
    dispatch_once(&canAccessPhotos_once, &__block_literal_global_176_0);
  return canAccessPhotos_sBehavior;
}

uint64_t __31__CKUIBehavior_canAccessPhotos__block_invoke()
{
  void *v0;
  uint64_t result;

  v0 = (void *)sSharedBehaviors_block_invoke___ALAssetsLibraryClass;
  if (!sSharedBehaviors_block_invoke___ALAssetsLibraryClass)
  {
    v0 = (void *)MEMORY[0x193FF3C18](CFSTR("ALAssetsLibrary"), CFSTR("AssetsLibrary"));
    sSharedBehaviors_block_invoke___ALAssetsLibraryClass = (uint64_t)v0;
  }
  result = objc_msgSend(v0, "authorizationStatus");
  canAccessPhotos_sBehavior = result == 3;
  return result;
}

- (double)presentationControllerWindowLevel
{
  if (presentationControllerWindowLevel_once != -1)
    dispatch_once(&presentationControllerWindowLevel_once, &__block_literal_global_181);
  return *(double *)&presentationControllerWindowLevel_sBehavior;
}

double __49__CKUIBehavior_presentationControllerWindowLevel__block_invoke()
{
  double result;

  result = *MEMORY[0x1E0CEBB18] + 2.0;
  *(double *)&presentationControllerWindowLevel_sBehavior = result;
  return result;
}

- (double)videoControllerWindowLevel
{
  if (videoControllerWindowLevel_once != -1)
    dispatch_once(&videoControllerWindowLevel_once, &__block_literal_global_182);
  return *(double *)&videoControllerWindowLevel_sBehavior;
}

double __42__CKUIBehavior_videoControllerWindowLevel__block_invoke()
{
  double result;

  result = *MEMORY[0x1E0CEBB18] + 2.0;
  *(double *)&videoControllerWindowLevel_sBehavior = result;
  return result;
}

- (double)actionMenuWindowLevel
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_actionMenuWindowLevel__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (actionMenuWindowLevel_once != -1)
    dispatch_once(&actionMenuWindowLevel_once, block);
  return *(double *)&actionMenuWindowLevel_sBehavior;
}

double __37__CKUIBehavior_actionMenuWindowLevel__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "videoControllerWindowLevel");
  result = v1 + 1.0;
  actionMenuWindowLevel_sBehavior = *(_QWORD *)&result;
  return result;
}

- (BOOL)phoneIsAllowlisted
{
  return 1;
}

- (BOOL)faceTimeVideoIsAllowlisted
{
  return 1;
}

- (BOOL)faceTimeAudioIsAllowlisted
{
  return 1;
}

- (BOOL)mailIsAllowlisted
{
  return 1;
}

- (BOOL)cameraIsAllowlisted
{
  return objc_msgSend(MEMORY[0x1E0CEA648], "isSourceTypeAvailable:", 1);
}

- (BOOL)photosIsAllowlisted
{
  if ((objc_msgSend(MEMORY[0x1E0CEA648], "isSourceTypeAvailable:", 0) & 1) != 0)
    return 1;
  else
    return objc_msgSend(MEMORY[0x1E0CEA648], "isSourceTypeAvailable:", 2);
}

- (unint64_t)maxNumLiveBrowserViewsToKeepInViewHierarchy
{
  if (maxNumLiveBrowserViewsToKeepInViewHierarchy_once != -1)
    dispatch_once(&maxNumLiveBrowserViewsToKeepInViewHierarchy_once, &__block_literal_global_187);
  return maxNumLiveBrowserViewsToKeepInViewHierarchy_sBehavior;
}

void __59__CKUIBehavior_maxNumLiveBrowserViewsToKeepInViewHierarchy__block_invoke()
{
  maxNumLiveBrowserViewsToKeepInViewHierarchy_sBehavior = 1;
}

- (unint64_t)maxNumberOfItemsPerAppDrawerPage
{
  if (maxNumberOfItemsPerAppDrawerPage_once != -1)
    dispatch_once(&maxNumberOfItemsPerAppDrawerPage_once, &__block_literal_global_188);
  if (maxNumberOfItemsPerAppDrawerPage_sBehavior)
    return 12;
  else
    return 0;
}

void __48__CKUIBehavior_maxNumberOfItemsPerAppDrawerPage__block_invoke()
{
  maxNumberOfItemsPerAppDrawerPage_sBehavior = 1;
}

- (CGSize)iMessageAppIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (iMessageAppIconSize_once != -1)
    dispatch_once(&iMessageAppIconSize_once, &__block_literal_global_190_0);
  v2 = *(double *)&iMessageAppIconSize_sBehavior_0;
  v3 = *(double *)&iMessageAppIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __35__CKUIBehavior_iMessageAppIconSize__block_invoke()
{
  iMessageAppIconSize_sBehavior_0 = 0x4040000000000000;
  iMessageAppIconSize_sBehavior_1 = 0x4038000000000000;
}

- (BOOL)showMMSSetup
{
  if (showMMSSetup_once != -1)
    dispatch_once(&showMMSSetup_once, &__block_literal_global_191);
  return showMMSSetup_sBehavior;
}

void __28__CKUIBehavior_showMMSSetup__block_invoke()
{
  showMMSSetup_sBehavior = 1;
}

- (double)maxTranscriptPortraitHeight
{
  if (maxTranscriptPortraitHeight_once != -1)
    dispatch_once(&maxTranscriptPortraitHeight_once, &__block_literal_global_193_0);
  return *(double *)&maxTranscriptPortraitHeight_sBehavior;
}

void __43__CKUIBehavior_maxTranscriptPortraitHeight__block_invoke()
{
  void *v0;
  double v1;
  double v2;
  void *v3;
  uint64_t v4;
  double v5;
  double v6;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_referenceBounds");
  v2 = v1;
  if (CKIsGeneralIdiom_onceToken != -1)
    dispatch_once(&CKIsGeneralIdiom_onceToken, &__block_literal_global_4566);
  if (CKIsGeneralIdiom_sGeneralIdiom)
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "userInterfaceIdiom");

    v5 = 0.0;
    if ((v4 & 0xFFFFFFFFFFFFFFFBLL) == 1)
      v5 = 20.0;
  }
  else
  {
    v5 = 20.0;
  }
  v6 = v2 * 0.5 - v5;

  maxTranscriptPortraitHeight_sBehavior = *(_QWORD *)&v6;
}

- (UIEdgeInsets)landscapeKeyboardInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (landscapeKeyboardInsets_once != -1)
    dispatch_once(&landscapeKeyboardInsets_once, &__block_literal_global_194_0);
  v2 = *(double *)&landscapeKeyboardInsets_sBehavior_0;
  v3 = *(double *)&landscapeKeyboardInsets_sBehavior_1;
  v4 = *(double *)&landscapeKeyboardInsets_sBehavior_2;
  v5 = *(double *)&landscapeKeyboardInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __39__CKUIBehavior_landscapeKeyboardInsets__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;

  if (CKIsRunningInMessagesNotificationExtension()
    || (objc_msgSend(MEMORY[0x1E0CEAC18], "keyWindow"),
        v0 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v0, "traitCollection"),
        v1 = (void *)objc_claimAutoreleasedReturnValue(),
        v2 = objc_msgSend(v1, "horizontalSizeClass"),
        v1,
        v0,
        v2 != 2))
  {
    v12 = (void *)MEMORY[0x1E0CEA6E8];
    objc_msgSend(MEMORY[0x1E0CEA6F8], "sharedInputModeController");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "currentInputMode");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "deviceSpecificPaddingForInterfaceOrientation:inputMode:", 4, v14);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "entryViewHorizontalCoverInsets");
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    v5 = v16 - v25;
    v7 = v18 - v27;
    v9 = v20 - v29;
    v11 = v22 - v31;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEAC18], "keyWindow");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "safeAreaInsets");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

  }
  landscapeKeyboardInsets_sBehavior_0 = *(_QWORD *)&v5;
  landscapeKeyboardInsets_sBehavior_1 = *(_QWORD *)&v7;
  landscapeKeyboardInsets_sBehavior_2 = *(_QWORD *)&v9;
  landscapeKeyboardInsets_sBehavior_3 = *(_QWORD *)&v11;
}

- (double)largeTextTopConversationListSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)largeTextTopConversationListSpace_sContentSizeCategory_largeTextTopConversationListSpace, (UIContentSizeCategory)v3)|| largeTextTopConversationListSpace_sIsBoldTextEnabled_largeTextTopConversationListSpace != IsBoldTextEnabled|| (*(double *)&largeTextTopConversationListSpace_sTextFontSize_largeTextTopConversationListSpace == v5? (v16 = *(double *)&largeTextTopConversationListSpace_sCustomTextFontSize_largeTextTopConversationListSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)largeTextTopConversationListSpace_sCustomTextFontName_largeTextTopConversationListSpace, "isEqualToString:", v9, *(double *)&largeTextTopConversationListSpace_sTextFontSize_largeTextTopConversationListSpace, *(double *)&largeTextTopConversationListSpace_sCustomTextFontSize_largeTextTopConversationListSpace) & 1) == 0))
  {
    -[CKUIBehavior conversationListSenderFont](self, "conversationListSenderFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "pointSize");
    v12 = v11 * 0.226415094;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&largeTextTopConversationListSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&largeTextTopConversationListSpace_sContentSizeCategory_largeTextTopConversationListSpace, v3);
    largeTextTopConversationListSpace_sIsBoldTextEnabled_largeTextTopConversationListSpace = IsBoldTextEnabled;
    largeTextTopConversationListSpace_sTextFontSize_largeTextTopConversationListSpace = *(_QWORD *)&v5;
    largeTextTopConversationListSpace_sCustomTextFontSize_largeTextTopConversationListSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&largeTextTopConversationListSpace_sCustomTextFontName_largeTextTopConversationListSpace, v8);
  }
  v14 = *(double *)&largeTextTopConversationListSpace_sBehavior;

  return v14;
}

- (double)accessibilityBottomConversationListSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)accessibilityBottomConversationListSpace_sContentSizeCategory_accessibilityBottomConversationListSpace, (UIContentSizeCategory)v3)|| accessibilityBottomConversationListSpace_sIsBoldTextEnabled_accessibilityBottomConversationListSpace != IsBoldTextEnabled|| (*(double *)&accessibilityBottomConversationListSpace_sTextFontSize_accessibilityBottomConversationListSpace == v5? (v16 = *(double *)&accessibilityBottomConversationListSpace_sCustomTextFontSize_accessibilityBottomConversationListSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)accessibilityBottomConversationListSpace_sCustomTextFontName_accessibilityBottomConversationListSpace, "isEqualToString:", v9, *(double *)&accessibilityBottomConversationListSpace_sTextFontSize_accessibilityBottomConversationListSpace, *(double *)&accessibilityBottomConversationListSpace_sCustomTextFontSize_accessibilityBottomConversationListSpace) & 1) == 0))
  {
    -[CKUIBehavior conversationListDateFont](self, "conversationListDateFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "pointSize");
    v12 = v11 * 0.448979592;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&accessibilityBottomConversationListSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&accessibilityBottomConversationListSpace_sContentSizeCategory_accessibilityBottomConversationListSpace, v3);
    accessibilityBottomConversationListSpace_sIsBoldTextEnabled_accessibilityBottomConversationListSpace = IsBoldTextEnabled;
    accessibilityBottomConversationListSpace_sTextFontSize_accessibilityBottomConversationListSpace = *(_QWORD *)&v5;
    accessibilityBottomConversationListSpace_sCustomTextFontSize_accessibilityBottomConversationListSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&accessibilityBottomConversationListSpace_sCustomTextFontName_accessibilityBottomConversationListSpace, v8);
  }
  v14 = *(double *)&accessibilityBottomConversationListSpace_sBehavior;

  return v14;
}

- (double)summaryDateConversationListSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  BOOL v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)summaryDateConversationListSpace_sContentSizeCategory_summaryDateConversationListSpace, (UIContentSizeCategory)v2)|| summaryDateConversationListSpace_sIsBoldTextEnabled_summaryDateConversationListSpace != IsBoldTextEnabled|| (*(double *)&summaryDateConversationListSpace_sTextFontSize_summaryDateConversationListSpace == v4? (v10 = *(double *)&summaryDateConversationListSpace_sCustomTextFontSize_summaryDateConversationListSpace == v5): (v10 = 0), !v10|| (objc_msgSend((id)summaryDateConversationListSpace_sCustomTextFontName_summaryDateConversationListSpace, "isEqualToString:", v8, *(double *)&summaryDateConversationListSpace_sTextFontSize_summaryDateConversationListSpace, *(double *)&summaryDateConversationListSpace_sCustomTextFontSize_summaryDateConversationListSpace) & 1) == 0))
  {
    objc_storeStrong((id *)&summaryDateConversationListSpace_sContentSizeCategory_summaryDateConversationListSpace, v2);
    summaryDateConversationListSpace_sIsBoldTextEnabled_summaryDateConversationListSpace = IsBoldTextEnabled;
    summaryDateConversationListSpace_sTextFontSize_summaryDateConversationListSpace = *(_QWORD *)&v4;
    summaryDateConversationListSpace_sCustomTextFontSize_summaryDateConversationListSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&summaryDateConversationListSpace_sCustomTextFontName_summaryDateConversationListSpace, v7);
  }

  return 0.0;
}

- (double)conversationListCellBackgroundPadding
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  BOOL v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellBackgroundPadding_sContentSizeCategory_conversationListCellBackgroundPadding, (UIContentSizeCategory)v2)|| conversationListCellBackgroundPadding_sIsBoldTextEnabled_conversationListCellBackgroundPadding != IsBoldTextEnabled|| (*(double *)&conversationListCellBackgroundPadding_sTextFontSize_conversationListCellBackgroundPadding == v4? (v10 = *(double *)&conversationListCellBackgroundPadding_sCustomTextFontSize_conversationListCellBackgroundPadding == v5): (v10 = 0), !v10|| (objc_msgSend((id)conversationListCellBackgroundPadding_sCustomTextFontName_conversationListCellBackgroundPadding, "isEqualToString:", v8, *(double *)&conversationListCellBackgroundPadding_sTextFontSize_conversationListCellBackgroundPadding, *(double *)&conversationListCellBackgroundPadding_sCustomTextFontSize_conversationListCellBackgroundPadding) & 1) == 0))
  {
    objc_storeStrong((id *)&conversationListCellBackgroundPadding_sContentSizeCategory_conversationListCellBackgroundPadding, v2);
    conversationListCellBackgroundPadding_sIsBoldTextEnabled_conversationListCellBackgroundPadding = IsBoldTextEnabled;
    conversationListCellBackgroundPadding_sTextFontSize_conversationListCellBackgroundPadding = *(_QWORD *)&v4;
    conversationListCellBackgroundPadding_sCustomTextFontSize_conversationListCellBackgroundPadding = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellBackgroundPadding_sCustomTextFontName_conversationListCellBackgroundPadding, v7);
  }

  return 0.0;
}

- (double)conversationListTableMarginWidth
{
  if (conversationListTableMarginWidth_once != -1)
    dispatch_once(&conversationListTableMarginWidth_once, &__block_literal_global_198_0);
  return *(double *)&conversationListTableMarginWidth_sBehavior;
}

void __48__CKUIBehavior_conversationListTableMarginWidth__block_invoke()
{
  conversationListTableMarginWidth_sBehavior = 0x403C000000000000;
}

- (double)conversationListEditingTableMarginWidth
{
  if (conversationListEditingTableMarginWidth_once != -1)
    dispatch_once(&conversationListEditingTableMarginWidth_once, &__block_literal_global_199_0);
  return *(double *)&conversationListEditingTableMarginWidth_sBehavior;
}

void __55__CKUIBehavior_conversationListEditingTableMarginWidth__block_invoke()
{
  conversationListEditingTableMarginWidth_sBehavior = 0x404B000000000000;
}

- (double)conversationListComposeButtonSpacing
{
  if (conversationListComposeButtonSpacing_once != -1)
    dispatch_once(&conversationListComposeButtonSpacing_once, &__block_literal_global_200_2);
  return *(double *)&conversationListComposeButtonSpacing_sBehavior;
}

void __52__CKUIBehavior_conversationListComposeButtonSpacing__block_invoke()
{
  conversationListComposeButtonSpacing_sBehavior = 0x4038000000000000;
}

- (double)conversationListButtonToTitleSpacing
{
  if (conversationListButtonToTitleSpacing_once != -1)
    dispatch_once(&conversationListButtonToTitleSpacing_once, &__block_literal_global_201_0);
  return *(double *)&conversationListButtonToTitleSpacing_sBehavior;
}

void __52__CKUIBehavior_conversationListButtonToTitleSpacing__block_invoke()
{
  conversationListButtonToTitleSpacing_sBehavior = 0x4032000000000000;
}

- (int64_t)conversationListLayoutPinnedSectionNumberOfColumns
{
  if (conversationListLayoutPinnedSectionNumberOfColumns_once != -1)
    dispatch_once(&conversationListLayoutPinnedSectionNumberOfColumns_once, &__block_literal_global_202_0);
  if (conversationListLayoutPinnedSectionNumberOfColumns_sBehavior)
    return 3;
  else
    return 0;
}

void __66__CKUIBehavior_conversationListLayoutPinnedSectionNumberOfColumns__block_invoke()
{
  conversationListLayoutPinnedSectionNumberOfColumns_sBehavior = 1;
}

- (double)conversationListPinnedCellSelectedBackgroundCornerRadius
{
  if (conversationListPinnedCellSelectedBackgroundCornerRadius_once != -1)
    dispatch_once(&conversationListPinnedCellSelectedBackgroundCornerRadius_once, &__block_literal_global_203_1);
  return *(double *)&conversationListPinnedCellSelectedBackgroundCornerRadius_sBehavior;
}

void __72__CKUIBehavior_conversationListPinnedCellSelectedBackgroundCornerRadius__block_invoke()
{
  conversationListPinnedCellSelectedBackgroundCornerRadius_sBehavior = 0x4020000000000000;
}

- (UIEdgeInsets)conversationListPinnedCellTitleLabelVerticalPadding
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (conversationListPinnedCellTitleLabelVerticalPadding_once != -1)
    dispatch_once(&conversationListPinnedCellTitleLabelVerticalPadding_once, &__block_literal_global_204_0);
  v2 = *(double *)&conversationListPinnedCellTitleLabelVerticalPadding_sBehavior_0;
  v3 = *(double *)&conversationListPinnedCellTitleLabelVerticalPadding_sBehavior_2;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v3;
  result.left = v4;
  result.top = v2;
  return result;
}

void __67__CKUIBehavior_conversationListPinnedCellTitleLabelVerticalPadding__block_invoke()
{
  conversationListPinnedCellTitleLabelVerticalPadding_sBehavior_0 = 0x4018000000000000;
  conversationListPinnedCellTitleLabelVerticalPadding_sBehavior_2 = 0x4020000000000000;
}

- (double)conversationListCellAdditionalLeftMarginWhenEditing
{
  if (conversationListCellAdditionalLeftMarginWhenEditing_once != -1)
    dispatch_once(&conversationListCellAdditionalLeftMarginWhenEditing_once, &__block_literal_global_206_1);
  return *(double *)&conversationListCellAdditionalLeftMarginWhenEditing_sBehavior;
}

void __67__CKUIBehavior_conversationListCellAdditionalLeftMarginWhenEditing__block_invoke()
{
  conversationListCellAdditionalLeftMarginWhenEditing_sBehavior = 0x403A000000000000;
}

- (double)conversationListCellAdditionalLeftMarginForAvatarView
{
  if (conversationListCellAdditionalLeftMarginForAvatarView_once != -1)
    dispatch_once(&conversationListCellAdditionalLeftMarginForAvatarView_once, &__block_literal_global_207_1);
  return 0.0;
}

- (double)conversationListCellLargeTextLeftMargin
{
  if (conversationListCellLargeTextLeftMargin_once != -1)
    dispatch_once(&conversationListCellLargeTextLeftMargin_once, &__block_literal_global_208_0);
  return *(double *)&conversationListCellLargeTextLeftMargin_sBehavior;
}

void __55__CKUIBehavior_conversationListCellLargeTextLeftMargin__block_invoke()
{
  conversationListCellLargeTextLeftMargin_sBehavior = 0x402E000000000000;
}

- (double)conversationListCellRightMargin
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellRightMargin_sContentSizeCategory_conversationListCellRightMargin, (UIContentSizeCategory)v2)|| conversationListCellRightMargin_sIsBoldTextEnabled_conversationListCellRightMargin != IsBoldTextEnabled|| (*(double *)&conversationListCellRightMargin_sTextFontSize_conversationListCellRightMargin == v4? (v11 = *(double *)&conversationListCellRightMargin_sCustomTextFontSize_conversationListCellRightMargin == v5): (v11 = 0), !v11|| (objc_msgSend((id)conversationListCellRightMargin_sCustomTextFontName_conversationListCellRightMargin, "isEqualToString:", v8, *(double *)&conversationListCellRightMargin_sTextFontSize_conversationListCellRightMargin, *(double *)&conversationListCellRightMargin_sCustomTextFontSize_conversationListCellRightMargin) & 1) == 0))
  {
    conversationListCellRightMargin_sBehavior = 0x4030000000000000;
    objc_storeStrong((id *)&conversationListCellRightMargin_sContentSizeCategory_conversationListCellRightMargin, v2);
    conversationListCellRightMargin_sIsBoldTextEnabled_conversationListCellRightMargin = IsBoldTextEnabled;
    conversationListCellRightMargin_sTextFontSize_conversationListCellRightMargin = *(_QWORD *)&v4;
    conversationListCellRightMargin_sCustomTextFontSize_conversationListCellRightMargin = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellRightMargin_sCustomTextFontName_conversationListCellRightMargin, v7);
  }
  v9 = *(double *)&conversationListCellRightMargin_sBehavior;

  return v9;
}

- (double)conversationListCellLargeTextSenderSummaryInterspacing
{
  if (conversationListCellLargeTextSenderSummaryInterspacing_once != -1)
    dispatch_once(&conversationListCellLargeTextSenderSummaryInterspacing_once, &__block_literal_global_209_0);
  return 0.0;
}

- (double)conversationListCellTypingIndicatorScale
{
  if (conversationListCellTypingIndicatorScale_once != -1)
    dispatch_once(&conversationListCellTypingIndicatorScale_once, &__block_literal_global_210_1);
  return *(double *)&conversationListCellTypingIndicatorScale_sBehavior;
}

void __56__CKUIBehavior_conversationListCellTypingIndicatorScale__block_invoke()
{
  conversationListCellTypingIndicatorScale_sBehavior = 0x3FE999999999999ALL;
}

- (CGSize)transcriptTypingIndicatorDefaultSize
{
  double v2;
  double v3;
  CGSize result;

  if (transcriptTypingIndicatorDefaultSize_once != -1)
    dispatch_once(&transcriptTypingIndicatorDefaultSize_once, &__block_literal_global_211_0);
  v2 = *(double *)&transcriptTypingIndicatorDefaultSize_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorDefaultSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __52__CKUIBehavior_transcriptTypingIndicatorDefaultSize__block_invoke()
{
  transcriptTypingIndicatorDefaultSize_sBehavior_0 = 0x4053A00000000000;
  transcriptTypingIndicatorDefaultSize_sBehavior_1 = 0x4041800000000000;
}

- (CGRect)transcriptTypingIndicatorSmallBubbleFrame
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  if (transcriptTypingIndicatorSmallBubbleFrame_once != -1)
    dispatch_once(&transcriptTypingIndicatorSmallBubbleFrame_once, &__block_literal_global_212_0);
  v2 = *(double *)&transcriptTypingIndicatorSmallBubbleFrame_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorSmallBubbleFrame_sBehavior_1;
  v4 = *(double *)&transcriptTypingIndicatorSmallBubbleFrame_sBehavior_2;
  v5 = *(double *)&transcriptTypingIndicatorSmallBubbleFrame_sBehavior_3;
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

void __57__CKUIBehavior_transcriptTypingIndicatorSmallBubbleFrame__block_invoke()
{
  transcriptTypingIndicatorSmallBubbleFrame_sBehavior_0 = 0x4000000000000000;
  transcriptTypingIndicatorSmallBubbleFrame_sBehavior_1 = 0x4041800000000000;
  transcriptTypingIndicatorSmallBubbleFrame_sBehavior_2 = 0x4016000000000000;
  transcriptTypingIndicatorSmallBubbleFrame_sBehavior_3 = 0x4016000000000000;
}

- (CGSize)transcriptTypingIndicatorMediumBubbleSize
{
  double v2;
  double v3;
  CGSize result;

  if (transcriptTypingIndicatorMediumBubbleSize_once != -1)
    dispatch_once(&transcriptTypingIndicatorMediumBubbleSize_once, &__block_literal_global_213_0);
  v2 = *(double *)&transcriptTypingIndicatorMediumBubbleSize_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorMediumBubbleSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __57__CKUIBehavior_transcriptTypingIndicatorMediumBubbleSize__block_invoke()
{
  transcriptTypingIndicatorMediumBubbleSize_sBehavior_0 = 0x4027000000000000;
  transcriptTypingIndicatorMediumBubbleSize_sBehavior_1 = 0x4027000000000000;
}

- (CGPoint)transcriptTypingIndicatorMediumBubbleOffset
{
  double v2;
  double v3;
  CGPoint result;

  if (transcriptTypingIndicatorMediumBubbleOffset_once != -1)
    dispatch_once(&transcriptTypingIndicatorMediumBubbleOffset_once, &__block_literal_global_214_1);
  v2 = *(double *)&transcriptTypingIndicatorMediumBubbleOffset_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorMediumBubbleOffset_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __59__CKUIBehavior_transcriptTypingIndicatorMediumBubbleOffset__block_invoke()
{
  transcriptTypingIndicatorMediumBubbleOffset_sBehavior_0 = 0x401C000000000000;
  transcriptTypingIndicatorMediumBubbleOffset_sBehavior_1 = 0xC01E000000000000;
}

- (CGSize)transcriptTypingIndicatorLargeBubbleSize
{
  double v2;
  double v3;
  CGSize result;

  if (transcriptTypingIndicatorLargeBubbleSize_once != -1)
    dispatch_once(&transcriptTypingIndicatorLargeBubbleSize_once, &__block_literal_global_215_1);
  v2 = *(double *)&transcriptTypingIndicatorLargeBubbleSize_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorLargeBubbleSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __56__CKUIBehavior_transcriptTypingIndicatorLargeBubbleSize__block_invoke()
{
  transcriptTypingIndicatorLargeBubbleSize_sBehavior_0 = 0x404CC00000000000;
  transcriptTypingIndicatorLargeBubbleSize_sBehavior_1 = 0x4041800000000000;
}

- (CGPoint)transcriptTypingIndicatorLargeBubbleOffset
{
  double v2;
  double v3;
  CGPoint result;

  if (transcriptTypingIndicatorLargeBubbleOffset_once != -1)
    dispatch_once(&transcriptTypingIndicatorLargeBubbleOffset_once, &__block_literal_global_216_0);
  v2 = *(double *)&transcriptTypingIndicatorLargeBubbleOffset_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorLargeBubbleOffset_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __58__CKUIBehavior_transcriptTypingIndicatorLargeBubbleOffset__block_invoke()
{
  transcriptTypingIndicatorLargeBubbleOffset_sBehavior_0 = 0x4030000000000000;
  transcriptTypingIndicatorLargeBubbleOffset_sBehavior_1 = 0xC039800000000000;
}

- (CGPoint)transcriptTypingIndicatorLargeBubbleGrowOffset
{
  double v2;
  double v3;
  CGPoint result;

  if (transcriptTypingIndicatorLargeBubbleGrowOffset_once != -1)
    dispatch_once(&transcriptTypingIndicatorLargeBubbleGrowOffset_once, &__block_literal_global_217_1);
  v2 = *(double *)&transcriptTypingIndicatorLargeBubbleGrowOffset_sBehavior_0;
  v3 = *(double *)&transcriptTypingIndicatorLargeBubbleGrowOffset_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __62__CKUIBehavior_transcriptTypingIndicatorLargeBubbleGrowOffset__block_invoke()
{
  transcriptTypingIndicatorLargeBubbleGrowOffset_sBehavior_0 = 0x4014000000000000;
  transcriptTypingIndicatorLargeBubbleGrowOffset_sBehavior_1 = 0xC018000000000000;
}

- (double)transcriptTypingIndicatorLargeBubbleGrowBeginTime
{
  if (transcriptTypingIndicatorLargeBubbleGrowBeginTime_once != -1)
    dispatch_once(&transcriptTypingIndicatorLargeBubbleGrowBeginTime_once, &__block_literal_global_218_2);
  return *(double *)&transcriptTypingIndicatorLargeBubbleGrowBeginTime_sBehavior;
}

void __65__CKUIBehavior_transcriptTypingIndicatorLargeBubbleGrowBeginTime__block_invoke()
{
  transcriptTypingIndicatorLargeBubbleGrowBeginTime_sBehavior = 0x3FBEB851EB851EB8;
}

- (double)transcriptTypingIndicatorThinkingDotDiameter
{
  if (transcriptTypingIndicatorThinkingDotDiameter_once != -1)
    dispatch_once(&transcriptTypingIndicatorThinkingDotDiameter_once, &__block_literal_global_219_0);
  return *(double *)&transcriptTypingIndicatorThinkingDotDiameter_sBehavior;
}

void __60__CKUIBehavior_transcriptTypingIndicatorThinkingDotDiameter__block_invoke()
{
  transcriptTypingIndicatorThinkingDotDiameter_sBehavior = 0x4021000000000000;
}

- (double)transcriptTypingIndicatorThinkingDotSpace
{
  if (transcriptTypingIndicatorThinkingDotSpace_once != -1)
    dispatch_once(&transcriptTypingIndicatorThinkingDotSpace_once, &__block_literal_global_220_1);
  return *(double *)&transcriptTypingIndicatorThinkingDotSpace_sBehavior;
}

void __57__CKUIBehavior_transcriptTypingIndicatorThinkingDotSpace__block_invoke()
{
  transcriptTypingIndicatorThinkingDotSpace_sBehavior = 0x4029000000000000;
}

- (CGSize)transcriptDownloadingPendingMessagesViewDefaultSize
{
  double v2;
  double v3;
  CGSize result;

  if (transcriptDownloadingPendingMessagesViewDefaultSize_once != -1)
    dispatch_once(&transcriptDownloadingPendingMessagesViewDefaultSize_once, &__block_literal_global_221_0);
  v2 = *(double *)&transcriptDownloadingPendingMessagesViewDefaultSize_sBehavior_0;
  v3 = *(double *)&transcriptDownloadingPendingMessagesViewDefaultSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __67__CKUIBehavior_transcriptDownloadingPendingMessagesViewDefaultSize__block_invoke()
{
  transcriptDownloadingPendingMessagesViewDefaultSize_sBehavior_0 = 0x4053A00000000000;
  transcriptDownloadingPendingMessagesViewDefaultSize_sBehavior_1 = 0x4041800000000000;
}

- (UIFont)navbarToLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)navbarToLabelFont_sContentSizeCategory_navbarToLabelFont, (UIContentSizeCategory)v2)|| navbarToLabelFont_sIsIncreaseContrastEnabled_navbarToLabelFont != v3|| navbarToLabelFont_sIsBoldTextEnabled_navbarToLabelFont != IsBoldTextEnabled|| (v10 = navbarToLabelFont_sTextFontSize_navbarToLabelFont, *(double *)&navbarToLabelFont_sTextFontSize_navbarToLabelFont != v5)|| (v10 = navbarToLabelFont_sCustomTextFontSize_navbarToLabelFont, *(double *)&navbarToLabelFont_sCustomTextFontSize_navbarToLabelFont != v6)|| (objc_msgSend((id)navbarToLabelFont_sCustomTextFontName_navbarToLabelFont, "isEqualToString:", v9, *(double *)&navbarToLabelFont_sCustomTextFontSize_navbarToLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)navbarToLabelFont_sBehavior;
    navbarToLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&navbarToLabelFont_sContentSizeCategory_navbarToLabelFont, v2);
    navbarToLabelFont_sIsIncreaseContrastEnabled_navbarToLabelFont = v3;
    navbarToLabelFont_sIsBoldTextEnabled_navbarToLabelFont = IsBoldTextEnabled;
    navbarToLabelFont_sTextFontSize_navbarToLabelFont = *(_QWORD *)&v5;
    navbarToLabelFont_sCustomTextFontSize_navbarToLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&navbarToLabelFont_sCustomTextFontName_navbarToLabelFont, v8);
  }
  v13 = (UIFont *)(id)navbarToLabelFont_sBehavior;

  return v13;
}

- (UIFont)navbarDefaultLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)navbarDefaultLabelFont_sContentSizeCategory_navbarDefaultLabelFont, (UIContentSizeCategory)v2)|| navbarDefaultLabelFont_sIsIncreaseContrastEnabled_navbarDefaultLabelFont != v3|| navbarDefaultLabelFont_sIsBoldTextEnabled_navbarDefaultLabelFont != IsBoldTextEnabled|| (v10 = navbarDefaultLabelFont_sTextFontSize_navbarDefaultLabelFont, *(double *)&navbarDefaultLabelFont_sTextFontSize_navbarDefaultLabelFont != v5)|| (v10 = navbarDefaultLabelFont_sCustomTextFontSize_navbarDefaultLabelFont, *(double *)&navbarDefaultLabelFont_sCustomTextFontSize_navbarDefaultLabelFont != v6)|| (objc_msgSend((id)navbarDefaultLabelFont_sCustomTextFontName_navbarDefaultLabelFont, "isEqualToString:", v9, *(double *)&navbarDefaultLabelFont_sCustomTextFontSize_navbarDefaultLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)navbarDefaultLabelFont_sBehavior;
    navbarDefaultLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&navbarDefaultLabelFont_sContentSizeCategory_navbarDefaultLabelFont, v2);
    navbarDefaultLabelFont_sIsIncreaseContrastEnabled_navbarDefaultLabelFont = v3;
    navbarDefaultLabelFont_sIsBoldTextEnabled_navbarDefaultLabelFont = IsBoldTextEnabled;
    navbarDefaultLabelFont_sTextFontSize_navbarDefaultLabelFont = *(_QWORD *)&v5;
    navbarDefaultLabelFont_sCustomTextFontSize_navbarDefaultLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&navbarDefaultLabelFont_sCustomTextFontName_navbarDefaultLabelFont, v8);
  }
  v13 = (UIFont *)(id)navbarDefaultLabelFont_sBehavior;

  return v13;
}

- (UIFont)navbarSubtitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)navbarSubtitleFont_sContentSizeCategory_navbarSubtitleFont, (UIContentSizeCategory)v2)|| navbarSubtitleFont_sIsIncreaseContrastEnabled_navbarSubtitleFont != v3|| navbarSubtitleFont_sIsBoldTextEnabled_navbarSubtitleFont != IsBoldTextEnabled|| *(double *)&navbarSubtitleFont_sTextFontSize_navbarSubtitleFont != v5|| *(double *)&navbarSubtitleFont_sCustomTextFontSize_navbarSubtitleFont != v6|| (objc_msgSend((id)navbarSubtitleFont_sCustomTextFontName_navbarSubtitleFont, "isEqualToString:", v9, *(double *)&navbarSubtitleFont_sCustomTextFontSize_navbarSubtitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:weight:", 10.0, *MEMORY[0x1E0DC1440]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)navbarSubtitleFont_sBehavior;
    navbarSubtitleFont_sBehavior = v10;

    objc_storeStrong((id *)&navbarSubtitleFont_sContentSizeCategory_navbarSubtitleFont, v2);
    navbarSubtitleFont_sIsIncreaseContrastEnabled_navbarSubtitleFont = v3;
    navbarSubtitleFont_sIsBoldTextEnabled_navbarSubtitleFont = IsBoldTextEnabled;
    navbarSubtitleFont_sTextFontSize_navbarSubtitleFont = *(_QWORD *)&v5;
    navbarSubtitleFont_sCustomTextFontSize_navbarSubtitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&navbarSubtitleFont_sCustomTextFontName_navbarSubtitleFont, v8);
  }
  v12 = (UIFont *)(id)navbarSubtitleFont_sBehavior;

  return v12;
}

- (id)navBarSubtitleAttributedStringAttributesForContentSizeCategory:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v13[3];
  _QWORD v14[4];

  v14[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKUIBehavior navBarSubtitleFontForContentSizeCategory:](self, "navBarSubtitleFontForContentSizeCategory:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKUIBehavior navBarSubtitleParagraphStyleForContentSizeCategory:](self, "navBarSubtitleParagraphStyleForContentSizeCategory:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKUIBehavior navBarSubtitleFontTrackingValueForContentSizeCategory:](self, "navBarSubtitleFontTrackingValueForContentSizeCategory:", v4);
  v8 = v7;

  v9 = *MEMORY[0x1E0DC1178];
  v13[0] = *MEMORY[0x1E0DC1138];
  v13[1] = v9;
  v14[0] = v5;
  v14[1] = v6;
  v13[2] = *MEMORY[0x1E0DC1238];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14[2] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 3);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

- (id)navBarSubtitleFontForContentSizeCategory:(id)a3
{
  NSString *v3;
  NSString *v4;
  double v5;
  NSString *v6;
  void *v7;

  v3 = (NSString *)a3;
  v4 = (NSString *)*MEMORY[0x1E0CEB408];
  if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB408]) == NSOrderedAscending)
  {
    v5 = 10.0;
  }
  else if (UIContentSizeCategoryCompareToCategory(v3, v4))
  {
    v5 = 14.0;
    if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB400])
      && UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB3F8]))
    {
      v6 = (NSString *)*MEMORY[0x1E0CEB3C0];
      if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB3C0]) == NSOrderedAscending)
      {
        v5 = 19.0;
      }
      else if (UIContentSizeCategoryCompareToCategory(v3, v6))
      {
        v5 = 10.0;
      }
      else
      {
        v5 = 19.0;
      }
    }
  }
  else
  {
    v5 = 12.0;
  }
  objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:weight:", v5, *MEMORY[0x1E0DC1440]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (id)navBarSubtitleParagraphStyleForContentSizeCategory:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;

  v4 = a3;
  -[CKUIBehavior navBarSubtitleFontForContentSizeCategory:](self, "navBarSubtitleFontForContentSizeCategory:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pointSize");
  v7 = v6;
  -[CKUIBehavior navBarSubtitleFontLeadingValueForContentSizeCategory:](self, "navBarSubtitleFontLeadingValueForContentSizeCategory:", v4);
  v9 = v8;

  v10 = v9 - v7;
  objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v11, "mutableCopy");

  objc_msgSend(v12, "setAlignment:", 1);
  objc_msgSend(v12, "setLineBreakMode:", 4);
  if (v10 > 0.0)
    objc_msgSend(v12, "setLineSpacing:", v10);

  return v12;
}

- (double)navBarSubtitleFontTrackingValueForContentSizeCategory:(id)a3
{
  NSString *v3;
  NSString *v4;
  NSString *v5;
  double v6;

  v3 = (NSString *)a3;
  v4 = (NSString *)*MEMORY[0x1E0CEB408];
  if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB408]) == NSOrderedAscending)
  {
    v6 = 0.12;
  }
  else if (UIContentSizeCategoryCompareToCategory(v3, v4))
  {
    if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB400]))
    {
      if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB3F8]))
      {
        v5 = (NSString *)*MEMORY[0x1E0CEB3C0];
        if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB3C0]) == NSOrderedAscending)
          v6 = -0.45;
        else
          v6 = dbl_18E7CAE30[UIContentSizeCategoryCompareToCategory(v3, v5) == NSOrderedSame];
      }
      else
      {
        v6 = -0.31;
      }
    }
    else
    {
      v6 = -0.15;
    }
  }
  else
  {
    v6 = 0.0;
  }

  return v6;
}

- (double)navBarSubtitleFontLeadingValueForContentSizeCategory:(id)a3
{
  NSString *v3;
  NSString *v4;
  NSString *v5;
  double v6;

  v3 = (NSString *)a3;
  v4 = (NSString *)*MEMORY[0x1E0CEB408];
  if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB408]) == NSOrderedAscending)
  {
    v6 = 11.0;
  }
  else if (UIContentSizeCategoryCompareToCategory(v3, v4))
  {
    if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB400]))
    {
      if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB3F8]))
      {
        v5 = (NSString *)*MEMORY[0x1E0CEB3C0];
        if (UIContentSizeCategoryCompareToCategory(v3, (UIContentSizeCategory)*MEMORY[0x1E0CEB3C0]) == NSOrderedAscending)
        {
          v6 = 20.0;
        }
        else if (UIContentSizeCategoryCompareToCategory(v3, v5))
        {
          v6 = 11.0;
        }
        else
        {
          v6 = 20.0;
        }
      }
      else
      {
        v6 = 17.0;
      }
    }
    else
    {
      v6 = 15.0;
    }
  }
  else
  {
    v6 = 13.0;
  }

  return v6;
}

- (double)navbarSubtitleBottomPadding
{
  if (navbarSubtitleBottomPadding_once != -1)
    dispatch_once(&navbarSubtitleBottomPadding_once, &__block_literal_global_225_0);
  return *(double *)&navbarSubtitleBottomPadding_sBehavior;
}

void __43__CKUIBehavior_navbarSubtitleBottomPadding__block_invoke()
{
  navbarSubtitleBottomPadding_sBehavior = 0x4026000000000000;
}

- (UIImage)conversationListSlashSatelliteIndicatorImage
{
  if (conversationListSlashSatelliteIndicatorImage_once != -1)
    dispatch_once(&conversationListSlashSatelliteIndicatorImage_once, &__block_literal_global_232_0);
  return (UIImage *)(id)conversationListSlashSatelliteIndicatorImage_sBehavior;
}

void __60__CKUIBehavior_conversationListSlashSatelliteIndicatorImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("satellite.slash.fill"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v0 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:variant:", *MEMORY[0x1E0CEB540], 1024);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "configurationWithFont:scale:", v1, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "imageWithSymbolConfiguration:", v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)conversationListSlashSatelliteIndicatorImage_sBehavior;
  conversationListSlashSatelliteIndicatorImage_sBehavior = v3;

}

- (NSArray)acceptableUTIs
{
  if (acceptableUTIs_once != -1)
    dispatch_once(&acceptableUTIs_once, &__block_literal_global_235_0);
  return (NSArray *)(id)acceptableUTIs_sBehavior;
}

void __30__CKUIBehavior_acceptableUTIs__block_invoke()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v0 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  objc_msgSend(v0, "addObject:", CFSTR("com.apple.cloudkit.sharingsupport.pre"));
  objc_msgSend(v0, "addObject:", CFSTR("com.apple.cloudkit.sharingsupport.post"));
  objc_msgSend(v0, "addObject:", CFSTR("com.apple.cloudkit.sharingsupport.container"));
  objc_msgSend(MEMORY[0x1E0CB3940], "readableTypeIdentifiersForItemProvider");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", v1);

  objc_msgSend(MEMORY[0x1E0C99E98], "readableTypeIdentifiersForItemProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", v2);

  objc_msgSend(MEMORY[0x1E0CEA638], "readableTypeIdentifiersForItemProvider");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", v3);

  objc_msgSend((id)*MEMORY[0x1E0CEC4F0], "identifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObject:", v4);

  +[CKMediaObjectManager sharedInstance](CKMediaObjectManager, "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "allUTITypes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", v6);

  MEMORY[0x193FF3E1C](objc_msgSend(v0, "addObject:", CFSTR("com.apple.live-photo-bundle")));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObject:", v7);

  objc_msgSend(v0, "allObjects");
  v8 = objc_claimAutoreleasedReturnValue();

  v9 = (void *)acceptableUTIs_sBehavior;
  acceptableUTIs_sBehavior = v8;

}

- (id)pasteConfigurationDisablingKeyboardStickers:(BOOL)a3
{
  _BOOL4 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a3;
  -[CKUIBehavior acceptableUTIs](self, "acceptableUTIs");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v4, "mutableCopy");

  if (v3)
  {
    objc_msgSend((id)*MEMORY[0x1E0CEC580], "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "removeObject:", v6);

  }
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA808]), "initWithAcceptableTypeIdentifiers:", v5);

  return v7;
}

- (UIFont)filterCellTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)filterCellTitleFont_sContentSizeCategory_filterCellTitleFont, (UIContentSizeCategory)v2)|| filterCellTitleFont_sIsIncreaseContrastEnabled_filterCellTitleFont != v3|| filterCellTitleFont_sIsBoldTextEnabled_filterCellTitleFont != IsBoldTextEnabled|| *(double *)&filterCellTitleFont_sTextFontSize_filterCellTitleFont != v5|| *(double *)&filterCellTitleFont_sCustomTextFontSize_filterCellTitleFont != v6|| (objc_msgSend((id)filterCellTitleFont_sCustomTextFontName_filterCellTitleFont, "isEqualToString:", v9, *(double *)&filterCellTitleFont_sCustomTextFontSize_filterCellTitleFont) & 1) == 0)
  {
    if (CKIsBigIdiom_onceToken != -1)
      dispatch_once(&CKIsBigIdiom_onceToken, &__block_literal_global_4567);
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB538], 0x8000, 2 * (CKIsBigIdiom_sBig == 0));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v10, 0.0);
    v11 = objc_claimAutoreleasedReturnValue();

    v12 = (void *)filterCellTitleFont_sBehavior;
    filterCellTitleFont_sBehavior = v11;

    objc_storeStrong((id *)&filterCellTitleFont_sContentSizeCategory_filterCellTitleFont, v2);
    filterCellTitleFont_sIsIncreaseContrastEnabled_filterCellTitleFont = v3;
    filterCellTitleFont_sIsBoldTextEnabled_filterCellTitleFont = IsBoldTextEnabled;
    filterCellTitleFont_sTextFontSize_filterCellTitleFont = *(_QWORD *)&v5;
    filterCellTitleFont_sCustomTextFontSize_filterCellTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&filterCellTitleFont_sCustomTextFontName_filterCellTitleFont, v8);
  }
  v13 = (UIFont *)(id)filterCellTitleFont_sBehavior;

  return v13;
}

- (Class)modalTranscriptControllerClass
{
  if (modalTranscriptControllerClass_once != -1)
    dispatch_once(&modalTranscriptControllerClass_once, &__block_literal_global_254_1);
  return (Class)(id)modalTranscriptControllerClass_sBehavior;
}

uint64_t __46__CKUIBehavior_modalTranscriptControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  modalTranscriptControllerClass_sBehavior = result;
  return result;
}

- (BOOL)suppressPinActivityForState:(id)a3
{
  id v3;
  char v4;

  v3 = a3;
  if ((objc_msgSend(v3, "isSelected") & 1) != 0)
    v4 = 1;
  else
    v4 = objc_msgSend(v3, "isHighlighted");

  return v4;
}

- (BOOL)shouldUnreadIndicatorChangeOnSelection
{
  if (shouldUnreadIndicatorChangeOnSelection_once != -1)
    dispatch_once(&shouldUnreadIndicatorChangeOnSelection_once, &__block_literal_global_261_0);
  return 0;
}

- (double)conversationListCellHighlightViewToUnreadIndicatorPadding
{
  if (conversationListCellHighlightViewToUnreadIndicatorPadding_once != -1)
    dispatch_once(&conversationListCellHighlightViewToUnreadIndicatorPadding_once, &__block_literal_global_262_1);
  return *(double *)&conversationListCellHighlightViewToUnreadIndicatorPadding_sBehavior;
}

void __73__CKUIBehavior_conversationListCellHighlightViewToUnreadIndicatorPadding__block_invoke()
{
  conversationListCellHighlightViewToUnreadIndicatorPadding_sBehavior = 0x4008000000000000;
}

- (double)pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator
{
  if (pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator_once != -1)
    dispatch_once(&pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator_once, &__block_literal_global_263_0);
  return *(double *)&pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator_sBehavior;
}

void __82__CKUIBehavior_pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator__block_invoke()
{
  pinnedConversationViewTitleLabelToEdgePaddingWhenNoUnreadIndicator_sBehavior = 0x4008000000000000;
}

- (double)pinnedConversationDefaultAccessorySize
{
  if (pinnedConversationDefaultAccessorySize_once != -1)
    dispatch_once(&pinnedConversationDefaultAccessorySize_once, &__block_literal_global_264_0);
  return *(double *)&pinnedConversationDefaultAccessorySize_sBehavior;
}

void __54__CKUIBehavior_pinnedConversationDefaultAccessorySize__block_invoke()
{
  pinnedConversationDefaultAccessorySize_sBehavior = 0x403B000000000000;
}

- (double)pinnedConversationCheckmarkStrokeRatio
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_pinnedConversationCheckmarkStrokeRatio__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (pinnedConversationCheckmarkStrokeRatio_once != -1)
    dispatch_once(&pinnedConversationCheckmarkStrokeRatio_once, block);
  return *(double *)&pinnedConversationCheckmarkStrokeRatio_sBehavior;
}

double __54__CKUIBehavior_pinnedConversationCheckmarkStrokeRatio__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "pinnedConversationDefaultAccessorySize");
  result = 2.5 / v1;
  pinnedConversationCheckmarkStrokeRatio_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)conversationListTotalLastPinNameToFirstCellSpacing
{
  if (conversationListTotalLastPinNameToFirstCellSpacing_once != -1)
    dispatch_once(&conversationListTotalLastPinNameToFirstCellSpacing_once, &__block_literal_global_266_0);
  return *(double *)&conversationListTotalLastPinNameToFirstCellSpacing_sBehavior;
}

void __66__CKUIBehavior_conversationListTotalLastPinNameToFirstCellSpacing__block_invoke()
{
  conversationListTotalLastPinNameToFirstCellSpacing_sBehavior = 0x4030000000000000;
}

- (double)totalTopSpacingFromSearchBarToPinnedItems:(BOOL)a3
{
  double result;

  result = 10.0;
  if (a3)
    return 15.0;
  return result;
}

- (BOOL)conversationListShowsSearchOnAppear
{
  if (conversationListShowsSearchOnAppear_once != -1)
    dispatch_once(&conversationListShowsSearchOnAppear_once, &__block_literal_global_270_1);
  return 0;
}

- (BOOL)conversationListShouldManuallyApplyBottomSafeAreaInsetForIsRecentlyDeletedModal:(BOOL)a3
{
  return 0;
}

- (id)conversationListMoveSelectedToRecentlyDeletedButtonItemWithTarget:(id)a3 action:(SEL)a4
{
  objc_class *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v5 = (objc_class *)MEMORY[0x1E0CEA380];
  v6 = a3;
  v7 = [v5 alloc];
  CKFrameworkBundle();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("DELETE"), &stru_1E276D870, CFSTR("ChatKit"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v7, "initWithTitle:style:target:action:", v9, 0, v6, a4);

  return v10;
}

- (BOOL)usesPersistentConversationSelection
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char v6;

  objc_msgSend((id)*MEMORY[0x1E0CEB258], "windows");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "traitCollection");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = usesPersistentConversationSelection_sUserInterfaceHorizontalSizeClass_usesPersistentConversationSelection;
  if (v5 != objc_msgSend(v4, "horizontalSizeClass"))
  {
    usesPersistentConversationSelection_sBehavior = objc_msgSend(v4, "horizontalSizeClass") == 2;
    usesPersistentConversationSelection_sUserInterfaceHorizontalSizeClass_usesPersistentConversationSelection = objc_msgSend(v4, "horizontalSizeClass");
    objc_msgSend(v4, "verticalSizeClass");
  }
  v6 = usesPersistentConversationSelection_sBehavior;

  return v6;
}

- (BOOL)shouldShowSearchBarInConversationList
{
  if (shouldShowSearchBarInConversationList_once != -1)
    dispatch_once(&shouldShowSearchBarInConversationList_once, &__block_literal_global_280_0);
  return shouldShowSearchBarInConversationList_sBehavior;
}

void __53__CKUIBehavior_shouldShowSearchBarInConversationList__block_invoke()
{
  shouldShowSearchBarInConversationList_sBehavior = 1;
}

- (BOOL)showsHoverToDeleteButtonForNewCompose
{
  if (showsHoverToDeleteButtonForNewCompose_once != -1)
    dispatch_once(&showsHoverToDeleteButtonForNewCompose_once, &__block_literal_global_285_0);
  return 0;
}

- (BOOL)supportsOrbPreviewsInConversationList
{
  if (supportsOrbPreviewsInConversationList_once != -1)
    dispatch_once(&supportsOrbPreviewsInConversationList_once, &__block_literal_global_288_0);
  return supportsOrbPreviewsInConversationList_sBehavior;
}

void __53__CKUIBehavior_supportsOrbPreviewsInConversationList__block_invoke()
{
  supportsOrbPreviewsInConversationList_sBehavior = 1;
}

- (unint64_t)conversationListScrollingBatchSize
{
  if (conversationListScrollingBatchSize_once != -1)
    dispatch_once(&conversationListScrollingBatchSize_once, &__block_literal_global_289_0);
  if (conversationListScrollingBatchSize_sBehavior)
    return 16;
  else
    return 0;
}

void __50__CKUIBehavior_conversationListScrollingBatchSize__block_invoke()
{
  conversationListScrollingBatchSize_sBehavior = 1;
}

- (BOOL)shouldDismissSideMountedPanel
{
  if (shouldDismissSideMountedPanel_once != -1)
    dispatch_once(&shouldDismissSideMountedPanel_once, &__block_literal_global_292_0);
  return 0;
}

- (double)conversationListCellRoundSelectorLeftInset
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  BOOL v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellRoundSelectorLeftInset_sContentSizeCategory_conversationListCellRoundSelectorLeftInset, (UIContentSizeCategory)v2)|| conversationListCellRoundSelectorLeftInset_sIsBoldTextEnabled_conversationListCellRoundSelectorLeftInset != IsBoldTextEnabled|| (*(double *)&conversationListCellRoundSelectorLeftInset_sTextFontSize_conversationListCellRoundSelectorLeftInset == v4? (v10 = *(double *)&conversationListCellRoundSelectorLeftInset_sCustomTextFontSize_conversationListCellRoundSelectorLeftInset == v5): (v10 = 0), !v10|| (objc_msgSend((id)conversationListCellRoundSelectorLeftInset_sCustomTextFontName_conversationListCellRoundSelectorLeftInset, "isEqualToString:", v8, *(double *)&conversationListCellRoundSelectorLeftInset_sTextFontSize_conversationListCellRoundSelectorLeftInset, *(double *)&conversationListCellRoundSelectorLeftInset_sCustomTextFontSize_conversationListCellRoundSelectorLeftInset) & 1) == 0))
  {
    objc_storeStrong((id *)&conversationListCellRoundSelectorLeftInset_sContentSizeCategory_conversationListCellRoundSelectorLeftInset, v2);
    conversationListCellRoundSelectorLeftInset_sIsBoldTextEnabled_conversationListCellRoundSelectorLeftInset = IsBoldTextEnabled;
    conversationListCellRoundSelectorLeftInset_sTextFontSize_conversationListCellRoundSelectorLeftInset = *(_QWORD *)&v4;
    conversationListCellRoundSelectorLeftInset_sCustomTextFontSize_conversationListCellRoundSelectorLeftInset = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellRoundSelectorLeftInset_sCustomTextFontName_conversationListCellRoundSelectorLeftInset, v7);
  }

  return 0.0;
}

- (double)conversationListCellRoundSelectorRightInset
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  BOOL v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset, (UIContentSizeCategory)v2)|| conversationListCellRoundSelectorRightInset_sIsBoldTextEnabled_conversationListCellRoundSelectorRightInset != IsBoldTextEnabled|| (*(double *)&conversationListCellRoundSelectorRightInset_sTextFontSize_conversationListCellRoundSelectorRightInset == v4? (v10 = *(double *)&conversationListCellRoundSelectorRightInset_sCustomTextFontSize_conversationListCellRoundSelectorRightInset == v5): (v10 = 0), !v10|| (objc_msgSend((id)conversationListCellRoundSelectorRightInset_sCustomTextFontName_conversationListCellRoundSelectorRightInset, "isEqualToString:", v8, *(double *)&conversationListCellRoundSelectorRightInset_sTextFontSize_conversationListCellRoundSelectorRightInset, *(double *)&conversationListCellRoundSelectorRightInset_sCustomTextFontSize_conversationListCellRoundSelectorRightInset) & 1) == 0))
  {
    objc_storeStrong((id *)&conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset, v2);
    conversationListCellRoundSelectorRightInset_sIsBoldTextEnabled_conversationListCellRoundSelectorRightInset = IsBoldTextEnabled;
    conversationListCellRoundSelectorRightInset_sTextFontSize_conversationListCellRoundSelectorRightInset = *(_QWORD *)&v4;
    conversationListCellRoundSelectorRightInset_sCustomTextFontSize_conversationListCellRoundSelectorRightInset = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListCellRoundSelectorRightInset_sCustomTextFontName_conversationListCellRoundSelectorRightInset, v7);
  }

  return 0.0;
}

- (double)conversationListMultipleContactsImageDiameter
{
  if (conversationListMultipleContactsImageDiameter_once != -1)
    dispatch_once(&conversationListMultipleContactsImageDiameter_once, &__block_literal_global_296);
  return *(double *)&conversationListMultipleContactsImageDiameter_sBehavior;
}

double __61__CKUIBehavior_conversationListMultipleContactsImageDiameter__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = ceil(v0 * 26.0) / v0;
  conversationListMultipleContactsImageDiameter_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)conversationListAccessoryIndicatorToSummaryLabelPadding
{
  if (conversationListAccessoryIndicatorToSummaryLabelPadding_once != -1)
    dispatch_once(&conversationListAccessoryIndicatorToSummaryLabelPadding_once, &__block_literal_global_297_0);
  return *(double *)&conversationListAccessoryIndicatorToSummaryLabelPadding_sBehavior;
}

void __71__CKUIBehavior_conversationListAccessoryIndicatorToSummaryLabelPadding__block_invoke()
{
  conversationListAccessoryIndicatorToSummaryLabelPadding_sBehavior = 0x4008000000000000;
}

- (UIFont)conversationListLargeTitleStandardFont
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  uint64_t v9;
  void *v10;
  UIFont *v11;
  BOOL v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListLargeTitleStandardFont_sContentSizeCategory_conversationListLargeTitleStandardFont, (UIContentSizeCategory)v2)|| conversationListLargeTitleStandardFont_sIsBoldTextEnabled_conversationListLargeTitleStandardFont != IsBoldTextEnabled|| (*(double *)&conversationListLargeTitleStandardFont_sTextFontSize_conversationListLargeTitleStandardFont == v4? (v13 = *(double *)&conversationListLargeTitleStandardFont_sCustomTextFontSize_conversationListLargeTitleStandardFont == v5): (v13 = 0), !v13|| (objc_msgSend((id)conversationListLargeTitleStandardFont_sCustomTextFontName_conversationListLargeTitleStandardFont, "isEqualToString:", v8, *(double *)&conversationListLargeTitleStandardFont_sTextFontSize_conversationListLargeTitleStandardFont, *(double *)&conversationListLargeTitleStandardFont_sCustomTextFontSize_conversationListLargeTitleStandardFont) & 1) == 0))
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_emphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB5A8]);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)conversationListLargeTitleStandardFont_sBehavior;
    conversationListLargeTitleStandardFont_sBehavior = v9;

    objc_storeStrong((id *)&conversationListLargeTitleStandardFont_sContentSizeCategory_conversationListLargeTitleStandardFont, v2);
    conversationListLargeTitleStandardFont_sIsBoldTextEnabled_conversationListLargeTitleStandardFont = IsBoldTextEnabled;
    conversationListLargeTitleStandardFont_sTextFontSize_conversationListLargeTitleStandardFont = *(_QWORD *)&v4;
    conversationListLargeTitleStandardFont_sCustomTextFontSize_conversationListLargeTitleStandardFont = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListLargeTitleStandardFont_sCustomTextFontName_conversationListLargeTitleStandardFont, v7);
  }
  v11 = (UIFont *)(id)conversationListLargeTitleStandardFont_sBehavior;

  return v11;
}

- (UIFont)conversationListLargeTitleReducedFont
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  uint64_t v9;
  void *v10;
  UIFont *v11;
  BOOL v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListLargeTitleReducedFont_sContentSizeCategory_conversationListLargeTitleReducedFont, (UIContentSizeCategory)v2)|| conversationListLargeTitleReducedFont_sIsBoldTextEnabled_conversationListLargeTitleReducedFont != IsBoldTextEnabled|| (*(double *)&conversationListLargeTitleReducedFont_sTextFontSize_conversationListLargeTitleReducedFont == v4? (v13 = *(double *)&conversationListLargeTitleReducedFont_sCustomTextFontSize_conversationListLargeTitleReducedFont == v5): (v13 = 0), !v13|| (objc_msgSend((id)conversationListLargeTitleReducedFont_sCustomTextFontName_conversationListLargeTitleReducedFont, "isEqualToString:", v8, *(double *)&conversationListLargeTitleReducedFont_sTextFontSize_conversationListLargeTitleReducedFont, *(double *)&conversationListLargeTitleReducedFont_sCustomTextFontSize_conversationListLargeTitleReducedFont) & 1) == 0))
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_emphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB5B0]);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)conversationListLargeTitleReducedFont_sBehavior;
    conversationListLargeTitleReducedFont_sBehavior = v9;

    objc_storeStrong((id *)&conversationListLargeTitleReducedFont_sContentSizeCategory_conversationListLargeTitleReducedFont, v2);
    conversationListLargeTitleReducedFont_sIsBoldTextEnabled_conversationListLargeTitleReducedFont = IsBoldTextEnabled;
    conversationListLargeTitleReducedFont_sTextFontSize_conversationListLargeTitleReducedFont = *(_QWORD *)&v4;
    conversationListLargeTitleReducedFont_sCustomTextFontSize_conversationListLargeTitleReducedFont = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListLargeTitleReducedFont_sCustomTextFontName_conversationListLargeTitleReducedFont, v7);
  }
  v11 = (UIFont *)(id)conversationListLargeTitleReducedFont_sBehavior;

  return v11;
}

- (UIFont)conversationListBoldSummaryFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListBoldSummaryFont_sContentSizeCategory_conversationListBoldSummaryFont, (UIContentSizeCategory)v2)|| conversationListBoldSummaryFont_sIsIncreaseContrastEnabled_conversationListBoldSummaryFont != v3|| conversationListBoldSummaryFont_sIsBoldTextEnabled_conversationListBoldSummaryFont != IsBoldTextEnabled|| (v10 = conversationListBoldSummaryFont_sTextFontSize_conversationListBoldSummaryFont, *(double *)&conversationListBoldSummaryFont_sTextFontSize_conversationListBoldSummaryFont != v5)|| (v10 = conversationListBoldSummaryFont_sCustomTextFontSize_conversationListBoldSummaryFont, *(double *)&conversationListBoldSummaryFont_sCustomTextFontSize_conversationListBoldSummaryFont != v6)|| (objc_msgSend((id)conversationListBoldSummaryFont_sCustomTextFontName_conversationListBoldSummaryFont, "isEqualToString:", v9, *(double *)&conversationListBoldSummaryFont_sCustomTextFontSize_conversationListBoldSummaryFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB590], 2, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)conversationListBoldSummaryFont_sBehavior;
    conversationListBoldSummaryFont_sBehavior = v12;

    objc_storeStrong((id *)&conversationListBoldSummaryFont_sContentSizeCategory_conversationListBoldSummaryFont, v2);
    conversationListBoldSummaryFont_sIsIncreaseContrastEnabled_conversationListBoldSummaryFont = v3;
    conversationListBoldSummaryFont_sIsBoldTextEnabled_conversationListBoldSummaryFont = IsBoldTextEnabled;
    conversationListBoldSummaryFont_sTextFontSize_conversationListBoldSummaryFont = *(_QWORD *)&v5;
    conversationListBoldSummaryFont_sCustomTextFontSize_conversationListBoldSummaryFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListBoldSummaryFont_sCustomTextFontName_conversationListBoldSummaryFont, v8);
  }
  v14 = (UIFont *)(id)conversationListBoldSummaryFont_sBehavior;

  return v14;
}

- (UIFont)conversationListDropTargetInstructionFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListDropTargetInstructionFont_sContentSizeCategory_conversationListDropTargetInstructionFont, (UIContentSizeCategory)v2)|| conversationListDropTargetInstructionFont_sIsIncreaseContrastEnabled_conversationListDropTargetInstructionFont != v3|| conversationListDropTargetInstructionFont_sIsBoldTextEnabled_conversationListDropTargetInstructionFont != IsBoldTextEnabled|| *(double *)&conversationListDropTargetInstructionFont_sTextFontSize_conversationListDropTargetInstructionFont != v5|| *(double *)&conversationListDropTargetInstructionFont_sCustomTextFontSize_conversationListDropTargetInstructionFont != v6|| (objc_msgSend((id)conversationListDropTargetInstructionFont_sCustomTextFontName_conversationListDropTargetInstructionFont, "isEqualToString:", v9, *(double *)&conversationListDropTargetInstructionFont_sCustomTextFontSize_conversationListDropTargetInstructionFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 13.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)conversationListDropTargetInstructionFont_sBehavior;
    conversationListDropTargetInstructionFont_sBehavior = v10;

    objc_storeStrong((id *)&conversationListDropTargetInstructionFont_sContentSizeCategory_conversationListDropTargetInstructionFont, v2);
    conversationListDropTargetInstructionFont_sIsIncreaseContrastEnabled_conversationListDropTargetInstructionFont = v3;
    conversationListDropTargetInstructionFont_sIsBoldTextEnabled_conversationListDropTargetInstructionFont = IsBoldTextEnabled;
    conversationListDropTargetInstructionFont_sTextFontSize_conversationListDropTargetInstructionFont = *(_QWORD *)&v5;
    conversationListDropTargetInstructionFont_sCustomTextFontSize_conversationListDropTargetInstructionFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListDropTargetInstructionFont_sCustomTextFontName_conversationListDropTargetInstructionFont, v8);
  }
  v12 = (UIFont *)(id)conversationListDropTargetInstructionFont_sBehavior;

  return v12;
}

- (UIFont)conversationListGroupCountFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListGroupCountFont_sContentSizeCategory_conversationListGroupCountFont, (UIContentSizeCategory)v3)|| conversationListGroupCountFont_sIsIncreaseContrastEnabled_conversationListGroupCountFont != v4|| conversationListGroupCountFont_sIsBoldTextEnabled_conversationListGroupCountFont != IsBoldTextEnabled|| (v11 = conversationListGroupCountFont_sTextFontSize_conversationListGroupCountFont, *(double *)&conversationListGroupCountFont_sTextFontSize_conversationListGroupCountFont != v6)|| (v11 = conversationListGroupCountFont_sCustomTextFontSize_conversationListGroupCountFont, *(double *)&conversationListGroupCountFont_sCustomTextFontSize_conversationListGroupCountFont != v7)|| (objc_msgSend((id)conversationListGroupCountFont_sCustomTextFontName_conversationListGroupCountFont, "isEqualToString:", v10, *(double *)&conversationListGroupCountFont_sCustomTextFontSize_conversationListGroupCountFont) & 1) == 0)
  {
    -[CKUIBehavior conversationListSummaryFont](self, "conversationListSummaryFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)conversationListGroupCountFont_sBehavior;
    conversationListGroupCountFont_sBehavior = v12;

    objc_storeStrong((id *)&conversationListGroupCountFont_sContentSizeCategory_conversationListGroupCountFont, v3);
    conversationListGroupCountFont_sIsIncreaseContrastEnabled_conversationListGroupCountFont = v4;
    conversationListGroupCountFont_sIsBoldTextEnabled_conversationListGroupCountFont = IsBoldTextEnabled;
    conversationListGroupCountFont_sTextFontSize_conversationListGroupCountFont = *(_QWORD *)&v6;
    conversationListGroupCountFont_sCustomTextFontSize_conversationListGroupCountFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&conversationListGroupCountFont_sCustomTextFontName_conversationListGroupCountFont, v9);
  }
  v14 = (UIFont *)(id)conversationListGroupCountFont_sBehavior;

  return v14;
}

- (UIFont)conversationListPinnedConversationNameFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListPinnedConversationNameFont_sContentSizeCategory_conversationListPinnedConversationNameFont, (UIContentSizeCategory)v2)|| conversationListPinnedConversationNameFont_sIsIncreaseContrastEnabled_conversationListPinnedConversationNameFont != v3|| conversationListPinnedConversationNameFont_sIsBoldTextEnabled_conversationListPinnedConversationNameFont != IsBoldTextEnabled|| (v10 = conversationListPinnedConversationNameFont_sTextFontSize_conversationListPinnedConversationNameFont, *(double *)&conversationListPinnedConversationNameFont_sTextFontSize_conversationListPinnedConversationNameFont != v5)|| (v10 = conversationListPinnedConversationNameFont_sCustomTextFontSize_conversationListPinnedConversationNameFont, *(double *)&conversationListPinnedConversationNameFont_sCustomTextFontSize_conversationListPinnedConversationNameFont != v6)|| (objc_msgSend((id)conversationListPinnedConversationNameFont_sCustomTextFontName_conversationListPinnedConversationNameFont, "isEqualToString:", v9, *(double *)&conversationListPinnedConversationNameFont_sCustomTextFontSize_conversationListPinnedConversationNameFont) & 1) == 0)
  {
    +[CKUIBehavior fontWithStyle:adjustedForMaxSizeCategory:](CKUIBehavior, "fontWithStyle:adjustedForMaxSizeCategory:", *MEMORY[0x1E0CEB548], *MEMORY[0x1E0CEB3F8], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)conversationListPinnedConversationNameFont_sBehavior;
    conversationListPinnedConversationNameFont_sBehavior = v11;

    objc_storeStrong((id *)&conversationListPinnedConversationNameFont_sContentSizeCategory_conversationListPinnedConversationNameFont, v2);
    conversationListPinnedConversationNameFont_sIsIncreaseContrastEnabled_conversationListPinnedConversationNameFont = v3;
    conversationListPinnedConversationNameFont_sIsBoldTextEnabled_conversationListPinnedConversationNameFont = IsBoldTextEnabled;
    conversationListPinnedConversationNameFont_sTextFontSize_conversationListPinnedConversationNameFont = *(_QWORD *)&v5;
    conversationListPinnedConversationNameFont_sCustomTextFontSize_conversationListPinnedConversationNameFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListPinnedConversationNameFont_sCustomTextFontName_conversationListPinnedConversationNameFont, v8);
  }
  v13 = (UIFont *)(id)conversationListPinnedConversationNameFont_sBehavior;

  return v13;
}

- (double)conversationListPinnedConversationPreviewFontSizeOverrideStandard
{
  if (conversationListPinnedConversationPreviewFontSizeOverrideStandard_once != -1)
    dispatch_once(&conversationListPinnedConversationPreviewFontSizeOverrideStandard_once, &__block_literal_global_298_0);
  return 0.0;
}

- (double)conversationListPinnedConversationPreviewFontSizeOverrideLarge
{
  if (conversationListPinnedConversationPreviewFontSizeOverrideLarge_once != -1)
    dispatch_once(&conversationListPinnedConversationPreviewFontSizeOverrideLarge_once, &__block_literal_global_299_0);
  return 0.0;
}

- (BOOL)conversationListFocusFilterBannerShowsKeylines
{
  if (conversationListFocusFilterBannerShowsKeylines_once != -1)
    dispatch_once(&conversationListFocusFilterBannerShowsKeylines_once, &__block_literal_global_300_0);
  return conversationListFocusFilterBannerShowsKeylines_sBehavior;
}

void __62__CKUIBehavior_conversationListFocusFilterBannerShowsKeylines__block_invoke()
{
  conversationListFocusFilterBannerShowsKeylines_sBehavior = 1;
}

- (UIFont)conversationListFocusFilterBannerTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerTitleFont_sContentSizeCategory_conversationListFocusFilterBannerTitleFont, (UIContentSizeCategory)v2)|| conversationListFocusFilterBannerTitleFont_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerTitleFont != v3|| conversationListFocusFilterBannerTitleFont_sIsBoldTextEnabled_conversationListFocusFilterBannerTitleFont != IsBoldTextEnabled|| (v10 = conversationListFocusFilterBannerTitleFont_sTextFontSize_conversationListFocusFilterBannerTitleFont, *(double *)&conversationListFocusFilterBannerTitleFont_sTextFontSize_conversationListFocusFilterBannerTitleFont != v5)|| (v10 = conversationListFocusFilterBannerTitleFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleFont, *(double *)&conversationListFocusFilterBannerTitleFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleFont != v6)|| (objc_msgSend((id)conversationListFocusFilterBannerTitleFont_sCustomTextFontName_conversationListFocusFilterBannerTitleFont, "isEqualToString:", v9, *(double *)&conversationListFocusFilterBannerTitleFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB590], 0x8000, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)conversationListFocusFilterBannerTitleFont_sBehavior;
    conversationListFocusFilterBannerTitleFont_sBehavior = v12;

    objc_storeStrong((id *)&conversationListFocusFilterBannerTitleFont_sContentSizeCategory_conversationListFocusFilterBannerTitleFont, v2);
    conversationListFocusFilterBannerTitleFont_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerTitleFont = v3;
    conversationListFocusFilterBannerTitleFont_sIsBoldTextEnabled_conversationListFocusFilterBannerTitleFont = IsBoldTextEnabled;
    conversationListFocusFilterBannerTitleFont_sTextFontSize_conversationListFocusFilterBannerTitleFont = *(_QWORD *)&v5;
    conversationListFocusFilterBannerTitleFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListFocusFilterBannerTitleFont_sCustomTextFontName_conversationListFocusFilterBannerTitleFont, v8);
  }
  v14 = (UIFont *)(id)conversationListFocusFilterBannerTitleFont_sBehavior;

  return v14;
}

- (UIFont)conversationListFocusFilterBannerTitleValueFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerTitleValueFont_sContentSizeCategory_conversationListFocusFilterBannerTitleValueFont, (UIContentSizeCategory)v2)|| conversationListFocusFilterBannerTitleValueFont_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerTitleValueFont != v3|| conversationListFocusFilterBannerTitleValueFont_sIsBoldTextEnabled_conversationListFocusFilterBannerTitleValueFont != IsBoldTextEnabled|| (v10 = conversationListFocusFilterBannerTitleValueFont_sTextFontSize_conversationListFocusFilterBannerTitleValueFont, *(double *)&conversationListFocusFilterBannerTitleValueFont_sTextFontSize_conversationListFocusFilterBannerTitleValueFont != v5)|| (v10 = conversationListFocusFilterBannerTitleValueFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleValueFont, *(double *)&conversationListFocusFilterBannerTitleValueFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleValueFont != v6)|| (objc_msgSend((id)conversationListFocusFilterBannerTitleValueFont_sCustomTextFontName_conversationListFocusFilterBannerTitleValueFont, "isEqualToString:", v9, *(double *)&conversationListFocusFilterBannerTitleValueFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleValueFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB590], 32770, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)conversationListFocusFilterBannerTitleValueFont_sBehavior;
    conversationListFocusFilterBannerTitleValueFont_sBehavior = v12;

    objc_storeStrong((id *)&conversationListFocusFilterBannerTitleValueFont_sContentSizeCategory_conversationListFocusFilterBannerTitleValueFont, v2);
    conversationListFocusFilterBannerTitleValueFont_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerTitleValueFont = v3;
    conversationListFocusFilterBannerTitleValueFont_sIsBoldTextEnabled_conversationListFocusFilterBannerTitleValueFont = IsBoldTextEnabled;
    conversationListFocusFilterBannerTitleValueFont_sTextFontSize_conversationListFocusFilterBannerTitleValueFont = *(_QWORD *)&v5;
    conversationListFocusFilterBannerTitleValueFont_sCustomTextFontSize_conversationListFocusFilterBannerTitleValueFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListFocusFilterBannerTitleValueFont_sCustomTextFontName_conversationListFocusFilterBannerTitleValueFont, v8);
  }
  v14 = (UIFont *)(id)conversationListFocusFilterBannerTitleValueFont_sBehavior;

  return v14;
}

- (double)conversationListFocusFilterBannerTopPadding
{
  if (conversationListFocusFilterBannerTopPadding_once != -1)
    dispatch_once(&conversationListFocusFilterBannerTopPadding_once, &__block_literal_global_301_0);
  return *(double *)&conversationListFocusFilterBannerTopPadding_sBehavior;
}

void __59__CKUIBehavior_conversationListFocusFilterBannerTopPadding__block_invoke()
{
  conversationListFocusFilterBannerTopPadding_sBehavior = 0x4026000000000000;
}

- (double)conversationListFocusFilterBannerBottomPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __62__CKUIBehavior_conversationListFocusFilterBannerBottomPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (conversationListFocusFilterBannerBottomPadding_once != -1)
    dispatch_once(&conversationListFocusFilterBannerBottomPadding_once, block);
  return *(double *)&conversationListFocusFilterBannerBottomPadding_sBehavior;
}

uint64_t __62__CKUIBehavior_conversationListFocusFilterBannerBottomPadding__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "conversationListFocusFilterBannerTopPadding");
  conversationListFocusFilterBannerBottomPadding_sBehavior = v2;
  return result;
}

- (BOOL)conversationListFocusFilterBannerShouldUseAccessabilityLayout
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  char v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerShouldUseAccessabilityLayout_sContentSizeCategory_conversationListFocusFilterBannerShouldUseAccessabilityLayout, (UIContentSizeCategory)v2)|| conversationListFocusFilterBannerShouldUseAccessabilityLayout_sIsBoldTextEnabled_conversationListFocusFilterBannerShouldUseAccessabilityLayout != IsBoldTextEnabled|| (*(double *)&conversationListFocusFilterBannerShouldUseAccessabilityLayout_sTextFontSize_conversationListFocusFilterBannerShouldUseAccessabilityLayout == v4? (v11 = *(double *)&conversationListFocusFilterBannerShouldUseAccessabilityLayout_sCustomTextFontSize_conversationListFocusFilterBannerShouldUseAccessabilityLayout == v5): (v11 = 0), !v11|| (objc_msgSend((id)conversationListFocusFilterBannerShouldUseAccessabilityLayout_sCustomTextFontName_conversationListFocusFilterBannerShouldUseAccessabilityLayout, "isEqualToString:", v8, *(double *)&conversationListFocusFilterBannerShouldUseAccessabilityLayout_sTextFontSize_conversationListFocusFilterBannerShouldUseAccessabilityLayout, *(double *)&conversationListFocusFilterBannerShouldUseAccessabilityLayout_sCustomTextFontSize_conversationListFocusFilterBannerShouldUseAccessabilityLayout) & 1) == 0))
  {
    conversationListFocusFilterBannerShouldUseAccessabilityLayout_sBehavior = +[CKUIBehavior isPreferredContentSizeCategoryGreaterThanOrEqualTo:](CKUIBehavior, "isPreferredContentSizeCategoryGreaterThanOrEqualTo:", *MEMORY[0x1E0CEB3D8]);
    objc_storeStrong((id *)&conversationListFocusFilterBannerShouldUseAccessabilityLayout_sContentSizeCategory_conversationListFocusFilterBannerShouldUseAccessabilityLayout, v2);
    conversationListFocusFilterBannerShouldUseAccessabilityLayout_sIsBoldTextEnabled_conversationListFocusFilterBannerShouldUseAccessabilityLayout = IsBoldTextEnabled;
    conversationListFocusFilterBannerShouldUseAccessabilityLayout_sTextFontSize_conversationListFocusFilterBannerShouldUseAccessabilityLayout = *(_QWORD *)&v4;
    conversationListFocusFilterBannerShouldUseAccessabilityLayout_sCustomTextFontSize_conversationListFocusFilterBannerShouldUseAccessabilityLayout = *(_QWORD *)&v5;
    objc_storeStrong((id *)&conversationListFocusFilterBannerShouldUseAccessabilityLayout_sCustomTextFontName_conversationListFocusFilterBannerShouldUseAccessabilityLayout, v7);
  }
  v9 = conversationListFocusFilterBannerShouldUseAccessabilityLayout_sBehavior;

  return v9;
}

- (double)pinnedConversationActivityBroadShadowLightRadius
{
  if (pinnedConversationActivityBroadShadowLightRadius_once != -1)
    dispatch_once(&pinnedConversationActivityBroadShadowLightRadius_once, &__block_literal_global_302_0);
  return *(double *)&pinnedConversationActivityBroadShadowLightRadius_sBehavior;
}

void __64__CKUIBehavior_pinnedConversationActivityBroadShadowLightRadius__block_invoke()
{
  pinnedConversationActivityBroadShadowLightRadius_sBehavior = 0x4032000000000000;
}

- (double)pinnedConversationActivityBroadShadowDarkRadius
{
  if (pinnedConversationActivityBroadShadowDarkRadius_once != -1)
    dispatch_once(&pinnedConversationActivityBroadShadowDarkRadius_once, &__block_literal_global_303);
  return *(double *)&pinnedConversationActivityBroadShadowDarkRadius_sBehavior;
}

void __63__CKUIBehavior_pinnedConversationActivityBroadShadowDarkRadius__block_invoke()
{
  pinnedConversationActivityBroadShadowDarkRadius_sBehavior = 0x4024000000000000;
}

- (double)pinnedConversationActivityTightShadowLightRadius
{
  if (pinnedConversationActivityTightShadowLightRadius_once != -1)
    dispatch_once(&pinnedConversationActivityTightShadowLightRadius_once, &__block_literal_global_304);
  return *(double *)&pinnedConversationActivityTightShadowLightRadius_sBehavior;
}

void __64__CKUIBehavior_pinnedConversationActivityTightShadowLightRadius__block_invoke()
{
  pinnedConversationActivityTightShadowLightRadius_sBehavior = 0x4010000000000000;
}

- (double)pinnedConversationActivityTightShadowDarkRadius
{
  if (pinnedConversationActivityTightShadowDarkRadius_once != -1)
    dispatch_once(&pinnedConversationActivityTightShadowDarkRadius_once, &__block_literal_global_305_0);
  return *(double *)&pinnedConversationActivityTightShadowDarkRadius_sBehavior;
}

void __63__CKUIBehavior_pinnedConversationActivityTightShadowDarkRadius__block_invoke()
{
  pinnedConversationActivityTightShadowDarkRadius_sBehavior = 0x4010000000000000;
}

- (double)pinnedConversationActivityBroadShadowLightOpacity
{
  if (pinnedConversationActivityBroadShadowLightOpacity_once != -1)
    dispatch_once(&pinnedConversationActivityBroadShadowLightOpacity_once, &__block_literal_global_306);
  return *(double *)&pinnedConversationActivityBroadShadowLightOpacity_sBehavior;
}

void __65__CKUIBehavior_pinnedConversationActivityBroadShadowLightOpacity__block_invoke()
{
  pinnedConversationActivityBroadShadowLightOpacity_sBehavior = 0x3FCD70A3D70A3D71;
}

- (double)pinnedConversationActivityBroadShadowDarkOpacity
{
  if (pinnedConversationActivityBroadShadowDarkOpacity_once != -1)
    dispatch_once(&pinnedConversationActivityBroadShadowDarkOpacity_once, &__block_literal_global_307);
  return *(double *)&pinnedConversationActivityBroadShadowDarkOpacity_sBehavior;
}

void __64__CKUIBehavior_pinnedConversationActivityBroadShadowDarkOpacity__block_invoke()
{
  pinnedConversationActivityBroadShadowDarkOpacity_sBehavior = 0x3FE147AE147AE148;
}

- (double)pinnedConversationActivityTightShadowLightOpacity
{
  if (pinnedConversationActivityTightShadowLightOpacity_once != -1)
    dispatch_once(&pinnedConversationActivityTightShadowLightOpacity_once, &__block_literal_global_308_0);
  return *(double *)&pinnedConversationActivityTightShadowLightOpacity_sBehavior;
}

void __65__CKUIBehavior_pinnedConversationActivityTightShadowLightOpacity__block_invoke()
{
  pinnedConversationActivityTightShadowLightOpacity_sBehavior = 0x3FA47AE147AE147BLL;
}

- (double)pinnedConversationActivityTightShadowDarkOpacity
{
  if (pinnedConversationActivityTightShadowDarkOpacity_once != -1)
    dispatch_once(&pinnedConversationActivityTightShadowDarkOpacity_once, &__block_literal_global_309_0);
  return *(double *)&pinnedConversationActivityTightShadowDarkOpacity_sBehavior;
}

void __64__CKUIBehavior_pinnedConversationActivityTightShadowDarkOpacity__block_invoke()
{
  pinnedConversationActivityTightShadowDarkOpacity_sBehavior = 0x3FD5C28F5C28F5C3;
}

- (CGSize)pinnedConversationActivityBroadShadowLightOffset
{
  double v2;
  double v3;
  CGSize result;

  if (pinnedConversationActivityBroadShadowLightOffset_once != -1)
    dispatch_once(&pinnedConversationActivityBroadShadowLightOffset_once, &__block_literal_global_310_0);
  v2 = *(double *)&pinnedConversationActivityBroadShadowLightOffset_sBehavior_1;
  v3 = 0.0;
  result.height = v2;
  result.width = v3;
  return result;
}

void __64__CKUIBehavior_pinnedConversationActivityBroadShadowLightOffset__block_invoke()
{
  pinnedConversationActivityBroadShadowLightOffset_sBehavior_1 = 0x4020000000000000;
}

- (CGSize)pinnedConversationActivityBroadShadowDarkOffset
{
  double v2;
  double v3;
  CGSize result;

  if (pinnedConversationActivityBroadShadowDarkOffset_once != -1)
    dispatch_once(&pinnedConversationActivityBroadShadowDarkOffset_once, &__block_literal_global_311_0);
  v2 = *(double *)&pinnedConversationActivityBroadShadowDarkOffset_sBehavior_1;
  v3 = 0.0;
  result.height = v2;
  result.width = v3;
  return result;
}

void __63__CKUIBehavior_pinnedConversationActivityBroadShadowDarkOffset__block_invoke()
{
  pinnedConversationActivityBroadShadowDarkOffset_sBehavior_1 = 0x4018000000000000;
}

- (CGSize)pinnedConversationActivityTightShadowLightOffset
{
  double v2;
  double v3;
  CGSize result;

  if (pinnedConversationActivityTightShadowLightOffset_once != -1)
    dispatch_once(&pinnedConversationActivityTightShadowLightOffset_once, &__block_literal_global_312_0);
  v3 = *((double *)&pinnedConversationActivityTightShadowLightOffset_sBehavior + 1);
  v2 = *(double *)&pinnedConversationActivityTightShadowLightOffset_sBehavior;
  result.height = v3;
  result.width = v2;
  return result;
}

__n128 __64__CKUIBehavior_pinnedConversationActivityTightShadowLightOffset__block_invoke()
{
  __n128 result;

  result = *(__n128 *)MEMORY[0x1E0C9D820];
  pinnedConversationActivityTightShadowLightOffset_sBehavior = *MEMORY[0x1E0C9D820];
  return result;
}

- (CGSize)pinnedConversationActivityTightShadowDarkOffset
{
  double v2;
  double v3;
  CGSize result;

  if (pinnedConversationActivityTightShadowDarkOffset_once != -1)
    dispatch_once(&pinnedConversationActivityTightShadowDarkOffset_once, &__block_literal_global_313_0);
  v3 = *((double *)&pinnedConversationActivityTightShadowDarkOffset_sBehavior + 1);
  v2 = *(double *)&pinnedConversationActivityTightShadowDarkOffset_sBehavior;
  result.height = v3;
  result.width = v2;
  return result;
}

__n128 __63__CKUIBehavior_pinnedConversationActivityTightShadowDarkOffset__block_invoke()
{
  __n128 result;

  result = *(__n128 *)MEMORY[0x1E0C9D820];
  pinnedConversationActivityTightShadowDarkOffset_sBehavior = *MEMORY[0x1E0C9D820];
  return result;
}

- (double)pinnedConversationActivitySnapshotContentScaleMostRecent
{
  if (pinnedConversationActivitySnapshotContentScaleMostRecent_once != -1)
    dispatch_once(&pinnedConversationActivitySnapshotContentScaleMostRecent_once, &__block_literal_global_314_0);
  return *(double *)&pinnedConversationActivitySnapshotContentScaleMostRecent_sBehavior;
}

void __72__CKUIBehavior_pinnedConversationActivitySnapshotContentScaleMostRecent__block_invoke()
{
  pinnedConversationActivitySnapshotContentScaleMostRecent_sBehavior = 0x3FF0000000000000;
}

- (double)pinnedConversationActivitySnapshotContentScaleSecondMostRecent
{
  if (pinnedConversationActivitySnapshotContentScaleSecondMostRecent_once != -1)
    dispatch_once(&pinnedConversationActivitySnapshotContentScaleSecondMostRecent_once, &__block_literal_global_315_0);
  return *(double *)&pinnedConversationActivitySnapshotContentScaleSecondMostRecent_sBehavior;
}

void __78__CKUIBehavior_pinnedConversationActivitySnapshotContentScaleSecondMostRecent__block_invoke()
{
  pinnedConversationActivitySnapshotContentScaleSecondMostRecent_sBehavior = 0x3FE999999999999ALL;
}

- (double)pinnedConversationActivitySnapshotContentScaleNonRecent
{
  if (pinnedConversationActivitySnapshotContentScaleNonRecent_once != -1)
    dispatch_once(&pinnedConversationActivitySnapshotContentScaleNonRecent_once, &__block_literal_global_316_0);
  return *(double *)&pinnedConversationActivitySnapshotContentScaleNonRecent_sBehavior;
}

void __71__CKUIBehavior_pinnedConversationActivitySnapshotContentScaleNonRecent__block_invoke()
{
  pinnedConversationActivitySnapshotContentScaleNonRecent_sBehavior = 0x3FE8000000000000;
}

- (UIBlurEffect)conversationListFocusFilterBannerBlurEffect
{
  if (conversationListFocusFilterBannerBlurEffect_once != -1)
    dispatch_once(&conversationListFocusFilterBannerBlurEffect_once, &__block_literal_global_317_0);
  return (UIBlurEffect *)(id)conversationListFocusFilterBannerBlurEffect_sBehavior;
}

void __59__CKUIBehavior_conversationListFocusFilterBannerBlurEffect__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA398], "effectWithStyle:", 1100);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)conversationListFocusFilterBannerBlurEffect_sBehavior;
  conversationListFocusFilterBannerBlurEffect_sBehavior = v0;

}

- (UIImage)newComposeImage
{
  if (newComposeImage_once != -1)
    dispatch_once(&newComposeImage_once, &__block_literal_global_319_0);
  return (UIImage *)(id)newComposeImage_sBehavior;
}

void __31__CKUIBehavior_newComposeImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Messages-Compose"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)newComposeImage_sBehavior;
  newComposeImage_sBehavior = v0;

}

- (UIImage)optionsImage
{
  if (optionsImage_once != -1)
    dispatch_once(&optionsImage_once, &__block_literal_global_322_0);
  return (UIImage *)(id)optionsImage_sBehavior;
}

void __28__CKUIBehavior_optionsImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Messages-More"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)optionsImage_sBehavior;
  optionsImage_sBehavior = v0;

}

- (UIImage)readDNDImage
{
  if (readDNDImage_once != -1)
    dispatch_once(&readDNDImage_once, &__block_literal_global_326);
  return (UIImage *)(id)readDNDImage_sBehavior;
}

void __28__CKUIBehavior_readDNDImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("moon.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)readDNDImage_sBehavior;
  readDNDImage_sBehavior = v0;

}

- (UIImage)unreadDNDImage
{
  if (unreadDNDImage_once != -1)
    dispatch_once(&unreadDNDImage_once, &__block_literal_global_329);
  return (UIImage *)(id)unreadDNDImage_sBehavior;
}

void __30__CKUIBehavior_unreadDNDImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("moon.circle.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)unreadDNDImage_sBehavior;
  unreadDNDImage_sBehavior = v0;

}

- (UIImage)unreadIndicatorMutedImage
{
  if (unreadIndicatorMutedImage_once != -1)
    dispatch_once(&unreadIndicatorMutedImage_once, &__block_literal_global_332);
  return (UIImage *)(id)unreadIndicatorMutedImage_sBehavior;
}

void __41__CKUIBehavior_unreadIndicatorMutedImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("bell.slash.fill"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "theme");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "accessoryIndicatorTintColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v0, "imageWithTintColor:renderingMode:", v3, 1);
  v4 = objc_claimAutoreleasedReturnValue();

  v5 = (void *)unreadIndicatorMutedImage_sBehavior;
  unreadIndicatorMutedImage_sBehavior = v4;

}

- (UIImage)unreadIndicatorSelectedImage
{
  if (unreadIndicatorSelectedImage_once != -1)
    dispatch_once(&unreadIndicatorSelectedImage_once, &__block_literal_global_333);
  return (UIImage *)(id)unreadIndicatorSelectedImage_sBehavior;
}

void __44__CKUIBehavior_unreadIndicatorSelectedImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  UIImageGetUnreadIndicator();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "theme");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "readSelectedIndicatorColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v0, "imageWithTintColor:renderingMode:", v3, 1);
  v4 = objc_claimAutoreleasedReturnValue();

  v5 = (void *)unreadIndicatorSelectedImage_sBehavior;
  unreadIndicatorSelectedImage_sBehavior = v4;

}

- (UIImage)unreadIndicatorUntintedImage
{
  if (unreadIndicatorUntintedImage_once != -1)
    dispatch_once(&unreadIndicatorUntintedImage_once, &__block_literal_global_334_0);
  return (UIImage *)(id)unreadIndicatorUntintedImage_sBehavior;
}

void __44__CKUIBehavior_unreadIndicatorUntintedImage__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;

  UIImageGetUnreadIndicator();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "imageWithRenderingMode:", 2);
  v1 = objc_claimAutoreleasedReturnValue();

  v2 = (void *)unreadIndicatorUntintedImage_sBehavior;
  unreadIndicatorUntintedImage_sBehavior = v1;

}

- (UIImage)unreadIndicatorTintedImage
{
  if (unreadIndicatorTintedImage_once != -1)
    dispatch_once(&unreadIndicatorTintedImage_once, &__block_literal_global_335);
  return (UIImage *)(id)unreadIndicatorTintedImage_sBehavior;
}

void __42__CKUIBehavior_unreadIndicatorTintedImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  UIImageGetUnreadIndicator();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "theme");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "unreadIndicatorColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v0, "imageWithTintColor:renderingMode:", v3, 1);
  v4 = objc_claimAutoreleasedReturnValue();

  v5 = (void *)unreadIndicatorTintedImage_sBehavior;
  unreadIndicatorTintedImage_sBehavior = v4;

}

- (UIImage)detailsImage
{
  if (detailsImage_once != -1)
    dispatch_once(&detailsImage_once, &__block_literal_global_336_0);
  return 0;
}

- (UIImage)trashImage
{
  if (trashImage_once != -1)
    dispatch_once(&trashImage_once, &__block_literal_global_337_0);
  return (UIImage *)(id)trashImage_sBehavior;
}

void __26__CKUIBehavior_trashImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("trash"));
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "imageWithSymbolConfiguration:", v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "theme");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appTintColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_flatImageWithColor:", v4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)trashImage_sBehavior;
  trashImage_sBehavior = v5;

}

- (UIImage)messageAcknowledgmentPickerBarBubbleImage
{
  if (messageAcknowledgmentPickerBarBubbleImage_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarBubbleImage_once, &__block_literal_global_340);
  return 0;
}

- (UIImage)defaultWaveformImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __36__CKUIBehavior_defaultWaveformImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (defaultWaveformImage_once != -1)
    dispatch_once(&defaultWaveformImage_once, block);
  return (UIImage *)(id)defaultWaveformImage_sBehavior;
}

void __36__CKUIBehavior_defaultWaveformImage__block_invoke(uint64_t a1)
{
  void *v2;
  int v3;
  const __CFString *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isRichAudioMessagesEnabled");

  if (v3)
    v4 = CFSTR("DefaultWaveformImage");
  else
    v4 = CFSTR("DefaultWaveform");
  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "waveformDefaultImagePowerLevelCount");
  v7 = v6 * (double)(unint64_t)objc_msgSend(*(id *)(a1 + 32), "waveformPowerLevelWidthIncrement");
  objc_msgSend(*(id *)(a1 + 32), "waveformHeight");
  v9 = v8;
  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA610]), "initWithBounds:", 0.0, 0.0, v7, v8);
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __36__CKUIBehavior_defaultWaveformImage__block_invoke_2;
  v13[3] = &unk_1E2751E98;
  v15 = 0;
  v16 = 0;
  v14 = v5;
  v17 = v7;
  v18 = v9;
  objc_msgSend(v10, "imageWithActions:", v13);
  v11 = objc_claimAutoreleasedReturnValue();

  v12 = (void *)defaultWaveformImage_sBehavior;
  defaultWaveformImage_sBehavior = v11;

}

uint64_t __36__CKUIBehavior_defaultWaveformImage__block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "drawInRect:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

- (UIImage)quickSaveButtonImage
{
  if (quickSaveButtonImage_once != -1)
    dispatch_once(&quickSaveButtonImage_once, &__block_literal_global_347_0);
  return (UIImage *)(id)quickSaveButtonImage_sBehavior;
}

void __36__CKUIBehavior_quickSaveButtonImage__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("square.and.arrow.down"));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPointSize:weight:", 6, 16.0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "imageWithSymbolConfiguration:", v0);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)quickSaveButtonImage_sBehavior;
  quickSaveButtonImage_sBehavior = v1;

}

- (UIImage)quickPinButtonImage
{
  if (quickPinButtonImage_once != -1)
    dispatch_once(&quickPinButtonImage_once, &__block_literal_global_350_0);
  return (UIImage *)(id)quickPinButtonImage_sBehavior;
}

void __35__CKUIBehavior_quickPinButtonImage__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("pin"));
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPointSize:weight:", 6, 16.0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "imageWithSymbolConfiguration:", v0);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)quickPinButtonImage_sBehavior;
  quickPinButtonImage_sBehavior = v1;

}

- (UIImage)pinnedAdHocConversationRadiantShadowImage
{
  if (pinnedAdHocConversationRadiantShadowImage_once != -1)
    dispatch_once(&pinnedAdHocConversationRadiantShadowImage_once, &__block_literal_global_353);
  return (UIImage *)(id)pinnedAdHocConversationRadiantShadowImage_sBehavior;
}

void __57__CKUIBehavior_pinnedAdHocConversationRadiantShadowImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("circle.fill"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)pinnedAdHocConversationRadiantShadowImage_sBehavior;
  pinnedAdHocConversationRadiantShadowImage_sBehavior = v0;

}

- (UIImage)pinnedConversationFilteredByFocusIndicatorImage
{
  if (pinnedConversationFilteredByFocusIndicatorImage_once != -1)
    dispatch_once(&pinnedConversationFilteredByFocusIndicatorImage_once, &__block_literal_global_356);
  return (UIImage *)(id)pinnedConversationFilteredByFocusIndicatorImage_sBehavior;
}

void __63__CKUIBehavior_pinnedConversationFilteredByFocusIndicatorImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.fill"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)pinnedConversationFilteredByFocusIndicatorImage_sBehavior;
  pinnedConversationFilteredByFocusIndicatorImage_sBehavior = v0;

}

- (UIFont)nicknameLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)nicknameLabelFont_sContentSizeCategory_nicknameLabelFont, (UIContentSizeCategory)v2)|| nicknameLabelFont_sIsIncreaseContrastEnabled_nicknameLabelFont != v3|| nicknameLabelFont_sIsBoldTextEnabled_nicknameLabelFont != IsBoldTextEnabled|| (v10 = nicknameLabelFont_sTextFontSize_nicknameLabelFont, *(double *)&nicknameLabelFont_sTextFontSize_nicknameLabelFont != v5)|| (v10 = nicknameLabelFont_sCustomTextFontSize_nicknameLabelFont, *(double *)&nicknameLabelFont_sCustomTextFontSize_nicknameLabelFont != v6)|| (objc_msgSend((id)nicknameLabelFont_sCustomTextFontName_nicknameLabelFont, "isEqualToString:", v9, *(double *)&nicknameLabelFont_sCustomTextFontSize_nicknameLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB538], 2, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)nicknameLabelFont_sBehavior;
    nicknameLabelFont_sBehavior = v12;

    objc_storeStrong((id *)&nicknameLabelFont_sContentSizeCategory_nicknameLabelFont, v2);
    nicknameLabelFont_sIsIncreaseContrastEnabled_nicknameLabelFont = v3;
    nicknameLabelFont_sIsBoldTextEnabled_nicknameLabelFont = IsBoldTextEnabled;
    nicknameLabelFont_sTextFontSize_nicknameLabelFont = *(_QWORD *)&v5;
    nicknameLabelFont_sCustomTextFontSize_nicknameLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&nicknameLabelFont_sCustomTextFontName_nicknameLabelFont, v8);
  }
  v14 = (UIFont *)(id)nicknameLabelFont_sBehavior;

  return v14;
}

- (UIFont)nicknameDescriptionFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)nicknameDescriptionFont_sContentSizeCategory_nicknameDescriptionFont, (UIContentSizeCategory)v2)|| nicknameDescriptionFont_sIsIncreaseContrastEnabled_nicknameDescriptionFont != v3|| nicknameDescriptionFont_sIsBoldTextEnabled_nicknameDescriptionFont != IsBoldTextEnabled|| (v10 = nicknameDescriptionFont_sTextFontSize_nicknameDescriptionFont, *(double *)&nicknameDescriptionFont_sTextFontSize_nicknameDescriptionFont != v5)|| (v10 = nicknameDescriptionFont_sCustomTextFontSize_nicknameDescriptionFont, *(double *)&nicknameDescriptionFont_sCustomTextFontSize_nicknameDescriptionFont != v6)|| (objc_msgSend((id)nicknameDescriptionFont_sCustomTextFontName_nicknameDescriptionFont, "isEqualToString:", v9, *(double *)&nicknameDescriptionFont_sCustomTextFontSize_nicknameDescriptionFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)nicknameDescriptionFont_sBehavior;
    nicknameDescriptionFont_sBehavior = v12;

    objc_storeStrong((id *)&nicknameDescriptionFont_sContentSizeCategory_nicknameDescriptionFont, v2);
    nicknameDescriptionFont_sIsIncreaseContrastEnabled_nicknameDescriptionFont = v3;
    nicknameDescriptionFont_sIsBoldTextEnabled_nicknameDescriptionFont = IsBoldTextEnabled;
    nicknameDescriptionFont_sTextFontSize_nicknameDescriptionFont = *(_QWORD *)&v5;
    nicknameDescriptionFont_sCustomTextFontSize_nicknameDescriptionFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&nicknameDescriptionFont_sCustomTextFontName_nicknameDescriptionFont, v8);
  }
  v14 = (UIFont *)(id)nicknameDescriptionFont_sBehavior;

  return v14;
}

- (UIFont)pinningOnboardingSubtitleLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)pinningOnboardingSubtitleLabelFont_sContentSizeCategory_pinningOnboardingSubtitleLabelFont, (UIContentSizeCategory)v2)|| pinningOnboardingSubtitleLabelFont_sIsIncreaseContrastEnabled_pinningOnboardingSubtitleLabelFont != v3|| pinningOnboardingSubtitleLabelFont_sIsBoldTextEnabled_pinningOnboardingSubtitleLabelFont != IsBoldTextEnabled|| (v10 = pinningOnboardingSubtitleLabelFont_sTextFontSize_pinningOnboardingSubtitleLabelFont, *(double *)&pinningOnboardingSubtitleLabelFont_sTextFontSize_pinningOnboardingSubtitleLabelFont != v5)|| (v10 = pinningOnboardingSubtitleLabelFont_sCustomTextFontSize_pinningOnboardingSubtitleLabelFont, *(double *)&pinningOnboardingSubtitleLabelFont_sCustomTextFontSize_pinningOnboardingSubtitleLabelFont != v6)|| (objc_msgSend((id)pinningOnboardingSubtitleLabelFont_sCustomTextFontName_pinningOnboardingSubtitleLabelFont, "isEqualToString:", v9, *(double *)&pinningOnboardingSubtitleLabelFont_sCustomTextFontSize_pinningOnboardingSubtitleLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)pinningOnboardingSubtitleLabelFont_sBehavior;
    pinningOnboardingSubtitleLabelFont_sBehavior = v12;

    objc_storeStrong((id *)&pinningOnboardingSubtitleLabelFont_sContentSizeCategory_pinningOnboardingSubtitleLabelFont, v2);
    pinningOnboardingSubtitleLabelFont_sIsIncreaseContrastEnabled_pinningOnboardingSubtitleLabelFont = v3;
    pinningOnboardingSubtitleLabelFont_sIsBoldTextEnabled_pinningOnboardingSubtitleLabelFont = IsBoldTextEnabled;
    pinningOnboardingSubtitleLabelFont_sTextFontSize_pinningOnboardingSubtitleLabelFont = *(_QWORD *)&v5;
    pinningOnboardingSubtitleLabelFont_sCustomTextFontSize_pinningOnboardingSubtitleLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&pinningOnboardingSubtitleLabelFont_sCustomTextFontName_pinningOnboardingSubtitleLabelFont, v8);
  }
  v14 = (UIFont *)(id)pinningOnboardingSubtitleLabelFont_sBehavior;

  return v14;
}

- (Class)transcriptCollectionViewControllerClass
{
  if (transcriptCollectionViewControllerClass_once != -1)
    dispatch_once(&transcriptCollectionViewControllerClass_once, &__block_literal_global_357);
  return (Class)(id)transcriptCollectionViewControllerClass_sBehavior;
}

uint64_t __55__CKUIBehavior_transcriptCollectionViewControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  transcriptCollectionViewControllerClass_sBehavior = result;
  return result;
}

- (Class)chatControllerClass
{
  if (chatControllerClass_once != -1)
    dispatch_once(&chatControllerClass_once, &__block_literal_global_359);
  return (Class)(id)chatControllerClass_sBehavior;
}

uint64_t __35__CKUIBehavior_chatControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  chatControllerClass_sBehavior = result;
  return result;
}

- (Class)composeChatControllerClass
{
  if (composeChatControllerClass_once != -1)
    dispatch_once(&composeChatControllerClass_once, &__block_literal_global_361_0);
  return (Class)(id)composeChatControllerClass_sBehavior;
}

uint64_t __42__CKUIBehavior_composeChatControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  composeChatControllerClass_sBehavior = result;
  return result;
}

- (Class)businessChatControllerClass
{
  if (businessChatControllerClass_once != -1)
    dispatch_once(&businessChatControllerClass_once, &__block_literal_global_363_1);
  return (Class)(id)businessChatControllerClass_sBehavior;
}

uint64_t __43__CKUIBehavior_businessChatControllerClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  businessChatControllerClass_sBehavior = result;
  return result;
}

- (BOOL)shouldBackfillTranscript
{
  if (shouldBackfillTranscript_once != -1)
    dispatch_once(&shouldBackfillTranscript_once, &__block_literal_global_365_0);
  return shouldBackfillTranscript_sBehavior;
}

void __40__CKUIBehavior_shouldBackfillTranscript__block_invoke()
{
  void *v0;
  uint64_t v1;
  char v2;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "_graphicsQuality");

  if (v1 == 10)
    v2 = IMIsRunningInMessagesComposeViewService() ^ 1;
  else
    v2 = 1;
  shouldBackfillTranscript_sBehavior = v2;
}

- (BOOL)shouldUseSendAnimation
{
  if (shouldUseSendAnimation_once != -1)
    dispatch_once(&shouldUseSendAnimation_once, &__block_literal_global_366_0);
  return 0;
}

- (double)sendAnimationDuration
{
  if (sendAnimationDuration_once != -1)
    dispatch_once(&sendAnimationDuration_once, &__block_literal_global_367_0);
  return *(double *)&sendAnimationDuration_sBehavior;
}

void __37__CKUIBehavior_sendAnimationDuration__block_invoke()
{
  sendAnimationDuration_sBehavior = 0x3FD99999A0000000;
}

- (double)transcriptResortTimeout
{
  if (transcriptResortTimeout_once != -1)
    dispatch_once(&transcriptResortTimeout_once, &__block_literal_global_368_0);
  return *(double *)&transcriptResortTimeout_sBehavior;
}

void __39__CKUIBehavior_transcriptResortTimeout__block_invoke()
{
  transcriptResortTimeout_sBehavior = 0x4072C00000000000;
}

- (BOOL)showsProgressInNavigationBar
{
  if (showsProgressInNavigationBar_once != -1)
    dispatch_once(&showsProgressInNavigationBar_once, &__block_literal_global_369_0);
  return showsProgressInNavigationBar_sBehavior;
}

void __44__CKUIBehavior_showsProgressInNavigationBar__block_invoke()
{
  showsProgressInNavigationBar_sBehavior = 1;
}

- (double)sendProgressTitleTransitionProgressThreshold
{
  if (sendProgressTitleTransitionProgressThreshold_once != -1)
    dispatch_once(&sendProgressTitleTransitionProgressThreshold_once, &__block_literal_global_370_0);
  return *(double *)&sendProgressTitleTransitionProgressThreshold_sBehavior;
}

void __60__CKUIBehavior_sendProgressTitleTransitionProgressThreshold__block_invoke()
{
  sendProgressTitleTransitionProgressThreshold_sBehavior = 0x3FE0000000000000;
}

- (BOOL)shouldHideStatusBarForFullScreenEffects
{
  if (shouldHideStatusBarForFullScreenEffects_once != -1)
    dispatch_once(&shouldHideStatusBarForFullScreenEffects_once, &__block_literal_global_371_1);
  return shouldHideStatusBarForFullScreenEffects_sBehavior;
}

void __55__CKUIBehavior_shouldHideStatusBarForFullScreenEffects__block_invoke()
{
  shouldHideStatusBarForFullScreenEffects_sBehavior = 1;
}

- (BOOL)effectPickerPresentsSelectionView
{
  if (effectPickerPresentsSelectionView_once != -1)
    dispatch_once(&effectPickerPresentsSelectionView_once, &__block_literal_global_372_0);
  return 0;
}

- (BOOL)effectPickerShowsCloseButton
{
  if (effectPickerShowsCloseButton_once != -1)
    dispatch_once(&effectPickerShowsCloseButton_once, &__block_literal_global_373_0);
  return 0;
}

- (int64_t)transcriptContentInsetBehavior
{
  if (transcriptContentInsetBehavior_once != -1)
    dispatch_once(&transcriptContentInsetBehavior_once, &__block_literal_global_374_1);
  if (transcriptContentInsetBehavior_sBehavior)
    return 2;
  else
    return 0;
}

void __46__CKUIBehavior_transcriptContentInsetBehavior__block_invoke()
{
  transcriptContentInsetBehavior_sBehavior = 1;
}

- (double)progressThresholdForTitleUpdateAnimation
{
  return 0.2;
}

- (double)_transcriptAnimationScaleFactor
{
  return 1.0;
}

- (double)fadeInBubbleAnimationDuration
{
  double v2;

  -[CKUIBehavior _transcriptAnimationScaleFactor](self, "_transcriptAnimationScaleFactor");
  return v2 * 0.5;
}

- (double)fadeInReplyPreviewAnimationDuration
{
  return 0.3;
}

- (double)scrollInNewMessageAnimationDuration
{
  double v2;

  -[CKUIBehavior _transcriptAnimationScaleFactor](self, "_transcriptAnimationScaleFactor");
  return v2 * 0.3;
}

- (double)throwMessageAnimationDuration
{
  double v2;

  -[CKUIBehavior _transcriptAnimationScaleFactor](self, "_transcriptAnimationScaleFactor");
  return v2 * 0.5;
}

- (double)resizeMessageEntryViewAnimationDuration
{
  double v2;

  -[CKUIBehavior _transcriptAnimationScaleFactor](self, "_transcriptAnimationScaleFactor");
  return v2 * 0.1;
}

- (double)editingTransitionAnimationDuration
{
  double v2;

  -[CKUIBehavior _transcriptAnimationScaleFactor](self, "_transcriptAnimationScaleFactor");
  return v2 * 0.3;
}

- (double)updateTranscriptInsetsAnimationDuration
{
  double v2;

  -[CKUIBehavior _transcriptAnimationScaleFactor](self, "_transcriptAnimationScaleFactor");
  return v2 * 0.2;
}

- (UIImage)messageEditingRejectButtonImage
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithTextStyle:scale:", *MEMORY[0x1E0CEB5B8], 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "systemGray2Color");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "systemGray5Color");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dynamicColorWithLightColor:darkColor:", v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0CEA478], "systemWhiteColor");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v8;
  v14[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "configurationWithPaletteColors:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "configurationByApplyingConfiguration:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("xmark.circle.fill"), v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIImage *)v12;
}

- (UIImage)messageEditingBlueConfirmButtonImage
{
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemBlueColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKUIBehavior _messageEditingConfirmButtonImageWithButtonColor:](self, "_messageEditingConfirmButtonImageWithButtonColor:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIImage *)v4;
}

- (UIImage)messageEditingGreenConfirmButtonImage
{
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemGreenColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKUIBehavior _messageEditingConfirmButtonImageWithButtonColor:](self, "_messageEditingConfirmButtonImageWithButtonColor:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIImage *)v4;
}

- (id)_messageEditingConfirmButtonImageWithButtonColor:(id)a3
{
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CEA650];
  v4 = *MEMORY[0x1E0CEB5B8];
  v5 = a3;
  objc_msgSend(v3, "configurationWithTextStyle:scale:", v4, 3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0CEA478], "systemWhiteColor");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v8;
  v14[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "configurationWithPaletteColors:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "configurationByApplyingConfiguration:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("checkmark.circle.fill"), v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

- (UIImage)messageEditingConfirmDisabledButtonImage
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithTextStyle:scale:", *MEMORY[0x1E0CEB5B8], 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0CEA478], "systemWhiteColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v4;
  objc_msgSend(MEMORY[0x1E0CEA478], "systemGray5Color");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "configurationWithPaletteColors:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "configurationByApplyingConfiguration:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("checkmark.circle.fill"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIImage *)v9;
}

- (UIButtonConfiguration)messageEditingRejectButtonBaseConfiguration
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "plainButtonConfiguration");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "background");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setBackgroundColor:", v3);

  objc_msgSend(v2, "setContentInsets:", *MEMORY[0x1E0CEA080], *(double *)(MEMORY[0x1E0CEA080] + 8), *(double *)(MEMORY[0x1E0CEA080] + 16), *(double *)(MEMORY[0x1E0CEA080] + 24));
  return (UIButtonConfiguration *)v2;
}

- (UIButtonConfiguration)messageEditingConfirmButtonBaseConfiguration
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "plainButtonConfiguration");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "background");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setBackgroundColor:", v3);

  objc_msgSend(v2, "setContentInsets:", *MEMORY[0x1E0CEA080], *(double *)(MEMORY[0x1E0CEA080] + 8), *(double *)(MEMORY[0x1E0CEA080] + 16), *(double *)(MEMORY[0x1E0CEA080] + 24));
  return (UIButtonConfiguration *)v2;
}

- (void)updateMessageEditingConfirmButtonConfiguration:(id)a3 forButtonColor:(char)a4 isEnabled:(BOOL)a5
{
  int v6;
  uint64_t v8;
  void *v9;
  id v10;

  v6 = a4;
  v10 = a3;
  if (a5)
  {
    if (v6)
      -[CKUIBehavior messageEditingBlueConfirmButtonImage](self, "messageEditingBlueConfirmButtonImage");
    else
      -[CKUIBehavior messageEditingGreenConfirmButtonImage](self, "messageEditingGreenConfirmButtonImage");
    v8 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[CKUIBehavior messageEditingConfirmDisabledButtonImage](self, "messageEditingConfirmDisabledButtonImage");
    v8 = objc_claimAutoreleasedReturnValue();
  }
  v9 = (void *)v8;
  objc_msgSend(v10, "setImage:", v8);

}

- (UIFont)readerFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)readerFont_sContentSizeCategory_readerFont, (UIContentSizeCategory)v2)|| readerFont_sIsIncreaseContrastEnabled_readerFont != v3|| readerFont_sIsBoldTextEnabled_readerFont != IsBoldTextEnabled|| (v10 = readerFont_sTextFontSize_readerFont, *(double *)&readerFont_sTextFontSize_readerFont != v5)|| (v10 = readerFont_sCustomTextFontSize_readerFont, *(double *)&readerFont_sCustomTextFontSize_readerFont != v6)|| (objc_msgSend((id)readerFont_sCustomTextFontName_readerFont, "isEqualToString:", v9, *(double *)&readerFont_sCustomTextFontSize_readerFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)readerFont_sBehavior;
    readerFont_sBehavior = v11;

    objc_storeStrong((id *)&readerFont_sContentSizeCategory_readerFont, v2);
    readerFont_sIsIncreaseContrastEnabled_readerFont = v3;
    readerFont_sIsBoldTextEnabled_readerFont = IsBoldTextEnabled;
    readerFont_sTextFontSize_readerFont = *(_QWORD *)&v5;
    readerFont_sCustomTextFontSize_readerFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&readerFont_sCustomTextFontName_readerFont, v8);
  }
  v13 = (UIFont *)(id)readerFont_sBehavior;

  return v13;
}

- (double)readerContentInset
{
  if (readerContentInset_once != -1)
    dispatch_once(&readerContentInset_once, &__block_literal_global_380_0);
  return *(double *)&readerContentInset_sBehavior;
}

void __34__CKUIBehavior_readerContentInset__block_invoke()
{
  readerContentInset_sBehavior = 0x402E000000000000;
}

- (UIEdgeInsets)readerInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __28__CKUIBehavior_readerInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (readerInsets_once != -1)
    dispatch_once(&readerInsets_once, block);
  v2 = *(double *)&readerInsets_sBehavior_0;
  v3 = *(double *)&readerInsets_sBehavior_2;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v3;
  result.left = v4;
  result.top = v2;
  return result;
}

uint64_t __28__CKUIBehavior_readerInsets__block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  objc_msgSend(*(id *)(a1 + 32), "readerContentInset");
  v3 = v2;
  result = objc_msgSend(*(id *)(a1 + 32), "readerContentInset");
  readerInsets_sBehavior_0 = v3;
  readerInsets_sBehavior_2 = v5;
  return result;
}

- (UIImage)forwardImage
{
  if (forwardImage_once != -1)
    dispatch_once(&forwardImage_once, &__block_literal_global_381_0);
  return (UIImage *)(id)forwardImage_sBehavior;
}

void __28__CKUIBehavior_forwardImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("arrowshape.turn.up.forward"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "appTintColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_flatImageWithColor:", v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)forwardImage_sBehavior;
  forwardImage_sBehavior = v3;

}

- (NSAttributedString)statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSAttributedString *v18;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sContentSizeCategory_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen, (UIContentSizeCategory)v3)|| statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sIsIncreaseContrastEnabled_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen != v4|| statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sIsBoldTextEnabled_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen != IsBoldTextEnabled|| *(double *)&statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sTextFontSize_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen != v6|| *(double *)&statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sCustomTextFontSize_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen != v7|| (objc_msgSend((id)statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sCustomTextFontName_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen, "isEqualToString:", v10, *(double *)&statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sCustomTextFontSize_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen) & 1) == 0)
  {
    v12 = objc_alloc(MEMORY[0x1E0CB3498]);
    IMSharedUtilitiesFrameworkBundle();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("MESSAGE_SOMEONE_SUBTEXT"), &stru_1E276D870, CFSTR("CommSafetyLocalizable"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKUIBehavior centerTranscriptButtonTextAttributes](self, "centerTranscriptButtonTextAttributes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v12, "initWithString:attributes:", v14, v15);

    v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v17 = (void *)statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sBehavior;
    statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sBehavior = v16;

    objc_storeStrong((id *)&statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sContentSizeCategory_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen, v3);
    statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sIsIncreaseContrastEnabled_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen = v4;
    statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sIsBoldTextEnabled_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen = IsBoldTextEnabled;
    statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sTextFontSize_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen = *(_QWORD *)&v6;
    statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sCustomTextFontSize_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen = *(_QWORD *)&v7;
    objc_storeStrong((id *)&statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen_sCustomTextFontName_statusCommSafetyMessageSomeoneButtonTranscriptTextOverThirteen, v9);
  }
  v18 = (NSAttributedString *)(id)v11[105];

  return v18;
}

- (NSAttributedString)statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSAttributedString *v18;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sContentSizeCategory_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen, (UIContentSizeCategory)v3)|| statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sIsIncreaseContrastEnabled_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen != v4|| statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sIsBoldTextEnabled_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen != IsBoldTextEnabled|| *(double *)&statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sTextFontSize_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen != v6|| *(double *)&statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sCustomTextFontSize_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen != v7|| (objc_msgSend((id)statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sCustomTextFontName_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen, "isEqualToString:", v10, *(double *)&statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sCustomTextFontSize_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen) & 1) == 0)
  {
    v12 = objc_alloc(MEMORY[0x1E0CB3498]);
    IMSharedUtilitiesFrameworkBundle();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("MESSAGE_GROWNUP_SUBTEXT"), &stru_1E276D870, CFSTR("CommSafetyLocalizable"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKUIBehavior centerTranscriptButtonTextAttributes](self, "centerTranscriptButtonTextAttributes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v12, "initWithString:attributes:", v14, v15);

    v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v17 = (void *)statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sBehavior;
    statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sBehavior = v16;

    objc_storeStrong((id *)&statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sContentSizeCategory_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen, v3);
    statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sIsIncreaseContrastEnabled_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen = v4;
    statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sIsBoldTextEnabled_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen = IsBoldTextEnabled;
    statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sTextFontSize_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen = *(_QWORD *)&v6;
    statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sCustomTextFontSize_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen = *(_QWORD *)&v7;
    objc_storeStrong((id *)&statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen_sCustomTextFontName_statusCommSafetyMessageGrownupButtonTranscriptTextUnderThirteen, v9);
  }
  v18 = (NSAttributedString *)(id)v11[108];

  return v18;
}

- (NSAttributedString)statusCommSafetySensitiveReceiveButtonTranscriptText
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  NSAttributedString *v15;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)statusCommSafetySensitiveReceiveButtonTranscriptText_sContentSizeCategory_statusCommSafetySensitiveReceiveButtonTranscriptText, (UIContentSizeCategory)v2)|| statusCommSafetySensitiveReceiveButtonTranscriptText_sIsIncreaseContrastEnabled_statusCommSafetySensitiveReceiveButtonTranscriptText != v3|| statusCommSafetySensitiveReceiveButtonTranscriptText_sIsBoldTextEnabled_statusCommSafetySensitiveReceiveButtonTranscriptText != IsBoldTextEnabled|| *(double *)&statusCommSafetySensitiveReceiveButtonTranscriptText_sTextFontSize_statusCommSafetySensitiveReceiveButtonTranscriptText != v5|| *(double *)&statusCommSafetySensitiveReceiveButtonTranscriptText_sCustomTextFontSize_statusCommSafetySensitiveReceiveButtonTranscriptText != v6|| (objc_msgSend((id)statusCommSafetySensitiveReceiveButtonTranscriptText_sCustomTextFontName_statusCommSafetySensitiveReceiveButtonTranscriptText, "isEqualToString:", v9, *(double *)&statusCommSafetySensitiveReceiveButtonTranscriptText_sCustomTextFontSize_statusCommSafetySensitiveReceiveButtonTranscriptText) & 1) == 0)
  {
    v10 = objc_alloc(MEMORY[0x1E0CB3498]);
    IMSharedUtilitiesFrameworkBundle();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("VIEW_PHOTO"), &stru_1E276D870, CFSTR("CommSafetyLocalizable"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v10, "initWithString:attributes:", v12, 0);

    v14 = (void *)statusCommSafetySensitiveReceiveButtonTranscriptText_sBehavior;
    statusCommSafetySensitiveReceiveButtonTranscriptText_sBehavior = v13;

    objc_storeStrong((id *)&statusCommSafetySensitiveReceiveButtonTranscriptText_sContentSizeCategory_statusCommSafetySensitiveReceiveButtonTranscriptText, v2);
    statusCommSafetySensitiveReceiveButtonTranscriptText_sIsIncreaseContrastEnabled_statusCommSafetySensitiveReceiveButtonTranscriptText = v3;
    statusCommSafetySensitiveReceiveButtonTranscriptText_sIsBoldTextEnabled_statusCommSafetySensitiveReceiveButtonTranscriptText = IsBoldTextEnabled;
    statusCommSafetySensitiveReceiveButtonTranscriptText_sTextFontSize_statusCommSafetySensitiveReceiveButtonTranscriptText = *(_QWORD *)&v5;
    statusCommSafetySensitiveReceiveButtonTranscriptText_sCustomTextFontSize_statusCommSafetySensitiveReceiveButtonTranscriptText = *(_QWORD *)&v6;
    objc_storeStrong((id *)&statusCommSafetySensitiveReceiveButtonTranscriptText_sCustomTextFontName_statusCommSafetySensitiveReceiveButtonTranscriptText, v8);
  }
  v15 = (NSAttributedString *)(id)statusCommSafetySensitiveReceiveButtonTranscriptText_sBehavior;

  return v15;
}

- (NSAttributedString)statusCommSafetySensitiveReceiveMultiButtonTranscriptText
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  NSAttributedString *v15;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sContentSizeCategory_statusCommSafetySensitiveReceiveMultiButtonTranscriptText, (UIContentSizeCategory)v2)|| statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sIsIncreaseContrastEnabled_statusCommSafetySensitiveReceiveMultiButtonTranscriptText != v3|| statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sIsBoldTextEnabled_statusCommSafetySensitiveReceiveMultiButtonTranscriptText != IsBoldTextEnabled|| *(double *)&statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sTextFontSize_statusCommSafetySensitiveReceiveMultiButtonTranscriptText != v5|| *(double *)&statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sCustomTextFontSize_statusCommSafetySensitiveReceiveMultiButtonTranscriptText != v6|| (objc_msgSend((id)statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sCustomTextFontName_statusCommSafetySensitiveReceiveMultiButtonTranscriptText, "isEqualToString:", v9, *(double *)&statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sCustomTextFontSize_statusCommSafetySensitiveReceiveMultiButtonTranscriptText) & 1) == 0)
  {
    v10 = objc_alloc(MEMORY[0x1E0CB3498]);
    IMSharedUtilitiesFrameworkBundle();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("VIEW_PHOTOS"), &stru_1E276D870, CFSTR("CommSafetyLocalizable"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v10, "initWithString:attributes:", v12, 0);

    v14 = (void *)statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sBehavior;
    statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sBehavior = v13;

    objc_storeStrong((id *)&statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sContentSizeCategory_statusCommSafetySensitiveReceiveMultiButtonTranscriptText, v2);
    statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sIsIncreaseContrastEnabled_statusCommSafetySensitiveReceiveMultiButtonTranscriptText = v3;
    statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sIsBoldTextEnabled_statusCommSafetySensitiveReceiveMultiButtonTranscriptText = IsBoldTextEnabled;
    statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sTextFontSize_statusCommSafetySensitiveReceiveMultiButtonTranscriptText = *(_QWORD *)&v5;
    statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sCustomTextFontSize_statusCommSafetySensitiveReceiveMultiButtonTranscriptText = *(_QWORD *)&v6;
    objc_storeStrong((id *)&statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sCustomTextFontName_statusCommSafetySensitiveReceiveMultiButtonTranscriptText, v8);
  }
  v15 = (NSAttributedString *)(id)statusCommSafetySensitiveReceiveMultiButtonTranscriptText_sBehavior;

  return v15;
}

- (UIFont)sensitiveLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)sensitiveLabelFont_sContentSizeCategory_sensitiveLabelFont, (UIContentSizeCategory)v2)|| sensitiveLabelFont_sIsIncreaseContrastEnabled_sensitiveLabelFont != v3|| sensitiveLabelFont_sIsBoldTextEnabled_sensitiveLabelFont != IsBoldTextEnabled|| (v10 = sensitiveLabelFont_sTextFontSize_sensitiveLabelFont, *(double *)&sensitiveLabelFont_sTextFontSize_sensitiveLabelFont != v5)|| (v10 = sensitiveLabelFont_sCustomTextFontSize_sensitiveLabelFont, *(double *)&sensitiveLabelFont_sCustomTextFontSize_sensitiveLabelFont != v6)|| (objc_msgSend((id)sensitiveLabelFont_sCustomTextFontName_sensitiveLabelFont, "isEqualToString:", v9, *(double *)&sensitiveLabelFont_sCustomTextFontSize_sensitiveLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)sensitiveLabelFont_sBehavior;
    sensitiveLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&sensitiveLabelFont_sContentSizeCategory_sensitiveLabelFont, v2);
    sensitiveLabelFont_sIsIncreaseContrastEnabled_sensitiveLabelFont = v3;
    sensitiveLabelFont_sIsBoldTextEnabled_sensitiveLabelFont = IsBoldTextEnabled;
    sensitiveLabelFont_sTextFontSize_sensitiveLabelFont = *(_QWORD *)&v5;
    sensitiveLabelFont_sCustomTextFontSize_sensitiveLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&sensitiveLabelFont_sCustomTextFontName_sensitiveLabelFont, v8);
  }
  v13 = (UIFont *)(id)sensitiveLabelFont_sBehavior;

  return v13;
}

- (UIColor)sensitiveLabelColor
{
  if (sensitiveLabelColor_once != -1)
    dispatch_once(&sensitiveLabelColor_once, &__block_literal_global_395);
  return (UIColor *)(id)sensitiveLabelColor_sBehavior;
}

void __35__CKUIBehavior_sensitiveLabelColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "secondaryLabelColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)sensitiveLabelColor_sBehavior;
  sensitiveLabelColor_sBehavior = v0;

}

- (double)sensitiveLabelPadding
{
  if (sensitiveLabelPadding_once != -1)
    dispatch_once(&sensitiveLabelPadding_once, &__block_literal_global_396);
  return *(double *)&sensitiveLabelPadding_sBehavior;
}

void __37__CKUIBehavior_sensitiveLabelPadding__block_invoke()
{
  sensitiveLabelPadding_sBehavior = 0x4034000000000000;
}

- (UIColor)obscurableBalloonElementTintColor
{
  if (obscurableBalloonElementTintColor_once != -1)
    dispatch_once(&obscurableBalloonElementTintColor_once, &__block_literal_global_397_0);
  return (UIColor *)(id)obscurableBalloonElementTintColor_sBehavior;
}

void __49__CKUIBehavior_obscurableBalloonElementTintColor__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "colorWithAlphaComponent:", 0.8);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)obscurableBalloonElementTintColor_sBehavior;
  obscurableBalloonElementTintColor_sBehavior = v0;

}

- (UIColor)obscurableBalloonBadgeTintColor
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __47__CKUIBehavior_obscurableBalloonBadgeTintColor__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (obscurableBalloonBadgeTintColor_once != -1)
    dispatch_once(&obscurableBalloonBadgeTintColor_once, block);
  return (UIColor *)(id)obscurableBalloonBadgeTintColor_sBehavior;
}

void __47__CKUIBehavior_obscurableBalloonBadgeTintColor__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "sensitiveLabelColor");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)obscurableBalloonBadgeTintColor_sBehavior;
  obscurableBalloonBadgeTintColor_sBehavior = v1;

}

- (double)obscurableBalloonHorizontalPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __50__CKUIBehavior_obscurableBalloonHorizontalPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (obscurableBalloonHorizontalPadding_once != -1)
    dispatch_once(&obscurableBalloonHorizontalPadding_once, block);
  return *(double *)&obscurableBalloonHorizontalPadding_sBehavior;
}

void __50__CKUIBehavior_obscurableBalloonHorizontalPadding__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  void *v3;
  uint64_t v4;
  double v5;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v2 = v1;
  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceLayoutDirection");

  v5 = 7.0;
  if (v4 == 1)
    v5 = v2 + 7.0;
  obscurableBalloonHorizontalPadding_sBehavior = *(_QWORD *)&v5;
}

- (double)obscurableBalloonVerticalPadding
{
  if (obscurableBalloonVerticalPadding_once != -1)
    dispatch_once(&obscurableBalloonVerticalPadding_once, &__block_literal_global_398_2);
  return *(double *)&obscurableBalloonVerticalPadding_sBehavior;
}

void __48__CKUIBehavior_obscurableBalloonVerticalPadding__block_invoke()
{
  obscurableBalloonVerticalPadding_sBehavior = 0x401C000000000000;
}

- (int64_t)obscurableBalloonBlurMaterial
{
  if (obscurableBalloonBlurMaterial_once != -1)
    dispatch_once(&obscurableBalloonBlurMaterial_once, &__block_literal_global_399);
  if (obscurableBalloonBlurMaterial_sBehavior)
    return 12;
  else
    return 0;
}

void __45__CKUIBehavior_obscurableBalloonBlurMaterial__block_invoke()
{
  obscurableBalloonBlurMaterial_sBehavior = 1;
}

- (int64_t)obscurableBalloonButtonBlurMaterial
{
  if (obscurableBalloonButtonBlurMaterial_once != -1)
    dispatch_once(&obscurableBalloonButtonBlurMaterial_once, &__block_literal_global_400);
  if (obscurableBalloonButtonBlurMaterial_sBehavior)
    return 16;
  else
    return 0;
}

void __51__CKUIBehavior_obscurableBalloonButtonBlurMaterial__block_invoke()
{
  obscurableBalloonButtonBlurMaterial_sBehavior = 1;
}

- (int64_t)obscurableBalloonBlurMaterialInterfaceStyle
{
  if (obscurableBalloonBlurMaterialInterfaceStyle_once != -1)
    dispatch_once(&obscurableBalloonBlurMaterialInterfaceStyle_once, &__block_literal_global_401_0);
  return obscurableBalloonBlurMaterialInterfaceStyle_sBehavior;
}

void __59__CKUIBehavior_obscurableBalloonBlurMaterialInterfaceStyle__block_invoke()
{
  obscurableBalloonBlurMaterialInterfaceStyle_sBehavior = 1;
}

- (UIButtonConfiguration)obscurableBalloonShowButtonConfiguration
{
  if (obscurableBalloonShowButtonConfiguration_once != -1)
    dispatch_once(&obscurableBalloonShowButtonConfiguration_once, &__block_literal_global_402);
  return (UIButtonConfiguration *)(id)obscurableBalloonShowButtonConfiguration_sBehavior;
}

void __56__CKUIBehavior_obscurableBalloonShowButtonConfiguration__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA3A8], "plainButtonConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA370], "clearConfiguration");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "secondarySystemFillColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setBackgroundColor:", v3);

  objc_msgSend(v0, "setBackground:", v1);
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("eye.fill"), v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setImage:", v4);

  objc_msgSend(v0, "setImagePlacement:", 2);
  objc_msgSend(MEMORY[0x1E0CEA478], "labelColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setBaseForegroundColor:", v5);

  objc_msgSend(v0, "setCornerStyle:", 4);
  objc_msgSend(v0, "setImagePadding:", 6.0);
  v6 = objc_alloc(MEMORY[0x1E0CB3498]);
  IMSharedUtilitiesFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("SENSITIVE_CONTENT_SHOW_BUTTON_TITLE"), &stru_1E276D870, CFSTR("CommSafetyLocalizable"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = *MEMORY[0x1E0DC1138];
  objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, &v13, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v6, "initWithString:attributes:", v8, v10);
  objc_msgSend(v0, "setAttributedTitle:", v11);

  v12 = (void *)obscurableBalloonShowButtonConfiguration_sBehavior;
  obscurableBalloonShowButtonConfiguration_sBehavior = (uint64_t)v0;

}

- (UIButtonConfiguration)obscurableBalloonWarningButtonConfiguration
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __59__CKUIBehavior_obscurableBalloonWarningButtonConfiguration__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (obscurableBalloonWarningButtonConfiguration_once != -1)
    dispatch_once(&obscurableBalloonWarningButtonConfiguration_once, block);
  return (UIButtonConfiguration *)(id)obscurableBalloonWarningButtonConfiguration_sBehavior;
}

void __59__CKUIBehavior_obscurableBalloonWarningButtonConfiguration__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  void *v10;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "plainButtonConfiguration");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("exclamationmark.triangle.fill"), v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setImage:", v4);

  objc_msgSend(MEMORY[0x1E0CEA478], "labelColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setBaseForegroundColor:", v5);

  objc_msgSend(v2, "setCornerStyle:", 4);
  objc_msgSend(*(id *)(a1 + 32), "sensitiveLabelFont");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_scaledValueForValue:", 1.0);
  v8 = v7;

  objc_msgSend(v2, "contentInsets");
  objc_msgSend(v2, "setContentInsets:", v9 - v8);

  v10 = (void *)obscurableBalloonWarningButtonConfiguration_sBehavior;
  obscurableBalloonWarningButtonConfiguration_sBehavior = (uint64_t)v2;

}

- (UIBackgroundConfiguration)obscurableBalloonWarningButtonBackgroundConfigurationObscured
{
  if (obscurableBalloonWarningButtonBackgroundConfigurationObscured_once != -1)
    dispatch_once(&obscurableBalloonWarningButtonBackgroundConfigurationObscured_once, &__block_literal_global_410_0);
  return (UIBackgroundConfiguration *)(id)obscurableBalloonWarningButtonBackgroundConfigurationObscured_sBehavior;
}

void __77__CKUIBehavior_obscurableBalloonWarningButtonBackgroundConfigurationObscured__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CEA370], "clearConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "secondarySystemFillColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setBackgroundColor:", v1);

  v2 = (void *)obscurableBalloonWarningButtonBackgroundConfigurationObscured_sBehavior;
  obscurableBalloonWarningButtonBackgroundConfigurationObscured_sBehavior = (uint64_t)v0;

}

- (UIBackgroundConfiguration)obscurableBalloonWarningButtonBackgroundConfigurationRevealed
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __77__CKUIBehavior_obscurableBalloonWarningButtonBackgroundConfigurationRevealed__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (obscurableBalloonWarningButtonBackgroundConfigurationRevealed_once != -1)
    dispatch_once(&obscurableBalloonWarningButtonBackgroundConfigurationRevealed_once, block);
  return (UIBackgroundConfiguration *)(id)obscurableBalloonWarningButtonBackgroundConfigurationRevealed_sBehavior;
}

void __77__CKUIBehavior_obscurableBalloonWarningButtonBackgroundConfigurationRevealed__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0CEA370], "clearConfiguration");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA398], "effectWithStyle:", objc_msgSend(*(id *)(a1 + 32), "obscurableBalloonButtonBlurMaterial"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setVisualEffect:", v3);

  v4 = (void *)obscurableBalloonWarningButtonBackgroundConfigurationRevealed_sBehavior;
  obscurableBalloonWarningButtonBackgroundConfigurationRevealed_sBehavior = (uint64_t)v2;

}

- (UIImage)obscurableBalloonObscuredContentBadgeImage
{
  if (obscurableBalloonObscuredContentBadgeImage_once != -1)
    dispatch_once(&obscurableBalloonObscuredContentBadgeImage_once, &__block_literal_global_411_1);
  return (UIImage *)(id)obscurableBalloonObscuredContentBadgeImage_sBehavior;
}

void __58__CKUIBehavior_obscurableBalloonObscuredContentBadgeImage__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithTextStyle:", *MEMORY[0x1E0CEB538]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("eye.slash.fill"), v0);
  v1 = objc_claimAutoreleasedReturnValue();

  v2 = (void *)obscurableBalloonObscuredContentBadgeImage_sBehavior;
  obscurableBalloonObscuredContentBadgeImage_sBehavior = v1;

}

- (CGSize)obscuredBalloonMinimumSizeForAdult
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  BOOL v23;
  CGSize result;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)obscuredBalloonMinimumSizeForAdult_sContentSizeCategory_obscuredBalloonMinimumSizeForAdult, (UIContentSizeCategory)v3)|| obscuredBalloonMinimumSizeForAdult_sIsBoldTextEnabled_obscuredBalloonMinimumSizeForAdult != IsBoldTextEnabled|| (*(double *)&obscuredBalloonMinimumSizeForAdult_sTextFontSize_obscuredBalloonMinimumSizeForAdult == v5? (v23 = *(double *)&obscuredBalloonMinimumSizeForAdult_sCustomTextFontSize_obscuredBalloonMinimumSizeForAdult == v6): (v23 = 0), !v23|| (objc_msgSend((id)obscuredBalloonMinimumSizeForAdult_sCustomTextFontName_obscuredBalloonMinimumSizeForAdult, "isEqualToString:", v9, *(double *)&obscuredBalloonMinimumSizeForAdult_sTextFontSize_obscuredBalloonMinimumSizeForAdult, *(double *)&obscuredBalloonMinimumSizeForAdult_sCustomTextFontSize_obscuredBalloonMinimumSizeForAdult) & 1) == 0))
  {
    -[CKUIBehavior sensitiveLabelFont](self, "sensitiveLabelFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 120.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    v14 = round(v12 * v13) / v13;
    -[CKUIBehavior sensitiveLabelFont](self, "sensitiveLabelFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_scaledValueForValue:", 120.0);
    v17 = v16;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v18 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v18 = 1.0;
    obscuredBalloonMinimumSizeForAdult_sBehavior_0 = *(_QWORD *)&v14;
    *(double *)&obscuredBalloonMinimumSizeForAdult_sBehavior_1 = round(v17 * v18) / v18;

    objc_storeStrong((id *)&obscuredBalloonMinimumSizeForAdult_sContentSizeCategory_obscuredBalloonMinimumSizeForAdult, v3);
    obscuredBalloonMinimumSizeForAdult_sIsBoldTextEnabled_obscuredBalloonMinimumSizeForAdult = IsBoldTextEnabled;
    obscuredBalloonMinimumSizeForAdult_sTextFontSize_obscuredBalloonMinimumSizeForAdult = *(_QWORD *)&v5;
    obscuredBalloonMinimumSizeForAdult_sCustomTextFontSize_obscuredBalloonMinimumSizeForAdult = *(_QWORD *)&v6;
    objc_storeStrong((id *)&obscuredBalloonMinimumSizeForAdult_sCustomTextFontName_obscuredBalloonMinimumSizeForAdult, v8);
  }
  v19 = obscuredBalloonMinimumSizeForAdult_sBehavior_0;
  v20 = obscuredBalloonMinimumSizeForAdult_sBehavior_1;

  v21 = *(double *)&v19;
  v22 = *(double *)&v20;
  result.height = v22;
  result.width = v21;
  return result;
}

- (CGSize)obscuredBalloonMinimumSizeForChild
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  BOOL v23;
  CGSize result;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)obscuredBalloonMinimumSizeForChild_sContentSizeCategory_obscuredBalloonMinimumSizeForChild, (UIContentSizeCategory)v3)|| obscuredBalloonMinimumSizeForChild_sIsBoldTextEnabled_obscuredBalloonMinimumSizeForChild != IsBoldTextEnabled|| (*(double *)&obscuredBalloonMinimumSizeForChild_sTextFontSize_obscuredBalloonMinimumSizeForChild == v5? (v23 = *(double *)&obscuredBalloonMinimumSizeForChild_sCustomTextFontSize_obscuredBalloonMinimumSizeForChild == v6): (v23 = 0), !v23|| (objc_msgSend((id)obscuredBalloonMinimumSizeForChild_sCustomTextFontName_obscuredBalloonMinimumSizeForChild, "isEqualToString:", v9, *(double *)&obscuredBalloonMinimumSizeForChild_sTextFontSize_obscuredBalloonMinimumSizeForChild, *(double *)&obscuredBalloonMinimumSizeForChild_sCustomTextFontSize_obscuredBalloonMinimumSizeForChild) & 1) == 0))
  {
    -[CKUIBehavior sensitiveLabelFont](self, "sensitiveLabelFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 120.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    v14 = round(v12 * v13) / v13;
    -[CKUIBehavior sensitiveLabelFont](self, "sensitiveLabelFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_scaledValueForValue:", 120.0);
    v17 = v16;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v18 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v18 = 1.0;
    obscuredBalloonMinimumSizeForChild_sBehavior_0 = *(_QWORD *)&v14;
    *(double *)&obscuredBalloonMinimumSizeForChild_sBehavior_1 = round(v17 * v18) / v18;

    objc_storeStrong((id *)&obscuredBalloonMinimumSizeForChild_sContentSizeCategory_obscuredBalloonMinimumSizeForChild, v3);
    obscuredBalloonMinimumSizeForChild_sIsBoldTextEnabled_obscuredBalloonMinimumSizeForChild = IsBoldTextEnabled;
    obscuredBalloonMinimumSizeForChild_sTextFontSize_obscuredBalloonMinimumSizeForChild = *(_QWORD *)&v5;
    obscuredBalloonMinimumSizeForChild_sCustomTextFontSize_obscuredBalloonMinimumSizeForChild = *(_QWORD *)&v6;
    objc_storeStrong((id *)&obscuredBalloonMinimumSizeForChild_sCustomTextFontName_obscuredBalloonMinimumSizeForChild, v8);
  }
  v19 = obscuredBalloonMinimumSizeForChild_sBehavior_0;
  v20 = obscuredBalloonMinimumSizeForChild_sBehavior_1;

  v21 = *(double *)&v19;
  v22 = *(double *)&v20;
  result.height = v22;
  result.width = v21;
  return result;
}

- (Class)transcriptTitleViewClass
{
  if (transcriptTitleViewClass_once != -1)
    dispatch_once(&transcriptTitleViewClass_once, &__block_literal_global_414_0);
  return 0;
}

- (BOOL)showsLoadMoreItem
{
  if (showsLoadMoreItem_once != -1)
    dispatch_once(&showsLoadMoreItem_once, &__block_literal_global_415_0);
  return showsLoadMoreItem_sBehavior;
}

uint64_t __33__CKUIBehavior_showsLoadMoreItem__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMessagesNotificationExtension();
  showsLoadMoreItem_sBehavior = (_DWORD)result == 0;
  return result;
}

- (BOOL)shouldShowContactPhotosInTranscript
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __51__CKUIBehavior_shouldShowContactPhotosInTranscript__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (shouldShowContactPhotosInTranscript_once != -1)
    dispatch_once(&shouldShowContactPhotosInTranscript_once, block);
  return shouldShowContactPhotosInTranscript_sBehavior;
}

uint64_t __51__CKUIBehavior_shouldShowContactPhotosInTranscript__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "canAccessContacts");
  shouldShowContactPhotosInTranscript_sBehavior = result;
  return result;
}

- (BOOL)shouldUseDynamicScrolling
{
  if (UIAccessibilityIsReduceMotionEnabled())
    return 0;
  else
    return !-[CKUIBehavior shouldUseRotisserieScrolling](self, "shouldUseRotisserieScrolling");
}

- (BOOL)shouldUseRotisserieScrolling
{
  return 0;
}

- (BOOL)showsReplyButtonsInTranscript
{
  return 0;
}

- (BOOL)timestampsPushBalloons
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  char v10;
  BOOL v12;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)timestampsPushBalloons_sContentSizeCategory_timestampsPushBalloons, (UIContentSizeCategory)v3)|| timestampsPushBalloons_sIsBoldTextEnabled_timestampsPushBalloons != IsBoldTextEnabled|| (*(double *)&timestampsPushBalloons_sTextFontSize_timestampsPushBalloons == v5? (v12 = *(double *)&timestampsPushBalloons_sCustomTextFontSize_timestampsPushBalloons == v6): (v12 = 0), !v12|| (objc_msgSend((id)timestampsPushBalloons_sCustomTextFontName_timestampsPushBalloons, "isEqualToString:", v9, *(double *)&timestampsPushBalloons_sTextFontSize_timestampsPushBalloons, *(double *)&timestampsPushBalloons_sCustomTextFontSize_timestampsPushBalloons) & 1) == 0))
  {
    timestampsPushBalloons_sBehavior = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    objc_storeStrong((id *)&timestampsPushBalloons_sContentSizeCategory_timestampsPushBalloons, v3);
    timestampsPushBalloons_sIsBoldTextEnabled_timestampsPushBalloons = IsBoldTextEnabled;
    timestampsPushBalloons_sTextFontSize_timestampsPushBalloons = *(_QWORD *)&v5;
    timestampsPushBalloons_sCustomTextFontSize_timestampsPushBalloons = *(_QWORD *)&v6;
    objc_storeStrong((id *)&timestampsPushBalloons_sCustomTextFontName_timestampsPushBalloons, v8);
  }
  v10 = timestampsPushBalloons_sBehavior;

  return v10;
}

- (BOOL)shouldInsetForStatusBar
{
  if (shouldInsetForStatusBar_once != -1)
    dispatch_once(&shouldInsetForStatusBar_once, &__block_literal_global_416);
  return 0;
}

- (BOOL)usesDataDetectorsUI
{
  if (usesDataDetectorsUI_once != -1)
    dispatch_once(&usesDataDetectorsUI_once, &__block_literal_global_417);
  return usesDataDetectorsUI_sBehavior;
}

void __35__CKUIBehavior_usesDataDetectorsUI__block_invoke()
{
  usesDataDetectorsUI_sBehavior = 1;
}

- (BOOL)transcriptCanUseOpaqueMask
{
  if (transcriptCanUseOpaqueMask_once != -1)
    dispatch_once(&transcriptCanUseOpaqueMask_once, &__block_literal_global_418_0);
  return transcriptCanUseOpaqueMask_sBehavior;
}

void __42__CKUIBehavior_transcriptCanUseOpaqueMask__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  int v3;
  char v4;
  double v5;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "transcriptBackgroundColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = 0.0;
  v3 = objc_msgSend(v2, "getRed:green:blue:alpha:", 0, 0, 0, &v5) ^ 1;
  if (v5 >= 1.0)
    v4 = 1;
  else
    v4 = v3;

  transcriptCanUseOpaqueMask_sBehavior = v4;
}

- (BOOL)scrollToBottomStopsAtTopOfLastBubble
{
  if (scrollToBottomStopsAtTopOfLastBubble_once != -1)
    dispatch_once(&scrollToBottomStopsAtTopOfLastBubble_once, &__block_literal_global_419);
  return 0;
}

- (BOOL)supportsContiguousAttachments
{
  if (supportsContiguousAttachments_once != -1)
    dispatch_once(&supportsContiguousAttachments_once, &__block_literal_global_420);
  return supportsContiguousAttachments_sBehavior;
}

void __45__CKUIBehavior_supportsContiguousAttachments__block_invoke()
{
  supportsContiguousAttachments_sBehavior = 1;
}

- (BOOL)shouldUseSimpleTimestampsInTranscript
{
  if (shouldUseSimpleTimestampsInTranscript_once != -1)
    dispatch_once(&shouldUseSimpleTimestampsInTranscript_once, &__block_literal_global_421_0);
  return 0;
}

- (BOOL)transcriptCellsNeedVibrancy
{
  if (transcriptCellsNeedVibrancy_once != -1)
    dispatch_once(&transcriptCellsNeedVibrancy_once, &__block_literal_global_422_0);
  return 0;
}

- (int64_t)transcriptLoadingIndicatorStyle
{
  if (transcriptLoadingIndicatorStyle_once_0 != -1)
    dispatch_once(&transcriptLoadingIndicatorStyle_once_0, &__block_literal_global_423_0);
  if (transcriptLoadingIndicatorStyle_sBehavior_0)
    return 100;
  else
    return 0;
}

void __47__CKUIBehavior_transcriptLoadingIndicatorStyle__block_invoke()
{
  transcriptLoadingIndicatorStyle_sBehavior_0 = 1;
}

- (BOOL)disableTranscriptTimestamps
{
  if (disableTranscriptTimestamps_once != -1)
    dispatch_once(&disableTranscriptTimestamps_once, &__block_literal_global_425_0);
  return 0;
}

- (double)transcriptQuickActionButtonDiameter
{
  if (transcriptQuickActionButtonDiameter_once != -1)
    dispatch_once(&transcriptQuickActionButtonDiameter_once, &__block_literal_global_426_0);
  return *(double *)&transcriptQuickActionButtonDiameter_sBehavior;
}

void __51__CKUIBehavior_transcriptQuickActionButtonDiameter__block_invoke()
{
  transcriptQuickActionButtonDiameter_sBehavior = 0x4041800000000000;
}

- (double)transcriptQuickActionButtonHorizontalSpacing
{
  if (transcriptQuickActionButtonHorizontalSpacing_once != -1)
    dispatch_once(&transcriptQuickActionButtonHorizontalSpacing_once, &__block_literal_global_427_0);
  return *(double *)&transcriptQuickActionButtonHorizontalSpacing_sBehavior;
}

void __60__CKUIBehavior_transcriptQuickActionButtonHorizontalSpacing__block_invoke()
{
  transcriptQuickActionButtonHorizontalSpacing_sBehavior = 0x402C000000000000;
}

- (double)transcriptContactImageDiameter
{
  if (transcriptContactImageDiameter_once != -1)
    dispatch_once(&transcriptContactImageDiameter_once, &__block_literal_global_428);
  return *(double *)&transcriptContactImageDiameter_sBehavior;
}

void __46__CKUIBehavior_transcriptContactImageDiameter__block_invoke()
{
  transcriptContactImageDiameter_sBehavior = 0x403E000000000000;
}

- (double)detailsViewContactImageDiameter
{
  if (detailsViewContactImageDiameter_once != -1)
    dispatch_once(&detailsViewContactImageDiameter_once, &__block_literal_global_429);
  return *(double *)&detailsViewContactImageDiameter_sBehavior;
}

void __47__CKUIBehavior_detailsViewContactImageDiameter__block_invoke()
{
  detailsViewContactImageDiameter_sBehavior = 0x4042800000000000;
}

- (double)transcriptReplyPreviewContextContactImageDiameter
{
  if (transcriptReplyPreviewContextContactImageDiameter_once != -1)
    dispatch_once(&transcriptReplyPreviewContextContactImageDiameter_once, &__block_literal_global_430_0);
  return *(double *)&transcriptReplyPreviewContextContactImageDiameter_sBehavior;
}

void __65__CKUIBehavior_transcriptReplyPreviewContextContactImageDiameter__block_invoke()
{
  transcriptReplyPreviewContextContactImageDiameter_sBehavior = 0x4034000000000000;
}

- (double)transcriptReplyPreviewContextContactAlpha
{
  if (transcriptReplyPreviewContextContactAlpha_once != -1)
    dispatch_once(&transcriptReplyPreviewContextContactAlpha_once, &__block_literal_global_431_0);
  return *(double *)&transcriptReplyPreviewContextContactAlpha_sBehavior;
}

void __57__CKUIBehavior_transcriptReplyPreviewContextContactAlpha__block_invoke()
{
  transcriptReplyPreviewContextContactAlpha_sBehavior = 0x3FE0000000000000;
}

- (double)transcriptDrawerContactImageDiameter
{
  if (transcriptDrawerContactImageDiameter_once != -1)
    dispatch_once(&transcriptDrawerContactImageDiameter_once, &__block_literal_global_432_0);
  return *(double *)&transcriptDrawerContactImageDiameter_sBehavior;
}

void __52__CKUIBehavior_transcriptDrawerContactImageDiameter__block_invoke()
{
  transcriptDrawerContactImageDiameter_sBehavior = 0x4040000000000000;
}

- (double)transcriptDrawerContactImagePadding
{
  if (transcriptDrawerContactImagePadding_once != -1)
    dispatch_once(&transcriptDrawerContactImagePadding_once, &__block_literal_global_433);
  return *(double *)&transcriptDrawerContactImagePadding_sBehavior;
}

void __51__CKUIBehavior_transcriptDrawerContactImagePadding__block_invoke()
{
  transcriptDrawerContactImagePadding_sBehavior = 0x4024000000000000;
}

- (CGSize)mediaObjectCachedIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (mediaObjectCachedIconSize_once != -1)
    dispatch_once(&mediaObjectCachedIconSize_once, &__block_literal_global_434);
  v2 = *(double *)&mediaObjectCachedIconSize_sBehavior_0;
  v3 = *(double *)&mediaObjectCachedIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __41__CKUIBehavior_mediaObjectCachedIconSize__block_invoke()
{
  mediaObjectCachedIconSize_sBehavior_0 = 0x404E000000000000;
  mediaObjectCachedIconSize_sBehavior_1 = 0x404E000000000000;
}

- (UIEdgeInsets)transcriptBoldTextAlignmentInsets
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  void *v9;
  void *v10;
  unsigned __int128 v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  _OWORD v19[2];
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptBoldTextAlignmentInsets_sContentSizeCategory_transcriptBoldTextAlignmentInsets, (UIContentSizeCategory)v2)|| transcriptBoldTextAlignmentInsets_sIsBoldTextEnabled_transcriptBoldTextAlignmentInsets != IsBoldTextEnabled|| (*(double *)&transcriptBoldTextAlignmentInsets_sTextFontSize_transcriptBoldTextAlignmentInsets == v4? (v18 = *(double *)&transcriptBoldTextAlignmentInsets_sCustomTextFontSize_transcriptBoldTextAlignmentInsets == v5): (v18 = 0), !v18|| (objc_msgSend((id)transcriptBoldTextAlignmentInsets_sCustomTextFontName_transcriptBoldTextAlignmentInsets, "isEqualToString:", v8, *(double *)&transcriptBoldTextAlignmentInsets_sTextFontSize_transcriptBoldTextAlignmentInsets, *(double *)&transcriptBoldTextAlignmentInsets_sCustomTextFontSize_transcriptBoldTextAlignmentInsets) & 1) == 0))
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors", 0, 0, 0, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "transcriptBoldFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    CKTranscriptTextSizeForFont(v10, 0, (uint64_t)v19);

    transcriptBoldTextAlignmentInsets_sBehavior = v19[0];
    *(_OWORD *)&qword_1EE117520 = v19[1];
    objc_storeStrong((id *)&transcriptBoldTextAlignmentInsets_sContentSizeCategory_transcriptBoldTextAlignmentInsets, v2);
    transcriptBoldTextAlignmentInsets_sIsBoldTextEnabled_transcriptBoldTextAlignmentInsets = IsBoldTextEnabled;
    transcriptBoldTextAlignmentInsets_sTextFontSize_transcriptBoldTextAlignmentInsets = *(_QWORD *)&v4;
    transcriptBoldTextAlignmentInsets_sCustomTextFontSize_transcriptBoldTextAlignmentInsets = *(_QWORD *)&v5;
    objc_storeStrong((id *)&transcriptBoldTextAlignmentInsets_sCustomTextFontName_transcriptBoldTextAlignmentInsets, v7);
  }
  v11 = transcriptBoldTextAlignmentInsets_sBehavior;
  v12 = qword_1EE117520;
  v13 = unk_1EE117528;

  *(_QWORD *)&v15 = v11 >> 64;
  *(_QWORD *)&v14 = v11;
  v16 = *(double *)&v12;
  v17 = v13;
  result.right = v17;
  result.bottom = v16;
  result.left = v15;
  result.top = v14;
  return result;
}

- (double)transcriptBoldTextHeight
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  void *v9;
  void *v10;
  double v11;
  BOOL v13;
  uint64_t v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptBoldTextHeight_sContentSizeCategory_transcriptBoldTextHeight, (UIContentSizeCategory)v2)|| transcriptBoldTextHeight_sIsBoldTextEnabled_transcriptBoldTextHeight != IsBoldTextEnabled|| (*(double *)&transcriptBoldTextHeight_sTextFontSize_transcriptBoldTextHeight == v4? (v13 = *(double *)&transcriptBoldTextHeight_sCustomTextFontSize_transcriptBoldTextHeight == v5): (v13 = 0), !v13|| (objc_msgSend((id)transcriptBoldTextHeight_sCustomTextFontName_transcriptBoldTextHeight, "isEqualToString:", v8, *(double *)&transcriptBoldTextHeight_sTextFontSize_transcriptBoldTextHeight, *(double *)&transcriptBoldTextHeight_sCustomTextFontSize_transcriptBoldTextHeight) & 1) == 0))
  {
    v14 = 0;
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "transcriptBoldFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    CKTranscriptTextSizeForFont(v10, (double *)&v14, 0);

    transcriptBoldTextHeight_sBehavior = v14;
    objc_storeStrong((id *)&transcriptBoldTextHeight_sContentSizeCategory_transcriptBoldTextHeight, v2);
    transcriptBoldTextHeight_sIsBoldTextEnabled_transcriptBoldTextHeight = IsBoldTextEnabled;
    transcriptBoldTextHeight_sTextFontSize_transcriptBoldTextHeight = *(_QWORD *)&v4;
    transcriptBoldTextHeight_sCustomTextFontSize_transcriptBoldTextHeight = *(_QWORD *)&v5;
    objc_storeStrong((id *)&transcriptBoldTextHeight_sCustomTextFontName_transcriptBoldTextHeight, v7);
  }
  v11 = *(double *)&transcriptBoldTextHeight_sBehavior;

  return v11;
}

- (NSAttributedString)statusSaveButtonTranscriptText
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSAttributedString *v18;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v11 = &searchResultsInsets_once;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)statusSaveButtonTranscriptText_sContentSizeCategory_statusSaveButtonTranscriptText, (UIContentSizeCategory)v3)|| statusSaveButtonTranscriptText_sIsIncreaseContrastEnabled_statusSaveButtonTranscriptText != v4|| statusSaveButtonTranscriptText_sIsBoldTextEnabled_statusSaveButtonTranscriptText != IsBoldTextEnabled|| *(double *)&statusSaveButtonTranscriptText_sTextFontSize_statusSaveButtonTranscriptText != v6|| *(double *)&statusSaveButtonTranscriptText_sCustomTextFontSize_statusSaveButtonTranscriptText != v7|| (objc_msgSend((id)statusSaveButtonTranscriptText_sCustomTextFontName_statusSaveButtonTranscriptText, "isEqualToString:", v10, *(double *)&statusSaveButtonTranscriptText_sCustomTextFontSize_statusSaveButtonTranscriptText) & 1) == 0)
  {
    v12 = objc_alloc(MEMORY[0x1E0CB3498]);
    CKFrameworkBundle();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("KEEP"), &stru_1E276D870, CFSTR("ChatKit"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKUIBehavior centerTranscriptButtonTextAttributes](self, "centerTranscriptButtonTextAttributes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v12, "initWithString:attributes:", v14, v15);

    v11 = &searchResultsInsets_once;
    v17 = (void *)statusSaveButtonTranscriptText_sBehavior;
    statusSaveButtonTranscriptText_sBehavior = v16;

    objc_storeStrong((id *)&statusSaveButtonTranscriptText_sContentSizeCategory_statusSaveButtonTranscriptText, v3);
    statusSaveButtonTranscriptText_sIsIncreaseContrastEnabled_statusSaveButtonTranscriptText = v4;
    statusSaveButtonTranscriptText_sIsBoldTextEnabled_statusSaveButtonTranscriptText = IsBoldTextEnabled;
    statusSaveButtonTranscriptText_sTextFontSize_statusSaveButtonTranscriptText = *(_QWORD *)&v6;
    statusSaveButtonTranscriptText_sCustomTextFontSize_statusSaveButtonTranscriptText = *(_QWORD *)&v7;
    objc_storeStrong((id *)&statusSaveButtonTranscriptText_sCustomTextFontName_statusSaveButtonTranscriptText, v9);
  }
  v18 = (NSAttributedString *)(id)v11[175];

  return v18;
}

- (UIEdgeInsets)transcriptStatusItemEdgeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (transcriptStatusItemEdgeInsets_once != -1)
    dispatch_once(&transcriptStatusItemEdgeInsets_once, &__block_literal_global_437);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (CGSize)transcriptCustomStatusImageDefaultSize
{
  double v2;
  double v3;
  CGSize result;

  if (transcriptCustomStatusImageDefaultSize_once != -1)
    dispatch_once(&transcriptCustomStatusImageDefaultSize_once, &__block_literal_global_438);
  v2 = *(double *)&transcriptCustomStatusImageDefaultSize_sBehavior_0;
  v3 = *(double *)&transcriptCustomStatusImageDefaultSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __54__CKUIBehavior_transcriptCustomStatusImageDefaultSize__block_invoke()
{
  transcriptCustomStatusImageDefaultSize_sBehavior_0 = 0x403B000000000000;
  transcriptCustomStatusImageDefaultSize_sBehavior_1 = 0x4034000000000000;
}

- (double)transcriptCustomStatusImagePadding
{
  if (transcriptCustomStatusImagePadding_once != -1)
    dispatch_once(&transcriptCustomStatusImagePadding_once, &__block_literal_global_439_0);
  return *(double *)&transcriptCustomStatusImagePadding_sBehavior;
}

void __50__CKUIBehavior_transcriptCustomStatusImagePadding__block_invoke()
{
  transcriptCustomStatusImagePadding_sBehavior = 0x4010000000000000;
}

- (UIEdgeInsets)transcriptCustomStatusImageEdgeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (transcriptCustomStatusImageEdgeInsets_once != -1)
    dispatch_once(&transcriptCustomStatusImageEdgeInsets_once, &__block_literal_global_440_0);
  v2 = *(double *)&transcriptCustomStatusImageEdgeInsets_sBehavior_0;
  v3 = *(double *)&transcriptCustomStatusImageEdgeInsets_sBehavior_1;
  v4 = *(double *)&transcriptCustomStatusImageEdgeInsets_sBehavior_2;
  v5 = *(double *)&transcriptCustomStatusImageEdgeInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __53__CKUIBehavior_transcriptCustomStatusImageEdgeInsets__block_invoke()
{
  transcriptCustomStatusImageEdgeInsets_sBehavior_0 = 0x3FF0000000000000;
  transcriptCustomStatusImageEdgeInsets_sBehavior_1 = 0x3FF0000000000000;
  transcriptCustomStatusImageEdgeInsets_sBehavior_2 = 0x3FF0000000000000;
  transcriptCustomStatusImageEdgeInsets_sBehavior_3 = 0x3FF0000000000000;
}

- (UIEdgeInsets)transcriptButtonContentEdgeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (transcriptButtonContentEdgeInsets_once != -1)
    dispatch_once(&transcriptButtonContentEdgeInsets_once, &__block_literal_global_441_0);
  v2 = *(double *)&transcriptButtonContentEdgeInsets_sBehavior_0;
  v3 = *(double *)&transcriptButtonContentEdgeInsets_sBehavior_1;
  v4 = *(double *)&transcriptButtonContentEdgeInsets_sBehavior_2;
  v5 = *(double *)&transcriptButtonContentEdgeInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __49__CKUIBehavior_transcriptButtonContentEdgeInsets__block_invoke()
{
  transcriptButtonContentEdgeInsets_sBehavior_0 = 0x4018000000000000;
  transcriptButtonContentEdgeInsets_sBehavior_1 = 0x4018000000000000;
  transcriptButtonContentEdgeInsets_sBehavior_2 = 0x4018000000000000;
  transcriptButtonContentEdgeInsets_sBehavior_3 = 0x4018000000000000;
}

- (BOOL)forceMinTranscriptMarginInsets
{
  if (forceMinTranscriptMarginInsets_once != -1)
    dispatch_once(&forceMinTranscriptMarginInsets_once, &__block_literal_global_442_0);
  return 0;
}

- (double)mapPreviewMaxWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __34__CKUIBehavior_mapPreviewMaxWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (mapPreviewMaxWidth_once != -1)
    dispatch_once(&mapPreviewMaxWidth_once, block);
  return *(double *)&mapPreviewMaxWidth_sBehavior;
}

uint64_t __34__CKUIBehavior_mapPreviewMaxWidth__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "previewMaxWidth");
  mapPreviewMaxWidth_sBehavior = v2;
  return result;
}

- (double)emojiPreviewMaxWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __36__CKUIBehavior_emojiPreviewMaxWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (emojiPreviewMaxWidth_once != -1)
    dispatch_once(&emojiPreviewMaxWidth_once, block);
  return *(double *)&emojiPreviewMaxWidth_sBehavior;
}

double __36__CKUIBehavior_emojiPreviewMaxWidth__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  result = v1 * 1.5 + 56.0;
  emojiPreviewMaxWidth_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)stickerInlinePreviewMaxDimension
{
  if (stickerInlinePreviewMaxDimension_once != -1)
    dispatch_once(&stickerInlinePreviewMaxDimension_once, &__block_literal_global_444);
  return *(double *)&stickerInlinePreviewMaxDimension_sBehavior;
}

void __48__CKUIBehavior_stickerInlinePreviewMaxDimension__block_invoke()
{
  stickerInlinePreviewMaxDimension_sBehavior = 0x4064000000000000;
}

- (double)emojiStickerInlinePreviewMaxDimension
{
  if (emojiStickerInlinePreviewMaxDimension_once != -1)
    dispatch_once(&emojiStickerInlinePreviewMaxDimension_once, &__block_literal_global_445);
  return *(double *)&emojiStickerInlinePreviewMaxDimension_sBehavior;
}

void __53__CKUIBehavior_emojiStickerInlinePreviewMaxDimension__block_invoke()
{
  emojiStickerInlinePreviewMaxDimension_sBehavior = 0x4058000000000000;
}

- (CGSize)stickerReactionSize
{
  double v2;
  double v3;
  CGSize result;

  if (stickerReactionSize_once != -1)
    dispatch_once(&stickerReactionSize_once, &__block_literal_global_446_0);
  v2 = *(double *)&stickerReactionSize_sBehavior_0;
  v3 = *(double *)&stickerReactionSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __35__CKUIBehavior_stickerReactionSize__block_invoke()
{
  stickerReactionSize_sBehavior_0 = 0x4048000000000000;
  stickerReactionSize_sBehavior_1 = 0x4048000000000000;
}

- (CGSize)stickerPopoverSize
{
  double v2;
  double v3;
  CGSize result;

  if (stickerPopoverSize_once != -1)
    dispatch_once(&stickerPopoverSize_once, &__block_literal_global_447);
  v2 = *(double *)&stickerPopoverSize_sBehavior_0;
  v3 = *(double *)&stickerPopoverSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __34__CKUIBehavior_stickerPopoverSize__block_invoke()
{
  stickerPopoverSize_sBehavior_0 = 0x4078900000000000;
  stickerPopoverSize_sBehavior_1 = 0x4085400000000000;
}

- (double)stickerReactionTextBalloonAdditionalVerticalPadding
{
  if (stickerReactionTextBalloonAdditionalVerticalPadding_once != -1)
    dispatch_once(&stickerReactionTextBalloonAdditionalVerticalPadding_once, &__block_literal_global_448);
  return *(double *)&stickerReactionTextBalloonAdditionalVerticalPadding_sBehavior;
}

void __67__CKUIBehavior_stickerReactionTextBalloonAdditionalVerticalPadding__block_invoke()
{
  stickerReactionTextBalloonAdditionalVerticalPadding_sBehavior = 0x4014000000000000;
}

- (double)stickerReactionTranscriptPaddingPercentage
{
  if (stickerReactionTranscriptPaddingPercentage_once != -1)
    dispatch_once(&stickerReactionTranscriptPaddingPercentage_once, &__block_literal_global_449_0);
  return *(double *)&stickerReactionTranscriptPaddingPercentage_sBehavior;
}

void __58__CKUIBehavior_stickerReactionTranscriptPaddingPercentage__block_invoke()
{
  stickerReactionTranscriptPaddingPercentage_sBehavior = 0x3FE8000000000000;
}

- (double)stickerReactionHorizontalOverlapPercentage
{
  if (stickerReactionHorizontalOverlapPercentage_once != -1)
    dispatch_once(&stickerReactionHorizontalOverlapPercentage_once, &__block_literal_global_450);
  return *(double *)&stickerReactionHorizontalOverlapPercentage_sBehavior;
}

void __58__CKUIBehavior_stickerReactionHorizontalOverlapPercentage__block_invoke()
{
  stickerReactionHorizontalOverlapPercentage_sBehavior = 0x3FD0000000000000;
}

- (double)stickerReactionVerticalOverlapPercentage
{
  if (stickerReactionVerticalOverlapPercentage_once != -1)
    dispatch_once(&stickerReactionVerticalOverlapPercentage_once, &__block_literal_global_451);
  return *(double *)&stickerReactionVerticalOverlapPercentage_sBehavior;
}

void __56__CKUIBehavior_stickerReactionVerticalOverlapPercentage__block_invoke()
{
  stickerReactionVerticalOverlapPercentage_sBehavior = 0x3FD6666666666666;
}

- (double)stickerReactionOddRowInset
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __42__CKUIBehavior_stickerReactionOddRowInset__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (stickerReactionOddRowInset_once != -1)
    dispatch_once(&stickerReactionOddRowInset_once, block);
  return *(double *)&stickerReactionOddRowInset_sBehavior;
}

double __42__CKUIBehavior_stickerReactionOddRowInset__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "stickerReactionSize");
  result = v1 / 5.0;
  stickerReactionOddRowInset_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)maxStickerReactionRotation
{
  if (maxStickerReactionRotation_once != -1)
    dispatch_once(&maxStickerReactionRotation_once, &__block_literal_global_452_0);
  return *(double *)&maxStickerReactionRotation_sBehavior;
}

void __42__CKUIBehavior_maxStickerReactionRotation__block_invoke()
{
  maxStickerReactionRotation_sBehavior = 0x4024000000000000;
}

- (double)minStickerReactionRotation
{
  if (minStickerReactionRotation_once != -1)
    dispatch_once(&minStickerReactionRotation_once, &__block_literal_global_453_0);
  return *(double *)&minStickerReactionRotation_sBehavior;
}

void __42__CKUIBehavior_minStickerReactionRotation__block_invoke()
{
  minStickerReactionRotation_sBehavior = 0x4008000000000000;
}

- (double)stickerDropPreviewMaxDimension
{
  if (stickerDropPreviewMaxDimension_once != -1)
    dispatch_once(&stickerDropPreviewMaxDimension_once, &__block_literal_global_454_0);
  return *(double *)&stickerDropPreviewMaxDimension_sBehavior;
}

void __46__CKUIBehavior_stickerDropPreviewMaxDimension__block_invoke()
{
  stickerDropPreviewMaxDimension_sBehavior = 0x4072C00000000000;
}

- (double)emojiStickerDropPreviewMaxDimension
{
  if (emojiStickerDropPreviewMaxDimension_once != -1)
    dispatch_once(&emojiStickerDropPreviewMaxDimension_once, &__block_literal_global_455_0);
  return *(double *)&emojiStickerDropPreviewMaxDimension_sBehavior;
}

void __51__CKUIBehavior_emojiStickerDropPreviewMaxDimension__block_invoke()
{
  emojiStickerDropPreviewMaxDimension_sBehavior = 0x4072C00000000000;
}

- (BOOL)shouldAnimateStickerOnSave
{
  if (shouldAnimateStickerOnSave_once != -1)
    dispatch_once(&shouldAnimateStickerOnSave_once, &__block_literal_global_456_0);
  return shouldAnimateStickerOnSave_sBehavior;
}

uint64_t __42__CKUIBehavior_shouldAnimateStickerOnSave__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMacCatalyst();
  shouldAnimateStickerOnSave_sBehavior = (_DWORD)result == 0;
  return result;
}

- (BOOL)shouldScrollToSavedSticker
{
  if (shouldScrollToSavedSticker_once != -1)
    dispatch_once(&shouldScrollToSavedSticker_once, &__block_literal_global_457);
  return shouldScrollToSavedSticker_sBehavior;
}

uint64_t __42__CKUIBehavior_shouldScrollToSavedSticker__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMacCatalyst();
  shouldScrollToSavedSticker_sBehavior = (_DWORD)result == 0;
  return result;
}

- (double)stickerInlinePreviewMaxWidthForImageSize:(CGSize)a3 isEmoji:(BOOL)a4 displayScale:(double)a5
{
  double height;
  double width;
  double result;

  height = a3.height;
  width = a3.width;
  if (a4)
    -[CKUIBehavior emojiStickerInlinePreviewMaxDimension](self, "emojiStickerInlinePreviewMaxDimension");
  else
    -[CKUIBehavior stickerInlinePreviewMaxDimension](self, "stickerInlinePreviewMaxDimension");
  if (width < height && height > result)
    return round(width / height * result * a5) / a5;
  return result;
}

- (double)stickerDropPreviewMaxWidthForImageSize:(CGSize)a3 isEmoji:(BOOL)a4 displayScale:(double)a5
{
  double height;
  double width;
  double result;

  height = a3.height;
  width = a3.width;
  if (a4)
    -[CKUIBehavior emojiStickerDropPreviewMaxDimension](self, "emojiStickerDropPreviewMaxDimension");
  else
    -[CKUIBehavior stickerDropPreviewMaxDimension](self, "stickerDropPreviewMaxDimension");
  if (width < height && height > result)
    return round(width / height * result * a5) / a5;
  return result;
}

- (UIEdgeInsets)balloonTranscriptInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_balloonTranscriptInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (balloonTranscriptInsets_once != -1)
    dispatch_once(&balloonTranscriptInsets_once, block);
  v2 = *(double *)&balloonTranscriptInsets_sBehavior_1;
  v3 = *(double *)&balloonTranscriptInsets_sBehavior_3;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v3;
  result.bottom = v5;
  result.left = v2;
  result.top = v4;
  return result;
}

double __39__CKUIBehavior_balloonTranscriptInsets__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v3 = -v2;
  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  result = -v4;
  balloonTranscriptInsets_sBehavior_1 = *(_QWORD *)&v3;
  balloonTranscriptInsets_sBehavior_3 = *(_QWORD *)&result;
  return result;
}

- (UIEdgeInsets)senderTranscriptInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __38__CKUIBehavior_senderTranscriptInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (senderTranscriptInsets_once != -1)
    dispatch_once(&senderTranscriptInsets_once, block);
  v2 = *(double *)&senderTranscriptInsets_sBehavior_0;
  v3 = *(double *)&senderTranscriptInsets_sBehavior_1;
  v4 = *(double *)&senderTranscriptInsets_sBehavior_2;
  v5 = *(double *)&senderTranscriptInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

double __38__CKUIBehavior_senderTranscriptInsets__block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "stampTranscriptInsets");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(*(id *)(a1 + 32), "balloonMaskAlignmentRectInsetsWithTailShape:", 1);
  result = v5 + v10;
  senderTranscriptInsets_sBehavior_0 = v3;
  *(double *)&senderTranscriptInsets_sBehavior_1 = v5 + v10;
  senderTranscriptInsets_sBehavior_2 = v7;
  senderTranscriptInsets_sBehavior_3 = v9;
  return result;
}

- (UIEdgeInsets)replySenderTranscriptInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __43__CKUIBehavior_replySenderTranscriptInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (replySenderTranscriptInsets_once != -1)
    dispatch_once(&replySenderTranscriptInsets_once, block);
  v2 = *(double *)&replySenderTranscriptInsets_sBehavior_0;
  v3 = *(double *)&replySenderTranscriptInsets_sBehavior_1;
  v4 = *(double *)&replySenderTranscriptInsets_sBehavior_2;
  v5 = *(double *)&replySenderTranscriptInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

double __43__CKUIBehavior_replySenderTranscriptInsets__block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "stampTranscriptInsets");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(*(id *)(a1 + 32), "balloonMaskAlignmentRectInsetsWithTailShape:", 1);
  result = v5 + v10;
  replySenderTranscriptInsets_sBehavior_0 = v3;
  *(double *)&replySenderTranscriptInsets_sBehavior_1 = v5 + v10;
  replySenderTranscriptInsets_sBehavior_2 = v7;
  replySenderTranscriptInsets_sBehavior_3 = v9;
  return result;
}

- (UIEdgeInsets)stampTranscriptInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_stampTranscriptInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (stampTranscriptInsets_once != -1)
    dispatch_once(&stampTranscriptInsets_once, block);
  v2 = *(double *)&stampTranscriptInsets_sBehavior_0;
  v3 = *(double *)&stampTranscriptInsets_sBehavior_1;
  v4 = *(double *)&stampTranscriptInsets_sBehavior_2;
  v5 = *(double *)&stampTranscriptInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

double __37__CKUIBehavior_stampTranscriptInsets__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonTranscriptInsets");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v11 = v10;
  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  result = v9 + v12;
  *(double *)&stampTranscriptInsets_sBehavior_0 = v3 + 0.0;
  *(double *)&stampTranscriptInsets_sBehavior_1 = v5 + v11;
  *(double *)&stampTranscriptInsets_sBehavior_2 = v7 + 0.0;
  stampTranscriptInsets_sBehavior_3 = *(_QWORD *)&result;
  return result;
}

- (UIVisualEffect)transcriptTextVibrancyEffect
{
  if (transcriptTextVibrancyEffect_once != -1)
    dispatch_once(&transcriptTextVibrancyEffect_once, &__block_literal_global_458);
  return 0;
}

- (UIEdgeInsets)contactPhotoTranscriptInsets
{
  NSString *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  NSComparisonResult v10;
  double *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  CKUIBehavior *v15;
  uint64_t *v16;
  uint64_t *v17;
  __CFString *v18;
  uint64_t *v19;
  _BOOL4 v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  BOOL v30;
  char v31;
  __CFString *obj;
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v10 = UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)contactPhotoTranscriptInsets_sContentSizeCategory_contactPhotoTranscriptInsets, v3);
  v11 = (double *)&unk_1EE116000;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  v13 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont;
  v14 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont;
  if (v10
    || contactPhotoTranscriptInsets_sIsBoldTextEnabled_contactPhotoTranscriptInsets != IsBoldTextEnabled
    || (*(double *)&contactPhotoTranscriptInsets_sTextFontSize_contactPhotoTranscriptInsets == v5
      ? (v30 = *(double *)&contactPhotoTranscriptInsets_sCustomTextFontSize_contactPhotoTranscriptInsets == v6)
      : (v30 = 0),
        !v30
     || (v31 = objc_msgSend((id)contactPhotoTranscriptInsets_sCustomTextFontName_contactPhotoTranscriptInsets, "isEqualToString:", v9, *(double *)&contactPhotoTranscriptInsets_sTextFontSize_contactPhotoTranscriptInsets, *(double *)&contactPhotoTranscriptInsets_sCustomTextFontSize_contactPhotoTranscriptInsets), v14 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, v13 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset, (v31 & 1) == 0)))
  {
    v15 = self;
    v16 = v12;
    obj = v8;
    v17 = v13;
    v18 = v7;
    v19 = v14;
    v20 = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](v15, "isAccessibilityPreferredContentSizeCategory");
    v21 = -4.0;
    if (v20)
      v21 = -16.0;
    contactPhotoTranscriptInsets_sBehavior_0 = 0;
    contactPhotoTranscriptInsets_sBehavior_1 = *(_QWORD *)&v21;
    contactPhotoTranscriptInsets_sBehavior_2 = 0;
    contactPhotoTranscriptInsets_sBehavior_3 = 0xC010000000000000;
    objc_storeStrong((id *)&contactPhotoTranscriptInsets_sContentSizeCategory_contactPhotoTranscriptInsets, v3);
    *((_BYTE *)v16 + 1784) = IsBoldTextEnabled;
    *((double *)v17 + 69) = v5;
    v11 = (double *)&unk_1EE116000;
    *((double *)v19 + 70) = v6;
    v7 = v18;
    objc_storeStrong((id *)&contactPhotoTranscriptInsets_sCustomTextFontName_contactPhotoTranscriptInsets, obj);
  }
  v22 = contactPhotoTranscriptInsets_sBehavior_0;
  v23 = contactPhotoTranscriptInsets_sBehavior_1;
  v24 = contactPhotoTranscriptInsets_sBehavior_2;
  v25 = v11[410];

  v26 = *(double *)&v22;
  v27 = *(double *)&v23;
  v28 = *(double *)&v24;
  v29 = v25;
  result.right = v29;
  result.bottom = v28;
  result.left = v27;
  result.top = v26;
  return result;
}

- (UIEdgeInsets)retractedReplyStampInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __41__CKUIBehavior_retractedReplyStampInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (retractedReplyStampInsets_once != -1)
    dispatch_once(&retractedReplyStampInsets_once, block);
  v2 = *(double *)&retractedReplyStampInsets_sBehavior_1;
  v3 = *(double *)&retractedReplyStampInsets_sBehavior_3;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v3;
  result.bottom = v5;
  result.left = v2;
  result.top = v4;
  return result;
}

double __41__CKUIBehavior_retractedReplyStampInsets__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "replyLineViewMaxWidth");
  v3 = v2 + 10.0;
  objc_msgSend(*(id *)(a1 + 32), "replyLineViewMaxWidth");
  result = v4 + 10.0;
  retractedReplyStampInsets_sBehavior_1 = *(_QWORD *)&v3;
  retractedReplyStampInsets_sBehavior_3 = *(_QWORD *)&result;
  return result;
}

- (double)replyLineWidth
{
  if (replyLineWidth_once != -1)
    dispatch_once(&replyLineWidth_once, &__block_literal_global_459);
  return *(double *)&replyLineWidth_sBehavior;
}

void __30__CKUIBehavior_replyLineWidth__block_invoke()
{
  replyLineWidth_sBehavior = 0x4010000000000000;
}

- (double)replyLineViewVerticalPadding
{
  if (replyLineViewVerticalPadding_once != -1)
    dispatch_once(&replyLineViewVerticalPadding_once, &__block_literal_global_460);
  return *(double *)&replyLineViewVerticalPadding_sBehavior;
}

void __44__CKUIBehavior_replyLineViewVerticalPadding__block_invoke()
{
  replyLineViewVerticalPadding_sBehavior = 0x4014000000000000;
}

- (double)replyLineViewHorizontalPadding
{
  if (replyLineViewHorizontalPadding_once != -1)
    dispatch_once(&replyLineViewHorizontalPadding_once, &__block_literal_global_461);
  return *(double *)&replyLineViewHorizontalPadding_sBehavior;
}

void __46__CKUIBehavior_replyLineViewHorizontalPadding__block_invoke()
{
  replyLineViewHorizontalPadding_sBehavior = 0x4024000000000000;
}

- (double)replyLineViewContactImageLayoutHorizontalPadding
{
  if (replyLineViewContactImageLayoutHorizontalPadding_once != -1)
    dispatch_once(&replyLineViewContactImageLayoutHorizontalPadding_once, &__block_literal_global_462);
  return *(double *)&replyLineViewContactImageLayoutHorizontalPadding_sBehavior;
}

void __64__CKUIBehavior_replyLineViewContactImageLayoutHorizontalPadding__block_invoke()
{
  replyLineViewContactImageLayoutHorizontalPadding_sBehavior = 0x4000000000000000;
}

- (double)replyLineBracketRadius
{
  if (replyLineBracketRadius_once != -1)
    dispatch_once(&replyLineBracketRadius_once, &__block_literal_global_463_0);
  return *(double *)&replyLineBracketRadius_sBehavior;
}

void __38__CKUIBehavior_replyLineBracketRadius__block_invoke()
{
  replyLineBracketRadius_sBehavior = 0x4035000000000000;
}

- (double)replyLineViewMaxWidth
{
  if (replyLineViewMaxWidth_once != -1)
    dispatch_once(&replyLineViewMaxWidth_once, &__block_literal_global_464_0);
  return *(double *)&replyLineViewMaxWidth_sBehavior;
}

void __37__CKUIBehavior_replyLineViewMaxWidth__block_invoke()
{
  replyLineViewMaxWidth_sBehavior = 0x4042000000000000;
}

- (double)transcriptDrawerSpace
{
  if (transcriptDrawerSpace_once != -1)
    dispatch_once(&transcriptDrawerSpace_once, &__block_literal_global_465);
  return *(double *)&transcriptDrawerSpace_sBehavior;
}

void __37__CKUIBehavior_transcriptDrawerSpace__block_invoke()
{
  transcriptDrawerSpace_sBehavior = 0x4020000000000000;
}

- (double)transcriptDrawerGestureAcceleration
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  _BOOL4 v10;
  double v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptDrawerGestureAcceleration_sContentSizeCategory_transcriptDrawerGestureAcceleration, (UIContentSizeCategory)v3)|| transcriptDrawerGestureAcceleration_sIsBoldTextEnabled_transcriptDrawerGestureAcceleration != IsBoldTextEnabled|| (*(double *)&transcriptDrawerGestureAcceleration_sTextFontSize_transcriptDrawerGestureAcceleration == v5? (v14 = *(double *)&transcriptDrawerGestureAcceleration_sCustomTextFontSize_transcriptDrawerGestureAcceleration == v6): (v14 = 0), !v14|| (objc_msgSend((id)transcriptDrawerGestureAcceleration_sCustomTextFontName_transcriptDrawerGestureAcceleration, "isEqualToString:", v9, *(double *)&transcriptDrawerGestureAcceleration_sTextFontSize_transcriptDrawerGestureAcceleration, *(double *)&transcriptDrawerGestureAcceleration_sCustomTextFontSize_transcriptDrawerGestureAcceleration) & 1) == 0))
  {
    v10 = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    v11 = 3.8;
    if (!v10)
      v11 = 1.0;
    transcriptDrawerGestureAcceleration_sBehavior = *(_QWORD *)&v11;
    objc_storeStrong((id *)&transcriptDrawerGestureAcceleration_sContentSizeCategory_transcriptDrawerGestureAcceleration, v3);
    transcriptDrawerGestureAcceleration_sIsBoldTextEnabled_transcriptDrawerGestureAcceleration = IsBoldTextEnabled;
    transcriptDrawerGestureAcceleration_sTextFontSize_transcriptDrawerGestureAcceleration = *(_QWORD *)&v5;
    transcriptDrawerGestureAcceleration_sCustomTextFontSize_transcriptDrawerGestureAcceleration = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptDrawerGestureAcceleration_sCustomTextFontName_transcriptDrawerGestureAcceleration, v8);
  }
  v12 = *(double *)&transcriptDrawerGestureAcceleration_sBehavior;

  return v12;
}

- (double)transcriptDrawerOverlapForMarginInsets:(UIEdgeInsets)a3
{
  double right;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  right = a3.right;
  -[CKUIBehavior balloonTranscriptInsets](self, "balloonTranscriptInsets", a3.top, a3.left, a3.bottom);
  v6 = right + v5;
  -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
  v8 = v7 + v6;
  -[CKUIBehavior transcriptDrawerSpace](self, "transcriptDrawerSpace");
  return v8 - v9;
}

- (double)transcriptDrawerWidthForMarginInsets:(UIEdgeInsets)a3
{
  double right;
  void *v5;
  uint64_t *v6;
  double v7;
  BOOL v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD v35[2];

  right = a3.right;
  v35[1] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = &hyphenatesTextContent_once;
  if (!+[CKApplicationState isResizing](CKApplicationState, "isResizing"))
  {
    v7 = CKUserPreferenceFontSize();
    if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptDrawerWidthForMarginInsets__sContentSizeCategory_transcriptDrawerWidth, (UIContentSizeCategory)v5)|| (sInvalidTranscriptDrawerWidth == 1 ? (v8 = v7 == 13.0) : (v8 = 0), !v8))
    {
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "timestampDateFormatter");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      v11 = objc_alloc_init(MEMORY[0x1E0C99D78]);
      objc_msgSend(v11, "setHour:", 11);
      v12 = objc_alloc_init(MEMORY[0x1E0C99D78]);
      objc_msgSend(v12, "setHour:", 23);
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "dateFromComponents:", v11);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = v10;
      objc_msgSend(v10, "stringFromDate:", v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "dateFromComponents:", v12);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "stringFromDate:", v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      v34 = *MEMORY[0x1E0DC1138];
      v19 = v34;
      -[CKUIBehavior transcriptDrawerFont](self, "transcriptDrawerFont");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v35[0] = v20;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, &v34, 1);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "sizeWithAttributes:", v21);
      v23 = v22;

      v32 = v19;
      -[CKUIBehavior transcriptDrawerFont](self, "transcriptDrawerFont");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = v24;
      v6 = &hyphenatesTextContent_once;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "sizeWithAttributes:", v25);
      v27 = v26;

      if (v23 >= v27)
        *(double *)&v28 = v23;
      else
        *(double *)&v28 = v27;
      transcriptDrawerWidthForMarginInsets__sTranscriptDrawerWidth = v28;
      sInvalidTranscriptDrawerWidth = 1;
      objc_storeStrong((id *)&transcriptDrawerWidthForMarginInsets__sContentSizeCategory_transcriptDrawerWidth, v5);

    }
  }
  v29 = *((double *)v6 + 184);

  return right + v29;
}

- (void)invalidateTranscriptDrawerWidth
{
  sInvalidTranscriptDrawerWidth = 0;
}

- (UIImageSymbolConfiguration)transcriptEditingSelectionImageBaseConfiguration
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  uint64_t v9;
  void *v10;
  UIImageSymbolConfiguration *v11;
  BOOL v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptEditingSelectionImageBaseConfiguration_sContentSizeCategory_transcriptEditingSelectionImageBaseConfiguration, (UIContentSizeCategory)v2)|| transcriptEditingSelectionImageBaseConfiguration_sIsBoldTextEnabled_transcriptEditingSelectionImageBaseConfiguration != IsBoldTextEnabled|| (*(double *)&transcriptEditingSelectionImageBaseConfiguration_sTextFontSize_transcriptEditingSelectionImageBaseConfiguration == v4? (v13 = *(double *)&transcriptEditingSelectionImageBaseConfiguration_sCustomTextFontSize_transcriptEditingSelectionImageBaseConfiguration == v5): (v13 = 0), !v13|| (objc_msgSend((id)transcriptEditingSelectionImageBaseConfiguration_sCustomTextFontName_transcriptEditingSelectionImageBaseConfiguration, "isEqualToString:", v8, *(double *)&transcriptEditingSelectionImageBaseConfiguration_sTextFontSize_transcriptEditingSelectionImageBaseConfiguration, *(double *)&transcriptEditingSelectionImageBaseConfiguration_sCustomTextFontSize_transcriptEditingSelectionImageBaseConfiguration) & 1) == 0))
  {
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 3);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)transcriptEditingSelectionImageBaseConfiguration_sBehavior;
    transcriptEditingSelectionImageBaseConfiguration_sBehavior = v9;

    objc_storeStrong((id *)&transcriptEditingSelectionImageBaseConfiguration_sContentSizeCategory_transcriptEditingSelectionImageBaseConfiguration, v2);
    transcriptEditingSelectionImageBaseConfiguration_sIsBoldTextEnabled_transcriptEditingSelectionImageBaseConfiguration = IsBoldTextEnabled;
    transcriptEditingSelectionImageBaseConfiguration_sTextFontSize_transcriptEditingSelectionImageBaseConfiguration = *(_QWORD *)&v4;
    transcriptEditingSelectionImageBaseConfiguration_sCustomTextFontSize_transcriptEditingSelectionImageBaseConfiguration = *(_QWORD *)&v5;
    objc_storeStrong((id *)&transcriptEditingSelectionImageBaseConfiguration_sCustomTextFontName_transcriptEditingSelectionImageBaseConfiguration, v7);
  }
  v11 = (UIImageSymbolConfiguration *)(id)transcriptEditingSelectionImageBaseConfiguration_sBehavior;

  return v11;
}

- (UIImage)transcriptEditingSelectedImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __46__CKUIBehavior_transcriptEditingSelectedImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (transcriptEditingSelectedImage_once != -1)
    dispatch_once(&transcriptEditingSelectedImage_once, block);
  return (UIImage *)(id)transcriptEditingSelectedImage_sBehavior;
}

void __46__CKUIBehavior_transcriptEditingSelectedImage__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v2;
  objc_msgSend(MEMORY[0x1E0CEA478], "systemBlueColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 32), "transcriptEditingSelectionImageBaseConfiguration");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPaletteColors:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "configurationByApplyingConfiguration:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("checkmark.circle.fill"), v7);
  v8 = objc_claimAutoreleasedReturnValue();

  v9 = (void *)transcriptEditingSelectedImage_sBehavior;
  transcriptEditingSelectedImage_sBehavior = v8;

}

- (UIImage)transcriptEditingUnselectedImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __48__CKUIBehavior_transcriptEditingUnselectedImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (transcriptEditingUnselectedImage_once != -1)
    dispatch_once(&transcriptEditingUnselectedImage_once, block);
  return (UIImage *)(id)transcriptEditingUnselectedImage_sBehavior;
}

void __48__CKUIBehavior_transcriptEditingUnselectedImage__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA478], "tertiaryLabelColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 32), "transcriptEditingSelectionImageBaseConfiguration");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPaletteColors:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "configurationByApplyingConfiguration:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("circle"), v6);
  v7 = objc_claimAutoreleasedReturnValue();

  v8 = (void *)transcriptEditingUnselectedImage_sBehavior;
  transcriptEditingUnselectedImage_sBehavior = v7;

}

- (double)editingCheckmarkLeadingPadding
{
  if (editingCheckmarkLeadingPadding_once != -1)
    dispatch_once(&editingCheckmarkLeadingPadding_once, &__block_literal_global_471_0);
  return *(double *)&editingCheckmarkLeadingPadding_sBehavior;
}

void __46__CKUIBehavior_editingCheckmarkLeadingPadding__block_invoke()
{
  editingCheckmarkLeadingPadding_sBehavior = 0x4026000000000000;
}

- (double)editingCheckmarkTrailingPadding
{
  if (editingCheckmarkTrailingPadding_once != -1)
    dispatch_once(&editingCheckmarkTrailingPadding_once, &__block_literal_global_472_0);
  return *(double *)&editingCheckmarkTrailingPadding_sBehavior;
}

void __47__CKUIBehavior_editingCheckmarkTrailingPadding__block_invoke()
{
  editingCheckmarkTrailingPadding_sBehavior = 0x4034000000000000;
}

- (double)topTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)topTranscriptSpace_sContentSizeCategory_topTranscriptSpace, (UIContentSizeCategory)v3)|| topTranscriptSpace_sIsBoldTextEnabled_topTranscriptSpace != IsBoldTextEnabled|| (*(double *)&topTranscriptSpace_sTextFontSize_topTranscriptSpace == v5? (v16 = *(double *)&topTranscriptSpace_sCustomTextFontSize_topTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)topTranscriptSpace_sCustomTextFontName_topTranscriptSpace, "isEqualToString:", v9, *(double *)&topTranscriptSpace_sTextFontSize_topTranscriptSpace, *(double *)&topTranscriptSpace_sCustomTextFontSize_topTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 15.5);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&topTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&topTranscriptSpace_sContentSizeCategory_topTranscriptSpace, v3);
    topTranscriptSpace_sIsBoldTextEnabled_topTranscriptSpace = IsBoldTextEnabled;
    topTranscriptSpace_sTextFontSize_topTranscriptSpace = *(_QWORD *)&v5;
    topTranscriptSpace_sCustomTextFontSize_topTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&topTranscriptSpace_sCustomTextFontName_topTranscriptSpace, v8);
  }
  v14 = *(double *)&topTranscriptSpace_sBehavior;

  return v14;
}

- (double)bottomTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  double v11;
  BOOL v13;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)bottomTranscriptSpace_sContentSizeCategory_bottomTranscriptSpace, (UIContentSizeCategory)v3)|| bottomTranscriptSpace_sIsBoldTextEnabled_bottomTranscriptSpace != IsBoldTextEnabled|| (*(double *)&bottomTranscriptSpace_sTextFontSize_bottomTranscriptSpace == v5? (v13 = *(double *)&bottomTranscriptSpace_sCustomTextFontSize_bottomTranscriptSpace == v6): (v13 = 0), !v13|| (objc_msgSend((id)bottomTranscriptSpace_sCustomTextFontName_bottomTranscriptSpace, "isEqualToString:", v9, *(double *)&bottomTranscriptSpace_sTextFontSize_bottomTranscriptSpace, *(double *)&bottomTranscriptSpace_sCustomTextFontSize_bottomTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior balloonBalloonTranscriptSpace:](self, "balloonBalloonTranscriptSpace:", 0);
    bottomTranscriptSpace_sBehavior = v10;
    objc_storeStrong((id *)&bottomTranscriptSpace_sContentSizeCategory_bottomTranscriptSpace, v3);
    bottomTranscriptSpace_sIsBoldTextEnabled_bottomTranscriptSpace = IsBoldTextEnabled;
    bottomTranscriptSpace_sTextFontSize_bottomTranscriptSpace = *(_QWORD *)&v5;
    bottomTranscriptSpace_sCustomTextFontSize_bottomTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&bottomTranscriptSpace_sCustomTextFontName_bottomTranscriptSpace, v8);
  }
  v11 = *(double *)&bottomTranscriptSpace_sBehavior;

  return v11;
}

- (double)unavailabilityIndicatorBottomTranscriptSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)unavailabilityIndicatorBottomTranscriptSpace_sContentSizeCategory_unavailabilityIndicatorBottomTranscriptSpace, (UIContentSizeCategory)v2)|| unavailabilityIndicatorBottomTranscriptSpace_sIsBoldTextEnabled_unavailabilityIndicatorBottomTranscriptSpace != IsBoldTextEnabled|| (*(double *)&unavailabilityIndicatorBottomTranscriptSpace_sTextFontSize_unavailabilityIndicatorBottomTranscriptSpace == v4? (v11 = *(double *)&unavailabilityIndicatorBottomTranscriptSpace_sCustomTextFontSize_unavailabilityIndicatorBottomTranscriptSpace == v5): (v11 = 0), !v11|| (objc_msgSend((id)unavailabilityIndicatorBottomTranscriptSpace_sCustomTextFontName_unavailabilityIndicatorBottomTranscriptSpace, "isEqualToString:", v8, *(double *)&unavailabilityIndicatorBottomTranscriptSpace_sTextFontSize_unavailabilityIndicatorBottomTranscriptSpace, *(double *)&unavailabilityIndicatorBottomTranscriptSpace_sCustomTextFontSize_unavailabilityIndicatorBottomTranscriptSpace) & 1) == 0))
  {
    unavailabilityIndicatorBottomTranscriptSpace_sBehavior = 0x4030000000000000;
    objc_storeStrong((id *)&unavailabilityIndicatorBottomTranscriptSpace_sContentSizeCategory_unavailabilityIndicatorBottomTranscriptSpace, v2);
    unavailabilityIndicatorBottomTranscriptSpace_sIsBoldTextEnabled_unavailabilityIndicatorBottomTranscriptSpace = IsBoldTextEnabled;
    unavailabilityIndicatorBottomTranscriptSpace_sTextFontSize_unavailabilityIndicatorBottomTranscriptSpace = *(_QWORD *)&v4;
    unavailabilityIndicatorBottomTranscriptSpace_sCustomTextFontSize_unavailabilityIndicatorBottomTranscriptSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&unavailabilityIndicatorBottomTranscriptSpace_sCustomTextFontName_unavailabilityIndicatorBottomTranscriptSpace, v7);
  }
  v9 = *(double *)&unavailabilityIndicatorBottomTranscriptSpace_sBehavior;

  return v9;
}

- (double)notifyAnywayBottomTranscriptSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)notifyAnywayBottomTranscriptSpace_sContentSizeCategory_notifyAnywayBottomTranscriptSpace, (UIContentSizeCategory)v2)|| notifyAnywayBottomTranscriptSpace_sIsBoldTextEnabled_notifyAnywayBottomTranscriptSpace != IsBoldTextEnabled|| (*(double *)&notifyAnywayBottomTranscriptSpace_sTextFontSize_notifyAnywayBottomTranscriptSpace == v4? (v11 = *(double *)&notifyAnywayBottomTranscriptSpace_sCustomTextFontSize_notifyAnywayBottomTranscriptSpace == v5): (v11 = 0), !v11|| (objc_msgSend((id)notifyAnywayBottomTranscriptSpace_sCustomTextFontName_notifyAnywayBottomTranscriptSpace, "isEqualToString:", v8, *(double *)&notifyAnywayBottomTranscriptSpace_sTextFontSize_notifyAnywayBottomTranscriptSpace, *(double *)&notifyAnywayBottomTranscriptSpace_sCustomTextFontSize_notifyAnywayBottomTranscriptSpace) & 1) == 0))
  {
    notifyAnywayBottomTranscriptSpace_sBehavior = 0x4028000000000000;
    objc_storeStrong((id *)&notifyAnywayBottomTranscriptSpace_sContentSizeCategory_notifyAnywayBottomTranscriptSpace, v2);
    notifyAnywayBottomTranscriptSpace_sIsBoldTextEnabled_notifyAnywayBottomTranscriptSpace = IsBoldTextEnabled;
    notifyAnywayBottomTranscriptSpace_sTextFontSize_notifyAnywayBottomTranscriptSpace = *(_QWORD *)&v4;
    notifyAnywayBottomTranscriptSpace_sCustomTextFontSize_notifyAnywayBottomTranscriptSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&notifyAnywayBottomTranscriptSpace_sCustomTextFontName_notifyAnywayBottomTranscriptSpace, v7);
  }
  v9 = *(double *)&notifyAnywayBottomTranscriptSpace_sBehavior;

  return v9;
}

- (double)satelliteAvailabilityIndicatorBottomTranscriptSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)satelliteAvailabilityIndicatorBottomTranscriptSpace_sContentSizeCategory_satelliteAvailabilityIndicatorBottomTranscriptSpace, (UIContentSizeCategory)v2)|| satelliteAvailabilityIndicatorBottomTranscriptSpace_sIsBoldTextEnabled_satelliteAvailabilityIndicatorBottomTranscriptSpace != IsBoldTextEnabled|| (*(double *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sTextFontSize_satelliteAvailabilityIndicatorBottomTranscriptSpace == v4? (v11 = *(double *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sCustomTextFontSize_satelliteAvailabilityIndicatorBottomTranscriptSpace == v5): (v11 = 0), !v11|| (objc_msgSend((id)satelliteAvailabilityIndicatorBottomTranscriptSpace_sCustomTextFontName_satelliteAvailabilityIndicatorBottomTranscriptSpace, "isEqualToString:", v8, *(double *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sTextFontSize_satelliteAvailabilityIndicatorBottomTranscriptSpace, *(double *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sCustomTextFontSize_satelliteAvailabilityIndicatorBottomTranscriptSpace) & 1) == 0))
  {
    satelliteAvailabilityIndicatorBottomTranscriptSpace_sBehavior = 0x4030000000000000;
    objc_storeStrong((id *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sContentSizeCategory_satelliteAvailabilityIndicatorBottomTranscriptSpace, v2);
    satelliteAvailabilityIndicatorBottomTranscriptSpace_sIsBoldTextEnabled_satelliteAvailabilityIndicatorBottomTranscriptSpace = IsBoldTextEnabled;
    satelliteAvailabilityIndicatorBottomTranscriptSpace_sTextFontSize_satelliteAvailabilityIndicatorBottomTranscriptSpace = *(_QWORD *)&v4;
    satelliteAvailabilityIndicatorBottomTranscriptSpace_sCustomTextFontSize_satelliteAvailabilityIndicatorBottomTranscriptSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sCustomTextFontName_satelliteAvailabilityIndicatorBottomTranscriptSpace, v7);
  }
  v9 = *(double *)&satelliteAvailabilityIndicatorBottomTranscriptSpace_sBehavior;

  return v9;
}

- (double)satelliteSuppressedNotificationBottomTranscriptSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)satelliteSuppressedNotificationBottomTranscriptSpace_sContentSizeCategory_satelliteSuppressedNotificationBottomTranscriptSpace, (UIContentSizeCategory)v2)|| satelliteSuppressedNotificationBottomTranscriptSpace_sIsBoldTextEnabled_satelliteSuppressedNotificationBottomTranscriptSpace != IsBoldTextEnabled|| (*(double *)&satelliteSuppressedNotificationBottomTranscriptSpace_sTextFontSize_satelliteSuppressedNotificationBottomTranscriptSpace == v4? (v11 = *(double *)&satelliteSuppressedNotificationBottomTranscriptSpace_sCustomTextFontSize_satelliteSuppressedNotificationBottomTranscriptSpace == v5): (v11 = 0), !v11|| (objc_msgSend((id)satelliteSuppressedNotificationBottomTranscriptSpace_sCustomTextFontName_satelliteSuppressedNotificationBottomTranscriptSpace, "isEqualToString:", v8, *(double *)&satelliteSuppressedNotificationBottomTranscriptSpace_sTextFontSize_satelliteSuppressedNotificationBottomTranscriptSpace, *(double *)&satelliteSuppressedNotificationBottomTranscriptSpace_sCustomTextFontSize_satelliteSuppressedNotificationBottomTranscriptSpace) & 1) == 0))
  {
    satelliteSuppressedNotificationBottomTranscriptSpace_sBehavior = 0x4030000000000000;
    objc_storeStrong((id *)&satelliteSuppressedNotificationBottomTranscriptSpace_sContentSizeCategory_satelliteSuppressedNotificationBottomTranscriptSpace, v2);
    satelliteSuppressedNotificationBottomTranscriptSpace_sIsBoldTextEnabled_satelliteSuppressedNotificationBottomTranscriptSpace = IsBoldTextEnabled;
    satelliteSuppressedNotificationBottomTranscriptSpace_sTextFontSize_satelliteSuppressedNotificationBottomTranscriptSpace = *(_QWORD *)&v4;
    satelliteSuppressedNotificationBottomTranscriptSpace_sCustomTextFontSize_satelliteSuppressedNotificationBottomTranscriptSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&satelliteSuppressedNotificationBottomTranscriptSpace_sCustomTextFontName_satelliteSuppressedNotificationBottomTranscriptSpace, v7);
  }
  v9 = *(double *)&satelliteSuppressedNotificationBottomTranscriptSpace_sBehavior;

  return v9;
}

- (double)minTranscriptSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)minTranscriptSpace_sContentSizeCategory_minTranscriptSpace, (UIContentSizeCategory)v2)|| minTranscriptSpace_sIsBoldTextEnabled_minTranscriptSpace != IsBoldTextEnabled|| (*(double *)&minTranscriptSpace_sTextFontSize_minTranscriptSpace == v4? (v11 = *(double *)&minTranscriptSpace_sCustomTextFontSize_minTranscriptSpace == v5): (v11 = 0), !v11|| (objc_msgSend((id)minTranscriptSpace_sCustomTextFontName_minTranscriptSpace, "isEqualToString:", v8, *(double *)&minTranscriptSpace_sTextFontSize_minTranscriptSpace, *(double *)&minTranscriptSpace_sCustomTextFontSize_minTranscriptSpace) & 1) == 0))
  {
    minTranscriptSpace_sBehavior = 0x3FF0000000000000;
    objc_storeStrong((id *)&minTranscriptSpace_sContentSizeCategory_minTranscriptSpace, v2);
    minTranscriptSpace_sIsBoldTextEnabled_minTranscriptSpace = IsBoldTextEnabled;
    minTranscriptSpace_sTextFontSize_minTranscriptSpace = *(_QWORD *)&v4;
    minTranscriptSpace_sCustomTextFontSize_minTranscriptSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&minTranscriptSpace_sCustomTextFontName_minTranscriptSpace, v7);
  }
  v9 = *(double *)&minTranscriptSpace_sBehavior;

  return v9;
}

- (double)xsTranscriptSpace
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  double v9;
  BOOL v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)xsTranscriptSpace_sContentSizeCategory_xsTranscriptSpace, (UIContentSizeCategory)v2)|| xsTranscriptSpace_sIsBoldTextEnabled_xsTranscriptSpace != IsBoldTextEnabled|| (*(double *)&xsTranscriptSpace_sTextFontSize_xsTranscriptSpace == v4? (v11 = *(double *)&xsTranscriptSpace_sCustomTextFontSize_xsTranscriptSpace == v5): (v11 = 0), !v11|| (objc_msgSend((id)xsTranscriptSpace_sCustomTextFontName_xsTranscriptSpace, "isEqualToString:", v8, *(double *)&xsTranscriptSpace_sTextFontSize_xsTranscriptSpace, *(double *)&xsTranscriptSpace_sCustomTextFontSize_xsTranscriptSpace) & 1) == 0))
  {
    xsTranscriptSpace_sBehavior = 0x4000000000000000;
    objc_storeStrong((id *)&xsTranscriptSpace_sContentSizeCategory_xsTranscriptSpace, v2);
    xsTranscriptSpace_sIsBoldTextEnabled_xsTranscriptSpace = IsBoldTextEnabled;
    xsTranscriptSpace_sTextFontSize_xsTranscriptSpace = *(_QWORD *)&v4;
    xsTranscriptSpace_sCustomTextFontSize_xsTranscriptSpace = *(_QWORD *)&v5;
    objc_storeStrong((id *)&xsTranscriptSpace_sCustomTextFontName_xsTranscriptSpace, v7);
  }
  v9 = *(double *)&xsTranscriptSpace_sBehavior;

  return v9;
}

- (double)smallTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)smallTranscriptSpace_sContentSizeCategory_smallTranscriptSpace, (UIContentSizeCategory)v3)|| smallTranscriptSpace_sIsBoldTextEnabled_smallTranscriptSpace != IsBoldTextEnabled|| (*(double *)&smallTranscriptSpace_sTextFontSize_smallTranscriptSpace == v5? (v16 = *(double *)&smallTranscriptSpace_sCustomTextFontSize_smallTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)smallTranscriptSpace_sCustomTextFontName_smallTranscriptSpace, "isEqualToString:", v9, *(double *)&smallTranscriptSpace_sTextFontSize_smallTranscriptSpace, *(double *)&smallTranscriptSpace_sCustomTextFontSize_smallTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 5.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&smallTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&smallTranscriptSpace_sContentSizeCategory_smallTranscriptSpace, v3);
    smallTranscriptSpace_sIsBoldTextEnabled_smallTranscriptSpace = IsBoldTextEnabled;
    smallTranscriptSpace_sTextFontSize_smallTranscriptSpace = *(_QWORD *)&v5;
    smallTranscriptSpace_sCustomTextFontSize_smallTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&smallTranscriptSpace_sCustomTextFontName_smallTranscriptSpace, v8);
  }
  v14 = *(double *)&smallTranscriptSpace_sBehavior;

  return v14;
}

- (double)mediumTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)mediumTranscriptSpace_sContentSizeCategory_mediumTranscriptSpace, (UIContentSizeCategory)v3)|| mediumTranscriptSpace_sIsBoldTextEnabled_mediumTranscriptSpace != IsBoldTextEnabled|| (*(double *)&mediumTranscriptSpace_sTextFontSize_mediumTranscriptSpace == v5? (v16 = *(double *)&mediumTranscriptSpace_sCustomTextFontSize_mediumTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)mediumTranscriptSpace_sCustomTextFontName_mediumTranscriptSpace, "isEqualToString:", v9, *(double *)&mediumTranscriptSpace_sTextFontSize_mediumTranscriptSpace, *(double *)&mediumTranscriptSpace_sCustomTextFontSize_mediumTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 12.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&mediumTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&mediumTranscriptSpace_sContentSizeCategory_mediumTranscriptSpace, v3);
    mediumTranscriptSpace_sIsBoldTextEnabled_mediumTranscriptSpace = IsBoldTextEnabled;
    mediumTranscriptSpace_sTextFontSize_mediumTranscriptSpace = *(_QWORD *)&v5;
    mediumTranscriptSpace_sCustomTextFontSize_mediumTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&mediumTranscriptSpace_sCustomTextFontName_mediumTranscriptSpace, v8);
  }
  v14 = *(double *)&mediumTranscriptSpace_sBehavior;

  return v14;
}

- (double)mediumLargeTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)mediumLargeTranscriptSpace_sContentSizeCategory_mediumLargeTranscriptSpace, (UIContentSizeCategory)v3)|| mediumLargeTranscriptSpace_sIsBoldTextEnabled_mediumLargeTranscriptSpace != IsBoldTextEnabled|| (*(double *)&mediumLargeTranscriptSpace_sTextFontSize_mediumLargeTranscriptSpace == v5? (v16 = *(double *)&mediumLargeTranscriptSpace_sCustomTextFontSize_mediumLargeTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)mediumLargeTranscriptSpace_sCustomTextFontName_mediumLargeTranscriptSpace, "isEqualToString:", v9, *(double *)&mediumLargeTranscriptSpace_sTextFontSize_mediumLargeTranscriptSpace, *(double *)&mediumLargeTranscriptSpace_sCustomTextFontSize_mediumLargeTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 17.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&mediumLargeTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&mediumLargeTranscriptSpace_sContentSizeCategory_mediumLargeTranscriptSpace, v3);
    mediumLargeTranscriptSpace_sIsBoldTextEnabled_mediumLargeTranscriptSpace = IsBoldTextEnabled;
    mediumLargeTranscriptSpace_sTextFontSize_mediumLargeTranscriptSpace = *(_QWORD *)&v5;
    mediumLargeTranscriptSpace_sCustomTextFontSize_mediumLargeTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&mediumLargeTranscriptSpace_sCustomTextFontName_mediumLargeTranscriptSpace, v8);
  }
  v14 = *(double *)&mediumLargeTranscriptSpace_sBehavior;

  return v14;
}

- (double)largeTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)largeTranscriptSpace_sContentSizeCategory_largeTranscriptSpace, (UIContentSizeCategory)v3)|| largeTranscriptSpace_sIsBoldTextEnabled_largeTranscriptSpace != IsBoldTextEnabled|| (*(double *)&largeTranscriptSpace_sTextFontSize_largeTranscriptSpace == v5? (v16 = *(double *)&largeTranscriptSpace_sCustomTextFontSize_largeTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)largeTranscriptSpace_sCustomTextFontName_largeTranscriptSpace, "isEqualToString:", v9, *(double *)&largeTranscriptSpace_sTextFontSize_largeTranscriptSpace, *(double *)&largeTranscriptSpace_sCustomTextFontSize_largeTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 20.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&largeTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&largeTranscriptSpace_sContentSizeCategory_largeTranscriptSpace, v3);
    largeTranscriptSpace_sIsBoldTextEnabled_largeTranscriptSpace = IsBoldTextEnabled;
    largeTranscriptSpace_sTextFontSize_largeTranscriptSpace = *(_QWORD *)&v5;
    largeTranscriptSpace_sCustomTextFontSize_largeTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&largeTranscriptSpace_sCustomTextFontName_largeTranscriptSpace, v8);
  }
  v14 = *(double *)&largeTranscriptSpace_sBehavior;

  return v14;
}

- (double)extraLargeTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)extraLargeTranscriptSpace_sContentSizeCategory_extraLargeTranscriptSpace, (UIContentSizeCategory)v3)|| extraLargeTranscriptSpace_sIsBoldTextEnabled_extraLargeTranscriptSpace != IsBoldTextEnabled|| (*(double *)&extraLargeTranscriptSpace_sTextFontSize_extraLargeTranscriptSpace == v5? (v16 = *(double *)&extraLargeTranscriptSpace_sCustomTextFontSize_extraLargeTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)extraLargeTranscriptSpace_sCustomTextFontName_extraLargeTranscriptSpace, "isEqualToString:", v9, *(double *)&extraLargeTranscriptSpace_sTextFontSize_extraLargeTranscriptSpace, *(double *)&extraLargeTranscriptSpace_sCustomTextFontSize_extraLargeTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 34.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&extraLargeTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&extraLargeTranscriptSpace_sContentSizeCategory_extraLargeTranscriptSpace, v3);
    extraLargeTranscriptSpace_sIsBoldTextEnabled_extraLargeTranscriptSpace = IsBoldTextEnabled;
    extraLargeTranscriptSpace_sTextFontSize_extraLargeTranscriptSpace = *(_QWORD *)&v5;
    extraLargeTranscriptSpace_sCustomTextFontSize_extraLargeTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&extraLargeTranscriptSpace_sCustomTextFontName_extraLargeTranscriptSpace, v8);
  }
  v14 = *(double *)&extraLargeTranscriptSpace_sBehavior;

  return v14;
}

- (double)selfReplyTranscriptSpace
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)selfReplyTranscriptSpace_sContentSizeCategory_selfReplyTranscriptSpace, (UIContentSizeCategory)v3)|| selfReplyTranscriptSpace_sIsBoldTextEnabled_selfReplyTranscriptSpace != IsBoldTextEnabled|| (*(double *)&selfReplyTranscriptSpace_sTextFontSize_selfReplyTranscriptSpace == v5? (v16 = *(double *)&selfReplyTranscriptSpace_sCustomTextFontSize_selfReplyTranscriptSpace == v6): (v16 = 0), !v16|| (objc_msgSend((id)selfReplyTranscriptSpace_sCustomTextFontName_selfReplyTranscriptSpace, "isEqualToString:", v9, *(double *)&selfReplyTranscriptSpace_sTextFontSize_selfReplyTranscriptSpace, *(double *)&selfReplyTranscriptSpace_sCustomTextFontSize_selfReplyTranscriptSpace) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_scaledValueForValue:", 24.0);
    v12 = v11;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v13 = 1.0;
    *(double *)&selfReplyTranscriptSpace_sBehavior = round(v12 * v13) / v13;

    objc_storeStrong((id *)&selfReplyTranscriptSpace_sContentSizeCategory_selfReplyTranscriptSpace, v3);
    selfReplyTranscriptSpace_sIsBoldTextEnabled_selfReplyTranscriptSpace = IsBoldTextEnabled;
    selfReplyTranscriptSpace_sTextFontSize_selfReplyTranscriptSpace = *(_QWORD *)&v5;
    selfReplyTranscriptSpace_sCustomTextFontSize_selfReplyTranscriptSpace = *(_QWORD *)&v6;
    objc_storeStrong((id *)&selfReplyTranscriptSpace_sCustomTextFontName_selfReplyTranscriptSpace, v8);
  }
  v14 = *(double *)&selfReplyTranscriptSpace_sBehavior;

  return v14;
}

- (double)balloonContiguousSpace
{
  if (balloonContiguousSpace_once != -1)
    dispatch_once(&balloonContiguousSpace_once, &__block_literal_global_473_0);
  return *(double *)&balloonContiguousSpace_sBehavior;
}

void __38__CKUIBehavior_balloonContiguousSpace__block_invoke()
{
  balloonContiguousSpace_sBehavior = 0x3FF0000000000000;
}

- (double)balloonNonContiguousSpace
{
  if (balloonNonContiguousSpace_once != -1)
    dispatch_once(&balloonNonContiguousSpace_once, &__block_literal_global_474_0);
  return *(double *)&balloonNonContiguousSpace_sBehavior;
}

void __41__CKUIBehavior_balloonNonContiguousSpace__block_invoke()
{
  balloonNonContiguousSpace_sBehavior = 0x4022000000000000;
}

- (double)balloonBalloonTranscriptSpace:(unsigned __int8)a3
{
  double result;

  if ((a3 - 1) > 1)
    -[CKUIBehavior balloonNonContiguousSpace](self, "balloonNonContiguousSpace");
  else
    -[CKUIBehavior balloonContiguousSpace](self, "balloonContiguousSpace");
  return result;
}

- (double)replyPreviewBalloonAlpha
{
  if (replyPreviewBalloonAlpha_once != -1)
    dispatch_once(&replyPreviewBalloonAlpha_once, &__block_literal_global_475);
  return *(double *)&replyPreviewBalloonAlpha_sBehavior;
}

void __40__CKUIBehavior_replyPreviewBalloonAlpha__block_invoke()
{
  replyPreviewBalloonAlpha_sBehavior = 0x3FE199999999999ALL;
}

- (double)replyPreviewBalloonMinWidth
{
  if (replyPreviewBalloonMinWidth_once != -1)
    dispatch_once(&replyPreviewBalloonMinWidth_once, &__block_literal_global_476);
  return *(double *)&replyPreviewBalloonMinWidth_sBehavior;
}

void __43__CKUIBehavior_replyPreviewBalloonMinWidth__block_invoke()
{
  replyPreviewBalloonMinWidth_sBehavior = 0x4048000000000000;
}

- (double)replyPreviewImageDiameter
{
  if (replyPreviewImageDiameter_once != -1)
    dispatch_once(&replyPreviewImageDiameter_once, &__block_literal_global_477);
  return *(double *)&replyPreviewImageDiameter_sBehavior;
}

void __41__CKUIBehavior_replyPreviewImageDiameter__block_invoke()
{
  replyPreviewImageDiameter_sBehavior = 0x4030000000000000;
}

- (double)contactPhotoBalloonMargin
{
  if (contactPhotoBalloonMargin_once != -1)
    dispatch_once(&contactPhotoBalloonMargin_once, &__block_literal_global_478);
  return *(double *)&contactPhotoBalloonMargin_sBehavior;
}

void __41__CKUIBehavior_contactPhotoBalloonMargin__block_invoke()
{
  contactPhotoBalloonMargin_sBehavior = 0x401C000000000000;
}

- (double)composeBalloonMaxWidthForEntryContentViewWidth:(double)a3
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
  v6 = v5;
  -[CKUIBehavior balloonLineFragmentInsets](self, "balloonLineFragmentInsets");
  v8 = v7;
  v10 = v9;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v11 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v11 = 1.0;
  return ceil((v6 + a3 - (v8 + v10) + -2.0) * v11) / v11;
}

- (id)configurationForNoExistingConversations:(id)a3
{
  return 0;
}

- (double)transcriptJunkHeaderButtonHeight
{
  if (transcriptJunkHeaderButtonHeight_once != -1)
    dispatch_once(&transcriptJunkHeaderButtonHeight_once, &__block_literal_global_481_0);
  return *(double *)&transcriptJunkHeaderButtonHeight_sBehavior;
}

void __48__CKUIBehavior_transcriptJunkHeaderButtonHeight__block_invoke()
{
  void *v0;
  void *v1;
  double v2;
  double v3;

  objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB538], 0, 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v0, 0.0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_bodyLeading");
  v3 = v2 * 1.63636364;

  transcriptJunkHeaderButtonHeight_sBehavior = *(_QWORD *)&v3;
}

- (double)transcriptScrollToBottomThreshold
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __49__CKUIBehavior_transcriptScrollToBottomThreshold__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (transcriptScrollToBottomThreshold_once != -1)
    dispatch_once(&transcriptScrollToBottomThreshold_once, block);
  return *(double *)&transcriptScrollToBottomThreshold_sBehavior;
}

double __49__CKUIBehavior_transcriptScrollToBottomThreshold__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskSizeWithTailShape:isMultiline:", 0, 0);
  v3 = v2;
  objc_msgSend(*(id *)(a1 + 32), "balloonBalloonTranscriptSpace:", 2);
  result = (v3 + v4 * 2.0) * 4.0;
  transcriptScrollToBottomThreshold_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)transcriptScrollToBottomDuration
{
  if (transcriptScrollToBottomDuration_once != -1)
    dispatch_once(&transcriptScrollToBottomDuration_once, &__block_literal_global_482_0);
  return *(double *)&transcriptScrollToBottomDuration_sBehavior;
}

void __48__CKUIBehavior_transcriptScrollToBottomDuration__block_invoke()
{
  transcriptScrollToBottomDuration_sBehavior = 0x3FD3333333333333;
}

- (BOOL)transcriptMinBottomInsetIsEntryViewHeight
{
  if (transcriptMinBottomInsetIsEntryViewHeight_once != -1)
    dispatch_once(&transcriptMinBottomInsetIsEntryViewHeight_once, &__block_literal_global_483);
  return 0;
}

- (UIEdgeInsets)defaultAVPlayerViewContorllerControlsInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (defaultAVPlayerViewContorllerControlsInsets_once != -1)
    dispatch_once(&defaultAVPlayerViewContorllerControlsInsets_once, &__block_literal_global_484);
  v2 = *(double *)&defaultAVPlayerViewContorllerControlsInsets_sBehavior_0;
  v3 = *(double *)&defaultAVPlayerViewContorllerControlsInsets_sBehavior_1;
  v4 = *(double *)&defaultAVPlayerViewContorllerControlsInsets_sBehavior_2;
  v5 = *(double *)&defaultAVPlayerViewContorllerControlsInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __59__CKUIBehavior_defaultAVPlayerViewContorllerControlsInsets__block_invoke()
{
  defaultAVPlayerViewContorllerControlsInsets_sBehavior_0 = 0x4018000000000000;
  defaultAVPlayerViewContorllerControlsInsets_sBehavior_1 = 0x4018000000000000;
  defaultAVPlayerViewContorllerControlsInsets_sBehavior_2 = 0x4018000000000000;
  defaultAVPlayerViewContorllerControlsInsets_sBehavior_3 = 0x4018000000000000;
}

- (CGSize)tuConversationBalloonButtonAsIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (tuConversationBalloonButtonAsIconSize_once != -1)
    dispatch_once(&tuConversationBalloonButtonAsIconSize_once, &__block_literal_global_485_1);
  v2 = *(double *)&tuConversationBalloonButtonAsIconSize_sBehavior_0;
  v3 = *(double *)&tuConversationBalloonButtonAsIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_tuConversationBalloonButtonAsIconSize__block_invoke()
{
  tuConversationBalloonButtonAsIconSize_sBehavior_0 = 0x4041000000000000;
  tuConversationBalloonButtonAsIconSize_sBehavior_1 = 0x4041000000000000;
}

- (double)tuConversationBalloonInteritemSpacing
{
  if (tuConversationBalloonInteritemSpacing_once != -1)
    dispatch_once(&tuConversationBalloonInteritemSpacing_once, &__block_literal_global_486_0);
  return 0.0;
}

- (UIFont)tuConversationBalloonTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  UIFont *v17;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)tuConversationBalloonTitleFont_sContentSizeCategory_tuConversationBalloonTitleFont, (UIContentSizeCategory)v2)|| tuConversationBalloonTitleFont_sIsIncreaseContrastEnabled_tuConversationBalloonTitleFont != v3|| tuConversationBalloonTitleFont_sIsBoldTextEnabled_tuConversationBalloonTitleFont != IsBoldTextEnabled|| (v10 = tuConversationBalloonTitleFont_sTextFontSize_tuConversationBalloonTitleFont, *(double *)&tuConversationBalloonTitleFont_sTextFontSize_tuConversationBalloonTitleFont != v5)|| (v10 = tuConversationBalloonTitleFont_sCustomTextFontSize_tuConversationBalloonTitleFont, *(double *)&tuConversationBalloonTitleFont_sCustomTextFontSize_tuConversationBalloonTitleFont != v6)|| (objc_msgSend((id)tuConversationBalloonTitleFont_sCustomTextFontName_tuConversationBalloonTitleFont, "isEqualToString:", v9, *(double *)&tuConversationBalloonTitleFont_sCustomTextFontSize_tuConversationBalloonTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "fontDescriptor");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "fontDescriptorWithSymbolicTraits:", 0x8000);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v14, 0.0);
    v15 = objc_claimAutoreleasedReturnValue();

    v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v16 = (void *)tuConversationBalloonTitleFont_sBehavior;
    tuConversationBalloonTitleFont_sBehavior = v15;

    objc_storeStrong((id *)&tuConversationBalloonTitleFont_sContentSizeCategory_tuConversationBalloonTitleFont, v2);
    tuConversationBalloonTitleFont_sIsIncreaseContrastEnabled_tuConversationBalloonTitleFont = v3;
    tuConversationBalloonTitleFont_sIsBoldTextEnabled_tuConversationBalloonTitleFont = IsBoldTextEnabled;
    tuConversationBalloonTitleFont_sTextFontSize_tuConversationBalloonTitleFont = *(_QWORD *)&v5;
    tuConversationBalloonTitleFont_sCustomTextFontSize_tuConversationBalloonTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&tuConversationBalloonTitleFont_sCustomTextFontName_tuConversationBalloonTitleFont, v8);
  }
  v17 = (UIFont *)(id)v11[301];

  return v17;
}

- (UIFont)tuConversationBalloonSubtitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v10 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)tuConversationBalloonSubtitleFont_sContentSizeCategory_tuConversationBalloonSubtitleFont, (UIContentSizeCategory)v2)|| tuConversationBalloonSubtitleFont_sIsIncreaseContrastEnabled_tuConversationBalloonSubtitleFont != v3|| tuConversationBalloonSubtitleFont_sIsBoldTextEnabled_tuConversationBalloonSubtitleFont != IsBoldTextEnabled|| *(double *)&tuConversationBalloonSubtitleFont_sTextFontSize_tuConversationBalloonSubtitleFont != v5|| *(double *)&tuConversationBalloonSubtitleFont_sCustomTextFontSize_tuConversationBalloonSubtitleFont != v6|| (objc_msgSend((id)tuConversationBalloonSubtitleFont_sCustomTextFontName_tuConversationBalloonSubtitleFont, "isEqualToString:", v9, *(double *)&tuConversationBalloonSubtitleFont_sCustomTextFontSize_tuConversationBalloonSubtitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB558], *MEMORY[0x1E0DC1440]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "fontDescriptor");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "fontDescriptorWithSymbolicTraits:", 0x8000);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v13, 0.0);
    v14 = objc_claimAutoreleasedReturnValue();

    v10 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v15 = (void *)tuConversationBalloonSubtitleFont_sBehavior;
    tuConversationBalloonSubtitleFont_sBehavior = v14;

    objc_storeStrong((id *)&tuConversationBalloonSubtitleFont_sContentSizeCategory_tuConversationBalloonSubtitleFont, v2);
    tuConversationBalloonSubtitleFont_sIsIncreaseContrastEnabled_tuConversationBalloonSubtitleFont = v3;
    tuConversationBalloonSubtitleFont_sIsBoldTextEnabled_tuConversationBalloonSubtitleFont = IsBoldTextEnabled;
    tuConversationBalloonSubtitleFont_sTextFontSize_tuConversationBalloonSubtitleFont = *(_QWORD *)&v5;
    tuConversationBalloonSubtitleFont_sCustomTextFontSize_tuConversationBalloonSubtitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&tuConversationBalloonSubtitleFont_sCustomTextFontName_tuConversationBalloonSubtitleFont, v8);
  }
  v16 = (UIFont *)(id)v10[304];

  return v16;
}

- (double)tuConversationBalloonSessionImageTrailingPadding
{
  if (tuConversationBalloonSessionImageTrailingPadding_once != -1)
    dispatch_once(&tuConversationBalloonSessionImageTrailingPadding_once, &__block_literal_global_487);
  return *(double *)&tuConversationBalloonSessionImageTrailingPadding_sBehavior;
}

void __64__CKUIBehavior_tuConversationBalloonSessionImageTrailingPadding__block_invoke()
{
  tuConversationBalloonSessionImageTrailingPadding_sBehavior = 0x4024000000000000;
}

- (double)tuConversationBalloonContentTopPadding
{
  if (tuConversationBalloonContentTopPadding_once != -1)
    dispatch_once(&tuConversationBalloonContentTopPadding_once, &__block_literal_global_488);
  return *(double *)&tuConversationBalloonContentTopPadding_sBehavior;
}

void __54__CKUIBehavior_tuConversationBalloonContentTopPadding__block_invoke()
{
  tuConversationBalloonContentTopPadding_sBehavior = 0x4010000000000000;
}

- (double)tuConversationBalloonContentBottomPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __57__CKUIBehavior_tuConversationBalloonContentBottomPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (tuConversationBalloonContentBottomPadding_once != -1)
    dispatch_once(&tuConversationBalloonContentBottomPadding_once, block);
  return *(double *)&tuConversationBalloonContentBottomPadding_sBehavior;
}

uint64_t __57__CKUIBehavior_tuConversationBalloonContentBottomPadding__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "tuConversationBalloonContentTopPadding");
  tuConversationBalloonContentBottomPadding_sBehavior = v2;
  return result;
}

- (double)tuConversationBalloonLabelLeadingPadding
{
  if (tuConversationBalloonLabelLeadingPadding_once != -1)
    dispatch_once(&tuConversationBalloonLabelLeadingPadding_once, &__block_literal_global_489);
  return *(double *)&tuConversationBalloonLabelLeadingPadding_sBehavior;
}

void __56__CKUIBehavior_tuConversationBalloonLabelLeadingPadding__block_invoke()
{
  tuConversationBalloonLabelLeadingPadding_sBehavior = 0x3FF0000000000000;
}

- (double)tuConversationBalloonLabelTrailingPadding
{
  if (tuConversationBalloonLabelTrailingPadding_once != -1)
    dispatch_once(&tuConversationBalloonLabelTrailingPadding_once, &__block_literal_global_490);
  return *(double *)&tuConversationBalloonLabelTrailingPadding_sBehavior;
}

void __57__CKUIBehavior_tuConversationBalloonLabelTrailingPadding__block_invoke()
{
  tuConversationBalloonLabelTrailingPadding_sBehavior = 0x4014000000000000;
}

- (double)tuConversationBalloonJoinButtonLeadingPadding
{
  if (tuConversationBalloonJoinButtonLeadingPadding_once != -1)
    dispatch_once(&tuConversationBalloonJoinButtonLeadingPadding_once, &__block_literal_global_491);
  return *(double *)&tuConversationBalloonJoinButtonLeadingPadding_sBehavior;
}

void __61__CKUIBehavior_tuConversationBalloonJoinButtonLeadingPadding__block_invoke()
{
  tuConversationBalloonJoinButtonLeadingPadding_sBehavior = 0x401C000000000000;
}

- (double)tuConversationBalloonJoinButtonTrailingPadding
{
  if (tuConversationBalloonJoinButtonTrailingPadding_once != -1)
    dispatch_once(&tuConversationBalloonJoinButtonTrailingPadding_once, &__block_literal_global_492);
  return 0.0;
}

- (UIFont)tuConversationBalloonActionButtonFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)tuConversationBalloonActionButtonFont_sContentSizeCategory_tuConversationBalloonActionButtonFont, (UIContentSizeCategory)v3)|| tuConversationBalloonActionButtonFont_sIsIncreaseContrastEnabled_tuConversationBalloonActionButtonFont != v4|| tuConversationBalloonActionButtonFont_sIsBoldTextEnabled_tuConversationBalloonActionButtonFont != IsBoldTextEnabled|| (v11 = tuConversationBalloonActionButtonFont_sTextFontSize_tuConversationBalloonActionButtonFont, *(double *)&tuConversationBalloonActionButtonFont_sTextFontSize_tuConversationBalloonActionButtonFont != v6)|| (v11 = tuConversationBalloonActionButtonFont_sCustomTextFontSize_tuConversationBalloonActionButtonFont, *(double *)&tuConversationBalloonActionButtonFont_sCustomTextFontSize_tuConversationBalloonActionButtonFont != v7)|| (objc_msgSend((id)tuConversationBalloonActionButtonFont_sCustomTextFontName_tuConversationBalloonActionButtonFont, "isEqualToString:", v10, *(double *)&tuConversationBalloonActionButtonFont_sCustomTextFontSize_tuConversationBalloonActionButtonFont) & 1) == 0)
  {
    -[CKUIBehavior navBarUnifiedCallButtonJoinTextFont](self, "navBarUnifiedCallButtonJoinTextFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)tuConversationBalloonActionButtonFont_sBehavior;
    tuConversationBalloonActionButtonFont_sBehavior = v12;

    objc_storeStrong((id *)&tuConversationBalloonActionButtonFont_sContentSizeCategory_tuConversationBalloonActionButtonFont, v3);
    tuConversationBalloonActionButtonFont_sIsIncreaseContrastEnabled_tuConversationBalloonActionButtonFont = v4;
    tuConversationBalloonActionButtonFont_sIsBoldTextEnabled_tuConversationBalloonActionButtonFont = IsBoldTextEnabled;
    tuConversationBalloonActionButtonFont_sTextFontSize_tuConversationBalloonActionButtonFont = *(_QWORD *)&v6;
    tuConversationBalloonActionButtonFont_sCustomTextFontSize_tuConversationBalloonActionButtonFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&tuConversationBalloonActionButtonFont_sCustomTextFontName_tuConversationBalloonActionButtonFont, v9);
  }
  v14 = (UIFont *)(id)tuConversationBalloonActionButtonFont_sBehavior;

  return v14;
}

- (NSString)tuConversationBalloonActionButtonFontStyle
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  NSString *v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)tuConversationBalloonActionButtonFontStyle_sContentSizeCategory_tuConversationBalloonActionButtonFontStyle, (UIContentSizeCategory)v2)|| tuConversationBalloonActionButtonFontStyle_sIsIncreaseContrastEnabled_tuConversationBalloonActionButtonFontStyle != v3|| tuConversationBalloonActionButtonFontStyle_sIsBoldTextEnabled_tuConversationBalloonActionButtonFontStyle != IsBoldTextEnabled|| *(double *)&tuConversationBalloonActionButtonFontStyle_sTextFontSize_tuConversationBalloonActionButtonFontStyle != v5|| *(double *)&tuConversationBalloonActionButtonFontStyle_sCustomTextFontSize_tuConversationBalloonActionButtonFontStyle != v6|| (objc_msgSend((id)tuConversationBalloonActionButtonFontStyle_sCustomTextFontName_tuConversationBalloonActionButtonFontStyle, "isEqualToString:", v9, *(double *)&tuConversationBalloonActionButtonFontStyle_sCustomTextFontSize_tuConversationBalloonActionButtonFontStyle) & 1) == 0)
  {
    objc_storeStrong((id *)&tuConversationBalloonActionButtonFontStyle_sBehavior, (id)*MEMORY[0x1E0CEB558]);
    objc_storeStrong((id *)&tuConversationBalloonActionButtonFontStyle_sContentSizeCategory_tuConversationBalloonActionButtonFontStyle, v2);
    tuConversationBalloonActionButtonFontStyle_sIsIncreaseContrastEnabled_tuConversationBalloonActionButtonFontStyle = v3;
    tuConversationBalloonActionButtonFontStyle_sIsBoldTextEnabled_tuConversationBalloonActionButtonFontStyle = IsBoldTextEnabled;
    tuConversationBalloonActionButtonFontStyle_sTextFontSize_tuConversationBalloonActionButtonFontStyle = *(_QWORD *)&v5;
    tuConversationBalloonActionButtonFontStyle_sCustomTextFontSize_tuConversationBalloonActionButtonFontStyle = *(_QWORD *)&v6;
    objc_storeStrong((id *)&tuConversationBalloonActionButtonFontStyle_sCustomTextFontName_tuConversationBalloonActionButtonFontStyle, v8);
  }
  v10 = (NSString *)(id)tuConversationBalloonActionButtonFontStyle_sBehavior;

  return v10;
}

- (double)tuConversationBalloonImageDimensions
{
  if (tuConversationBalloonImageDimensions_once != -1)
    dispatch_once(&tuConversationBalloonImageDimensions_once, &__block_literal_global_493_0);
  return *(double *)&tuConversationBalloonImageDimensions_sBehavior;
}

void __52__CKUIBehavior_tuConversationBalloonImageDimensions__block_invoke()
{
  tuConversationBalloonImageDimensions_sBehavior = 0x4049000000000000;
}

- (CGSize)tuConversationBalloonFacetimeIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (tuConversationBalloonFacetimeIconSize_once != -1)
    dispatch_once(&tuConversationBalloonFacetimeIconSize_once, &__block_literal_global_494);
  v2 = *(double *)&tuConversationBalloonFacetimeIconSize_sBehavior_0;
  v3 = *(double *)&tuConversationBalloonFacetimeIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_tuConversationBalloonFacetimeIconSize__block_invoke()
{
  tuConversationBalloonFacetimeIconSize_sBehavior_0 = 0x4046000000000000;
  tuConversationBalloonFacetimeIconSize_sBehavior_1 = 0x4046000000000000;
}

- (double)tuConversationBalloonFaceTimeIconDimensions
{
  if (tuConversationBalloonFaceTimeIconDimensions_once != -1)
    dispatch_once(&tuConversationBalloonFaceTimeIconDimensions_once, &__block_literal_global_495);
  return *(double *)&tuConversationBalloonFaceTimeIconDimensions_sBehavior;
}

void __59__CKUIBehavior_tuConversationBalloonFaceTimeIconDimensions__block_invoke()
{
  tuConversationBalloonFaceTimeIconDimensions_sBehavior = 0x4040000000000000;
}

- (UIImageSymbolConfiguration)tuConversationBalloonIconConfiguration
{
  if (tuConversationBalloonIconConfiguration_once != -1)
    dispatch_once(&tuConversationBalloonIconConfiguration_once, &__block_literal_global_496);
  return (UIImageSymbolConfiguration *)(id)tuConversationBalloonIconConfiguration_sBehavior;
}

void __54__CKUIBehavior_tuConversationBalloonIconConfiguration__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 3);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)tuConversationBalloonIconConfiguration_sBehavior;
  tuConversationBalloonIconConfiguration_sBehavior = v0;

}

- (double)tuConversationBalloonIconDimensions
{
  if (tuConversationBalloonIconDimensions_once != -1)
    dispatch_once(&tuConversationBalloonIconDimensions_once, &__block_literal_global_497);
  return *(double *)&tuConversationBalloonIconDimensions_sBehavior;
}

void __51__CKUIBehavior_tuConversationBalloonIconDimensions__block_invoke()
{
  tuConversationBalloonIconDimensions_sBehavior = 0x4030000000000000;
}

- (double)tuConversationBalloonAvatarDimensions
{
  if (tuConversationBalloonAvatarDimensions_once != -1)
    dispatch_once(&tuConversationBalloonAvatarDimensions_once, &__block_literal_global_498_0);
  return *(double *)&tuConversationBalloonAvatarDimensions_sBehavior;
}

void __53__CKUIBehavior_tuConversationBalloonAvatarDimensions__block_invoke()
{
  tuConversationBalloonAvatarDimensions_sBehavior = 0x4030000000000000;
}

- (double)tuConversationBalloonJoinButtonHeight
{
  if (tuConversationBalloonJoinButtonHeight_once != -1)
    dispatch_once(&tuConversationBalloonJoinButtonHeight_once, &__block_literal_global_499_0);
  return *(double *)&tuConversationBalloonJoinButtonHeight_sBehavior;
}

void __53__CKUIBehavior_tuConversationBalloonJoinButtonHeight__block_invoke()
{
  tuConversationBalloonJoinButtonHeight_sBehavior = 0x4042000000000000;
}

- (double)tuConversationBalloonJoinButtonMinWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __55__CKUIBehavior_tuConversationBalloonJoinButtonMinWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (tuConversationBalloonJoinButtonMinWidth_once != -1)
    dispatch_once(&tuConversationBalloonJoinButtonMinWidth_once, block);
  return *(double *)&tuConversationBalloonJoinButtonMinWidth_sBehavior;
}

uint64_t __55__CKUIBehavior_tuConversationBalloonJoinButtonMinWidth__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "tuConversationJoinButtonMinWidth");
  tuConversationBalloonJoinButtonMinWidth_sBehavior = v2;
  return result;
}

- (double)tuConversationBalloonJoinButtonMaxWidth
{
  if (tuConversationBalloonJoinButtonMaxWidth_once != -1)
    dispatch_once(&tuConversationBalloonJoinButtonMaxWidth_once, &__block_literal_global_500);
  return *(double *)&tuConversationBalloonJoinButtonMaxWidth_sBehavior;
}

void __55__CKUIBehavior_tuConversationBalloonJoinButtonMaxWidth__block_invoke()
{
  tuConversationBalloonJoinButtonMaxWidth_sBehavior = 0x4059000000000000;
}

- (double)tuConversationBalloonContentMinHeight
{
  if (tuConversationBalloonContentMinHeight_once != -1)
    dispatch_once(&tuConversationBalloonContentMinHeight_once, &__block_literal_global_501);
  return *(double *)&tuConversationBalloonContentMinHeight_sBehavior;
}

void __53__CKUIBehavior_tuConversationBalloonContentMinHeight__block_invoke()
{
  tuConversationBalloonContentMinHeight_sBehavior = 0x4048000000000000;
}

- (double)tuConversationBalloonContentStandardMinWidth
{
  if (tuConversationBalloonContentStandardMinWidth_once != -1)
    dispatch_once(&tuConversationBalloonContentStandardMinWidth_once, &__block_literal_global_502);
  return *(double *)&tuConversationBalloonContentStandardMinWidth_sBehavior;
}

void __60__CKUIBehavior_tuConversationBalloonContentStandardMinWidth__block_invoke()
{
  tuConversationBalloonContentStandardMinWidth_sBehavior = 0x4069000000000000;
}

- (double)tuConversationBalloonContentCompressedMinWidth
{
  if (tuConversationBalloonContentCompressedMinWidth_once != -1)
    dispatch_once(&tuConversationBalloonContentCompressedMinWidth_once, &__block_literal_global_503);
  return *(double *)&tuConversationBalloonContentCompressedMinWidth_sBehavior;
}

void __62__CKUIBehavior_tuConversationBalloonContentCompressedMinWidth__block_invoke()
{
  tuConversationBalloonContentCompressedMinWidth_sBehavior = 0x405E000000000000;
}

- (NSDirectionalEdgeInsets)tuConversationBalloonContentStackedLayoutJoinButtonInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (tuConversationBalloonContentStackedLayoutJoinButtonInsets_once != -1)
    dispatch_once(&tuConversationBalloonContentStackedLayoutJoinButtonInsets_once, &__block_literal_global_504);
  v2 = *(double *)&tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_0;
  v3 = *(double *)&tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_1;
  v4 = *(double *)&tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_2;
  v5 = *(double *)&tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_3;
  result.trailing = v5;
  result.bottom = v4;
  result.leading = v3;
  result.top = v2;
  return result;
}

void __73__CKUIBehavior_tuConversationBalloonContentStackedLayoutJoinButtonInsets__block_invoke()
{
  tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_0 = 0x4024000000000000;
  tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_1 = 0x403E000000000000;
  tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_2 = 0x4024000000000000;
  tuConversationBalloonContentStackedLayoutJoinButtonInsets_sBehavior_3 = 0x403E000000000000;
}

- (NSDirectionalEdgeInsets)tuConversationBalloonContentStandardLayoutJoinButtonInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (tuConversationBalloonContentStandardLayoutJoinButtonInsets_once != -1)
    dispatch_once(&tuConversationBalloonContentStandardLayoutJoinButtonInsets_once, &__block_literal_global_505);
  v2 = *(double *)&tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_0;
  v3 = *(double *)&tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_1;
  v4 = *(double *)&tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_2;
  v5 = *(double *)&tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_3;
  result.trailing = v5;
  result.bottom = v4;
  result.leading = v3;
  result.top = v2;
  return result;
}

void __74__CKUIBehavior_tuConversationBalloonContentStandardLayoutJoinButtonInsets__block_invoke()
{
  tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_0 = 0x4022000000000000;
  tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_1 = 0x4035000000000000;
  tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_2 = 0x4022000000000000;
  tuConversationBalloonContentStandardLayoutJoinButtonInsets_sBehavior_3 = 0x4035000000000000;
}

- (double)tuConversationInsetPadding
{
  if (tuConversationInsetPadding_once != -1)
    dispatch_once(&tuConversationInsetPadding_once, &__block_literal_global_506_0);
  return *(double *)&tuConversationInsetPadding_sBehavior;
}

void __42__CKUIBehavior_tuConversationInsetPadding__block_invoke()
{
  tuConversationInsetPadding_sBehavior = 0x4031000000000000;
}

- (double)tuConversationInteritemSpacing
{
  if (tuConversationInteritemSpacing_once != -1)
    dispatch_once(&tuConversationInteritemSpacing_once, &__block_literal_global_507_0);
  return *(double *)&tuConversationInteritemSpacing_sBehavior;
}

void __46__CKUIBehavior_tuConversationInteritemSpacing__block_invoke()
{
  tuConversationInteritemSpacing_sBehavior = 0x4028000000000000;
}

- (double)tuConversationIconPointSize
{
  if (tuConversationIconPointSize_once != -1)
    dispatch_once(&tuConversationIconPointSize_once, &__block_literal_global_508);
  return *(double *)&tuConversationIconPointSize_sBehavior;
}

void __43__CKUIBehavior_tuConversationIconPointSize__block_invoke()
{
  tuConversationIconPointSize_sBehavior = 0x4031000000000000;
}

- (double)tuConversationButtonInteritemSpacing
{
  if (tuConversationButtonInteritemSpacing_once != -1)
    dispatch_once(&tuConversationButtonInteritemSpacing_once, &__block_literal_global_509);
  return *(double *)&tuConversationButtonInteritemSpacing_sBehavior;
}

void __52__CKUIBehavior_tuConversationButtonInteritemSpacing__block_invoke()
{
  tuConversationButtonInteritemSpacing_sBehavior = 0x4031000000000000;
}

- (double)tuConversationButtonTitleHorizontalSpacing
{
  if (tuConversationButtonTitleHorizontalSpacing_once != -1)
    dispatch_once(&tuConversationButtonTitleHorizontalSpacing_once, &__block_literal_global_510_0);
  return *(double *)&tuConversationButtonTitleHorizontalSpacing_sBehavior;
}

void __58__CKUIBehavior_tuConversationButtonTitleHorizontalSpacing__block_invoke()
{
  tuConversationButtonTitleHorizontalSpacing_sBehavior = 0x4031000000000000;
}

- (double)tuConversationButtonTitleVerticalSpacing
{
  if (tuConversationButtonTitleVerticalSpacing_once != -1)
    dispatch_once(&tuConversationButtonTitleVerticalSpacing_once, &__block_literal_global_511);
  return *(double *)&tuConversationButtonTitleVerticalSpacing_sBehavior;
}

void __56__CKUIBehavior_tuConversationButtonTitleVerticalSpacing__block_invoke()
{
  tuConversationButtonTitleVerticalSpacing_sBehavior = 0x4018000000000000;
}

- (UIFont)tuConversationViewActionButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)tuConversationViewActionButtonFont_sContentSizeCategory_tuConversationViewActionButtonFont, (UIContentSizeCategory)v2)|| tuConversationViewActionButtonFont_sIsIncreaseContrastEnabled_tuConversationViewActionButtonFont != v3|| tuConversationViewActionButtonFont_sIsBoldTextEnabled_tuConversationViewActionButtonFont != IsBoldTextEnabled|| (v10 = tuConversationViewActionButtonFont_sTextFontSize_tuConversationViewActionButtonFont, *(double *)&tuConversationViewActionButtonFont_sTextFontSize_tuConversationViewActionButtonFont != v5)|| (v10 = tuConversationViewActionButtonFont_sCustomTextFontSize_tuConversationViewActionButtonFont, *(double *)&tuConversationViewActionButtonFont_sCustomTextFontSize_tuConversationViewActionButtonFont != v6)|| (objc_msgSend((id)tuConversationViewActionButtonFont_sCustomTextFontName_tuConversationViewActionButtonFont, "isEqualToString:", v9, *(double *)&tuConversationViewActionButtonFont_sCustomTextFontSize_tuConversationViewActionButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_emphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)tuConversationViewActionButtonFont_sBehavior;
    tuConversationViewActionButtonFont_sBehavior = v11;

    objc_storeStrong((id *)&tuConversationViewActionButtonFont_sContentSizeCategory_tuConversationViewActionButtonFont, v2);
    tuConversationViewActionButtonFont_sIsIncreaseContrastEnabled_tuConversationViewActionButtonFont = v3;
    tuConversationViewActionButtonFont_sIsBoldTextEnabled_tuConversationViewActionButtonFont = IsBoldTextEnabled;
    tuConversationViewActionButtonFont_sTextFontSize_tuConversationViewActionButtonFont = *(_QWORD *)&v5;
    tuConversationViewActionButtonFont_sCustomTextFontSize_tuConversationViewActionButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&tuConversationViewActionButtonFont_sCustomTextFontName_tuConversationViewActionButtonFont, v8);
  }
  v13 = (UIFont *)(id)tuConversationViewActionButtonFont_sBehavior;

  return v13;
}

- (NSString)transcriptTextFontStyle
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  NSString *v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptTextFontStyle_sContentSizeCategory_transcriptTextFontStyle, (UIContentSizeCategory)v2)|| transcriptTextFontStyle_sIsIncreaseContrastEnabled_transcriptTextFontStyle != v3|| transcriptTextFontStyle_sIsBoldTextEnabled_transcriptTextFontStyle != IsBoldTextEnabled|| *(double *)&transcriptTextFontStyle_sTextFontSize_transcriptTextFontStyle != v5|| *(double *)&transcriptTextFontStyle_sCustomTextFontSize_transcriptTextFontStyle != v6|| (objc_msgSend((id)transcriptTextFontStyle_sCustomTextFontName_transcriptTextFontStyle, "isEqualToString:", v9, *(double *)&transcriptTextFontStyle_sCustomTextFontSize_transcriptTextFontStyle) & 1) == 0)
  {
    objc_storeStrong((id *)&transcriptTextFontStyle_sBehavior, (id)*MEMORY[0x1E0CEB550]);
    objc_storeStrong((id *)&transcriptTextFontStyle_sContentSizeCategory_transcriptTextFontStyle, v2);
    transcriptTextFontStyle_sIsIncreaseContrastEnabled_transcriptTextFontStyle = v3;
    transcriptTextFontStyle_sIsBoldTextEnabled_transcriptTextFontStyle = IsBoldTextEnabled;
    transcriptTextFontStyle_sTextFontSize_transcriptTextFontStyle = *(_QWORD *)&v5;
    transcriptTextFontStyle_sCustomTextFontSize_transcriptTextFontStyle = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptTextFontStyle_sCustomTextFontName_transcriptTextFontStyle, v8);
  }
  v10 = (NSString *)(id)transcriptTextFontStyle_sBehavior;

  return v10;
}

- (UIFont)transcriptTextFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptTextFont_sContentSizeCategory_transcriptTextFont, (UIContentSizeCategory)v3)|| transcriptTextFont_sIsIncreaseContrastEnabled_transcriptTextFont != v4|| transcriptTextFont_sIsBoldTextEnabled_transcriptTextFont != IsBoldTextEnabled|| (v11 = transcriptTextFont_sTextFontSize_transcriptTextFont, *(double *)&transcriptTextFont_sTextFontSize_transcriptTextFont != v6)|| (v11 = transcriptTextFont_sCustomTextFontSize_transcriptTextFont, *(double *)&transcriptTextFont_sCustomTextFontSize_transcriptTextFont != v7)|| (objc_msgSend((id)transcriptTextFont_sCustomTextFontName_transcriptTextFont, "isEqualToString:", v10, *(double *)&transcriptTextFont_sCustomTextFontSize_transcriptTextFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "preferredFontForTextStyle:", v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptTextFont_sBehavior;
    transcriptTextFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptTextFont_sContentSizeCategory_transcriptTextFont, v3);
    transcriptTextFont_sIsIncreaseContrastEnabled_transcriptTextFont = v4;
    transcriptTextFont_sIsBoldTextEnabled_transcriptTextFont = IsBoldTextEnabled;
    transcriptTextFont_sTextFontSize_transcriptTextFont = *(_QWORD *)&v6;
    transcriptTextFont_sCustomTextFontSize_transcriptTextFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptTextFont_sCustomTextFontName_transcriptTextFont, v9);
  }
  v16 = (UIFont *)(id)transcriptTextFont_sBehavior;

  return v16;
}

- (UIFont)transcriptMessageStatusFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptMessageStatusFont_sContentSizeCategory_transcriptMessageStatusFont, (UIContentSizeCategory)v3)|| transcriptMessageStatusFont_sIsIncreaseContrastEnabled_transcriptMessageStatusFont != v4|| transcriptMessageStatusFont_sIsBoldTextEnabled_transcriptMessageStatusFont != IsBoldTextEnabled|| (v11 = transcriptMessageStatusFont_sTextFontSize_transcriptMessageStatusFont, *(double *)&transcriptMessageStatusFont_sTextFontSize_transcriptMessageStatusFont != v6)|| (v11 = transcriptMessageStatusFont_sCustomTextFontSize_transcriptMessageStatusFont, *(double *)&transcriptMessageStatusFont_sCustomTextFontSize_transcriptMessageStatusFont != v7)|| (objc_msgSend((id)transcriptMessageStatusFont_sCustomTextFontName_transcriptMessageStatusFont, "isEqualToString:", v10, *(double *)&transcriptMessageStatusFont_sCustomTextFontSize_transcriptMessageStatusFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_fontForStyle:weight:", v13, *MEMORY[0x1E0DC1448]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptMessageStatusFont_sBehavior;
    transcriptMessageStatusFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptMessageStatusFont_sContentSizeCategory_transcriptMessageStatusFont, v3);
    transcriptMessageStatusFont_sIsIncreaseContrastEnabled_transcriptMessageStatusFont = v4;
    transcriptMessageStatusFont_sIsBoldTextEnabled_transcriptMessageStatusFont = IsBoldTextEnabled;
    transcriptMessageStatusFont_sTextFontSize_transcriptMessageStatusFont = *(_QWORD *)&v6;
    transcriptMessageStatusFont_sCustomTextFontSize_transcriptMessageStatusFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptMessageStatusFont_sCustomTextFontName_transcriptMessageStatusFont, v9);
  }
  v16 = (UIFont *)(id)transcriptMessageStatusFont_sBehavior;

  return v16;
}

- (UIFont)transcriptBoldFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptBoldFont_sContentSizeCategory_transcriptBoldFont, (UIContentSizeCategory)v3)|| transcriptBoldFont_sIsIncreaseContrastEnabled_transcriptBoldFont != v4|| transcriptBoldFont_sIsBoldTextEnabled_transcriptBoldFont != IsBoldTextEnabled|| (v11 = transcriptBoldFont_sTextFontSize_transcriptBoldFont, *(double *)&transcriptBoldFont_sTextFontSize_transcriptBoldFont != v6)|| (v11 = transcriptBoldFont_sCustomTextFontSize_transcriptBoldFont, *(double *)&transcriptBoldFont_sCustomTextFontSize_transcriptBoldFont != v7)|| (objc_msgSend((id)transcriptBoldFont_sCustomTextFontName_transcriptBoldFont, "isEqualToString:", v10, *(double *)&transcriptBoldFont_sCustomTextFontSize_transcriptBoldFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_fontForStyle:weight:", v13, *MEMORY[0x1E0DC1438]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptBoldFont_sBehavior;
    transcriptBoldFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptBoldFont_sContentSizeCategory_transcriptBoldFont, v3);
    transcriptBoldFont_sIsIncreaseContrastEnabled_transcriptBoldFont = v4;
    transcriptBoldFont_sIsBoldTextEnabled_transcriptBoldFont = IsBoldTextEnabled;
    transcriptBoldFont_sTextFontSize_transcriptBoldFont = *(_QWORD *)&v6;
    transcriptBoldFont_sCustomTextFontSize_transcriptBoldFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptBoldFont_sCustomTextFontName_transcriptBoldFont, v9);
  }
  v16 = (UIFont *)(id)transcriptBoldFont_sBehavior;

  return v16;
}

- (UIFont)transcriptBoldPreferredFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptBoldPreferredFont_sContentSizeCategory_transcriptBoldPreferredFont, (UIContentSizeCategory)v3)|| transcriptBoldPreferredFont_sIsIncreaseContrastEnabled_transcriptBoldPreferredFont != v4|| transcriptBoldPreferredFont_sIsBoldTextEnabled_transcriptBoldPreferredFont != IsBoldTextEnabled|| (v11 = transcriptBoldPreferredFont_sTextFontSize_transcriptBoldPreferredFont, *(double *)&transcriptBoldPreferredFont_sTextFontSize_transcriptBoldPreferredFont != v6)|| (v11 = transcriptBoldPreferredFont_sCustomTextFontSize_transcriptBoldPreferredFont, *(double *)&transcriptBoldPreferredFont_sCustomTextFontSize_transcriptBoldPreferredFont != v7)|| (objc_msgSend((id)transcriptBoldPreferredFont_sCustomTextFontName_transcriptBoldPreferredFont, "isEqualToString:", v10, *(double *)&transcriptBoldPreferredFont_sCustomTextFontSize_transcriptBoldPreferredFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_preferredFontForStyle:weight:", v13, *MEMORY[0x1E0DC1438]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptBoldPreferredFont_sBehavior;
    transcriptBoldPreferredFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptBoldPreferredFont_sContentSizeCategory_transcriptBoldPreferredFont, v3);
    transcriptBoldPreferredFont_sIsIncreaseContrastEnabled_transcriptBoldPreferredFont = v4;
    transcriptBoldPreferredFont_sIsBoldTextEnabled_transcriptBoldPreferredFont = IsBoldTextEnabled;
    transcriptBoldPreferredFont_sTextFontSize_transcriptBoldPreferredFont = *(_QWORD *)&v6;
    transcriptBoldPreferredFont_sCustomTextFontSize_transcriptBoldPreferredFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptBoldPreferredFont_sCustomTextFontName_transcriptBoldPreferredFont, v9);
  }
  v16 = (UIFont *)(id)transcriptBoldPreferredFont_sBehavior;

  return v16;
}

- (UIFont)transcriptRegularFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptRegularFont_sContentSizeCategory_transcriptRegularFont, (UIContentSizeCategory)v3)|| transcriptRegularFont_sIsIncreaseContrastEnabled_transcriptRegularFont != v4|| transcriptRegularFont_sIsBoldTextEnabled_transcriptRegularFont != IsBoldTextEnabled|| (v11 = transcriptRegularFont_sTextFontSize_transcriptRegularFont, *(double *)&transcriptRegularFont_sTextFontSize_transcriptRegularFont != v6)|| (v11 = transcriptRegularFont_sCustomTextFontSize_transcriptRegularFont, *(double *)&transcriptRegularFont_sCustomTextFontSize_transcriptRegularFont != v7)|| (objc_msgSend((id)transcriptRegularFont_sCustomTextFontName_transcriptRegularFont, "isEqualToString:", v10, *(double *)&transcriptRegularFont_sCustomTextFontSize_transcriptRegularFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_fontForStyle:weight:", v13, *MEMORY[0x1E0DC1440]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptRegularFont_sBehavior;
    transcriptRegularFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptRegularFont_sContentSizeCategory_transcriptRegularFont, v3);
    transcriptRegularFont_sIsIncreaseContrastEnabled_transcriptRegularFont = v4;
    transcriptRegularFont_sIsBoldTextEnabled_transcriptRegularFont = IsBoldTextEnabled;
    transcriptRegularFont_sTextFontSize_transcriptRegularFont = *(_QWORD *)&v6;
    transcriptRegularFont_sCustomTextFontSize_transcriptRegularFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptRegularFont_sCustomTextFontName_transcriptRegularFont, v9);
  }
  v16 = (UIFont *)(id)transcriptRegularFont_sBehavior;

  return v16;
}

- (UIFont)transcriptRegularPreferredFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptRegularPreferredFont_sContentSizeCategory_transcriptRegularPreferredFont, (UIContentSizeCategory)v3)|| transcriptRegularPreferredFont_sIsIncreaseContrastEnabled_transcriptRegularPreferredFont != v4|| transcriptRegularPreferredFont_sIsBoldTextEnabled_transcriptRegularPreferredFont != IsBoldTextEnabled|| (v11 = transcriptRegularPreferredFont_sTextFontSize_transcriptRegularPreferredFont, *(double *)&transcriptRegularPreferredFont_sTextFontSize_transcriptRegularPreferredFont != v6)|| (v11 = transcriptRegularPreferredFont_sCustomTextFontSize_transcriptRegularPreferredFont, *(double *)&transcriptRegularPreferredFont_sCustomTextFontSize_transcriptRegularPreferredFont != v7)|| (objc_msgSend((id)transcriptRegularPreferredFont_sCustomTextFontName_transcriptRegularPreferredFont, "isEqualToString:", v10, *(double *)&transcriptRegularPreferredFont_sCustomTextFontSize_transcriptRegularPreferredFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_preferredFontForStyle:weight:", v13, *MEMORY[0x1E0DC1440]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptRegularPreferredFont_sBehavior;
    transcriptRegularPreferredFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptRegularPreferredFont_sContentSizeCategory_transcriptRegularPreferredFont, v3);
    transcriptRegularPreferredFont_sIsIncreaseContrastEnabled_transcriptRegularPreferredFont = v4;
    transcriptRegularPreferredFont_sIsBoldTextEnabled_transcriptRegularPreferredFont = IsBoldTextEnabled;
    transcriptRegularPreferredFont_sTextFontSize_transcriptRegularPreferredFont = *(_QWORD *)&v6;
    transcriptRegularPreferredFont_sCustomTextFontSize_transcriptRegularPreferredFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptRegularPreferredFont_sCustomTextFontName_transcriptRegularPreferredFont, v9);
  }
  v16 = (UIFont *)(id)transcriptRegularPreferredFont_sBehavior;

  return v16;
}

- (id)transcriptErrorStampFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptErrorStampFont_sContentSizeCategory_transcriptErrorStampFont, (UIContentSizeCategory)v3)|| transcriptErrorStampFont_sIsIncreaseContrastEnabled_transcriptErrorStampFont != v4|| transcriptErrorStampFont_sIsBoldTextEnabled_transcriptErrorStampFont != IsBoldTextEnabled|| (v11 = transcriptErrorStampFont_sTextFontSize_transcriptErrorStampFont, *(double *)&transcriptErrorStampFont_sTextFontSize_transcriptErrorStampFont != v6)|| (v11 = transcriptErrorStampFont_sCustomTextFontSize_transcriptErrorStampFont, *(double *)&transcriptErrorStampFont_sCustomTextFontSize_transcriptErrorStampFont != v7)|| (objc_msgSend((id)transcriptErrorStampFont_sCustomTextFontName_transcriptErrorStampFont, "isEqualToString:", v10, *(double *)&transcriptErrorStampFont_sCustomTextFontSize_transcriptErrorStampFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_fontForStyle:weight:", v13, *MEMORY[0x1E0DC1448]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptErrorStampFont_sBehavior;
    transcriptErrorStampFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptErrorStampFont_sContentSizeCategory_transcriptErrorStampFont, v3);
    transcriptErrorStampFont_sIsIncreaseContrastEnabled_transcriptErrorStampFont = v4;
    transcriptErrorStampFont_sIsBoldTextEnabled_transcriptErrorStampFont = IsBoldTextEnabled;
    transcriptErrorStampFont_sTextFontSize_transcriptErrorStampFont = *(_QWORD *)&v6;
    transcriptErrorStampFont_sCustomTextFontSize_transcriptErrorStampFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptErrorStampFont_sCustomTextFontName_transcriptErrorStampFont, v9);
  }
  v16 = (id)transcriptErrorStampFont_sBehavior;

  return v16;
}

- (id)transcriptErrorStampPreferredFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptErrorStampPreferredFont_sContentSizeCategory_transcriptErrorStampPreferredFont, (UIContentSizeCategory)v3)|| transcriptErrorStampPreferredFont_sIsIncreaseContrastEnabled_transcriptErrorStampPreferredFont != v4|| transcriptErrorStampPreferredFont_sIsBoldTextEnabled_transcriptErrorStampPreferredFont != IsBoldTextEnabled|| (v11 = transcriptErrorStampPreferredFont_sTextFontSize_transcriptErrorStampPreferredFont, *(double *)&transcriptErrorStampPreferredFont_sTextFontSize_transcriptErrorStampPreferredFont != v6)|| (v11 = transcriptErrorStampPreferredFont_sCustomTextFontSize_transcriptErrorStampPreferredFont, *(double *)&transcriptErrorStampPreferredFont_sCustomTextFontSize_transcriptErrorStampPreferredFont != v7)|| (objc_msgSend((id)transcriptErrorStampPreferredFont_sCustomTextFontName_transcriptErrorStampPreferredFont, "isEqualToString:", v10, *(double *)&transcriptErrorStampPreferredFont_sCustomTextFontSize_transcriptErrorStampPreferredFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_preferredFontForStyle:weight:", v13, *MEMORY[0x1E0DC1448]);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptErrorStampPreferredFont_sBehavior;
    transcriptErrorStampPreferredFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptErrorStampPreferredFont_sContentSizeCategory_transcriptErrorStampPreferredFont, v3);
    transcriptErrorStampPreferredFont_sIsIncreaseContrastEnabled_transcriptErrorStampPreferredFont = v4;
    transcriptErrorStampPreferredFont_sIsBoldTextEnabled_transcriptErrorStampPreferredFont = IsBoldTextEnabled;
    transcriptErrorStampPreferredFont_sTextFontSize_transcriptErrorStampPreferredFont = *(_QWORD *)&v6;
    transcriptErrorStampPreferredFont_sCustomTextFontSize_transcriptErrorStampPreferredFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptErrorStampPreferredFont_sCustomTextFontName_transcriptErrorStampPreferredFont, v9);
  }
  v16 = (id)transcriptErrorStampPreferredFont_sBehavior;

  return v16;
}

- (UIFont)transcriptLightFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptLightFont_sContentSizeCategory_transcriptLightFont, (UIContentSizeCategory)v2)|| transcriptLightFont_sIsIncreaseContrastEnabled_transcriptLightFont != v3|| transcriptLightFont_sIsBoldTextEnabled_transcriptLightFont != IsBoldTextEnabled|| *(double *)&transcriptLightFont_sTextFontSize_transcriptLightFont != v5|| *(double *)&transcriptLightFont_sCustomTextFontSize_transcriptLightFont != v6|| (objc_msgSend((id)transcriptLightFont_sCustomTextFontName_transcriptLightFont, "isEqualToString:", v9, *(double *)&transcriptLightFont_sCustomTextFontSize_transcriptLightFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB550], *MEMORY[0x1E0DC1430]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)transcriptLightFont_sBehavior;
    transcriptLightFont_sBehavior = v10;

    objc_storeStrong((id *)&transcriptLightFont_sContentSizeCategory_transcriptLightFont, v2);
    transcriptLightFont_sIsIncreaseContrastEnabled_transcriptLightFont = v3;
    transcriptLightFont_sIsBoldTextEnabled_transcriptLightFont = IsBoldTextEnabled;
    transcriptLightFont_sTextFontSize_transcriptLightFont = *(_QWORD *)&v5;
    transcriptLightFont_sCustomTextFontSize_transcriptLightFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptLightFont_sCustomTextFontName_transcriptLightFont, v8);
  }
  v12 = (UIFont *)(id)transcriptLightFont_sBehavior;

  return v12;
}

- (UIFont)transcriptAvailabilityFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptAvailabilityFont_sContentSizeCategory_transcriptAvailabilityFont, (UIContentSizeCategory)v2)|| transcriptAvailabilityFont_sIsIncreaseContrastEnabled_transcriptAvailabilityFont != v3|| transcriptAvailabilityFont_sIsBoldTextEnabled_transcriptAvailabilityFont != IsBoldTextEnabled|| *(double *)&transcriptAvailabilityFont_sTextFontSize_transcriptAvailabilityFont != v5|| *(double *)&transcriptAvailabilityFont_sCustomTextFontSize_transcriptAvailabilityFont != v6|| (objc_msgSend((id)transcriptAvailabilityFont_sCustomTextFontName_transcriptAvailabilityFont, "isEqualToString:", v9, *(double *)&transcriptAvailabilityFont_sCustomTextFontSize_transcriptAvailabilityFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB590], *MEMORY[0x1E0DC1440]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)transcriptAvailabilityFont_sBehavior;
    transcriptAvailabilityFont_sBehavior = v10;

    objc_storeStrong((id *)&transcriptAvailabilityFont_sContentSizeCategory_transcriptAvailabilityFont, v2);
    transcriptAvailabilityFont_sIsIncreaseContrastEnabled_transcriptAvailabilityFont = v3;
    transcriptAvailabilityFont_sIsBoldTextEnabled_transcriptAvailabilityFont = IsBoldTextEnabled;
    transcriptAvailabilityFont_sTextFontSize_transcriptAvailabilityFont = *(_QWORD *)&v5;
    transcriptAvailabilityFont_sCustomTextFontSize_transcriptAvailabilityFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptAvailabilityFont_sCustomTextFontName_transcriptAvailabilityFont, v8);
  }
  v12 = (UIFont *)(id)transcriptAvailabilityFont_sBehavior;

  return v12;
}

- (UIFont)transcriptNotifyAnywayFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptNotifyAnywayFont_sContentSizeCategory_transcriptNotifyAnywayFont, (UIContentSizeCategory)v2)|| transcriptNotifyAnywayFont_sIsIncreaseContrastEnabled_transcriptNotifyAnywayFont != v3|| transcriptNotifyAnywayFont_sIsBoldTextEnabled_transcriptNotifyAnywayFont != IsBoldTextEnabled|| *(double *)&transcriptNotifyAnywayFont_sTextFontSize_transcriptNotifyAnywayFont != v5|| *(double *)&transcriptNotifyAnywayFont_sCustomTextFontSize_transcriptNotifyAnywayFont != v6|| (objc_msgSend((id)transcriptNotifyAnywayFont_sCustomTextFontName_transcriptNotifyAnywayFont, "isEqualToString:", v9, *(double *)&transcriptNotifyAnywayFont_sCustomTextFontSize_transcriptNotifyAnywayFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB558], *MEMORY[0x1E0DC1448]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)transcriptNotifyAnywayFont_sBehavior;
    transcriptNotifyAnywayFont_sBehavior = v10;

    objc_storeStrong((id *)&transcriptNotifyAnywayFont_sContentSizeCategory_transcriptNotifyAnywayFont, v2);
    transcriptNotifyAnywayFont_sIsIncreaseContrastEnabled_transcriptNotifyAnywayFont = v3;
    transcriptNotifyAnywayFont_sIsBoldTextEnabled_transcriptNotifyAnywayFont = IsBoldTextEnabled;
    transcriptNotifyAnywayFont_sTextFontSize_transcriptNotifyAnywayFont = *(_QWORD *)&v5;
    transcriptNotifyAnywayFont_sCustomTextFontSize_transcriptNotifyAnywayFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptNotifyAnywayFont_sCustomTextFontName_transcriptNotifyAnywayFont, v8);
  }
  v12 = (UIFont *)(id)transcriptNotifyAnywayFont_sBehavior;

  return v12;
}

- (UIFont)transcriptMessageStatusDateFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptMessageStatusDateFont_sContentSizeCategory_transcriptMessageStatusDateFont, (UIContentSizeCategory)v3)|| transcriptMessageStatusDateFont_sIsIncreaseContrastEnabled_transcriptMessageStatusDateFont != v4|| transcriptMessageStatusDateFont_sIsBoldTextEnabled_transcriptMessageStatusDateFont != IsBoldTextEnabled|| (v11 = transcriptMessageStatusDateFont_sTextFontSize_transcriptMessageStatusDateFont, *(double *)&transcriptMessageStatusDateFont_sTextFontSize_transcriptMessageStatusDateFont != v6)|| (v11 = transcriptMessageStatusDateFont_sCustomTextFontSize_transcriptMessageStatusDateFont, *(double *)&transcriptMessageStatusDateFont_sCustomTextFontSize_transcriptMessageStatusDateFont != v7)|| (objc_msgSend((id)transcriptMessageStatusDateFont_sCustomTextFontName_transcriptMessageStatusDateFont, "isEqualToString:", v10, *(double *)&transcriptMessageStatusDateFont_sCustomTextFontSize_transcriptMessageStatusDateFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_monospacedPreferredFontForTextStyle:", v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptMessageStatusDateFont_sBehavior;
    transcriptMessageStatusDateFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptMessageStatusDateFont_sContentSizeCategory_transcriptMessageStatusDateFont, v3);
    transcriptMessageStatusDateFont_sIsIncreaseContrastEnabled_transcriptMessageStatusDateFont = v4;
    transcriptMessageStatusDateFont_sIsBoldTextEnabled_transcriptMessageStatusDateFont = IsBoldTextEnabled;
    transcriptMessageStatusDateFont_sTextFontSize_transcriptMessageStatusDateFont = *(_QWORD *)&v6;
    transcriptMessageStatusDateFont_sCustomTextFontSize_transcriptMessageStatusDateFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptMessageStatusDateFont_sCustomTextFontName_transcriptMessageStatusDateFont, v9);
  }
  v16 = (UIFont *)(id)transcriptMessageStatusDateFont_sBehavior;

  return v16;
}

- (id)transcriptButtonTextFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptButtonTextFont_sContentSizeCategory_transcriptButtonTextFont, (UIContentSizeCategory)v3)|| transcriptButtonTextFont_sIsIncreaseContrastEnabled_transcriptButtonTextFont != v4|| transcriptButtonTextFont_sIsBoldTextEnabled_transcriptButtonTextFont != IsBoldTextEnabled|| (v11 = transcriptButtonTextFont_sTextFontSize_transcriptButtonTextFont, *(double *)&transcriptButtonTextFont_sTextFontSize_transcriptButtonTextFont != v6)|| (v11 = transcriptButtonTextFont_sCustomTextFontSize_transcriptButtonTextFont, *(double *)&transcriptButtonTextFont_sCustomTextFontSize_transcriptButtonTextFont != v7)|| (objc_msgSend((id)transcriptButtonTextFont_sCustomTextFontName_transcriptButtonTextFont, "isEqualToString:", v10, *(double *)&transcriptButtonTextFont_sCustomTextFontSize_transcriptButtonTextFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_emphasizedPreferredFontForTextStyle:", v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptButtonTextFont_sBehavior;
    transcriptButtonTextFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptButtonTextFont_sContentSizeCategory_transcriptButtonTextFont, v3);
    transcriptButtonTextFont_sIsIncreaseContrastEnabled_transcriptButtonTextFont = v4;
    transcriptButtonTextFont_sIsBoldTextEnabled_transcriptButtonTextFont = IsBoldTextEnabled;
    transcriptButtonTextFont_sTextFontSize_transcriptButtonTextFont = *(_QWORD *)&v6;
    transcriptButtonTextFont_sCustomTextFontSize_transcriptButtonTextFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptButtonTextFont_sCustomTextFontName_transcriptButtonTextFont, v9);
  }
  v16 = (id)transcriptButtonTextFont_sBehavior;

  return v16;
}

- (UIFont)transcriptBodyBoldTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptBodyBoldTextFont_sContentSizeCategory_transcriptBodyBoldTextFont, (UIContentSizeCategory)v2)|| transcriptBodyBoldTextFont_sIsIncreaseContrastEnabled_transcriptBodyBoldTextFont != v3|| transcriptBodyBoldTextFont_sIsBoldTextEnabled_transcriptBodyBoldTextFont != IsBoldTextEnabled|| (v10 = transcriptBodyBoldTextFont_sTextFontSize_transcriptBodyBoldTextFont, *(double *)&transcriptBodyBoldTextFont_sTextFontSize_transcriptBodyBoldTextFont != v5)|| (v10 = transcriptBodyBoldTextFont_sCustomTextFontSize_transcriptBodyBoldTextFont, *(double *)&transcriptBodyBoldTextFont_sCustomTextFontSize_transcriptBodyBoldTextFont != v6)|| (objc_msgSend((id)transcriptBodyBoldTextFont_sCustomTextFontName_transcriptBodyBoldTextFont, "isEqualToString:", v9, *(double *)&transcriptBodyBoldTextFont_sCustomTextFontSize_transcriptBodyBoldTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_emphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)transcriptBodyBoldTextFont_sBehavior;
    transcriptBodyBoldTextFont_sBehavior = v11;

    objc_storeStrong((id *)&transcriptBodyBoldTextFont_sContentSizeCategory_transcriptBodyBoldTextFont, v2);
    transcriptBodyBoldTextFont_sIsIncreaseContrastEnabled_transcriptBodyBoldTextFont = v3;
    transcriptBodyBoldTextFont_sIsBoldTextEnabled_transcriptBodyBoldTextFont = IsBoldTextEnabled;
    transcriptBodyBoldTextFont_sTextFontSize_transcriptBodyBoldTextFont = *(_QWORD *)&v5;
    transcriptBodyBoldTextFont_sCustomTextFontSize_transcriptBodyBoldTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptBodyBoldTextFont_sCustomTextFontName_transcriptBodyBoldTextFont, v8);
  }
  v13 = (UIFont *)(id)transcriptBodyBoldTextFont_sBehavior;

  return v13;
}

- (id)transcriptSenderFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptSenderFont_sContentSizeCategory_transcriptSenderFont, (UIContentSizeCategory)v3)|| transcriptSenderFont_sIsIncreaseContrastEnabled_transcriptSenderFont != v4|| transcriptSenderFont_sIsBoldTextEnabled_transcriptSenderFont != IsBoldTextEnabled|| (v11 = transcriptSenderFont_sTextFontSize_transcriptSenderFont, *(double *)&transcriptSenderFont_sTextFontSize_transcriptSenderFont != v6)|| (v11 = transcriptSenderFont_sCustomTextFontSize_transcriptSenderFont, *(double *)&transcriptSenderFont_sCustomTextFontSize_transcriptSenderFont != v7)|| (objc_msgSend((id)transcriptSenderFont_sCustomTextFontName_transcriptSenderFont, "isEqualToString:", v10, *(double *)&transcriptSenderFont_sCustomTextFontSize_transcriptSenderFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "preferredFontForTextStyle:", v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptSenderFont_sBehavior;
    transcriptSenderFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptSenderFont_sContentSizeCategory_transcriptSenderFont, v3);
    transcriptSenderFont_sIsIncreaseContrastEnabled_transcriptSenderFont = v4;
    transcriptSenderFont_sIsBoldTextEnabled_transcriptSenderFont = IsBoldTextEnabled;
    transcriptSenderFont_sTextFontSize_transcriptSenderFont = *(_QWORD *)&v6;
    transcriptSenderFont_sCustomTextFontSize_transcriptSenderFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptSenderFont_sCustomTextFontName_transcriptSenderFont, v9);
  }
  v16 = (id)transcriptSenderFont_sBehavior;

  return v16;
}

- (id)transcriptDrawerFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptDrawerFont_sContentSizeCategory_transcriptDrawerFont, (UIContentSizeCategory)v3)|| transcriptDrawerFont_sIsIncreaseContrastEnabled_transcriptDrawerFont != v4|| transcriptDrawerFont_sIsBoldTextEnabled_transcriptDrawerFont != IsBoldTextEnabled|| (v11 = transcriptDrawerFont_sTextFontSize_transcriptDrawerFont, *(double *)&transcriptDrawerFont_sTextFontSize_transcriptDrawerFont != v6)|| (v11 = transcriptDrawerFont_sCustomTextFontSize_transcriptDrawerFont, *(double *)&transcriptDrawerFont_sCustomTextFontSize_transcriptDrawerFont != v7)|| (objc_msgSend((id)transcriptDrawerFont_sCustomTextFontName_transcriptDrawerFont, "isEqualToString:", v10, *(double *)&transcriptDrawerFont_sCustomTextFontSize_transcriptDrawerFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_monospacedPreferredFontForTextStyle:", v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptDrawerFont_sBehavior;
    transcriptDrawerFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptDrawerFont_sContentSizeCategory_transcriptDrawerFont, v3);
    transcriptDrawerFont_sIsIncreaseContrastEnabled_transcriptDrawerFont = v4;
    transcriptDrawerFont_sIsBoldTextEnabled_transcriptDrawerFont = IsBoldTextEnabled;
    transcriptDrawerFont_sTextFontSize_transcriptDrawerFont = *(_QWORD *)&v6;
    transcriptDrawerFont_sCustomTextFontSize_transcriptDrawerFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptDrawerFont_sCustomTextFontName_transcriptDrawerFont, v9);
  }
  v16 = (id)transcriptDrawerFont_sBehavior;

  return v16;
}

- (UIFont)transcriptLoadingViewTextFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  UIFont *v16;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptLoadingViewTextFont_sContentSizeCategory_transcriptLoadingViewTextFont, (UIContentSizeCategory)v3)|| transcriptLoadingViewTextFont_sIsIncreaseContrastEnabled_transcriptLoadingViewTextFont != v4|| transcriptLoadingViewTextFont_sIsBoldTextEnabled_transcriptLoadingViewTextFont != IsBoldTextEnabled|| (v11 = transcriptLoadingViewTextFont_sTextFontSize_transcriptLoadingViewTextFont, *(double *)&transcriptLoadingViewTextFont_sTextFontSize_transcriptLoadingViewTextFont != v6)|| (v11 = transcriptLoadingViewTextFont_sCustomTextFontSize_transcriptLoadingViewTextFont, *(double *)&transcriptLoadingViewTextFont_sCustomTextFontSize_transcriptLoadingViewTextFont != v7)|| (objc_msgSend((id)transcriptLoadingViewTextFont_sCustomTextFontName_transcriptLoadingViewTextFont, "isEqualToString:", v10, *(double *)&transcriptLoadingViewTextFont_sCustomTextFontSize_transcriptLoadingViewTextFont) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x1E0DC1350];
    -[CKUIBehavior transcriptTextFontStyle](self, "transcriptTextFontStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "__ck_emphasizedPreferredFontForTextStyle:", v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)transcriptLoadingViewTextFont_sBehavior;
    transcriptLoadingViewTextFont_sBehavior = v14;

    objc_storeStrong((id *)&transcriptLoadingViewTextFont_sContentSizeCategory_transcriptLoadingViewTextFont, v3);
    transcriptLoadingViewTextFont_sIsIncreaseContrastEnabled_transcriptLoadingViewTextFont = v4;
    transcriptLoadingViewTextFont_sIsBoldTextEnabled_transcriptLoadingViewTextFont = IsBoldTextEnabled;
    transcriptLoadingViewTextFont_sTextFontSize_transcriptLoadingViewTextFont = *(_QWORD *)&v6;
    transcriptLoadingViewTextFont_sCustomTextFontSize_transcriptLoadingViewTextFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&transcriptLoadingViewTextFont_sCustomTextFontName_transcriptLoadingViewTextFont, v9);
  }
  v16 = (UIFont *)(id)transcriptLoadingViewTextFont_sBehavior;

  return v16;
}

- (__CFCharacterSet)systemUIFontExcessiveLineHeightCharacterSet
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFCharacterSet *v10;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)systemUIFontExcessiveLineHeightCharacterSet_sContentSizeCategory_systemUIFontExcessiveLineHeightCharacterSet, (UIContentSizeCategory)v2)|| systemUIFontExcessiveLineHeightCharacterSet_sIsIncreaseContrastEnabled_systemUIFontExcessiveLineHeightCharacterSet != v3|| systemUIFontExcessiveLineHeightCharacterSet_sIsBoldTextEnabled_systemUIFontExcessiveLineHeightCharacterSet != IsBoldTextEnabled|| *(double *)&systemUIFontExcessiveLineHeightCharacterSet_sTextFontSize_systemUIFontExcessiveLineHeightCharacterSet != v5|| *(double *)&systemUIFontExcessiveLineHeightCharacterSet_sCustomTextFontSize_systemUIFontExcessiveLineHeightCharacterSet != v6|| (objc_msgSend((id)systemUIFontExcessiveLineHeightCharacterSet_sCustomTextFontName_systemUIFontExcessiveLineHeightCharacterSet, "isEqualToString:", v9, *(double *)&systemUIFontExcessiveLineHeightCharacterSet_sCustomTextFontSize_systemUIFontExcessiveLineHeightCharacterSet) & 1) == 0)
  {
    systemUIFontExcessiveLineHeightCharacterSet_sBehavior = CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
    objc_storeStrong((id *)&systemUIFontExcessiveLineHeightCharacterSet_sContentSizeCategory_systemUIFontExcessiveLineHeightCharacterSet, v2);
    systemUIFontExcessiveLineHeightCharacterSet_sIsIncreaseContrastEnabled_systemUIFontExcessiveLineHeightCharacterSet = v3;
    systemUIFontExcessiveLineHeightCharacterSet_sIsBoldTextEnabled_systemUIFontExcessiveLineHeightCharacterSet = IsBoldTextEnabled;
    systemUIFontExcessiveLineHeightCharacterSet_sTextFontSize_systemUIFontExcessiveLineHeightCharacterSet = *(_QWORD *)&v5;
    systemUIFontExcessiveLineHeightCharacterSet_sCustomTextFontSize_systemUIFontExcessiveLineHeightCharacterSet = *(_QWORD *)&v6;
    objc_storeStrong((id *)&systemUIFontExcessiveLineHeightCharacterSet_sCustomTextFontName_systemUIFontExcessiveLineHeightCharacterSet, v8);
  }
  v10 = (__CFCharacterSet *)systemUIFontExcessiveLineHeightCharacterSet_sBehavior;

  return v10;
}

- (UIEdgeInsets)transcriptTextFontLanguageAwareOutsets
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  unsigned __int128 v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptTextFontLanguageAwareOutsets_sContentSizeCategory_transcriptTextFontLanguageAwareOutsets, (UIContentSizeCategory)v3)|| transcriptTextFontLanguageAwareOutsets_sIsBoldTextEnabled_transcriptTextFontLanguageAwareOutsets != IsBoldTextEnabled|| (*(double *)&transcriptTextFontLanguageAwareOutsets_sTextFontSize_transcriptTextFontLanguageAwareOutsets == v5? (v18 = *(double *)&transcriptTextFontLanguageAwareOutsets_sCustomTextFontSize_transcriptTextFontLanguageAwareOutsets == v6): (v18 = 0), !v18|| (objc_msgSend((id)transcriptTextFontLanguageAwareOutsets_sCustomTextFontName_transcriptTextFontLanguageAwareOutsets, "isEqualToString:", v9, *(double *)&transcriptTextFontLanguageAwareOutsets_sTextFontSize_transcriptTextFontLanguageAwareOutsets, *(double *)&transcriptTextFontLanguageAwareOutsets_sCustomTextFontSize_transcriptTextFontLanguageAwareOutsets) & 1) == 0))
  {
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont", *MEMORY[0x1E0CEB4B0], *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 8), *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 16), *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 24));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    CTFontGetLanguageAwareOutsets();
    transcriptTextFontLanguageAwareOutsets_sBehavior = v19;
    *(_OWORD *)&qword_1EE115648 = v20;

    objc_storeStrong((id *)&transcriptTextFontLanguageAwareOutsets_sContentSizeCategory_transcriptTextFontLanguageAwareOutsets, v3);
    transcriptTextFontLanguageAwareOutsets_sIsBoldTextEnabled_transcriptTextFontLanguageAwareOutsets = IsBoldTextEnabled;
    transcriptTextFontLanguageAwareOutsets_sTextFontSize_transcriptTextFontLanguageAwareOutsets = *(_QWORD *)&v5;
    transcriptTextFontLanguageAwareOutsets_sCustomTextFontSize_transcriptTextFontLanguageAwareOutsets = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptTextFontLanguageAwareOutsets_sCustomTextFontName_transcriptTextFontLanguageAwareOutsets, v8);
  }
  v11 = transcriptTextFontLanguageAwareOutsets_sBehavior;
  v12 = qword_1EE115648;
  v13 = unk_1EE115650;

  *(_QWORD *)&v15 = v11 >> 64;
  *(_QWORD *)&v14 = v11;
  v16 = *(double *)&v12;
  v17 = v13;
  result.right = v17;
  result.bottom = v16;
  result.left = v15;
  result.top = v14;
  return result;
}

- (UIFont)transcriptFooterNoteTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptFooterNoteTitleFont_sContentSizeCategory_transcriptFooterNoteTitleFont, (UIContentSizeCategory)v2)|| transcriptFooterNoteTitleFont_sIsIncreaseContrastEnabled_transcriptFooterNoteTitleFont != v3|| transcriptFooterNoteTitleFont_sIsBoldTextEnabled_transcriptFooterNoteTitleFont != IsBoldTextEnabled|| *(double *)&transcriptFooterNoteTitleFont_sTextFontSize_transcriptFooterNoteTitleFont != v5|| *(double *)&transcriptFooterNoteTitleFont_sCustomTextFontSize_transcriptFooterNoteTitleFont != v6|| (objc_msgSend((id)transcriptFooterNoteTitleFont_sCustomTextFontName_transcriptFooterNoteTitleFont, "isEqualToString:", v9, *(double *)&transcriptFooterNoteTitleFont_sCustomTextFontSize_transcriptFooterNoteTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB560], *MEMORY[0x1E0DC1448]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)transcriptFooterNoteTitleFont_sBehavior;
    transcriptFooterNoteTitleFont_sBehavior = v10;

    objc_storeStrong((id *)&transcriptFooterNoteTitleFont_sContentSizeCategory_transcriptFooterNoteTitleFont, v2);
    transcriptFooterNoteTitleFont_sIsIncreaseContrastEnabled_transcriptFooterNoteTitleFont = v3;
    transcriptFooterNoteTitleFont_sIsBoldTextEnabled_transcriptFooterNoteTitleFont = IsBoldTextEnabled;
    transcriptFooterNoteTitleFont_sTextFontSize_transcriptFooterNoteTitleFont = *(_QWORD *)&v5;
    transcriptFooterNoteTitleFont_sCustomTextFontSize_transcriptFooterNoteTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptFooterNoteTitleFont_sCustomTextFontName_transcriptFooterNoteTitleFont, v8);
  }
  v12 = (UIFont *)(id)transcriptFooterNoteTitleFont_sBehavior;

  return v12;
}

- (UIFont)transcriptFooterNoteBodyFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptFooterNoteBodyFont_sContentSizeCategory_transcriptFooterNoteBodyFont, (UIContentSizeCategory)v2)|| transcriptFooterNoteBodyFont_sIsIncreaseContrastEnabled_transcriptFooterNoteBodyFont != v3|| transcriptFooterNoteBodyFont_sIsBoldTextEnabled_transcriptFooterNoteBodyFont != IsBoldTextEnabled|| (v10 = transcriptFooterNoteBodyFont_sTextFontSize_transcriptFooterNoteBodyFont, *(double *)&transcriptFooterNoteBodyFont_sTextFontSize_transcriptFooterNoteBodyFont != v5)|| (v10 = transcriptFooterNoteBodyFont_sCustomTextFontSize_transcriptFooterNoteBodyFont, *(double *)&transcriptFooterNoteBodyFont_sCustomTextFontSize_transcriptFooterNoteBodyFont != v6)|| (objc_msgSend((id)transcriptFooterNoteBodyFont_sCustomTextFontName_transcriptFooterNoteBodyFont, "isEqualToString:", v9, *(double *)&transcriptFooterNoteBodyFont_sCustomTextFontSize_transcriptFooterNoteBodyFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB560], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)transcriptFooterNoteBodyFont_sBehavior;
    transcriptFooterNoteBodyFont_sBehavior = v11;

    objc_storeStrong((id *)&transcriptFooterNoteBodyFont_sContentSizeCategory_transcriptFooterNoteBodyFont, v2);
    transcriptFooterNoteBodyFont_sIsIncreaseContrastEnabled_transcriptFooterNoteBodyFont = v3;
    transcriptFooterNoteBodyFont_sIsBoldTextEnabled_transcriptFooterNoteBodyFont = IsBoldTextEnabled;
    transcriptFooterNoteBodyFont_sTextFontSize_transcriptFooterNoteBodyFont = *(_QWORD *)&v5;
    transcriptFooterNoteBodyFont_sCustomTextFontSize_transcriptFooterNoteBodyFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptFooterNoteBodyFont_sCustomTextFontName_transcriptFooterNoteBodyFont, v8);
  }
  v13 = (UIFont *)(id)transcriptFooterNoteBodyFont_sBehavior;

  return v13;
}

- (UIFont)browserCellFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  UIFont *v15;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)browserCellFont_sContentSizeCategory_browserCellFont, (UIContentSizeCategory)v2)|| browserCellFont_sIsIncreaseContrastEnabled_browserCellFont != v3|| browserCellFont_sIsBoldTextEnabled_browserCellFont != IsBoldTextEnabled|| (v10 = browserCellFont_sTextFontSize_browserCellFont, *(double *)&browserCellFont_sTextFontSize_browserCellFont != v5)|| (v10 = browserCellFont_sCustomTextFontSize_browserCellFont, *(double *)&browserCellFont_sCustomTextFontSize_browserCellFont != v6)|| (objc_msgSend((id)browserCellFont_sCustomTextFontName_browserCellFont, "isEqualToString:", v9, *(double *)&browserCellFont_sCustomTextFontSize_browserCellFont) & 1) == 0)
  {
    v11 = (void *)MEMORY[0x1E0DC1350];
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "fontWithDescriptor:size:", v12, 11.0);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)browserCellFont_sBehavior;
    browserCellFont_sBehavior = v13;

    objc_storeStrong((id *)&browserCellFont_sContentSizeCategory_browserCellFont, v2);
    browserCellFont_sIsIncreaseContrastEnabled_browserCellFont = v3;
    browserCellFont_sIsBoldTextEnabled_browserCellFont = IsBoldTextEnabled;
    browserCellFont_sTextFontSize_browserCellFont = *(_QWORD *)&v5;
    browserCellFont_sCustomTextFontSize_browserCellFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&browserCellFont_sCustomTextFontName_browserCellFont, v8);
  }
  v15 = (UIFont *)(id)browserCellFont_sBehavior;

  return v15;
}

- (NSDictionary)leftStatusTranscriptTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _leftStatusTranscriptTextAttributes](self, "_leftStatusTranscriptTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_leftStatusTranscriptTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_leftStatusTranscriptTextAttributes_sContentSizeCategory__leftStatusTranscriptTextAttributes, (UIContentSizeCategory)v3)|| _leftStatusTranscriptTextAttributes_sIsIncreaseContrastEnabled__leftStatusTranscriptTextAttributes != v4|| _leftStatusTranscriptTextAttributes_sIsBoldTextEnabled__leftStatusTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = _leftStatusTranscriptTextAttributes_sTextFontSize__leftStatusTranscriptTextAttributes, *(double *)&_leftStatusTranscriptTextAttributes_sTextFontSize__leftStatusTranscriptTextAttributes != v6)|| (v11 = _leftStatusTranscriptTextAttributes_sCustomTextFontSize__leftStatusTranscriptTextAttributes, *(double *)&_leftStatusTranscriptTextAttributes_sCustomTextFontSize__leftStatusTranscriptTextAttributes != v7)|| (objc_msgSend((id)_leftStatusTranscriptTextAttributes_sCustomTextFontName__leftStatusTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&_leftStatusTranscriptTextAttributes_sCustomTextFontSize__leftStatusTranscriptTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 0);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptMessageStatusFont](self, "transcriptMessageStatusFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptBreadcrumpTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_leftStatusTranscriptTextAttributes_sBehavior;
    _leftStatusTranscriptTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_leftStatusTranscriptTextAttributes_sContentSizeCategory__leftStatusTranscriptTextAttributes, v3);
    _leftStatusTranscriptTextAttributes_sIsIncreaseContrastEnabled__leftStatusTranscriptTextAttributes = v4;
    _leftStatusTranscriptTextAttributes_sIsBoldTextEnabled__leftStatusTranscriptTextAttributes = v26;
    _leftStatusTranscriptTextAttributes_sTextFontSize__leftStatusTranscriptTextAttributes = *(_QWORD *)&v6;
    _leftStatusTranscriptTextAttributes_sCustomTextFontSize__leftStatusTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_leftStatusTranscriptTextAttributes_sCustomTextFontName__leftStatusTranscriptTextAttributes, obj);
  }
  v24 = (id)v12[415];

  return v24;
}

- (NSDictionary)rightStatusTranscriptTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _rightStatusTranscriptTextAttributes](self, "_rightStatusTranscriptTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_rightStatusTranscriptTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  id *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = (id *)&unk_1EE116000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_rightStatusTranscriptTextAttributes_sContentSizeCategory__rightStatusTranscriptTextAttributes, (UIContentSizeCategory)v3)|| _rightStatusTranscriptTextAttributes_sIsIncreaseContrastEnabled__rightStatusTranscriptTextAttributes != v4|| _rightStatusTranscriptTextAttributes_sIsBoldTextEnabled__rightStatusTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = _rightStatusTranscriptTextAttributes_sTextFontSize__rightStatusTranscriptTextAttributes, *(double *)&_rightStatusTranscriptTextAttributes_sTextFontSize__rightStatusTranscriptTextAttributes != v6)|| (v11 = _rightStatusTranscriptTextAttributes_sCustomTextFontSize__rightStatusTranscriptTextAttributes, *(double *)&_rightStatusTranscriptTextAttributes_sCustomTextFontSize__rightStatusTranscriptTextAttributes != v7)|| (objc_msgSend((id)_rightStatusTranscriptTextAttributes_sCustomTextFontName__rightStatusTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&_rightStatusTranscriptTextAttributes_sCustomTextFontSize__rightStatusTranscriptTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 2);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptMessageStatusFont](self, "transcriptMessageStatusFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptBreadcrumpTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = (id *)&unk_1EE116000;
    v23 = (void *)_rightStatusTranscriptTextAttributes_sBehavior;
    _rightStatusTranscriptTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_rightStatusTranscriptTextAttributes_sContentSizeCategory__rightStatusTranscriptTextAttributes, v3);
    _rightStatusTranscriptTextAttributes_sIsIncreaseContrastEnabled__rightStatusTranscriptTextAttributes = v4;
    _rightStatusTranscriptTextAttributes_sIsBoldTextEnabled__rightStatusTranscriptTextAttributes = v26;
    _rightStatusTranscriptTextAttributes_sTextFontSize__rightStatusTranscriptTextAttributes = *(_QWORD *)&v6;
    _rightStatusTranscriptTextAttributes_sCustomTextFontSize__rightStatusTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_rightStatusTranscriptTextAttributes_sCustomTextFontName__rightStatusTranscriptTextAttributes, obj);
  }
  v24 = v12[340];

  return v24;
}

- (NSDictionary)conversationCellSummaryPreviewTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  NSDictionary *v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationCellSummaryPreviewTextAttributes_sContentSizeCategory_conversationCellSummaryPreviewTextAttributes, (UIContentSizeCategory)v3)|| conversationCellSummaryPreviewTextAttributes_sIsIncreaseContrastEnabled_conversationCellSummaryPreviewTextAttributes != v4|| conversationCellSummaryPreviewTextAttributes_sIsBoldTextEnabled_conversationCellSummaryPreviewTextAttributes != IsBoldTextEnabled|| (v11 = conversationCellSummaryPreviewTextAttributes_sTextFontSize_conversationCellSummaryPreviewTextAttributes, *(double *)&conversationCellSummaryPreviewTextAttributes_sTextFontSize_conversationCellSummaryPreviewTextAttributes != v6)|| (v11 = conversationCellSummaryPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryPreviewTextAttributes, *(double *)&conversationCellSummaryPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryPreviewTextAttributes != v7)|| (objc_msgSend((id)conversationCellSummaryPreviewTextAttributes_sCustomTextFontName_conversationCellSummaryPreviewTextAttributes, "isEqualToString:", v10, *(double *)&conversationCellSummaryPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryPreviewTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 4);
    objc_msgSend(v14, "setLineBreakMode:", 4);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior conversationListSummaryFont](self, "conversationListSummaryFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "conversationListSummaryColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)conversationCellSummaryPreviewTextAttributes_sBehavior;
    conversationCellSummaryPreviewTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&conversationCellSummaryPreviewTextAttributes_sContentSizeCategory_conversationCellSummaryPreviewTextAttributes, v3);
    conversationCellSummaryPreviewTextAttributes_sIsIncreaseContrastEnabled_conversationCellSummaryPreviewTextAttributes = v4;
    conversationCellSummaryPreviewTextAttributes_sIsBoldTextEnabled_conversationCellSummaryPreviewTextAttributes = v26;
    conversationCellSummaryPreviewTextAttributes_sTextFontSize_conversationCellSummaryPreviewTextAttributes = *(_QWORD *)&v6;
    conversationCellSummaryPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryPreviewTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&conversationCellSummaryPreviewTextAttributes_sCustomTextFontName_conversationCellSummaryPreviewTextAttributes, obj);
  }
  v24 = (NSDictionary *)(id)v12[419];

  return v24;
}

- (NSDictionary)conversationCellSummaryBoldPreviewTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  NSDictionary *v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationCellSummaryBoldPreviewTextAttributes_sContentSizeCategory_conversationCellSummaryBoldPreviewTextAttributes, (UIContentSizeCategory)v3)|| conversationCellSummaryBoldPreviewTextAttributes_sIsIncreaseContrastEnabled_conversationCellSummaryBoldPreviewTextAttributes != v4|| conversationCellSummaryBoldPreviewTextAttributes_sIsBoldTextEnabled_conversationCellSummaryBoldPreviewTextAttributes != IsBoldTextEnabled|| (v11 = conversationCellSummaryBoldPreviewTextAttributes_sTextFontSize_conversationCellSummaryBoldPreviewTextAttributes, *(double *)&conversationCellSummaryBoldPreviewTextAttributes_sTextFontSize_conversationCellSummaryBoldPreviewTextAttributes != v6)|| (v11 = conversationCellSummaryBoldPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryBoldPreviewTextAttributes, *(double *)&conversationCellSummaryBoldPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryBoldPreviewTextAttributes != v7)|| (objc_msgSend((id)conversationCellSummaryBoldPreviewTextAttributes_sCustomTextFontName_conversationCellSummaryBoldPreviewTextAttributes, "isEqualToString:", v10, *(double *)&conversationCellSummaryBoldPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryBoldPreviewTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 4);
    objc_msgSend(v14, "setLineBreakMode:", 4);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior conversationListBoldSummaryFont](self, "conversationListBoldSummaryFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "conversationListSummaryColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)conversationCellSummaryBoldPreviewTextAttributes_sBehavior;
    conversationCellSummaryBoldPreviewTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&conversationCellSummaryBoldPreviewTextAttributes_sContentSizeCategory_conversationCellSummaryBoldPreviewTextAttributes, v3);
    conversationCellSummaryBoldPreviewTextAttributes_sIsIncreaseContrastEnabled_conversationCellSummaryBoldPreviewTextAttributes = v4;
    conversationCellSummaryBoldPreviewTextAttributes_sIsBoldTextEnabled_conversationCellSummaryBoldPreviewTextAttributes = v26;
    conversationCellSummaryBoldPreviewTextAttributes_sTextFontSize_conversationCellSummaryBoldPreviewTextAttributes = *(_QWORD *)&v6;
    conversationCellSummaryBoldPreviewTextAttributes_sCustomTextFontSize_conversationCellSummaryBoldPreviewTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&conversationCellSummaryBoldPreviewTextAttributes_sCustomTextFontName_conversationCellSummaryBoldPreviewTextAttributes, obj);
  }
  v24 = (NSDictionary *)(id)v12[422];

  return v24;
}

- (UIButtonConfiguration)transcriptLabelAccessoryButtonConfiguration
{
  if (transcriptLabelAccessoryButtonConfiguration_once != -1)
    dispatch_once(&transcriptLabelAccessoryButtonConfiguration_once, &__block_literal_global_513_0);
  return 0;
}

- (NSDictionary)leftTranscriptButtonTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _leftTranscriptButtonTextAttributes](self, "_leftTranscriptButtonTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_leftTranscriptButtonTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_leftTranscriptButtonTextAttributes_sContentSizeCategory__leftTranscriptButtonTextAttributes, (UIContentSizeCategory)v3)|| _leftTranscriptButtonTextAttributes_sIsIncreaseContrastEnabled__leftTranscriptButtonTextAttributes != v4|| _leftTranscriptButtonTextAttributes_sIsBoldTextEnabled__leftTranscriptButtonTextAttributes != IsBoldTextEnabled|| (v11 = _leftTranscriptButtonTextAttributes_sTextFontSize__leftTranscriptButtonTextAttributes, *(double *)&_leftTranscriptButtonTextAttributes_sTextFontSize__leftTranscriptButtonTextAttributes != v6)|| (v11 = _leftTranscriptButtonTextAttributes_sCustomTextFontSize__leftTranscriptButtonTextAttributes, *(double *)&_leftTranscriptButtonTextAttributes_sCustomTextFontSize__leftTranscriptButtonTextAttributes != v7)|| (objc_msgSend((id)_leftTranscriptButtonTextAttributes_sCustomTextFontName__leftTranscriptButtonTextAttributes, "isEqualToString:", v10, *(double *)&_leftTranscriptButtonTextAttributes_sCustomTextFontSize__leftTranscriptButtonTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 0);
    objc_msgSend(v14, "setLineBreakMode:", 0);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptButtonTextFont](self, "transcriptButtonTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "attachmentBalloonActionColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_leftTranscriptButtonTextAttributes_sBehavior;
    _leftTranscriptButtonTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_leftTranscriptButtonTextAttributes_sContentSizeCategory__leftTranscriptButtonTextAttributes, v3);
    _leftTranscriptButtonTextAttributes_sIsIncreaseContrastEnabled__leftTranscriptButtonTextAttributes = v4;
    _leftTranscriptButtonTextAttributes_sIsBoldTextEnabled__leftTranscriptButtonTextAttributes = v26;
    _leftTranscriptButtonTextAttributes_sTextFontSize__leftTranscriptButtonTextAttributes = *(_QWORD *)&v6;
    _leftTranscriptButtonTextAttributes_sCustomTextFontSize__leftTranscriptButtonTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_leftTranscriptButtonTextAttributes_sCustomTextFontName__leftTranscriptButtonTextAttributes, obj);
  }
  v24 = (id)v12[425];

  return v24;
}

- (NSDictionary)rightTranscriptButtonTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _rightTranscriptButtonTextAttributes](self, "_rightTranscriptButtonTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_rightTranscriptButtonTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_rightTranscriptButtonTextAttributes_sContentSizeCategory__rightTranscriptButtonTextAttributes, (UIContentSizeCategory)v3)|| _rightTranscriptButtonTextAttributes_sIsIncreaseContrastEnabled__rightTranscriptButtonTextAttributes != v4|| _rightTranscriptButtonTextAttributes_sIsBoldTextEnabled__rightTranscriptButtonTextAttributes != IsBoldTextEnabled|| (v11 = _rightTranscriptButtonTextAttributes_sTextFontSize__rightTranscriptButtonTextAttributes, *(double *)&_rightTranscriptButtonTextAttributes_sTextFontSize__rightTranscriptButtonTextAttributes != v6)|| (v11 = _rightTranscriptButtonTextAttributes_sCustomTextFontSize__rightTranscriptButtonTextAttributes, *(double *)&_rightTranscriptButtonTextAttributes_sCustomTextFontSize__rightTranscriptButtonTextAttributes != v7)|| (objc_msgSend((id)_rightTranscriptButtonTextAttributes_sCustomTextFontName__rightTranscriptButtonTextAttributes, "isEqualToString:", v10, *(double *)&_rightTranscriptButtonTextAttributes_sCustomTextFontSize__rightTranscriptButtonTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 2);
    objc_msgSend(v14, "setLineBreakMode:", 0);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptButtonTextFont](self, "transcriptButtonTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "attachmentBalloonActionColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_rightTranscriptButtonTextAttributes_sBehavior;
    _rightTranscriptButtonTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_rightTranscriptButtonTextAttributes_sContentSizeCategory__rightTranscriptButtonTextAttributes, v3);
    _rightTranscriptButtonTextAttributes_sIsIncreaseContrastEnabled__rightTranscriptButtonTextAttributes = v4;
    _rightTranscriptButtonTextAttributes_sIsBoldTextEnabled__rightTranscriptButtonTextAttributes = v26;
    _rightTranscriptButtonTextAttributes_sTextFontSize__rightTranscriptButtonTextAttributes = *(_QWORD *)&v6;
    _rightTranscriptButtonTextAttributes_sCustomTextFontSize__rightTranscriptButtonTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_rightTranscriptButtonTextAttributes_sCustomTextFontName__rightTranscriptButtonTextAttributes, obj);
  }
  v24 = (id)v12[428];

  return v24;
}

- (NSDictionary)centerTranscriptButtonTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  id *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  NSDictionary *v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = (id *)&unk_1EE114000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)centerTranscriptButtonTextAttributes_sContentSizeCategory_centerTranscriptButtonTextAttributes, (UIContentSizeCategory)v3)|| centerTranscriptButtonTextAttributes_sIsIncreaseContrastEnabled_centerTranscriptButtonTextAttributes != v4|| centerTranscriptButtonTextAttributes_sIsBoldTextEnabled_centerTranscriptButtonTextAttributes != IsBoldTextEnabled|| (v11 = centerTranscriptButtonTextAttributes_sTextFontSize_centerTranscriptButtonTextAttributes, *(double *)&centerTranscriptButtonTextAttributes_sTextFontSize_centerTranscriptButtonTextAttributes != v6)|| (v11 = centerTranscriptButtonTextAttributes_sCustomTextFontSize_centerTranscriptButtonTextAttributes, *(double *)&centerTranscriptButtonTextAttributes_sCustomTextFontSize_centerTranscriptButtonTextAttributes != v7)|| (objc_msgSend((id)centerTranscriptButtonTextAttributes_sCustomTextFontName_centerTranscriptButtonTextAttributes, "isEqualToString:", v10, *(double *)&centerTranscriptButtonTextAttributes_sCustomTextFontSize_centerTranscriptButtonTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptButtonTextFont](self, "transcriptButtonTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "attachmentBalloonActionColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = (id *)&unk_1EE114000;
    v23 = (void *)centerTranscriptButtonTextAttributes_sBehavior;
    centerTranscriptButtonTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&centerTranscriptButtonTextAttributes_sContentSizeCategory_centerTranscriptButtonTextAttributes, v3);
    centerTranscriptButtonTextAttributes_sIsIncreaseContrastEnabled_centerTranscriptButtonTextAttributes = v4;
    centerTranscriptButtonTextAttributes_sIsBoldTextEnabled_centerTranscriptButtonTextAttributes = v26;
    centerTranscriptButtonTextAttributes_sTextFontSize_centerTranscriptButtonTextAttributes = *(_QWORD *)&v6;
    centerTranscriptButtonTextAttributes_sCustomTextFontSize_centerTranscriptButtonTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&centerTranscriptButtonTextAttributes_sCustomTextFontName_centerTranscriptButtonTextAttributes, obj);
  }
  v24 = (NSDictionary *)v12[392];

  return v24;
}

- (id)breadcrumbTranscriptTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _breadcrumbTranscriptTextAttributes](self, "_breadcrumbTranscriptTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return v2;
}

- (id)_breadcrumbTranscriptTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_breadcrumbTranscriptTextAttributes_sContentSizeCategory__breadcrumbTranscriptTextAttributes, (UIContentSizeCategory)v3)|| _breadcrumbTranscriptTextAttributes_sIsIncreaseContrastEnabled__breadcrumbTranscriptTextAttributes != v4|| _breadcrumbTranscriptTextAttributes_sIsBoldTextEnabled__breadcrumbTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = _breadcrumbTranscriptTextAttributes_sTextFontSize__breadcrumbTranscriptTextAttributes, *(double *)&_breadcrumbTranscriptTextAttributes_sTextFontSize__breadcrumbTranscriptTextAttributes != v6)|| (v11 = _breadcrumbTranscriptTextAttributes_sCustomTextFontSize__breadcrumbTranscriptTextAttributes, *(double *)&_breadcrumbTranscriptTextAttributes_sCustomTextFontSize__breadcrumbTranscriptTextAttributes != v7)|| (objc_msgSend((id)_breadcrumbTranscriptTextAttributes_sCustomTextFontName__breadcrumbTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&_breadcrumbTranscriptTextAttributes_sCustomTextFontSize__breadcrumbTranscriptTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 0);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_breadcrumbTranscriptTextAttributes_sBehavior;
    _breadcrumbTranscriptTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_breadcrumbTranscriptTextAttributes_sContentSizeCategory__breadcrumbTranscriptTextAttributes, v3);
    _breadcrumbTranscriptTextAttributes_sIsIncreaseContrastEnabled__breadcrumbTranscriptTextAttributes = v4;
    _breadcrumbTranscriptTextAttributes_sIsBoldTextEnabled__breadcrumbTranscriptTextAttributes = v26;
    _breadcrumbTranscriptTextAttributes_sTextFontSize__breadcrumbTranscriptTextAttributes = *(_QWORD *)&v6;
    _breadcrumbTranscriptTextAttributes_sCustomTextFontSize__breadcrumbTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_breadcrumbTranscriptTextAttributes_sCustomTextFontName__breadcrumbTranscriptTextAttributes, obj);
  }
  v24 = (id)v12[432];

  return v24;
}

- (NSDictionary)senderTranscriptTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _senderTranscriptTextAttributes](self, "_senderTranscriptTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_senderTranscriptTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_senderTranscriptTextAttributes_sContentSizeCategory__senderTranscriptTextAttributes, (UIContentSizeCategory)v3)|| _senderTranscriptTextAttributes_sIsIncreaseContrastEnabled__senderTranscriptTextAttributes != v4|| _senderTranscriptTextAttributes_sIsBoldTextEnabled__senderTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = _senderTranscriptTextAttributes_sTextFontSize__senderTranscriptTextAttributes, *(double *)&_senderTranscriptTextAttributes_sTextFontSize__senderTranscriptTextAttributes != v6)|| (v11 = _senderTranscriptTextAttributes_sCustomTextFontSize__senderTranscriptTextAttributes, *(double *)&_senderTranscriptTextAttributes_sCustomTextFontSize__senderTranscriptTextAttributes != v7)|| (objc_msgSend((id)_senderTranscriptTextAttributes_sCustomTextFontName__senderTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&_senderTranscriptTextAttributes_sCustomTextFontSize__senderTranscriptTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 0);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptSenderFont](self, "transcriptSenderFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_senderTranscriptTextAttributes_sBehavior;
    _senderTranscriptTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_senderTranscriptTextAttributes_sContentSizeCategory__senderTranscriptTextAttributes, v3);
    _senderTranscriptTextAttributes_sIsIncreaseContrastEnabled__senderTranscriptTextAttributes = v4;
    _senderTranscriptTextAttributes_sIsBoldTextEnabled__senderTranscriptTextAttributes = v26;
    _senderTranscriptTextAttributes_sTextFontSize__senderTranscriptTextAttributes = *(_QWORD *)&v6;
    _senderTranscriptTextAttributes_sCustomTextFontSize__senderTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_senderTranscriptTextAttributes_sCustomTextFontName__senderTranscriptTextAttributes, obj);
  }
  v24 = (id)v12[435];

  return v24;
}

- (NSDictionary)stewieTranscriptEmergencyServiceAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _stewieTranscriptEmergencyServiceAttributes](self, "_stewieTranscriptEmergencyServiceAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_stewieTranscriptEmergencyServiceAttributes
{
  NSString *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString *obj;
  _QWORD v22[3];
  _QWORD v23[4];

  v23[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  obj = v3;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_stewieTranscriptEmergencyServiceAttributes_sContentSizeCategory__stewieTranscriptEmergencyServiceAttributes, v3)|| _stewieTranscriptEmergencyServiceAttributes_sIsIncreaseContrastEnabled__stewieTranscriptEmergencyServiceAttributes != v4|| _stewieTranscriptEmergencyServiceAttributes_sIsBoldTextEnabled__stewieTranscriptEmergencyServiceAttributes != IsBoldTextEnabled|| (v11 = _stewieTranscriptEmergencyServiceAttributes_sTextFontSize__stewieTranscriptEmergencyServiceAttributes, *(double *)&_stewieTranscriptEmergencyServiceAttributes_sTextFontSize__stewieTranscriptEmergencyServiceAttributes != v6)|| (v11 = _stewieTranscriptEmergencyServiceAttributes_sCustomTextFontSize__stewieTranscriptEmergencyServiceAttributes, *(double *)&_stewieTranscriptEmergencyServiceAttributes_sCustomTextFontSize__stewieTranscriptEmergencyServiceAttributes != v7)|| (objc_msgSend((id)_stewieTranscriptEmergencyServiceAttributes_sCustomTextFontName__stewieTranscriptEmergencyServiceAttributes, "isEqualToString:", v10, *(double *)&_stewieTranscriptEmergencyServiceAttributes_sCustomTextFontSize__stewieTranscriptEmergencyServiceAttributes, v3) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11, obj);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 4);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v22[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptBoldFont](self, "transcriptBoldFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = v15;
    v22[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v22[2] = *MEMORY[0x1E0DC1178];
    v23[1] = v16;
    v23[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, v22, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)_stewieTranscriptEmergencyServiceAttributes_sBehavior;
    _stewieTranscriptEmergencyServiceAttributes_sBehavior = v17;

    objc_storeStrong((id *)&_stewieTranscriptEmergencyServiceAttributes_sContentSizeCategory__stewieTranscriptEmergencyServiceAttributes, obj);
    _stewieTranscriptEmergencyServiceAttributes_sIsIncreaseContrastEnabled__stewieTranscriptEmergencyServiceAttributes = v4;
    _stewieTranscriptEmergencyServiceAttributes_sIsBoldTextEnabled__stewieTranscriptEmergencyServiceAttributes = IsBoldTextEnabled;
    _stewieTranscriptEmergencyServiceAttributes_sTextFontSize__stewieTranscriptEmergencyServiceAttributes = *(_QWORD *)&v6;
    _stewieTranscriptEmergencyServiceAttributes_sCustomTextFontSize__stewieTranscriptEmergencyServiceAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_stewieTranscriptEmergencyServiceAttributes_sCustomTextFontName__stewieTranscriptEmergencyServiceAttributes, v9);
  }
  v19 = (id)v12[438];

  return v19;
}

- (NSDictionary)stewieTranscriptEmergencyUserAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _stewieTranscriptEmergencyUserAttributes](self, "_stewieTranscriptEmergencyUserAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_stewieTranscriptEmergencyUserAttributes
{
  NSString *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString *obj;
  _QWORD v22[3];
  _QWORD v23[4];

  v23[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  obj = v3;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_stewieTranscriptEmergencyUserAttributes_sContentSizeCategory__stewieTranscriptEmergencyUserAttributes, v3)|| _stewieTranscriptEmergencyUserAttributes_sIsIncreaseContrastEnabled__stewieTranscriptEmergencyUserAttributes != v4|| _stewieTranscriptEmergencyUserAttributes_sIsBoldTextEnabled__stewieTranscriptEmergencyUserAttributes != IsBoldTextEnabled|| (v11 = _stewieTranscriptEmergencyUserAttributes_sTextFontSize__stewieTranscriptEmergencyUserAttributes, *(double *)&_stewieTranscriptEmergencyUserAttributes_sTextFontSize__stewieTranscriptEmergencyUserAttributes != v6)|| (v11 = _stewieTranscriptEmergencyUserAttributes_sCustomTextFontSize__stewieTranscriptEmergencyUserAttributes, *(double *)&_stewieTranscriptEmergencyUserAttributes_sCustomTextFontSize__stewieTranscriptEmergencyUserAttributes != v7)|| (objc_msgSend((id)_stewieTranscriptEmergencyUserAttributes_sCustomTextFontName__stewieTranscriptEmergencyUserAttributes, "isEqualToString:", v10, *(double *)&_stewieTranscriptEmergencyUserAttributes_sCustomTextFontSize__stewieTranscriptEmergencyUserAttributes, v3) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11, obj);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 4);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v22[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptBoldFont](self, "transcriptBoldFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = v15;
    v22[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "labelColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v22[2] = *MEMORY[0x1E0DC1178];
    v23[1] = v16;
    v23[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, v22, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)_stewieTranscriptEmergencyUserAttributes_sBehavior;
    _stewieTranscriptEmergencyUserAttributes_sBehavior = v17;

    objc_storeStrong((id *)&_stewieTranscriptEmergencyUserAttributes_sContentSizeCategory__stewieTranscriptEmergencyUserAttributes, obj);
    _stewieTranscriptEmergencyUserAttributes_sIsIncreaseContrastEnabled__stewieTranscriptEmergencyUserAttributes = v4;
    _stewieTranscriptEmergencyUserAttributes_sIsBoldTextEnabled__stewieTranscriptEmergencyUserAttributes = IsBoldTextEnabled;
    _stewieTranscriptEmergencyUserAttributes_sTextFontSize__stewieTranscriptEmergencyUserAttributes = *(_QWORD *)&v6;
    _stewieTranscriptEmergencyUserAttributes_sCustomTextFontSize__stewieTranscriptEmergencyUserAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_stewieTranscriptEmergencyUserAttributes_sCustomTextFontName__stewieTranscriptEmergencyUserAttributes, v9);
  }
  v19 = (id)v12[441];

  return v19;
}

- (NSDictionary)replySenderTranscriptTextAttributes
{
  NSString *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSDictionary *v19;
  NSString *obj;
  _QWORD v22[3];
  _QWORD v23[4];

  v23[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  obj = v3;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replySenderTranscriptTextAttributes_sContentSizeCategory_replySenderTranscriptTextAttributes, v3)|| replySenderTranscriptTextAttributes_sIsIncreaseContrastEnabled_replySenderTranscriptTextAttributes != v4|| replySenderTranscriptTextAttributes_sIsBoldTextEnabled_replySenderTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = replySenderTranscriptTextAttributes_sTextFontSize_replySenderTranscriptTextAttributes, *(double *)&replySenderTranscriptTextAttributes_sTextFontSize_replySenderTranscriptTextAttributes != v6)|| (v11 = replySenderTranscriptTextAttributes_sCustomTextFontSize_replySenderTranscriptTextAttributes, *(double *)&replySenderTranscriptTextAttributes_sCustomTextFontSize_replySenderTranscriptTextAttributes != v7)|| (objc_msgSend((id)replySenderTranscriptTextAttributes_sCustomTextFontName_replySenderTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&replySenderTranscriptTextAttributes_sCustomTextFontSize_replySenderTranscriptTextAttributes, v3) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11, obj);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 0);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v22[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = v15;
    v22[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "tertiaryLabelColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v22[2] = *MEMORY[0x1E0DC1178];
    v23[1] = v16;
    v23[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, v22, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)replySenderTranscriptTextAttributes_sBehavior;
    replySenderTranscriptTextAttributes_sBehavior = v17;

    objc_storeStrong((id *)&replySenderTranscriptTextAttributes_sContentSizeCategory_replySenderTranscriptTextAttributes, obj);
    replySenderTranscriptTextAttributes_sIsIncreaseContrastEnabled_replySenderTranscriptTextAttributes = v4;
    replySenderTranscriptTextAttributes_sIsBoldTextEnabled_replySenderTranscriptTextAttributes = IsBoldTextEnabled;
    replySenderTranscriptTextAttributes_sTextFontSize_replySenderTranscriptTextAttributes = *(_QWORD *)&v6;
    replySenderTranscriptTextAttributes_sCustomTextFontSize_replySenderTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&replySenderTranscriptTextAttributes_sCustomTextFontName_replySenderTranscriptTextAttributes, v9);
  }
  v19 = (NSDictionary *)(id)v12[444];

  return v19;
}

- (NSDictionary)nickNameTranscriptTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  NSDictionary *v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)nickNameTranscriptTextAttributes_sContentSizeCategory_nickNameTranscriptTextAttributes, (UIContentSizeCategory)v3)|| nickNameTranscriptTextAttributes_sIsIncreaseContrastEnabled_nickNameTranscriptTextAttributes != v4|| nickNameTranscriptTextAttributes_sIsBoldTextEnabled_nickNameTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = nickNameTranscriptTextAttributes_sTextFontSize_nickNameTranscriptTextAttributes, *(double *)&nickNameTranscriptTextAttributes_sTextFontSize_nickNameTranscriptTextAttributes != v6)|| (v11 = nickNameTranscriptTextAttributes_sCustomTextFontSize_nickNameTranscriptTextAttributes, *(double *)&nickNameTranscriptTextAttributes_sCustomTextFontSize_nickNameTranscriptTextAttributes != v7)|| (objc_msgSend((id)nickNameTranscriptTextAttributes_sCustomTextFontName_nickNameTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&nickNameTranscriptTextAttributes_sCustomTextFontSize_nickNameTranscriptTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 0);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptNicknameTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)nickNameTranscriptTextAttributes_sBehavior;
    nickNameTranscriptTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&nickNameTranscriptTextAttributes_sContentSizeCategory_nickNameTranscriptTextAttributes, v3);
    nickNameTranscriptTextAttributes_sIsIncreaseContrastEnabled_nickNameTranscriptTextAttributes = v4;
    nickNameTranscriptTextAttributes_sIsBoldTextEnabled_nickNameTranscriptTextAttributes = v26;
    nickNameTranscriptTextAttributes_sTextFontSize_nickNameTranscriptTextAttributes = *(_QWORD *)&v6;
    nickNameTranscriptTextAttributes_sCustomTextFontSize_nickNameTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&nickNameTranscriptTextAttributes_sCustomTextFontName_nickNameTranscriptTextAttributes, obj);
  }
  v24 = (NSDictionary *)(id)v12[447];

  return v24;
}

- (NSDictionary)transcriptRegularFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptRegularFontAttributes](self, "_transcriptRegularFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptRegularFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  id *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = (id *)&unk_1EE116000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptRegularFontAttributes_sContentSizeCategory__transcriptRegularFontAttributes, (UIContentSizeCategory)v3)|| _transcriptRegularFontAttributes_sIsIncreaseContrastEnabled__transcriptRegularFontAttributes != v4|| _transcriptRegularFontAttributes_sIsBoldTextEnabled__transcriptRegularFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptRegularFontAttributes_sTextFontSize__transcriptRegularFontAttributes, *(double *)&_transcriptRegularFontAttributes_sTextFontSize__transcriptRegularFontAttributes != v6)|| (v11 = _transcriptRegularFontAttributes_sCustomTextFontSize__transcriptRegularFontAttributes, *(double *)&_transcriptRegularFontAttributes_sCustomTextFontSize__transcriptRegularFontAttributes != v7)|| (objc_msgSend((id)_transcriptRegularFontAttributes_sCustomTextFontName__transcriptRegularFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptRegularFontAttributes_sCustomTextFontSize__transcriptRegularFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptRegularFont](self, "transcriptRegularFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = (id *)&unk_1EE116000;
    v23 = (void *)_transcriptRegularFontAttributes_sBehavior;
    _transcriptRegularFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptRegularFontAttributes_sContentSizeCategory__transcriptRegularFontAttributes, v3);
    _transcriptRegularFontAttributes_sIsIncreaseContrastEnabled__transcriptRegularFontAttributes = v4;
    _transcriptRegularFontAttributes_sIsBoldTextEnabled__transcriptRegularFontAttributes = v26;
    _transcriptRegularFontAttributes_sTextFontSize__transcriptRegularFontAttributes = *(_QWORD *)&v6;
    _transcriptRegularFontAttributes_sCustomTextFontSize__transcriptRegularFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptRegularFontAttributes_sCustomTextFontName__transcriptRegularFontAttributes, obj);
  }
  v24 = v12[346];

  return v24;
}

- (NSDictionary)transcriptRegularPreferredFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptRegularPreferredFontAttributes](self, "_transcriptRegularPreferredFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptRegularPreferredFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptRegularPreferredFontAttributes_sContentSizeCategory__transcriptRegularPreferredFontAttributes, (UIContentSizeCategory)v3)|| _transcriptRegularPreferredFontAttributes_sIsIncreaseContrastEnabled__transcriptRegularPreferredFontAttributes != v4|| _transcriptRegularPreferredFontAttributes_sIsBoldTextEnabled__transcriptRegularPreferredFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptRegularPreferredFontAttributes_sTextFontSize__transcriptRegularPreferredFontAttributes, *(double *)&_transcriptRegularPreferredFontAttributes_sTextFontSize__transcriptRegularPreferredFontAttributes != v6)|| (v11 = _transcriptRegularPreferredFontAttributes_sCustomTextFontSize__transcriptRegularPreferredFontAttributes, *(double *)&_transcriptRegularPreferredFontAttributes_sCustomTextFontSize__transcriptRegularPreferredFontAttributes != v7)|| (objc_msgSend((id)_transcriptRegularPreferredFontAttributes_sCustomTextFontName__transcriptRegularPreferredFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptRegularPreferredFontAttributes_sCustomTextFontSize__transcriptRegularPreferredFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptRegularPreferredFont](self, "transcriptRegularPreferredFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptRegularPreferredFontAttributes_sBehavior;
    _transcriptRegularPreferredFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptRegularPreferredFontAttributes_sContentSizeCategory__transcriptRegularPreferredFontAttributes, v3);
    _transcriptRegularPreferredFontAttributes_sIsIncreaseContrastEnabled__transcriptRegularPreferredFontAttributes = v4;
    _transcriptRegularPreferredFontAttributes_sIsBoldTextEnabled__transcriptRegularPreferredFontAttributes = v26;
    _transcriptRegularPreferredFontAttributes_sTextFontSize__transcriptRegularPreferredFontAttributes = *(_QWORD *)&v6;
    _transcriptRegularPreferredFontAttributes_sCustomTextFontSize__transcriptRegularPreferredFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptRegularPreferredFontAttributes_sCustomTextFontName__transcriptRegularPreferredFontAttributes, obj);
  }
  v24 = (id)v12[451];

  return v24;
}

- (NSDictionary)transcriptSatelliteFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptSatelliteFontAttributes](self, "_transcriptSatelliteFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptSatelliteFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptSatelliteFontAttributes_sContentSizeCategory__transcriptSatelliteFontAttributes, (UIContentSizeCategory)v3)|| _transcriptSatelliteFontAttributes_sIsIncreaseContrastEnabled__transcriptSatelliteFontAttributes != v4|| _transcriptSatelliteFontAttributes_sIsBoldTextEnabled__transcriptSatelliteFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptSatelliteFontAttributes_sTextFontSize__transcriptSatelliteFontAttributes, *(double *)&_transcriptSatelliteFontAttributes_sTextFontSize__transcriptSatelliteFontAttributes != v6)|| (v11 = _transcriptSatelliteFontAttributes_sCustomTextFontSize__transcriptSatelliteFontAttributes, *(double *)&_transcriptSatelliteFontAttributes_sCustomTextFontSize__transcriptSatelliteFontAttributes != v7)|| (objc_msgSend((id)_transcriptSatelliteFontAttributes_sCustomTextFontName__transcriptSatelliteFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptSatelliteFontAttributes_sCustomTextFontSize__transcriptSatelliteFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptAvailabilityFont](self, "transcriptAvailabilityFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptSatelliteFontAttributes_sBehavior;
    _transcriptSatelliteFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptSatelliteFontAttributes_sContentSizeCategory__transcriptSatelliteFontAttributes, v3);
    _transcriptSatelliteFontAttributes_sIsIncreaseContrastEnabled__transcriptSatelliteFontAttributes = v4;
    _transcriptSatelliteFontAttributes_sIsBoldTextEnabled__transcriptSatelliteFontAttributes = v26;
    _transcriptSatelliteFontAttributes_sTextFontSize__transcriptSatelliteFontAttributes = *(_QWORD *)&v6;
    _transcriptSatelliteFontAttributes_sCustomTextFontSize__transcriptSatelliteFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptSatelliteFontAttributes_sCustomTextFontName__transcriptSatelliteFontAttributes, obj);
  }
  v24 = (id)v12[454];

  return v24;
}

- (NSDictionary)transcriptAvailabilityFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptAvailabilityFontAttributes](self, "_transcriptAvailabilityFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptAvailabilityFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptAvailabilityFontAttributes_sContentSizeCategory__transcriptAvailabilityFontAttributes, (UIContentSizeCategory)v3)|| _transcriptAvailabilityFontAttributes_sIsIncreaseContrastEnabled__transcriptAvailabilityFontAttributes != v4|| _transcriptAvailabilityFontAttributes_sIsBoldTextEnabled__transcriptAvailabilityFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptAvailabilityFontAttributes_sTextFontSize__transcriptAvailabilityFontAttributes, *(double *)&_transcriptAvailabilityFontAttributes_sTextFontSize__transcriptAvailabilityFontAttributes != v6)|| (v11 = _transcriptAvailabilityFontAttributes_sCustomTextFontSize__transcriptAvailabilityFontAttributes, *(double *)&_transcriptAvailabilityFontAttributes_sCustomTextFontSize__transcriptAvailabilityFontAttributes != v7)|| (objc_msgSend((id)_transcriptAvailabilityFontAttributes_sCustomTextFontName__transcriptAvailabilityFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptAvailabilityFontAttributes_sCustomTextFontSize__transcriptAvailabilityFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptAvailabilityFont](self, "transcriptAvailabilityFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptAvailabilityColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptAvailabilityFontAttributes_sBehavior;
    _transcriptAvailabilityFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptAvailabilityFontAttributes_sContentSizeCategory__transcriptAvailabilityFontAttributes, v3);
    _transcriptAvailabilityFontAttributes_sIsIncreaseContrastEnabled__transcriptAvailabilityFontAttributes = v4;
    _transcriptAvailabilityFontAttributes_sIsBoldTextEnabled__transcriptAvailabilityFontAttributes = v26;
    _transcriptAvailabilityFontAttributes_sTextFontSize__transcriptAvailabilityFontAttributes = *(_QWORD *)&v6;
    _transcriptAvailabilityFontAttributes_sCustomTextFontSize__transcriptAvailabilityFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptAvailabilityFontAttributes_sCustomTextFontName__transcriptAvailabilityFontAttributes, obj);
  }
  v24 = (id)v12[457];

  return v24;
}

- (NSDictionary)transcriptAvailabilityDeemphasizedFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptAvailabilityDeemphasizedFontAttributes](self, "_transcriptAvailabilityDeemphasizedFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptAvailabilityDeemphasizedFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptAvailabilityDeemphasizedFontAttributes_sContentSizeCategory__transcriptAvailabilityDeemphasizedFontAttributes, (UIContentSizeCategory)v3)|| _transcriptAvailabilityDeemphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptAvailabilityDeemphasizedFontAttributes != v4|| _transcriptAvailabilityDeemphasizedFontAttributes_sIsBoldTextEnabled__transcriptAvailabilityDeemphasizedFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptAvailabilityDeemphasizedFontAttributes_sTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes, *(double *)&_transcriptAvailabilityDeemphasizedFontAttributes_sTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes != v6)|| (v11 = _transcriptAvailabilityDeemphasizedFontAttributes_sCustomTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes, *(double *)&_transcriptAvailabilityDeemphasizedFontAttributes_sCustomTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes != v7)|| (objc_msgSend((id)_transcriptAvailabilityDeemphasizedFontAttributes_sCustomTextFontName__transcriptAvailabilityDeemphasizedFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptAvailabilityDeemphasizedFontAttributes_sCustomTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptAvailabilityFont](self, "transcriptAvailabilityFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptAvailabilityDeemphasizedColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptAvailabilityDeemphasizedFontAttributes_sBehavior;
    _transcriptAvailabilityDeemphasizedFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptAvailabilityDeemphasizedFontAttributes_sContentSizeCategory__transcriptAvailabilityDeemphasizedFontAttributes, v3);
    _transcriptAvailabilityDeemphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptAvailabilityDeemphasizedFontAttributes = v4;
    _transcriptAvailabilityDeemphasizedFontAttributes_sIsBoldTextEnabled__transcriptAvailabilityDeemphasizedFontAttributes = v26;
    _transcriptAvailabilityDeemphasizedFontAttributes_sTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes = *(_QWORD *)&v6;
    _transcriptAvailabilityDeemphasizedFontAttributes_sCustomTextFontSize__transcriptAvailabilityDeemphasizedFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptAvailabilityDeemphasizedFontAttributes_sCustomTextFontName__transcriptAvailabilityDeemphasizedFontAttributes, obj);
  }
  v24 = (id)v12[460];

  return v24;
}

- (NSDictionary)transcriptNotifyAnywayFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptNotifyAnywayFontAttributes](self, "_transcriptNotifyAnywayFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptNotifyAnywayFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptNotifyAnywayFontAttributes_sContentSizeCategory__transcriptNotifyAnywayFontAttributes, (UIContentSizeCategory)v3)|| _transcriptNotifyAnywayFontAttributes_sIsIncreaseContrastEnabled__transcriptNotifyAnywayFontAttributes != v4|| _transcriptNotifyAnywayFontAttributes_sIsBoldTextEnabled__transcriptNotifyAnywayFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptNotifyAnywayFontAttributes_sTextFontSize__transcriptNotifyAnywayFontAttributes, *(double *)&_transcriptNotifyAnywayFontAttributes_sTextFontSize__transcriptNotifyAnywayFontAttributes != v6)|| (v11 = _transcriptNotifyAnywayFontAttributes_sCustomTextFontSize__transcriptNotifyAnywayFontAttributes, *(double *)&_transcriptNotifyAnywayFontAttributes_sCustomTextFontSize__transcriptNotifyAnywayFontAttributes != v7)|| (objc_msgSend((id)_transcriptNotifyAnywayFontAttributes_sCustomTextFontName__transcriptNotifyAnywayFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptNotifyAnywayFontAttributes_sCustomTextFontSize__transcriptNotifyAnywayFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptNotifyAnywayFont](self, "transcriptNotifyAnywayFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptAvailabilityColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptNotifyAnywayFontAttributes_sBehavior;
    _transcriptNotifyAnywayFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptNotifyAnywayFontAttributes_sContentSizeCategory__transcriptNotifyAnywayFontAttributes, v3);
    _transcriptNotifyAnywayFontAttributes_sIsIncreaseContrastEnabled__transcriptNotifyAnywayFontAttributes = v4;
    _transcriptNotifyAnywayFontAttributes_sIsBoldTextEnabled__transcriptNotifyAnywayFontAttributes = v26;
    _transcriptNotifyAnywayFontAttributes_sTextFontSize__transcriptNotifyAnywayFontAttributes = *(_QWORD *)&v6;
    _transcriptNotifyAnywayFontAttributes_sCustomTextFontSize__transcriptNotifyAnywayFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptNotifyAnywayFontAttributes_sCustomTextFontName__transcriptNotifyAnywayFontAttributes, obj);
  }
  v24 = (id)v12[463];

  return v24;
}

- (NSDictionary)transcriptEmphasizedFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptEmphasizedFontAttributes](self, "_transcriptEmphasizedFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptEmphasizedFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  id *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = (id *)&unk_1EE116000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptEmphasizedFontAttributes_sContentSizeCategory__transcriptEmphasizedFontAttributes, (UIContentSizeCategory)v3)|| _transcriptEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptEmphasizedFontAttributes != v4|| _transcriptEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptEmphasizedFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptEmphasizedFontAttributes_sTextFontSize__transcriptEmphasizedFontAttributes, *(double *)&_transcriptEmphasizedFontAttributes_sTextFontSize__transcriptEmphasizedFontAttributes != v6)|| (v11 = _transcriptEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmphasizedFontAttributes, *(double *)&_transcriptEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmphasizedFontAttributes != v7)|| (objc_msgSend((id)_transcriptEmphasizedFontAttributes_sCustomTextFontName__transcriptEmphasizedFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmphasizedFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptBoldFont](self, "transcriptBoldFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = (id *)&unk_1EE116000;
    v23 = (void *)_transcriptEmphasizedFontAttributes_sBehavior;
    _transcriptEmphasizedFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptEmphasizedFontAttributes_sContentSizeCategory__transcriptEmphasizedFontAttributes, v3);
    _transcriptEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptEmphasizedFontAttributes = v4;
    _transcriptEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptEmphasizedFontAttributes = v26;
    _transcriptEmphasizedFontAttributes_sTextFontSize__transcriptEmphasizedFontAttributes = *(_QWORD *)&v6;
    _transcriptEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmphasizedFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptEmphasizedFontAttributes_sCustomTextFontName__transcriptEmphasizedFontAttributes, obj);
  }
  v24 = v12[344];

  return v24;
}

- (NSDictionary)transcriptEmergencyEmphasizedFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptEmergencyEmphasizedFontAttributes](self, "_transcriptEmergencyEmphasizedFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptEmergencyEmphasizedFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[3];
  _QWORD v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptEmergencyEmphasizedFontAttributes_sContentSizeCategory__transcriptEmergencyEmphasizedFontAttributes, (UIContentSizeCategory)v3)|| _transcriptEmergencyEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptEmergencyEmphasizedFontAttributes != v4|| _transcriptEmergencyEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptEmergencyEmphasizedFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptEmergencyEmphasizedFontAttributes_sTextFontSize__transcriptEmergencyEmphasizedFontAttributes, *(double *)&_transcriptEmergencyEmphasizedFontAttributes_sTextFontSize__transcriptEmergencyEmphasizedFontAttributes != v6)|| (v11 = _transcriptEmergencyEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmergencyEmphasizedFontAttributes, *(double *)&_transcriptEmergencyEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmergencyEmphasizedFontAttributes != v7)|| (objc_msgSend((id)_transcriptEmergencyEmphasizedFontAttributes_sCustomTextFontName__transcriptEmergencyEmphasizedFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptEmergencyEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmergencyEmphasizedFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v21[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptLightFont](self, "transcriptLightFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v15;
    v21[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "redColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v21[2] = *MEMORY[0x1E0DC1178];
    v22[1] = v16;
    v22[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)_transcriptEmergencyEmphasizedFontAttributes_sBehavior;
    _transcriptEmergencyEmphasizedFontAttributes_sBehavior = v17;

    objc_storeStrong((id *)&_transcriptEmergencyEmphasizedFontAttributes_sContentSizeCategory__transcriptEmergencyEmphasizedFontAttributes, v3);
    _transcriptEmergencyEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptEmergencyEmphasizedFontAttributes = v4;
    _transcriptEmergencyEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptEmergencyEmphasizedFontAttributes = IsBoldTextEnabled;
    _transcriptEmergencyEmphasizedFontAttributes_sTextFontSize__transcriptEmergencyEmphasizedFontAttributes = *(_QWORD *)&v6;
    _transcriptEmergencyEmphasizedFontAttributes_sCustomTextFontSize__transcriptEmergencyEmphasizedFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptEmergencyEmphasizedFontAttributes_sCustomTextFontName__transcriptEmergencyEmphasizedFontAttributes, v9);
  }
  v19 = (id)v12[466];

  return v19;
}

- (NSDictionary)transcriptGroupModificationErrorEmphasizedFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptGroupModificationErrorEmphasizedFontAttributes](self, "_transcriptGroupModificationErrorEmphasizedFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptGroupModificationErrorEmphasizedFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[3];
  _QWORD v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptGroupModificationErrorEmphasizedFontAttributes_sContentSizeCategory__transcriptGroupModificationErrorEmphasizedFontAttributes, (UIContentSizeCategory)v3)|| _transcriptGroupModificationErrorEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptGroupModificationErrorEmphasizedFontAttributes != v4|| _transcriptGroupModificationErrorEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptGroupModificationErrorEmphasizedFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptGroupModificationErrorEmphasizedFontAttributes_sTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes, *(double *)&_transcriptGroupModificationErrorEmphasizedFontAttributes_sTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes != v6)|| (v11 = _transcriptGroupModificationErrorEmphasizedFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes, *(double *)&_transcriptGroupModificationErrorEmphasizedFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes != v7)|| (objc_msgSend((id)_transcriptGroupModificationErrorEmphasizedFontAttributes_sCustomTextFontName__transcriptGroupModificationErrorEmphasizedFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptGroupModificationErrorEmphasizedFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v21[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptBoldFont](self, "transcriptBoldFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v15;
    v21[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v21[2] = *MEMORY[0x1E0DC1178];
    v22[1] = v16;
    v22[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)_transcriptGroupModificationErrorEmphasizedFontAttributes_sBehavior;
    _transcriptGroupModificationErrorEmphasizedFontAttributes_sBehavior = v17;

    objc_storeStrong((id *)&_transcriptGroupModificationErrorEmphasizedFontAttributes_sContentSizeCategory__transcriptGroupModificationErrorEmphasizedFontAttributes, v3);
    _transcriptGroupModificationErrorEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptGroupModificationErrorEmphasizedFontAttributes = v4;
    _transcriptGroupModificationErrorEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptGroupModificationErrorEmphasizedFontAttributes = IsBoldTextEnabled;
    _transcriptGroupModificationErrorEmphasizedFontAttributes_sTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes = *(_QWORD *)&v6;
    _transcriptGroupModificationErrorEmphasizedFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorEmphasizedFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptGroupModificationErrorEmphasizedFontAttributes_sCustomTextFontName__transcriptGroupModificationErrorEmphasizedFontAttributes, v9);
  }
  v19 = (id)v12[469];

  return v19;
}

- (NSDictionary)transcriptGroupModificationErrorRegularFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptGroupModificationErrorRegularFontAttributes](self, "_transcriptGroupModificationErrorRegularFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptGroupModificationErrorRegularFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[3];
  _QWORD v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptGroupModificationErrorRegularFontAttributes_sContentSizeCategory__transcriptGroupModificationErrorRegularFontAttributes, (UIContentSizeCategory)v3)|| _transcriptGroupModificationErrorRegularFontAttributes_sIsIncreaseContrastEnabled__transcriptGroupModificationErrorRegularFontAttributes != v4|| _transcriptGroupModificationErrorRegularFontAttributes_sIsBoldTextEnabled__transcriptGroupModificationErrorRegularFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptGroupModificationErrorRegularFontAttributes_sTextFontSize__transcriptGroupModificationErrorRegularFontAttributes, *(double *)&_transcriptGroupModificationErrorRegularFontAttributes_sTextFontSize__transcriptGroupModificationErrorRegularFontAttributes != v6)|| (v11 = _transcriptGroupModificationErrorRegularFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorRegularFontAttributes, *(double *)&_transcriptGroupModificationErrorRegularFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorRegularFontAttributes != v7)|| (objc_msgSend((id)_transcriptGroupModificationErrorRegularFontAttributes_sCustomTextFontName__transcriptGroupModificationErrorRegularFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptGroupModificationErrorRegularFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorRegularFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v21[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptLightFont](self, "transcriptLightFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v15;
    v21[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v21[2] = *MEMORY[0x1E0DC1178];
    v22[1] = v16;
    v22[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)_transcriptGroupModificationErrorRegularFontAttributes_sBehavior;
    _transcriptGroupModificationErrorRegularFontAttributes_sBehavior = v17;

    objc_storeStrong((id *)&_transcriptGroupModificationErrorRegularFontAttributes_sContentSizeCategory__transcriptGroupModificationErrorRegularFontAttributes, v3);
    _transcriptGroupModificationErrorRegularFontAttributes_sIsIncreaseContrastEnabled__transcriptGroupModificationErrorRegularFontAttributes = v4;
    _transcriptGroupModificationErrorRegularFontAttributes_sIsBoldTextEnabled__transcriptGroupModificationErrorRegularFontAttributes = IsBoldTextEnabled;
    _transcriptGroupModificationErrorRegularFontAttributes_sTextFontSize__transcriptGroupModificationErrorRegularFontAttributes = *(_QWORD *)&v6;
    _transcriptGroupModificationErrorRegularFontAttributes_sCustomTextFontSize__transcriptGroupModificationErrorRegularFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptGroupModificationErrorRegularFontAttributes_sCustomTextFontName__transcriptGroupModificationErrorRegularFontAttributes, v9);
  }
  v19 = (id)v12[472];

  return v19;
}

- (NSDictionary)transcriptiMessageEmphasizedFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptiMessageEmphasizedFontAttributes](self, "_transcriptiMessageEmphasizedFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptiMessageEmphasizedFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptiMessageEmphasizedFontAttributes_sContentSizeCategory__transcriptiMessageEmphasizedFontAttributes, (UIContentSizeCategory)v3)|| _transcriptiMessageEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptiMessageEmphasizedFontAttributes != v4|| _transcriptiMessageEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptiMessageEmphasizedFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptiMessageEmphasizedFontAttributes_sTextFontSize__transcriptiMessageEmphasizedFontAttributes, *(double *)&_transcriptiMessageEmphasizedFontAttributes_sTextFontSize__transcriptiMessageEmphasizedFontAttributes != v6)|| (v11 = _transcriptiMessageEmphasizedFontAttributes_sCustomTextFontSize__transcriptiMessageEmphasizedFontAttributes, *(double *)&_transcriptiMessageEmphasizedFontAttributes_sCustomTextFontSize__transcriptiMessageEmphasizedFontAttributes != v7)|| (objc_msgSend((id)_transcriptiMessageEmphasizedFontAttributes_sCustomTextFontName__transcriptiMessageEmphasizedFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptiMessageEmphasizedFontAttributes_sCustomTextFontSize__transcriptiMessageEmphasizedFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptLightFont](self, "transcriptLightFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "recipientTextColorForColorType:", 1);
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptiMessageEmphasizedFontAttributes_sBehavior;
    _transcriptiMessageEmphasizedFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptiMessageEmphasizedFontAttributes_sContentSizeCategory__transcriptiMessageEmphasizedFontAttributes, v3);
    _transcriptiMessageEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptiMessageEmphasizedFontAttributes = v4;
    _transcriptiMessageEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptiMessageEmphasizedFontAttributes = v26;
    _transcriptiMessageEmphasizedFontAttributes_sTextFontSize__transcriptiMessageEmphasizedFontAttributes = *(_QWORD *)&v6;
    _transcriptiMessageEmphasizedFontAttributes_sCustomTextFontSize__transcriptiMessageEmphasizedFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptiMessageEmphasizedFontAttributes_sCustomTextFontName__transcriptiMessageEmphasizedFontAttributes, obj);
  }
  v24 = (id)v12[475];

  return v24;
}

- (NSDictionary)transcriptSMSEmphasizedFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptSMSEmphasizedFontAttributes](self, "_transcriptSMSEmphasizedFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptSMSEmphasizedFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptSMSEmphasizedFontAttributes_sContentSizeCategory__transcriptSMSEmphasizedFontAttributes, (UIContentSizeCategory)v3)|| _transcriptSMSEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptSMSEmphasizedFontAttributes != v4|| _transcriptSMSEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptSMSEmphasizedFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptSMSEmphasizedFontAttributes_sTextFontSize__transcriptSMSEmphasizedFontAttributes, *(double *)&_transcriptSMSEmphasizedFontAttributes_sTextFontSize__transcriptSMSEmphasizedFontAttributes != v6)|| (v11 = _transcriptSMSEmphasizedFontAttributes_sCustomTextFontSize__transcriptSMSEmphasizedFontAttributes, *(double *)&_transcriptSMSEmphasizedFontAttributes_sCustomTextFontSize__transcriptSMSEmphasizedFontAttributes != v7)|| (objc_msgSend((id)_transcriptSMSEmphasizedFontAttributes_sCustomTextFontName__transcriptSMSEmphasizedFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptSMSEmphasizedFontAttributes_sCustomTextFontSize__transcriptSMSEmphasizedFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptLightFont](self, "transcriptLightFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "recipientTextColorForColorType:", 0);
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptSMSEmphasizedFontAttributes_sBehavior;
    _transcriptSMSEmphasizedFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptSMSEmphasizedFontAttributes_sContentSizeCategory__transcriptSMSEmphasizedFontAttributes, v3);
    _transcriptSMSEmphasizedFontAttributes_sIsIncreaseContrastEnabled__transcriptSMSEmphasizedFontAttributes = v4;
    _transcriptSMSEmphasizedFontAttributes_sIsBoldTextEnabled__transcriptSMSEmphasizedFontAttributes = v26;
    _transcriptSMSEmphasizedFontAttributes_sTextFontSize__transcriptSMSEmphasizedFontAttributes = *(_QWORD *)&v6;
    _transcriptSMSEmphasizedFontAttributes_sCustomTextFontSize__transcriptSMSEmphasizedFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptSMSEmphasizedFontAttributes_sCustomTextFontName__transcriptSMSEmphasizedFontAttributes, obj);
  }
  v24 = (id)v12[478];

  return v24;
}

- (NSDictionary)transcriptEmphasizedPreferredFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptEmphasizedPreferredFontAttributes](self, "_transcriptEmphasizedPreferredFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptEmphasizedPreferredFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptEmphasizedPreferredFontAttributes_sContentSizeCategory__transcriptEmphasizedPreferredFontAttributes, (UIContentSizeCategory)v3)|| _transcriptEmphasizedPreferredFontAttributes_sIsIncreaseContrastEnabled__transcriptEmphasizedPreferredFontAttributes != v4|| _transcriptEmphasizedPreferredFontAttributes_sIsBoldTextEnabled__transcriptEmphasizedPreferredFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptEmphasizedPreferredFontAttributes_sTextFontSize__transcriptEmphasizedPreferredFontAttributes, *(double *)&_transcriptEmphasizedPreferredFontAttributes_sTextFontSize__transcriptEmphasizedPreferredFontAttributes != v6)|| (v11 = _transcriptEmphasizedPreferredFontAttributes_sCustomTextFontSize__transcriptEmphasizedPreferredFontAttributes, *(double *)&_transcriptEmphasizedPreferredFontAttributes_sCustomTextFontSize__transcriptEmphasizedPreferredFontAttributes != v7)|| (objc_msgSend((id)_transcriptEmphasizedPreferredFontAttributes_sCustomTextFontName__transcriptEmphasizedPreferredFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptEmphasizedPreferredFontAttributes_sCustomTextFontSize__transcriptEmphasizedPreferredFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptBoldPreferredFont](self, "transcriptBoldPreferredFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v23 = (void *)_transcriptEmphasizedPreferredFontAttributes_sBehavior;
    _transcriptEmphasizedPreferredFontAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_transcriptEmphasizedPreferredFontAttributes_sContentSizeCategory__transcriptEmphasizedPreferredFontAttributes, v3);
    _transcriptEmphasizedPreferredFontAttributes_sIsIncreaseContrastEnabled__transcriptEmphasizedPreferredFontAttributes = v4;
    _transcriptEmphasizedPreferredFontAttributes_sIsBoldTextEnabled__transcriptEmphasizedPreferredFontAttributes = v26;
    _transcriptEmphasizedPreferredFontAttributes_sTextFontSize__transcriptEmphasizedPreferredFontAttributes = *(_QWORD *)&v6;
    _transcriptEmphasizedPreferredFontAttributes_sCustomTextFontSize__transcriptEmphasizedPreferredFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptEmphasizedPreferredFontAttributes_sCustomTextFontName__transcriptEmphasizedPreferredFontAttributes, obj);
  }
  v24 = (id)v12[481];

  return v24;
}

- (NSDictionary)transcriptErrorStampPreferredFontAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _transcriptErrorStampPreferredFontAttributes](self, "_transcriptErrorStampPreferredFontAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_transcriptErrorStampPreferredFontAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[3];
  _QWORD v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_transcriptErrorStampPreferredFontAttributes_sContentSizeCategory__transcriptErrorStampPreferredFontAttributes, (UIContentSizeCategory)v3)|| _transcriptErrorStampPreferredFontAttributes_sIsIncreaseContrastEnabled__transcriptErrorStampPreferredFontAttributes != v4|| _transcriptErrorStampPreferredFontAttributes_sIsBoldTextEnabled__transcriptErrorStampPreferredFontAttributes != IsBoldTextEnabled|| (v11 = _transcriptErrorStampPreferredFontAttributes_sTextFontSize__transcriptErrorStampPreferredFontAttributes, *(double *)&_transcriptErrorStampPreferredFontAttributes_sTextFontSize__transcriptErrorStampPreferredFontAttributes != v6)|| (v11 = _transcriptErrorStampPreferredFontAttributes_sCustomTextFontSize__transcriptErrorStampPreferredFontAttributes, *(double *)&_transcriptErrorStampPreferredFontAttributes_sCustomTextFontSize__transcriptErrorStampPreferredFontAttributes != v7)|| (objc_msgSend((id)_transcriptErrorStampPreferredFontAttributes_sCustomTextFontName__transcriptErrorStampPreferredFontAttributes, "isEqualToString:", v10, *(double *)&_transcriptErrorStampPreferredFontAttributes_sCustomTextFontSize__transcriptErrorStampPreferredFontAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 1);
    v21[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptErrorStampPreferredFont](self, "transcriptErrorStampPreferredFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v15;
    v21[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v21[2] = *MEMORY[0x1E0DC1178];
    v22[1] = v16;
    v22[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 3);
    v17 = objc_claimAutoreleasedReturnValue();

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v18 = (void *)_transcriptErrorStampPreferredFontAttributes_sBehavior;
    _transcriptErrorStampPreferredFontAttributes_sBehavior = v17;

    objc_storeStrong((id *)&_transcriptErrorStampPreferredFontAttributes_sContentSizeCategory__transcriptErrorStampPreferredFontAttributes, v3);
    _transcriptErrorStampPreferredFontAttributes_sIsIncreaseContrastEnabled__transcriptErrorStampPreferredFontAttributes = v4;
    _transcriptErrorStampPreferredFontAttributes_sIsBoldTextEnabled__transcriptErrorStampPreferredFontAttributes = IsBoldTextEnabled;
    _transcriptErrorStampPreferredFontAttributes_sTextFontSize__transcriptErrorStampPreferredFontAttributes = *(_QWORD *)&v6;
    _transcriptErrorStampPreferredFontAttributes_sCustomTextFontSize__transcriptErrorStampPreferredFontAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_transcriptErrorStampPreferredFontAttributes_sCustomTextFontName__transcriptErrorStampPreferredFontAttributes, v9);
  }
  v19 = (id)v12[484];

  return v19;
}

- (NSDictionary)drawerTranscriptTextAttributes
{
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;

  -[CKUIBehavior _drawerTranscriptTextAttributes](self, "_drawerTranscriptTextAttributes");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPrinting");

  if (v4)
  {
    +[CKPrintController printAttributes:](CKPrintController, "printAttributes:", v2);
    v5 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v5;
  }
  return (NSDictionary *)v2;
}

- (id)_drawerTranscriptTextAttributes
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  id *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v26;
  __CFString *obj;
  _QWORD v28[3];
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = (id *)&unk_1EE116000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)_drawerTranscriptTextAttributes_sContentSizeCategory__drawerTranscriptTextAttributes, (UIContentSizeCategory)v3)|| _drawerTranscriptTextAttributes_sIsIncreaseContrastEnabled__drawerTranscriptTextAttributes != v4|| _drawerTranscriptTextAttributes_sIsBoldTextEnabled__drawerTranscriptTextAttributes != IsBoldTextEnabled|| (v11 = _drawerTranscriptTextAttributes_sTextFontSize__drawerTranscriptTextAttributes, *(double *)&_drawerTranscriptTextAttributes_sTextFontSize__drawerTranscriptTextAttributes != v6)|| (v11 = _drawerTranscriptTextAttributes_sCustomTextFontSize__drawerTranscriptTextAttributes, *(double *)&_drawerTranscriptTextAttributes_sCustomTextFontSize__drawerTranscriptTextAttributes != v7)|| (objc_msgSend((id)_drawerTranscriptTextAttributes_sCustomTextFontName__drawerTranscriptTextAttributes, "isEqualToString:", v10, *(double *)&_drawerTranscriptTextAttributes_sCustomTextFontSize__drawerTranscriptTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v13, "mutableCopy");

    objc_msgSend(v14, "setAlignment:", 2);
    objc_msgSend(v14, "setLineBreakMode:", 2);
    v28[0] = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior transcriptDrawerFont](self, "transcriptDrawerFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v15;
    v28[1] = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    obj = v9;
    v18 = v8;
    v19 = v3;
    v20 = v10;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v28[2] = *MEMORY[0x1E0DC1178];
    v29[1] = v21;
    v29[2] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 3);
    v26 = IsBoldTextEnabled;
    v22 = objc_claimAutoreleasedReturnValue();

    v10 = v20;
    v3 = v19;
    v8 = v18;

    v12 = (id *)&unk_1EE116000;
    v23 = (void *)_drawerTranscriptTextAttributes_sBehavior;
    _drawerTranscriptTextAttributes_sBehavior = v22;

    objc_storeStrong((id *)&_drawerTranscriptTextAttributes_sContentSizeCategory__drawerTranscriptTextAttributes, v3);
    _drawerTranscriptTextAttributes_sIsIncreaseContrastEnabled__drawerTranscriptTextAttributes = v4;
    _drawerTranscriptTextAttributes_sIsBoldTextEnabled__drawerTranscriptTextAttributes = v26;
    _drawerTranscriptTextAttributes_sTextFontSize__drawerTranscriptTextAttributes = *(_QWORD *)&v6;
    _drawerTranscriptTextAttributes_sCustomTextFontSize__drawerTranscriptTextAttributes = *(_QWORD *)&v7;
    objc_storeStrong((id *)&_drawerTranscriptTextAttributes_sCustomTextFontName__drawerTranscriptTextAttributes, obj);
  }
  v24 = v12[333];

  return v24;
}

- (NSDictionary)phishingWarningTextAttributes
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSDictionary *v18;
  _QWORD v20[3];
  _QWORD v21[4];

  v21[3] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)phishingWarningTextAttributes_sContentSizeCategory_phishingWarningTextAttributes, (UIContentSizeCategory)v2)|| phishingWarningTextAttributes_sIsIncreaseContrastEnabled_phishingWarningTextAttributes != v3|| phishingWarningTextAttributes_sIsBoldTextEnabled_phishingWarningTextAttributes != IsBoldTextEnabled|| (v10 = phishingWarningTextAttributes_sTextFontSize_phishingWarningTextAttributes, *(double *)&phishingWarningTextAttributes_sTextFontSize_phishingWarningTextAttributes != v5)|| (v10 = phishingWarningTextAttributes_sCustomTextFontSize_phishingWarningTextAttributes, *(double *)&phishingWarningTextAttributes_sCustomTextFontSize_phishingWarningTextAttributes != v6)|| (objc_msgSend((id)phishingWarningTextAttributes_sCustomTextFontName_phishingWarningTextAttributes, "isEqualToString:", v9, *(double *)&phishingWarningTextAttributes_sCustomTextFontSize_phishingWarningTextAttributes) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle", *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v12, "mutableCopy");

    objc_msgSend(v13, "setAlignment:", 1);
    v20[0] = *MEMORY[0x1E0DC1138];
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548]);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = v14;
    v20[1] = *MEMORY[0x1E0DC1140];
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v20[2] = *MEMORY[0x1E0DC1178];
    v21[1] = v15;
    v21[2] = v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 3);
    v16 = objc_claimAutoreleasedReturnValue();

    v11 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v17 = (void *)phishingWarningTextAttributes_sBehavior;
    phishingWarningTextAttributes_sBehavior = v16;

    objc_storeStrong((id *)&phishingWarningTextAttributes_sContentSizeCategory_phishingWarningTextAttributes, v2);
    phishingWarningTextAttributes_sIsIncreaseContrastEnabled_phishingWarningTextAttributes = v3;
    phishingWarningTextAttributes_sIsBoldTextEnabled_phishingWarningTextAttributes = IsBoldTextEnabled;
    phishingWarningTextAttributes_sTextFontSize_phishingWarningTextAttributes = *(_QWORD *)&v5;
    phishingWarningTextAttributes_sCustomTextFontSize_phishingWarningTextAttributes = *(_QWORD *)&v6;
    objc_storeStrong((id *)&phishingWarningTextAttributes_sCustomTextFontName_phishingWarningTextAttributes, v8);
  }
  v18 = (NSDictionary *)(id)v11[488];

  return v18;
}

- (UIEdgeInsets)phishingWarningEdgeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  v2 = 10.0;
  v3 = 5.0;
  v4 = 20.0;
  v5 = 5.0;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (UIFont)transcriptJunkHeaderTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptJunkHeaderTitleFont_sContentSizeCategory_transcriptJunkHeaderTitleFont, (UIContentSizeCategory)v2)|| transcriptJunkHeaderTitleFont_sIsIncreaseContrastEnabled_transcriptJunkHeaderTitleFont != v3|| transcriptJunkHeaderTitleFont_sIsBoldTextEnabled_transcriptJunkHeaderTitleFont != IsBoldTextEnabled|| (v10 = transcriptJunkHeaderTitleFont_sTextFontSize_transcriptJunkHeaderTitleFont, *(double *)&transcriptJunkHeaderTitleFont_sTextFontSize_transcriptJunkHeaderTitleFont != v5)|| (v10 = transcriptJunkHeaderTitleFont_sCustomTextFontSize_transcriptJunkHeaderTitleFont, *(double *)&transcriptJunkHeaderTitleFont_sCustomTextFontSize_transcriptJunkHeaderTitleFont != v6)|| (objc_msgSend((id)transcriptJunkHeaderTitleFont_sCustomTextFontName_transcriptJunkHeaderTitleFont, "isEqualToString:", v9, *(double *)&transcriptJunkHeaderTitleFont_sCustomTextFontSize_transcriptJunkHeaderTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB558], 2, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)transcriptJunkHeaderTitleFont_sBehavior;
    transcriptJunkHeaderTitleFont_sBehavior = v12;

    objc_storeStrong((id *)&transcriptJunkHeaderTitleFont_sContentSizeCategory_transcriptJunkHeaderTitleFont, v2);
    transcriptJunkHeaderTitleFont_sIsIncreaseContrastEnabled_transcriptJunkHeaderTitleFont = v3;
    transcriptJunkHeaderTitleFont_sIsBoldTextEnabled_transcriptJunkHeaderTitleFont = IsBoldTextEnabled;
    transcriptJunkHeaderTitleFont_sTextFontSize_transcriptJunkHeaderTitleFont = *(_QWORD *)&v5;
    transcriptJunkHeaderTitleFont_sCustomTextFontSize_transcriptJunkHeaderTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptJunkHeaderTitleFont_sCustomTextFontName_transcriptJunkHeaderTitleFont, v8);
  }
  v14 = (UIFont *)(id)transcriptJunkHeaderTitleFont_sBehavior;

  return v14;
}

- (UIFont)transcriptJunkHeaderButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)transcriptJunkHeaderButtonFont_sContentSizeCategory_transcriptJunkHeaderButtonFont, (UIContentSizeCategory)v2)|| transcriptJunkHeaderButtonFont_sIsIncreaseContrastEnabled_transcriptJunkHeaderButtonFont != v3|| transcriptJunkHeaderButtonFont_sIsBoldTextEnabled_transcriptJunkHeaderButtonFont != IsBoldTextEnabled|| (v10 = transcriptJunkHeaderButtonFont_sTextFontSize_transcriptJunkHeaderButtonFont, *(double *)&transcriptJunkHeaderButtonFont_sTextFontSize_transcriptJunkHeaderButtonFont != v5)|| (v10 = transcriptJunkHeaderButtonFont_sCustomTextFontSize_transcriptJunkHeaderButtonFont, *(double *)&transcriptJunkHeaderButtonFont_sCustomTextFontSize_transcriptJunkHeaderButtonFont != v6)|| (objc_msgSend((id)transcriptJunkHeaderButtonFont_sCustomTextFontName_transcriptJunkHeaderButtonFont, "isEqualToString:", v9, *(double *)&transcriptJunkHeaderButtonFont_sCustomTextFontSize_transcriptJunkHeaderButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)transcriptJunkHeaderButtonFont_sBehavior;
    transcriptJunkHeaderButtonFont_sBehavior = v11;

    objc_storeStrong((id *)&transcriptJunkHeaderButtonFont_sContentSizeCategory_transcriptJunkHeaderButtonFont, v2);
    transcriptJunkHeaderButtonFont_sIsIncreaseContrastEnabled_transcriptJunkHeaderButtonFont = v3;
    transcriptJunkHeaderButtonFont_sIsBoldTextEnabled_transcriptJunkHeaderButtonFont = IsBoldTextEnabled;
    transcriptJunkHeaderButtonFont_sTextFontSize_transcriptJunkHeaderButtonFont = *(_QWORD *)&v5;
    transcriptJunkHeaderButtonFont_sCustomTextFontSize_transcriptJunkHeaderButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&transcriptJunkHeaderButtonFont_sCustomTextFontName_transcriptJunkHeaderButtonFont, v8);
  }
  v13 = (UIFont *)(id)transcriptJunkHeaderButtonFont_sBehavior;

  return v13;
}

- (UIImage)encryptedServiceIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  uint64_t v9;
  __CFString *v10;
  __CFString *v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  UIImage *v22;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v9 = -[__CFString length](v8, "length");
  v10 = CFSTR("None");
  if (v9)
    v10 = v8;
  obj = v10;
  v11 = v10;
  v13 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)encryptedServiceIcon_sContentSizeCategory_encryptedServiceIcon, (UIContentSizeCategory)v3)|| encryptedServiceIcon_sIsIncreaseContrastEnabled_encryptedServiceIcon != v4|| encryptedServiceIcon_sIsBoldTextEnabled_encryptedServiceIcon != IsBoldTextEnabled|| (v12 = encryptedServiceIcon_sTextFontSize_encryptedServiceIcon, *(double *)&encryptedServiceIcon_sTextFontSize_encryptedServiceIcon != v6)|| (v12 = encryptedServiceIcon_sCustomTextFontSize_encryptedServiceIcon, *(double *)&encryptedServiceIcon_sCustomTextFontSize_encryptedServiceIcon != v7)|| (objc_msgSend((id)encryptedServiceIcon_sCustomTextFontName_encryptedServiceIcon, "isEqualToString:", v11, *(double *)&encryptedServiceIcon_sCustomTextFontSize_encryptedServiceIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("lock.fill"), *(double *)&v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)MEMORY[0x1E0CEA650];
    -[CKUIBehavior transcriptLightFont](self, "transcriptLightFont");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "configurationWithFont:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "imageWithSymbolConfiguration:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA478], "ckColorNamed:", CFSTR("CKBlueBalloonColor1"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "imageWithTintColor:", v19);
    v20 = objc_claimAutoreleasedReturnValue();

    v13 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v21 = (void *)encryptedServiceIcon_sBehavior;
    encryptedServiceIcon_sBehavior = v20;

    objc_storeStrong((id *)&encryptedServiceIcon_sContentSizeCategory_encryptedServiceIcon, v3);
    encryptedServiceIcon_sIsIncreaseContrastEnabled_encryptedServiceIcon = v4;
    encryptedServiceIcon_sIsBoldTextEnabled_encryptedServiceIcon = IsBoldTextEnabled;
    encryptedServiceIcon_sTextFontSize_encryptedServiceIcon = *(_QWORD *)&v6;
    encryptedServiceIcon_sCustomTextFontSize_encryptedServiceIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&encryptedServiceIcon_sCustomTextFontName_encryptedServiceIcon, obj);
  }
  v22 = (UIImage *)(id)v13[497];

  return v22;
}

- (UIImage)unencryptedServiceIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  uint64_t v9;
  __CFString *v10;
  __CFString *v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  UIImage *v22;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v9 = -[__CFString length](v8, "length");
  v10 = CFSTR("None");
  if (v9)
    v10 = v8;
  obj = v10;
  v11 = v10;
  v13 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)unencryptedServiceIcon_sContentSizeCategory_unencryptedServiceIcon, (UIContentSizeCategory)v3)|| unencryptedServiceIcon_sIsIncreaseContrastEnabled_unencryptedServiceIcon != v4|| unencryptedServiceIcon_sIsBoldTextEnabled_unencryptedServiceIcon != IsBoldTextEnabled|| (v12 = unencryptedServiceIcon_sTextFontSize_unencryptedServiceIcon, *(double *)&unencryptedServiceIcon_sTextFontSize_unencryptedServiceIcon != v6)|| (v12 = unencryptedServiceIcon_sCustomTextFontSize_unencryptedServiceIcon, *(double *)&unencryptedServiceIcon_sCustomTextFontSize_unencryptedServiceIcon != v7)|| (objc_msgSend((id)unencryptedServiceIcon_sCustomTextFontName_unencryptedServiceIcon, "isEqualToString:", v11, *(double *)&unencryptedServiceIcon_sCustomTextFontSize_unencryptedServiceIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("lock.slash.fill"), *(double *)&v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)MEMORY[0x1E0CEA650];
    -[CKUIBehavior transcriptLightFont](self, "transcriptLightFont");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "configurationWithFont:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "imageWithSymbolConfiguration:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA478], "ckColorNamed:", CFSTR("CKGreenBalloonColor1"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "imageWithTintColor:", v19);
    v20 = objc_claimAutoreleasedReturnValue();

    v13 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v21 = (void *)unencryptedServiceIcon_sBehavior;
    unencryptedServiceIcon_sBehavior = v20;

    objc_storeStrong((id *)&unencryptedServiceIcon_sContentSizeCategory_unencryptedServiceIcon, v3);
    unencryptedServiceIcon_sIsIncreaseContrastEnabled_unencryptedServiceIcon = v4;
    unencryptedServiceIcon_sIsBoldTextEnabled_unencryptedServiceIcon = IsBoldTextEnabled;
    unencryptedServiceIcon_sTextFontSize_unencryptedServiceIcon = *(_QWORD *)&v6;
    unencryptedServiceIcon_sCustomTextFontSize_unencryptedServiceIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&unencryptedServiceIcon_sCustomTextFontName_unencryptedServiceIcon, obj);
  }
  v22 = (UIImage *)(id)v13[500];

  return v22;
}

- (UIImage)locationShareActionIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  __CFString *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  UIImage *v26;
  char v28;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)locationShareActionIcon_sContentSizeCategory_locationShareActionIcon, (UIContentSizeCategory)v3)|| locationShareActionIcon_sIsIncreaseContrastEnabled_locationShareActionIcon != v4|| locationShareActionIcon_sIsBoldTextEnabled_locationShareActionIcon != IsBoldTextEnabled|| (v11 = locationShareActionIcon_sTextFontSize_locationShareActionIcon, *(double *)&locationShareActionIcon_sTextFontSize_locationShareActionIcon != v6)|| (v11 = locationShareActionIcon_sCustomTextFontSize_locationShareActionIcon, *(double *)&locationShareActionIcon_sCustomTextFontSize_locationShareActionIcon != v7)|| (objc_msgSend((id)locationShareActionIcon_sCustomTextFontName_locationShareActionIcon, "isEqualToString:", v10, *(double *)&locationShareActionIcon_sCustomTextFontSize_locationShareActionIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("location.fill"), *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0CEA650];
    -[CKUIBehavior transcriptTextFont](self, "transcriptTextFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "configurationWithFont:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "imageWithSymbolConfiguration:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "theme");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "transcriptTextColor");
    obj = v9;
    v20 = v8;
    v21 = v3;
    v22 = v10;
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "imageWithTintColor:", v23);
    v28 = IsBoldTextEnabled;
    v24 = objc_claimAutoreleasedReturnValue();

    v10 = v22;
    v3 = v21;
    v8 = v20;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v25 = (void *)locationShareActionIcon_sBehavior;
    locationShareActionIcon_sBehavior = v24;

    objc_storeStrong((id *)&locationShareActionIcon_sContentSizeCategory_locationShareActionIcon, v3);
    locationShareActionIcon_sIsIncreaseContrastEnabled_locationShareActionIcon = v4;
    locationShareActionIcon_sIsBoldTextEnabled_locationShareActionIcon = v28;
    locationShareActionIcon_sTextFontSize_locationShareActionIcon = *(_QWORD *)&v6;
    locationShareActionIcon_sCustomTextFontSize_locationShareActionIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&locationShareActionIcon_sCustomTextFontName_locationShareActionIcon, obj);
  }
  v26 = (UIImage *)(id)v12[503];

  return v26;
}

- (UIImage)conversationListFocusFilterBannerEnabledIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  void *v24;
  UIImage *v25;
  char v27;
  __CFString *v28;
  __CFString *v29;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerEnabledIcon_sContentSizeCategory_conversationListFocusFilterBannerEnabledIcon, (UIContentSizeCategory)v3)|| conversationListFocusFilterBannerEnabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerEnabledIcon != v4|| conversationListFocusFilterBannerEnabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerEnabledIcon != IsBoldTextEnabled|| (v11 = conversationListFocusFilterBannerEnabledIcon_sTextFontSize_conversationListFocusFilterBannerEnabledIcon, *(double *)&conversationListFocusFilterBannerEnabledIcon_sTextFontSize_conversationListFocusFilterBannerEnabledIcon != v6)|| (v11 = conversationListFocusFilterBannerEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerEnabledIcon, *(double *)&conversationListFocusFilterBannerEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerEnabledIcon != v7)|| (objc_msgSend((id)conversationListFocusFilterBannerEnabledIcon_sCustomTextFontName_conversationListFocusFilterBannerEnabledIcon, "isEqualToString:", v10, *(double *)&conversationListFocusFilterBannerEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerEnabledIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.circle.fill"), *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKUIBehavior conversationListFocusFilterBannerTitleFont](self, "conversationListFocusFilterBannerTitleFont");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "imageWithSymbolConfiguration:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "theme");
    v28 = v9;
    v18 = v10;
    v19 = v3;
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "transcriptAvailabilityColor");
    v29 = v8;
    v27 = IsBoldTextEnabled;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "imageWithTintColor:renderingMode:", v21, 2);
    v22 = v4;
    v23 = objc_claimAutoreleasedReturnValue();

    v3 = v19;
    v10 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v24 = (void *)conversationListFocusFilterBannerEnabledIcon_sBehavior;
    conversationListFocusFilterBannerEnabledIcon_sBehavior = v23;

    objc_storeStrong((id *)&conversationListFocusFilterBannerEnabledIcon_sContentSizeCategory_conversationListFocusFilterBannerEnabledIcon, v3);
    conversationListFocusFilterBannerEnabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerEnabledIcon = v22;
    conversationListFocusFilterBannerEnabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerEnabledIcon = v27;
    v8 = v29;
    conversationListFocusFilterBannerEnabledIcon_sTextFontSize_conversationListFocusFilterBannerEnabledIcon = *(_QWORD *)&v6;
    conversationListFocusFilterBannerEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerEnabledIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&conversationListFocusFilterBannerEnabledIcon_sCustomTextFontName_conversationListFocusFilterBannerEnabledIcon, v28);
  }
  v25 = (UIImage *)(id)v12[506];

  return v25;
}

- (UIImage)conversationListFocusFilterBannerDisabledIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  void *v24;
  UIImage *v25;
  char v27;
  __CFString *v28;
  __CFString *v29;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerDisabledIcon_sContentSizeCategory_conversationListFocusFilterBannerDisabledIcon, (UIContentSizeCategory)v3)|| conversationListFocusFilterBannerDisabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerDisabledIcon != v4|| conversationListFocusFilterBannerDisabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerDisabledIcon != IsBoldTextEnabled|| (v11 = conversationListFocusFilterBannerDisabledIcon_sTextFontSize_conversationListFocusFilterBannerDisabledIcon, *(double *)&conversationListFocusFilterBannerDisabledIcon_sTextFontSize_conversationListFocusFilterBannerDisabledIcon != v6)|| (v11 = conversationListFocusFilterBannerDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerDisabledIcon, *(double *)&conversationListFocusFilterBannerDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerDisabledIcon != v7)|| (objc_msgSend((id)conversationListFocusFilterBannerDisabledIcon_sCustomTextFontName_conversationListFocusFilterBannerDisabledIcon, "isEqualToString:", v10, *(double *)&conversationListFocusFilterBannerDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerDisabledIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.circle.fill"), *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKUIBehavior conversationListFocusFilterBannerTitleFont](self, "conversationListFocusFilterBannerTitleFont");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "imageWithSymbolConfiguration:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "theme");
    v28 = v9;
    v18 = v10;
    v19 = v3;
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "transcriptTextColor");
    v29 = v8;
    v27 = IsBoldTextEnabled;
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "imageWithTintColor:renderingMode:", v21, 2);
    v22 = v4;
    v23 = objc_claimAutoreleasedReturnValue();

    v3 = v19;
    v10 = v18;

    v12 = &conversationListCellRoundSelectorRightInset_sContentSizeCategory_conversationListCellRoundSelectorRightInset;
    v24 = (void *)conversationListFocusFilterBannerDisabledIcon_sBehavior;
    conversationListFocusFilterBannerDisabledIcon_sBehavior = v23;

    objc_storeStrong((id *)&conversationListFocusFilterBannerDisabledIcon_sContentSizeCategory_conversationListFocusFilterBannerDisabledIcon, v3);
    conversationListFocusFilterBannerDisabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerDisabledIcon = v22;
    conversationListFocusFilterBannerDisabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerDisabledIcon = v27;
    v8 = v29;
    conversationListFocusFilterBannerDisabledIcon_sTextFontSize_conversationListFocusFilterBannerDisabledIcon = *(_QWORD *)&v6;
    conversationListFocusFilterBannerDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerDisabledIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&conversationListFocusFilterBannerDisabledIcon_sCustomTextFontName_conversationListFocusFilterBannerDisabledIcon, v28);
  }
  v25 = (UIImage *)(id)v12[509];

  return v25;
}

- (UIImage)conversationListFocusFilterBannerCollapsedEnabledIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  id *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  UIImage *v18;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = (id *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerCollapsedEnabledIcon_sContentSizeCategory_conversationListFocusFilterBannerCollapsedEnabledIcon, (UIContentSizeCategory)v2)|| conversationListFocusFilterBannerCollapsedEnabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerCollapsedEnabledIcon != v3|| conversationListFocusFilterBannerCollapsedEnabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerCollapsedEnabledIcon != IsBoldTextEnabled|| (v10 = conversationListFocusFilterBannerCollapsedEnabledIcon_sTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon, *(double *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon != v5)|| (v10 = conversationListFocusFilterBannerCollapsedEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon, *(double *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon != v6)|| (objc_msgSend((id)conversationListFocusFilterBannerCollapsedEnabledIcon_sCustomTextFontName_conversationListFocusFilterBannerCollapsedEnabledIcon, "isEqualToString:", v9, *(double *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.circle.fill"), *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 3);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "imageWithSymbolConfiguration:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA478], "systemIndigoColor");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "imageWithTintColor:renderingMode:", v15, 1);
    v16 = objc_claimAutoreleasedReturnValue();

    v11 = (id *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    v17 = (void *)conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior = v16;

    objc_storeStrong((id *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sContentSizeCategory_conversationListFocusFilterBannerCollapsedEnabledIcon, v2);
    conversationListFocusFilterBannerCollapsedEnabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerCollapsedEnabledIcon = v3;
    conversationListFocusFilterBannerCollapsedEnabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerCollapsedEnabledIcon = IsBoldTextEnabled;
    conversationListFocusFilterBannerCollapsedEnabledIcon_sTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon = *(_QWORD *)&v5;
    conversationListFocusFilterBannerCollapsedEnabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedEnabledIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListFocusFilterBannerCollapsedEnabledIcon_sCustomTextFontName_conversationListFocusFilterBannerCollapsedEnabledIcon, v8);
  }
  v18 = (UIImage *)*v11;

  return v18;
}

- (UIImage)conversationListFocusFilterBannerCollapsedDisabledIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __CFString *v17;
  void *v18;
  __CFString *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  UIImage *v23;
  char v25;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFocusFilterBannerCollapsedDisabledIcon_sContentSizeCategory_conversationListFocusFilterBannerCollapsedDisabledIcon, (UIContentSizeCategory)v2)|| conversationListFocusFilterBannerCollapsedDisabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerCollapsedDisabledIcon != v3|| conversationListFocusFilterBannerCollapsedDisabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerCollapsedDisabledIcon != IsBoldTextEnabled|| (v10 = conversationListFocusFilterBannerCollapsedDisabledIcon_sTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon, *(double *)&conversationListFocusFilterBannerCollapsedDisabledIcon_sTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon != v5)|| (v10 = conversationListFocusFilterBannerCollapsedDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon, *(double *)&conversationListFocusFilterBannerCollapsedDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon != v6)|| (objc_msgSend((id)conversationListFocusFilterBannerCollapsedDisabledIcon_sCustomTextFontName_conversationListFocusFilterBannerCollapsedDisabledIcon, "isEqualToString:", v9, *(double *)&conversationListFocusFilterBannerCollapsedDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.circle.fill"), *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 3);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "imageWithSymbolConfiguration:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "theme");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "conversationListSummaryColor");
    obj = v8;
    v17 = v7;
    v18 = v2;
    v19 = v9;
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "imageWithTintColor:renderingMode:", v20, 1);
    v25 = IsBoldTextEnabled;
    v21 = objc_claimAutoreleasedReturnValue();

    v9 = v19;
    v2 = v18;
    v7 = v17;

    v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    v22 = (void *)conversationListFocusFilterBannerCollapsedDisabledIcon_sBehavior;
    conversationListFocusFilterBannerCollapsedDisabledIcon_sBehavior = v21;

    objc_storeStrong((id *)&conversationListFocusFilterBannerCollapsedDisabledIcon_sContentSizeCategory_conversationListFocusFilterBannerCollapsedDisabledIcon, v2);
    conversationListFocusFilterBannerCollapsedDisabledIcon_sIsIncreaseContrastEnabled_conversationListFocusFilterBannerCollapsedDisabledIcon = v3;
    conversationListFocusFilterBannerCollapsedDisabledIcon_sIsBoldTextEnabled_conversationListFocusFilterBannerCollapsedDisabledIcon = v25;
    conversationListFocusFilterBannerCollapsedDisabledIcon_sTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon = *(_QWORD *)&v5;
    conversationListFocusFilterBannerCollapsedDisabledIcon_sCustomTextFontSize_conversationListFocusFilterBannerCollapsedDisabledIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListFocusFilterBannerCollapsedDisabledIcon_sCustomTextFontName_conversationListFocusFilterBannerCollapsedDisabledIcon, obj);
  }
  v23 = (UIImage *)(id)v11[3];

  return v23;
}

- (UIImage)unavailabilityIndicatorIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  __CFString *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  UIImage *v26;
  char v28;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)unavailabilityIndicatorIcon_sContentSizeCategory_unavailabilityIndicatorIcon, (UIContentSizeCategory)v3)|| unavailabilityIndicatorIcon_sIsIncreaseContrastEnabled_unavailabilityIndicatorIcon != v4|| unavailabilityIndicatorIcon_sIsBoldTextEnabled_unavailabilityIndicatorIcon != IsBoldTextEnabled|| (v11 = unavailabilityIndicatorIcon_sTextFontSize_unavailabilityIndicatorIcon, *(double *)&unavailabilityIndicatorIcon_sTextFontSize_unavailabilityIndicatorIcon != v6)|| (v11 = unavailabilityIndicatorIcon_sCustomTextFontSize_unavailabilityIndicatorIcon, *(double *)&unavailabilityIndicatorIcon_sCustomTextFontSize_unavailabilityIndicatorIcon != v7)|| (objc_msgSend((id)unavailabilityIndicatorIcon_sCustomTextFontName_unavailabilityIndicatorIcon, "isEqualToString:", v10, *(double *)&unavailabilityIndicatorIcon_sCustomTextFontSize_unavailabilityIndicatorIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.fill"), *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0CEA650];
    -[CKUIBehavior transcriptAvailabilityFont](self, "transcriptAvailabilityFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "configurationWithFont:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "imageWithSymbolConfiguration:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "theme");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "transcriptAvailabilityColor");
    obj = v9;
    v20 = v8;
    v21 = v3;
    v22 = v10;
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "imageWithTintColor:", v23);
    v28 = IsBoldTextEnabled;
    v24 = objc_claimAutoreleasedReturnValue();

    v10 = v22;
    v3 = v21;
    v8 = v20;

    v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    v25 = (void *)unavailabilityIndicatorIcon_sBehavior;
    unavailabilityIndicatorIcon_sBehavior = v24;

    objc_storeStrong((id *)&unavailabilityIndicatorIcon_sContentSizeCategory_unavailabilityIndicatorIcon, v3);
    unavailabilityIndicatorIcon_sIsIncreaseContrastEnabled_unavailabilityIndicatorIcon = v4;
    unavailabilityIndicatorIcon_sIsBoldTextEnabled_unavailabilityIndicatorIcon = v28;
    unavailabilityIndicatorIcon_sTextFontSize_unavailabilityIndicatorIcon = *(_QWORD *)&v6;
    unavailabilityIndicatorIcon_sCustomTextFontSize_unavailabilityIndicatorIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&unavailabilityIndicatorIcon_sCustomTextFontName_unavailabilityIndicatorIcon, obj);
  }
  v26 = (UIImage *)(id)v12[6];

  return v26;
}

- (UIImage)unavailabilityIndicatorDeemphasizedIcon
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  __CFString *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  UIImage *v26;
  char v28;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)unavailabilityIndicatorDeemphasizedIcon_sContentSizeCategory_unavailabilityIndicatorDeemphasizedIcon, (UIContentSizeCategory)v3)|| unavailabilityIndicatorDeemphasizedIcon_sIsIncreaseContrastEnabled_unavailabilityIndicatorDeemphasizedIcon != v4|| unavailabilityIndicatorDeemphasizedIcon_sIsBoldTextEnabled_unavailabilityIndicatorDeemphasizedIcon != IsBoldTextEnabled|| (v11 = unavailabilityIndicatorDeemphasizedIcon_sTextFontSize_unavailabilityIndicatorDeemphasizedIcon, *(double *)&unavailabilityIndicatorDeemphasizedIcon_sTextFontSize_unavailabilityIndicatorDeemphasizedIcon != v6)|| (v11 = unavailabilityIndicatorDeemphasizedIcon_sCustomTextFontSize_unavailabilityIndicatorDeemphasizedIcon, *(double *)&unavailabilityIndicatorDeemphasizedIcon_sCustomTextFontSize_unavailabilityIndicatorDeemphasizedIcon != v7)|| (objc_msgSend((id)unavailabilityIndicatorDeemphasizedIcon_sCustomTextFontName_unavailabilityIndicatorDeemphasizedIcon, "isEqualToString:", v10, *(double *)&unavailabilityIndicatorDeemphasizedIcon_sCustomTextFontSize_unavailabilityIndicatorDeemphasizedIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("moon.fill"), *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0CEA650];
    -[CKUIBehavior transcriptAvailabilityFont](self, "transcriptAvailabilityFont");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "configurationWithFont:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "imageWithSymbolConfiguration:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "theme");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "transcriptAvailabilityDeemphasizedColor");
    obj = v9;
    v20 = v8;
    v21 = v3;
    v22 = v10;
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "imageWithTintColor:", v23);
    v28 = IsBoldTextEnabled;
    v24 = objc_claimAutoreleasedReturnValue();

    v10 = v22;
    v3 = v21;
    v8 = v20;

    v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    v25 = (void *)unavailabilityIndicatorDeemphasizedIcon_sBehavior;
    unavailabilityIndicatorDeemphasizedIcon_sBehavior = v24;

    objc_storeStrong((id *)&unavailabilityIndicatorDeemphasizedIcon_sContentSizeCategory_unavailabilityIndicatorDeemphasizedIcon, v3);
    unavailabilityIndicatorDeemphasizedIcon_sIsIncreaseContrastEnabled_unavailabilityIndicatorDeemphasizedIcon = v4;
    unavailabilityIndicatorDeemphasizedIcon_sIsBoldTextEnabled_unavailabilityIndicatorDeemphasizedIcon = v28;
    unavailabilityIndicatorDeemphasizedIcon_sTextFontSize_unavailabilityIndicatorDeemphasizedIcon = *(_QWORD *)&v6;
    unavailabilityIndicatorDeemphasizedIcon_sCustomTextFontSize_unavailabilityIndicatorDeemphasizedIcon = *(_QWORD *)&v7;
    objc_storeStrong((id *)&unavailabilityIndicatorDeemphasizedIcon_sCustomTextFontName_unavailabilityIndicatorDeemphasizedIcon, obj);
  }
  v26 = (UIImage *)(id)v12[9];

  return v26;
}

- (UIImage)satelliteAvailabilityIndicatorIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __CFString *v17;
  void *v18;
  __CFString *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  UIImage *v23;
  char v25;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)satelliteAvailabilityIndicatorIcon_sContentSizeCategory_satelliteAvailabilityIndicatorIcon, (UIContentSizeCategory)v2)|| satelliteAvailabilityIndicatorIcon_sIsIncreaseContrastEnabled_satelliteAvailabilityIndicatorIcon != v3|| satelliteAvailabilityIndicatorIcon_sIsBoldTextEnabled_satelliteAvailabilityIndicatorIcon != IsBoldTextEnabled|| (v10 = satelliteAvailabilityIndicatorIcon_sTextFontSize_satelliteAvailabilityIndicatorIcon, *(double *)&satelliteAvailabilityIndicatorIcon_sTextFontSize_satelliteAvailabilityIndicatorIcon != v5)|| (v10 = satelliteAvailabilityIndicatorIcon_sCustomTextFontSize_satelliteAvailabilityIndicatorIcon, *(double *)&satelliteAvailabilityIndicatorIcon_sCustomTextFontSize_satelliteAvailabilityIndicatorIcon != v6)|| (objc_msgSend((id)satelliteAvailabilityIndicatorIcon_sCustomTextFontName_satelliteAvailabilityIndicatorIcon, "isEqualToString:", v9, *(double *)&satelliteAvailabilityIndicatorIcon_sCustomTextFontSize_satelliteAvailabilityIndicatorIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("satellite.wave.2.fill"), *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "imageWithSymbolConfiguration:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "theme");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "transcriptAvailabilityColor");
    obj = v8;
    v17 = v7;
    v18 = v2;
    v19 = v9;
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "imageWithTintColor:", v20);
    v25 = IsBoldTextEnabled;
    v21 = objc_claimAutoreleasedReturnValue();

    v9 = v19;
    v2 = v18;
    v7 = v17;

    v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    v22 = (void *)satelliteAvailabilityIndicatorIcon_sBehavior;
    satelliteAvailabilityIndicatorIcon_sBehavior = v21;

    objc_storeStrong((id *)&satelliteAvailabilityIndicatorIcon_sContentSizeCategory_satelliteAvailabilityIndicatorIcon, v2);
    satelliteAvailabilityIndicatorIcon_sIsIncreaseContrastEnabled_satelliteAvailabilityIndicatorIcon = v3;
    satelliteAvailabilityIndicatorIcon_sIsBoldTextEnabled_satelliteAvailabilityIndicatorIcon = v25;
    satelliteAvailabilityIndicatorIcon_sTextFontSize_satelliteAvailabilityIndicatorIcon = *(_QWORD *)&v5;
    satelliteAvailabilityIndicatorIcon_sCustomTextFontSize_satelliteAvailabilityIndicatorIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&satelliteAvailabilityIndicatorIcon_sCustomTextFontName_satelliteAvailabilityIndicatorIcon, obj);
  }
  v23 = (UIImage *)(id)v11[12];

  return v23;
}

- (UIImage)satelliteServiceIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __CFString *v17;
  void *v18;
  __CFString *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  UIImage *v23;
  char v25;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)satelliteServiceIcon_sContentSizeCategory_satelliteServiceIcon, (UIContentSizeCategory)v2)|| satelliteServiceIcon_sIsIncreaseContrastEnabled_satelliteServiceIcon != v3|| satelliteServiceIcon_sIsBoldTextEnabled_satelliteServiceIcon != IsBoldTextEnabled|| (v10 = satelliteServiceIcon_sTextFontSize_satelliteServiceIcon, *(double *)&satelliteServiceIcon_sTextFontSize_satelliteServiceIcon != v5)|| (v10 = satelliteServiceIcon_sCustomTextFontSize_satelliteServiceIcon, *(double *)&satelliteServiceIcon_sCustomTextFontSize_satelliteServiceIcon != v6)|| (objc_msgSend((id)satelliteServiceIcon_sCustomTextFontName_satelliteServiceIcon, "isEqualToString:", v9, *(double *)&satelliteServiceIcon_sCustomTextFontSize_satelliteServiceIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("satellite.wave.2.fill"), *(double *)&v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithScale:", 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "imageWithSymbolConfiguration:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "theme");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "transcriptAvailabilityDeemphasizedColor");
    obj = v8;
    v17 = v7;
    v18 = v2;
    v19 = v9;
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "imageWithTintColor:", v20);
    v25 = IsBoldTextEnabled;
    v21 = objc_claimAutoreleasedReturnValue();

    v9 = v19;
    v2 = v18;
    v7 = v17;

    v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    v22 = (void *)satelliteServiceIcon_sBehavior;
    satelliteServiceIcon_sBehavior = v21;

    objc_storeStrong((id *)&satelliteServiceIcon_sContentSizeCategory_satelliteServiceIcon, v2);
    satelliteServiceIcon_sIsIncreaseContrastEnabled_satelliteServiceIcon = v3;
    satelliteServiceIcon_sIsBoldTextEnabled_satelliteServiceIcon = v25;
    satelliteServiceIcon_sTextFontSize_satelliteServiceIcon = *(_QWORD *)&v5;
    satelliteServiceIcon_sCustomTextFontSize_satelliteServiceIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&satelliteServiceIcon_sCustomTextFontName_satelliteServiceIcon, obj);
  }
  v23 = (UIImage *)(id)v11[15];

  return v23;
}

- (UIImage)contextMenuUndoSendIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIImage *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)contextMenuUndoSendIcon_sContentSizeCategory_contextMenuUndoSendIcon, (UIContentSizeCategory)v2)|| contextMenuUndoSendIcon_sIsIncreaseContrastEnabled_contextMenuUndoSendIcon != v3|| contextMenuUndoSendIcon_sIsBoldTextEnabled_contextMenuUndoSendIcon != IsBoldTextEnabled|| (v10 = contextMenuUndoSendIcon_sTextFontSize_contextMenuUndoSendIcon, *(double *)&contextMenuUndoSendIcon_sTextFontSize_contextMenuUndoSendIcon != v5)|| (v10 = contextMenuUndoSendIcon_sCustomTextFontSize_contextMenuUndoSendIcon, *(double *)&contextMenuUndoSendIcon_sCustomTextFontSize_contextMenuUndoSendIcon != v6)|| (objc_msgSend((id)contextMenuUndoSendIcon_sCustomTextFontName_contextMenuUndoSendIcon, "isEqualToString:", v9, *(double *)&contextMenuUndoSendIcon_sCustomTextFontSize_contextMenuUndoSendIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("arrow.uturn.backward.circle"), *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)contextMenuUndoSendIcon_sBehavior;
    contextMenuUndoSendIcon_sBehavior = v11;

    objc_storeStrong((id *)&contextMenuUndoSendIcon_sContentSizeCategory_contextMenuUndoSendIcon, v2);
    contextMenuUndoSendIcon_sIsIncreaseContrastEnabled_contextMenuUndoSendIcon = v3;
    contextMenuUndoSendIcon_sIsBoldTextEnabled_contextMenuUndoSendIcon = IsBoldTextEnabled;
    contextMenuUndoSendIcon_sTextFontSize_contextMenuUndoSendIcon = *(_QWORD *)&v5;
    contextMenuUndoSendIcon_sCustomTextFontSize_contextMenuUndoSendIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&contextMenuUndoSendIcon_sCustomTextFontName_contextMenuUndoSendIcon, v8);
  }
  v13 = (UIImage *)(id)contextMenuUndoSendIcon_sBehavior;

  return v13;
}

- (UIImage)contextMenuCancelScheduledMessageIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIImage *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)contextMenuCancelScheduledMessageIcon_sContentSizeCategory_contextMenuCancelScheduledMessageIcon, (UIContentSizeCategory)v2)|| contextMenuCancelScheduledMessageIcon_sIsIncreaseContrastEnabled_contextMenuCancelScheduledMessageIcon != v3|| contextMenuCancelScheduledMessageIcon_sIsBoldTextEnabled_contextMenuCancelScheduledMessageIcon != IsBoldTextEnabled|| (v10 = contextMenuCancelScheduledMessageIcon_sTextFontSize_contextMenuCancelScheduledMessageIcon, *(double *)&contextMenuCancelScheduledMessageIcon_sTextFontSize_contextMenuCancelScheduledMessageIcon != v5)|| (v10 = contextMenuCancelScheduledMessageIcon_sCustomTextFontSize_contextMenuCancelScheduledMessageIcon, *(double *)&contextMenuCancelScheduledMessageIcon_sCustomTextFontSize_contextMenuCancelScheduledMessageIcon != v6)|| (objc_msgSend((id)contextMenuCancelScheduledMessageIcon_sCustomTextFontName_contextMenuCancelScheduledMessageIcon, "isEqualToString:", v9, *(double *)&contextMenuCancelScheduledMessageIcon_sCustomTextFontSize_contextMenuCancelScheduledMessageIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("trash"), *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)contextMenuCancelScheduledMessageIcon_sBehavior;
    contextMenuCancelScheduledMessageIcon_sBehavior = v11;

    objc_storeStrong((id *)&contextMenuCancelScheduledMessageIcon_sContentSizeCategory_contextMenuCancelScheduledMessageIcon, v2);
    contextMenuCancelScheduledMessageIcon_sIsIncreaseContrastEnabled_contextMenuCancelScheduledMessageIcon = v3;
    contextMenuCancelScheduledMessageIcon_sIsBoldTextEnabled_contextMenuCancelScheduledMessageIcon = IsBoldTextEnabled;
    contextMenuCancelScheduledMessageIcon_sTextFontSize_contextMenuCancelScheduledMessageIcon = *(_QWORD *)&v5;
    contextMenuCancelScheduledMessageIcon_sCustomTextFontSize_contextMenuCancelScheduledMessageIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&contextMenuCancelScheduledMessageIcon_sCustomTextFontName_contextMenuCancelScheduledMessageIcon, v8);
  }
  v13 = (UIImage *)(id)contextMenuCancelScheduledMessageIcon_sBehavior;

  return v13;
}

- (UIImage)hawkingWarningIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  UIImage *v17;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)hawkingWarningIcon_sContentSizeCategory_hawkingWarningIcon, (UIContentSizeCategory)v2)|| hawkingWarningIcon_sIsIncreaseContrastEnabled_hawkingWarningIcon != v3|| hawkingWarningIcon_sIsBoldTextEnabled_hawkingWarningIcon != IsBoldTextEnabled|| (v10 = hawkingWarningIcon_sTextFontSize_hawkingWarningIcon, *(double *)&hawkingWarningIcon_sTextFontSize_hawkingWarningIcon != v5)|| (v10 = hawkingWarningIcon_sCustomTextFontSize_hawkingWarningIcon, *(double *)&hawkingWarningIcon_sCustomTextFontSize_hawkingWarningIcon != v6)|| (objc_msgSend((id)hawkingWarningIcon_sCustomTextFontName_hawkingWarningIcon, "isEqualToString:", v9, *(double *)&hawkingWarningIcon_sCustomTextFontSize_hawkingWarningIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("exclamationmark.circle"), *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "theme");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "transcriptTextColor");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "imageWithTintColor:", v14);
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)hawkingWarningIcon_sBehavior;
    hawkingWarningIcon_sBehavior = v15;

    objc_storeStrong((id *)&hawkingWarningIcon_sContentSizeCategory_hawkingWarningIcon, v2);
    hawkingWarningIcon_sIsIncreaseContrastEnabled_hawkingWarningIcon = v3;
    hawkingWarningIcon_sIsBoldTextEnabled_hawkingWarningIcon = IsBoldTextEnabled;
    hawkingWarningIcon_sTextFontSize_hawkingWarningIcon = *(_QWORD *)&v5;
    hawkingWarningIcon_sCustomTextFontSize_hawkingWarningIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&hawkingWarningIcon_sCustomTextFontName_hawkingWarningIcon, v8);
  }
  v17 = (UIImage *)(id)hawkingWarningIcon_sBehavior;

  return v17;
}

- (UIImage)messageStatusWarningIconRed
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  __CFString *v20;
  uint64_t v21;
  void *v22;
  UIImage *v23;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)messageStatusWarningIconRed_sContentSizeCategory_messageStatusWarningIconRed, (UIContentSizeCategory)v3)|| messageStatusWarningIconRed_sIsIncreaseContrastEnabled_messageStatusWarningIconRed != v4|| messageStatusWarningIconRed_sIsBoldTextEnabled_messageStatusWarningIconRed != IsBoldTextEnabled|| (v11 = messageStatusWarningIconRed_sTextFontSize_messageStatusWarningIconRed, *(double *)&messageStatusWarningIconRed_sTextFontSize_messageStatusWarningIconRed != v6)|| (v11 = messageStatusWarningIconRed_sCustomTextFontSize_messageStatusWarningIconRed, *(double *)&messageStatusWarningIconRed_sCustomTextFontSize_messageStatusWarningIconRed != v7)|| (objc_msgSend((id)messageStatusWarningIconRed_sCustomTextFontName_messageStatusWarningIconRed, "isEqualToString:", v10, *(double *)&messageStatusWarningIconRed_sCustomTextFontSize_messageStatusWarningIconRed) & 1) == 0)
  {
    -[CKUIBehavior transcriptMessageStatusFont](self, "transcriptMessageStatusFont", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:", v13);
    v14 = v8;
    v15 = v3;
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("exclamationmark.circle"), v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "imageWithTintColor:", v18);
    obj = v9;
    v19 = IsBoldTextEnabled;
    v20 = v10;
    v21 = objc_claimAutoreleasedReturnValue();

    v3 = v15;
    v8 = v14;
    v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;

    v22 = (void *)messageStatusWarningIconRed_sBehavior;
    messageStatusWarningIconRed_sBehavior = v21;
    v10 = v20;

    objc_storeStrong((id *)&messageStatusWarningIconRed_sContentSizeCategory_messageStatusWarningIconRed, v3);
    messageStatusWarningIconRed_sIsIncreaseContrastEnabled_messageStatusWarningIconRed = v4;
    messageStatusWarningIconRed_sIsBoldTextEnabled_messageStatusWarningIconRed = v19;
    messageStatusWarningIconRed_sTextFontSize_messageStatusWarningIconRed = *(_QWORD *)&v6;
    messageStatusWarningIconRed_sCustomTextFontSize_messageStatusWarningIconRed = *(_QWORD *)&v7;
    objc_storeStrong((id *)&messageStatusWarningIconRed_sCustomTextFontName_messageStatusWarningIconRed, obj);
  }
  v23 = (UIImage *)(id)v12[27];

  return v23;
}

- (UIImage)messageStampWarningIconRed
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  __CFString *v20;
  uint64_t v21;
  void *v22;
  UIImage *v23;
  __CFString *obj;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)messageStampWarningIconRed_sContentSizeCategory_messageStampWarningIconRed, (UIContentSizeCategory)v3)|| messageStampWarningIconRed_sIsIncreaseContrastEnabled_messageStampWarningIconRed != v4|| messageStampWarningIconRed_sIsBoldTextEnabled_messageStampWarningIconRed != IsBoldTextEnabled|| (v11 = messageStampWarningIconRed_sTextFontSize_messageStampWarningIconRed, *(double *)&messageStampWarningIconRed_sTextFontSize_messageStampWarningIconRed != v6)|| (v11 = messageStampWarningIconRed_sCustomTextFontSize_messageStampWarningIconRed, *(double *)&messageStampWarningIconRed_sCustomTextFontSize_messageStampWarningIconRed != v7)|| (objc_msgSend((id)messageStampWarningIconRed_sCustomTextFontName_messageStampWarningIconRed, "isEqualToString:", v10, *(double *)&messageStampWarningIconRed_sCustomTextFontSize_messageStampWarningIconRed) & 1) == 0)
  {
    -[CKUIBehavior transcriptErrorStampFont](self, "transcriptErrorStampFont", *(double *)&v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithFont:", v13);
    v14 = v8;
    v15 = v3;
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("exclamationmark.circle"), v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "imageWithTintColor:", v18);
    obj = v9;
    v19 = IsBoldTextEnabled;
    v20 = v10;
    v21 = objc_claimAutoreleasedReturnValue();

    v3 = v15;
    v8 = v14;
    v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;

    v22 = (void *)messageStampWarningIconRed_sBehavior;
    messageStampWarningIconRed_sBehavior = v21;
    v10 = v20;

    objc_storeStrong((id *)&messageStampWarningIconRed_sContentSizeCategory_messageStampWarningIconRed, v3);
    messageStampWarningIconRed_sIsIncreaseContrastEnabled_messageStampWarningIconRed = v4;
    messageStampWarningIconRed_sIsBoldTextEnabled_messageStampWarningIconRed = v19;
    messageStampWarningIconRed_sTextFontSize_messageStampWarningIconRed = *(_QWORD *)&v6;
    messageStampWarningIconRed_sCustomTextFontSize_messageStampWarningIconRed = *(_QWORD *)&v7;
    objc_storeStrong((id *)&messageStampWarningIconRed_sCustomTextFontName_messageStampWarningIconRed, obj);
  }
  v23 = (UIImage *)(id)v12[30];

  return v23;
}

- (UIImage)conversationListFacetimeVideoIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIImage *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFacetimeVideoIcon_sContentSizeCategory_conversationListFacetimeVideoIcon, (UIContentSizeCategory)v2)|| conversationListFacetimeVideoIcon_sIsIncreaseContrastEnabled_conversationListFacetimeVideoIcon != v3|| conversationListFacetimeVideoIcon_sIsBoldTextEnabled_conversationListFacetimeVideoIcon != IsBoldTextEnabled|| (v10 = conversationListFacetimeVideoIcon_sTextFontSize_conversationListFacetimeVideoIcon, *(double *)&conversationListFacetimeVideoIcon_sTextFontSize_conversationListFacetimeVideoIcon != v5)|| (v10 = conversationListFacetimeVideoIcon_sCustomTextFontSize_conversationListFacetimeVideoIcon, *(double *)&conversationListFacetimeVideoIcon_sCustomTextFontSize_conversationListFacetimeVideoIcon != v6)|| (objc_msgSend((id)conversationListFacetimeVideoIcon_sCustomTextFontName_conversationListFacetimeVideoIcon, "isEqualToString:", v9, *(double *)&conversationListFacetimeVideoIcon_sCustomTextFontSize_conversationListFacetimeVideoIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("video.fill"), *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)conversationListFacetimeVideoIcon_sBehavior;
    conversationListFacetimeVideoIcon_sBehavior = v11;

    objc_storeStrong((id *)&conversationListFacetimeVideoIcon_sContentSizeCategory_conversationListFacetimeVideoIcon, v2);
    conversationListFacetimeVideoIcon_sIsIncreaseContrastEnabled_conversationListFacetimeVideoIcon = v3;
    conversationListFacetimeVideoIcon_sIsBoldTextEnabled_conversationListFacetimeVideoIcon = IsBoldTextEnabled;
    conversationListFacetimeVideoIcon_sTextFontSize_conversationListFacetimeVideoIcon = *(_QWORD *)&v5;
    conversationListFacetimeVideoIcon_sCustomTextFontSize_conversationListFacetimeVideoIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListFacetimeVideoIcon_sCustomTextFontName_conversationListFacetimeVideoIcon, v8);
  }
  v13 = (UIImage *)(id)conversationListFacetimeVideoIcon_sBehavior;

  return v13;
}

- (UIImage)conversationListFacetimeAudioIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIImage *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListFacetimeAudioIcon_sContentSizeCategory_conversationListFacetimeAudioIcon, (UIContentSizeCategory)v2)|| conversationListFacetimeAudioIcon_sIsIncreaseContrastEnabled_conversationListFacetimeAudioIcon != v3|| conversationListFacetimeAudioIcon_sIsBoldTextEnabled_conversationListFacetimeAudioIcon != IsBoldTextEnabled|| (v10 = conversationListFacetimeAudioIcon_sTextFontSize_conversationListFacetimeAudioIcon, *(double *)&conversationListFacetimeAudioIcon_sTextFontSize_conversationListFacetimeAudioIcon != v5)|| (v10 = conversationListFacetimeAudioIcon_sCustomTextFontSize_conversationListFacetimeAudioIcon, *(double *)&conversationListFacetimeAudioIcon_sCustomTextFontSize_conversationListFacetimeAudioIcon != v6)|| (objc_msgSend((id)conversationListFacetimeAudioIcon_sCustomTextFontName_conversationListFacetimeAudioIcon, "isEqualToString:", v9, *(double *)&conversationListFacetimeAudioIcon_sCustomTextFontSize_conversationListFacetimeAudioIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("phone.fill"), *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)conversationListFacetimeAudioIcon_sBehavior;
    conversationListFacetimeAudioIcon_sBehavior = v11;

    objc_storeStrong((id *)&conversationListFacetimeAudioIcon_sContentSizeCategory_conversationListFacetimeAudioIcon, v2);
    conversationListFacetimeAudioIcon_sIsIncreaseContrastEnabled_conversationListFacetimeAudioIcon = v3;
    conversationListFacetimeAudioIcon_sIsBoldTextEnabled_conversationListFacetimeAudioIcon = IsBoldTextEnabled;
    conversationListFacetimeAudioIcon_sTextFontSize_conversationListFacetimeAudioIcon = *(_QWORD *)&v5;
    conversationListFacetimeAudioIcon_sCustomTextFontSize_conversationListFacetimeAudioIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListFacetimeAudioIcon_sCustomTextFontName_conversationListFacetimeAudioIcon, v8);
  }
  v13 = (UIImage *)(id)conversationListFacetimeAudioIcon_sBehavior;

  return v13;
}

- (UIImage)conversationListSharePlayIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIImage *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)conversationListSharePlayIcon_sContentSizeCategory_conversationListSharePlayIcon, (UIContentSizeCategory)v2)|| conversationListSharePlayIcon_sIsIncreaseContrastEnabled_conversationListSharePlayIcon != v3|| conversationListSharePlayIcon_sIsBoldTextEnabled_conversationListSharePlayIcon != IsBoldTextEnabled|| (v10 = conversationListSharePlayIcon_sTextFontSize_conversationListSharePlayIcon, *(double *)&conversationListSharePlayIcon_sTextFontSize_conversationListSharePlayIcon != v5)|| (v10 = conversationListSharePlayIcon_sCustomTextFontSize_conversationListSharePlayIcon, *(double *)&conversationListSharePlayIcon_sCustomTextFontSize_conversationListSharePlayIcon != v6)|| (objc_msgSend((id)conversationListSharePlayIcon_sCustomTextFontName_conversationListSharePlayIcon, "isEqualToString:", v9, *(double *)&conversationListSharePlayIcon_sCustomTextFontSize_conversationListSharePlayIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("shareplay"), *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)conversationListSharePlayIcon_sBehavior;
    conversationListSharePlayIcon_sBehavior = v11;

    objc_storeStrong((id *)&conversationListSharePlayIcon_sContentSizeCategory_conversationListSharePlayIcon, v2);
    conversationListSharePlayIcon_sIsIncreaseContrastEnabled_conversationListSharePlayIcon = v3;
    conversationListSharePlayIcon_sIsBoldTextEnabled_conversationListSharePlayIcon = IsBoldTextEnabled;
    conversationListSharePlayIcon_sTextFontSize_conversationListSharePlayIcon = *(_QWORD *)&v5;
    conversationListSharePlayIcon_sCustomTextFontSize_conversationListSharePlayIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&conversationListSharePlayIcon_sCustomTextFontName_conversationListSharePlayIcon, v8);
  }
  v13 = (UIImage *)(id)conversationListSharePlayIcon_sBehavior;

  return v13;
}

- (UIImage)facetimeAudioIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  UIImage *v15;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)facetimeAudioIcon_sContentSizeCategory_facetimeAudioIcon, (UIContentSizeCategory)v2)|| facetimeAudioIcon_sIsIncreaseContrastEnabled_facetimeAudioIcon != v3|| facetimeAudioIcon_sIsBoldTextEnabled_facetimeAudioIcon != IsBoldTextEnabled|| (v10 = facetimeAudioIcon_sTextFontSize_facetimeAudioIcon, *(double *)&facetimeAudioIcon_sTextFontSize_facetimeAudioIcon != v5)|| (v10 = facetimeAudioIcon_sCustomTextFontSize_facetimeAudioIcon, *(double *)&facetimeAudioIcon_sCustomTextFontSize_facetimeAudioIcon != v6)|| (objc_msgSend((id)facetimeAudioIcon_sCustomTextFontName_facetimeAudioIcon, "isEqualToString:", v9, *(double *)&facetimeAudioIcon_sCustomTextFontSize_facetimeAudioIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("messages-header-audio-glyph"), *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA478], "ckColorNamed:", CFSTR("CKSystemGrayColor"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_flatImageWithColor:", v12);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)facetimeAudioIcon_sBehavior;
    facetimeAudioIcon_sBehavior = v13;

    objc_storeStrong((id *)&facetimeAudioIcon_sContentSizeCategory_facetimeAudioIcon, v2);
    facetimeAudioIcon_sIsIncreaseContrastEnabled_facetimeAudioIcon = v3;
    facetimeAudioIcon_sIsBoldTextEnabled_facetimeAudioIcon = IsBoldTextEnabled;
    facetimeAudioIcon_sTextFontSize_facetimeAudioIcon = *(_QWORD *)&v5;
    facetimeAudioIcon_sCustomTextFontSize_facetimeAudioIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&facetimeAudioIcon_sCustomTextFontName_facetimeAudioIcon, v8);
  }
  v15 = (UIImage *)(id)facetimeAudioIcon_sBehavior;

  return v15;
}

- (UIImage)screenTimeConversationListSummaryIcon
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIImage *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)screenTimeConversationListSummaryIcon_sContentSizeCategory_screenTimeConversationListSummaryIcon, (UIContentSizeCategory)v2)|| screenTimeConversationListSummaryIcon_sIsIncreaseContrastEnabled_screenTimeConversationListSummaryIcon != v3|| screenTimeConversationListSummaryIcon_sIsBoldTextEnabled_screenTimeConversationListSummaryIcon != IsBoldTextEnabled|| (v10 = screenTimeConversationListSummaryIcon_sTextFontSize_screenTimeConversationListSummaryIcon, *(double *)&screenTimeConversationListSummaryIcon_sTextFontSize_screenTimeConversationListSummaryIcon != v5)|| (v10 = screenTimeConversationListSummaryIcon_sCustomTextFontSize_screenTimeConversationListSummaryIcon, *(double *)&screenTimeConversationListSummaryIcon_sCustomTextFontSize_screenTimeConversationListSummaryIcon != v6)|| (objc_msgSend((id)screenTimeConversationListSummaryIcon_sCustomTextFontName_screenTimeConversationListSummaryIcon, "isEqualToString:", v9, *(double *)&screenTimeConversationListSummaryIcon_sCustomTextFontSize_screenTimeConversationListSummaryIcon) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("hourglass.tophalf.filled"), *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)screenTimeConversationListSummaryIcon_sBehavior;
    screenTimeConversationListSummaryIcon_sBehavior = v11;

    objc_storeStrong((id *)&screenTimeConversationListSummaryIcon_sContentSizeCategory_screenTimeConversationListSummaryIcon, v2);
    screenTimeConversationListSummaryIcon_sIsIncreaseContrastEnabled_screenTimeConversationListSummaryIcon = v3;
    screenTimeConversationListSummaryIcon_sIsBoldTextEnabled_screenTimeConversationListSummaryIcon = IsBoldTextEnabled;
    screenTimeConversationListSummaryIcon_sTextFontSize_screenTimeConversationListSummaryIcon = *(_QWORD *)&v5;
    screenTimeConversationListSummaryIcon_sCustomTextFontSize_screenTimeConversationListSummaryIcon = *(_QWORD *)&v6;
    objc_storeStrong((id *)&screenTimeConversationListSummaryIcon_sCustomTextFontName_screenTimeConversationListSummaryIcon, v8);
  }
  v13 = (UIImage *)(id)screenTimeConversationListSummaryIcon_sBehavior;

  return v13;
}

- (double)messageEditingButtonInternalPadding
{
  if (messageEditingButtonInternalPadding_once != -1)
    dispatch_once(&messageEditingButtonInternalPadding_once, &__block_literal_global_536_0);
  return *(double *)&messageEditingButtonInternalPadding_sBehavior;
}

void __51__CKUIBehavior_messageEditingButtonInternalPadding__block_invoke()
{
  messageEditingButtonInternalPadding_sBehavior = 0x4000000000000000;
}

- (double)messageEditingNonCompactBalloonToLeftButtonPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __66__CKUIBehavior_messageEditingNonCompactBalloonToLeftButtonPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageEditingNonCompactBalloonToLeftButtonPadding_once != -1)
    dispatch_once(&messageEditingNonCompactBalloonToLeftButtonPadding_once, block);
  return *(double *)&messageEditingNonCompactBalloonToLeftButtonPadding_sBehavior;
}

double __66__CKUIBehavior_messageEditingNonCompactBalloonToLeftButtonPadding__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "messageEditingButtonInternalPadding");
  result = 8.0 - v1;
  messageEditingNonCompactBalloonToLeftButtonPadding_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)messageEditingNonCompactBalloonPillEdgeToRightButtonPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __75__CKUIBehavior_messageEditingNonCompactBalloonPillEdgeToRightButtonPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageEditingNonCompactBalloonPillEdgeToRightButtonPadding_once != -1)
    dispatch_once(&messageEditingNonCompactBalloonPillEdgeToRightButtonPadding_once, block);
  return *(double *)&messageEditingNonCompactBalloonPillEdgeToRightButtonPadding_sBehavior;
}

double __75__CKUIBehavior_messageEditingNonCompactBalloonPillEdgeToRightButtonPadding__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "messageEditingButtonInternalPadding");
  result = 12.0 - v1;
  messageEditingNonCompactBalloonPillEdgeToRightButtonPadding_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)messageEditingNonCompactRightEdgeToButtonPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __64__CKUIBehavior_messageEditingNonCompactRightEdgeToButtonPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageEditingNonCompactRightEdgeToButtonPadding_once != -1)
    dispatch_once(&messageEditingNonCompactRightEdgeToButtonPadding_once, block);
  return *(double *)&messageEditingNonCompactRightEdgeToButtonPadding_sBehavior;
}

double __64__CKUIBehavior_messageEditingNonCompactRightEdgeToButtonPadding__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "messageEditingButtonInternalPadding");
  result = 16.0 - v1;
  messageEditingNonCompactRightEdgeToButtonPadding_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)messageEditingNonCompactLeftEdgeToButtonMinimumPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __70__CKUIBehavior_messageEditingNonCompactLeftEdgeToButtonMinimumPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageEditingNonCompactLeftEdgeToButtonMinimumPadding_once != -1)
    dispatch_once(&messageEditingNonCompactLeftEdgeToButtonMinimumPadding_once, block);
  return *(double *)&messageEditingNonCompactLeftEdgeToButtonMinimumPadding_sBehavior;
}

double __70__CKUIBehavior_messageEditingNonCompactLeftEdgeToButtonMinimumPadding__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "messageEditingButtonInternalPadding");
  result = 16.0 - v1;
  messageEditingNonCompactLeftEdgeToButtonMinimumPadding_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)messageEditingCompactTrailingEdgeToButtonPadding
{
  if (messageEditingCompactTrailingEdgeToButtonPadding_once != -1)
    dispatch_once(&messageEditingCompactTrailingEdgeToButtonPadding_once, &__block_literal_global_537_0);
  return *(double *)&messageEditingCompactTrailingEdgeToButtonPadding_sBehavior;
}

void __64__CKUIBehavior_messageEditingCompactTrailingEdgeToButtonPadding__block_invoke()
{
  messageEditingCompactTrailingEdgeToButtonPadding_sBehavior = 0x4030000000000000;
}

- (double)messageEditingKeyboardToBalloonPreferredPadding
{
  if (messageEditingKeyboardToBalloonPreferredPadding_once != -1)
    dispatch_once(&messageEditingKeyboardToBalloonPreferredPadding_once, &__block_literal_global_538_0);
  return *(double *)&messageEditingKeyboardToBalloonPreferredPadding_sBehavior;
}

void __63__CKUIBehavior_messageEditingKeyboardToBalloonPreferredPadding__block_invoke()
{
  messageEditingKeyboardToBalloonPreferredPadding_sBehavior = 0x4034000000000000;
}

- (double)messageEditingKeyboardToBalloonMinimumPadding
{
  if (messageEditingKeyboardToBalloonMinimumPadding_once != -1)
    dispatch_once(&messageEditingKeyboardToBalloonMinimumPadding_once, &__block_literal_global_539_0);
  return *(double *)&messageEditingKeyboardToBalloonMinimumPadding_sBehavior;
}

void __61__CKUIBehavior_messageEditingKeyboardToBalloonMinimumPadding__block_invoke()
{
  messageEditingKeyboardToBalloonMinimumPadding_sBehavior = 0x4014000000000000;
}

- (double)messageEditingBalloonToNavBarMinimumPadding
{
  if (messageEditingBalloonToNavBarMinimumPadding_once != -1)
    dispatch_once(&messageEditingBalloonToNavBarMinimumPadding_once, &__block_literal_global_540);
  return *(double *)&messageEditingBalloonToNavBarMinimumPadding_sBehavior;
}

void __59__CKUIBehavior_messageEditingBalloonToNavBarMinimumPadding__block_invoke()
{
  messageEditingBalloonToNavBarMinimumPadding_sBehavior = 0x4014000000000000;
}

- (double)messageEditingAnimateInDuration
{
  if (messageEditingAnimateInDuration_once != -1)
    dispatch_once(&messageEditingAnimateInDuration_once, &__block_literal_global_541);
  return *(double *)&messageEditingAnimateInDuration_sBehavior;
}

void __47__CKUIBehavior_messageEditingAnimateInDuration__block_invoke()
{
  messageEditingAnimateInDuration_sBehavior = 0x3FE0000000000000;
}

- (double)messageEditingAnimateInDamping
{
  if (messageEditingAnimateInDamping_once != -1)
    dispatch_once(&messageEditingAnimateInDamping_once, &__block_literal_global_542);
  return *(double *)&messageEditingAnimateInDamping_sBehavior;
}

void __46__CKUIBehavior_messageEditingAnimateInDamping__block_invoke()
{
  messageEditingAnimateInDamping_sBehavior = 0x3FF0000000000000;
}

- (double)messageEditingAnimateOutDuration
{
  if (messageEditingAnimateOutDuration_once != -1)
    dispatch_once(&messageEditingAnimateOutDuration_once, &__block_literal_global_543);
  return *(double *)&messageEditingAnimateOutDuration_sBehavior;
}

void __48__CKUIBehavior_messageEditingAnimateOutDuration__block_invoke()
{
  messageEditingAnimateOutDuration_sBehavior = 0x3FE0000000000000;
}

- (double)messageEditingAnimateOutDamping
{
  if (messageEditingAnimateOutDamping_once != -1)
    dispatch_once(&messageEditingAnimateOutDamping_once, &__block_literal_global_544);
  return *(double *)&messageEditingAnimateOutDamping_sBehavior;
}

void __47__CKUIBehavior_messageEditingAnimateOutDamping__block_invoke()
{
  messageEditingAnimateOutDamping_sBehavior = 0x3FF0000000000000;
}

- (NSString)replyPreviewLocationIconName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replyPreviewLocationIconName_sContentSizeCategory_replyPreviewLocationIconName, (UIContentSizeCategory)v2)|| replyPreviewLocationIconName_sIsIncreaseContrastEnabled_replyPreviewLocationIconName != v3|| replyPreviewLocationIconName_sIsBoldTextEnabled_replyPreviewLocationIconName != IsBoldTextEnabled|| *(double *)&replyPreviewLocationIconName_sTextFontSize_replyPreviewLocationIconName != v5|| *(double *)&replyPreviewLocationIconName_sCustomTextFontSize_replyPreviewLocationIconName != v6|| (objc_msgSend((id)replyPreviewLocationIconName_sCustomTextFontName_replyPreviewLocationIconName, "isEqualToString:", v9, *(double *)&replyPreviewLocationIconName_sCustomTextFontSize_replyPreviewLocationIconName) & 1) == 0)
  {
    v10 = (void *)replyPreviewLocationIconName_sBehavior;
    replyPreviewLocationIconName_sBehavior = (uint64_t)CFSTR("mappin.circle.fill");

    objc_storeStrong((id *)&replyPreviewLocationIconName_sContentSizeCategory_replyPreviewLocationIconName, v2);
    replyPreviewLocationIconName_sIsIncreaseContrastEnabled_replyPreviewLocationIconName = v3;
    replyPreviewLocationIconName_sIsBoldTextEnabled_replyPreviewLocationIconName = IsBoldTextEnabled;
    replyPreviewLocationIconName_sTextFontSize_replyPreviewLocationIconName = *(_QWORD *)&v5;
    replyPreviewLocationIconName_sCustomTextFontSize_replyPreviewLocationIconName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&replyPreviewLocationIconName_sCustomTextFontName_replyPreviewLocationIconName, v8);
  }
  v11 = (NSString *)(id)replyPreviewLocationIconName_sBehavior;

  return v11;
}

- (NSString)replyPreviewContactIconName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replyPreviewContactIconName_sContentSizeCategory_replyPreviewContactIconName, (UIContentSizeCategory)v2)|| replyPreviewContactIconName_sIsIncreaseContrastEnabled_replyPreviewContactIconName != v3|| replyPreviewContactIconName_sIsBoldTextEnabled_replyPreviewContactIconName != IsBoldTextEnabled|| *(double *)&replyPreviewContactIconName_sTextFontSize_replyPreviewContactIconName != v5|| *(double *)&replyPreviewContactIconName_sCustomTextFontSize_replyPreviewContactIconName != v6|| (objc_msgSend((id)replyPreviewContactIconName_sCustomTextFontName_replyPreviewContactIconName, "isEqualToString:", v9, *(double *)&replyPreviewContactIconName_sCustomTextFontSize_replyPreviewContactIconName) & 1) == 0)
  {
    v10 = (void *)replyPreviewContactIconName_sBehavior;
    replyPreviewContactIconName_sBehavior = (uint64_t)CFSTR("person.crop.circle");

    objc_storeStrong((id *)&replyPreviewContactIconName_sContentSizeCategory_replyPreviewContactIconName, v2);
    replyPreviewContactIconName_sIsIncreaseContrastEnabled_replyPreviewContactIconName = v3;
    replyPreviewContactIconName_sIsBoldTextEnabled_replyPreviewContactIconName = IsBoldTextEnabled;
    replyPreviewContactIconName_sTextFontSize_replyPreviewContactIconName = *(_QWORD *)&v5;
    replyPreviewContactIconName_sCustomTextFontSize_replyPreviewContactIconName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&replyPreviewContactIconName_sCustomTextFontName_replyPreviewContactIconName, v8);
  }
  v11 = (NSString *)(id)replyPreviewContactIconName_sBehavior;

  return v11;
}

- (NSString)replyPreviewDocumentIconName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replyPreviewDocumentIconName_sContentSizeCategory_replyPreviewDocumentIconName, (UIContentSizeCategory)v2)|| replyPreviewDocumentIconName_sIsIncreaseContrastEnabled_replyPreviewDocumentIconName != v3|| replyPreviewDocumentIconName_sIsBoldTextEnabled_replyPreviewDocumentIconName != IsBoldTextEnabled|| *(double *)&replyPreviewDocumentIconName_sTextFontSize_replyPreviewDocumentIconName != v5|| *(double *)&replyPreviewDocumentIconName_sCustomTextFontSize_replyPreviewDocumentIconName != v6|| (objc_msgSend((id)replyPreviewDocumentIconName_sCustomTextFontName_replyPreviewDocumentIconName, "isEqualToString:", v9, *(double *)&replyPreviewDocumentIconName_sCustomTextFontSize_replyPreviewDocumentIconName) & 1) == 0)
  {
    v10 = (void *)replyPreviewDocumentIconName_sBehavior;
    replyPreviewDocumentIconName_sBehavior = (uint64_t)CFSTR("doc");

    objc_storeStrong((id *)&replyPreviewDocumentIconName_sContentSizeCategory_replyPreviewDocumentIconName, v2);
    replyPreviewDocumentIconName_sIsIncreaseContrastEnabled_replyPreviewDocumentIconName = v3;
    replyPreviewDocumentIconName_sIsBoldTextEnabled_replyPreviewDocumentIconName = IsBoldTextEnabled;
    replyPreviewDocumentIconName_sTextFontSize_replyPreviewDocumentIconName = *(_QWORD *)&v5;
    replyPreviewDocumentIconName_sCustomTextFontSize_replyPreviewDocumentIconName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&replyPreviewDocumentIconName_sCustomTextFontName_replyPreviewDocumentIconName, v8);
  }
  v11 = (NSString *)(id)replyPreviewDocumentIconName_sBehavior;

  return v11;
}

- (double)replyTranscriptBackgroundBlurRadius
{
  if (replyTranscriptBackgroundBlurRadius_once != -1)
    dispatch_once(&replyTranscriptBackgroundBlurRadius_once, &__block_literal_global_551);
  return *(double *)&replyTranscriptBackgroundBlurRadius_sBehavior;
}

void __51__CKUIBehavior_replyTranscriptBackgroundBlurRadius__block_invoke()
{
  replyTranscriptBackgroundBlurRadius_sBehavior = 0x401C000000000000;
}

- (BOOL)replyTranscriptBackgroundDoesSupportTransparentBlurVisualEffect
{
  if (replyTranscriptBackgroundDoesSupportTransparentBlurVisualEffect_once != -1)
    dispatch_once(&replyTranscriptBackgroundDoesSupportTransparentBlurVisualEffect_once, &__block_literal_global_552);
  return replyTranscriptBackgroundDoesSupportTransparentBlurVisualEffect_sBehavior;
}

void __79__CKUIBehavior_replyTranscriptBackgroundDoesSupportTransparentBlurVisualEffect__block_invoke()
{
  replyTranscriptBackgroundDoesSupportTransparentBlurVisualEffect_sBehavior = 1;
}

- (double)replyTranscriptBackgroundBlurAnimationTime
{
  if (replyTranscriptBackgroundBlurAnimationTime_once != -1)
    dispatch_once(&replyTranscriptBackgroundBlurAnimationTime_once, &__block_literal_global_553);
  return *(double *)&replyTranscriptBackgroundBlurAnimationTime_sBehavior;
}

void __58__CKUIBehavior_replyTranscriptBackgroundBlurAnimationTime__block_invoke()
{
  replyTranscriptBackgroundBlurAnimationTime_sBehavior = 0x3FD3333333333333;
}

- (double)replyTranscriptUpdateBannerAnimateInTime
{
  if (replyTranscriptUpdateBannerAnimateInTime_once != -1)
    dispatch_once(&replyTranscriptUpdateBannerAnimateInTime_once, &__block_literal_global_554);
  return *(double *)&replyTranscriptUpdateBannerAnimateInTime_sBehavior;
}

void __56__CKUIBehavior_replyTranscriptUpdateBannerAnimateInTime__block_invoke()
{
  replyTranscriptUpdateBannerAnimateInTime_sBehavior = 0x3FC999999999999ALL;
}

- (double)replyTranscriptUpdateBannerAnimateOutTime
{
  if (replyTranscriptUpdateBannerAnimateOutTime_once != -1)
    dispatch_once(&replyTranscriptUpdateBannerAnimateOutTime_once, &__block_literal_global_555);
  return *(double *)&replyTranscriptUpdateBannerAnimateOutTime_sBehavior;
}

void __57__CKUIBehavior_replyTranscriptUpdateBannerAnimateOutTime__block_invoke()
{
  replyTranscriptUpdateBannerAnimateOutTime_sBehavior = 0x3FB999999999999ALL;
}

- (UIFont)replyButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  UIFont *v18;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = (id *)&unk_1EE113000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replyButtonFont_sContentSizeCategory_replyButtonFont, (UIContentSizeCategory)v2)|| replyButtonFont_sIsIncreaseContrastEnabled_replyButtonFont != v3|| replyButtonFont_sIsBoldTextEnabled_replyButtonFont != IsBoldTextEnabled|| (v10 = replyButtonFont_sTextFontSize_replyButtonFont, *(double *)&replyButtonFont_sTextFontSize_replyButtonFont != v5)|| (v10 = replyButtonFont_sCustomTextFontSize_replyButtonFont, *(double *)&replyButtonFont_sCustomTextFontSize_replyButtonFont != v6)|| (objc_msgSend((id)replyButtonFont_sCustomTextFontName_replyButtonFont, "isEqualToString:", v9, *(double *)&replyButtonFont_sCustomTextFontSize_replyButtonFont) & 1) == 0)
  {
    v12 = *MEMORY[0x1E0CEB590];
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA5F8], "metricsForTextStyle:", v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v13, 18.0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "scaledFontForFont:", v15);
    v16 = objc_claimAutoreleasedReturnValue();

    v11 = (id *)&unk_1EE113000;
    v17 = (void *)replyButtonFont_sBehavior;
    replyButtonFont_sBehavior = v16;

    objc_storeStrong((id *)&replyButtonFont_sContentSizeCategory_replyButtonFont, v2);
    replyButtonFont_sIsIncreaseContrastEnabled_replyButtonFont = v3;
    replyButtonFont_sIsBoldTextEnabled_replyButtonFont = IsBoldTextEnabled;
    replyButtonFont_sTextFontSize_replyButtonFont = *(_QWORD *)&v5;
    replyButtonFont_sCustomTextFontSize_replyButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&replyButtonFont_sCustomTextFontName_replyButtonFont, v8);
  }
  v18 = (UIFont *)v11[175];

  return v18;
}

- (double)replyButtonBackgroundBlurRadius
{
  if (replyButtonBackgroundBlurRadius_once != -1)
    dispatch_once(&replyButtonBackgroundBlurRadius_once, &__block_literal_global_557);
  return *(double *)&replyButtonBackgroundBlurRadius_sBehavior;
}

void __47__CKUIBehavior_replyButtonBackgroundBlurRadius__block_invoke()
{
  replyButtonBackgroundBlurRadius_sBehavior = 0x4014000000000000;
}

- (CGPoint)replyButtonRelativePosition
{
  double v2;
  double v3;
  CGPoint result;

  if (replyButtonRelativePosition_once != -1)
    dispatch_once(&replyButtonRelativePosition_once, &__block_literal_global_558);
  v2 = *(double *)&replyButtonRelativePosition_sBehavior_0;
  v3 = *(double *)&replyButtonRelativePosition_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __43__CKUIBehavior_replyButtonRelativePosition__block_invoke()
{
  replyButtonRelativePosition_sBehavior_0 = 0x4018000000000000;
  replyButtonRelativePosition_sBehavior_1 = 0x402C000000000000;
}

- (double)replyButtonHorizontalOriginOffsetPercent
{
  if (replyButtonHorizontalOriginOffsetPercent_once != -1)
    dispatch_once(&replyButtonHorizontalOriginOffsetPercent_once, &__block_literal_global_559);
  return *(double *)&replyButtonHorizontalOriginOffsetPercent_sBehavior;
}

void __56__CKUIBehavior_replyButtonHorizontalOriginOffsetPercent__block_invoke()
{
  replyButtonHorizontalOriginOffsetPercent_sBehavior = 0x3FE3333333333333;
}

- (double)replyButtonVerticalOriginOffsetPercent
{
  if (replyButtonVerticalOriginOffsetPercent_once != -1)
    dispatch_once(&replyButtonVerticalOriginOffsetPercent_once, &__block_literal_global_560);
  return *(double *)&replyButtonVerticalOriginOffsetPercent_sBehavior;
}

void __54__CKUIBehavior_replyButtonVerticalOriginOffsetPercent__block_invoke()
{
  replyButtonVerticalOriginOffsetPercent_sBehavior = 0x3FC851EB851EB852;
}

- (double)replyButtonAnimationDuration
{
  if (replyButtonAnimationDuration_once != -1)
    dispatch_once(&replyButtonAnimationDuration_once, &__block_literal_global_561);
  return *(double *)&replyButtonAnimationDuration_sBehavior;
}

void __44__CKUIBehavior_replyButtonAnimationDuration__block_invoke()
{
  replyButtonAnimationDuration_sBehavior = 0x3FD6666666666666;
}

- (double)replyButtonBorderWidth
{
  if (replyButtonBorderWidth_once != -1)
    dispatch_once(&replyButtonBorderWidth_once, &__block_literal_global_562);
  return *(double *)&replyButtonBorderWidth_sBehavior;
}

void __38__CKUIBehavior_replyButtonBorderWidth__block_invoke()
{
  replyButtonBorderWidth_sBehavior = 0x3FE0000000000000;
}

- (double)replyButtonTouchScale
{
  if (replyButtonTouchScale_once != -1)
    dispatch_once(&replyButtonTouchScale_once, &__block_literal_global_563);
  return *(double *)&replyButtonTouchScale_sBehavior;
}

void __37__CKUIBehavior_replyButtonTouchScale__block_invoke()
{
  replyButtonTouchScale_sBehavior = 0x3FEB333333333333;
}

- (double)replyButtonTouchAlpha
{
  if (replyButtonTouchAlpha_once != -1)
    dispatch_once(&replyButtonTouchAlpha_once, &__block_literal_global_564);
  return *(double *)&replyButtonTouchAlpha_sBehavior;
}

void __37__CKUIBehavior_replyButtonTouchAlpha__block_invoke()
{
  replyButtonTouchAlpha_sBehavior = 0x3FD999999999999ALL;
}

- (double)replyButtonPadding
{
  if (replyButtonPadding_once != -1)
    dispatch_once(&replyButtonPadding_once, &__block_literal_global_565);
  return 0.0;
}

- (UIEdgeInsets)replyButtonEdgeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (replyButtonEdgeInsets_once != -1)
    dispatch_once(&replyButtonEdgeInsets_once, &__block_literal_global_566);
  v2 = *(double *)&replyButtonEdgeInsets_sBehavior_0;
  v3 = *(double *)&replyButtonEdgeInsets_sBehavior_1;
  v4 = *(double *)&replyButtonEdgeInsets_sBehavior_2;
  v5 = *(double *)&replyButtonEdgeInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __37__CKUIBehavior_replyButtonEdgeInsets__block_invoke()
{
  replyButtonEdgeInsets_sBehavior_0 = 0x4020000000000000;
  replyButtonEdgeInsets_sBehavior_1 = 0x402C000000000000;
  replyButtonEdgeInsets_sBehavior_2 = 0x4020000000000000;
  replyButtonEdgeInsets_sBehavior_3 = 0x402C000000000000;
}

- (double)replyEntryViewBackagroundAlpha
{
  if (replyEntryViewBackagroundAlpha_once != -1)
    dispatch_once(&replyEntryViewBackagroundAlpha_once, &__block_literal_global_567);
  return *(double *)&replyEntryViewBackagroundAlpha_sBehavior;
}

void __46__CKUIBehavior_replyEntryViewBackagroundAlpha__block_invoke()
{
  replyEntryViewBackagroundAlpha_sBehavior = 0x3FD0000000000000;
}

- (BOOL)replyShouldShowKeyboard
{
  if (replyShouldShowKeyboard_once != -1)
    dispatch_once(&replyShouldShowKeyboard_once, &__block_literal_global_568);
  return replyShouldShowKeyboard_sBehavior;
}

uint64_t __39__CKUIBehavior_replyShouldShowKeyboard__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMacCatalyst();
  replyShouldShowKeyboard_sBehavior = (_DWORD)result == 0;
  return result;
}

- (CGSize)endingReplyIndicatorSize
{
  double v2;
  double v3;
  CGSize result;

  if (endingReplyIndicatorSize_once != -1)
    dispatch_once(&endingReplyIndicatorSize_once, &__block_literal_global_569);
  v2 = *(double *)&endingReplyIndicatorSize_sBehavior_0;
  v3 = *(double *)&endingReplyIndicatorSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __40__CKUIBehavior_endingReplyIndicatorSize__block_invoke()
{
  endingReplyIndicatorSize_sBehavior_0 = 0x403A000000000000;
  endingReplyIndicatorSize_sBehavior_1 = 0x403A000000000000;
}

- (double)blurBoundOutsetPadding
{
  if (blurBoundOutsetPadding_once != -1)
    dispatch_once(&blurBoundOutsetPadding_once, &__block_literal_global_570);
  return *(double *)&blurBoundOutsetPadding_sBehavior;
}

void __38__CKUIBehavior_blurBoundOutsetPadding__block_invoke()
{
  blurBoundOutsetPadding_sBehavior = 0x4020000000000000;
}

- (double)initialReplyIndicatorBlurRadius
{
  if (initialReplyIndicatorBlurRadius_once != -1)
    dispatch_once(&initialReplyIndicatorBlurRadius_once, &__block_literal_global_571);
  return *(double *)&initialReplyIndicatorBlurRadius_sBehavior;
}

void __47__CKUIBehavior_initialReplyIndicatorBlurRadius__block_invoke()
{
  initialReplyIndicatorBlurRadius_sBehavior = 0x4012000000000000;
}

- (double)initialReplyIndicatorScale
{
  if (initialReplyIndicatorScale_once != -1)
    dispatch_once(&initialReplyIndicatorScale_once, &__block_literal_global_572);
  return *(double *)&initialReplyIndicatorScale_sBehavior;
}

void __42__CKUIBehavior_initialReplyIndicatorScale__block_invoke()
{
  initialReplyIndicatorScale_sBehavior = 0x3FD999999999999ALL;
}

- (double)finalReplyIndicatorScale
{
  if (finalReplyIndicatorScale_once != -1)
    dispatch_once(&finalReplyIndicatorScale_once, &__block_literal_global_573);
  return *(double *)&finalReplyIndicatorScale_sBehavior;
}

void __40__CKUIBehavior_finalReplyIndicatorScale__block_invoke()
{
  finalReplyIndicatorScale_sBehavior = 0x3FF0000000000000;
}

- (double)maxPulseReplyIndicatorScale
{
  if (maxPulseReplyIndicatorScale_once != -1)
    dispatch_once(&maxPulseReplyIndicatorScale_once, &__block_literal_global_574);
  return *(double *)&maxPulseReplyIndicatorScale_sBehavior;
}

void __43__CKUIBehavior_maxPulseReplyIndicatorScale__block_invoke()
{
  maxPulseReplyIndicatorScale_sBehavior = 0x3FF2666666666666;
}

- (double)replyToSelfButtonOffset
{
  if (replyToSelfButtonOffset_once != -1)
    dispatch_once(&replyToSelfButtonOffset_once, &__block_literal_global_575);
  return *(double *)&replyToSelfButtonOffset_sBehavior;
}

void __39__CKUIBehavior_replyToSelfButtonOffset__block_invoke()
{
  replyToSelfButtonOffset_sBehavior = 0x4028000000000000;
}

- (double)swipeToReplyConfirmThreshold
{
  if (swipeToReplyConfirmThreshold_once != -1)
    dispatch_once(&swipeToReplyConfirmThreshold_once, &__block_literal_global_576);
  return *(double *)&swipeToReplyConfirmThreshold_sBehavior;
}

void __44__CKUIBehavior_swipeToReplyConfirmThreshold__block_invoke()
{
  swipeToReplyConfirmThreshold_sBehavior = 0x4044000000000000;
}

- (double)swipeToReplyShowIndicatorThreshold
{
  if (swipeToReplyShowIndicatorThreshold_once != -1)
    dispatch_once(&swipeToReplyShowIndicatorThreshold_once, &__block_literal_global_577_0);
  return *(double *)&swipeToReplyShowIndicatorThreshold_sBehavior;
}

void __50__CKUIBehavior_swipeToReplyShowIndicatorThreshold__block_invoke()
{
  swipeToReplyShowIndicatorThreshold_sBehavior = 0x4036000000000000;
}

- (double)replyIndicatorPulseAnimationDuration
{
  if (replyIndicatorPulseAnimationDuration_once != -1)
    dispatch_once(&replyIndicatorPulseAnimationDuration_once, &__block_literal_global_578);
  return *(double *)&replyIndicatorPulseAnimationDuration_sBehavior;
}

void __52__CKUIBehavior_replyIndicatorPulseAnimationDuration__block_invoke()
{
  replyIndicatorPulseAnimationDuration_sBehavior = 0x3FD3333333333333;
}

- (double)replyIndicatorResetAnimationDuration
{
  if (replyIndicatorResetAnimationDuration_once != -1)
    dispatch_once(&replyIndicatorResetAnimationDuration_once, &__block_literal_global_579);
  return *(double *)&replyIndicatorResetAnimationDuration_sBehavior;
}

void __52__CKUIBehavior_replyIndicatorResetAnimationDuration__block_invoke()
{
  replyIndicatorResetAnimationDuration_sBehavior = 0x3FD999999999999ALL;
}

- (double)balloonResetAnimationDuration
{
  if (balloonResetAnimationDuration_once != -1)
    dispatch_once(&balloonResetAnimationDuration_once, &__block_literal_global_580);
  return *(double *)&balloonResetAnimationDuration_sBehavior;
}

void __45__CKUIBehavior_balloonResetAnimationDuration__block_invoke()
{
  balloonResetAnimationDuration_sBehavior = 0x3FD0000000000000;
}

- (double)catchUpButtonPadding
{
  if (catchUpButtonPadding_once != -1)
    dispatch_once(&catchUpButtonPadding_once, &__block_literal_global_581);
  return *(double *)&catchUpButtonPadding_sBehavior;
}

void __36__CKUIBehavior_catchUpButtonPadding__block_invoke()
{
  catchUpButtonPadding_sBehavior = 0x402C000000000000;
}

- (double)curveValueForSwipeWithVelocity:(CGPoint)a3 t:(double)a4
{
  double v4;

  cubicPoint(0.0, 1.0, 0.0, 1.5, 0.8, 1.0, 1.0, 0.0, a4);
  return v4;
}

- (UIColor)conversationListSIMLabelBackgroundColor
{
  if (conversationListSIMLabelBackgroundColor_once != -1)
    dispatch_once(&conversationListSIMLabelBackgroundColor_once, &__block_literal_global_582);
  return (UIColor *)(id)conversationListSIMLabelBackgroundColor_sBehavior;
}

void __55__CKUIBehavior_conversationListSIMLabelBackgroundColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "secondaryLabelColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)conversationListSIMLabelBackgroundColor_sBehavior;
  conversationListSIMLabelBackgroundColor_sBehavior = v0;

}

- (UIColor)conversationListSIMLabelTextColor
{
  if (conversationListSIMLabelTextColor_once != -1)
    dispatch_once(&conversationListSIMLabelTextColor_once, &__block_literal_global_583_0);
  return (UIColor *)(id)conversationListSIMLabelTextColor_sBehavior;
}

void __49__CKUIBehavior_conversationListSIMLabelTextColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemBackgroundColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)conversationListSIMLabelTextColor_sBehavior;
  conversationListSIMLabelTextColor_sBehavior = v0;

}

- (double)conversationListSIMLabelHeightTextSizeRatio
{
  if (conversationListSIMLabelHeightTextSizeRatio_once != -1)
    dispatch_once(&conversationListSIMLabelHeightTextSizeRatio_once, &__block_literal_global_584);
  return *(double *)&conversationListSIMLabelHeightTextSizeRatio_sBehavior;
}

void __59__CKUIBehavior_conversationListSIMLabelHeightTextSizeRatio__block_invoke()
{
  conversationListSIMLabelHeightTextSizeRatio_sBehavior = 0x3FF6000000000000;
}

- (double)conversationListSIMLabelBaseBuffer
{
  if (conversationListSIMLabelBaseBuffer_once != -1)
    dispatch_once(&conversationListSIMLabelBaseBuffer_once, &__block_literal_global_586);
  return *(double *)&conversationListSIMLabelBaseBuffer_sBehavior;
}

void __50__CKUIBehavior_conversationListSIMLabelBaseBuffer__block_invoke()
{
  conversationListSIMLabelBaseBuffer_sBehavior = 0x4018000000000000;
}

- (BOOL)hyphenatesTextContent
{
  if (hyphenatesTextContent_once != -1)
    dispatch_once(&hyphenatesTextContent_once, &__block_literal_global_588);
  return 0;
}

- (BOOL)shouldAdjustWidthForSendFailure
{
  if (shouldAdjustWidthForSendFailure_once != -1)
    dispatch_once(&shouldAdjustWidthForSendFailure_once, &__block_literal_global_589);
  return shouldAdjustWidthForSendFailure_sBehavior;
}

void __47__CKUIBehavior_shouldAdjustWidthForSendFailure__block_invoke()
{
  shouldAdjustWidthForSendFailure_sBehavior = 1;
}

- (BOOL)playsInlineVideo
{
  if (playsInlineVideo_once != -1)
    dispatch_once(&playsInlineVideo_once, &__block_literal_global_590);
  return playsInlineVideo_sBehavior;
}

void __32__CKUIBehavior_playsInlineVideo__block_invoke()
{
  playsInlineVideo_sBehavior = 1;
}

- (BOOL)showsBalloonChevron
{
  if (showsBalloonChevron_once != -1)
    dispatch_once(&showsBalloonChevron_once, &__block_literal_global_591);
  return showsBalloonChevron_sBehavior;
}

void __35__CKUIBehavior_showsBalloonChevron__block_invoke()
{
  showsBalloonChevron_sBehavior = 1;
}

- (BOOL)handlesBalloonViewTitleTapsSeparately
{
  if (handlesBalloonViewTitleTapsSeparately_once != -1)
    dispatch_once(&handlesBalloonViewTitleTapsSeparately_once, &__block_literal_global_592);
  return 0;
}

- (BOOL)showsPlaceCardForBalloonViewTitleTap
{
  if (showsPlaceCardForBalloonViewTitleTap_once != -1)
    dispatch_once(&showsPlaceCardForBalloonViewTitleTap_once, &__block_literal_global_593);
  return 0;
}

- (BOOL)opensLocationsInMapsApp
{
  if (opensLocationsInMapsApp_once != -1)
    dispatch_once(&opensLocationsInMapsApp_once, &__block_literal_global_594);
  return 0;
}

- (int64_t)maxNumExtensionRemoteViewControllers
{
  if (maxNumExtensionRemoteViewControllers_once != -1)
    dispatch_once(&maxNumExtensionRemoteViewControllers_once, &__block_literal_global_597);
  if (maxNumExtensionRemoteViewControllers_sBehavior)
    return 5;
  else
    return 0;
}

void __52__CKUIBehavior_maxNumExtensionRemoteViewControllers__block_invoke()
{
  maxNumExtensionRemoteViewControllers_sBehavior = 1;
}

- (double)skinnyBalloonWidthDifference
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __44__CKUIBehavior_skinnyBalloonWidthDifference__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (skinnyBalloonWidthDifference_once != -1)
    dispatch_once(&skinnyBalloonWidthDifference_once, block);
  return *(double *)&skinnyBalloonWidthDifference_sBehavior;
}

double __44__CKUIBehavior_skinnyBalloonWidthDifference__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "skinnyBalloonMaskSize");
  v3 = v2;
  objc_msgSend(*(id *)(a1 + 32), "balloonMaskSize");
  result = v3 - v4;
  skinnyBalloonWidthDifference_sBehavior = *(_QWORD *)&result;
  return result;
}

- (CGSize)taillessBalloonMaskSize
{
  double v2;
  double v3;
  _QWORD block[5];
  CGSize result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_taillessBalloonMaskSize__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (taillessBalloonMaskSize_once != -1)
    dispatch_once(&taillessBalloonMaskSize_once, block);
  v2 = *(double *)&taillessBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&taillessBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

uint64_t __39__CKUIBehavior_taillessBalloonMaskSize__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "balloonMaskSize");
  taillessBalloonMaskSize_sBehavior_0 = v2;
  taillessBalloonMaskSize_sBehavior_1 = v3;
  return result;
}

- (CGSize)taillessMultilineBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (taillessMultilineBalloonMaskSize_once != -1)
    dispatch_once(&taillessMultilineBalloonMaskSize_once, &__block_literal_global_601);
  v2 = *(double *)&taillessMultilineBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&taillessMultilineBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __48__CKUIBehavior_taillessMultilineBalloonMaskSize__block_invoke()
{
  taillessMultilineBalloonMaskSize_sBehavior_0 = 0x404C000000000000;
  taillessMultilineBalloonMaskSize_sBehavior_1 = 0x4042800000000000;
}

- (CGSize)skinnyBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (skinnyBalloonMaskSize_once != -1)
    dispatch_once(&skinnyBalloonMaskSize_once, &__block_literal_global_602);
  v2 = *(double *)&skinnyBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&skinnyBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __37__CKUIBehavior_skinnyBalloonMaskSize__block_invoke()
{
  skinnyBalloonMaskSize_sBehavior_0 = 0x4048000000000000;
  skinnyBalloonMaskSize_sBehavior_1 = 0x4041800000000000;
}

- (CGSize)taillessSkinnyBalloonMaskSize
{
  double v2;
  double v3;
  _QWORD block[5];
  CGSize result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __45__CKUIBehavior_taillessSkinnyBalloonMaskSize__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (taillessSkinnyBalloonMaskSize_once != -1)
    dispatch_once(&taillessSkinnyBalloonMaskSize_once, block);
  v2 = *(double *)&taillessSkinnyBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&taillessSkinnyBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

uint64_t __45__CKUIBehavior_taillessSkinnyBalloonMaskSize__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "skinnyBalloonMaskSize");
  taillessSkinnyBalloonMaskSize_sBehavior_0 = v2;
  taillessSkinnyBalloonMaskSize_sBehavior_1 = v3;
  return result;
}

- (CGSize)multilineBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (multilineBalloonMaskSize_once != -1)
    dispatch_once(&multilineBalloonMaskSize_once, &__block_literal_global_603);
  v2 = *(double *)&multilineBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&multilineBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __40__CKUIBehavior_multilineBalloonMaskSize__block_invoke()
{
  multilineBalloonMaskSize_sBehavior_0 = 0x404C000000000000;
  multilineBalloonMaskSize_sBehavior_1 = 0x4042800000000000;
}

- (CGSize)replyBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (replyBalloonMaskSize_once != -1)
    dispatch_once(&replyBalloonMaskSize_once, &__block_literal_global_604);
  v2 = *(double *)&replyBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&replyBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __36__CKUIBehavior_replyBalloonMaskSize__block_invoke()
{
  replyBalloonMaskSize_sBehavior_0 = 0x4046000000000000;
  replyBalloonMaskSize_sBehavior_1 = 0x403A000000000000;
}

- (CGSize)replySkinnyBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (replySkinnyBalloonMaskSize_once != -1)
    dispatch_once(&replySkinnyBalloonMaskSize_once, &__block_literal_global_605);
  v2 = *(double *)&replySkinnyBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&replySkinnyBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __42__CKUIBehavior_replySkinnyBalloonMaskSize__block_invoke()
{
  replySkinnyBalloonMaskSize_sBehavior_0 = 0x4042800000000000;
  replySkinnyBalloonMaskSize_sBehavior_1 = 0x403A000000000000;
}

- (CGSize)replyMultilineBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (replyMultilineBalloonMaskSize_once != -1)
    dispatch_once(&replyMultilineBalloonMaskSize_once, &__block_literal_global_606);
  v2 = *(double *)&replyMultilineBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&replyMultilineBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __45__CKUIBehavior_replyMultilineBalloonMaskSize__block_invoke()
{
  replyMultilineBalloonMaskSize_sBehavior_0 = 0x4046000000000000;
  replyMultilineBalloonMaskSize_sBehavior_1 = 0x403C000000000000;
}

- (CGSize)replyDeleteBalloonMaskSize
{
  double v2;
  double v3;
  CGSize result;

  if (replyDeleteBalloonMaskSize_once != -1)
    dispatch_once(&replyDeleteBalloonMaskSize_once, &__block_literal_global_607);
  v2 = *(double *)&replyDeleteBalloonMaskSize_sBehavior_0;
  v3 = *(double *)&replyDeleteBalloonMaskSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __42__CKUIBehavior_replyDeleteBalloonMaskSize__block_invoke()
{
  replyDeleteBalloonMaskSize_sBehavior_0 = 0x4044000000000000;
  replyDeleteBalloonMaskSize_sBehavior_1 = 0x403A000000000000;
}

- (double)entryViewTaillessBalloonCornerRadius
{
  if (entryViewTaillessBalloonCornerRadius_once != -1)
    dispatch_once(&entryViewTaillessBalloonCornerRadius_once, &__block_literal_global_608);
  return *(double *)&entryViewTaillessBalloonCornerRadius_sBehavior;
}

void __52__CKUIBehavior_entryViewTaillessBalloonCornerRadius__block_invoke()
{
  entryViewTaillessBalloonCornerRadius_sBehavior = 0x4020000000000000;
}

- (double)entryViewTaillessBalloonMaskMinHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __53__CKUIBehavior_entryViewTaillessBalloonMaskMinHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewTaillessBalloonMaskMinHeight_once != -1)
    dispatch_once(&entryViewTaillessBalloonMaskMinHeight_once, block);
  return *(double *)&entryViewTaillessBalloonMaskMinHeight_sBehavior;
}

double __53__CKUIBehavior_entryViewTaillessBalloonMaskMinHeight__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "entryViewTaillessBalloonCornerRadius");
  result = v1 + v1;
  entryViewTaillessBalloonMaskMinHeight_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)entryViewTaillessBalloonMaskRightImageSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __61__CKUIBehavior_entryViewTaillessBalloonMaskRightImageSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewTaillessBalloonMaskRightImageSpacing_once != -1)
    dispatch_once(&entryViewTaillessBalloonMaskRightImageSpacing_once, block);
  return *(double *)&entryViewTaillessBalloonMaskRightImageSpacing_sBehavior;
}

double __61__CKUIBehavior_entryViewTaillessBalloonMaskRightImageSpacing__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "entryViewTaillessBalloonMaskMinHeight");
  result = round(v1 * 0.166666667);
  entryViewTaillessBalloonMaskRightImageSpacing_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)extensionIconBadgePaddingAroundBalloon
{
  if (extensionIconBadgePaddingAroundBalloon_once != -1)
    dispatch_once(&extensionIconBadgePaddingAroundBalloon_once, &__block_literal_global_609);
  return *(double *)&extensionIconBadgePaddingAroundBalloon_sBehavior;
}

void __54__CKUIBehavior_extensionIconBadgePaddingAroundBalloon__block_invoke()
{
  extensionIconBadgePaddingAroundBalloon_sBehavior = 0x4018000000000000;
}

- (CGRect)extensionIconBadgeRectForOrientation:(char)a3
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGRect result;

  v4 = 0.0;
  if (a3 == 2)
  {
    -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
    v4 = v5 + 0.0;
  }
  -[CKUIBehavior iMessageAppIconSize](self, "iMessageAppIconSize");
  v7 = v6;
  v9 = v8;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "extensionIconBadgePaddingAroundBalloon");
  v12 = v11;

  v13 = v4 + v12;
  v14 = v12;
  v15 = v7;
  v16 = v9;
  result.size.height = v16;
  result.size.width = v15;
  result.origin.y = v14;
  result.origin.x = v13;
  return result;
}

- (CGSize)minimumSizeThatFitsExtensionIconBadge:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  uint64_t v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void *v16;
  double v17;
  double v18;
  double MaxY;
  double v20;
  double v21;
  double v22;
  double v23;
  CGSize result;
  CGRect v25;
  CGRect v26;

  v3 = a3;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v3)
    v7 = 0;
  else
    v7 = 2;
  objc_msgSend(v5, "extensionIconBadgeRectForOrientation:", v7);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "extensionIconBadgePaddingAroundBalloon");
  v18 = v17;

  v25.origin.x = v9;
  v25.origin.y = v11;
  v25.size.width = v13;
  v25.size.height = v15;
  MaxY = CGRectGetMaxY(v25);
  v26.origin.x = v9;
  v26.origin.y = v11;
  v26.size.width = v13;
  v26.size.height = v15;
  v20 = v18 + CGRectGetMaxX(v26);
  if (v3)
  {
    -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
    v20 = v20 + v21;
  }
  v22 = v18 + MaxY;
  v23 = v20;
  result.height = v22;
  result.width = v23;
  return result;
}

- (UIEdgeInsets)extensionBalloonContentInsetsForOrientation:(char)a3
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  UIEdgeInsets result;

  if (a3 == 2)
  {
    -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
    v7 = -v6;
    v5 = 0.0;
    v4 = 0.0;
  }
  else
  {
    if (a3)
    {
      v5 = 0.0;
      v4 = 0.0;
    }
    else
    {
      -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
      v4 = -v3;
      v5 = 0.0;
    }
    v7 = 0.0;
  }
  v8 = 0.0;
  result.right = v7;
  result.bottom = v8;
  result.left = v4;
  result.top = v5;
  return result;
}

- (double)extensionBalloonMaximumHeight
{
  return 300.0;
}

- (double)extraTallExtensionBalloonMaximumHeight
{
  return 600.0;
}

- (double)suggestedActionsMenuAdditionalHeightWithChatBotActionButton:(id)a3
{
  id v3;
  double v4;
  double v5;
  double v6;
  double result;

  v3 = a3;
  objc_msgSend(v3, "bounds");
  objc_msgSend(v3, "sizeThatFits:", v4, 1.79769313e308);
  v6 = v5;

  result = v6 + 13.0 + 5.0;
  if (result < 52.0)
    return 52.0;
  return result;
}

- (UIColor)defaultRichCardChinColor
{
  return (UIColor *)objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.91372549, 0.909803922, 0.917647059, 1.0);
}

- (CGSize)skinnyBalloonMaskSizeWithTailShape:(char)a3
{
  double v3;
  double v4;
  CGSize result;

  if (a3 == 2)
    goto LABEL_5;
  if (a3 == 1)
  {
    -[CKUIBehavior skinnyBalloonMaskSize](self, "skinnyBalloonMaskSize");
    goto LABEL_7;
  }
  if (a3)
  {
LABEL_5:
    v3 = *MEMORY[0x1E0C9D820];
    v4 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  }
  else
  {
    -[CKUIBehavior taillessSkinnyBalloonMaskSize](self, "taillessSkinnyBalloonMaskSize");
  }
LABEL_7:
  result.height = v4;
  result.width = v3;
  return result;
}

- (CGSize)roundBalloonMaskSizeWithTailShape:(char)a3
{
  double v3;
  double v4;
  CGSize result;

  if (a3 == 2)
  {
    v3 = 36.0;
    v4 = 36.0;
  }
  else
  {
    v3 = *MEMORY[0x1E0C9D820];
    v4 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  }
  result.height = v4;
  result.width = v3;
  return result;
}

- (CGSize)replyBalloonMaskSizeWithTailShape:(char)a3 isMultiline:(BOOL)a4
{
  double v4;
  double v5;
  CGSize result;

  if (a3 >= 2)
  {
    if (a3 == 2)
    {
      v4 = *MEMORY[0x1E0C9D820];
      v5 = *(double *)(MEMORY[0x1E0C9D820] + 8);
    }
  }
  else if (a4)
  {
    -[CKUIBehavior replyMultilineBalloonMaskSize](self, "replyMultilineBalloonMaskSize");
  }
  else
  {
    -[CKUIBehavior replyBalloonMaskSize](self, "replyBalloonMaskSize");
  }
  result.height = v5;
  result.width = v4;
  return result;
}

- (CGSize)skinnyReplyBalloonMaskSizeWithTailShape:(char)a3
{
  double v3;
  double v4;
  CGSize result;

  if (a3 >= 2)
  {
    if (a3 == 2)
    {
      v3 = *MEMORY[0x1E0C9D820];
      v4 = *(double *)(MEMORY[0x1E0C9D820] + 8);
    }
  }
  else
  {
    -[CKUIBehavior replySkinnyBalloonMaskSize](self, "replySkinnyBalloonMaskSize");
  }
  result.height = v4;
  result.width = v3;
  return result;
}

- (CGSize)deletedReplyBalloonMaskSizeWithTailShape:(char)a3
{
  double v3;
  double v4;
  CGSize result;

  if (a3 >= 2)
  {
    if (a3 == 2)
    {
      v3 = *MEMORY[0x1E0C9D820];
      v4 = *(double *)(MEMORY[0x1E0C9D820] + 8);
    }
  }
  else
  {
    -[CKUIBehavior replyDeleteBalloonMaskSize](self, "replyDeleteBalloonMaskSize");
  }
  result.height = v4;
  result.width = v3;
  return result;
}

- (CGSize)balloonMaskSizeWithBalloonDescriptor:(CKBalloonDescriptor_t *)a3
{
  char var10;
  _BOOL4 var12;
  double v5;
  double v6;
  CGSize result;

  var10 = a3->var10;
  if (var10)
    var10 = a3->var1;
  var12 = a3->var12;
  switch(a3->var0)
  {
    case 0:
      -[CKUIBehavior balloonMaskSizeWithTailShape:isMultiline:](self, "balloonMaskSizeWithTailShape:isMultiline:", var10, var12);
      break;
    case 1:
      -[CKUIBehavior skinnyBalloonMaskSizeWithTailShape:](self, "skinnyBalloonMaskSizeWithTailShape:", var10);
      break;
    case 2:
      -[CKUIBehavior roundBalloonMaskSizeWithTailShape:](self, "roundBalloonMaskSizeWithTailShape:", var10);
      break;
    case 3:
      -[CKUIBehavior replyBalloonMaskSizeWithTailShape:isMultiline:](self, "replyBalloonMaskSizeWithTailShape:isMultiline:", var10, var12);
      break;
    case 4:
      -[CKUIBehavior skinnyReplyBalloonMaskSizeWithTailShape:](self, "skinnyReplyBalloonMaskSizeWithTailShape:", var10);
      break;
    case 5:
      -[CKUIBehavior deletedReplyBalloonMaskSizeWithTailShape:](self, "deletedReplyBalloonMaskSizeWithTailShape:", var10);
      break;
    default:
      v5 = *MEMORY[0x1E0C9D820];
      v6 = *(double *)(MEMORY[0x1E0C9D820] + 8);
      break;
  }
  result.height = v6;
  result.width = v5;
  return result;
}

- (double)textBalloonMinHeight
{
  NSString *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  uint64_t v20;
  objc_class *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  BOOL v27;
  NSString *obj;

  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v10 = &hyphenatesTextContent_once;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)textBalloonMinHeight_sContentSizeCategory_textBalloonMinHeight, v3)|| textBalloonMinHeight_sIsBoldTextEnabled_textBalloonMinHeight != IsBoldTextEnabled|| (*(double *)&textBalloonMinHeight_sTextFontSize_textBalloonMinHeight == v5? (v27 = *(double *)&textBalloonMinHeight_sCustomTextFontSize_textBalloonMinHeight == v6): (v27 = 0), !v27|| (objc_msgSend((id)textBalloonMinHeight_sCustomTextFontName_textBalloonMinHeight, "isEqualToString:", v9, *(double *)&textBalloonMinHeight_sTextFontSize_textBalloonMinHeight, *(double *)&textBalloonMinHeight_sCustomTextFontSize_textBalloonMinHeight) & 1) == 0))
  {
    obj = v3;
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3778]), "initWithString:attributes:", CFSTR("A"), 0);
    v12 = objc_msgSend(v11, "length");
    v13 = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior balloonTextFont](self, "balloonTextFont");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addAttribute:value:range:", v13, v14, 0, v12);

    v15 = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    v18 = IsBoldTextEnabled;
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v12;
    v10 = &hyphenatesTextContent_once;
    objc_msgSend(v11, "addAttribute:value:range:", v15, v19, 0, v20);

    v21 = (objc_class *)objc_opt_class();
    CKBalloonViewForClass(v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "setHasTail:", 1);
    objc_msgSend(v22, "setAttributedText:", v11);
    objc_msgSend(v22, "prepareForDisplayIfNeeded");
    objc_msgSend(v22, "sizeThatFits:textAlignmentInsets:", 0, 1.79769313e308, 1.79769313e308);
    v24 = v23 + 1.0;

    v3 = obj;
    textBalloonMinHeight_sBehavior = *(_QWORD *)&v24;
    objc_storeStrong((id *)&textBalloonMinHeight_sContentSizeCategory_textBalloonMinHeight, obj);
    textBalloonMinHeight_sIsBoldTextEnabled_textBalloonMinHeight = v18;
    textBalloonMinHeight_sTextFontSize_textBalloonMinHeight = *(_QWORD *)&v5;
    textBalloonMinHeight_sCustomTextFontSize_textBalloonMinHeight = *(_QWORD *)&v6;
    objc_storeStrong((id *)&textBalloonMinHeight_sCustomTextFontName_textBalloonMinHeight, v8);
  }
  v25 = *((double *)v10 + 151);

  return v25;
}

- (double)textReplyPreviewBalloonMinHeight
{
  NSString *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  uint64_t v20;
  objc_class *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  BOOL v27;
  NSString *obj;

  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v10 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)textReplyPreviewBalloonMinHeight_sContentSizeCategory_textReplyPreviewBalloonMinHeight, v3)|| textReplyPreviewBalloonMinHeight_sIsBoldTextEnabled_textReplyPreviewBalloonMinHeight != IsBoldTextEnabled|| (*(double *)&textReplyPreviewBalloonMinHeight_sTextFontSize_textReplyPreviewBalloonMinHeight == v5? (v27 = *(double *)&textReplyPreviewBalloonMinHeight_sCustomTextFontSize_textReplyPreviewBalloonMinHeight == v6): (v27 = 0), !v27|| (objc_msgSend((id)textReplyPreviewBalloonMinHeight_sCustomTextFontName_textReplyPreviewBalloonMinHeight, "isEqualToString:", v9, *(double *)&textReplyPreviewBalloonMinHeight_sTextFontSize_textReplyPreviewBalloonMinHeight, *(double *)&textReplyPreviewBalloonMinHeight_sCustomTextFontSize_textReplyPreviewBalloonMinHeight) & 1) == 0))
  {
    obj = v3;
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3778]), "initWithString:attributes:", CFSTR("A"), 0);
    v12 = objc_msgSend(v11, "length");
    v13 = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior replyBalloonTextFont](self, "replyBalloonTextFont");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addAttribute:value:range:", v13, v14, 0, v12);

    v15 = *MEMORY[0x1E0DC1140];
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "theme");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transcriptTextColor");
    v18 = IsBoldTextEnabled;
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v12;
    v10 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    objc_msgSend(v11, "addAttribute:value:range:", v15, v19, 0, v20);

    v21 = (objc_class *)objc_opt_class();
    CKBalloonViewForClass(v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "setHasTail:", 1);
    objc_msgSend(v22, "setAttributedText:", v11);
    objc_msgSend(v22, "prepareForDisplayIfNeeded");
    objc_msgSend(v22, "sizeThatFits:textAlignmentInsets:", 0, 1.79769313e308, 1.79769313e308);
    v24 = v23 + 1.0;

    v3 = obj;
    textReplyPreviewBalloonMinHeight_sBehavior = *(_QWORD *)&v24;
    objc_storeStrong((id *)&textReplyPreviewBalloonMinHeight_sContentSizeCategory_textReplyPreviewBalloonMinHeight, obj);
    textReplyPreviewBalloonMinHeight_sIsBoldTextEnabled_textReplyPreviewBalloonMinHeight = v18;
    textReplyPreviewBalloonMinHeight_sTextFontSize_textReplyPreviewBalloonMinHeight = *(_QWORD *)&v5;
    textReplyPreviewBalloonMinHeight_sCustomTextFontSize_textReplyPreviewBalloonMinHeight = *(_QWORD *)&v6;
    objc_storeStrong((id *)&textReplyPreviewBalloonMinHeight_sCustomTextFontName_textReplyPreviewBalloonMinHeight, v8);
  }
  v25 = *((double *)v10 + 167);

  return v25;
}

- (UIEdgeInsets)taillessBalloonMaskAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_taillessBalloonMaskAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (taillessBalloonMaskAlignmentRectInsets_once != -1)
    dispatch_once(&taillessBalloonMaskAlignmentRectInsets_once, block);
  v2 = *(double *)&taillessBalloonMaskAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&taillessBalloonMaskAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&taillessBalloonMaskAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&taillessBalloonMaskAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

uint64_t __54__CKUIBehavior_taillessBalloonMaskAlignmentRectInsets__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "balloonMaskAlignmentRectInsets");
  taillessBalloonMaskAlignmentRectInsets_sBehavior_0 = v2;
  taillessBalloonMaskAlignmentRectInsets_sBehavior_1 = v3;
  taillessBalloonMaskAlignmentRectInsets_sBehavior_2 = v4;
  taillessBalloonMaskAlignmentRectInsets_sBehavior_3 = v5;
  return result;
}

- (UIEdgeInsets)bigEmojiBalloonMaskAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_bigEmojiBalloonMaskAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (bigEmojiBalloonMaskAlignmentRectInsets_once != -1)
    dispatch_once(&bigEmojiBalloonMaskAlignmentRectInsets_once, block);
  v2 = *(double *)&bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

uint64_t __54__CKUIBehavior_bigEmojiBalloonMaskAlignmentRectInsets__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "balloonMaskAlignmentRectInsets");
  bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_0 = v2;
  bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_1 = v3;
  bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_2 = v4;
  bigEmojiBalloonMaskAlignmentRectInsets_sBehavior_3 = v5;
  return result;
}

- (UIEdgeInsets)attachmentBalloonAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __52__CKUIBehavior_attachmentBalloonAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (attachmentBalloonAlignmentRectInsets_once != -1)
    dispatch_once(&attachmentBalloonAlignmentRectInsets_once, block);
  v2 = *(double *)&attachmentBalloonAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&attachmentBalloonAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&attachmentBalloonAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&attachmentBalloonAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

uint64_t __52__CKUIBehavior_attachmentBalloonAlignmentRectInsets__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "balloonMaskAlignmentRectInsets");
  attachmentBalloonAlignmentRectInsets_sBehavior_0 = v2;
  attachmentBalloonAlignmentRectInsets_sBehavior_1 = v3;
  attachmentBalloonAlignmentRectInsets_sBehavior_2 = v4;
  attachmentBalloonAlignmentRectInsets_sBehavior_3 = v5;
  return result;
}

- (UIEdgeInsets)taillessAttachmentBalloonAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __60__CKUIBehavior_taillessAttachmentBalloonAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (taillessAttachmentBalloonAlignmentRectInsets_once != -1)
    dispatch_once(&taillessAttachmentBalloonAlignmentRectInsets_once, block);
  v2 = *(double *)&taillessAttachmentBalloonAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&taillessAttachmentBalloonAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&taillessAttachmentBalloonAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&taillessAttachmentBalloonAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

uint64_t __60__CKUIBehavior_taillessAttachmentBalloonAlignmentRectInsets__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "attachmentBalloonAlignmentRectInsets");
  taillessAttachmentBalloonAlignmentRectInsets_sBehavior_0 = v2;
  taillessAttachmentBalloonAlignmentRectInsets_sBehavior_1 = v3;
  taillessAttachmentBalloonAlignmentRectInsets_sBehavior_2 = v4;
  taillessAttachmentBalloonAlignmentRectInsets_sBehavior_3 = v5;
  return result;
}

- (UIEdgeInsets)bigEmojiAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __43__CKUIBehavior_bigEmojiAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (bigEmojiAlignmentRectInsets_once != -1)
    dispatch_once(&bigEmojiAlignmentRectInsets_once, block);
  v2 = *(double *)&bigEmojiAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&bigEmojiAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&bigEmojiAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&bigEmojiAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

uint64_t __43__CKUIBehavior_bigEmojiAlignmentRectInsets__block_invoke(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 8);
  v2 = *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 24);
  result = objc_msgSend(*(id *)(a1 + 32), "bigEmojiBalloonMaskAlignmentRectInsets");
  bigEmojiAlignmentRectInsets_sBehavior_0 = v4;
  bigEmojiAlignmentRectInsets_sBehavior_1 = v1;
  bigEmojiAlignmentRectInsets_sBehavior_2 = v5;
  bigEmojiAlignmentRectInsets_sBehavior_3 = v2;
  return result;
}

- (UIEdgeInsets)textReplyPreviewBalloonAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __58__CKUIBehavior_textReplyPreviewBalloonAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (textReplyPreviewBalloonAlignmentRectInsets_once != -1)
    dispatch_once(&textReplyPreviewBalloonAlignmentRectInsets_once, block);
  v2 = *(double *)&textReplyPreviewBalloonAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&textReplyPreviewBalloonAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&textReplyPreviewBalloonAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&textReplyPreviewBalloonAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __58__CKUIBehavior_textReplyPreviewBalloonAlignmentRectInsets__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v2 = v1;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v3 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  v4 = 1.0;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v3 = 1.0;
  v5 = ceil(v3 * 6.0) / v3;
  v6 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v6 = 1.0;
  v7 = ceil(v6 * 11.0) / v6;
  v8 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v8 = 1.0;
  v9 = ceil(v8 * 6.0) / v8;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 != 0.0)
    v4 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  textReplyPreviewBalloonAlignmentRectInsets_sBehavior_0 = *(_QWORD *)&v5;
  textReplyPreviewBalloonAlignmentRectInsets_sBehavior_1 = *(_QWORD *)&v7;
  textReplyPreviewBalloonAlignmentRectInsets_sBehavior_2 = *(_QWORD *)&v9;
  *(double *)&textReplyPreviewBalloonAlignmentRectInsets_sBehavior_3 = ceil((v2 + 11.0) * v4) / v4;
}

- (UIEdgeInsets)attachmentReplyPreviewBalloonAlignmentRectInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __64__CKUIBehavior_attachmentReplyPreviewBalloonAlignmentRectInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (attachmentReplyPreviewBalloonAlignmentRectInsets_once != -1)
    dispatch_once(&attachmentReplyPreviewBalloonAlignmentRectInsets_once, block);
  v2 = *(double *)&attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_0;
  v3 = *(double *)&attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_1;
  v4 = *(double *)&attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_2;
  v5 = *(double *)&attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

double __64__CKUIBehavior_attachmentReplyPreviewBalloonAlignmentRectInsets__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v2 = v1;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v3 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  v4 = 1.0;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v3 = 1.0;
  v5 = ceil(v3 * 6.0) / v3;
  v6 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v6 = 1.0;
  v7 = ceil(v6 * 8.0) / v6;
  v8 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v8 = 1.0;
  v9 = ceil(v8 * 6.0) / v8;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 != 0.0)
    v4 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  result = ceil((v2 + 7.0) * v4) / v4;
  attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_0 = *(_QWORD *)&v5;
  attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_1 = *(_QWORD *)&v7;
  attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_2 = *(_QWORD *)&v9;
  attachmentReplyPreviewBalloonAlignmentRectInsets_sBehavior_3 = *(_QWORD *)&result;
  return result;
}

- (UIEdgeInsets)audioReplyPreviewBalloonAlignmentInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (audioReplyPreviewBalloonAlignmentInsets_once != -1)
    dispatch_once(&audioReplyPreviewBalloonAlignmentInsets_once, &__block_literal_global_615);
  v2 = *(double *)&audioReplyPreviewBalloonAlignmentInsets_sBehavior_0;
  v3 = *(double *)&audioReplyPreviewBalloonAlignmentInsets_sBehavior_1;
  v4 = *(double *)&audioReplyPreviewBalloonAlignmentInsets_sBehavior_2;
  v5 = *(double *)&audioReplyPreviewBalloonAlignmentInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __55__CKUIBehavior_audioReplyPreviewBalloonAlignmentInsets__block_invoke()
{
  audioReplyPreviewBalloonAlignmentInsets_sBehavior_0 = 0x401C000000000000;
  audioReplyPreviewBalloonAlignmentInsets_sBehavior_1 = 0x4008000000000000;
  audioReplyPreviewBalloonAlignmentInsets_sBehavior_2 = 0x4018000000000000;
  audioReplyPreviewBalloonAlignmentInsets_sBehavior_3 = 0x4000000000000000;
}

- (double)audioReplyPreviewBalloonInset
{
  if (audioReplyPreviewBalloonInset_once != -1)
    dispatch_once(&audioReplyPreviewBalloonInset_once, &__block_literal_global_616);
  return *(double *)&audioReplyPreviewBalloonInset_sBehavior;
}

void __45__CKUIBehavior_audioReplyPreviewBalloonInset__block_invoke()
{
  audioReplyPreviewBalloonInset_sBehavior = 0x4022000000000000;
}

- (double)textAlignmentRectInsetsScaleFactor
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  _BOOL4 v10;
  double v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)textAlignmentRectInsetsScaleFactor_sContentSizeCategory_textAlignmentRectInsetsScaleFactor, (UIContentSizeCategory)v3)|| textAlignmentRectInsetsScaleFactor_sIsBoldTextEnabled_textAlignmentRectInsetsScaleFactor != IsBoldTextEnabled|| (*(double *)&textAlignmentRectInsetsScaleFactor_sTextFontSize_textAlignmentRectInsetsScaleFactor == v5? (v14 = *(double *)&textAlignmentRectInsetsScaleFactor_sCustomTextFontSize_textAlignmentRectInsetsScaleFactor == v6): (v14 = 0), !v14|| (objc_msgSend((id)textAlignmentRectInsetsScaleFactor_sCustomTextFontName_textAlignmentRectInsetsScaleFactor, "isEqualToString:", v9, *(double *)&textAlignmentRectInsetsScaleFactor_sTextFontSize_textAlignmentRectInsetsScaleFactor, *(double *)&textAlignmentRectInsetsScaleFactor_sCustomTextFontSize_textAlignmentRectInsetsScaleFactor) & 1) == 0))
  {
    v10 = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    v11 = 1.6;
    if (!v10)
      v11 = 1.0;
    textAlignmentRectInsetsScaleFactor_sBehavior = *(_QWORD *)&v11;
    objc_storeStrong((id *)&textAlignmentRectInsetsScaleFactor_sContentSizeCategory_textAlignmentRectInsetsScaleFactor, v3);
    textAlignmentRectInsetsScaleFactor_sIsBoldTextEnabled_textAlignmentRectInsetsScaleFactor = IsBoldTextEnabled;
    textAlignmentRectInsetsScaleFactor_sTextFontSize_textAlignmentRectInsetsScaleFactor = *(_QWORD *)&v5;
    textAlignmentRectInsetsScaleFactor_sCustomTextFontSize_textAlignmentRectInsetsScaleFactor = *(_QWORD *)&v6;
    objc_storeStrong((id *)&textAlignmentRectInsetsScaleFactor_sCustomTextFontName_textAlignmentRectInsetsScaleFactor, v8);
  }
  v12 = *(double *)&textAlignmentRectInsetsScaleFactor_sBehavior;

  return v12;
}

- (UIEdgeInsets)attachmentBalloonAlignmentRectInsetsWithTailShape:(char)a3
{
  double v3;
  double v4;
  double v5;
  double v6;
  UIEdgeInsets result;

  if (a3 == 2)
    goto LABEL_5;
  if (a3 == 1)
  {
    -[CKUIBehavior attachmentBalloonAlignmentRectInsets](self, "attachmentBalloonAlignmentRectInsets");
    goto LABEL_7;
  }
  if (a3)
  {
LABEL_5:
    v3 = *MEMORY[0x1E0CEB4B0];
    v4 = *(double *)(MEMORY[0x1E0CEB4B0] + 8);
    v5 = *(double *)(MEMORY[0x1E0CEB4B0] + 16);
    v6 = *(double *)(MEMORY[0x1E0CEB4B0] + 24);
  }
  else
  {
    -[CKUIBehavior taillessAttachmentBalloonAlignmentRectInsets](self, "taillessAttachmentBalloonAlignmentRectInsets");
  }
LABEL_7:
  result.right = v6;
  result.bottom = v5;
  result.left = v4;
  result.top = v3;
  return result;
}

- (UIEdgeInsets)balloonTextContainerInset
{
  void *v3;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  uint64_t *v8;
  uint64_t *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  int v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  BOOL v31;
  __CFString *v32;
  int IsBoldTextEnabled;
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v32 = v7;
  v8 = &CKMainScreenScale_sMainScreenScale_98;
  v9 = &searchResultsInsets_once;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)balloonTextContainerInset_sContentSizeCategory_balloonTextContainerInset, (UIContentSizeCategory)v3)|| balloonTextContainerInset_sIsBoldTextEnabled_balloonTextContainerInset != IsBoldTextEnabled|| (*(double *)&balloonTextContainerInset_sTextFontSize_balloonTextContainerInset == v4? (v31 = *(double *)&balloonTextContainerInset_sCustomTextFontSize_balloonTextContainerInset == v5): (v31 = 0), !v31|| (objc_msgSend((id)balloonTextContainerInset_sCustomTextFontName_balloonTextContainerInset, "isEqualToString:", v32, *(double *)&balloonTextContainerInset_sTextFontSize_balloonTextContainerInset, *(double *)&balloonTextContainerInset_sCustomTextFontSize_balloonTextContainerInset) & 1) == 0))
  {
    -[CKUIBehavior entryViewlayoutMetrics](self, "entryViewlayoutMetrics", v32);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "entryViewContentInsets");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "isSendMenuEnabled");

    if (v20)
    {
      -[CKUIBehavior entryFieldCoverLineWidth](self, "entryFieldCoverLineWidth");
      v12 = v12 - v21;
      v16 = v16 - v21;
    }
    -[CKUIBehavior textAlignmentRectInsetsScaleFactor](self, "textAlignmentRectInsetsScaleFactor");
    v8 = &CKMainScreenScale_sMainScreenScale_98;
    *(double *)&balloonTextContainerInset_sBehavior_0 = v12 * v22;
    *(double *)&balloonTextContainerInset_sBehavior_1 = v14 * v22;
    *(double *)&balloonTextContainerInset_sBehavior_2 = v16 * v22;
    v9 = &searchResultsInsets_once;
    *(double *)&balloonTextContainerInset_sBehavior_3 = v18 * v22;
    objc_storeStrong((id *)&balloonTextContainerInset_sContentSizeCategory_balloonTextContainerInset, v3);
    balloonTextContainerInset_sIsBoldTextEnabled_balloonTextContainerInset = IsBoldTextEnabled;
    balloonTextContainerInset_sTextFontSize_balloonTextContainerInset = *(_QWORD *)&v4;
    balloonTextContainerInset_sCustomTextFontSize_balloonTextContainerInset = *(_QWORD *)&v5;
    objc_storeStrong((id *)&balloonTextContainerInset_sCustomTextFontName_balloonTextContainerInset, v7);
  }
  v23 = *((double *)v8 + 100);
  v24 = balloonTextContainerInset_sBehavior_1;
  v25 = balloonTextContainerInset_sBehavior_2;
  v26 = *((double *)v9 + 211);

  v27 = v23;
  v28 = *(double *)&v24;
  v29 = *(double *)&v25;
  v30 = v26;
  result.right = v30;
  result.bottom = v29;
  result.left = v28;
  result.top = v27;
  return result;
}

- (double)replyBalloonMinHeight
{
  if (replyBalloonMinHeight_once != -1)
    dispatch_once(&replyBalloonMinHeight_once, &__block_literal_global_617);
  return *(double *)&replyBalloonMinHeight_sBehavior;
}

void __37__CKUIBehavior_replyBalloonMinHeight__block_invoke()
{
  replyBalloonMinHeight_sBehavior = 0x403A000000000000;
}

- (int64_t)replyBalloonMaximumNumberOfLines
{
  if (replyBalloonMaximumNumberOfLines_once != -1)
    dispatch_once(&replyBalloonMaximumNumberOfLines_once, &__block_literal_global_618);
  if (replyBalloonMaximumNumberOfLines_sBehavior)
    return 3;
  else
    return 0;
}

void __48__CKUIBehavior_replyBalloonMaximumNumberOfLines__block_invoke()
{
  replyBalloonMaximumNumberOfLines_sBehavior = 1;
}

- (UIEdgeInsets)_replyBalloonTextContainerInset
{
  void *v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CKTextMetricsRequest *v14;
  CKTextMetricsProvider *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  __int128 v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[2];
  uint64_t v47;
  _QWORD v48[2];
  UIEdgeInsets result;

  v48[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bounds");
  v6 = fmin(v4, v5);

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isTextKit2Enabled");

  if (v8)
  {
    CKFrameworkBundle();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("MADRID"), &stru_1E276D870, CFSTR("ChatKit"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v47 = *MEMORY[0x1E0DC1138];
    -[CKUIBehavior replyBalloonTextFont](self, "replyBalloonTextFont");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v48[0] = v11;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v48, &v47, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:attributes:", v10, v12);
    v14 = -[CKTextMetricsRequest initWithAttributedString:]([CKTextMetricsRequest alloc], "initWithAttributedString:", v13);
    -[CKUIBehavior balloonLineFragmentPadding](self, "balloonLineFragmentPadding");
    -[CKTextMetricsRequest setLineFragmentPadding:](v14, "setLineFragmentPadding:");
    -[CKTextMetricsRequest setMaximumNumberOfLines:](v14, "setMaximumNumberOfLines:", -[CKUIBehavior replyBalloonMaximumNumberOfLines](self, "replyBalloonMaximumNumberOfLines"));
    -[CKTextMetricsRequest setMaximumHeight:](v14, "setMaximumHeight:", 10000.0);
    -[CKTextMetricsRequest setMaximumWidth:](v14, "setMaximumWidth:", v6);
    v15 = objc_alloc_init(CKTextMetricsProvider);
    -[CKTextMetricsRequest setContainerInset:](v14, "setContainerInset:", 2.25, 0.0, 2.25, 0.0);
    -[CKUIBehavior replyBalloonMinHeight](self, "replyBalloonMinHeight");
    -[CKTextMetricsRequest setMinimumViewHeight:](v14, "setMinimumViewHeight:");
    -[CKTextMetricsProvider metricsForRequest:](v15, "metricsForRequest:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "alignmentInset");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;
    -[CKUIBehavior textAlignmentRectInsetsScaleFactor](self, "textAlignmentRectInsetsScaleFactor");
    v26 = v18 * v25;
    v27 = v20 * v25;
    v28 = v22 * v25;
    v29 = v24 * v25;

  }
  else
  {
    v30 = objc_alloc(MEMORY[0x1E0CEAB18]);
    v10 = (void *)objc_msgSend(v30, "initWithFrame:textContainer:", 0, *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
    CKFrameworkBundle();
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("MADRID"), &stru_1E276D870, CFSTR("ChatKit"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setText:", v32);

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "replyBalloonTextFont");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setFont:", v34);

    objc_msgSend(v10, "setTextContainerInset:", 2.25, 0.0, 2.25, 0.0);
    v35 = (id)objc_msgSend(v10, "layoutManager");
    objc_msgSend(v10, "textContainer");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKUIBehavior balloonLineFragmentPadding](self, "balloonLineFragmentPadding");
    objc_msgSend(v12, "setLineFragmentPadding:");
    objc_msgSend(v12, "setMaximumNumberOfLines:", -[CKUIBehavior replyBalloonMaximumNumberOfLines](self, "replyBalloonMaximumNumberOfLines"));
    v36 = *(_OWORD *)(MEMORY[0x1E0CEB4B0] + 16);
    v46[0] = *MEMORY[0x1E0CEB4B0];
    v46[1] = v36;
    objc_msgSend(v12, "sizeThatFits:textAlignmentInsets:isSingleLine:", v46, 0, v6, 1.79769313e308);
    v38 = v37 + 2.25 + 2.25;
    -[CKUIBehavior replyBalloonMinHeight](self, "replyBalloonMinHeight");
    if (v38 >= v39)
      v40 = 2.25;
    else
      v40 = (v39 - v38) * 0.5 + 2.25;
    -[CKUIBehavior textAlignmentRectInsetsScaleFactor](self, "textAlignmentRectInsetsScaleFactor");
    v26 = v41 * v40;
    v27 = v41 * 0.0;
    v28 = v26;
    v29 = v41 * 0.0;
  }

  v42 = v26;
  v43 = v27;
  v44 = v28;
  v45 = v29;
  result.right = v45;
  result.bottom = v44;
  result.left = v43;
  result.top = v42;
  return result;
}

- (UIEdgeInsets)replyBalloonTextContainerInset
{
  NSString *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  NSComparisonResult v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  CKUIBehavior *v15;
  uint64_t *v16;
  uint64_t *v17;
  __CFString *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  BOOL v32;
  char v33;
  __CFString *obj;
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v3 = (NSString *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v10 = UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replyBalloonTextContainerInset_sContentSizeCategory_replyBalloonTextContainerInset, v3);
  v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
  v13 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont;
  v14 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont;
  if (v10
    || replyBalloonTextContainerInset_sIsBoldTextEnabled_replyBalloonTextContainerInset != IsBoldTextEnabled
    || (*(double *)&replyBalloonTextContainerInset_sTextFontSize_replyBalloonTextContainerInset == v5
      ? (v32 = *(double *)&replyBalloonTextContainerInset_sCustomTextFontSize_replyBalloonTextContainerInset == v6)
      : (v32 = 0),
        !v32
     || (v33 = objc_msgSend((id)replyBalloonTextContainerInset_sCustomTextFontName_replyBalloonTextContainerInset, "isEqualToString:", v9, *(double *)&replyBalloonTextContainerInset_sTextFontSize_replyBalloonTextContainerInset, *(double *)&replyBalloonTextContainerInset_sCustomTextFontSize_replyBalloonTextContainerInset), v14 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, v13 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, v12 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior, (v33 & 1) == 0)))
  {
    v15 = self;
    v16 = v12;
    obj = v8;
    v17 = v13;
    v18 = v7;
    v19 = v14;
    -[CKUIBehavior _replyBalloonTextContainerInset](v15, "_replyBalloonTextContainerInset");
    replyBalloonTextContainerInset_sBehavior_0 = v20;
    replyBalloonTextContainerInset_sBehavior_1 = v21;
    replyBalloonTextContainerInset_sBehavior_2 = v22;
    replyBalloonTextContainerInset_sBehavior_3 = v23;
    objc_storeStrong((id *)&replyBalloonTextContainerInset_sContentSizeCategory_replyBalloonTextContainerInset, v3);
    *((_BYTE *)v16 + 1680) = IsBoldTextEnabled;
    *((double *)v17 + 354) = v5;
    v11 = &conversationListFocusFilterBannerCollapsedEnabledIcon_sBehavior;
    *((double *)v19 + 355) = v6;
    v7 = v18;
    objc_storeStrong((id *)&replyBalloonTextContainerInset_sCustomTextFontName_replyBalloonTextContainerInset, obj);
  }
  v24 = replyBalloonTextContainerInset_sBehavior_0;
  v25 = replyBalloonTextContainerInset_sBehavior_1;
  v26 = replyBalloonTextContainerInset_sBehavior_2;
  v27 = *((double *)v11 + 214);

  v28 = *(double *)&v24;
  v29 = *(double *)&v25;
  v30 = *(double *)&v26;
  v31 = v27;
  result.right = v31;
  result.bottom = v30;
  result.left = v29;
  result.top = v28;
  return result;
}

- (UIEdgeInsets)balloonMaskFrameInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (balloonMaskFrameInsets_once != -1)
    dispatch_once(&balloonMaskFrameInsets_once, &__block_literal_global_625);
  v2 = *(double *)&balloonMaskFrameInsets_sBehavior_0;
  v3 = *(double *)&balloonMaskFrameInsets_sBehavior_1;
  v4 = *(double *)&balloonMaskFrameInsets_sBehavior_2;
  v5 = *(double *)&balloonMaskFrameInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __38__CKUIBehavior_balloonMaskFrameInsets__block_invoke()
{
  balloonMaskFrameInsets_sBehavior_0 = 0x3FF0000000000000;
  balloonMaskFrameInsets_sBehavior_1 = 0x3FF0000000000000;
  balloonMaskFrameInsets_sBehavior_2 = 0x3FF0000000000000;
  balloonMaskFrameInsets_sBehavior_3 = 0x3FF0000000000000;
}

- (UIEdgeInsets)balloonMaskFrameInsetsWithBalloonShape:(char)a3
{
  double v3;
  double v4;
  double v5;
  double v6;
  UIEdgeInsets result;

  if (a3 > 5 || a3 == 2)
  {
    v3 = *MEMORY[0x1E0CEB4B0];
    v4 = *(double *)(MEMORY[0x1E0CEB4B0] + 8);
    v5 = *(double *)(MEMORY[0x1E0CEB4B0] + 16);
    v6 = *(double *)(MEMORY[0x1E0CEB4B0] + 24);
  }
  else
  {
    -[CKUIBehavior balloonMaskFrameInsets](self, "balloonMaskFrameInsets");
  }
  result.right = v6;
  result.bottom = v5;
  result.left = v4;
  result.top = v3;
  return result;
}

- (double)audioBalloonWaveformTimeSpace
{
  if (audioBalloonWaveformTimeSpace_once != -1)
    dispatch_once(&audioBalloonWaveformTimeSpace_once, &__block_literal_global_626);
  return *(double *)&audioBalloonWaveformTimeSpace_sBehavior;
}

void __45__CKUIBehavior_audioBalloonWaveformTimeSpace__block_invoke()
{
  audioBalloonWaveformTimeSpace_sBehavior = 0x4018000000000000;
}

- (CGSize)audioProgressViewSize
{
  double v2;
  double v3;
  CGSize result;

  if (audioProgressViewSize_once != -1)
    dispatch_once(&audioProgressViewSize_once, &__block_literal_global_627);
  v2 = *(double *)&audioProgressViewSize_sBehavior_0;
  v3 = *(double *)&audioProgressViewSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __37__CKUIBehavior_audioProgressViewSize__block_invoke()
{
  audioProgressViewSize_sBehavior_0 = 0x403D000000000000;
  audioProgressViewSize_sBehavior_1 = 0x403D000000000000;
}

- (double)audioBalloonTimeInset
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  _BOOL4 v10;
  double v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioBalloonTimeInset_sContentSizeCategory_audioBalloonTimeInset, (UIContentSizeCategory)v3)|| audioBalloonTimeInset_sIsBoldTextEnabled_audioBalloonTimeInset != IsBoldTextEnabled|| (*(double *)&audioBalloonTimeInset_sTextFontSize_audioBalloonTimeInset == v5? (v14 = *(double *)&audioBalloonTimeInset_sCustomTextFontSize_audioBalloonTimeInset == v6): (v14 = 0), !v14|| (objc_msgSend((id)audioBalloonTimeInset_sCustomTextFontName_audioBalloonTimeInset, "isEqualToString:", v9, *(double *)&audioBalloonTimeInset_sTextFontSize_audioBalloonTimeInset, *(double *)&audioBalloonTimeInset_sCustomTextFontSize_audioBalloonTimeInset) & 1) == 0))
  {
    v10 = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    v11 = 8.0;
    if (v10)
      v11 = 18.0;
    audioBalloonTimeInset_sBehavior = *(_QWORD *)&v11;
    objc_storeStrong((id *)&audioBalloonTimeInset_sContentSizeCategory_audioBalloonTimeInset, v3);
    audioBalloonTimeInset_sIsBoldTextEnabled_audioBalloonTimeInset = IsBoldTextEnabled;
    audioBalloonTimeInset_sTextFontSize_audioBalloonTimeInset = *(_QWORD *)&v5;
    audioBalloonTimeInset_sCustomTextFontSize_audioBalloonTimeInset = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioBalloonTimeInset_sCustomTextFontName_audioBalloonTimeInset, v8);
  }
  v12 = *(double *)&audioBalloonTimeInset_sBehavior;

  return v12;
}

- (double)audioBalloonProgressInset
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  _BOOL4 v10;
  double v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioBalloonProgressInset_sContentSizeCategory_audioBalloonProgressInset, (UIContentSizeCategory)v3)|| audioBalloonProgressInset_sIsBoldTextEnabled_audioBalloonProgressInset != IsBoldTextEnabled|| (*(double *)&audioBalloonProgressInset_sTextFontSize_audioBalloonProgressInset == v5? (v14 = *(double *)&audioBalloonProgressInset_sCustomTextFontSize_audioBalloonProgressInset == v6): (v14 = 0), !v14|| (objc_msgSend((id)audioBalloonProgressInset_sCustomTextFontName_audioBalloonProgressInset, "isEqualToString:", v9, *(double *)&audioBalloonProgressInset_sTextFontSize_audioBalloonProgressInset, *(double *)&audioBalloonProgressInset_sCustomTextFontSize_audioBalloonProgressInset) & 1) == 0))
  {
    v10 = -[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory");
    v11 = 3.0;
    if (v10)
      v11 = 13.0;
    audioBalloonProgressInset_sBehavior = *(_QWORD *)&v11;
    objc_storeStrong((id *)&audioBalloonProgressInset_sContentSizeCategory_audioBalloonProgressInset, v3);
    audioBalloonProgressInset_sIsBoldTextEnabled_audioBalloonProgressInset = IsBoldTextEnabled;
    audioBalloonProgressInset_sTextFontSize_audioBalloonProgressInset = *(_QWORD *)&v5;
    audioBalloonProgressInset_sCustomTextFontSize_audioBalloonProgressInset = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioBalloonProgressInset_sCustomTextFontName_audioBalloonProgressInset, v8);
  }
  v12 = *(double *)&audioBalloonProgressInset_sBehavior;

  return v12;
}

- (UIEdgeInsets)audioBalloonAlignmentInsets
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  BOOL v22;
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioBalloonAlignmentInsets_sContentSizeCategory_audioBalloonAlignmentInsets, (UIContentSizeCategory)v3)|| audioBalloonAlignmentInsets_sIsBoldTextEnabled_audioBalloonAlignmentInsets != IsBoldTextEnabled|| (*(double *)&audioBalloonAlignmentInsets_sTextFontSize_audioBalloonAlignmentInsets == v5? (v22 = *(double *)&audioBalloonAlignmentInsets_sCustomTextFontSize_audioBalloonAlignmentInsets == v6): (v22 = 0), !v22|| (objc_msgSend((id)audioBalloonAlignmentInsets_sCustomTextFontName_audioBalloonAlignmentInsets, "isEqualToString:", v9, *(double *)&audioBalloonAlignmentInsets_sTextFontSize_audioBalloonAlignmentInsets, *(double *)&audioBalloonAlignmentInsets_sCustomTextFontSize_audioBalloonAlignmentInsets) & 1) == 0))
  {
    if (-[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory"))
    {
      v10 = 0;
      v11 = 2.0;
      v12 = 2.0;
      v13 = 0;
    }
    else
    {
      v11 = *MEMORY[0x1E0CEB4B0];
      v10 = *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 8);
      v12 = *(double *)(MEMORY[0x1E0CEB4B0] + 16);
      v13 = *(_QWORD *)(MEMORY[0x1E0CEB4B0] + 24);
    }
    audioBalloonAlignmentInsets_sBehavior_0 = *(_QWORD *)&v11;
    audioBalloonAlignmentInsets_sBehavior_1 = v10;
    audioBalloonAlignmentInsets_sBehavior_2 = *(_QWORD *)&v12;
    audioBalloonAlignmentInsets_sBehavior_3 = v13;
    objc_storeStrong((id *)&audioBalloonAlignmentInsets_sContentSizeCategory_audioBalloonAlignmentInsets, v3);
    audioBalloonAlignmentInsets_sIsBoldTextEnabled_audioBalloonAlignmentInsets = IsBoldTextEnabled;
    audioBalloonAlignmentInsets_sTextFontSize_audioBalloonAlignmentInsets = *(_QWORD *)&v5;
    audioBalloonAlignmentInsets_sCustomTextFontSize_audioBalloonAlignmentInsets = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioBalloonAlignmentInsets_sCustomTextFontName_audioBalloonAlignmentInsets, v8);
  }
  v14 = audioBalloonAlignmentInsets_sBehavior_0;
  v15 = audioBalloonAlignmentInsets_sBehavior_1;
  v16 = audioBalloonAlignmentInsets_sBehavior_2;
  v17 = audioBalloonAlignmentInsets_sBehavior_3;

  v18 = *(double *)&v14;
  v19 = *(double *)&v15;
  v20 = *(double *)&v16;
  v21 = *(double *)&v17;
  result.right = v21;
  result.bottom = v20;
  result.left = v19;
  result.top = v18;
  return result;
}

- (double)verticalBalloonBadgeInset
{
  if (verticalBalloonBadgeInset_once != -1)
    dispatch_once(&verticalBalloonBadgeInset_once, &__block_literal_global_628);
  return *(double *)&verticalBalloonBadgeInset_sBehavior;
}

void __41__CKUIBehavior_verticalBalloonBadgeInset__block_invoke()
{
  verticalBalloonBadgeInset_sBehavior = 0x4022000000000000;
}

- (double)horizontalBalloonBadgeInset
{
  if (horizontalBalloonBadgeInset_once != -1)
    dispatch_once(&horizontalBalloonBadgeInset_once, &__block_literal_global_629);
  return *(double *)&horizontalBalloonBadgeInset_sBehavior;
}

void __43__CKUIBehavior_horizontalBalloonBadgeInset__block_invoke()
{
  horizontalBalloonBadgeInset_sBehavior = 0x4026000000000000;
}

- (double)stackBalloonVerticalInset
{
  if (stackBalloonVerticalInset_once != -1)
    dispatch_once(&stackBalloonVerticalInset_once, &__block_literal_global_630);
  return *(double *)&stackBalloonVerticalInset_sBehavior;
}

void __41__CKUIBehavior_stackBalloonVerticalInset__block_invoke()
{
  stackBalloonVerticalInset_sBehavior = 0x402E000000000000;
}

- (CGSize)previewBalloonSizeThatFits:(CGSize)a3
{
  double width;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGSize result;

  width = a3.width;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors", a3.width, a3.height);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "previewMaxWidth");
  v6 = v5;

  if (width >= v6)
    v7 = v6;
  else
    v7 = width;
  v8 = v7 * 1.25;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "stackBalloonVerticalInset");
  v11 = v10;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "smallTranscriptSpace");
  v14 = v8 - (v13 * -2.0 + v11 * 2.0);

  v15 = v8;
  v16 = v14;
  result.height = v16;
  result.width = v15;
  return result;
}

- (double)audioHintViewPadding
{
  if (audioHintViewPadding_once != -1)
    dispatch_once(&audioHintViewPadding_once, &__block_literal_global_631);
  return *(double *)&audioHintViewPadding_sBehavior;
}

void __36__CKUIBehavior_audioHintViewPadding__block_invoke()
{
  audioHintViewPadding_sBehavior = 0x4024000000000000;
}

- (double)audioRecordingViewMaximumDBLevel
{
  if (audioRecordingViewMaximumDBLevel_once != -1)
    dispatch_once(&audioRecordingViewMaximumDBLevel_once, &__block_literal_global_632_0);
  return *(double *)&audioRecordingViewMaximumDBLevel_sBehavior;
}

void __48__CKUIBehavior_audioRecordingViewMaximumDBLevel__block_invoke()
{
  audioRecordingViewMaximumDBLevel_sBehavior = 0xC024000000000000;
}

- (double)audioRecordingViewMinimumDBLevel
{
  if (audioRecordingViewMinimumDBLevel_once != -1)
    dispatch_once(&audioRecordingViewMinimumDBLevel_once, &__block_literal_global_633);
  return *(double *)&audioRecordingViewMinimumDBLevel_sBehavior;
}

void __48__CKUIBehavior_audioRecordingViewMinimumDBLevel__block_invoke()
{
  audioRecordingViewMinimumDBLevel_sBehavior = 0xC04E000000000000;
}

- (double)audioRecordingViewTimeBetweenWaveformSegments
{
  if (audioRecordingViewTimeBetweenWaveformSegments_once != -1)
    dispatch_once(&audioRecordingViewTimeBetweenWaveformSegments_once, &__block_literal_global_634_0);
  return *(double *)&audioRecordingViewTimeBetweenWaveformSegments_sBehavior;
}

void __61__CKUIBehavior_audioRecordingViewTimeBetweenWaveformSegments__block_invoke()
{
  audioRecordingViewTimeBetweenWaveformSegments_sBehavior = 0x3FB5555555555555;
}

- (double)audioRecordingViewPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __41__CKUIBehavior_audioRecordingViewPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (audioRecordingViewPadding_once != -1)
    dispatch_once(&audioRecordingViewPadding_once, block);
  return *(double *)&audioRecordingViewPadding_sBehavior;
}

uint64_t __41__CKUIBehavior_audioRecordingViewPadding__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "audioRecordingViewPaddingFloat");
  audioRecordingViewPadding_sBehavior = v2;
  return result;
}

- (double)audioRecordingViewPaddingFloat
{
  return 32.0;
}

- (double)audioRecordingViewButtonSpacing
{
  if (audioRecordingViewButtonSpacing_once != -1)
    dispatch_once(&audioRecordingViewButtonSpacing_once, &__block_literal_global_635);
  return *(double *)&audioRecordingViewButtonSpacing_sBehavior;
}

void __47__CKUIBehavior_audioRecordingViewButtonSpacing__block_invoke()
{
  audioRecordingViewButtonSpacing_sBehavior = 0x4030000000000000;
}

- (double)audioRecordingViewDurationSpacing
{
  if (audioRecordingViewDurationSpacing_once != -1)
    dispatch_once(&audioRecordingViewDurationSpacing_once, &__block_literal_global_636);
  return *(double *)&audioRecordingViewDurationSpacing_sBehavior;
}

void __49__CKUIBehavior_audioRecordingViewDurationSpacing__block_invoke()
{
  audioRecordingViewDurationSpacing_sBehavior = 0x4028000000000000;
}

- (double)audioRecordingViewLeadingButtonPadding
{
  if (audioRecordingViewLeadingButtonPadding_once != -1)
    dispatch_once(&audioRecordingViewLeadingButtonPadding_once, &__block_literal_global_637);
  return 0.0;
}

- (double)audioRecordingViewWaveformSpacing
{
  if (audioRecordingViewWaveformSpacing_once != -1)
    dispatch_once(&audioRecordingViewWaveformSpacing_once, &__block_literal_global_638);
  return 0.0;
}

- (UIFont)audioBalloonTimeFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioBalloonTimeFont_sContentSizeCategory_audioBalloonTimeFont, (UIContentSizeCategory)v2)|| audioBalloonTimeFont_sIsIncreaseContrastEnabled_audioBalloonTimeFont != v3|| audioBalloonTimeFont_sIsBoldTextEnabled_audioBalloonTimeFont != IsBoldTextEnabled|| (v10 = audioBalloonTimeFont_sTextFontSize_audioBalloonTimeFont, *(double *)&audioBalloonTimeFont_sTextFontSize_audioBalloonTimeFont != v5)|| (v10 = audioBalloonTimeFont_sCustomTextFontSize_audioBalloonTimeFont, *(double *)&audioBalloonTimeFont_sCustomTextFontSize_audioBalloonTimeFont != v6)|| (objc_msgSend((id)audioBalloonTimeFont_sCustomTextFontName_audioBalloonTimeFont, "isEqualToString:", v9, *(double *)&audioBalloonTimeFont_sCustomTextFontSize_audioBalloonTimeFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortMonospacedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)audioBalloonTimeFont_sBehavior;
    audioBalloonTimeFont_sBehavior = v11;

    objc_storeStrong((id *)&audioBalloonTimeFont_sContentSizeCategory_audioBalloonTimeFont, v2);
    audioBalloonTimeFont_sIsIncreaseContrastEnabled_audioBalloonTimeFont = v3;
    audioBalloonTimeFont_sIsBoldTextEnabled_audioBalloonTimeFont = IsBoldTextEnabled;
    audioBalloonTimeFont_sTextFontSize_audioBalloonTimeFont = *(_QWORD *)&v5;
    audioBalloonTimeFont_sCustomTextFontSize_audioBalloonTimeFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioBalloonTimeFont_sCustomTextFontName_audioBalloonTimeFont, v8);
  }
  v13 = (UIFont *)(id)audioBalloonTimeFont_sBehavior;

  return v13;
}

- (UIFont)audioBalloonSpeedFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioBalloonSpeedFont_sContentSizeCategory_audioBalloonSpeedFont, (UIContentSizeCategory)v2)|| audioBalloonSpeedFont_sIsIncreaseContrastEnabled_audioBalloonSpeedFont != v3|| audioBalloonSpeedFont_sIsBoldTextEnabled_audioBalloonSpeedFont != IsBoldTextEnabled|| (v10 = audioBalloonSpeedFont_sTextFontSize_audioBalloonSpeedFont, *(double *)&audioBalloonSpeedFont_sTextFontSize_audioBalloonSpeedFont != v5)|| (v10 = audioBalloonSpeedFont_sCustomTextFontSize_audioBalloonSpeedFont, *(double *)&audioBalloonSpeedFont_sCustomTextFontSize_audioBalloonSpeedFont != v6)|| (objc_msgSend((id)audioBalloonSpeedFont_sCustomTextFontName_audioBalloonSpeedFont, "isEqualToString:", v9, *(double *)&audioBalloonSpeedFont_sCustomTextFontSize_audioBalloonSpeedFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortMonospacedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "__ck_fontWithWeight:", *MEMORY[0x1E0DC1438]);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)audioBalloonSpeedFont_sBehavior;
    audioBalloonSpeedFont_sBehavior = v12;

    objc_storeStrong((id *)&audioBalloonSpeedFont_sContentSizeCategory_audioBalloonSpeedFont, v2);
    audioBalloonSpeedFont_sIsIncreaseContrastEnabled_audioBalloonSpeedFont = v3;
    audioBalloonSpeedFont_sIsBoldTextEnabled_audioBalloonSpeedFont = IsBoldTextEnabled;
    audioBalloonSpeedFont_sTextFontSize_audioBalloonSpeedFont = *(_QWORD *)&v5;
    audioBalloonSpeedFont_sCustomTextFontSize_audioBalloonSpeedFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioBalloonSpeedFont_sCustomTextFontName_audioBalloonSpeedFont, v8);
  }
  v14 = (UIFont *)(id)audioBalloonSpeedFont_sBehavior;

  return v14;
}

- (UIFont)audioBalloonTranscriptionFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioBalloonTranscriptionFont_sContentSizeCategory_audioBalloonTranscriptionFont, (UIContentSizeCategory)v2)|| audioBalloonTranscriptionFont_sIsIncreaseContrastEnabled_audioBalloonTranscriptionFont != v3|| audioBalloonTranscriptionFont_sIsBoldTextEnabled_audioBalloonTranscriptionFont != IsBoldTextEnabled|| (v10 = audioBalloonTranscriptionFont_sTextFontSize_audioBalloonTranscriptionFont, *(double *)&audioBalloonTranscriptionFont_sTextFontSize_audioBalloonTranscriptionFont != v5)|| (v10 = audioBalloonTranscriptionFont_sCustomTextFontSize_audioBalloonTranscriptionFont, *(double *)&audioBalloonTranscriptionFont_sCustomTextFontSize_audioBalloonTranscriptionFont != v6)|| (objc_msgSend((id)audioBalloonTranscriptionFont_sCustomTextFontName_audioBalloonTranscriptionFont, "isEqualToString:", v9, *(double *)&audioBalloonTranscriptionFont_sCustomTextFontSize_audioBalloonTranscriptionFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)audioBalloonTranscriptionFont_sBehavior;
    audioBalloonTranscriptionFont_sBehavior = v11;

    objc_storeStrong((id *)&audioBalloonTranscriptionFont_sContentSizeCategory_audioBalloonTranscriptionFont, v2);
    audioBalloonTranscriptionFont_sIsIncreaseContrastEnabled_audioBalloonTranscriptionFont = v3;
    audioBalloonTranscriptionFont_sIsBoldTextEnabled_audioBalloonTranscriptionFont = IsBoldTextEnabled;
    audioBalloonTranscriptionFont_sTextFontSize_audioBalloonTranscriptionFont = *(_QWORD *)&v5;
    audioBalloonTranscriptionFont_sCustomTextFontSize_audioBalloonTranscriptionFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioBalloonTranscriptionFont_sCustomTextFontName_audioBalloonTranscriptionFont, v8);
  }
  v13 = (UIFont *)(id)audioBalloonTranscriptionFont_sBehavior;

  return v13;
}

- (UIFont)defaultBalloonTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)defaultBalloonTextFont_sContentSizeCategory_defaultBalloonTextFont, (UIContentSizeCategory)v2)|| defaultBalloonTextFont_sIsIncreaseContrastEnabled_defaultBalloonTextFont != v3|| defaultBalloonTextFont_sIsBoldTextEnabled_defaultBalloonTextFont != IsBoldTextEnabled|| (v10 = defaultBalloonTextFont_sTextFontSize_defaultBalloonTextFont, *(double *)&defaultBalloonTextFont_sTextFontSize_defaultBalloonTextFont != v5)|| (v10 = defaultBalloonTextFont_sCustomTextFontSize_defaultBalloonTextFont, *(double *)&defaultBalloonTextFont_sCustomTextFontSize_defaultBalloonTextFont != v6)|| (objc_msgSend((id)defaultBalloonTextFont_sCustomTextFontName_defaultBalloonTextFont, "isEqualToString:", v9, *(double *)&defaultBalloonTextFont_sCustomTextFontSize_defaultBalloonTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)defaultBalloonTextFont_sBehavior;
    defaultBalloonTextFont_sBehavior = v11;

    objc_storeStrong((id *)&defaultBalloonTextFont_sContentSizeCategory_defaultBalloonTextFont, v2);
    defaultBalloonTextFont_sIsIncreaseContrastEnabled_defaultBalloonTextFont = v3;
    defaultBalloonTextFont_sIsBoldTextEnabled_defaultBalloonTextFont = IsBoldTextEnabled;
    defaultBalloonTextFont_sTextFontSize_defaultBalloonTextFont = *(_QWORD *)&v5;
    defaultBalloonTextFont_sCustomTextFontSize_defaultBalloonTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&defaultBalloonTextFont_sCustomTextFontName_defaultBalloonTextFont, v8);
  }
  v13 = (UIFont *)(id)defaultBalloonTextFont_sBehavior;

  return v13;
}

- (id)_balloonSubjectFont
{
  return (id)objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortEmphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538]);
}

- (UIFont)balloonSubjectFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)balloonSubjectFont_sContentSizeCategory_balloonSubjectFont, (UIContentSizeCategory)v3)|| balloonSubjectFont_sIsIncreaseContrastEnabled_balloonSubjectFont != v4|| balloonSubjectFont_sIsBoldTextEnabled_balloonSubjectFont != IsBoldTextEnabled|| (v11 = balloonSubjectFont_sTextFontSize_balloonSubjectFont, *(double *)&balloonSubjectFont_sTextFontSize_balloonSubjectFont != v6)|| (v11 = balloonSubjectFont_sCustomTextFontSize_balloonSubjectFont, *(double *)&balloonSubjectFont_sCustomTextFontSize_balloonSubjectFont != v7)|| (objc_msgSend((id)balloonSubjectFont_sCustomTextFontName_balloonSubjectFont, "isEqualToString:", v10, *(double *)&balloonSubjectFont_sCustomTextFontSize_balloonSubjectFont) & 1) == 0)
  {
    -[CKUIBehavior _balloonSubjectFont](self, "_balloonSubjectFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)balloonSubjectFont_sBehavior;
    balloonSubjectFont_sBehavior = v12;

    objc_storeStrong((id *)&balloonSubjectFont_sContentSizeCategory_balloonSubjectFont, v3);
    balloonSubjectFont_sIsIncreaseContrastEnabled_balloonSubjectFont = v4;
    balloonSubjectFont_sIsBoldTextEnabled_balloonSubjectFont = IsBoldTextEnabled;
    balloonSubjectFont_sTextFontSize_balloonSubjectFont = *(_QWORD *)&v6;
    balloonSubjectFont_sCustomTextFontSize_balloonSubjectFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&balloonSubjectFont_sCustomTextFontName_balloonSubjectFont, v9);
  }
  v14 = (UIFont *)(id)balloonSubjectFont_sBehavior;

  return v14;
}

- (UIFont)singleBigEmojiFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)singleBigEmojiFont_sContentSizeCategory_singleBigEmojiFont, (UIContentSizeCategory)v2)|| singleBigEmojiFont_sIsIncreaseContrastEnabled_singleBigEmojiFont != v3|| singleBigEmojiFont_sIsBoldTextEnabled_singleBigEmojiFont != IsBoldTextEnabled|| *(double *)&singleBigEmojiFont_sTextFontSize_singleBigEmojiFont != v5|| *(double *)&singleBigEmojiFont_sCustomTextFontSize_singleBigEmojiFont != v6|| (objc_msgSend((id)singleBigEmojiFont_sCustomTextFontName_singleBigEmojiFont, "isEqualToString:", v9, *(double *)&singleBigEmojiFont_sCustomTextFontSize_singleBigEmojiFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 72.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)singleBigEmojiFont_sBehavior;
    singleBigEmojiFont_sBehavior = v10;

    objc_storeStrong((id *)&singleBigEmojiFont_sContentSizeCategory_singleBigEmojiFont, v2);
    singleBigEmojiFont_sIsIncreaseContrastEnabled_singleBigEmojiFont = v3;
    singleBigEmojiFont_sIsBoldTextEnabled_singleBigEmojiFont = IsBoldTextEnabled;
    singleBigEmojiFont_sTextFontSize_singleBigEmojiFont = *(_QWORD *)&v5;
    singleBigEmojiFont_sCustomTextFontSize_singleBigEmojiFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&singleBigEmojiFont_sCustomTextFontName_singleBigEmojiFont, v8);
  }
  v12 = (UIFont *)(id)singleBigEmojiFont_sBehavior;

  return v12;
}

- (UIFont)singleBigAssetFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)singleBigAssetFont_sContentSizeCategory_singleBigAssetFont, (UIContentSizeCategory)v2)|| singleBigAssetFont_sIsIncreaseContrastEnabled_singleBigAssetFont != v3|| singleBigAssetFont_sIsBoldTextEnabled_singleBigAssetFont != IsBoldTextEnabled|| *(double *)&singleBigAssetFont_sTextFontSize_singleBigAssetFont != v5|| *(double *)&singleBigAssetFont_sCustomTextFontSize_singleBigAssetFont != v6|| (objc_msgSend((id)singleBigAssetFont_sCustomTextFontName_singleBigAssetFont, "isEqualToString:", v9, *(double *)&singleBigAssetFont_sCustomTextFontSize_singleBigAssetFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 128.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)singleBigAssetFont_sBehavior;
    singleBigAssetFont_sBehavior = v10;

    objc_storeStrong((id *)&singleBigAssetFont_sContentSizeCategory_singleBigAssetFont, v2);
    singleBigAssetFont_sIsIncreaseContrastEnabled_singleBigAssetFont = v3;
    singleBigAssetFont_sIsBoldTextEnabled_singleBigAssetFont = IsBoldTextEnabled;
    singleBigAssetFont_sTextFontSize_singleBigAssetFont = *(_QWORD *)&v5;
    singleBigAssetFont_sCustomTextFontSize_singleBigAssetFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&singleBigAssetFont_sCustomTextFontName_singleBigAssetFont, v8);
  }
  v12 = (UIFont *)(id)singleBigAssetFont_sBehavior;

  return v12;
}

- (UIFont)multipleBigEmojiFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)multipleBigEmojiFont_sContentSizeCategory_multipleBigEmojiFont, (UIContentSizeCategory)v2)|| multipleBigEmojiFont_sIsIncreaseContrastEnabled_multipleBigEmojiFont != v3|| multipleBigEmojiFont_sIsBoldTextEnabled_multipleBigEmojiFont != IsBoldTextEnabled|| *(double *)&multipleBigEmojiFont_sTextFontSize_multipleBigEmojiFont != v5|| *(double *)&multipleBigEmojiFont_sCustomTextFontSize_multipleBigEmojiFont != v6|| (objc_msgSend((id)multipleBigEmojiFont_sCustomTextFontName_multipleBigEmojiFont, "isEqualToString:", v9, *(double *)&multipleBigEmojiFont_sCustomTextFontSize_multipleBigEmojiFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 48.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)multipleBigEmojiFont_sBehavior;
    multipleBigEmojiFont_sBehavior = v10;

    objc_storeStrong((id *)&multipleBigEmojiFont_sContentSizeCategory_multipleBigEmojiFont, v2);
    multipleBigEmojiFont_sIsIncreaseContrastEnabled_multipleBigEmojiFont = v3;
    multipleBigEmojiFont_sIsBoldTextEnabled_multipleBigEmojiFont = IsBoldTextEnabled;
    multipleBigEmojiFont_sTextFontSize_multipleBigEmojiFont = *(_QWORD *)&v5;
    multipleBigEmojiFont_sCustomTextFontSize_multipleBigEmojiFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&multipleBigEmojiFont_sCustomTextFontName_multipleBigEmojiFont, v8);
  }
  v12 = (UIFont *)(id)multipleBigEmojiFont_sBehavior;

  return v12;
}

- (int64_t)maximumEmojiCountForMultipleBigEmojiFont
{
  if (maximumEmojiCountForMultipleBigEmojiFont_once != -1)
    dispatch_once(&maximumEmojiCountForMultipleBigEmojiFont_once, &__block_literal_global_639);
  if (maximumEmojiCountForMultipleBigEmojiFont_sBehavior)
    return 3;
  else
    return 0;
}

void __56__CKUIBehavior_maximumEmojiCountForMultipleBigEmojiFont__block_invoke()
{
  maximumEmojiCountForMultipleBigEmojiFont_sBehavior = 1;
}

- (UIFont)bigEmojiFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)bigEmojiFont_sContentSizeCategory_bigEmojiFont, (UIContentSizeCategory)v3)|| bigEmojiFont_sIsIncreaseContrastEnabled_bigEmojiFont != v4|| bigEmojiFont_sIsBoldTextEnabled_bigEmojiFont != IsBoldTextEnabled|| (v11 = bigEmojiFont_sTextFontSize_bigEmojiFont, *(double *)&bigEmojiFont_sTextFontSize_bigEmojiFont != v6)|| (v11 = bigEmojiFont_sCustomTextFontSize_bigEmojiFont, *(double *)&bigEmojiFont_sCustomTextFontSize_bigEmojiFont != v7)|| (objc_msgSend((id)bigEmojiFont_sCustomTextFontName_bigEmojiFont, "isEqualToString:", v10, *(double *)&bigEmojiFont_sCustomTextFontSize_bigEmojiFont) & 1) == 0)
  {
    -[CKUIBehavior multipleBigEmojiFont](self, "multipleBigEmojiFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)bigEmojiFont_sBehavior;
    bigEmojiFont_sBehavior = v12;

    objc_storeStrong((id *)&bigEmojiFont_sContentSizeCategory_bigEmojiFont, v3);
    bigEmojiFont_sIsIncreaseContrastEnabled_bigEmojiFont = v4;
    bigEmojiFont_sIsBoldTextEnabled_bigEmojiFont = IsBoldTextEnabled;
    bigEmojiFont_sTextFontSize_bigEmojiFont = *(_QWORD *)&v6;
    bigEmojiFont_sCustomTextFontSize_bigEmojiFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&bigEmojiFont_sCustomTextFontName_bigEmojiFont, v9);
  }
  v14 = (UIFont *)(id)bigEmojiFont_sBehavior;

  return v14;
}

- (id)_balloonParagraphStyle
{
  void *v3;
  void *v4;
  double v5;
  void *v6;
  int v7;

  objc_msgSend(MEMORY[0x1E0DC1290], "defaultParagraphStyle");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v3, "mutableCopy");

  if (-[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory"))
  {
    LODWORD(v5) = 1.0;
    objc_msgSend(v4, "setHyphenationFactor:", v5);
  }
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isTextKit2Enabled");

  if (v7)
    objc_msgSend(v4, "setHorizontalAlignment:", 0);
  return v4;
}

- (NSParagraphStyle)balloonParagraphStyle
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSParagraphStyle *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)balloonParagraphStyle_sContentSizeCategory_balloonParagraphStyle, (UIContentSizeCategory)v3)|| balloonParagraphStyle_sIsIncreaseContrastEnabled_balloonParagraphStyle != v4|| balloonParagraphStyle_sIsBoldTextEnabled_balloonParagraphStyle != IsBoldTextEnabled|| (v11 = balloonParagraphStyle_sTextFontSize_balloonParagraphStyle, *(double *)&balloonParagraphStyle_sTextFontSize_balloonParagraphStyle != v6)|| (v11 = balloonParagraphStyle_sCustomTextFontSize_balloonParagraphStyle, *(double *)&balloonParagraphStyle_sCustomTextFontSize_balloonParagraphStyle != v7)|| (objc_msgSend((id)balloonParagraphStyle_sCustomTextFontName_balloonParagraphStyle, "isEqualToString:", v10, *(double *)&balloonParagraphStyle_sCustomTextFontSize_balloonParagraphStyle) & 1) == 0)
  {
    -[CKUIBehavior _balloonParagraphStyle](self, "_balloonParagraphStyle", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)balloonParagraphStyle_sBehavior;
    balloonParagraphStyle_sBehavior = v12;

    objc_storeStrong((id *)&balloonParagraphStyle_sContentSizeCategory_balloonParagraphStyle, v3);
    balloonParagraphStyle_sIsIncreaseContrastEnabled_balloonParagraphStyle = v4;
    balloonParagraphStyle_sIsBoldTextEnabled_balloonParagraphStyle = IsBoldTextEnabled;
    balloonParagraphStyle_sTextFontSize_balloonParagraphStyle = *(_QWORD *)&v6;
    balloonParagraphStyle_sCustomTextFontSize_balloonParagraphStyle = *(_QWORD *)&v7;
    objc_storeStrong((id *)&balloonParagraphStyle_sCustomTextFontName_balloonParagraphStyle, v9);
  }
  v14 = (NSParagraphStyle *)(id)balloonParagraphStyle_sBehavior;

  return v14;
}

- (id)_replyBalloonTextFont
{
  void *v2;
  int v3;
  uint64_t v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isTextKit2Enabled");

  v4 = *MEMORY[0x1E0CEB550];
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v5, 0.0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v6;
}

- (UIFont)replyBalloonTextFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)replyBalloonTextFont_sContentSizeCategory_replyBalloonTextFont, (UIContentSizeCategory)v3)|| replyBalloonTextFont_sIsIncreaseContrastEnabled_replyBalloonTextFont != v4|| replyBalloonTextFont_sIsBoldTextEnabled_replyBalloonTextFont != IsBoldTextEnabled|| (v11 = replyBalloonTextFont_sTextFontSize_replyBalloonTextFont, *(double *)&replyBalloonTextFont_sTextFontSize_replyBalloonTextFont != v6)|| (v11 = replyBalloonTextFont_sCustomTextFontSize_replyBalloonTextFont, *(double *)&replyBalloonTextFont_sCustomTextFontSize_replyBalloonTextFont != v7)|| (objc_msgSend((id)replyBalloonTextFont_sCustomTextFontName_replyBalloonTextFont, "isEqualToString:", v10, *(double *)&replyBalloonTextFont_sCustomTextFontSize_replyBalloonTextFont) & 1) == 0)
  {
    -[CKUIBehavior _replyBalloonTextFont](self, "_replyBalloonTextFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)replyBalloonTextFont_sBehavior;
    replyBalloonTextFont_sBehavior = v12;

    objc_storeStrong((id *)&replyBalloonTextFont_sContentSizeCategory_replyBalloonTextFont, v3);
    replyBalloonTextFont_sIsIncreaseContrastEnabled_replyBalloonTextFont = v4;
    replyBalloonTextFont_sIsBoldTextEnabled_replyBalloonTextFont = IsBoldTextEnabled;
    replyBalloonTextFont_sTextFontSize_replyBalloonTextFont = *(_QWORD *)&v6;
    replyBalloonTextFont_sCustomTextFontSize_replyBalloonTextFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&replyBalloonTextFont_sCustomTextFontName_replyBalloonTextFont, v9);
  }
  v14 = (UIFont *)(id)replyBalloonTextFont_sBehavior;

  return v14;
}

- (UIFont)locationBoldButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)locationBoldButtonFont_sContentSizeCategory_locationBoldButtonFont, (UIContentSizeCategory)v2)|| locationBoldButtonFont_sIsIncreaseContrastEnabled_locationBoldButtonFont != v3|| locationBoldButtonFont_sIsBoldTextEnabled_locationBoldButtonFont != IsBoldTextEnabled|| *(double *)&locationBoldButtonFont_sTextFontSize_locationBoldButtonFont != v5|| *(double *)&locationBoldButtonFont_sCustomTextFontSize_locationBoldButtonFont != v6|| (objc_msgSend((id)locationBoldButtonFont_sCustomTextFontName_locationBoldButtonFont, "isEqualToString:", v9, *(double *)&locationBoldButtonFont_sCustomTextFontSize_locationBoldButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "boldSystemFontOfSize:", 18.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)locationBoldButtonFont_sBehavior;
    locationBoldButtonFont_sBehavior = v10;

    objc_storeStrong((id *)&locationBoldButtonFont_sContentSizeCategory_locationBoldButtonFont, v2);
    locationBoldButtonFont_sIsIncreaseContrastEnabled_locationBoldButtonFont = v3;
    locationBoldButtonFont_sIsBoldTextEnabled_locationBoldButtonFont = IsBoldTextEnabled;
    locationBoldButtonFont_sTextFontSize_locationBoldButtonFont = *(_QWORD *)&v5;
    locationBoldButtonFont_sCustomTextFontSize_locationBoldButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&locationBoldButtonFont_sCustomTextFontName_locationBoldButtonFont, v8);
  }
  v12 = (UIFont *)(id)locationBoldButtonFont_sBehavior;

  return v12;
}

- (UIFont)locationButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)locationButtonFont_sContentSizeCategory_locationButtonFont, (UIContentSizeCategory)v2)|| locationButtonFont_sIsIncreaseContrastEnabled_locationButtonFont != v3|| locationButtonFont_sIsBoldTextEnabled_locationButtonFont != IsBoldTextEnabled|| *(double *)&locationButtonFont_sTextFontSize_locationButtonFont != v5|| *(double *)&locationButtonFont_sCustomTextFontSize_locationButtonFont != v6|| (objc_msgSend((id)locationButtonFont_sCustomTextFontName_locationButtonFont, "isEqualToString:", v9, *(double *)&locationButtonFont_sCustomTextFontSize_locationButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 18.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)locationButtonFont_sBehavior;
    locationButtonFont_sBehavior = v10;

    objc_storeStrong((id *)&locationButtonFont_sContentSizeCategory_locationButtonFont, v2);
    locationButtonFont_sIsIncreaseContrastEnabled_locationButtonFont = v3;
    locationButtonFont_sIsBoldTextEnabled_locationButtonFont = IsBoldTextEnabled;
    locationButtonFont_sTextFontSize_locationButtonFont = *(_QWORD *)&v5;
    locationButtonFont_sCustomTextFontSize_locationButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&locationButtonFont_sCustomTextFontName_locationButtonFont, v8);
  }
  v12 = (UIFont *)(id)locationButtonFont_sBehavior;

  return v12;
}

- (id)mentionTranscriptFontFromOrignalFont:(id)a3
{
  return (id)objc_msgSend(MEMORY[0x1E0DC1350], "__ck_emphasizedFontFromFont:", a3);
}

- (NSString)balloonName
{
  if (balloonName_once != -1)
    dispatch_once(&balloonName_once, &__block_literal_global_640_0);
  return (NSString *)(id)balloonName_sBehavior;
}

void __27__CKUIBehavior_balloonName__block_invoke()
{
  void *v0;

  v0 = (void *)balloonName_sBehavior;
  balloonName_sBehavior = (uint64_t)CFSTR("bubble");

}

- (NSString)taillessBallonName
{
  if (taillessBallonName_once != -1)
    dispatch_once(&taillessBallonName_once, &__block_literal_global_643);
  return (NSString *)(id)taillessBallonName_sBehavior;
}

void __34__CKUIBehavior_taillessBallonName__block_invoke()
{
  void *v0;

  v0 = (void *)taillessBallonName_sBehavior;
  taillessBallonName_sBehavior = (uint64_t)CFSTR("bubble-tailless");

}

- (NSString)skinnyBalloonName
{
  if (skinnyBalloonName_once != -1)
    dispatch_once(&skinnyBalloonName_once, &__block_literal_global_646);
  return (NSString *)(id)skinnyBalloonName_sBehavior;
}

void __33__CKUIBehavior_skinnyBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)skinnyBalloonName_sBehavior;
  skinnyBalloonName_sBehavior = (uint64_t)CFSTR("bubble-min");

}

- (NSString)skinnyTaillessBalloonName
{
  if (skinnyTaillessBalloonName_once != -1)
    dispatch_once(&skinnyTaillessBalloonName_once, &__block_literal_global_649);
  return (NSString *)(id)skinnyTaillessBalloonName_sBehavior;
}

void __41__CKUIBehavior_skinnyTaillessBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)skinnyTaillessBalloonName_sBehavior;
  skinnyTaillessBalloonName_sBehavior = (uint64_t)CFSTR("bubble-min-tailless");

}

- (NSString)strokedBalloonName
{
  if (strokedBalloonName_once != -1)
    dispatch_once(&strokedBalloonName_once, &__block_literal_global_652);
  return (NSString *)(id)strokedBalloonName_sBehavior;
}

void __34__CKUIBehavior_strokedBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)strokedBalloonName_sBehavior;
  strokedBalloonName_sBehavior = (uint64_t)CFSTR("bubble-stroked");

}

- (NSString)strokedTaillessBalloonName
{
  if (strokedTaillessBalloonName_once != -1)
    dispatch_once(&strokedTaillessBalloonName_once, &__block_literal_global_655);
  return (NSString *)(id)strokedTaillessBalloonName_sBehavior;
}

void __42__CKUIBehavior_strokedTaillessBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)strokedTaillessBalloonName_sBehavior;
  strokedTaillessBalloonName_sBehavior = (uint64_t)CFSTR("bubble-stroked-tailless");

}

- (id)impactBalloonName
{
  if (impactBalloonName_once != -1)
    dispatch_once(&impactBalloonName_once, &__block_literal_global_658);
  return (id)impactBalloonName_sBehavior;
}

void __33__CKUIBehavior_impactBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)impactBalloonName_sBehavior;
  impactBalloonName_sBehavior = (uint64_t)CFSTR("impact-bubble");

}

- (id)impactSkinnyBalloonName
{
  if (impactSkinnyBalloonName_once != -1)
    dispatch_once(&impactSkinnyBalloonName_once, &__block_literal_global_661);
  return (id)impactSkinnyBalloonName_sBehavior;
}

void __39__CKUIBehavior_impactSkinnyBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)impactSkinnyBalloonName_sBehavior;
  impactSkinnyBalloonName_sBehavior = (uint64_t)CFSTR("impact-bubble-min");

}

- (id)roundBalloonName
{
  if (roundBalloonName_once != -1)
    dispatch_once(&roundBalloonName_once, &__block_literal_global_664);
  return (id)roundBalloonName_sBehavior;
}

void __32__CKUIBehavior_roundBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)roundBalloonName_sBehavior;
  roundBalloonName_sBehavior = (uint64_t)CFSTR("ack-bubble");

}

- (id)multilineBalloonName
{
  if (multilineBalloonName_once != -1)
    dispatch_once(&multilineBalloonName_once, &__block_literal_global_667);
  return (id)multilineBalloonName_sBehavior;
}

void __36__CKUIBehavior_multilineBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)multilineBalloonName_sBehavior;
  multilineBalloonName_sBehavior = (uint64_t)CFSTR("bubble-multiline");

}

- (id)multilineTaillessBalloonName
{
  if (multilineTaillessBalloonName_once != -1)
    dispatch_once(&multilineTaillessBalloonName_once, &__block_literal_global_670);
  return (id)multilineTaillessBalloonName_sBehavior;
}

void __44__CKUIBehavior_multilineTaillessBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)multilineTaillessBalloonName_sBehavior;
  multilineTaillessBalloonName_sBehavior = (uint64_t)CFSTR("bubble-multiline-tailless");

}

- (id)multilineStrokedBalloonName
{
  if (multilineStrokedBalloonName_once != -1)
    dispatch_once(&multilineStrokedBalloonName_once, &__block_literal_global_673);
  return (id)multilineStrokedBalloonName_sBehavior;
}

void __43__CKUIBehavior_multilineStrokedBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)multilineStrokedBalloonName_sBehavior;
  multilineStrokedBalloonName_sBehavior = (uint64_t)CFSTR("bubble-stroked-multiline");

}

- (id)multilineStrokedTaillessBalloonName
{
  if (multilineStrokedTaillessBalloonName_once != -1)
    dispatch_once(&multilineStrokedTaillessBalloonName_once, &__block_literal_global_676);
  return (id)multilineStrokedTaillessBalloonName_sBehavior;
}

void __51__CKUIBehavior_multilineStrokedTaillessBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)multilineStrokedTaillessBalloonName_sBehavior;
  multilineStrokedTaillessBalloonName_sBehavior = (uint64_t)CFSTR("bubble-stroked-multiline-tailless");

}

- (id)replyBalloonName
{
  if (replyBalloonName_once != -1)
    dispatch_once(&replyBalloonName_once, &__block_literal_global_679);
  return (id)replyBalloonName_sBehavior;
}

void __32__CKUIBehavior_replyBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replyBalloonName_sBehavior;
  replyBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply");

}

- (id)replySkinnyBalloonName
{
  if (replySkinnyBalloonName_once != -1)
    dispatch_once(&replySkinnyBalloonName_once, &__block_literal_global_682_0);
  return (id)replySkinnyBalloonName_sBehavior;
}

void __38__CKUIBehavior_replySkinnyBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replySkinnyBalloonName_sBehavior;
  replySkinnyBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply-min");

}

- (id)replyMultilineBalloonName
{
  if (replyMultilineBalloonName_once != -1)
    dispatch_once(&replyMultilineBalloonName_once, &__block_literal_global_685);
  return (id)replyMultilineBalloonName_sBehavior;
}

void __41__CKUIBehavior_replyMultilineBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replyMultilineBalloonName_sBehavior;
  replyMultilineBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply-multiline");

}

- (id)replyStrokedBalloonName
{
  if (replyStrokedBalloonName_once != -1)
    dispatch_once(&replyStrokedBalloonName_once, &__block_literal_global_688);
  return (id)replyStrokedBalloonName_sBehavior;
}

void __39__CKUIBehavior_replyStrokedBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replyStrokedBalloonName_sBehavior;
  replyStrokedBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply-stroked");

}

- (id)replyStrokedSkinnyBalloonName
{
  if (replyStrokedSkinnyBalloonName_once != -1)
    dispatch_once(&replyStrokedSkinnyBalloonName_once, &__block_literal_global_691);
  return (id)replyStrokedSkinnyBalloonName_sBehavior;
}

void __45__CKUIBehavior_replyStrokedSkinnyBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replyStrokedSkinnyBalloonName_sBehavior;
  replyStrokedSkinnyBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply-stroked-min");

}

- (id)replyStrokedMultilineBalloonName
{
  if (replyStrokedMultilineBalloonName_once != -1)
    dispatch_once(&replyStrokedMultilineBalloonName_once, &__block_literal_global_694);
  return (id)replyStrokedMultilineBalloonName_sBehavior;
}

void __48__CKUIBehavior_replyStrokedMultilineBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replyStrokedMultilineBalloonName_sBehavior;
  replyStrokedMultilineBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply-stroked-multiline");

}

- (id)replyDeleteBalloonName
{
  if (replyDeleteBalloonName_once != -1)
    dispatch_once(&replyDeleteBalloonName_once, &__block_literal_global_697);
  return (id)replyDeleteBalloonName_sBehavior;
}

void __38__CKUIBehavior_replyDeleteBalloonName__block_invoke()
{
  void *v0;

  v0 = (void *)replyDeleteBalloonName_sBehavior;
  replyDeleteBalloonName_sBehavior = (uint64_t)CFSTR("bubble-reply-delete");

}

- (id)whiteChevronImage
{
  if (whiteChevronImage_once != -1)
    dispatch_once(&whiteChevronImage_once, &__block_literal_global_700);
  return (id)whiteChevronImage_sBehavior;
}

void __33__CKUIBehavior_whiteChevronImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  CKChevronImageWithColor(v2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)whiteChevronImage_sBehavior;
  whiteChevronImage_sBehavior = v0;

}

- (id)systemGrayChevronImage
{
  if (systemGrayChevronImage_once != -1)
    dispatch_once(&systemGrayChevronImage_once, &__block_literal_global_701);
  return (id)systemGrayChevronImage_sBehavior;
}

void __38__CKUIBehavior_systemGrayChevronImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemGrayColor");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  CKChevronImageWithColor(v2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)systemGrayChevronImage_sBehavior;
  systemGrayChevronImage_sBehavior = v0;

}

- (id)multiwayGrayChevronImage
{
  if (multiwayGrayChevronImage_once != -1)
    dispatch_once(&multiwayGrayChevronImage_once, &__block_literal_global_702);
  return (id)multiwayGrayChevronImage_sBehavior;
}

void __40__CKUIBehavior_multiwayGrayChevronImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.819607843, 0.819607843, 0.835294118, 1.0);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  CKChevronImageWithColor(v2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)multiwayGrayChevronImage_sBehavior;
  multiwayGrayChevronImage_sBehavior = v0;

}

- (id)chevronImageForColorType:(char)a3
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  switch(a3)
  {
    case -1:
      -[CKUIBehavior gray_chevronImage](self, "gray_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 0:
      -[CKUIBehavior green_chevronImage](self, "green_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 1:
      -[CKUIBehavior blue_chevronImage](self, "blue_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 2:
      -[CKUIBehavior siri_chevronImage](self, "siri_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 3:
      -[CKUIBehavior red_chevronImage](self, "red_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 4:
      -[CKUIBehavior white_chevronImage](self, "white_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 5:
      -[CKUIBehavior black_chevronImage](self, "black_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 6:
      -[CKUIBehavior business_chevronImage](self, "business_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 7:
      -[CKUIBehavior multiway_chevronImage](self, "multiway_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 8:
      -[CKUIBehavior background_chevronImage](self, "background_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 9:
      -[CKUIBehavior reply_gray_chevronImage](self, "reply_gray_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 10:
      -[CKUIBehavior reply_blue_chevronImage](self, "reply_blue_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 11:
      -[CKUIBehavior reply_green_chevronImage](self, "reply_green_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 12:
      -[CKUIBehavior stewie_chevronImage](self, "stewie_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 13:
      -[CKUIBehavior message_editing_black_chevronImage](self, "message_editing_black_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 14:
      -[CKUIBehavior opaque_orb_gray_chevronImage](self, "opaque_orb_gray_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 15:
      -[CKUIBehavior pending_blue_chevronImage](self, "pending_blue_chevronImage", v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      v5 = 0;
      break;
  }
  return v5;
}

- (id)gray_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __33__CKUIBehavior_gray_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (gray_chevronImage_once != -1)
    dispatch_once(&gray_chevronImage_once, block);
  return (id)gray_chevronImage_sBehavior;
}

void __33__CKUIBehavior_gray_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)gray_chevronImage_sBehavior;
  gray_chevronImage_sBehavior = v1;

}

- (id)opaque_orb_gray_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __44__CKUIBehavior_opaque_orb_gray_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (opaque_orb_gray_chevronImage_once != -1)
    dispatch_once(&opaque_orb_gray_chevronImage_once, block);
  return (id)opaque_orb_gray_chevronImage_sBehavior;
}

void __44__CKUIBehavior_opaque_orb_gray_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)opaque_orb_gray_chevronImage_sBehavior;
  opaque_orb_gray_chevronImage_sBehavior = v1;

}

- (id)green_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __34__CKUIBehavior_green_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (green_chevronImage_once != -1)
    dispatch_once(&green_chevronImage_once, block);
  return (id)green_chevronImage_sBehavior;
}

void __34__CKUIBehavior_green_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)green_chevronImage_sBehavior;
  green_chevronImage_sBehavior = v1;

}

- (id)blue_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __33__CKUIBehavior_blue_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (blue_chevronImage_once != -1)
    dispatch_once(&blue_chevronImage_once, block);
  return (id)blue_chevronImage_sBehavior;
}

void __33__CKUIBehavior_blue_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)blue_chevronImage_sBehavior;
  blue_chevronImage_sBehavior = v1;

}

- (id)siri_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __33__CKUIBehavior_siri_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (siri_chevronImage_once != -1)
    dispatch_once(&siri_chevronImage_once, block);
  return (id)siri_chevronImage_sBehavior;
}

void __33__CKUIBehavior_siri_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)siri_chevronImage_sBehavior;
  siri_chevronImage_sBehavior = v1;

}

- (id)red_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __32__CKUIBehavior_red_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (red_chevronImage_once != -1)
    dispatch_once(&red_chevronImage_once, block);
  return (id)red_chevronImage_sBehavior;
}

void __32__CKUIBehavior_red_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)red_chevronImage_sBehavior;
  red_chevronImage_sBehavior = v1;

}

- (id)white_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __34__CKUIBehavior_white_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (white_chevronImage_once != -1)
    dispatch_once(&white_chevronImage_once, block);
  return (id)white_chevronImage_sBehavior;
}

void __34__CKUIBehavior_white_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)white_chevronImage_sBehavior;
  white_chevronImage_sBehavior = v1;

}

- (id)black_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __34__CKUIBehavior_black_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (black_chevronImage_once != -1)
    dispatch_once(&black_chevronImage_once, block);
  return (id)black_chevronImage_sBehavior;
}

void __34__CKUIBehavior_black_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)black_chevronImage_sBehavior;
  black_chevronImage_sBehavior = v1;

}

- (id)business_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_business_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (business_chevronImage_once != -1)
    dispatch_once(&business_chevronImage_once, block);
  return (id)business_chevronImage_sBehavior;
}

void __37__CKUIBehavior_business_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)business_chevronImage_sBehavior;
  business_chevronImage_sBehavior = v1;

}

- (id)multiway_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_multiway_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (multiway_chevronImage_once != -1)
    dispatch_once(&multiway_chevronImage_once, block);
  return (id)multiway_chevronImage_sBehavior;
}

void __37__CKUIBehavior_multiway_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "multiwayGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)multiway_chevronImage_sBehavior;
  multiway_chevronImage_sBehavior = v1;

}

- (id)background_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_background_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (background_chevronImage_once != -1)
    dispatch_once(&background_chevronImage_once, block);
  return (id)background_chevronImage_sBehavior;
}

void __39__CKUIBehavior_background_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "whiteChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)background_chevronImage_sBehavior;
  background_chevronImage_sBehavior = v1;

}

- (id)message_editing_black_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __50__CKUIBehavior_message_editing_black_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (message_editing_black_chevronImage_once != -1)
    dispatch_once(&message_editing_black_chevronImage_once, block);
  return (id)message_editing_black_chevronImage_sBehavior;
}

void __50__CKUIBehavior_message_editing_black_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)message_editing_black_chevronImage_sBehavior;
  message_editing_black_chevronImage_sBehavior = v1;

}

- (id)reply_gray_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_reply_gray_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (reply_gray_chevronImage_once != -1)
    dispatch_once(&reply_gray_chevronImage_once, block);
  return (id)reply_gray_chevronImage_sBehavior;
}

void __39__CKUIBehavior_reply_gray_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)reply_gray_chevronImage_sBehavior;
  reply_gray_chevronImage_sBehavior = v1;

}

- (id)reply_blue_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_reply_blue_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (reply_blue_chevronImage_once != -1)
    dispatch_once(&reply_blue_chevronImage_once, block);
  return (id)reply_blue_chevronImage_sBehavior;
}

void __39__CKUIBehavior_reply_blue_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)reply_blue_chevronImage_sBehavior;
  reply_blue_chevronImage_sBehavior = v1;

}

- (id)reply_green_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __40__CKUIBehavior_reply_green_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (reply_green_chevronImage_once != -1)
    dispatch_once(&reply_green_chevronImage_once, block);
  return (id)reply_green_chevronImage_sBehavior;
}

void __40__CKUIBehavior_reply_green_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)reply_green_chevronImage_sBehavior;
  reply_green_chevronImage_sBehavior = v1;

}

- (id)stewie_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __35__CKUIBehavior_stewie_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (stewie_chevronImage_once != -1)
    dispatch_once(&stewie_chevronImage_once, block);
  return (id)stewie_chevronImage_sBehavior;
}

void __35__CKUIBehavior_stewie_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)stewie_chevronImage_sBehavior;
  stewie_chevronImage_sBehavior = v1;

}

- (id)pending_blue_chevronImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __41__CKUIBehavior_pending_blue_chevronImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (pending_blue_chevronImage_once != -1)
    dispatch_once(&pending_blue_chevronImage_once, block);
  return (id)pending_blue_chevronImage_sBehavior;
}

void __41__CKUIBehavior_pending_blue_chevronImage__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "systemGrayChevronImage");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)pending_blue_chevronImage_sBehavior;
  pending_blue_chevronImage_sBehavior = v1;

}

- (id)imageNameForBalloonDescriptorWithFilledStyle:(CKBalloonDescriptor_t *)a3
{
  int var10;
  void *v4;

  var10 = a3->var10;
  if (a3->var10)
    var10 = a3->var1;
  switch(a3->var0)
  {
    case 0:
      if (var10 != 1)
      {
        if (var10)
          goto LABEL_22;
        if (a3->var12)
          -[CKUIBehavior multilineTaillessBalloonName](self, "multilineTaillessBalloonName");
        else
          -[CKUIBehavior taillessBallonName](self, "taillessBallonName");
        goto LABEL_32;
      }
      if (!a3->var11)
      {
        if (a3->var12)
          -[CKUIBehavior multilineBalloonName](self, "multilineBalloonName");
        else
          -[CKUIBehavior balloonName](self, "balloonName");
        goto LABEL_32;
      }
      -[CKUIBehavior impactBalloonName](self, "impactBalloonName");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 1:
      if (var10 != 1)
        goto LABEL_13;
      if (!a3->var11)
        goto LABEL_24;
      -[CKUIBehavior impactSkinnyBalloonName](self, "impactSkinnyBalloonName");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 2:
      if (var10 == 2)
      {
        -[CKUIBehavior roundBalloonName](self, "roundBalloonName");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else if (var10 == 1)
      {
LABEL_24:
        -[CKUIBehavior skinnyBalloonName](self, "skinnyBalloonName");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
LABEL_13:
        if (var10)
          goto LABEL_22;
        -[CKUIBehavior skinnyTaillessBalloonName](self, "skinnyTaillessBalloonName");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
      }
      break;
    case 3:
      if (var10 != 1)
        goto LABEL_22;
      if (a3->var12)
        -[CKUIBehavior replyMultilineBalloonName](self, "replyMultilineBalloonName");
      else
        -[CKUIBehavior replyBalloonName](self, "replyBalloonName");
LABEL_32:
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 4:
      if (var10 != 1)
        goto LABEL_22;
      -[CKUIBehavior replySkinnyBalloonName](self, "replySkinnyBalloonName");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 5:
      if (var10 != 1)
        goto LABEL_22;
      -[CKUIBehavior replyDeleteBalloonName](self, "replyDeleteBalloonName");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
LABEL_22:
      v4 = 0;
      break;
  }
  return v4;
}

- (id)imageNameForBalloonDescriptorWithStrokedStyle:(CKBalloonDescriptor_t *)a3
{
  int var0;
  void *v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[5];

  var0 = a3->var0;
  if (var0 == 4)
  {
    -[CKUIBehavior replyStrokedSkinnyBalloonName](self, "replyStrokedSkinnyBalloonName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    return v6;
  }
  if (var0 == 3)
  {
    if (a3->var12)
      -[CKUIBehavior replyStrokedMultilineBalloonName](self, "replyStrokedMultilineBalloonName");
    else
      -[CKUIBehavior replyStrokedBalloonName](self, "replyStrokedBalloonName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    return v6;
  }
  if (a3->var0)
    goto LABEL_19;
  if (!a3->var10)
    goto LABEL_7;
  if (a3->var1 == 1)
  {
    if (!a3->var12)
    {
      -[CKUIBehavior strokedBalloonName](self, "strokedBalloonName");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
        return v6;
      goto LABEL_19;
    }
    -[CKUIBehavior multilineStrokedBalloonName](self, "multilineStrokedBalloonName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
      return v6;
LABEL_19:
    v7 = *(_OWORD *)&a3->var6.alpha;
    v10[2] = *(_OWORD *)&a3->var6.green;
    v10[3] = v7;
    v10[4] = *(_OWORD *)&a3->var8;
    v8 = *(_OWORD *)&a3->var5;
    v10[0] = *(_OWORD *)&a3->var0;
    v10[1] = v8;
    -[CKUIBehavior imageNameForBalloonDescriptorWithFilledStyle:](self, "imageNameForBalloonDescriptorWithFilledStyle:", v10);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    return v6;
  }
  if (a3->var1)
    goto LABEL_19;
LABEL_7:
  if (a3->var12)
  {
    -[CKUIBehavior multilineStrokedTaillessBalloonName](self, "multilineStrokedTaillessBalloonName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v6)
      goto LABEL_19;
  }
  else
  {
    -[CKUIBehavior strokedTaillessBalloonName](self, "strokedTaillessBalloonName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v6)
      goto LABEL_19;
  }
  return v6;
}

- (id)imageNameForBalloonDescriptor:(CKBalloonDescriptor_t *)a3
{
  void *v3;
  int var2;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = 0;
  var2 = a3->var2;
  if ((var2 - 2) < 3)
    return v3;
  if (var2 == 1)
  {
    v9 = *(_OWORD *)&a3->var6.alpha;
    v15 = *(_OWORD *)&a3->var6.green;
    v16 = v9;
    v17 = *(_OWORD *)&a3->var8;
    v10 = *(_OWORD *)&a3->var5;
    v13 = *(_OWORD *)&a3->var0;
    v14 = v10;
    -[CKUIBehavior imageNameForBalloonDescriptorWithStrokedStyle:](self, "imageNameForBalloonDescriptorWithStrokedStyle:", &v13);
    v8 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a3->var2)
      goto LABEL_7;
    v6 = *(_OWORD *)&a3->var6.alpha;
    v15 = *(_OWORD *)&a3->var6.green;
    v16 = v6;
    v17 = *(_OWORD *)&a3->var8;
    v7 = *(_OWORD *)&a3->var5;
    v13 = *(_OWORD *)&a3->var0;
    v14 = v7;
    -[CKUIBehavior imageNameForBalloonDescriptorWithFilledStyle:](self, "imageNameForBalloonDescriptorWithFilledStyle:", &v13);
    v8 = objc_claimAutoreleasedReturnValue();
  }
  v3 = (void *)v8;
LABEL_7:
  if (-[CKUIBehavior isAccessibilityPreferredContentSizeCategory](self, "isAccessibilityPreferredContentSizeCategory"))
  {
    objc_msgSend(v3, "stringByAppendingString:", CFSTR("-ax"));
    v11 = objc_claimAutoreleasedReturnValue();

    v3 = (void *)v11;
  }
  return v3;
}

- (CGSize)thumbnailSizeForAppIconInCollaborationLinks
{
  double v2;
  double v3;
  CGSize result;

  if (thumbnailSizeForAppIconInCollaborationLinks_once != -1)
    dispatch_once(&thumbnailSizeForAppIconInCollaborationLinks_once, &__block_literal_global_705);
  v2 = *(double *)&thumbnailSizeForAppIconInCollaborationLinks_sBehavior_0;
  v3 = *(double *)&thumbnailSizeForAppIconInCollaborationLinks_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __59__CKUIBehavior_thumbnailSizeForAppIconInCollaborationLinks__block_invoke()
{
  thumbnailSizeForAppIconInCollaborationLinks_sBehavior_0 = 0x4072C00000000000;
  thumbnailSizeForAppIconInCollaborationLinks_sBehavior_1 = 0x4072C00000000000;
}

- (CGSize)locationOfferMapThumbnailFillSizeForWidth:(double)a3
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGSize result;

  -[CKUIBehavior mapThumbnailFillSizeForWidth:](self, "mapThumbnailFillSizeForWidth:", a3);
  v5 = v4;
  v7 = v6;
  -[CKUIBehavior locationShareBalloonAdditionalVertPadding](self, "locationShareBalloonAdditionalVertPadding");
  v9 = (double)(int)(v7 + v8);
  v10 = v5;
  result.height = v9;
  result.width = v10;
  return result;
}

- (double)locationShareBalloonButtonHeight
{
  if (locationShareBalloonButtonHeight_once != -1)
    dispatch_once(&locationShareBalloonButtonHeight_once, &__block_literal_global_706);
  return *(double *)&locationShareBalloonButtonHeight_sBehavior;
}

void __48__CKUIBehavior_locationShareBalloonButtonHeight__block_invoke()
{
  locationShareBalloonButtonHeight_sBehavior = 0x4046000000000000;
}

- (double)locationShareBalloonMaxVisibleMapHeight
{
  if (locationShareBalloonMaxVisibleMapHeight_once != -1)
    dispatch_once(&locationShareBalloonMaxVisibleMapHeight_once, &__block_literal_global_707);
  return *(double *)&locationShareBalloonMaxVisibleMapHeight_sBehavior;
}

void __55__CKUIBehavior_locationShareBalloonMaxVisibleMapHeight__block_invoke()
{
  locationShareBalloonMaxVisibleMapHeight_sBehavior = 0x4069000000000000;
}

- (double)locationShareBalloonLabelPadding
{
  if (locationShareBalloonLabelPadding_once != -1)
    dispatch_once(&locationShareBalloonLabelPadding_once, &__block_literal_global_708);
  return *(double *)&locationShareBalloonLabelPadding_sBehavior;
}

void __48__CKUIBehavior_locationShareBalloonLabelPadding__block_invoke()
{
  locationShareBalloonLabelPadding_sBehavior = 0x4024000000000000;
}

- (double)locationShareBalloonAdditionalVertPadding
{
  if (locationShareBalloonAdditionalVertPadding_once != -1)
    dispatch_once(&locationShareBalloonAdditionalVertPadding_once, &__block_literal_global_709);
  return *(double *)&locationShareBalloonAdditionalVertPadding_sBehavior;
}

void __57__CKUIBehavior_locationShareBalloonAdditionalVertPadding__block_invoke()
{
  locationShareBalloonAdditionalVertPadding_sBehavior = 0x4024000000000000;
}

- (double)locationShareBalloonContactImageDiameter
{
  if (locationShareBalloonContactImageDiameter_once != -1)
    dispatch_once(&locationShareBalloonContactImageDiameter_once, &__block_literal_global_710);
  return *(double *)&locationShareBalloonContactImageDiameter_sBehavior;
}

void __56__CKUIBehavior_locationShareBalloonContactImageDiameter__block_invoke()
{
  locationShareBalloonContactImageDiameter_sBehavior = 0x4036000000000000;
}

- (double)locationShareBalloonLabelMaxHeightForOfferState:(int64_t)a3
{
  uint64_t v3;
  uint64_t v4;
  double result;
  double v6;

  result = 22.0;
  if ((unint64_t)(a3 - 1) >= 2)
  {
    if (a3)
    {
      return 0.0;
    }
    else
    {
      -[CKUIBehavior locationShareBalloonAdditionalVertPadding](self, "locationShareBalloonAdditionalVertPadding", 22.0, v3, v4);
      return v6 + 44.0;
    }
  }
  return result;
}

- (CGSize)locationShareBalloonSizeForWidth:(double)a3 offerState:(int64_t)a4
{
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGSize result;

  -[CKUIBehavior locationOfferMapThumbnailFillSizeForWidth:](self, "locationOfferMapThumbnailFillSizeForWidth:", a3);
  v7 = v6;
  v9 = v8;
  if (a4 == 1)
  {
    *(double *)&v10 = 44.0;
    goto LABEL_5;
  }
  if (a4 == 2)
  {
    *(double *)&v10 = 58.0;
LABEL_5:
    v11 = *(double *)&v10;
    -[CKUIBehavior locationShareBalloonAdditionalVertPadding](self, "locationShareBalloonAdditionalVertPadding");
    v9 = v9 - (v12 + v11);
  }
  v13 = v7;
  v14 = v9;
  result.height = v14;
  result.width = v13;
  return result;
}

- (Class)audioBalloonViewClass
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_audioBalloonViewClass__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (audioBalloonViewClass_once != -1)
    dispatch_once(&audioBalloonViewClass_once, block);
  return (Class)(id)audioBalloonViewClass_sBehavior;
}

uint64_t __37__CKUIBehavior_audioBalloonViewClass__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "audioBalloonClass");
  audioBalloonViewClass_sBehavior = result;
  return result;
}

- (Class)audioBalloonClass
{
  void *v2;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "isRichAudioMessagesEnabled");

  objc_opt_class();
  return (Class)(id)objc_claimAutoreleasedReturnValue();
}

- (Class)audioBalloonCellClass
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_audioBalloonCellClass__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (audioBalloonCellClass_once != -1)
    dispatch_once(&audioBalloonCellClass_once, block);
  return (Class)(id)audioBalloonCellClass_sBehavior;
}

uint64_t __37__CKUIBehavior_audioBalloonCellClass__block_invoke(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "isProximityMonitoringSupported");
  result = objc_opt_class();
  audioBalloonCellClass_sBehavior = result;
  return result;
}

- (Class)contactBalloonViewClass
{
  if (contactBalloonViewClass_once != -1)
    dispatch_once(&contactBalloonViewClass_once, &__block_literal_global_716);
  return (Class)(id)contactBalloonViewClass_sBehavior;
}

uint64_t __39__CKUIBehavior_contactBalloonViewClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  contactBalloonViewClass_sBehavior = result;
  return result;
}

- (BOOL)shouldFillAndStrokeAttachmentBalloon
{
  if (shouldFillAndStrokeAttachmentBalloon_once != -1)
    dispatch_once(&shouldFillAndStrokeAttachmentBalloon_once, &__block_literal_global_718);
  return 0;
}

- (char)attachmentBalloonFillColor
{
  if (attachmentBalloonFillColor_once != -1)
    dispatch_once(&attachmentBalloonFillColor_once, &__block_literal_global_719);
  if (attachmentBalloonFillColor_sBehavior)
    return 8;
  else
    return 0;
}

void __42__CKUIBehavior_attachmentBalloonFillColor__block_invoke()
{
  attachmentBalloonFillColor_sBehavior = 1;
}

- (char)attachmentBalloonStrokeColor
{
  if (attachmentBalloonStrokeColor_once != -1)
    dispatch_once(&attachmentBalloonStrokeColor_once, &__block_literal_global_720);
  return attachmentBalloonStrokeColor_sBehavior << 31 >> 31;
}

void __44__CKUIBehavior_attachmentBalloonStrokeColor__block_invoke()
{
  attachmentBalloonStrokeColor_sBehavior = 1;
}

- (BOOL)calculatesWidthForAttachmentBalloons
{
  if (calculatesWidthForAttachmentBalloons_once != -1)
    dispatch_once(&calculatesWidthForAttachmentBalloons_once, &__block_literal_global_721);
  return 0;
}

- (BOOL)showsFileSizeInSubtitle
{
  if (showsFileSizeInSubtitle_once != -1)
    dispatch_once(&showsFileSizeInSubtitle_once, &__block_literal_global_722);
  return 0;
}

- (BOOL)showsVCalViewer
{
  if (showsVCalViewer_once != -1)
    dispatch_once(&showsVCalViewer_once, &__block_literal_global_723);
  return showsVCalViewer_sBehavior;
}

void __31__CKUIBehavior_showsVCalViewer__block_invoke()
{
  showsVCalViewer_sBehavior = 1;
}

- (BOOL)useSingleLineForContactVCardNames
{
  if (useSingleLineForContactVCardNames_once != -1)
    dispatch_once(&useSingleLineForContactVCardNames_once, &__block_literal_global_724);
  return useSingleLineForContactVCardNames_sBehavior;
}

void __49__CKUIBehavior_useSingleLineForContactVCardNames__block_invoke()
{
  useSingleLineForContactVCardNames_sBehavior = 1;
}

- (BOOL)playButtonPunchesOutArrow
{
  if (playButtonPunchesOutArrow_once != -1)
    dispatch_once(&playButtonPunchesOutArrow_once, &__block_literal_global_725);
  return playButtonPunchesOutArrow_sBehavior;
}

void __41__CKUIBehavior_playButtonPunchesOutArrow__block_invoke()
{
  playButtonPunchesOutArrow_sBehavior = 1;
}

- (BOOL)supportsPassbookAttachments
{
  if (supportsPassbookAttachments_once != -1)
    dispatch_once(&supportsPassbookAttachments_once, &__block_literal_global_726);
  return supportsPassbookAttachments_sBehavior;
}

uint64_t __43__CKUIBehavior_supportsPassbookAttachments__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  supportsPassbookAttachments_sBehavior = result;
  return result;
}

- (double)waveformMaxWidthDuration
{
  if (waveformMaxWidthDuration_once != -1)
    dispatch_once(&waveformMaxWidthDuration_once, &__block_literal_global_729);
  return *(double *)&waveformMaxWidthDuration_sBehavior;
}

void __40__CKUIBehavior_waveformMaxWidthDuration__block_invoke()
{
  waveformMaxWidthDuration_sBehavior = 0x4034000000000000;
}

- (unint64_t)waveformMaxPowerLevelsCount
{
  if (waveformMaxPowerLevelsCount_once != -1)
    dispatch_once(&waveformMaxPowerLevelsCount_once, &__block_literal_global_730);
  if (waveformMaxPowerLevelsCount_sBehavior)
    return 50;
  else
    return 0;
}

void __43__CKUIBehavior_waveformMaxPowerLevelsCount__block_invoke()
{
  waveformMaxPowerLevelsCount_sBehavior = 1;
}

- (unint64_t)waveformMinPowerLevelsCount
{
  if (waveformMinPowerLevelsCount_once != -1)
    dispatch_once(&waveformMinPowerLevelsCount_once, &__block_literal_global_731);
  if (waveformMinPowerLevelsCount_sBehavior)
    return 25;
  else
    return 0;
}

void __43__CKUIBehavior_waveformMinPowerLevelsCount__block_invoke()
{
  waveformMinPowerLevelsCount_sBehavior = 1;
}

- (double)waveformMinDbPowerLevel
{
  if (waveformMinDbPowerLevel_once != -1)
    dispatch_once(&waveformMinDbPowerLevel_once, &__block_literal_global_732);
  return *(double *)&waveformMinDbPowerLevel_sBehavior;
}

void __39__CKUIBehavior_waveformMinDbPowerLevel__block_invoke()
{
  waveformMinDbPowerLevel_sBehavior = 0xC049000000000000;
}

- (double)waveformMinLinearPowerLevel
{
  if (waveformMinLinearPowerLevel_once != -1)
    dispatch_once(&waveformMinLinearPowerLevel_once, &__block_literal_global_733);
  return *(double *)&waveformMinLinearPowerLevel_sBehavior;
}

void __43__CKUIBehavior_waveformMinLinearPowerLevel__block_invoke()
{
  waveformMinLinearPowerLevel_sBehavior = 0x403E000000000000;
}

- (int64_t)playButtonBackdropStyle
{
  if (playButtonBackdropStyle_once != -1)
    dispatch_once(&playButtonBackdropStyle_once, &__block_literal_global_734_0);
  if (playButtonBackdropStyle_sBehavior)
    return 2020;
  else
    return 0;
}

void __39__CKUIBehavior_playButtonBackdropStyle__block_invoke()
{
  playButtonBackdropStyle_sBehavior = 1;
}

- (UIEdgeInsets)quickActionPinButtonImageInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (quickActionPinButtonImageInsets_once != -1)
    dispatch_once(&quickActionPinButtonImageInsets_once, &__block_literal_global_735);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (UIEdgeInsets)quickActionSaveButtonImageInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (quickActionSaveButtonImageInsets_once != -1)
    dispatch_once(&quickActionSaveButtonImageInsets_once, &__block_literal_global_736);
  v2 = *(double *)&quickActionSaveButtonImageInsets_sBehavior_2;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v2;
  result.left = v4;
  result.top = v3;
  return result;
}

void __48__CKUIBehavior_quickActionSaveButtonImageInsets__block_invoke()
{
  quickActionSaveButtonImageInsets_sBehavior_2 = 0x4008000000000000;
}

- (CGSize)documentIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (documentIconSize_once != -1)
    dispatch_once(&documentIconSize_once, &__block_literal_global_737);
  v2 = *(double *)&documentIconSize_sBehavior_0;
  v3 = *(double *)&documentIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __32__CKUIBehavior_documentIconSize__block_invoke()
{
  documentIconSize_sBehavior_0 = 0x403F000000000000;
  documentIconSize_sBehavior_1 = 0x4042800000000000;
}

- (CGSize)attachmentBalloonSize
{
  double v2;
  double v3;
  CGSize result;

  if (attachmentBalloonSize_once != -1)
    dispatch_once(&attachmentBalloonSize_once, &__block_literal_global_738);
  v2 = *(double *)&attachmentBalloonSize_sBehavior_0;
  v3 = *(double *)&attachmentBalloonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

double __37__CKUIBehavior_attachmentBalloonSize__block_invoke()
{
  double v0;
  double v1;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  v1 = ceil(v0 * 187.0) / v0;
  result = ceil(v0 * 124.5) / v0;
  attachmentBalloonSize_sBehavior_0 = *(_QWORD *)&v1;
  attachmentBalloonSize_sBehavior_1 = *(_QWORD *)&result;
  return result;
}

- (UIEdgeInsets)attachmentBalloonRichIconInsets
{
  NSString *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  NSComparisonResult v9;
  uint64_t *v10;
  __CFString *v11;
  uint64_t *v12;
  void *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  BOOL v23;
  char v24;
  __CFString *obj;
  UIEdgeInsets result;

  CKPreferredContentSizeCategory();
  v2 = (NSString *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  v9 = UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)attachmentBalloonRichIconInsets_sContentSizeCategory_attachmentBalloonRichIconInsets, v2);
  v10 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont;
  if (v9
    || attachmentBalloonRichIconInsets_sIsBoldTextEnabled_attachmentBalloonRichIconInsets != IsBoldTextEnabled
    || (*(double *)&attachmentBalloonRichIconInsets_sTextFontSize_attachmentBalloonRichIconInsets == v4
      ? (v23 = *(double *)&attachmentBalloonRichIconInsets_sCustomTextFontSize_attachmentBalloonRichIconInsets == v5)
      : (v23 = 0),
        !v23
     || (v24 = objc_msgSend((id)attachmentBalloonRichIconInsets_sCustomTextFontName_attachmentBalloonRichIconInsets, "isEqualToString:", v8, *(double *)&attachmentBalloonRichIconInsets_sTextFontSize_attachmentBalloonRichIconInsets, *(double *)&attachmentBalloonRichIconInsets_sCustomTextFontSize_attachmentBalloonRichIconInsets), v10 = &conversationListSenderFont_sCustomTextFontName_conversationListSenderFont, (v24 & 1) == 0)))
  {
    obj = v7;
    v11 = v6;
    v12 = v10;
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548]);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "lineHeight");
    *(double *)&attachmentBalloonRichIconInsets_sBehavior_0 = v14 + 16.0;
    attachmentBalloonRichIconInsets_sBehavior_1 = 0x4030000000000000;
    *(double *)&attachmentBalloonRichIconInsets_sBehavior_2 = v14 + 16.0;
    attachmentBalloonRichIconInsets_sBehavior_3 = 0x4030000000000000;

    objc_storeStrong((id *)&attachmentBalloonRichIconInsets_sContentSizeCategory_attachmentBalloonRichIconInsets, v2);
    attachmentBalloonRichIconInsets_sIsBoldTextEnabled_attachmentBalloonRichIconInsets = IsBoldTextEnabled;
    *((double *)v12 + 400) = v4;
    v6 = v11;
    attachmentBalloonRichIconInsets_sCustomTextFontSize_attachmentBalloonRichIconInsets = *(_QWORD *)&v5;
    objc_storeStrong((id *)&attachmentBalloonRichIconInsets_sCustomTextFontName_attachmentBalloonRichIconInsets, obj);
  }
  v15 = attachmentBalloonRichIconInsets_sBehavior_0;
  v16 = attachmentBalloonRichIconInsets_sBehavior_1;
  v17 = attachmentBalloonRichIconInsets_sBehavior_2;
  v18 = attachmentBalloonRichIconInsets_sBehavior_3;

  v19 = *(double *)&v15;
  v20 = *(double *)&v16;
  v21 = *(double *)&v17;
  v22 = *(double *)&v18;
  result.right = v22;
  result.bottom = v21;
  result.left = v20;
  result.top = v19;
  return result;
}

- (CGSize)contactImageSize
{
  double v2;
  double v3;
  CGSize result;

  if (contactImageSize_once != -1)
    dispatch_once(&contactImageSize_once, &__block_literal_global_739);
  v2 = *(double *)&contactImageSize_sBehavior_0;
  v3 = *(double *)&contactImageSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __32__CKUIBehavior_contactImageSize__block_invoke()
{
  contactImageSize_sBehavior_0 = 0x4040000000000000;
  contactImageSize_sBehavior_1 = 0x4040000000000000;
}

- (double)contactBalloonInnerItemSpacing
{
  if (contactBalloonInnerItemSpacing_once != -1)
    dispatch_once(&contactBalloonInnerItemSpacing_once, &__block_literal_global_740);
  return *(double *)&contactBalloonInnerItemSpacing_sBehavior;
}

void __46__CKUIBehavior_contactBalloonInnerItemSpacing__block_invoke()
{
  contactBalloonInnerItemSpacing_sBehavior = 0x4024000000000000;
}

- (double)contactBalloonMinWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __38__CKUIBehavior_contactBalloonMinWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (contactBalloonMinWidth_once != -1)
    dispatch_once(&contactBalloonMinWidth_once, block);
  return *(double *)&contactBalloonMinWidth_sBehavior;
}

uint64_t __38__CKUIBehavior_contactBalloonMinWidth__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "attachmentBalloonSize");
  contactBalloonMinWidth_sBehavior = v2;
  return result;
}

- (double)contactBalloonHeight
{
  if (contactBalloonHeight_once != -1)
    dispatch_once(&contactBalloonHeight_once, &__block_literal_global_741);
  return *(double *)&contactBalloonHeight_sBehavior;
}

double __36__CKUIBehavior_contactBalloonHeight__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = ceil(v0 * 58.5) / v0;
  contactBalloonHeight_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)contactBalloonTopNameSpacing
{
  if (contactBalloonTopNameSpacing_once != -1)
    dispatch_once(&contactBalloonTopNameSpacing_once, &__block_literal_global_742);
  return 0.0;
}

- (double)contactBalloonNameOrgSpacing
{
  if (contactBalloonNameOrgSpacing_once != -1)
    dispatch_once(&contactBalloonNameOrgSpacing_once, &__block_literal_global_743_0);
  return 0.0;
}

- (double)contactBalloonOrgBottomSpacing
{
  if (contactBalloonOrgBottomSpacing_once != -1)
    dispatch_once(&contactBalloonOrgBottomSpacing_once, &__block_literal_global_744);
  return 0.0;
}

- (UIEdgeInsets)linkPreviewSendLaterInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (linkPreviewSendLaterInsets_once != -1)
    dispatch_once(&linkPreviewSendLaterInsets_once, &__block_literal_global_745);
  v2 = *(double *)&linkPreviewSendLaterInsets_sBehavior_0;
  v3 = *(double *)&linkPreviewSendLaterInsets_sBehavior_1;
  v4 = *(double *)&linkPreviewSendLaterInsets_sBehavior_2;
  v5 = *(double *)&linkPreviewSendLaterInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __42__CKUIBehavior_linkPreviewSendLaterInsets__block_invoke()
{
  linkPreviewSendLaterInsets_sBehavior_0 = 0x4014000000000000;
  linkPreviewSendLaterInsets_sBehavior_1 = 0x4014000000000000;
  linkPreviewSendLaterInsets_sBehavior_2 = 0x4014000000000000;
  linkPreviewSendLaterInsets_sBehavior_3 = 0x4014000000000000;
}

- (UIEdgeInsets)imageSendLaterInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (imageSendLaterInsets_once != -1)
    dispatch_once(&imageSendLaterInsets_once, &__block_literal_global_746);
  v2 = *(double *)&imageSendLaterInsets_sBehavior_0;
  v3 = *(double *)&imageSendLaterInsets_sBehavior_1;
  v4 = *(double *)&imageSendLaterInsets_sBehavior_2;
  v5 = *(double *)&imageSendLaterInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __36__CKUIBehavior_imageSendLaterInsets__block_invoke()
{
  imageSendLaterInsets_sBehavior_0 = 0x4014000000000000;
  imageSendLaterInsets_sBehavior_1 = 0x4014000000000000;
  imageSendLaterInsets_sBehavior_2 = 0x4014000000000000;
  imageSendLaterInsets_sBehavior_3 = 0x4014000000000000;
}

- (CGSize)_heightClampedScaleWithAspectRatio:(double)a3 width:(double)a4 imageSize:(CGSize)a5
{
  double height;
  double width;
  _BOOL4 v9;
  _BOOL4 v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGSize result;

  height = a5.height;
  width = a5.width;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v9 = a4 / a3 > 500.0;
  v10 = height > width;
  if (v9 && v10)
    v11 = 500.0;
  else
    v11 = a4 / a3;
  v12 = a3 * 500.0;
  if (!v9 || !v10)
    v12 = a4;
  v13 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v13 = 1.0;
  v14 = ceil(v12 * v13) / v13;
  v15 = ceil(v11 * v13) / v13;
  result.height = v15;
  result.width = v14;
  return result;
}

- (CGSize)unconstrainedAspectFillSizeForWidth:(double)a3 imageSize:(CGSize)a4
{
  double height;
  double width;
  double v7;
  double v8;
  double v9;
  CGSize result;

  height = a4.height;
  width = a4.width;
  v7 = width / height;
  if (height == 0.0)
    v7 = 0.0;
  -[CKUIBehavior _heightClampedScaleWithAspectRatio:width:imageSize:](self, "_heightClampedScaleWithAspectRatio:width:imageSize:", v7, a3);
  result.height = v9;
  result.width = v8;
  return result;
}

- (CGSize)thumbnailFillSizeForWidth:(double)a3 imageSize:(CGSize)a4
{
  double height;
  double width;
  double v7;
  double v8;
  double v9;
  double v10;
  CGSize result;

  height = a4.height;
  width = a4.width;
  v7 = width / height;
  if (height == 0.0)
    v7 = 0.0;
  v8 = fmax(v7, 0.75);
  if (v8 > 1.77777778)
    v8 = 1.77777778;
  -[CKUIBehavior _heightClampedScaleWithAspectRatio:width:imageSize:](self, "_heightClampedScaleWithAspectRatio:width:imageSize:", v8, a3);
  result.height = v10;
  result.width = v9;
  return result;
}

- (CGSize)mapThumbnailFillSizeForWidth:(double)a3
{
  double v3;
  double v4;
  CGSize result;

  -[CKUIBehavior thumbnailFillSizeForWidth:imageSize:](self, "thumbnailFillSizeForWidth:imageSize:", a3, 4.0, 3.0);
  result.height = v4;
  result.width = v3;
  return result;
}

- (UIEdgeInsets)minimumPlayButtonInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (minimumPlayButtonInsets_once != -1)
    dispatch_once(&minimumPlayButtonInsets_once, &__block_literal_global_747_0);
  v2 = *(double *)&minimumPlayButtonInsets_sBehavior_0;
  v3 = *(double *)&minimumPlayButtonInsets_sBehavior_1;
  v4 = *(double *)&minimumPlayButtonInsets_sBehavior_2;
  v5 = *(double *)&minimumPlayButtonInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __39__CKUIBehavior_minimumPlayButtonInsets__block_invoke()
{
  minimumPlayButtonInsets_sBehavior_0 = 0x4020000000000000;
  minimumPlayButtonInsets_sBehavior_1 = 0x4020000000000000;
  minimumPlayButtonInsets_sBehavior_2 = 0x4020000000000000;
  minimumPlayButtonInsets_sBehavior_3 = 0x4020000000000000;
}

- (double)previewTitleBarHeight
{
  if (previewTitleBarHeight_once != -1)
    dispatch_once(&previewTitleBarHeight_once, &__block_literal_global_748);
  return *(double *)&previewTitleBarHeight_sBehavior;
}

double __37__CKUIBehavior_previewTitleBarHeight__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = floor(v0 * 37.5) / v0;
  previewTitleBarHeight_sBehavior = *(_QWORD *)&result;
  return result;
}

- (UIEdgeInsets)thumbnailContentAlignmentInsetsForOrientation:(char)a3
{
  int v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  UIEdgeInsets result;

  v3 = a3;
  -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
  v5 = 0.0;
  if (v3)
    v6 = 0.0;
  else
    v6 = v4;
  if (v3)
    v7 = v4;
  else
    v7 = 0.0;
  v8 = 0.0;
  result.right = v7;
  result.bottom = v5;
  result.left = v6;
  result.top = v8;
  return result;
}

- (double)waveformViewHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __34__CKUIBehavior_waveformViewHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (waveformViewHeight_once != -1)
    dispatch_once(&waveformViewHeight_once, block);
  return *(double *)&waveformViewHeight_sBehavior;
}

uint64_t __34__CKUIBehavior_waveformViewHeight__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "audioWaveformViewHeight");
  waveformViewHeight_sBehavior = v2;
  return result;
}

- (double)waveformHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __30__CKUIBehavior_waveformHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (waveformHeight_once != -1)
    dispatch_once(&waveformHeight_once, block);
  return *(double *)&waveformHeight_sBehavior;
}

uint64_t __30__CKUIBehavior_waveformHeight__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "audioWaveformHeight");
  waveformHeight_sBehavior = v2;
  return result;
}

- (double)waveformWidth
{
  if (waveformWidth_once != -1)
    dispatch_once(&waveformWidth_once, &__block_literal_global_749_0);
  return *(double *)&waveformWidth_sBehavior;
}

void __29__CKUIBehavior_waveformWidth__block_invoke()
{
  waveformWidth_sBehavior = 0x4061800000000000;
}

- (double)minimumWaveformHeight
{
  if (minimumWaveformHeight_once != -1)
    dispatch_once(&minimumWaveformHeight_once, &__block_literal_global_750);
  return *(double *)&minimumWaveformHeight_sBehavior;
}

void __37__CKUIBehavior_minimumWaveformHeight__block_invoke()
{
  minimumWaveformHeight_sBehavior = 0x4010000000000000;
}

- (unint64_t)waveformPowerLevelWidth
{
  if (waveformPowerLevelWidth_once != -1)
    dispatch_once(&waveformPowerLevelWidth_once, &__block_literal_global_751);
  if (waveformPowerLevelWidth_sBehavior)
    return 2;
  else
    return 0;
}

void __39__CKUIBehavior_waveformPowerLevelWidth__block_invoke()
{
  waveformPowerLevelWidth_sBehavior = 1;
}

- (unint64_t)waveformGapWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __32__CKUIBehavior_waveformGapWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (waveformGapWidth_once != -1)
    dispatch_once(&waveformGapWidth_once, block);
  return waveformGapWidth_sBehavior;
}

uint64_t __32__CKUIBehavior_waveformGapWidth__block_invoke(uint64_t a1)
{
  uint64_t result;
  double v2;

  result = objc_msgSend(*(id *)(a1 + 32), "audioWaveformGapWidth");
  waveformGapWidth_sBehavior = (unint64_t)v2;
  return result;
}

- (unint64_t)waveformPowerLevelWidthIncrement
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __48__CKUIBehavior_waveformPowerLevelWidthIncrement__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (waveformPowerLevelWidthIncrement_once != -1)
    dispatch_once(&waveformPowerLevelWidthIncrement_once, block);
  return waveformPowerLevelWidthIncrement_sBehavior;
}

uint64_t __48__CKUIBehavior_waveformPowerLevelWidthIncrement__block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = objc_msgSend(*(id *)(a1 + 32), "waveformPowerLevelWidth");
  result = objc_msgSend(*(id *)(a1 + 32), "waveformGapWidth");
  waveformPowerLevelWidthIncrement_sBehavior = result + v2;
  return result;
}

- (double)waveformDefaultImagePowerLevelCount
{
  if (waveformDefaultImagePowerLevelCount_once != -1)
    dispatch_once(&waveformDefaultImagePowerLevelCount_once, &__block_literal_global_752);
  return *(double *)&waveformDefaultImagePowerLevelCount_sBehavior;
}

void __51__CKUIBehavior_waveformDefaultImagePowerLevelCount__block_invoke()
{
  waveformDefaultImagePowerLevelCount_sBehavior = 0x4042000000000000;
}

- (double)audioWaveformHeight
{
  void *v2;
  int v3;
  double result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isRichAudioMessagesEnabled");

  result = 35.0;
  if (!v3)
    return 29.0;
  return result;
}

- (double)audioWaveformViewHeight
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;

  objc_msgSend(MEMORY[0x1E0D35910], "iMessageService");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAudioMessageRecordingView buttonFor:with:](CKAudioMessageRecordingView, "buttonFor:with:", 3, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sizeThatFits:", 1.79769313e308, 1.79769313e308);
  v5 = v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "audioRecordingViewPadding");
  v8 = (v5 + v7) * 0.75;

  return v8;
}

- (double)audioWaveformGapWidth
{
  void *v2;
  int v3;
  double result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isRichAudioMessagesEnabled");

  result = 1.0;
  if (v3)
    return 2.0;
  return result;
}

- (double)transcriptWaveformWidthForDuration:(double)a3
{
  unint64_t v5;
  double v6;
  double v7;
  double v8;
  long double v9;
  unint64_t v10;

  v5 = -[CKUIBehavior waveformMaxPowerLevelsCount](self, "waveformMaxPowerLevelsCount");
  -[CKUIBehavior waveformMaxWidthDuration](self, "waveformMaxWidthDuration");
  if (v6 > a3)
  {
    v7 = v6;
    v8 = (double)-[CKUIBehavior waveformMaxPowerLevelsCount](self, "waveformMaxPowerLevelsCount");
    v9 = log2(a3 + 1.0) * v8;
    v5 = (unint64_t)(v9 / log2(v7 + 1.0));
    v10 = -[CKUIBehavior waveformMinPowerLevelsCount](self, "waveformMinPowerLevelsCount");
    if (v10 > v5)
      v5 = v10;
  }
  return (double)(-[CKUIBehavior waveformPowerLevelWidthIncrement](self, "waveformPowerLevelWidthIncrement") * v5);
}

- (CGSize)photoSheetProgressIndicatorSize
{
  double v2;
  double v3;
  CGSize result;

  if (photoSheetProgressIndicatorSize_once != -1)
    dispatch_once(&photoSheetProgressIndicatorSize_once, &__block_literal_global_755);
  v2 = *(double *)&photoSheetProgressIndicatorSize_sBehavior_0;
  v3 = *(double *)&photoSheetProgressIndicatorSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __47__CKUIBehavior_photoSheetProgressIndicatorSize__block_invoke()
{
  photoSheetProgressIndicatorSize_sBehavior_0 = 0x4034000000000000;
  photoSheetProgressIndicatorSize_sBehavior_1 = 0x4034000000000000;
}

- (double)photoSheetVideoIconPadding
{
  if (photoSheetVideoIconPadding_once != -1)
    dispatch_once(&photoSheetVideoIconPadding_once, &__block_literal_global_756);
  return *(double *)&photoSheetVideoIconPadding_sBehavior;
}

void __42__CKUIBehavior_photoSheetVideoIconPadding__block_invoke()
{
  photoSheetVideoIconPadding_sBehavior = 0x4010000000000000;
}

- (UIFont)previewTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)previewTitleFont_sContentSizeCategory_previewTitleFont, (UIContentSizeCategory)v2)|| previewTitleFont_sIsIncreaseContrastEnabled_previewTitleFont != v3|| previewTitleFont_sIsBoldTextEnabled_previewTitleFont != IsBoldTextEnabled|| (v10 = previewTitleFont_sTextFontSize_previewTitleFont, *(double *)&previewTitleFont_sTextFontSize_previewTitleFont != v5)|| (v10 = previewTitleFont_sCustomTextFontSize_previewTitleFont, *(double *)&previewTitleFont_sCustomTextFontSize_previewTitleFont != v6)|| (objc_msgSend((id)previewTitleFont_sCustomTextFontName_previewTitleFont, "isEqualToString:", v9, *(double *)&previewTitleFont_sCustomTextFontSize_previewTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)previewTitleFont_sBehavior;
    previewTitleFont_sBehavior = v11;

    objc_storeStrong((id *)&previewTitleFont_sContentSizeCategory_previewTitleFont, v2);
    previewTitleFont_sIsIncreaseContrastEnabled_previewTitleFont = v3;
    previewTitleFont_sIsBoldTextEnabled_previewTitleFont = IsBoldTextEnabled;
    previewTitleFont_sTextFontSize_previewTitleFont = *(_QWORD *)&v5;
    previewTitleFont_sCustomTextFontSize_previewTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&previewTitleFont_sCustomTextFontName_previewTitleFont, v8);
  }
  v13 = (UIFont *)(id)previewTitleFont_sBehavior;

  return v13;
}

- (UIFont)attachmentTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)attachmentTextFont_sContentSizeCategory_attachmentTextFont, (UIContentSizeCategory)v2)|| attachmentTextFont_sIsIncreaseContrastEnabled_attachmentTextFont != v3|| attachmentTextFont_sIsBoldTextEnabled_attachmentTextFont != IsBoldTextEnabled|| (v10 = attachmentTextFont_sTextFontSize_attachmentTextFont, *(double *)&attachmentTextFont_sTextFontSize_attachmentTextFont != v5)|| (v10 = attachmentTextFont_sCustomTextFontSize_attachmentTextFont, *(double *)&attachmentTextFont_sCustomTextFontSize_attachmentTextFont != v6)|| (objc_msgSend((id)attachmentTextFont_sCustomTextFontName_attachmentTextFont, "isEqualToString:", v9, *(double *)&attachmentTextFont_sCustomTextFontSize_attachmentTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)attachmentTextFont_sBehavior;
    attachmentTextFont_sBehavior = v11;

    objc_storeStrong((id *)&attachmentTextFont_sContentSizeCategory_attachmentTextFont, v2);
    attachmentTextFont_sIsIncreaseContrastEnabled_attachmentTextFont = v3;
    attachmentTextFont_sIsBoldTextEnabled_attachmentTextFont = IsBoldTextEnabled;
    attachmentTextFont_sTextFontSize_attachmentTextFont = *(_QWORD *)&v5;
    attachmentTextFont_sCustomTextFontSize_attachmentTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&attachmentTextFont_sCustomTextFontName_attachmentTextFont, v8);
  }
  v13 = (UIFont *)(id)attachmentTextFont_sBehavior;

  return v13;
}

- (UIFont)attachmentSubtitleTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)attachmentSubtitleTextFont_sContentSizeCategory_attachmentSubtitleTextFont, (UIContentSizeCategory)v2)|| attachmentSubtitleTextFont_sIsIncreaseContrastEnabled_attachmentSubtitleTextFont != v3|| attachmentSubtitleTextFont_sIsBoldTextEnabled_attachmentSubtitleTextFont != IsBoldTextEnabled|| (v10 = attachmentSubtitleTextFont_sTextFontSize_attachmentSubtitleTextFont, *(double *)&attachmentSubtitleTextFont_sTextFontSize_attachmentSubtitleTextFont != v5)|| (v10 = attachmentSubtitleTextFont_sCustomTextFontSize_attachmentSubtitleTextFont, *(double *)&attachmentSubtitleTextFont_sCustomTextFontSize_attachmentSubtitleTextFont != v6)|| (objc_msgSend((id)attachmentSubtitleTextFont_sCustomTextFontName_attachmentSubtitleTextFont, "isEqualToString:", v9, *(double *)&attachmentSubtitleTextFont_sCustomTextFontSize_attachmentSubtitleTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB550], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)attachmentSubtitleTextFont_sBehavior;
    attachmentSubtitleTextFont_sBehavior = v11;

    objc_storeStrong((id *)&attachmentSubtitleTextFont_sContentSizeCategory_attachmentSubtitleTextFont, v2);
    attachmentSubtitleTextFont_sIsIncreaseContrastEnabled_attachmentSubtitleTextFont = v3;
    attachmentSubtitleTextFont_sIsBoldTextEnabled_attachmentSubtitleTextFont = IsBoldTextEnabled;
    attachmentSubtitleTextFont_sTextFontSize_attachmentSubtitleTextFont = *(_QWORD *)&v5;
    attachmentSubtitleTextFont_sCustomTextFontSize_attachmentSubtitleTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&attachmentSubtitleTextFont_sCustomTextFontName_attachmentSubtitleTextFont, v8);
  }
  v13 = (UIFont *)(id)attachmentSubtitleTextFont_sBehavior;

  return v13;
}

- (UIFont)contactAttachmentNameFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)contactAttachmentNameFont_sContentSizeCategory_contactAttachmentNameFont, (UIContentSizeCategory)v2)|| contactAttachmentNameFont_sIsIncreaseContrastEnabled_contactAttachmentNameFont != v3|| contactAttachmentNameFont_sIsBoldTextEnabled_contactAttachmentNameFont != IsBoldTextEnabled|| (v10 = contactAttachmentNameFont_sTextFontSize_contactAttachmentNameFont, *(double *)&contactAttachmentNameFont_sTextFontSize_contactAttachmentNameFont != v5)|| (v10 = contactAttachmentNameFont_sCustomTextFontSize_contactAttachmentNameFont, *(double *)&contactAttachmentNameFont_sCustomTextFontSize_contactAttachmentNameFont != v6)|| (objc_msgSend((id)contactAttachmentNameFont_sCustomTextFontName_contactAttachmentNameFont, "isEqualToString:", v9, *(double *)&contactAttachmentNameFont_sCustomTextFontSize_contactAttachmentNameFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_emphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB5A0], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)contactAttachmentNameFont_sBehavior;
    contactAttachmentNameFont_sBehavior = v11;

    objc_storeStrong((id *)&contactAttachmentNameFont_sContentSizeCategory_contactAttachmentNameFont, v2);
    contactAttachmentNameFont_sIsIncreaseContrastEnabled_contactAttachmentNameFont = v3;
    contactAttachmentNameFont_sIsBoldTextEnabled_contactAttachmentNameFont = IsBoldTextEnabled;
    contactAttachmentNameFont_sTextFontSize_contactAttachmentNameFont = *(_QWORD *)&v5;
    contactAttachmentNameFont_sCustomTextFontSize_contactAttachmentNameFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&contactAttachmentNameFont_sCustomTextFontName_contactAttachmentNameFont, v8);
  }
  v13 = (UIFont *)(id)contactAttachmentNameFont_sBehavior;

  return v13;
}

- (UIFont)contactAttachmentOrgFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)contactAttachmentOrgFont_sContentSizeCategory_contactAttachmentOrgFont, (UIContentSizeCategory)v2)|| contactAttachmentOrgFont_sIsIncreaseContrastEnabled_contactAttachmentOrgFont != v3|| contactAttachmentOrgFont_sIsBoldTextEnabled_contactAttachmentOrgFont != IsBoldTextEnabled|| (v10 = contactAttachmentOrgFont_sTextFontSize_contactAttachmentOrgFont, *(double *)&contactAttachmentOrgFont_sTextFontSize_contactAttachmentOrgFont != v5)|| (v10 = contactAttachmentOrgFont_sCustomTextFontSize_contactAttachmentOrgFont, *(double *)&contactAttachmentOrgFont_sCustomTextFontSize_contactAttachmentOrgFont != v6)|| (objc_msgSend((id)contactAttachmentOrgFont_sCustomTextFontName_contactAttachmentOrgFont, "isEqualToString:", v9, *(double *)&contactAttachmentOrgFont_sCustomTextFontSize_contactAttachmentOrgFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)contactAttachmentOrgFont_sBehavior;
    contactAttachmentOrgFont_sBehavior = v11;

    objc_storeStrong((id *)&contactAttachmentOrgFont_sContentSizeCategory_contactAttachmentOrgFont, v2);
    contactAttachmentOrgFont_sIsIncreaseContrastEnabled_contactAttachmentOrgFont = v3;
    contactAttachmentOrgFont_sIsBoldTextEnabled_contactAttachmentOrgFont = IsBoldTextEnabled;
    contactAttachmentOrgFont_sTextFontSize_contactAttachmentOrgFont = *(_QWORD *)&v5;
    contactAttachmentOrgFont_sCustomTextFontSize_contactAttachmentOrgFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&contactAttachmentOrgFont_sCustomTextFontName_contactAttachmentOrgFont, v8);
  }
  v13 = (UIFont *)(id)contactAttachmentOrgFont_sBehavior;

  return v13;
}

- (UIImage)genericDocumentIcon
{
  if (genericDocumentIcon_once != -1)
    dispatch_once(&genericDocumentIcon_once, &__block_literal_global_757);
  return (UIImage *)(id)genericDocumentIcon_sBehavior;
}

void __35__CKUIBehavior_genericDocumentIcon__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CA58C8], "documentProxyForName:type:MIMEType:", 0, *MEMORY[0x1E0CA5BA0], 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_iconForResourceProxy:format:", v0, 3);
  v1 = objc_claimAutoreleasedReturnValue();

  v2 = (void *)genericDocumentIcon_sBehavior;
  genericDocumentIcon_sBehavior = v1;

}

- (UIImage)errorDocumentIcon
{
  if (errorDocumentIcon_once != -1)
    dispatch_once(&errorDocumentIcon_once, &__block_literal_global_759);
  return (UIImage *)(id)errorDocumentIcon_sBehavior;
}

void __33__CKUIBehavior_errorDocumentIcon__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CA58C8], "documentProxyForName:type:MIMEType:", 0, *MEMORY[0x1E0CA5BA0], 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_iconForResourceProxy:format:", v0, 3);
  v1 = objc_claimAutoreleasedReturnValue();

  v2 = (void *)errorDocumentIcon_sBehavior;
  errorDocumentIcon_sBehavior = v1;

}

- (UIImage)textDocumentIcon
{
  if (textDocumentIcon_once != -1)
    dispatch_once(&textDocumentIcon_once, &__block_literal_global_760);
  return (UIImage *)(id)textDocumentIcon_sBehavior;
}

void __32__CKUIBehavior_textDocumentIcon__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CA58C8], "documentProxyForName:type:MIMEType:", 0, *MEMORY[0x1E0CA5C88], 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_iconForResourceProxy:format:", v0, 3);
  v1 = objc_claimAutoreleasedReturnValue();

  v2 = (void *)textDocumentIcon_sBehavior;
  textDocumentIcon_sBehavior = v1;

}

- (UIImage)playButtonImage
{
  if (playButtonImage_once != -1)
    dispatch_once(&playButtonImage_once, &__block_literal_global_761);
  return (UIImage *)(id)playButtonImage_sBehavior;
}

void __31__CKUIBehavior_playButtonImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPointSize:weight:scale:", 4, 3, 25.0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("circle.fill"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "imageWithSymbolConfiguration:", v0);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)playButtonImage_sBehavior;
  playButtonImage_sBehavior = v2;

}

- (UIImage)playButtonArrowImage
{
  if (playButtonArrowImage_once != -1)
    dispatch_once(&playButtonArrowImage_once, &__block_literal_global_762);
  return (UIImage *)(id)playButtonArrowImage_sBehavior;
}

void __36__CKUIBehavior_playButtonArrowImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPointSize:weight:scale:", 4, 3, 14.0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("play.fill"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "imageWithSymbolConfiguration:", v0);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)playButtonArrowImage_sBehavior;
  playButtonArrowImage_sBehavior = v2;

}

- (UIImage)muteButtonImage
{
  if (muteButtonImage_once != -1)
    dispatch_once(&muteButtonImage_once, &__block_literal_global_765);
  return (UIImage *)(id)muteButtonImage_sBehavior;
}

void __31__CKUIBehavior_muteButtonImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("speaker.slash.fill"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)muteButtonImage_sBehavior;
  muteButtonImage_sBehavior = v0;

}

- (UIImage)unmuteButtonImage
{
  if (unmuteButtonImage_once != -1)
    dispatch_once(&unmuteButtonImage_once, &__block_literal_global_768);
  return (UIImage *)(id)unmuteButtonImage_sBehavior;
}

void __33__CKUIBehavior_unmuteButtonImage__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("speaker.wave.2.fill"));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageWithRenderingMode:", 2);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)unmuteButtonImage_sBehavior;
  unmuteButtonImage_sBehavior = v0;

}

- (UIColor)imageBalloonSelectionOverlayColor
{
  if (imageBalloonSelectionOverlayColor_once != -1)
    dispatch_once(&imageBalloonSelectionOverlayColor_once, &__block_literal_global_771);
  return (UIColor *)(id)imageBalloonSelectionOverlayColor_sBehavior;
}

void __49__CKUIBehavior_imageBalloonSelectionOverlayColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.0392156863, 0.0392156863, 0.470588235, 0.05);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)imageBalloonSelectionOverlayColor_sBehavior;
  imageBalloonSelectionOverlayColor_sBehavior = v0;

}

- (UIColor)pluginBalloonSelectionOverlayColor
{
  if (pluginBalloonSelectionOverlayColor_once != -1)
    dispatch_once(&pluginBalloonSelectionOverlayColor_once, &__block_literal_global_772);
  return (UIColor *)(id)pluginBalloonSelectionOverlayColor_sBehavior;
}

void __50__CKUIBehavior_pluginBalloonSelectionOverlayColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.0392156863, 0.0392156863, 0.470588235, 0.1);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)pluginBalloonSelectionOverlayColor_sBehavior;
  pluginBalloonSelectionOverlayColor_sBehavior = v0;

}

- (BOOL)shouldShowDisclosureChevronInRecipientAtoms
{
  if (shouldShowDisclosureChevronInRecipientAtoms_once != -1)
    dispatch_once(&shouldShowDisclosureChevronInRecipientAtoms_once, &__block_literal_global_773);
  return shouldShowDisclosureChevronInRecipientAtoms_sBehavior;
}

void __59__CKUIBehavior_shouldShowDisclosureChevronInRecipientAtoms__block_invoke()
{
  shouldShowDisclosureChevronInRecipientAtoms_sBehavior = 1;
}

- (BOOL)shouldAutomaticallyCheckAvailabilityOfAlternateAddresses
{
  return objc_msgSend(MEMORY[0x1E0D35918], "smsEnabled") ^ 1;
}

- (BOOL)shouldRefreshAlternateAddressesSheet
{
  if (shouldRefreshAlternateAddressesSheet_once != -1)
    dispatch_once(&shouldRefreshAlternateAddressesSheet_once, &__block_literal_global_775);
  return 0;
}

- (BOOL)presentsFullscreenInViewService
{
  if (presentsFullscreenInViewService_once != -1)
    dispatch_once(&presentsFullscreenInViewService_once, &__block_literal_global_776);
  return presentsFullscreenInViewService_sBehavior;
}

void __47__CKUIBehavior_presentsFullscreenInViewService__block_invoke()
{
  presentsFullscreenInViewService_sBehavior = 1;
}

- (BOOL)presentsAutocompleteInAPopover
{
  if (presentsAutocompleteInAPopover_once != -1)
    dispatch_once(&presentsAutocompleteInAPopover_once, &__block_literal_global_777);
  return 0;
}

- (UIEdgeInsets)toFieldScrollViewInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (toFieldScrollViewInsets_once != -1)
    dispatch_once(&toFieldScrollViewInsets_once, &__block_literal_global_778);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (double)toFieldPreferredHeight
{
  void *v2;
  int IsBoldTextEnabled;
  double v4;
  double v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  uint64_t v9;
  double v10;
  BOOL v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = CKUserPreferenceFontSize();
  v5 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v6, "length"))
    v7 = v6;
  else
    v7 = CFSTR("None");
  v8 = v7;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)toFieldPreferredHeight_sContentSizeCategory_toFieldPreferredHeight, (UIContentSizeCategory)v2)|| toFieldPreferredHeight_sIsBoldTextEnabled_toFieldPreferredHeight != IsBoldTextEnabled|| (*(double *)&toFieldPreferredHeight_sTextFontSize_toFieldPreferredHeight == v4? (v12 = *(double *)&toFieldPreferredHeight_sCustomTextFontSize_toFieldPreferredHeight == v5): (v12 = 0), !v12|| (objc_msgSend((id)toFieldPreferredHeight_sCustomTextFontName_toFieldPreferredHeight, "isEqualToString:", v8, *(double *)&toFieldPreferredHeight_sTextFontSize_toFieldPreferredHeight, *(double *)&toFieldPreferredHeight_sCustomTextFontSize_toFieldPreferredHeight) & 1) == 0))
  {
    objc_msgSend(MEMORY[0x1E0D136B8], "preferredHeight");
    toFieldPreferredHeight_sBehavior = v9;
    objc_storeStrong((id *)&toFieldPreferredHeight_sContentSizeCategory_toFieldPreferredHeight, v2);
    toFieldPreferredHeight_sIsBoldTextEnabled_toFieldPreferredHeight = IsBoldTextEnabled;
    toFieldPreferredHeight_sTextFontSize_toFieldPreferredHeight = *(_QWORD *)&v4;
    toFieldPreferredHeight_sCustomTextFontSize_toFieldPreferredHeight = *(_QWORD *)&v5;
    objc_storeStrong((id *)&toFieldPreferredHeight_sCustomTextFontName_toFieldPreferredHeight, v7);
  }
  v10 = *(double *)&toFieldPreferredHeight_sBehavior;

  return v10;
}

- (double)scheduledImageBalloonAlpha
{
  if (scheduledImageBalloonAlpha_once != -1)
    dispatch_once(&scheduledImageBalloonAlpha_once, &__block_literal_global_780);
  return *(double *)&scheduledImageBalloonAlpha_sBehavior;
}

void __42__CKUIBehavior_scheduledImageBalloonAlpha__block_invoke()
{
  scheduledImageBalloonAlpha_sBehavior = 0x3FE0000000000000;
}

- (double)minAudioRecordingDuration
{
  if (minAudioRecordingDuration_once != -1)
    dispatch_once(&minAudioRecordingDuration_once, &__block_literal_global_781);
  return *(double *)&minAudioRecordingDuration_sBehavior;
}

void __41__CKUIBehavior_minAudioRecordingDuration__block_invoke()
{
  minAudioRecordingDuration_sBehavior = 0x3FD0000000000000;
}

- (double)maxAudioRecordingDuration
{
  if (maxAudioRecordingDuration_once != -1)
    dispatch_once(&maxAudioRecordingDuration_once, &__block_literal_global_782);
  return *(double *)&maxAudioRecordingDuration_sBehavior;
}

void __41__CKUIBehavior_maxAudioRecordingDuration__block_invoke()
{
  maxAudioRecordingDuration_sBehavior = 0x404E000000000000;
}

- (BOOL)entryFieldShouldUseBackdropView
{
  if (entryFieldShouldUseBackdropView_once != -1)
    dispatch_once(&entryFieldShouldUseBackdropView_once, &__block_literal_global_783);
  return entryFieldShouldUseBackdropView_sBehavior;
}

void __47__CKUIBehavior_entryFieldShouldUseBackdropView__block_invoke()
{
  entryFieldShouldUseBackdropView_sBehavior = 1;
}

- (BOOL)isAppStripInKeyboard
{
  if (isAppStripInKeyboard_once != -1)
    dispatch_once(&isAppStripInKeyboard_once, &__block_literal_global_784);
  return isAppStripInKeyboard_sBehavior;
}

uint64_t __36__CKUIBehavior_isAppStripInKeyboard__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMessages();
  isAppStripInKeyboard_sBehavior = (_DWORD)result != 0;
  return result;
}

- (BOOL)isMentionSuggestionViewInKeyboard
{
  if (isMentionSuggestionViewInKeyboard_once != -1)
    dispatch_once(&isMentionSuggestionViewInKeyboard_once, &__block_literal_global_785);
  return isMentionSuggestionViewInKeyboard_sBehavior;
}

uint64_t __49__CKUIBehavior_isMentionSuggestionViewInKeyboard__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMessages();
  isMentionSuggestionViewInKeyboard_sBehavior = (_DWORD)result != 0;
  return result;
}

- (BOOL)entryFieldShouldUseNewPhotoUI
{
  if (entryFieldShouldUseNewPhotoUI_once != -1)
    dispatch_once(&entryFieldShouldUseNewPhotoUI_once, &__block_literal_global_786);
  return entryFieldShouldUseNewPhotoUI_sBehavior;
}

void __45__CKUIBehavior_entryFieldShouldUseNewPhotoUI__block_invoke()
{
  entryFieldShouldUseNewPhotoUI_sBehavior = 1;
}

- (BOOL)supportsEntryViewPlusButtonLongPress
{
  if (supportsEntryViewPlusButtonLongPress_once != -1)
    dispatch_once(&supportsEntryViewPlusButtonLongPress_once, &__block_literal_global_787);
  return supportsEntryViewPlusButtonLongPress_sBehavior;
}

void __52__CKUIBehavior_supportsEntryViewPlusButtonLongPress__block_invoke()
{
  supportsEntryViewPlusButtonLongPress_sBehavior = 1;
}

- (double)entryViewPlusButtonLongPressDuration
{
  if (entryViewPlusButtonLongPressDuration_once != -1)
    dispatch_once(&entryViewPlusButtonLongPressDuration_once, &__block_literal_global_788);
  return *(double *)&entryViewPlusButtonLongPressDuration_sBehavior;
}

uint64_t __52__CKUIBehavior_entryViewPlusButtonLongPressDuration__block_invoke()
{
  uint64_t result;
  double v1;

  result = _AXSForceTouchTimeDuration();
  v1 = dbl_18E7CAE40[(_DWORD)result == 2];
  if (!(_DWORD)result)
    v1 = 0.5;
  entryViewPlusButtonLongPressDuration_sBehavior = *(_QWORD *)&v1;
  return result;
}

- (double)entryViewBackgroundAlpha
{
  if (entryViewBackgroundAlpha_once != -1)
    dispatch_once(&entryViewBackgroundAlpha_once, &__block_literal_global_789);
  return *(double *)&entryViewBackgroundAlpha_sBehavior;
}

void __40__CKUIBehavior_entryViewBackgroundAlpha__block_invoke()
{
  entryViewBackgroundAlpha_sBehavior = 0x3FE8000000000000;
}

- (BOOL)isSendButtonEnabledOnPlatform
{
  if (isSendButtonEnabledOnPlatform_once != -1)
    dispatch_once(&isSendButtonEnabledOnPlatform_once, &__block_literal_global_790);
  return isSendButtonEnabledOnPlatform_sBehavior;
}

void __45__CKUIBehavior_isSendButtonEnabledOnPlatform__block_invoke()
{
  isSendButtonEnabledOnPlatform_sBehavior = 1;
}

- (BOOL)isEntryViewFirstResponderOnViewAppearance
{
  if (isEntryViewFirstResponderOnViewAppearance_once != -1)
    dispatch_once(&isEntryViewFirstResponderOnViewAppearance_once, &__block_literal_global_791);
  return 0;
}

- (BOOL)isEntryViewInputAccessory
{
  if (isEntryViewInputAccessory_once != -1)
    dispatch_once(&isEntryViewInputAccessory_once, &__block_literal_global_792);
  return isEntryViewInputAccessory_sBehavior;
}

void __41__CKUIBehavior_isEntryViewInputAccessory__block_invoke()
{
  int v0;
  void *v1;
  char v2;
  char v3;

  v0 = CKIsRunningInMessagesNotificationExtension();
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEntryViewInTranscriptEnabled");

  v3 = v2 ^ 1;
  if (v0)
    v3 = 1;
  isEntryViewInputAccessory_sBehavior = v3;
}

- (BOOL)entryViewFollowsKeyboardLayoutGuide
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __51__CKUIBehavior_entryViewFollowsKeyboardLayoutGuide__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewFollowsKeyboardLayoutGuide_once != -1)
    dispatch_once(&entryViewFollowsKeyboardLayoutGuide_once, block);
  return entryViewFollowsKeyboardLayoutGuide_sBehavior;
}

uint64_t __51__CKUIBehavior_entryViewFollowsKeyboardLayoutGuide__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "isEntryViewInputAccessory");
  entryViewFollowsKeyboardLayoutGuide_sBehavior = result ^ 1;
  return result;
}

- (BOOL)entryViewSupportsPhotoButton
{
  if (entryViewSupportsPhotoButton_once != -1)
    dispatch_once(&entryViewSupportsPhotoButton_once, &__block_literal_global_794);
  return entryViewSupportsPhotoButton_sBehavior;
}

void __44__CKUIBehavior_entryViewSupportsPhotoButton__block_invoke()
{
  void *v0;
  char v1;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isSendMenuEnabled");

  entryViewSupportsPhotoButton_sBehavior = v1 ^ 1;
}

- (BOOL)entryViewSupportsPlusButton
{
  if (entryViewSupportsPlusButton_once != -1)
    dispatch_once(&entryViewSupportsPlusButton_once, &__block_literal_global_795);
  return entryViewSupportsPlusButton_sBehavior;
}

void __43__CKUIBehavior_entryViewSupportsPlusButton__block_invoke()
{
  void *v0;
  char v1;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isSendMenuEnabled");

  entryViewSupportsPlusButton_sBehavior = v1;
}

- (BOOL)entryViewSupportsBrowserButton
{
  if (entryViewSupportsBrowserButton_once != -1)
    dispatch_once(&entryViewSupportsBrowserButton_once, &__block_literal_global_796);
  return entryViewSupportsBrowserButton_sBehavior;
}

void __46__CKUIBehavior_entryViewSupportsBrowserButton__block_invoke()
{
  void *v0;
  char v1;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isSendMenuEnabled");

  entryViewSupportsBrowserButton_sBehavior = v1 ^ 1;
}

- (BOOL)browserButtonShouldUseMenu
{
  if (browserButtonShouldUseMenu_once != -1)
    dispatch_once(&browserButtonShouldUseMenu_once, &__block_literal_global_797);
  return 0;
}

- (BOOL)browserButtonShouldUseExternalMenu
{
  if (browserButtonShouldUseExternalMenu_once != -1)
    dispatch_once(&browserButtonShouldUseExternalMenu_once, &__block_literal_global_798);
  return 0;
}

- (BOOL)shouldDisableSendButtonClickInteraction
{
  if (shouldDisableSendButtonClickInteraction_once != -1)
    dispatch_once(&shouldDisableSendButtonClickInteraction_once, &__block_literal_global_799);
  return 0;
}

- (BOOL)entryViewSupportsSingleBigEmojiFont
{
  if (entryViewSupportsSingleBigEmojiFont_once != -1)
    dispatch_once(&entryViewSupportsSingleBigEmojiFont_once, &__block_literal_global_800);
  return entryViewSupportsSingleBigEmojiFont_sBehavior;
}

uint64_t __51__CKUIBehavior_entryViewSupportsSingleBigEmojiFont__block_invoke()
{
  uint64_t result;

  result = CKIsRunningInMessagesNotificationExtension();
  entryViewSupportsSingleBigEmojiFont_sBehavior = (_DWORD)result == 0;
  return result;
}

- (BOOL)includeKeyboardInEntryViewHeight
{
  if (includeKeyboardInEntryViewHeight_once != -1)
    dispatch_once(&includeKeyboardInEntryViewHeight_once, &__block_literal_global_801);
  return includeKeyboardInEntryViewHeight_sBehavior;
}

void __48__CKUIBehavior_includeKeyboardInEntryViewHeight__block_invoke()
{
  includeKeyboardInEntryViewHeight_sBehavior = 1;
}

- (BOOL)keyboardSizeDeterminesAppCardDetentHeight
{
  if (keyboardSizeDeterminesAppCardDetentHeight_once != -1)
    dispatch_once(&keyboardSizeDeterminesAppCardDetentHeight_once, &__block_literal_global_802);
  return keyboardSizeDeterminesAppCardDetentHeight_sBehavior;
}

void __57__CKUIBehavior_keyboardSizeDeterminesAppCardDetentHeight__block_invoke()
{
  keyboardSizeDeterminesAppCardDetentHeight_sBehavior = 1;
}

- (BOOL)entryViewButtonWantsVibrancy
{
  if (entryViewButtonWantsVibrancy_once != -1)
    dispatch_once(&entryViewButtonWantsVibrancy_once, &__block_literal_global_803);
  return entryViewButtonWantsVibrancy_sBehavior;
}

void __44__CKUIBehavior_entryViewButtonWantsVibrancy__block_invoke()
{
  entryViewButtonWantsVibrancy_sBehavior = 1;
}

- (char)entryViewButtonDefaultColor
{
  if (entryViewButtonDefaultColor_once != -1)
    dispatch_once(&entryViewButtonDefaultColor_once, &__block_literal_global_804);
  return entryViewButtonDefaultColor_sBehavior << 31 >> 31;
}

void __43__CKUIBehavior_entryViewButtonDefaultColor__block_invoke()
{
  entryViewButtonDefaultColor_sBehavior = 1;
}

- (BOOL)knockoutViewShouldUseBackgroundColor
{
  if (knockoutViewShouldUseBackgroundColor_once != -1)
    dispatch_once(&knockoutViewShouldUseBackgroundColor_once, &__block_literal_global_805);
  return knockoutViewShouldUseBackgroundColor_sBehavior;
}

void __52__CKUIBehavior_knockoutViewShouldUseBackgroundColor__block_invoke()
{
  knockoutViewShouldUseBackgroundColor_sBehavior = 1;
}

- (double)entryViewAppButtonImagePointSize
{
  if (entryViewAppButtonImagePointSize_once != -1)
    dispatch_once(&entryViewAppButtonImagePointSize_once, &__block_literal_global_806);
  return *(double *)&entryViewAppButtonImagePointSize_sBehavior;
}

void __48__CKUIBehavior_entryViewAppButtonImagePointSize__block_invoke()
{
  entryViewAppButtonImagePointSize_sBehavior = 0x4040000000000000;
}

- (BOOL)entryViewBackgroundShouldUseVariableBlur
{
  if (entryViewBackgroundShouldUseVariableBlur_once != -1)
    dispatch_once(&entryViewBackgroundShouldUseVariableBlur_once, &__block_literal_global_807);
  return entryViewBackgroundShouldUseVariableBlur_sBehavior;
}

uint64_t __56__CKUIBehavior_entryViewBackgroundShouldUseVariableBlur__block_invoke()
{
  void *v0;
  char v1;
  uint64_t result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isSendMenuEnabled");

  result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  entryViewBackgroundShouldUseVariableBlur_sBehavior = v1 & result;
  return result;
}

- (Class)entryViewBackgroundClass
{
  if (!UIAccessibilityIsReduceTransparencyEnabled() && !CKIsRunningInMessagesNotificationExtension())
    -[CKUIBehavior entryViewBackgroundShouldUseVariableBlur](self, "entryViewBackgroundShouldUseVariableBlur");
  objc_opt_class();
  return (Class)(id)objc_claimAutoreleasedReturnValue();
}

- (Class)entryRecordingViewClass
{
  if (entryRecordingViewClass_once != -1)
    dispatch_once(&entryRecordingViewClass_once, &__block_literal_global_813);
  return 0;
}

- (double)entryContentViewTextLeftOffset
{
  if (entryContentViewTextLeftOffset_once != -1)
    dispatch_once(&entryContentViewTextLeftOffset_once, &__block_literal_global_814_0);
  return *(double *)&entryContentViewTextLeftOffset_sBehavior;
}

void __46__CKUIBehavior_entryContentViewTextLeftOffset__block_invoke()
{
  entryContentViewTextLeftOffset_sBehavior = 0x4020000000000000;
}

- (BOOL)shouldShowPluginDividerLineWithPluginShelf
{
  if (shouldShowPluginDividerLineWithPluginShelf_once != -1)
    dispatch_once(&shouldShowPluginDividerLineWithPluginShelf_once, &__block_literal_global_815_0);
  return shouldShowPluginDividerLineWithPluginShelf_sBehavior;
}

void __58__CKUIBehavior_shouldShowPluginDividerLineWithPluginShelf__block_invoke()
{
  shouldShowPluginDividerLineWithPluginShelf_sBehavior = 1;
}

- (double)pluginDividerLineInsetsWithPluginShelf
{
  if (pluginDividerLineInsetsWithPluginShelf_once != -1)
    dispatch_once(&pluginDividerLineInsetsWithPluginShelf_once, &__block_literal_global_816);
  return 0.0;
}

- (double)entryViewAttachmentHorizontalOffset
{
  if (entryViewAttachmentHorizontalOffset_once != -1)
    dispatch_once(&entryViewAttachmentHorizontalOffset_once, &__block_literal_global_817);
  return *(double *)&entryViewAttachmentHorizontalOffset_sBehavior;
}

void __51__CKUIBehavior_entryViewAttachmentHorizontalOffset__block_invoke()
{
  entryViewAttachmentHorizontalOffset_sBehavior = 0xC014000000000000;
}

- (double)entryViewAttachmentVerticalOffset
{
  if (entryViewAttachmentVerticalOffset_once != -1)
    dispatch_once(&entryViewAttachmentVerticalOffset_once, &__block_literal_global_818);
  return 0.0;
}

- (double)messageEntryContentViewClearOffsetFromTop
{
  if (messageEntryContentViewClearOffsetFromTop_once != -1)
    dispatch_once(&messageEntryContentViewClearOffsetFromTop_once, &__block_literal_global_819);
  return *(double *)&messageEntryContentViewClearOffsetFromTop_sBehavior;
}

void __57__CKUIBehavior_messageEntryContentViewClearOffsetFromTop__block_invoke()
{
  messageEntryContentViewClearOffsetFromTop_sBehavior = 0x4010000000000000;
}

- (double)messageEntryContentViewClearOffsetFromRight
{
  if (messageEntryContentViewClearOffsetFromRight_once != -1)
    dispatch_once(&messageEntryContentViewClearOffsetFromRight_once, &__block_literal_global_820);
  return *(double *)&messageEntryContentViewClearOffsetFromRight_sBehavior;
}

void __59__CKUIBehavior_messageEntryContentViewClearOffsetFromRight__block_invoke()
{
  messageEntryContentViewClearOffsetFromRight_sBehavior = 0x4024000000000000;
}

- (double)messageEntryContentViewGenerationOffsetFromBottom
{
  if (messageEntryContentViewGenerationOffsetFromBottom_once != -1)
    dispatch_once(&messageEntryContentViewGenerationOffsetFromBottom_once, &__block_literal_global_821);
  return *(double *)&messageEntryContentViewGenerationOffsetFromBottom_sBehavior;
}

void __65__CKUIBehavior_messageEntryContentViewGenerationOffsetFromBottom__block_invoke()
{
  messageEntryContentViewGenerationOffsetFromBottom_sBehavior = 0x4010000000000000;
}

- (double)messageEntryContentViewGenerationOffsetFromLeft
{
  if (messageEntryContentViewGenerationOffsetFromLeft_once != -1)
    dispatch_once(&messageEntryContentViewGenerationOffsetFromLeft_once, &__block_literal_global_822);
  return *(double *)&messageEntryContentViewGenerationOffsetFromLeft_sBehavior;
}

void __63__CKUIBehavior_messageEntryContentViewGenerationOffsetFromLeft__block_invoke()
{
  messageEntryContentViewGenerationOffsetFromLeft_sBehavior = 0x4024000000000000;
}

- (UIEdgeInsets)messageEntryContentViewSendLaterInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (messageEntryContentViewSendLaterInsets_once != -1)
    dispatch_once(&messageEntryContentViewSendLaterInsets_once, &__block_literal_global_823);
  v2 = *(double *)&messageEntryContentViewSendLaterInsets_sBehavior_0;
  v3 = *(double *)&messageEntryContentViewSendLaterInsets_sBehavior_1;
  v4 = *(double *)&messageEntryContentViewSendLaterInsets_sBehavior_2;
  v5 = *(double *)&messageEntryContentViewSendLaterInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __54__CKUIBehavior_messageEntryContentViewSendLaterInsets__block_invoke()
{
  messageEntryContentViewSendLaterInsets_sBehavior_0 = 0x4018000000000000;
  messageEntryContentViewSendLaterInsets_sBehavior_1 = 0x4018000000000000;
  messageEntryContentViewSendLaterInsets_sBehavior_2 = 0x4014000000000000;
  messageEntryContentViewSendLaterInsets_sBehavior_3 = 0x4018000000000000;
}

- (UIEdgeInsets)messageEntryContentViewPluginInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (messageEntryContentViewPluginInsets_once != -1)
    dispatch_once(&messageEntryContentViewPluginInsets_once, &__block_literal_global_824);
  v2 = *(double *)&messageEntryContentViewPluginInsets_sBehavior_0;
  v3 = *(double *)&messageEntryContentViewPluginInsets_sBehavior_1;
  v4 = *(double *)&messageEntryContentViewPluginInsets_sBehavior_2;
  v5 = *(double *)&messageEntryContentViewPluginInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __51__CKUIBehavior_messageEntryContentViewPluginInsets__block_invoke()
{
  messageEntryContentViewPluginInsets_sBehavior_0 = 0x4018000000000000;
  messageEntryContentViewPluginInsets_sBehavior_1 = 0x4018000000000000;
  messageEntryContentViewPluginInsets_sBehavior_2 = 0x4014000000000000;
  messageEntryContentViewPluginInsets_sBehavior_3 = 0x4018000000000000;
}

- (UIEdgeInsets)messageEntryContentViewPhotoPluginInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (messageEntryContentViewPhotoPluginInsets_once != -1)
    dispatch_once(&messageEntryContentViewPhotoPluginInsets_once, &__block_literal_global_825);
  v2 = *(double *)&messageEntryContentViewPhotoPluginInsets_sBehavior_0;
  v3 = *(double *)&messageEntryContentViewPhotoPluginInsets_sBehavior_2;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v3;
  result.left = v4;
  result.top = v2;
  return result;
}

void __56__CKUIBehavior_messageEntryContentViewPhotoPluginInsets__block_invoke()
{
  messageEntryContentViewPhotoPluginInsets_sBehavior_0 = 0x4018000000000000;
  messageEntryContentViewPhotoPluginInsets_sBehavior_2 = 0x4014000000000000;
}

- (BOOL)messageEntryViewUsesAbbreviatedServiceNames
{
  if (messageEntryViewUsesAbbreviatedServiceNames_once != -1)
    dispatch_once(&messageEntryViewUsesAbbreviatedServiceNames_once, &__block_literal_global_826_0);
  return 0;
}

- (UIButtonConfiguration)appButtonConfiguration
{
  if (appButtonConfiguration_once != -1)
    dispatch_once(&appButtonConfiguration_once, &__block_literal_global_827);
  return 0;
}

- (UIButtonConfiguration)sendButtonConfiguration
{
  if (sendButtonConfiguration_once != -1)
    dispatch_once(&sendButtonConfiguration_once, &__block_literal_global_828);
  return 0;
}

- (UIButtonConfiguration)audioButtonConfiguration
{
  if (audioButtonConfiguration_once != -1)
    dispatch_once(&audioButtonConfiguration_once, &__block_literal_global_829);
  return 0;
}

- (UIButtonConfiguration)dictationButtonConfiguration
{
  if (dictationButtonConfiguration_once != -1)
    dispatch_once(&dictationButtonConfiguration_once, &__block_literal_global_830);
  return 0;
}

- (double)entryViewLinkViewDiscardButtonDiameter
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_entryViewLinkViewDiscardButtonDiameter__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewLinkViewDiscardButtonDiameter_once != -1)
    dispatch_once(&entryViewLinkViewDiscardButtonDiameter_once, block);
  return *(double *)&entryViewLinkViewDiscardButtonDiameter_sBehavior;
}

uint64_t __54__CKUIBehavior_entryViewLinkViewDiscardButtonDiameter__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "clearPluginButtonSize");
  entryViewLinkViewDiscardButtonDiameter_sBehavior = v2;
  return result;
}

- (double)entryViewLinkViewDiscardButtonEdgeInset
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __55__CKUIBehavior_entryViewLinkViewDiscardButtonEdgeInset__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewLinkViewDiscardButtonEdgeInset_once != -1)
    dispatch_once(&entryViewLinkViewDiscardButtonEdgeInset_once, block);
  return *(double *)&entryViewLinkViewDiscardButtonEdgeInset_sBehavior;
}

uint64_t __55__CKUIBehavior_entryViewLinkViewDiscardButtonEdgeInset__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "_entryViewLinkViewDiscardButtonEdgeInset");
  entryViewLinkViewDiscardButtonEdgeInset_sBehavior = v2;
  return result;
}

- (double)_entryViewLinkViewDiscardButtonEdgeInset
{
  void *v2;
  int v3;
  double result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isRichLinkImprovementsEnabled");

  result = 10.0;
  if (v3)
    return 8.0;
  return result;
}

- (double)entryViewLinkViewDiscardButtonExtraHitTestPadding
{
  if (entryViewLinkViewDiscardButtonExtraHitTestPadding_once != -1)
    dispatch_once(&entryViewLinkViewDiscardButtonExtraHitTestPadding_once, &__block_literal_global_831);
  return *(double *)&entryViewLinkViewDiscardButtonExtraHitTestPadding_sBehavior;
}

void __65__CKUIBehavior_entryViewLinkViewDiscardButtonExtraHitTestPadding__block_invoke()
{
  entryViewLinkViewDiscardButtonExtraHitTestPadding_sBehavior = 0x4032000000000000;
}

- (CGSize)entryViewLinkViewSize
{
  double v2;
  double v3;
  CGSize result;

  if (entryViewLinkViewSize_once != -1)
    dispatch_once(&entryViewLinkViewSize_once, &__block_literal_global_832);
  v2 = *(double *)&entryViewLinkViewSize_sBehavior_0;
  v3 = *(double *)&entryViewLinkViewSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __37__CKUIBehavior_entryViewLinkViewSize__block_invoke()
{
  entryViewLinkViewSize_sBehavior_0 = 0x4072C00000000000;
  entryViewLinkViewSize_sBehavior_1 = 0x406A400000000000;
}

- (double)entryViewGenerationButtonDiameter
{
  if (entryViewGenerationButtonDiameter_once != -1)
    dispatch_once(&entryViewGenerationButtonDiameter_once, &__block_literal_global_833);
  return *(double *)&entryViewGenerationButtonDiameter_sBehavior;
}

void __49__CKUIBehavior_entryViewGenerationButtonDiameter__block_invoke()
{
  entryViewGenerationButtonDiameter_sBehavior = 0x403A000000000000;
}

- (double)entryViewGenerationButtonMargin
{
  if (entryViewGenerationButtonMargin_once != -1)
    dispatch_once(&entryViewGenerationButtonMargin_once, &__block_literal_global_834);
  return *(double *)&entryViewGenerationButtonMargin_sBehavior;
}

void __47__CKUIBehavior_entryViewGenerationButtonMargin__block_invoke()
{
  entryViewGenerationButtonMargin_sBehavior = 0x4014000000000000;
}

- (UIColor)generationButtonRegularBackgroundColor
{
  if (generationButtonRegularBackgroundColor_once != -1)
    dispatch_once(&generationButtonRegularBackgroundColor_once, &__block_literal_global_835);
  return (UIColor *)(id)generationButtonRegularBackgroundColor_sBehavior;
}

void __54__CKUIBehavior_generationButtonRegularBackgroundColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithWhite:alpha:", 0.4, 0.9);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)generationButtonRegularBackgroundColor_sBehavior;
  generationButtonRegularBackgroundColor_sBehavior = v0;

}

- (UIColor)generationButtonRegularTintColor
{
  if (generationButtonRegularTintColor_once != -1)
    dispatch_once(&generationButtonRegularTintColor_once, &__block_literal_global_836);
  return (UIColor *)(id)generationButtonRegularTintColor_sBehavior;
}

void __48__CKUIBehavior_generationButtonRegularTintColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithWhite:alpha:", 1.0, 0.84);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)generationButtonRegularTintColor_sBehavior;
  generationButtonRegularTintColor_sBehavior = v0;

}

- (UIColor)generationButtonHighlightedBackgroundColor
{
  if (generationButtonHighlightedBackgroundColor_once != -1)
    dispatch_once(&generationButtonHighlightedBackgroundColor_once, &__block_literal_global_837);
  return (UIColor *)(id)generationButtonHighlightedBackgroundColor_sBehavior;
}

void __58__CKUIBehavior_generationButtonHighlightedBackgroundColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.05, 0.64, 1.0, 0.9);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)generationButtonHighlightedBackgroundColor_sBehavior;
  generationButtonHighlightedBackgroundColor_sBehavior = v0;

}

- (UIColor)generationButtonHighlightedTintColor
{
  if (generationButtonHighlightedTintColor_once != -1)
    dispatch_once(&generationButtonHighlightedTintColor_once, &__block_literal_global_838);
  return (UIColor *)(id)generationButtonHighlightedTintColor_sBehavior;
}

void __52__CKUIBehavior_generationButtonHighlightedTintColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithWhite:alpha:", 1.0, 0.98);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)generationButtonHighlightedTintColor_sBehavior;
  generationButtonHighlightedTintColor_sBehavior = v0;

}

- (NSArray)entryViewDashedLinePattern
{
  if (entryViewDashedLinePattern_once != -1)
    dispatch_once(&entryViewDashedLinePattern_once, &__block_literal_global_839);
  return (NSArray *)(id)entryViewDashedLinePattern_sBehavior;
}

void __42__CKUIBehavior_entryViewDashedLinePattern__block_invoke()
{
  void *v0;

  v0 = (void *)entryViewDashedLinePattern_sBehavior;
  entryViewDashedLinePattern_sBehavior = (uint64_t)&unk_1E286F598;

}

- (UIEdgeInsets)messageEntryContentViewSendLaterDateInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (messageEntryContentViewSendLaterDateInsets_once != -1)
    dispatch_once(&messageEntryContentViewSendLaterDateInsets_once, &__block_literal_global_840);
  v2 = *(double *)&messageEntryContentViewSendLaterDateInsets_sBehavior_0;
  v3 = *(double *)&messageEntryContentViewSendLaterDateInsets_sBehavior_1;
  v4 = *(double *)&messageEntryContentViewSendLaterDateInsets_sBehavior_2;
  v5 = *(double *)&messageEntryContentViewSendLaterDateInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __58__CKUIBehavior_messageEntryContentViewSendLaterDateInsets__block_invoke()
{
  messageEntryContentViewSendLaterDateInsets_sBehavior_0 = 0x4024000000000000;
  messageEntryContentViewSendLaterDateInsets_sBehavior_1 = 0x4028000000000000;
  messageEntryContentViewSendLaterDateInsets_sBehavior_2 = 0x4024000000000000;
  messageEntryContentViewSendLaterDateInsets_sBehavior_3 = 0x4028000000000000;
}

- (CGSize)dictationButtonSize
{
  double v2;
  double v3;
  _QWORD block[5];
  CGSize result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __35__CKUIBehavior_dictationButtonSize__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (dictationButtonSize_once != -1)
    dispatch_once(&dictationButtonSize_once, block);
  v2 = *(double *)&dictationButtonSize_sBehavior_0;
  v3 = *(double *)&dictationButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

uint64_t __35__CKUIBehavior_dictationButtonSize__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "_dictationButtonSize");
  dictationButtonSize_sBehavior_0 = v2;
  dictationButtonSize_sBehavior_1 = v3;
  return result;
}

- (CGSize)_dictationButtonSize
{
  void *v2;
  char v3;
  double v4;
  double v5;
  CGSize result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAudioMessagesEntryViewRecordingEnabled");

  v4 = 22.0;
  v5 = 22.0;
  if ((v3 & 1) == 0)
  {
    if (CKPixelWidth_once_7 != -1)
      dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
    v4 = *(double *)&CKPixelWidth_sPixel_7 + 27.0;
    v5 = *(double *)&CKPixelWidth_sPixel_7 + 27.0;
  }
  result.height = v5;
  result.width = v4;
  return result;
}

- (CGSize)audioButtonSize
{
  double v2;
  double v3;
  _QWORD block[5];
  CGSize result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __31__CKUIBehavior_audioButtonSize__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (audioButtonSize_once != -1)
    dispatch_once(&audioButtonSize_once, block);
  v2 = *(double *)&audioButtonSize_sBehavior_0;
  v3 = *(double *)&audioButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

uint64_t __31__CKUIBehavior_audioButtonSize__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "_audioButtonSize");
  audioButtonSize_sBehavior_0 = v2;
  audioButtonSize_sBehavior_1 = v3;
  return result;
}

- (CGSize)_audioButtonSize
{
  void *v2;
  char v3;
  double v4;
  double v5;
  CGSize result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAudioMessagesEntryViewRecordingEnabled");

  v4 = 22.0;
  v5 = 22.0;
  if ((v3 & 1) == 0)
  {
    if (CKPixelWidth_once_7 != -1)
      dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
    v4 = *(double *)&CKPixelWidth_sPixel_7 + 20.0;
    v5 = *(double *)&CKPixelWidth_sPixel_7 + 20.0;
  }
  result.height = v5;
  result.width = v4;
  return result;
}

- (CGSize)browserButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (browserButtonSize_once != -1)
    dispatch_once(&browserButtonSize_once, &__block_literal_global_843);
  v2 = *(double *)&browserButtonSize_sBehavior_0;
  v3 = *(double *)&browserButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __33__CKUIBehavior_browserButtonSize__block_invoke()
{
  browserButtonSize_sBehavior_0 = 0x4044800000000000;
  browserButtonSize_sBehavior_1 = 0x4040000000000000;
}

- (double)arrowButtonRightPadding
{
  if (arrowButtonRightPadding_once != -1)
    dispatch_once(&arrowButtonRightPadding_once, &__block_literal_global_844);
  return *(double *)&arrowButtonRightPadding_sBehavior;
}

void __39__CKUIBehavior_arrowButtonRightPadding__block_invoke()
{
  arrowButtonRightPadding_sBehavior = 0x4022000000000000;
}

- (double)entryViewTextOneLineHeight
{
  void *v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  uint64_t v11;
  double v12;
  BOOL v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewTextOneLineHeight_sContentSizeCategory_entryViewTextOneLineHeight, (UIContentSizeCategory)v3)|| entryViewTextOneLineHeight_sIsBoldTextEnabled_entryViewTextOneLineHeight != IsBoldTextEnabled|| (*(double *)&entryViewTextOneLineHeight_sTextFontSize_entryViewTextOneLineHeight == v5? (v14 = *(double *)&entryViewTextOneLineHeight_sCustomTextFontSize_entryViewTextOneLineHeight == v6): (v14 = 0), !v14|| (objc_msgSend((id)entryViewTextOneLineHeight_sCustomTextFontName_entryViewTextOneLineHeight, "isEqualToString:", v9, *(double *)&entryViewTextOneLineHeight_sTextFontSize_entryViewTextOneLineHeight, *(double *)&entryViewTextOneLineHeight_sCustomTextFontSize_entryViewTextOneLineHeight) & 1) == 0))
  {
    -[CKUIBehavior balloonTextFont](self, "balloonTextFont");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "lineHeight");
    entryViewTextOneLineHeight_sBehavior = v11;

    objc_storeStrong((id *)&entryViewTextOneLineHeight_sContentSizeCategory_entryViewTextOneLineHeight, v3);
    entryViewTextOneLineHeight_sIsBoldTextEnabled_entryViewTextOneLineHeight = IsBoldTextEnabled;
    entryViewTextOneLineHeight_sTextFontSize_entryViewTextOneLineHeight = *(_QWORD *)&v5;
    entryViewTextOneLineHeight_sCustomTextFontSize_entryViewTextOneLineHeight = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewTextOneLineHeight_sCustomTextFontName_entryViewTextOneLineHeight, v8);
  }
  v12 = *(double *)&entryViewTextOneLineHeight_sBehavior;

  return v12;
}

- (double)entryViewMaxHeight
{
  if (entryViewMaxHeight_once != -1)
    dispatch_once(&entryViewMaxHeight_once, &__block_literal_global_850);
  return *(double *)&entryViewMaxHeight_sBehavior;
}

void __34__CKUIBehavior_entryViewMaxHeight__block_invoke()
{
  entryViewMaxHeight_sBehavior = 0x7FEFFFFFFFFFFFFFLL;
}

- (double)entryViewMaxSendLaterHeight
{
  if (entryViewMaxSendLaterHeight_once != -1)
    dispatch_once(&entryViewMaxSendLaterHeight_once, &__block_literal_global_852);
  return *(double *)&entryViewMaxSendLaterHeight_sBehavior;
}

void __43__CKUIBehavior_entryViewMaxSendLaterHeight__block_invoke()
{
  double v0;

  if (CKIsBigIdiom_onceToken != -1)
    dispatch_once(&CKIsBigIdiom_onceToken, &__block_literal_global_4567);
  v0 = 33.0;
  if (CKIsBigIdiom_sBig)
    v0 = 27.0;
  entryViewMaxSendLaterHeight_sBehavior = *(_QWORD *)&v0;
}

- (double)entryViewMaxPluginShelfHeight
{
  if (entryViewMaxPluginShelfHeight_once != -1)
    dispatch_once(&entryViewMaxPluginShelfHeight_once, &__block_literal_global_853);
  return *(double *)&entryViewMaxPluginShelfHeight_sBehavior;
}

double __45__CKUIBehavior_entryViewMaxPluginShelfHeight__block_invoke()
{
  double result;

  if (CKIsBigIdiom_onceToken != -1)
    dispatch_once(&CKIsBigIdiom_onceToken, &__block_literal_global_4567);
  result = dbl_18E7CAE50[CKIsBigIdiom_sBig == 0];
  entryViewMaxPluginShelfHeight_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)entryViewMaxExtensionShelfHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __48__CKUIBehavior_entryViewMaxExtensionShelfHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewMaxExtensionShelfHeight_once != -1)
    dispatch_once(&entryViewMaxExtensionShelfHeight_once, block);
  return *(double *)&entryViewMaxExtensionShelfHeight_sBehavior;
}

uint64_t __48__CKUIBehavior_entryViewMaxExtensionShelfHeight__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "maxTranscriptPortraitHeight");
  entryViewMaxExtensionShelfHeight_sBehavior = v2;
  return result;
}

- (double)entryViewMinPluginShelfHeight
{
  if (entryViewMinPluginShelfHeight_once != -1)
    dispatch_once(&entryViewMinPluginShelfHeight_once, &__block_literal_global_854);
  return *(double *)&entryViewMinPluginShelfHeight_sBehavior;
}

void __45__CKUIBehavior_entryViewMinPluginShelfHeight__block_invoke()
{
  entryViewMinPluginShelfHeight_sBehavior = 0x4057000000000000;
}

- (double)entryViewMaxHandWritingPluginShelfHeight
{
  if (entryViewMaxHandWritingPluginShelfHeight_once != -1)
    dispatch_once(&entryViewMaxHandWritingPluginShelfHeight_once, &__block_literal_global_855);
  return *(double *)&entryViewMaxHandWritingPluginShelfHeight_sBehavior;
}

void __56__CKUIBehavior_entryViewMaxHandWritingPluginShelfHeight__block_invoke()
{
  entryViewMaxHandWritingPluginShelfHeight_sBehavior = 0x405A000000000000;
}

- (double)entryViewAudioButtonCoverSpace
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __46__CKUIBehavior_entryViewAudioButtonCoverSpace__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewAudioButtonCoverSpace_once != -1)
    dispatch_once(&entryViewAudioButtonCoverSpace_once, block);
  return *(double *)&entryViewAudioButtonCoverSpace_sBehavior;
}

uint64_t __46__CKUIBehavior_entryViewAudioButtonCoverSpace__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "_entryViewAudioButtonCoverSpace");
  entryViewAudioButtonCoverSpace_sBehavior = v2;
  return result;
}

- (double)_entryViewAudioButtonCoverSpace
{
  void *v2;
  int v3;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAudioMessagesEntryViewRecordingEnabled");

  if (!v3)
  {
    if (CKPixelWidth_once_7 == -1)
      return *(double *)&CKPixelWidth_sPixel_7 + 4.5;
LABEL_8:
    dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
    return *(double *)&CKPixelWidth_sPixel_7 + 4.5;
  }
  if (CKIsRunningInMacCatalyst())
  {
    if (CKPixelWidth_once_7 == -1)
      return *(double *)&CKPixelWidth_sPixel_7 + 4.5;
    goto LABEL_8;
  }
  return 10.0;
}

- (double)entryViewDictationButtonCoverSpace
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __50__CKUIBehavior_entryViewDictationButtonCoverSpace__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewDictationButtonCoverSpace_once != -1)
    dispatch_once(&entryViewDictationButtonCoverSpace_once, block);
  return *(double *)&entryViewDictationButtonCoverSpace_sBehavior;
}

uint64_t __50__CKUIBehavior_entryViewDictationButtonCoverSpace__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "_entryViewDictationButtonCoverSpace");
  entryViewDictationButtonCoverSpace_sBehavior = v2;
  return result;
}

- (double)_entryViewDictationButtonCoverSpace
{
  void *v2;
  char v3;
  double result;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAudioMessagesEntryViewRecordingEnabled");

  result = 10.0;
  if ((v3 & 1) == 0)
  {
    if (CKPixelWidth_once_7 != -1)
      dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
    return *(double *)&CKPixelWidth_sPixel_7 + 4.5;
  }
  return result;
}

- (double)entryViewWithSendMenuBottomContentInsetWithKeyboardVisible
{
  if (entryViewWithSendMenuBottomContentInsetWithKeyboardVisible_once != -1)
    dispatch_once(&entryViewWithSendMenuBottomContentInsetWithKeyboardVisible_once, &__block_literal_global_857);
  return *(double *)&entryViewWithSendMenuBottomContentInsetWithKeyboardVisible_sBehavior;
}

void __74__CKUIBehavior_entryViewWithSendMenuBottomContentInsetWithKeyboardVisible__block_invoke()
{
  entryViewWithSendMenuBottomContentInsetWithKeyboardVisible_sBehavior = 0x4024000000000000;
}

- (double)entryViewWithSendMenuBottomContentInsetWithoutKeyboardVisible
{
  if (entryViewWithSendMenuBottomContentInsetWithoutKeyboardVisible_once != -1)
    dispatch_once(&entryViewWithSendMenuBottomContentInsetWithoutKeyboardVisible_once, &__block_literal_global_858);
  return *(double *)&entryViewWithSendMenuBottomContentInsetWithoutKeyboardVisible_sBehavior;
}

void __77__CKUIBehavior_entryViewWithSendMenuBottomContentInsetWithoutKeyboardVisible__block_invoke()
{
  entryViewWithSendMenuBottomContentInsetWithoutKeyboardVisible_sBehavior = 0x4010000000000000;
}

- (double)entryViewLeftInsetForRecordedAudioCancelButton
{
  if (entryViewLeftInsetForRecordedAudioCancelButton_once != -1)
    dispatch_once(&entryViewLeftInsetForRecordedAudioCancelButton_once, &__block_literal_global_859);
  return *(double *)&entryViewLeftInsetForRecordedAudioCancelButton_sBehavior;
}

double __62__CKUIBehavior_entryViewLeftInsetForRecordedAudioCancelButton__block_invoke()
{
  double result;

  if (CKPixelWidth_once_7 != -1)
    dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
  result = *(double *)&CKPixelWidth_sPixel_7 + 8.0;
  *(double *)&entryViewLeftInsetForRecordedAudioCancelButton_sBehavior = *(double *)&CKPixelWidth_sPixel_7 + 8.0;
  return result;
}

- (CGSize)clearPluginButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (clearPluginButtonSize_once != -1)
    dispatch_once(&clearPluginButtonSize_once, &__block_literal_global_860);
  v2 = *(double *)&clearPluginButtonSize_sBehavior_0;
  v3 = *(double *)&clearPluginButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __37__CKUIBehavior_clearPluginButtonSize__block_invoke()
{
  clearPluginButtonSize_sBehavior_0 = 0x4038000000000000;
  clearPluginButtonSize_sBehavior_1 = 0x4038000000000000;
}

- (CGSize)generationPluginButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (generationPluginButtonSize_once != -1)
    dispatch_once(&generationPluginButtonSize_once, &__block_literal_global_861);
  v2 = *(double *)&generationPluginButtonSize_sBehavior_0;
  v3 = *(double *)&generationPluginButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __42__CKUIBehavior_generationPluginButtonSize__block_invoke()
{
  generationPluginButtonSize_sBehavior_0 = 0x4038000000000000;
  generationPluginButtonSize_sBehavior_1 = 0x4038000000000000;
}

- (UIButtonConfiguration)clearPluginButtonConfiguration
{
  if (clearPluginButtonConfiguration_once != -1)
    dispatch_once(&clearPluginButtonConfiguration_once, &__block_literal_global_862);
  return (UIButtonConfiguration *)(id)clearPluginButtonConfiguration_sBehavior;
}

void __46__CKUIBehavior_clearPluginButtonConfiguration__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "filledButtonConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Plugin-Cancel"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setImage:", v1);
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setBaseBackgroundColor:", v2);

  v3 = (void *)clearPluginButtonConfiguration_sBehavior;
  clearPluginButtonConfiguration_sBehavior = (uint64_t)v0;

}

- (UIButtonConfiguration)generationPluginButtonConfiguration
{
  if (generationPluginButtonConfiguration_once != -1)
    dispatch_once(&generationPluginButtonConfiguration_once, &__block_literal_global_865);
  return (UIButtonConfiguration *)(id)generationPluginButtonConfiguration_sBehavior;
}

void __51__CKUIBehavior_generationPluginButtonConfiguration__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "filledButtonConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("sparkles"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setImage:", v1);
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setBaseBackgroundColor:", v2);

  v3 = (void *)generationPluginButtonConfiguration_sBehavior;
  generationPluginButtonConfiguration_sBehavior = (uint64_t)v0;

}

- (double)paddleOverlayRadius
{
  if (paddleOverlayRadius_once != -1)
    dispatch_once(&paddleOverlayRadius_once, &__block_literal_global_868);
  return *(double *)&paddleOverlayRadius_sBehavior;
}

void __35__CKUIBehavior_paddleOverlayRadius__block_invoke()
{
  paddleOverlayRadius_sBehavior = 0x402A000000000000;
}

- (double)paddleDividerInset
{
  if (paddleDividerInset_once != -1)
    dispatch_once(&paddleDividerInset_once, &__block_literal_global_869);
  return 0.0;
}

- (BOOL)platformSupportsMentioning
{
  if (platformSupportsMentioning_once != -1)
    dispatch_once(&platformSupportsMentioning_once, &__block_literal_global_870);
  return platformSupportsMentioning_sBehavior;
}

void __42__CKUIBehavior_platformSupportsMentioning__block_invoke()
{
  platformSupportsMentioning_sBehavior = 1;
}

- (UIFont)characterCountSatelliteFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)characterCountSatelliteFont_sContentSizeCategory_characterCountSatelliteFont, (UIContentSizeCategory)v2)|| characterCountSatelliteFont_sIsIncreaseContrastEnabled_characterCountSatelliteFont != v3|| characterCountSatelliteFont_sIsBoldTextEnabled_characterCountSatelliteFont != IsBoldTextEnabled|| *(double *)&characterCountSatelliteFont_sTextFontSize_characterCountSatelliteFont != v5|| *(double *)&characterCountSatelliteFont_sCustomTextFontSize_characterCountSatelliteFont != v6|| (objc_msgSend((id)characterCountSatelliteFont_sCustomTextFontName_characterCountSatelliteFont, "isEqualToString:", v9, *(double *)&characterCountSatelliteFont_sCustomTextFontSize_characterCountSatelliteFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB550], *MEMORY[0x1E0DC1438]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)characterCountSatelliteFont_sBehavior;
    characterCountSatelliteFont_sBehavior = v10;

    objc_storeStrong((id *)&characterCountSatelliteFont_sContentSizeCategory_characterCountSatelliteFont, v2);
    characterCountSatelliteFont_sIsIncreaseContrastEnabled_characterCountSatelliteFont = v3;
    characterCountSatelliteFont_sIsBoldTextEnabled_characterCountSatelliteFont = IsBoldTextEnabled;
    characterCountSatelliteFont_sTextFontSize_characterCountSatelliteFont = *(_QWORD *)&v5;
    characterCountSatelliteFont_sCustomTextFontSize_characterCountSatelliteFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&characterCountSatelliteFont_sCustomTextFontName_characterCountSatelliteFont, v8);
  }
  v12 = (UIFont *)(id)characterCountSatelliteFont_sBehavior;

  return v12;
}

- (UIFont)audioHintFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)audioHintFont_sContentSizeCategory_audioHintFont, (UIContentSizeCategory)v2)|| audioHintFont_sIsIncreaseContrastEnabled_audioHintFont != v3|| audioHintFont_sIsBoldTextEnabled_audioHintFont != IsBoldTextEnabled|| (v10 = audioHintFont_sTextFontSize_audioHintFont, *(double *)&audioHintFont_sTextFontSize_audioHintFont != v5)|| (v10 = audioHintFont_sCustomTextFontSize_audioHintFont, *(double *)&audioHintFont_sCustomTextFontSize_audioHintFont != v6)|| (objc_msgSend((id)audioHintFont_sCustomTextFontName_audioHintFont, "isEqualToString:", v9, *(double *)&audioHintFont_sCustomTextFontSize_audioHintFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)audioHintFont_sBehavior;
    audioHintFont_sBehavior = v11;

    objc_storeStrong((id *)&audioHintFont_sContentSizeCategory_audioHintFont, v2);
    audioHintFont_sIsIncreaseContrastEnabled_audioHintFont = v3;
    audioHintFont_sIsBoldTextEnabled_audioHintFont = IsBoldTextEnabled;
    audioHintFont_sTextFontSize_audioHintFont = *(_QWORD *)&v5;
    audioHintFont_sCustomTextFontSize_audioHintFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&audioHintFont_sCustomTextFontName_audioHintFont, v8);
  }
  v13 = (UIFont *)(id)audioHintFont_sBehavior;

  return v13;
}

- (UIFont)mentionsCellNameFont
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fontDescriptor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 0x8000);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0DC1350];
  objc_msgSend(v2, "pointSize");
  objc_msgSend(v5, "fontWithDescriptor:size:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIFont *)v6;
}

- (NSString)entryViewSendButtonName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewSendButtonName_sContentSizeCategory_entryViewSendButtonName, (UIContentSizeCategory)v2)|| entryViewSendButtonName_sIsIncreaseContrastEnabled_entryViewSendButtonName != v3|| entryViewSendButtonName_sIsBoldTextEnabled_entryViewSendButtonName != IsBoldTextEnabled|| *(double *)&entryViewSendButtonName_sTextFontSize_entryViewSendButtonName != v5|| *(double *)&entryViewSendButtonName_sCustomTextFontSize_entryViewSendButtonName != v6|| (objc_msgSend((id)entryViewSendButtonName_sCustomTextFontName_entryViewSendButtonName, "isEqualToString:", v9, *(double *)&entryViewSendButtonName_sCustomTextFontSize_entryViewSendButtonName) & 1) == 0)
  {
    v10 = (void *)entryViewSendButtonName_sBehavior;
    entryViewSendButtonName_sBehavior = (uint64_t)CFSTR("SendButton");

    objc_storeStrong((id *)&entryViewSendButtonName_sContentSizeCategory_entryViewSendButtonName, v2);
    entryViewSendButtonName_sIsIncreaseContrastEnabled_entryViewSendButtonName = v3;
    entryViewSendButtonName_sIsBoldTextEnabled_entryViewSendButtonName = IsBoldTextEnabled;
    entryViewSendButtonName_sTextFontSize_entryViewSendButtonName = *(_QWORD *)&v5;
    entryViewSendButtonName_sCustomTextFontSize_entryViewSendButtonName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewSendButtonName_sCustomTextFontName_entryViewSendButtonName, v8);
  }
  v11 = (NSString *)(id)entryViewSendButtonName_sBehavior;

  return v11;
}

- (NSString)entryViewAudioButtonName
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewAudioButtonName_sContentSizeCategory_entryViewAudioButtonName, (UIContentSizeCategory)v3)|| entryViewAudioButtonName_sIsIncreaseContrastEnabled_entryViewAudioButtonName != v4|| entryViewAudioButtonName_sIsBoldTextEnabled_entryViewAudioButtonName != IsBoldTextEnabled|| (v11 = entryViewAudioButtonName_sTextFontSize_entryViewAudioButtonName, *(double *)&entryViewAudioButtonName_sTextFontSize_entryViewAudioButtonName != v6)|| (v11 = entryViewAudioButtonName_sCustomTextFontSize_entryViewAudioButtonName, *(double *)&entryViewAudioButtonName_sCustomTextFontSize_entryViewAudioButtonName != v7)|| (objc_msgSend((id)entryViewAudioButtonName_sCustomTextFontName_entryViewAudioButtonName, "isEqualToString:", v10, *(double *)&entryViewAudioButtonName_sCustomTextFontSize_entryViewAudioButtonName) & 1) == 0)
  {
    -[CKUIBehavior audioButtonName](self, "audioButtonName", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)entryViewAudioButtonName_sBehavior;
    entryViewAudioButtonName_sBehavior = v12;

    objc_storeStrong((id *)&entryViewAudioButtonName_sContentSizeCategory_entryViewAudioButtonName, v3);
    entryViewAudioButtonName_sIsIncreaseContrastEnabled_entryViewAudioButtonName = v4;
    entryViewAudioButtonName_sIsBoldTextEnabled_entryViewAudioButtonName = IsBoldTextEnabled;
    entryViewAudioButtonName_sTextFontSize_entryViewAudioButtonName = *(_QWORD *)&v6;
    entryViewAudioButtonName_sCustomTextFontSize_entryViewAudioButtonName = *(_QWORD *)&v7;
    objc_storeStrong((id *)&entryViewAudioButtonName_sCustomTextFontName_entryViewAudioButtonName, v9);
  }
  v14 = (NSString *)(id)entryViewAudioButtonName_sBehavior;

  return v14;
}

- (id)audioButtonName
{
  void *v2;
  int v3;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAudioMessagesEntryViewRecordingEnabled");

  if (v3)
    return CFSTR("EntryViewWaveformImage");
  else
    return CFSTR("AudioButton");
}

- (NSString)entryViewArrowButtonName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewArrowButtonName_sContentSizeCategory_entryViewArrowButtonName, (UIContentSizeCategory)v2)|| entryViewArrowButtonName_sIsIncreaseContrastEnabled_entryViewArrowButtonName != v3|| entryViewArrowButtonName_sIsBoldTextEnabled_entryViewArrowButtonName != IsBoldTextEnabled|| *(double *)&entryViewArrowButtonName_sTextFontSize_entryViewArrowButtonName != v5|| *(double *)&entryViewArrowButtonName_sCustomTextFontSize_entryViewArrowButtonName != v6|| (objc_msgSend((id)entryViewArrowButtonName_sCustomTextFontName_entryViewArrowButtonName, "isEqualToString:", v9, *(double *)&entryViewArrowButtonName_sCustomTextFontSize_entryViewArrowButtonName) & 1) == 0)
  {
    v10 = (void *)entryViewArrowButtonName_sBehavior;
    entryViewArrowButtonName_sBehavior = (uint64_t)CFSTR("chevron.forward.square.fill");

    objc_storeStrong((id *)&entryViewArrowButtonName_sContentSizeCategory_entryViewArrowButtonName, v2);
    entryViewArrowButtonName_sIsIncreaseContrastEnabled_entryViewArrowButtonName = v3;
    entryViewArrowButtonName_sIsBoldTextEnabled_entryViewArrowButtonName = IsBoldTextEnabled;
    entryViewArrowButtonName_sTextFontSize_entryViewArrowButtonName = *(_QWORD *)&v5;
    entryViewArrowButtonName_sCustomTextFontSize_entryViewArrowButtonName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewArrowButtonName_sCustomTextFontName_entryViewArrowButtonName, v8);
  }
  v11 = (NSString *)(id)entryViewArrowButtonName_sBehavior;

  return v11;
}

- (NSString)entryViewPhotoButtonName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewPhotoButtonName_sContentSizeCategory_entryViewPhotoButtonName, (UIContentSizeCategory)v2)|| entryViewPhotoButtonName_sIsIncreaseContrastEnabled_entryViewPhotoButtonName != v3|| entryViewPhotoButtonName_sIsBoldTextEnabled_entryViewPhotoButtonName != IsBoldTextEnabled|| *(double *)&entryViewPhotoButtonName_sTextFontSize_entryViewPhotoButtonName != v5|| *(double *)&entryViewPhotoButtonName_sCustomTextFontSize_entryViewPhotoButtonName != v6|| (objc_msgSend((id)entryViewPhotoButtonName_sCustomTextFontName_entryViewPhotoButtonName, "isEqualToString:", v9, *(double *)&entryViewPhotoButtonName_sCustomTextFontSize_entryViewPhotoButtonName) & 1) == 0)
  {
    v10 = (void *)entryViewPhotoButtonName_sBehavior;
    entryViewPhotoButtonName_sBehavior = (uint64_t)CFSTR("camera.fill");

    objc_storeStrong((id *)&entryViewPhotoButtonName_sContentSizeCategory_entryViewPhotoButtonName, v2);
    entryViewPhotoButtonName_sIsIncreaseContrastEnabled_entryViewPhotoButtonName = v3;
    entryViewPhotoButtonName_sIsBoldTextEnabled_entryViewPhotoButtonName = IsBoldTextEnabled;
    entryViewPhotoButtonName_sTextFontSize_entryViewPhotoButtonName = *(_QWORD *)&v5;
    entryViewPhotoButtonName_sCustomTextFontSize_entryViewPhotoButtonName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewPhotoButtonName_sCustomTextFontName_entryViewPhotoButtonName, v8);
  }
  v11 = (NSString *)(id)entryViewPhotoButtonName_sBehavior;

  return v11;
}

- (NSString)entryViewPlusButtonName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewPlusButtonName_sContentSizeCategory_entryViewPlusButtonName, (UIContentSizeCategory)v2)|| entryViewPlusButtonName_sIsIncreaseContrastEnabled_entryViewPlusButtonName != v3|| entryViewPlusButtonName_sIsBoldTextEnabled_entryViewPlusButtonName != IsBoldTextEnabled|| *(double *)&entryViewPlusButtonName_sTextFontSize_entryViewPlusButtonName != v5|| *(double *)&entryViewPlusButtonName_sCustomTextFontSize_entryViewPlusButtonName != v6|| (objc_msgSend((id)entryViewPlusButtonName_sCustomTextFontName_entryViewPlusButtonName, "isEqualToString:", v9, *(double *)&entryViewPlusButtonName_sCustomTextFontSize_entryViewPlusButtonName) & 1) == 0)
  {
    v10 = (void *)entryViewPlusButtonName_sBehavior;
    entryViewPlusButtonName_sBehavior = (uint64_t)CFSTR("plus.circle.fill");

    objc_storeStrong((id *)&entryViewPlusButtonName_sContentSizeCategory_entryViewPlusButtonName, v2);
    entryViewPlusButtonName_sIsIncreaseContrastEnabled_entryViewPlusButtonName = v3;
    entryViewPlusButtonName_sIsBoldTextEnabled_entryViewPlusButtonName = IsBoldTextEnabled;
    entryViewPlusButtonName_sTextFontSize_entryViewPlusButtonName = *(_QWORD *)&v5;
    entryViewPlusButtonName_sCustomTextFontSize_entryViewPlusButtonName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewPlusButtonName_sCustomTextFontName_entryViewPlusButtonName, v8);
  }
  v11 = (NSString *)(id)entryViewPlusButtonName_sBehavior;

  return v11;
}

- (NSString)entryViewAppButtonName
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  NSString *v11;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewAppButtonName_sContentSizeCategory_entryViewAppButtonName, (UIContentSizeCategory)v2)|| entryViewAppButtonName_sIsIncreaseContrastEnabled_entryViewAppButtonName != v3|| entryViewAppButtonName_sIsBoldTextEnabled_entryViewAppButtonName != IsBoldTextEnabled|| *(double *)&entryViewAppButtonName_sTextFontSize_entryViewAppButtonName != v5|| *(double *)&entryViewAppButtonName_sCustomTextFontSize_entryViewAppButtonName != v6|| (objc_msgSend((id)entryViewAppButtonName_sCustomTextFontName_entryViewAppButtonName, "isEqualToString:", v9, *(double *)&entryViewAppButtonName_sCustomTextFontSize_entryViewAppButtonName) & 1) == 0)
  {
    v10 = (void *)entryViewAppButtonName_sBehavior;
    entryViewAppButtonName_sBehavior = (uint64_t)CFSTR("appstore.capsule.2.fill");

    objc_storeStrong((id *)&entryViewAppButtonName_sContentSizeCategory_entryViewAppButtonName, v2);
    entryViewAppButtonName_sIsIncreaseContrastEnabled_entryViewAppButtonName = v3;
    entryViewAppButtonName_sIsBoldTextEnabled_entryViewAppButtonName = IsBoldTextEnabled;
    entryViewAppButtonName_sTextFontSize_entryViewAppButtonName = *(_QWORD *)&v5;
    entryViewAppButtonName_sCustomTextFontSize_entryViewAppButtonName = *(_QWORD *)&v6;
    objc_storeStrong((id *)&entryViewAppButtonName_sCustomTextFontName_entryViewAppButtonName, v8);
  }
  v11 = (NSString *)(id)entryViewAppButtonName_sBehavior;

  return v11;
}

- (NSString)entryViewDictationButtonName
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)entryViewDictationButtonName_sContentSizeCategory_entryViewDictationButtonName, (UIContentSizeCategory)v3)|| entryViewDictationButtonName_sIsIncreaseContrastEnabled_entryViewDictationButtonName != v4|| entryViewDictationButtonName_sIsBoldTextEnabled_entryViewDictationButtonName != IsBoldTextEnabled|| (v11 = entryViewDictationButtonName_sTextFontSize_entryViewDictationButtonName, *(double *)&entryViewDictationButtonName_sTextFontSize_entryViewDictationButtonName != v6)|| (v11 = entryViewDictationButtonName_sCustomTextFontSize_entryViewDictationButtonName, *(double *)&entryViewDictationButtonName_sCustomTextFontSize_entryViewDictationButtonName != v7)|| (objc_msgSend((id)entryViewDictationButtonName_sCustomTextFontName_entryViewDictationButtonName, "isEqualToString:", v10, *(double *)&entryViewDictationButtonName_sCustomTextFontSize_entryViewDictationButtonName) & 1) == 0)
  {
    -[CKUIBehavior dictationButtonName](self, "dictationButtonName", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)entryViewDictationButtonName_sBehavior;
    entryViewDictationButtonName_sBehavior = v12;

    objc_storeStrong((id *)&entryViewDictationButtonName_sContentSizeCategory_entryViewDictationButtonName, v3);
    entryViewDictationButtonName_sIsIncreaseContrastEnabled_entryViewDictationButtonName = v4;
    entryViewDictationButtonName_sIsBoldTextEnabled_entryViewDictationButtonName = IsBoldTextEnabled;
    entryViewDictationButtonName_sTextFontSize_entryViewDictationButtonName = *(_QWORD *)&v6;
    entryViewDictationButtonName_sCustomTextFontSize_entryViewDictationButtonName = *(_QWORD *)&v7;
    objc_storeStrong((id *)&entryViewDictationButtonName_sCustomTextFontName_entryViewDictationButtonName, v9);
  }
  v14 = (NSString *)(id)entryViewDictationButtonName_sBehavior;

  return v14;
}

- (id)dictationButtonName
{
  void *v2;
  int v3;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isAudioMessagesEntryViewRecordingEnabled");

  if (v3)
    return CFSTR("mic.fill");
  else
    return CFSTR("mic");
}

- (UIColor)entryViewDictationButtonColor
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __45__CKUIBehavior_entryViewDictationButtonColor__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewDictationButtonColor_once != -1)
    dispatch_once(&entryViewDictationButtonColor_once, block);
  return (UIColor *)(id)entryViewDictationButtonColor_sBehavior;
}

void __45__CKUIBehavior_entryViewDictationButtonColor__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "_entryViewDictationButtonColor");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)entryViewDictationButtonColor_sBehavior;
  entryViewDictationButtonColor_sBehavior = v1;

}

- (id)_entryViewDictationButtonColor
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.705882353, 0.721568627, 0.749019608, 1.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.290196078, 0.294117647, 0.301960784, 1.0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dynamicColorWithLightColor:darkColor:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (UIColor)entryViewPlusButtonDefaultBackgroundColor
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __57__CKUIBehavior_entryViewPlusButtonDefaultBackgroundColor__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (entryViewPlusButtonDefaultBackgroundColor_once != -1)
    dispatch_once(&entryViewPlusButtonDefaultBackgroundColor_once, block);
  return (UIColor *)(id)entryViewPlusButtonDefaultBackgroundColor_sBehavior;
}

void __57__CKUIBehavior_entryViewPlusButtonDefaultBackgroundColor__block_invoke(uint64_t a1)
{
  int v1;
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  uint64_t v10;
  void *v11;

  v1 = objc_msgSend(*(id *)(a1 + 32), "entryViewBackgroundShouldUseVariableBlur");
  v2 = (void *)MEMORY[0x1E0CEA478];
  if (v1)
  {
    objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.8235, 0.8275, 0.8471, 0.46);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)MEMORY[0x1E0CEA478];
    v5 = 0.125490196;
    v6 = 0.129411765;
    v7 = 0.133333333;
    v8 = 1.0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.8235, 0.8275, 0.8471, 0.5);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)MEMORY[0x1E0CEA478];
    v5 = 0.243137255;
    v6 = 0.247058824;
    v7 = 0.258823529;
    v8 = 0.5;
  }
  objc_msgSend(v4, "colorWithRed:green:blue:alpha:", v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dynamicColorWithLightColor:darkColor:", v3, v9);
  v10 = objc_claimAutoreleasedReturnValue();

  v11 = (void *)entryViewPlusButtonDefaultBackgroundColor_sBehavior;
  entryViewPlusButtonDefaultBackgroundColor_sBehavior = v10;

}

- (UIColor)entryViewPlusButtonSendMenuOpenBackgroundColor
{
  if (entryViewPlusButtonSendMenuOpenBackgroundColor_once != -1)
    dispatch_once(&entryViewPlusButtonSendMenuOpenBackgroundColor_once, &__block_literal_global_889);
  return (UIColor *)(id)entryViewPlusButtonSendMenuOpenBackgroundColor_sBehavior;
}

void __62__CKUIBehavior_entryViewPlusButtonSendMenuOpenBackgroundColor__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 1.0, 1.0, 1.0, 1.0);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.125490196, 0.125490196, 0.125490196, 0.85);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "dynamicColorWithLightColor:darkColor:", v4, v1);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)entryViewPlusButtonSendMenuOpenBackgroundColor_sBehavior;
  entryViewPlusButtonSendMenuOpenBackgroundColor_sBehavior = v2;

}

- (UIFont)sendMenuListItemFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  UIFont *v15;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)sendMenuListItemFont_sContentSizeCategory_sendMenuListItemFont, (UIContentSizeCategory)v2)|| sendMenuListItemFont_sIsIncreaseContrastEnabled_sendMenuListItemFont != v3|| sendMenuListItemFont_sIsBoldTextEnabled_sendMenuListItemFont != IsBoldTextEnabled|| (v10 = sendMenuListItemFont_sTextFontSize_sendMenuListItemFont, *(double *)&sendMenuListItemFont_sTextFontSize_sendMenuListItemFont != v5)|| (v10 = sendMenuListItemFont_sCustomTextFontSize_sendMenuListItemFont, *(double *)&sendMenuListItemFont_sCustomTextFontSize_sendMenuListItemFont != v6)|| (objc_msgSend((id)sendMenuListItemFont_sCustomTextFontName_sendMenuListItemFont, "isEqualToString:", v9, *(double *)&sendMenuListItemFont_sCustomTextFontSize_sendMenuListItemFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA5F8], "metricsForTextStyle:", *MEMORY[0x1E0CEB5B8], *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 24.0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "scaledFontForFont:", v12);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)sendMenuListItemFont_sBehavior;
    sendMenuListItemFont_sBehavior = v13;

    objc_storeStrong((id *)&sendMenuListItemFont_sContentSizeCategory_sendMenuListItemFont, v2);
    sendMenuListItemFont_sIsIncreaseContrastEnabled_sendMenuListItemFont = v3;
    sendMenuListItemFont_sIsBoldTextEnabled_sendMenuListItemFont = IsBoldTextEnabled;
    sendMenuListItemFont_sTextFontSize_sendMenuListItemFont = *(_QWORD *)&v5;
    sendMenuListItemFont_sCustomTextFontSize_sendMenuListItemFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&sendMenuListItemFont_sCustomTextFontName_sendMenuListItemFont, v8);
  }
  v15 = (UIFont *)(id)sendMenuListItemFont_sBehavior;

  return v15;
}

- (UIColor)sendMenuListItemTextColor
{
  if (sendMenuListItemTextColor_once != -1)
    dispatch_once(&sendMenuListItemTextColor_once, &__block_literal_global_890);
  return (UIColor *)(id)sendMenuListItemTextColor_sBehavior;
}

void __41__CKUIBehavior_sendMenuListItemTextColor__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v0 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.06, 0.06, 0.06, 1.0);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "colorWithAlphaComponent:", 0.7);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "dynamicColorWithLightColor:darkColor:", v5, v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)sendMenuListItemTextColor_sBehavior;
  sendMenuListItemTextColor_sBehavior = v3;

}

- (CGSize)sendMenuListItemIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (sendMenuListItemIconSize_once != -1)
    dispatch_once(&sendMenuListItemIconSize_once, &__block_literal_global_891);
  v2 = *(double *)&sendMenuListItemIconSize_sBehavior_0;
  v3 = *(double *)&sendMenuListItemIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __40__CKUIBehavior_sendMenuListItemIconSize__block_invoke()
{
  sendMenuListItemIconSize_sBehavior_0 = 0x404B000000000000;
  sendMenuListItemIconSize_sBehavior_1 = 0x404B000000000000;
}

- (double)sendMenuListItemIconToLabelPadding
{
  if (sendMenuListItemIconToLabelPadding_once != -1)
    dispatch_once(&sendMenuListItemIconToLabelPadding_once, &__block_literal_global_892);
  return *(double *)&sendMenuListItemIconToLabelPadding_sBehavior;
}

void __50__CKUIBehavior_sendMenuListItemIconToLabelPadding__block_invoke()
{
  sendMenuListItemIconToLabelPadding_sBehavior = 0x4032000000000000;
}

- (double)sendMenuListItemIconToEdgePadding
{
  if (sendMenuListItemIconToEdgePadding_once != -1)
    dispatch_once(&sendMenuListItemIconToEdgePadding_once, &__block_literal_global_893);
  return *(double *)&sendMenuListItemIconToEdgePadding_sBehavior;
}

void __49__CKUIBehavior_sendMenuListItemIconToEdgePadding__block_invoke()
{
  sendMenuListItemIconToEdgePadding_sBehavior = 0x403B000000000000;
}

- (double)sendMenuListItemIconVerticalPadding
{
  if (sendMenuListItemIconVerticalPadding_once != -1)
    dispatch_once(&sendMenuListItemIconVerticalPadding_once, &__block_literal_global_894);
  return *(double *)&sendMenuListItemIconVerticalPadding_sBehavior;
}

void __51__CKUIBehavior_sendMenuListItemIconVerticalPadding__block_invoke()
{
  sendMenuListItemIconVerticalPadding_sBehavior = 0x4018000000000000;
}

- (double)sendMenuCollectionViewBottomContentInset
{
  if (sendMenuCollectionViewBottomContentInset_once != -1)
    dispatch_once(&sendMenuCollectionViewBottomContentInset_once, &__block_literal_global_895);
  return *(double *)&sendMenuCollectionViewBottomContentInset_sBehavior;
}

void __56__CKUIBehavior_sendMenuCollectionViewBottomContentInset__block_invoke()
{
  sendMenuCollectionViewBottomContentInset_sBehavior = 0x403B000000000000;
}

- (UIColor)sendMenuBackdropBackgroundColor
{
  if (sendMenuBackdropBackgroundColor_once != -1)
    dispatch_once(&sendMenuBackdropBackgroundColor_once, &__block_literal_global_896);
  return (UIColor *)(id)sendMenuBackdropBackgroundColor_sBehavior;
}

void __47__CKUIBehavior_sendMenuBackdropBackgroundColor__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v0 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "colorWithAlphaComponent:", 0.75);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "colorWithAlphaComponent:", 0.85);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "dynamicColorWithLightColor:darkColor:", v1, v3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)sendMenuBackdropBackgroundColor_sBehavior;
  sendMenuBackdropBackgroundColor_sBehavior = v4;

}

- (NSArray)sendMenuBackdropBackgroundEffects
{
  if (sendMenuBackdropBackgroundEffects_once != -1)
    dispatch_once(&sendMenuBackdropBackgroundEffects_once, &__block_literal_global_897);
  return (NSArray *)(id)sendMenuBackdropBackgroundEffects_sBehavior;
}

void __49__CKUIBehavior_sendMenuBackdropBackgroundEffects__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA398], "effectWithBlurRadius:", 5.3);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v3[0] = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v3, 1);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)sendMenuBackdropBackgroundEffects_sBehavior;
  sendMenuBackdropBackgroundEffects_sBehavior = v1;

}

- (double)sendMenuAppearAnimationIconBlurInitialRadius
{
  if (sendMenuAppearAnimationIconBlurInitialRadius_once != -1)
    dispatch_once(&sendMenuAppearAnimationIconBlurInitialRadius_once, &__block_literal_global_898);
  return *(double *)&sendMenuAppearAnimationIconBlurInitialRadius_sBehavior;
}

void __60__CKUIBehavior_sendMenuAppearAnimationIconBlurInitialRadius__block_invoke()
{
  sendMenuAppearAnimationIconBlurInitialRadius_sBehavior = 0x400AAAAAAAAAAAABLL;
}

- (double)sendMenuAppearAnimationTextBlurInitialRadius
{
  if (sendMenuAppearAnimationTextBlurInitialRadius_once != -1)
    dispatch_once(&sendMenuAppearAnimationTextBlurInitialRadius_once, &__block_literal_global_899);
  return *(double *)&sendMenuAppearAnimationTextBlurInitialRadius_sBehavior;
}

void __60__CKUIBehavior_sendMenuAppearAnimationTextBlurInitialRadius__block_invoke()
{
  sendMenuAppearAnimationTextBlurInitialRadius_sBehavior = 0x4031000000000000;
}

- (double)sendMenuDismissAnimationIconBlurFinalRadius
{
  if (sendMenuDismissAnimationIconBlurFinalRadius_once != -1)
    dispatch_once(&sendMenuDismissAnimationIconBlurFinalRadius_once, &__block_literal_global_900);
  return *(double *)&sendMenuDismissAnimationIconBlurFinalRadius_sBehavior;
}

void __59__CKUIBehavior_sendMenuDismissAnimationIconBlurFinalRadius__block_invoke()
{
  sendMenuDismissAnimationIconBlurFinalRadius_sBehavior = 0x4012AAAAAAAAAAABLL;
}

- (double)sendMenuDismissAnimationTextBlurFinalRadius
{
  if (sendMenuDismissAnimationTextBlurFinalRadius_once != -1)
    dispatch_once(&sendMenuDismissAnimationTextBlurFinalRadius_once, &__block_literal_global_901);
  return *(double *)&sendMenuDismissAnimationTextBlurFinalRadius_sBehavior;
}

void __59__CKUIBehavior_sendMenuDismissAnimationTextBlurFinalRadius__block_invoke()
{
  sendMenuDismissAnimationTextBlurFinalRadius_sBehavior = 0x4040AAAAAAAAAAABLL;
}

- (double)sendMenuEntryViewContentWidthMultiplier
{
  if (sendMenuEntryViewContentWidthMultiplier_once != -1)
    dispatch_once(&sendMenuEntryViewContentWidthMultiplier_once, &__block_literal_global_902);
  return *(double *)&sendMenuEntryViewContentWidthMultiplier_sBehavior;
}

void __55__CKUIBehavior_sendMenuEntryViewContentWidthMultiplier__block_invoke()
{
  sendMenuEntryViewContentWidthMultiplier_sBehavior = 0x3FE3333333333333;
}

- (double)sendMenuEntryViewHorizontalPositionAdjustment
{
  if (sendMenuEntryViewHorizontalPositionAdjustment_once != -1)
    dispatch_once(&sendMenuEntryViewHorizontalPositionAdjustment_once, &__block_literal_global_903);
  return *(double *)&sendMenuEntryViewHorizontalPositionAdjustment_sBehavior;
}

void __61__CKUIBehavior_sendMenuEntryViewHorizontalPositionAdjustment__block_invoke()
{
  sendMenuEntryViewHorizontalPositionAdjustment_sBehavior = 0x4024000000000000;
}

- (double)sendMenuPrototypeCellMaximumWidth
{
  if (sendMenuPrototypeCellMaximumWidth_once != -1)
    dispatch_once(&sendMenuPrototypeCellMaximumWidth_once, &__block_literal_global_904);
  return *(double *)&sendMenuPrototypeCellMaximumWidth_sBehavior;
}

void __49__CKUIBehavior_sendMenuPrototypeCellMaximumWidth__block_invoke()
{
  sendMenuPrototypeCellMaximumWidth_sBehavior = 0x4074000000000000;
}

- (int64_t)sendMenuPlusSymbolScale
{
  if (sendMenuPlusSymbolScale_once != -1)
    dispatch_once(&sendMenuPlusSymbolScale_once, &__block_literal_global_905);
  if (sendMenuPlusSymbolScale_sBehavior)
    return 2;
  else
    return 0;
}

void __39__CKUIBehavior_sendMenuPlusSymbolScale__block_invoke()
{
  sendMenuPlusSymbolScale_sBehavior = 1;
}

- (UIBlurEffect)sendMenuPopoverBlurEffectForPresenting
{
  return (UIBlurEffect *)objc_msgSend(MEMORY[0x1E0CEA398], "_effectWithBlurRadius:scale:", 15.0, 1.0);
}

- (id)newEntryViewPlusButtonIconImageView
{
  int64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = -[CKUIBehavior sendMenuPlusSymbolScale](self, "sendMenuPlusSymbolScale");
  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPointSize:weight:scale:", 5, v2, 16.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.580392157, 0.584313725, 0.6, 1.0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.517647059, 0.517647059, 0.517647059, 1.0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dynamicColorWithLightColor:darkColor:", v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithHierarchicalColor:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "configurationByApplyingConfiguration:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("plus"), v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA658]), "initWithImage:", v10);
  objc_msgSend(v11, "setContentMode:", 4);

  return v11;
}

- (UIViewPropertyAnimator)sendMenuAppearanceCollectionViewUpdateAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 340.0, 39.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuAppearanceXPositionAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 340.0, 39.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuAppearanceYPositionAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 340.0, 39.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuBackdropAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 50.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuStatusBarAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 443.0, 36.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuPlusButtonPortalViewPositionAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 36.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuSelectionScaleAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 25.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuTextBlurAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 50.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (double)sendMenuTextOpacityAppearanceAnimationDelay
{
  if (sendMenuTextOpacityAppearanceAnimationDelay_once != -1)
    dispatch_once(&sendMenuTextOpacityAppearanceAnimationDelay_once, &__block_literal_global_911);
  return *(double *)&sendMenuTextOpacityAppearanceAnimationDelay_sBehavior;
}

void __59__CKUIBehavior_sendMenuTextOpacityAppearanceAnimationDelay__block_invoke()
{
  sendMenuTextOpacityAppearanceAnimationDelay_sBehavior = 0x3F9999999999999ALL;
}

- (UIViewPropertyAnimator)sendMenuIconBlurAppearanceAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 50.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuIconBlurDismissAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 50.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)sendMenuTextBlurDismissAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 50.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuPresentationStateAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 25.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 1.2);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuPlusButtonAppearanceAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 50.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuPlusButtonSymbolDisappearanceOpacityAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 1480.0, 77.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 0.8);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuPlusButtonDismissBlurAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 206.5, 26.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 1.0);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuPlusButtonDismissScaleAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 130.50717, 17.93564, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 1.0);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuContentViewWidthAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 340.0, 39.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 1.2);

  return (UIViewPropertyAnimator *)v3;
}

- (UIViewPropertyAnimator)entryViewSendMenuContentViewWidthDismissAnimator
{
  void *v2;
  void *v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA9D8]), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 40.0, 0.0, 0.0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABC8]), "initWithDuration:timingParameters:", v2, 1.2);

  return (UIViewPropertyAnimator *)v3;
}

- (id)appMenuPhotosIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuEffectsIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuHashtagImagesIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuAnimojiStickersIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuEmojiIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuApplePayIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuTapToRadarIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)appMenuAudioMessagesIconForTraitCollection:(id)a3
{
  return 0;
}

- (id)newSendMenuPopoverLayoutConfiguration
{
  CKPopoverViewLayoutConfiguration *v2;

  v2 = objc_alloc_init(CKPopoverViewLayoutConfiguration);
  -[CKPopoverViewLayoutConfiguration setMaximumHeight:](v2, "setMaximumHeight:", 800.0);
  -[CKPopoverViewLayoutConfiguration setMinimumSendMenuDimension:](v2, "setMinimumSendMenuDimension:", 200.0);
  -[CKPopoverViewLayoutConfiguration setDefaultAppCompactHeight:](v2, "setDefaultAppCompactHeight:", 350.0);
  -[CKPopoverViewLayoutConfiguration setMinimumTopSpacing:](v2, "setMinimumTopSpacing:", 75.0);
  -[CKPopoverViewLayoutConfiguration setPreferredAppWidth:](v2, "setPreferredAppWidth:", 393.0);
  -[CKPopoverViewLayoutConfiguration setMinimumTrailingSpacing:](v2, "setMinimumTrailingSpacing:", 250.0);
  return v2;
}

- (UIEdgeInsets)appCardContainerViewControllerChildEdgeInsetsIfPresentedBySendMenuPopover
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  UIEdgeInsets result;

  -[CKUIBehavior sendMenuPopoverPresentingAppCornerRadius](self, "sendMenuPopoverPresentingAppCornerRadius");
  v4 = v3;
  -[CKUIBehavior sendMenuPopoverPresentingAppCornerRadius](self, "sendMenuPopoverPresentingAppCornerRadius");
  v6 = v5;
  v7 = 0.0;
  v8 = 0.0;
  v9 = v4;
  result.right = v8;
  result.bottom = v6;
  result.left = v7;
  result.top = v9;
  return result;
}

- (id)newSendMenuPresentPopoverAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverWidthAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 36.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverHeightAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 320.0, 35.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverCenterXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 36.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverCenterYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 320.0, 35.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverPlusCenterXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 36.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverPlusCenterYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 320.0, 35.0, 1.0, 0.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverPlusIconScaleXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 36.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverPlusIconScaleYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 320.0, 35.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverPlusIconBlurRadiusAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 1.0, 2706.0, 104.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentPopoverPlusIconOpacityAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 1.0, 2706.0, 104.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (UIColor)sendMenuPresentPopoverBackdropViewBackgroundColor
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)MEMORY[0x1E0CEA478];
  -[CKUIBehavior sendMenuBackdropBackgroundColor](self, "sendMenuBackdropBackgroundColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithWhite:alpha:", 0.121568627, 0.86);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dynamicColorWithLightColor:darkColor:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIColor *)v5;
}

- (UIVisualEffect)sendMenuPresentPopoverEffect
{
  return (UIVisualEffect *)objc_msgSend(MEMORY[0x1E0CEA398], "effectWithBlurRadius:", 24.0);
}

- (id)newSendMenuDismissPopoverAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverWidthAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverHeightAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 47.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverCenterXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverCenterYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 47.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverPlusCenterXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverPlusCenterYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 47.0, 1.0, 0.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverPlusIconScaleXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverPlusIconScaleYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 47.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverPlusIconBlurRadiusAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 1.0, 126.024, 22.4521);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuDismissPopoverPlusIconOpacityAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 1.0, 203.35, 28.5202);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuTransitionToAppAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 300.0, 50.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (double)sendMenuPopoverPresentingAppCornerRadius
{
  return 34.0;
}

- (id)newSendMenuPresentAppInPopoverWidthAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 250.0, 36.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentAppInPopoverHeightAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 320.0, 35.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentAppInPopoverCenterXAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 2.0, 250.0, 36.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentAppInPopoverCenterYAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:initialVelocity:", 2.0, 320.0, 35.0, 0.0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)newSendMenuPresentAppInPopoverOpacityAnimator
{
  objc_msgSend(MEMORY[0x1E0CEABC8], "ck_viewPropertyAnimatorWithMass:stiffness:damping:", 1.0, 203.35, 28.5202);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (UIColor)sendMenuPopoverDimmingViewActiveBackgroundColor
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "colorWithAlphaComponent:", 0.36);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dynamicColorWithLightColor:darkColor:", v4, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIColor *)v7;
}

- (UIColor)sendMenuPopoverDimmingViewInactiveBackgroundColor
{
  return (UIColor *)objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
}

- (BOOL)shouldAnimateGifsInPhotoGrid
{
  if (shouldAnimateGifsInPhotoGrid_once != -1)
    dispatch_once(&shouldAnimateGifsInPhotoGrid_once, &__block_literal_global_913);
  return shouldAnimateGifsInPhotoGrid_sBehavior;
}

uint64_t __44__CKUIBehavior_shouldAnimateGifsInPhotoGrid__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  shouldAnimateGifsInPhotoGrid_sBehavior = result ^ 1;
  return result;
}

- (BOOL)detailsSeperatorsFollowLayoutMargins
{
  if (detailsSeperatorsFollowLayoutMargins_once != -1)
    dispatch_once(&detailsSeperatorsFollowLayoutMargins_once, &__block_literal_global_916);
  return 0;
}

- (double)dividerHeight
{
  if (dividerHeight_once != -1)
    dispatch_once(&dividerHeight_once, &__block_literal_global_917);
  return *(double *)&dividerHeight_sBehavior;
}

double __29__CKUIBehavior_dividerHeight__block_invoke()
{
  double result;

  if (CKPixelWidth_once_7 != -1)
    dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
  result = *(double *)&CKPixelWidth_sPixel_7;
  dividerHeight_sBehavior = CKPixelWidth_sPixel_7;
  return result;
}

- (unint64_t)detailsSectionCount
{
  if (detailsSectionCount_once != -1)
    dispatch_once(&detailsSectionCount_once, &__block_literal_global_918);
  if (detailsSectionCount_sBehavior)
    return 13;
  else
    return 0;
}

void __35__CKUIBehavior_detailsSectionCount__block_invoke()
{
  detailsSectionCount_sBehavior = 1;
}

- (CGSize)attachmentBrowserDefaultSizeForSquare
{
  double v2;
  double v3;
  CGSize result;

  if (attachmentBrowserDefaultSizeForSquare_once != -1)
    dispatch_once(&attachmentBrowserDefaultSizeForSquare_once, &__block_literal_global_919);
  v2 = *(double *)&attachmentBrowserDefaultSizeForSquare_sBehavior_0;
  v3 = *(double *)&attachmentBrowserDefaultSizeForSquare_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_attachmentBrowserDefaultSizeForSquare__block_invoke()
{
  attachmentBrowserDefaultSizeForSquare_sBehavior_0 = 0x4052200000000000;
  attachmentBrowserDefaultSizeForSquare_sBehavior_1 = 0x4052200000000000;
}

- (double)attachmentBrowserGridInterItemSpacing
{
  if (attachmentBrowserGridInterItemSpacing_once != -1)
    dispatch_once(&attachmentBrowserGridInterItemSpacing_once, &__block_literal_global_920);
  return *(double *)&attachmentBrowserGridInterItemSpacing_sBehavior;
}

void __53__CKUIBehavior_attachmentBrowserGridInterItemSpacing__block_invoke()
{
  attachmentBrowserGridInterItemSpacing_sBehavior = 0x4010000000000000;
}

- (double)attachmentBrowserGridMinimumLineSpacing
{
  if (attachmentBrowserGridMinimumLineSpacing_once != -1)
    dispatch_once(&attachmentBrowserGridMinimumLineSpacing_once, &__block_literal_global_921);
  return *(double *)&attachmentBrowserGridMinimumLineSpacing_sBehavior;
}

void __55__CKUIBehavior_attachmentBrowserGridMinimumLineSpacing__block_invoke()
{
  attachmentBrowserGridMinimumLineSpacing_sBehavior = 0x4010000000000000;
}

- (UIEdgeInsets)attachmentBrowserGridSectionInset
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (attachmentBrowserGridSectionInset_once != -1)
    dispatch_once(&attachmentBrowserGridSectionInset_once, &__block_literal_global_922);
  v2 = *(double *)&attachmentBrowserGridSectionInset_sBehavior_0;
  v3 = *(double *)&attachmentBrowserGridSectionInset_sBehavior_1;
  v4 = *(double *)&attachmentBrowserGridSectionInset_sBehavior_2;
  v5 = *(double *)&attachmentBrowserGridSectionInset_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __49__CKUIBehavior_attachmentBrowserGridSectionInset__block_invoke()
{
  attachmentBrowserGridSectionInset_sBehavior_0 = 0x4020000000000000;
  attachmentBrowserGridSectionInset_sBehavior_1 = 0x4020000000000000;
  attachmentBrowserGridSectionInset_sBehavior_2 = 0x4020000000000000;
  attachmentBrowserGridSectionInset_sBehavior_3 = 0x4020000000000000;
}

- (UIEdgeInsets)attachmentBrowserFeedLayoutSectionInset
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (attachmentBrowserFeedLayoutSectionInset_once != -1)
    dispatch_once(&attachmentBrowserFeedLayoutSectionInset_once, &__block_literal_global_923);
  v3 = *((double *)&attachmentBrowserFeedLayoutSectionInset_sBehavior + 1);
  v2 = *(double *)&attachmentBrowserFeedLayoutSectionInset_sBehavior;
  v4 = *(double *)&qword_1EE11C048;
  v5 = unk_1EE11C050;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

__n128 __55__CKUIBehavior_attachmentBrowserFeedLayoutSectionInset__block_invoke()
{
  __n128 result;
  __int128 v1;

  result = *(__n128 *)MEMORY[0x1E0CEB4B0];
  v1 = *(_OWORD *)(MEMORY[0x1E0CEB4B0] + 16);
  attachmentBrowserFeedLayoutSectionInset_sBehavior = *MEMORY[0x1E0CEB4B0];
  *(_OWORD *)&qword_1EE11C048 = v1;
  return result;
}

- (double)attachmentBrowserHeaderLabelPadding
{
  if (attachmentBrowserHeaderLabelPadding_once != -1)
    dispatch_once(&attachmentBrowserHeaderLabelPadding_once, &__block_literal_global_924_0);
  return *(double *)&attachmentBrowserHeaderLabelPadding_sBehavior;
}

void __51__CKUIBehavior_attachmentBrowserHeaderLabelPadding__block_invoke()
{
  attachmentBrowserHeaderLabelPadding_sBehavior = 0x4020000000000000;
}

- (double)photoPickerPopoverWidth
{
  if (photoPickerPopoverWidth_once != -1)
    dispatch_once(&photoPickerPopoverWidth_once, &__block_literal_global_925_0);
  return 0.0;
}

- (unint64_t)numberOfButtonsInPhotoPicker
{
  if (numberOfButtonsInPhotoPicker_once != -1)
    dispatch_once(&numberOfButtonsInPhotoPicker_once, &__block_literal_global_926_0);
  if (numberOfButtonsInPhotoPicker_sBehavior)
    return 3;
  else
    return 0;
}

void __44__CKUIBehavior_numberOfButtonsInPhotoPicker__block_invoke()
{
  numberOfButtonsInPhotoPicker_sBehavior = 1;
}

- (unint64_t)numberOfAssetsInPhotoPicker
{
  if (numberOfAssetsInPhotoPicker_once != -1)
    dispatch_once(&numberOfAssetsInPhotoPicker_once, &__block_literal_global_927);
  if (numberOfAssetsInPhotoPicker_sBehavior)
    return 50;
  else
    return 0;
}

void __43__CKUIBehavior_numberOfAssetsInPhotoPicker__block_invoke()
{
  numberOfAssetsInPhotoPicker_sBehavior = 1;
}

- (double)photoPickerInterItemSpacing
{
  if (photoPickerInterItemSpacing_once != -1)
    dispatch_once(&photoPickerInterItemSpacing_once, &__block_literal_global_928);
  return *(double *)&photoPickerInterItemSpacing_sBehavior;
}

void __43__CKUIBehavior_photoPickerInterItemSpacing__block_invoke()
{
  photoPickerInterItemSpacing_sBehavior = 0x4014000000000000;
}

- (UIEdgeInsets)photoPickerSectionInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (photoPickerSectionInsets_once != -1)
    dispatch_once(&photoPickerSectionInsets_once, &__block_literal_global_929);
  v2 = *(double *)&photoPickerSectionInsets_sBehavior_0;
  v3 = *(double *)&photoPickerSectionInsets_sBehavior_1;
  v4 = *(double *)&photoPickerSectionInsets_sBehavior_2;
  v5 = *(double *)&photoPickerSectionInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __40__CKUIBehavior_photoPickerSectionInsets__block_invoke()
{
  photoPickerSectionInsets_sBehavior_0 = 0x4014000000000000;
  photoPickerSectionInsets_sBehavior_1 = 0x4014000000000000;
  photoPickerSectionInsets_sBehavior_2 = 0x4014000000000000;
  photoPickerSectionInsets_sBehavior_3 = 0x4014000000000000;
}

- (UIImage)livePhotoBadgeImage
{
  if (livePhotoBadgeImage_once != -1)
    dispatch_once(&livePhotoBadgeImage_once, &__block_literal_global_930);
  return (UIImage *)(id)livePhotoBadgeImage_sBehavior;
}

void __35__CKUIBehavior_livePhotoBadgeImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("livephoto"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v0 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "configurationWithHierarchicalColor:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "imageWithSymbolConfiguration:", v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)livePhotoBadgeImage_sBehavior;
  livePhotoBadgeImage_sBehavior = v3;

}

- (BOOL)photoPickerShouldZoomOnSelection
{
  return (unint64_t)(objc_msgSend((id)*MEMORY[0x1E0CEB258], "statusBarOrientation") - 5) < 0xFFFFFFFFFFFFFFFELL;
}

- (BOOL)photoPickerUsesVitality
{
  if (photoPickerUsesVitality_once != -1)
    dispatch_once(&photoPickerUsesVitality_once, &__block_literal_global_933);
  return 0;
}

- (double)photoPickerMaxPhotoWidthForAlertWidth:(double)a3
{
  double v4;
  double v5;

  -[CKUIBehavior photoPickerSectionInsets](self, "photoPickerSectionInsets");
  return a3 - (v4 + v5);
}

- (double)photoPickerMaxZoomedPhotoHeightForAlertWidth:(double)a3
{
  double v3;

  -[CKUIBehavior photoPickerMaxPhotoWidthForAlertWidth:](self, "photoPickerMaxPhotoWidthForAlertWidth:", a3);
  return v3 * 0.25 * 3.0;
}

- (double)photoPickerMaxPopoverPhotoHeight
{
  if (photoPickerMaxPopoverPhotoHeight_once != -1)
    dispatch_once(&photoPickerMaxPopoverPhotoHeight_once, &__block_literal_global_934);
  return 0.0;
}

- (double)photoPickerMaxPhotoHeight
{
  if (photoPickerMaxPhotoHeight_once != -1)
    dispatch_once(&photoPickerMaxPhotoHeight_once, &__block_literal_global_935);
  return *(double *)&photoPickerMaxPhotoHeight_sBehavior;
}

void __41__CKUIBehavior_photoPickerMaxPhotoHeight__block_invoke()
{
  photoPickerMaxPhotoHeight_sBehavior = 0x4060200000000000;
}

- (BOOL)usesFannedBubbleStyle
{
  if (usesFannedBubbleStyle_once != -1)
    dispatch_once(&usesFannedBubbleStyle_once, &__block_literal_global_936);
  return usesFannedBubbleStyle_sBehavior;
}

void __37__CKUIBehavior_usesFannedBubbleStyle__block_invoke()
{
  usesFannedBubbleStyle_sBehavior = 1;
}

- (UIEdgeInsets)tapbackEmojiTailGlyphInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (tapbackEmojiTailGlyphInsets_once != -1)
    dispatch_once(&tapbackEmojiTailGlyphInsets_once, &__block_literal_global_937);
  v2 = *(double *)&tapbackEmojiTailGlyphInsets_sBehavior_0;
  v3 = *(double *)&tapbackEmojiTailGlyphInsets_sBehavior_1;
  v4 = *(double *)&tapbackEmojiTailGlyphInsets_sBehavior_2;
  v5 = *(double *)&tapbackEmojiTailGlyphInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __43__CKUIBehavior_tapbackEmojiTailGlyphInsets__block_invoke()
{
  tapbackEmojiTailGlyphInsets_sBehavior_0 = 0x402C000000000000;
  tapbackEmojiTailGlyphInsets_sBehavior_1 = 0x402C000000000000;
  tapbackEmojiTailGlyphInsets_sBehavior_2 = 0x402C000000000000;
  tapbackEmojiTailGlyphInsets_sBehavior_3 = 0x402C000000000000;
}

- (UIEdgeInsets)tapbackEmojiInputGlyphInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (tapbackEmojiInputGlyphInsets_once != -1)
    dispatch_once(&tapbackEmojiInputGlyphInsets_once, &__block_literal_global_938);
  v2 = *(double *)&tapbackEmojiInputGlyphInsets_sBehavior_0;
  v3 = *(double *)&tapbackEmojiInputGlyphInsets_sBehavior_1;
  v4 = *(double *)&tapbackEmojiInputGlyphInsets_sBehavior_2;
  v5 = *(double *)&tapbackEmojiInputGlyphInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __44__CKUIBehavior_tapbackEmojiInputGlyphInsets__block_invoke()
{
  tapbackEmojiInputGlyphInsets_sBehavior_0 = 0x4031000000000000;
  tapbackEmojiInputGlyphInsets_sBehavior_1 = 0x4031000000000000;
  tapbackEmojiInputGlyphInsets_sBehavior_2 = 0x4031000000000000;
  tapbackEmojiInputGlyphInsets_sBehavior_3 = 0x4031000000000000;
}

- (UIEdgeInsets)tapbackQuickLookSourcePointInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (tapbackQuickLookSourcePointInsets_once != -1)
    dispatch_once(&tapbackQuickLookSourcePointInsets_once, &__block_literal_global_939);
  v2 = *(double *)&tapbackQuickLookSourcePointInsets_sBehavior_0;
  v3 = *(double *)&tapbackQuickLookSourcePointInsets_sBehavior_1;
  v4 = *(double *)&tapbackQuickLookSourcePointInsets_sBehavior_2;
  v5 = *(double *)&tapbackQuickLookSourcePointInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __49__CKUIBehavior_tapbackQuickLookSourcePointInsets__block_invoke()
{
  tapbackQuickLookSourcePointInsets_sBehavior_0 = 0xC028000000000000;
  tapbackQuickLookSourcePointInsets_sBehavior_1 = 0xC048000000000000;
  tapbackQuickLookSourcePointInsets_sBehavior_2 = 0x4028000000000000;
  tapbackQuickLookSourcePointInsets_sBehavior_3 = 0x4048000000000000;
}

- (UIEdgeInsets)tapbackCancelButtonGlyphInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (tapbackCancelButtonGlyphInsets_once != -1)
    dispatch_once(&tapbackCancelButtonGlyphInsets_once, &__block_literal_global_940);
  v2 = *(double *)&tapbackCancelButtonGlyphInsets_sBehavior_0;
  v3 = *(double *)&tapbackCancelButtonGlyphInsets_sBehavior_1;
  v4 = *(double *)&tapbackCancelButtonGlyphInsets_sBehavior_2;
  v5 = *(double *)&tapbackCancelButtonGlyphInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __46__CKUIBehavior_tapbackCancelButtonGlyphInsets__block_invoke()
{
  tapbackCancelButtonGlyphInsets_sBehavior_0 = 0x4030000000000000;
  tapbackCancelButtonGlyphInsets_sBehavior_1 = 0x4030000000000000;
  tapbackCancelButtonGlyphInsets_sBehavior_2 = 0x4030000000000000;
  tapbackCancelButtonGlyphInsets_sBehavior_3 = 0x4030000000000000;
}

- (double)tapbackDismissalDuration
{
  if (tapbackDismissalDuration_once != -1)
    dispatch_once(&tapbackDismissalDuration_once, &__block_literal_global_941);
  return *(double *)&tapbackDismissalDuration_sBehavior;
}

void __40__CKUIBehavior_tapbackDismissalDuration__block_invoke()
{
  tapbackDismissalDuration_sBehavior = 0x3FE0000000000000;
}

- (double)emojiTapbackScaleFactor
{
  if (emojiTapbackScaleFactor_once != -1)
    dispatch_once(&emojiTapbackScaleFactor_once, &__block_literal_global_942);
  return *(double *)&emojiTapbackScaleFactor_sBehavior;
}

void __39__CKUIBehavior_emojiTapbackScaleFactor__block_invoke()
{
  emojiTapbackScaleFactor_sBehavior = 0x3FEA000000000000;
}

- (UIImage)replyImage
{
  if (replyImage_once != -1)
    dispatch_once(&replyImage_once, &__block_literal_global_943);
  return (UIImage *)(id)replyImage_sBehavior;
}

void __26__CKUIBehavior_replyImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("arrowshape.turn.up.left"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)replyImage_sBehavior;
  replyImage_sBehavior = v0;

}

- (double)welcomeViewContentViewLeadingAnchorLayoutConstraintConstant
{
  return 20.0;
}

- (double)welcomeViewContentViewTopAnchorLayoutConstraintConstant
{
  return 45.0;
}

- (UIFont)welcomeViewCancelButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)welcomeViewCancelButtonFont_sContentSizeCategory_welcomeViewCancelButtonFont, (UIContentSizeCategory)v2)|| welcomeViewCancelButtonFont_sIsIncreaseContrastEnabled_welcomeViewCancelButtonFont != v3|| welcomeViewCancelButtonFont_sIsBoldTextEnabled_welcomeViewCancelButtonFont != IsBoldTextEnabled|| (v10 = welcomeViewCancelButtonFont_sTextFontSize_welcomeViewCancelButtonFont, *(double *)&welcomeViewCancelButtonFont_sTextFontSize_welcomeViewCancelButtonFont != v5)|| (v10 = welcomeViewCancelButtonFont_sCustomTextFontSize_welcomeViewCancelButtonFont, *(double *)&welcomeViewCancelButtonFont_sCustomTextFontSize_welcomeViewCancelButtonFont != v6)|| (objc_msgSend((id)welcomeViewCancelButtonFont_sCustomTextFontName_welcomeViewCancelButtonFont, "isEqualToString:", v9, *(double *)&welcomeViewCancelButtonFont_sCustomTextFontSize_welcomeViewCancelButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB568], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)welcomeViewCancelButtonFont_sBehavior;
    welcomeViewCancelButtonFont_sBehavior = v11;

    objc_storeStrong((id *)&welcomeViewCancelButtonFont_sContentSizeCategory_welcomeViewCancelButtonFont, v2);
    welcomeViewCancelButtonFont_sIsIncreaseContrastEnabled_welcomeViewCancelButtonFont = v3;
    welcomeViewCancelButtonFont_sIsBoldTextEnabled_welcomeViewCancelButtonFont = IsBoldTextEnabled;
    welcomeViewCancelButtonFont_sTextFontSize_welcomeViewCancelButtonFont = *(_QWORD *)&v5;
    welcomeViewCancelButtonFont_sCustomTextFontSize_welcomeViewCancelButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&welcomeViewCancelButtonFont_sCustomTextFontName_welcomeViewCancelButtonFont, v8);
  }
  v13 = (UIFont *)(id)welcomeViewCancelButtonFont_sBehavior;

  return v13;
}

- (UIFont)welcomeViewConfirmButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)welcomeViewConfirmButtonFont_sContentSizeCategory_welcomeViewConfirmButtonFont, (UIContentSizeCategory)v2)|| welcomeViewConfirmButtonFont_sIsIncreaseContrastEnabled_welcomeViewConfirmButtonFont != v3|| welcomeViewConfirmButtonFont_sIsBoldTextEnabled_welcomeViewConfirmButtonFont != IsBoldTextEnabled|| (v10 = welcomeViewConfirmButtonFont_sTextFontSize_welcomeViewConfirmButtonFont, *(double *)&welcomeViewConfirmButtonFont_sTextFontSize_welcomeViewConfirmButtonFont != v5)|| (v10 = welcomeViewConfirmButtonFont_sCustomTextFontSize_welcomeViewConfirmButtonFont, *(double *)&welcomeViewConfirmButtonFont_sCustomTextFontSize_welcomeViewConfirmButtonFont != v6)|| (objc_msgSend((id)welcomeViewConfirmButtonFont_sCustomTextFontName_welcomeViewConfirmButtonFont, "isEqualToString:", v9, *(double *)&welcomeViewConfirmButtonFont_sCustomTextFontSize_welcomeViewConfirmButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB570], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)welcomeViewConfirmButtonFont_sBehavior;
    welcomeViewConfirmButtonFont_sBehavior = v11;

    objc_storeStrong((id *)&welcomeViewConfirmButtonFont_sContentSizeCategory_welcomeViewConfirmButtonFont, v2);
    welcomeViewConfirmButtonFont_sIsIncreaseContrastEnabled_welcomeViewConfirmButtonFont = v3;
    welcomeViewConfirmButtonFont_sIsBoldTextEnabled_welcomeViewConfirmButtonFont = IsBoldTextEnabled;
    welcomeViewConfirmButtonFont_sTextFontSize_welcomeViewConfirmButtonFont = *(_QWORD *)&v5;
    welcomeViewConfirmButtonFont_sCustomTextFontSize_welcomeViewConfirmButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&welcomeViewConfirmButtonFont_sCustomTextFontName_welcomeViewConfirmButtonFont, v8);
  }
  v13 = (UIFont *)(id)welcomeViewConfirmButtonFont_sBehavior;

  return v13;
}

- (UIFont)welcomeViewTitleLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)welcomeViewTitleLabelFont_sContentSizeCategory_welcomeViewTitleLabelFont, (UIContentSizeCategory)v2)|| welcomeViewTitleLabelFont_sIsIncreaseContrastEnabled_welcomeViewTitleLabelFont != v3|| welcomeViewTitleLabelFont_sIsBoldTextEnabled_welcomeViewTitleLabelFont != IsBoldTextEnabled|| (v10 = welcomeViewTitleLabelFont_sTextFontSize_welcomeViewTitleLabelFont, *(double *)&welcomeViewTitleLabelFont_sTextFontSize_welcomeViewTitleLabelFont != v5)|| (v10 = welcomeViewTitleLabelFont_sCustomTextFontSize_welcomeViewTitleLabelFont, *(double *)&welcomeViewTitleLabelFont_sCustomTextFontSize_welcomeViewTitleLabelFont != v6)|| (objc_msgSend((id)welcomeViewTitleLabelFont_sCustomTextFontName_welcomeViewTitleLabelFont, "isEqualToString:", v9, *(double *)&welcomeViewTitleLabelFont_sCustomTextFontSize_welcomeViewTitleLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortEmphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB5A8], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)welcomeViewTitleLabelFont_sBehavior;
    welcomeViewTitleLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&welcomeViewTitleLabelFont_sContentSizeCategory_welcomeViewTitleLabelFont, v2);
    welcomeViewTitleLabelFont_sIsIncreaseContrastEnabled_welcomeViewTitleLabelFont = v3;
    welcomeViewTitleLabelFont_sIsBoldTextEnabled_welcomeViewTitleLabelFont = IsBoldTextEnabled;
    welcomeViewTitleLabelFont_sTextFontSize_welcomeViewTitleLabelFont = *(_QWORD *)&v5;
    welcomeViewTitleLabelFont_sCustomTextFontSize_welcomeViewTitleLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&welcomeViewTitleLabelFont_sCustomTextFontName_welcomeViewTitleLabelFont, v8);
  }
  v13 = (UIFont *)(id)welcomeViewTitleLabelFont_sBehavior;

  return v13;
}

- (double)whatsNewViewBulletPointSymbolLeadingAnchorLayoutConstraintConstant
{
  return 20.0;
}

- (double)whatsNewViewBulletPointTextTrailingAnchorLayoutConstraintConstant
{
  return 20.0;
}

- (UIFont)whatsNewViewBulletPointSymbolLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)whatsNewViewBulletPointSymbolLabelFont_sContentSizeCategory_whatsNewViewBulletPointSymbolLabelFont, (UIContentSizeCategory)v2)|| whatsNewViewBulletPointSymbolLabelFont_sIsIncreaseContrastEnabled_whatsNewViewBulletPointSymbolLabelFont != v3|| whatsNewViewBulletPointSymbolLabelFont_sIsBoldTextEnabled_whatsNewViewBulletPointSymbolLabelFont != IsBoldTextEnabled|| (v10 = whatsNewViewBulletPointSymbolLabelFont_sTextFontSize_whatsNewViewBulletPointSymbolLabelFont, *(double *)&whatsNewViewBulletPointSymbolLabelFont_sTextFontSize_whatsNewViewBulletPointSymbolLabelFont != v5)|| (v10 = whatsNewViewBulletPointSymbolLabelFont_sCustomTextFontSize_whatsNewViewBulletPointSymbolLabelFont, *(double *)&whatsNewViewBulletPointSymbolLabelFont_sCustomTextFontSize_whatsNewViewBulletPointSymbolLabelFont != v6)|| (objc_msgSend((id)whatsNewViewBulletPointSymbolLabelFont_sCustomTextFontName_whatsNewViewBulletPointSymbolLabelFont, "isEqualToString:", v9, *(double *)&whatsNewViewBulletPointSymbolLabelFont_sCustomTextFontSize_whatsNewViewBulletPointSymbolLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)whatsNewViewBulletPointSymbolLabelFont_sBehavior;
    whatsNewViewBulletPointSymbolLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&whatsNewViewBulletPointSymbolLabelFont_sContentSizeCategory_whatsNewViewBulletPointSymbolLabelFont, v2);
    whatsNewViewBulletPointSymbolLabelFont_sIsIncreaseContrastEnabled_whatsNewViewBulletPointSymbolLabelFont = v3;
    whatsNewViewBulletPointSymbolLabelFont_sIsBoldTextEnabled_whatsNewViewBulletPointSymbolLabelFont = IsBoldTextEnabled;
    whatsNewViewBulletPointSymbolLabelFont_sTextFontSize_whatsNewViewBulletPointSymbolLabelFont = *(_QWORD *)&v5;
    whatsNewViewBulletPointSymbolLabelFont_sCustomTextFontSize_whatsNewViewBulletPointSymbolLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&whatsNewViewBulletPointSymbolLabelFont_sCustomTextFontName_whatsNewViewBulletPointSymbolLabelFont, v8);
  }
  v13 = (UIFont *)(id)whatsNewViewBulletPointSymbolLabelFont_sBehavior;

  return v13;
}

- (UIFont)whatsNewViewBulletPointTextLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)whatsNewViewBulletPointTextLabelFont_sContentSizeCategory_whatsNewViewBulletPointTextLabelFont, (UIContentSizeCategory)v2)|| whatsNewViewBulletPointTextLabelFont_sIsIncreaseContrastEnabled_whatsNewViewBulletPointTextLabelFont != v3|| whatsNewViewBulletPointTextLabelFont_sIsBoldTextEnabled_whatsNewViewBulletPointTextLabelFont != IsBoldTextEnabled|| (v10 = whatsNewViewBulletPointTextLabelFont_sTextFontSize_whatsNewViewBulletPointTextLabelFont, *(double *)&whatsNewViewBulletPointTextLabelFont_sTextFontSize_whatsNewViewBulletPointTextLabelFont != v5)|| (v10 = whatsNewViewBulletPointTextLabelFont_sCustomTextFontSize_whatsNewViewBulletPointTextLabelFont, *(double *)&whatsNewViewBulletPointTextLabelFont_sCustomTextFontSize_whatsNewViewBulletPointTextLabelFont != v6)|| (objc_msgSend((id)whatsNewViewBulletPointTextLabelFont_sCustomTextFontName_whatsNewViewBulletPointTextLabelFont, "isEqualToString:", v9, *(double *)&whatsNewViewBulletPointTextLabelFont_sCustomTextFontSize_whatsNewViewBulletPointTextLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)whatsNewViewBulletPointTextLabelFont_sBehavior;
    whatsNewViewBulletPointTextLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&whatsNewViewBulletPointTextLabelFont_sContentSizeCategory_whatsNewViewBulletPointTextLabelFont, v2);
    whatsNewViewBulletPointTextLabelFont_sIsIncreaseContrastEnabled_whatsNewViewBulletPointTextLabelFont = v3;
    whatsNewViewBulletPointTextLabelFont_sIsBoldTextEnabled_whatsNewViewBulletPointTextLabelFont = IsBoldTextEnabled;
    whatsNewViewBulletPointTextLabelFont_sTextFontSize_whatsNewViewBulletPointTextLabelFont = *(_QWORD *)&v5;
    whatsNewViewBulletPointTextLabelFont_sCustomTextFontSize_whatsNewViewBulletPointTextLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&whatsNewViewBulletPointTextLabelFont_sCustomTextFontName_whatsNewViewBulletPointTextLabelFont, v8);
  }
  v13 = (UIFont *)(id)whatsNewViewBulletPointTextLabelFont_sBehavior;

  return v13;
}

- (UIFont)whatsNewViewDescriptionLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)whatsNewViewDescriptionLabelFont_sContentSizeCategory_whatsNewViewDescriptionLabelFont, (UIContentSizeCategory)v2)|| whatsNewViewDescriptionLabelFont_sIsIncreaseContrastEnabled_whatsNewViewDescriptionLabelFont != v3|| whatsNewViewDescriptionLabelFont_sIsBoldTextEnabled_whatsNewViewDescriptionLabelFont != IsBoldTextEnabled|| (v10 = whatsNewViewDescriptionLabelFont_sTextFontSize_whatsNewViewDescriptionLabelFont, *(double *)&whatsNewViewDescriptionLabelFont_sTextFontSize_whatsNewViewDescriptionLabelFont != v5)|| (v10 = whatsNewViewDescriptionLabelFont_sCustomTextFontSize_whatsNewViewDescriptionLabelFont, *(double *)&whatsNewViewDescriptionLabelFont_sCustomTextFontSize_whatsNewViewDescriptionLabelFont != v6)|| (objc_msgSend((id)whatsNewViewDescriptionLabelFont_sCustomTextFontName_whatsNewViewDescriptionLabelFont, "isEqualToString:", v9, *(double *)&whatsNewViewDescriptionLabelFont_sCustomTextFontSize_whatsNewViewDescriptionLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortEmphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)whatsNewViewDescriptionLabelFont_sBehavior;
    whatsNewViewDescriptionLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&whatsNewViewDescriptionLabelFont_sContentSizeCategory_whatsNewViewDescriptionLabelFont, v2);
    whatsNewViewDescriptionLabelFont_sIsIncreaseContrastEnabled_whatsNewViewDescriptionLabelFont = v3;
    whatsNewViewDescriptionLabelFont_sIsBoldTextEnabled_whatsNewViewDescriptionLabelFont = IsBoldTextEnabled;
    whatsNewViewDescriptionLabelFont_sTextFontSize_whatsNewViewDescriptionLabelFont = *(_QWORD *)&v5;
    whatsNewViewDescriptionLabelFont_sCustomTextFontSize_whatsNewViewDescriptionLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&whatsNewViewDescriptionLabelFont_sCustomTextFontName_whatsNewViewDescriptionLabelFont, v8);
  }
  v13 = (UIFont *)(id)whatsNewViewDescriptionLabelFont_sBehavior;

  return v13;
}

- (UIFont)whatsNewFeatureViewTitleLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)whatsNewFeatureViewTitleLabelFont_sContentSizeCategory_whatsNewFeatureViewTitleLabelFont, (UIContentSizeCategory)v2)|| whatsNewFeatureViewTitleLabelFont_sIsIncreaseContrastEnabled_whatsNewFeatureViewTitleLabelFont != v3|| whatsNewFeatureViewTitleLabelFont_sIsBoldTextEnabled_whatsNewFeatureViewTitleLabelFont != IsBoldTextEnabled|| (v10 = whatsNewFeatureViewTitleLabelFont_sTextFontSize_whatsNewFeatureViewTitleLabelFont, *(double *)&whatsNewFeatureViewTitleLabelFont_sTextFontSize_whatsNewFeatureViewTitleLabelFont != v5)|| (v10 = whatsNewFeatureViewTitleLabelFont_sCustomTextFontSize_whatsNewFeatureViewTitleLabelFont, *(double *)&whatsNewFeatureViewTitleLabelFont_sCustomTextFontSize_whatsNewFeatureViewTitleLabelFont != v6)|| (objc_msgSend((id)whatsNewFeatureViewTitleLabelFont_sCustomTextFontName_whatsNewFeatureViewTitleLabelFont, "isEqualToString:", v9, *(double *)&whatsNewFeatureViewTitleLabelFont_sCustomTextFontSize_whatsNewFeatureViewTitleLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortEmphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)whatsNewFeatureViewTitleLabelFont_sBehavior;
    whatsNewFeatureViewTitleLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&whatsNewFeatureViewTitleLabelFont_sContentSizeCategory_whatsNewFeatureViewTitleLabelFont, v2);
    whatsNewFeatureViewTitleLabelFont_sIsIncreaseContrastEnabled_whatsNewFeatureViewTitleLabelFont = v3;
    whatsNewFeatureViewTitleLabelFont_sIsBoldTextEnabled_whatsNewFeatureViewTitleLabelFont = IsBoldTextEnabled;
    whatsNewFeatureViewTitleLabelFont_sTextFontSize_whatsNewFeatureViewTitleLabelFont = *(_QWORD *)&v5;
    whatsNewFeatureViewTitleLabelFont_sCustomTextFontSize_whatsNewFeatureViewTitleLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&whatsNewFeatureViewTitleLabelFont_sCustomTextFontName_whatsNewFeatureViewTitleLabelFont, v8);
  }
  v13 = (UIFont *)(id)whatsNewFeatureViewTitleLabelFont_sBehavior;

  return v13;
}

- (UIFont)whatsNewFeatureViewDescriptionLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)whatsNewFeatureViewDescriptionLabelFont_sContentSizeCategory_whatsNewFeatureViewDescriptionLabelFont, (UIContentSizeCategory)v2)|| whatsNewFeatureViewDescriptionLabelFont_sIsIncreaseContrastEnabled_whatsNewFeatureViewDescriptionLabelFont != v3|| whatsNewFeatureViewDescriptionLabelFont_sIsBoldTextEnabled_whatsNewFeatureViewDescriptionLabelFont != IsBoldTextEnabled|| (v10 = whatsNewFeatureViewDescriptionLabelFont_sTextFontSize_whatsNewFeatureViewDescriptionLabelFont, *(double *)&whatsNewFeatureViewDescriptionLabelFont_sTextFontSize_whatsNewFeatureViewDescriptionLabelFont != v5)|| (v10 = whatsNewFeatureViewDescriptionLabelFont_sCustomTextFontSize_whatsNewFeatureViewDescriptionLabelFont, *(double *)&whatsNewFeatureViewDescriptionLabelFont_sCustomTextFontSize_whatsNewFeatureViewDescriptionLabelFont != v6)|| (objc_msgSend((id)whatsNewFeatureViewDescriptionLabelFont_sCustomTextFontName_whatsNewFeatureViewDescriptionLabelFont, "isEqualToString:", v9, *(double *)&whatsNewFeatureViewDescriptionLabelFont_sCustomTextFontSize_whatsNewFeatureViewDescriptionLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)whatsNewFeatureViewDescriptionLabelFont_sBehavior;
    whatsNewFeatureViewDescriptionLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&whatsNewFeatureViewDescriptionLabelFont_sContentSizeCategory_whatsNewFeatureViewDescriptionLabelFont, v2);
    whatsNewFeatureViewDescriptionLabelFont_sIsIncreaseContrastEnabled_whatsNewFeatureViewDescriptionLabelFont = v3;
    whatsNewFeatureViewDescriptionLabelFont_sIsBoldTextEnabled_whatsNewFeatureViewDescriptionLabelFont = IsBoldTextEnabled;
    whatsNewFeatureViewDescriptionLabelFont_sTextFontSize_whatsNewFeatureViewDescriptionLabelFont = *(_QWORD *)&v5;
    whatsNewFeatureViewDescriptionLabelFont_sCustomTextFontSize_whatsNewFeatureViewDescriptionLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&whatsNewFeatureViewDescriptionLabelFont_sCustomTextFontName_whatsNewFeatureViewDescriptionLabelFont, v8);
  }
  v13 = (UIFont *)(id)whatsNewFeatureViewDescriptionLabelFont_sBehavior;

  return v13;
}

- (UIImage)whatsNewViewApplePayImage
{
  return (UIImage *)objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("CKSurfEducationScreen"));
}

- (BOOL)shouldAlignRecipientGlyphsWithMargins
{
  if (shouldAlignRecipientGlyphsWithMargins_once != -1)
    dispatch_once(&shouldAlignRecipientGlyphsWithMargins_once, &__block_literal_global_948);
  return 0;
}

- (double)detailsGroupHeaderCellInterTextVerticalSpacing
{
  if (detailsGroupHeaderCellInterTextVerticalSpacing_once != -1)
    dispatch_once(&detailsGroupHeaderCellInterTextVerticalSpacing_once, &__block_literal_global_949);
  return *(double *)&detailsGroupHeaderCellInterTextVerticalSpacing_sBehavior;
}

void __62__CKUIBehavior_detailsGroupHeaderCellInterTextVerticalSpacing__block_invoke()
{
  detailsGroupHeaderCellInterTextVerticalSpacing_sBehavior = 0x3FF0000000000000;
}

- (double)detailsGroupHeaderCellAvatarViewRightMargin
{
  if (detailsGroupHeaderCellAvatarViewRightMargin_once != -1)
    dispatch_once(&detailsGroupHeaderCellAvatarViewRightMargin_once, &__block_literal_global_950);
  return 0.0;
}

- (double)detailsGroupHeaderCellSubtitleViewRightMargin
{
  if (detailsGroupHeaderCellSubtitleViewRightMargin_once != -1)
    dispatch_once(&detailsGroupHeaderCellSubtitleViewRightMargin_once, &__block_literal_global_951);
  return *(double *)&detailsGroupHeaderCellSubtitleViewRightMargin_sBehavior;
}

void __61__CKUIBehavior_detailsGroupHeaderCellSubtitleViewRightMargin__block_invoke()
{
  detailsGroupHeaderCellSubtitleViewRightMargin_sBehavior = 0x4020000000000000;
}

- (UIFont)detailsGroupHeaderCellTitleFont
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __47__CKUIBehavior_detailsGroupHeaderCellTitleFont__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (detailsGroupHeaderCellTitleFont_once != -1)
    dispatch_once(&detailsGroupHeaderCellTitleFont_once, block);
  return (UIFont *)(id)detailsGroupHeaderCellTitleFont_sBehavior;
}

void __47__CKUIBehavior_detailsGroupHeaderCellTitleFont__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "recipientNameFont");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)detailsGroupHeaderCellTitleFont_sBehavior;
  detailsGroupHeaderCellTitleFont_sBehavior = v1;

}

- (UIFont)detailsGroupHeaderCellSubtitleFont
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __50__CKUIBehavior_detailsGroupHeaderCellSubtitleFont__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (detailsGroupHeaderCellSubtitleFont_once != -1)
    dispatch_once(&detailsGroupHeaderCellSubtitleFont_once, block);
  return (UIFont *)(id)detailsGroupHeaderCellSubtitleFont_sBehavior;
}

void __50__CKUIBehavior_detailsGroupHeaderCellSubtitleFont__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "locationSubtitleFont");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)detailsGroupHeaderCellSubtitleFont_sBehavior;
  detailsGroupHeaderCellSubtitleFont_sBehavior = v1;

}

- (NSString)detailsGroupHeaderCellChevronDownName
{
  if (detailsGroupHeaderCellChevronDownName_once != -1)
    dispatch_once(&detailsGroupHeaderCellChevronDownName_once, &__block_literal_global_952);
  return (NSString *)(id)detailsGroupHeaderCellChevronDownName_sBehavior;
}

void __53__CKUIBehavior_detailsGroupHeaderCellChevronDownName__block_invoke()
{
  void *v0;

  v0 = (void *)detailsGroupHeaderCellChevronDownName_sBehavior;
  detailsGroupHeaderCellChevronDownName_sBehavior = (uint64_t)CFSTR("chevron.down.circle");

}

- (NSString)detailsGroupHeaderCellChevronForwardName
{
  if (detailsGroupHeaderCellChevronForwardName_once != -1)
    dispatch_once(&detailsGroupHeaderCellChevronForwardName_once, &__block_literal_global_955);
  return (NSString *)(id)detailsGroupHeaderCellChevronForwardName_sBehavior;
}

void __56__CKUIBehavior_detailsGroupHeaderCellChevronForwardName__block_invoke()
{
  void *v0;

  v0 = (void *)detailsGroupHeaderCellChevronForwardName_sBehavior;
  detailsGroupHeaderCellChevronForwardName_sBehavior = (uint64_t)CFSTR("chevron.forward.circle");

}

- (UIFont)detailsGroupHeaderCellChevronFont
{
  if (detailsGroupHeaderCellChevronFont_once != -1)
    dispatch_once(&detailsGroupHeaderCellChevronFont_once, &__block_literal_global_958);
  return (UIFont *)(id)detailsGroupHeaderCellChevronFont_sBehavior;
}

void __49__CKUIBehavior_detailsGroupHeaderCellChevronFont__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fontDescriptor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v1, 0.0);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)detailsGroupHeaderCellChevronFont_sBehavior;
  detailsGroupHeaderCellChevronFont_sBehavior = v2;

}

- (double)detailsContactCellButtonWidth
{
  if (detailsContactCellButtonWidth_once != -1)
    dispatch_once(&detailsContactCellButtonWidth_once, &__block_literal_global_959);
  return *(double *)&detailsContactCellButtonWidth_sBehavior;
}

void __45__CKUIBehavior_detailsContactCellButtonWidth__block_invoke()
{
  detailsContactCellButtonWidth_sBehavior = 0x4042800000000000;
}

- (double)detailsContactCellButtonHeight
{
  if (detailsContactCellButtonHeight_once != -1)
    dispatch_once(&detailsContactCellButtonHeight_once, &__block_literal_global_960_0);
  return *(double *)&detailsContactCellButtonHeight_sBehavior;
}

void __46__CKUIBehavior_detailsContactCellButtonHeight__block_invoke()
{
  detailsContactCellButtonHeight_sBehavior = 0x4042800000000000;
}

- (UIEdgeInsets)detailsContactCellButtonEdgeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (detailsContactCellButtonEdgeInsets_once != -1)
    dispatch_once(&detailsContactCellButtonEdgeInsets_once, &__block_literal_global_961);
  v2 = *(double *)&detailsContactCellButtonEdgeInsets_sBehavior_0;
  v3 = *(double *)&detailsContactCellButtonEdgeInsets_sBehavior_1;
  v4 = *(double *)&detailsContactCellButtonEdgeInsets_sBehavior_2;
  v5 = *(double *)&detailsContactCellButtonEdgeInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __50__CKUIBehavior_detailsContactCellButtonEdgeInsets__block_invoke()
{
  detailsContactCellButtonEdgeInsets_sBehavior_0 = 0xC000000000000000;
  detailsContactCellButtonEdgeInsets_sBehavior_1 = 0xC014000000000000;
  detailsContactCellButtonEdgeInsets_sBehavior_2 = 0xC000000000000000;
  detailsContactCellButtonEdgeInsets_sBehavior_3 = 0xC014000000000000;
}

- (UIEdgeInsets)detailsTableViewInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (detailsTableViewInsets_once != -1)
    dispatch_once(&detailsTableViewInsets_once, &__block_literal_global_962);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

- (double)detailsContactCellMinimumHeight
{
  if (detailsContactCellMinimumHeight_once != -1)
    dispatch_once(&detailsContactCellMinimumHeight_once, &__block_literal_global_963);
  return *(double *)&detailsContactCellMinimumHeight_sBehavior;
}

void __47__CKUIBehavior_detailsContactCellMinimumHeight__block_invoke()
{
  detailsContactCellMinimumHeight_sBehavior = 0x4050000000000000;
}

- (int64_t)detailsGroupChevronImageScale
{
  if (detailsGroupChevronImageScale_once != -1)
    dispatch_once(&detailsGroupChevronImageScale_once, &__block_literal_global_964_0);
  return (uint64_t)((unint64_t)detailsGroupChevronImageScale_sBehavior << 63) >> 63;
}

void __45__CKUIBehavior_detailsGroupChevronImageScale__block_invoke()
{
  detailsGroupChevronImageScale_sBehavior = 1;
}

- (double)detailsViewMapHeight
{
  if (detailsViewMapHeight_once != -1)
    dispatch_once(&detailsViewMapHeight_once, &__block_literal_global_965_0);
  return *(double *)&detailsViewMapHeight_sBehavior;
}

void __36__CKUIBehavior_detailsViewMapHeight__block_invoke()
{
  double v0;
  double v1;
  double v2;
  void *v3;
  BOOL v4;
  id v5;
  id v6;
  CGRect v7;

  if (CKIsRunningInMacCatalyst())
  {
    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v5 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "bounds");
    v0 = CGRectGetHeight(v7) * 0.394557823;
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v1 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v1 = 1.0;
    v2 = round(v0 * v1) / v1;
    v3 = v5;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v6, "isWaldoEnabled") == 0;
    v3 = v6;
    v2 = 220.0;
    if (!v4)
      v2 = 330.0;
  }
  detailsViewMapHeight_sBehavior = *(_QWORD *)&v2;

}

- (double)detailsAvatarPancakeViewWidth3Avatars
{
  if (detailsAvatarPancakeViewWidth3Avatars_once != -1)
    dispatch_once(&detailsAvatarPancakeViewWidth3Avatars_once, &__block_literal_global_966);
  return *(double *)&detailsAvatarPancakeViewWidth3Avatars_sBehavior;
}

void __53__CKUIBehavior_detailsAvatarPancakeViewWidth3Avatars__block_invoke()
{
  detailsAvatarPancakeViewWidth3Avatars_sBehavior = 0x4052000000000000;
}

- (double)detailsAvatarPancakeViewWidth2Avatars
{
  if (detailsAvatarPancakeViewWidth2Avatars_once != -1)
    dispatch_once(&detailsAvatarPancakeViewWidth2Avatars_once, &__block_literal_global_967);
  return *(double *)&detailsAvatarPancakeViewWidth2Avatars_sBehavior;
}

void __53__CKUIBehavior_detailsAvatarPancakeViewWidth2Avatars__block_invoke()
{
  detailsAvatarPancakeViewWidth2Avatars_sBehavior = 0x404D000000000000;
}

- (double)detailsAvatarPancakeViewOverlapOffset
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __53__CKUIBehavior_detailsAvatarPancakeViewOverlapOffset__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (detailsAvatarPancakeViewOverlapOffset_once != -1)
    dispatch_once(&detailsAvatarPancakeViewOverlapOffset_once, block);
  return *(double *)&detailsAvatarPancakeViewOverlapOffset_sBehavior;
}

double __53__CKUIBehavior_detailsAvatarPancakeViewOverlapOffset__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "detailsAvatarDiameter");
  v2 = v1;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v3 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v3 = 1.0;
  result = round(v2 * 0.36 * v3) / v3;
  detailsAvatarPancakeViewOverlapOffset_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)detailsAvatarDiameter
{
  if (detailsAvatarDiameter_once != -1)
    dispatch_once(&detailsAvatarDiameter_once, &__block_literal_global_968_0);
  return *(double *)&detailsAvatarDiameter_sBehavior;
}

void __37__CKUIBehavior_detailsAvatarDiameter__block_invoke()
{
  detailsAvatarDiameter_sBehavior = 0x4042800000000000;
}

- (double)detailsAvatarCornerRadius
{
  if (detailsAvatarCornerRadius_once != -1)
    dispatch_once(&detailsAvatarCornerRadius_once, &__block_literal_global_969);
  return *(double *)&detailsAvatarCornerRadius_sBehavior;
}

double __41__CKUIBehavior_detailsAvatarCornerRadius__block_invoke()
{
  double v0;
  double result;
  id v2;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "detailsAvatarCutoutDiameter");
  *(double *)&detailsAvatarCornerRadius_sBehavior = v0 * 0.5;

  return result;
}

- (double)detailsAvatarCutoutDiameter
{
  if (detailsAvatarCutoutDiameter_once != -1)
    dispatch_once(&detailsAvatarCutoutDiameter_once, &__block_literal_global_970);
  return *(double *)&detailsAvatarCutoutDiameter_sBehavior;
}

double __43__CKUIBehavior_detailsAvatarCutoutDiameter__block_invoke()
{
  double v0;
  double result;
  id v2;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "detailsAvatarDiameter");
  *(double *)&detailsAvatarCutoutDiameter_sBehavior = v0 + 4.0;

  return result;
}

- (int64_t)detailsActionViewStyle
{
  if (detailsActionViewStyle_once != -1)
    dispatch_once(&detailsActionViewStyle_once, &__block_literal_global_971_0);
  if (detailsActionViewStyle_sBehavior)
    return 7;
  else
    return 0;
}

void __38__CKUIBehavior_detailsActionViewStyle__block_invoke()
{
  detailsActionViewStyle_sBehavior = 1;
}

- (double)detailsTUConversationCellButtonHeight
{
  if (detailsTUConversationCellButtonHeight_once != -1)
    dispatch_once(&detailsTUConversationCellButtonHeight_once, &__block_literal_global_972);
  return *(double *)&detailsTUConversationCellButtonHeight_sBehavior;
}

void __53__CKUIBehavior_detailsTUConversationCellButtonHeight__block_invoke()
{
  detailsTUConversationCellButtonHeight_sBehavior = 0x4042000000000000;
}

- (double)detailsTUConversationCellButtonMinWidth
{
  if (detailsTUConversationCellButtonMinWidth_once != -1)
    dispatch_once(&detailsTUConversationCellButtonMinWidth_once, &__block_literal_global_973);
  return *(double *)&detailsTUConversationCellButtonMinWidth_sBehavior;
}

void __55__CKUIBehavior_detailsTUConversationCellButtonMinWidth__block_invoke()
{
  detailsTUConversationCellButtonMinWidth_sBehavior = 0x4052000000000000;
}

- (double)detailsTUConversationDetailsSummaryImageDiameter
{
  if (detailsTUConversationDetailsSummaryImageDiameter_once != -1)
    dispatch_once(&detailsTUConversationDetailsSummaryImageDiameter_once, &__block_literal_global_974_0);
  return *(double *)&detailsTUConversationDetailsSummaryImageDiameter_sBehavior;
}

void __64__CKUIBehavior_detailsTUConversationDetailsSummaryImageDiameter__block_invoke()
{
  detailsTUConversationDetailsSummaryImageDiameter_sBehavior = 0x403D000000000000;
}

- (double)detailsExpanseCellHeight
{
  if (detailsExpanseCellHeight_once != -1)
    dispatch_once(&detailsExpanseCellHeight_once, &__block_literal_global_975);
  return *(double *)&detailsExpanseCellHeight_sBehavior;
}

double __40__CKUIBehavior_detailsExpanseCellHeight__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = round(v0 * 173.0) / v0;
  detailsExpanseCellHeight_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)detailsExpanseDescriptionLabelHeight
{
  if (detailsExpanseDescriptionLabelHeight_once != -1)
    dispatch_once(&detailsExpanseDescriptionLabelHeight_once, &__block_literal_global_976);
  return 0.0;
}

- (double)detailsExpanseScreenShareCellHeight
{
  if (detailsExpanseScreenShareCellHeight_once != -1)
    dispatch_once(&detailsExpanseScreenShareCellHeight_once, &__block_literal_global_977_0);
  return *(double *)&detailsExpanseScreenShareCellHeight_sBehavior;
}

double __51__CKUIBehavior_detailsExpanseScreenShareCellHeight__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = round(v0 * 64.0) / v0;
  detailsExpanseScreenShareCellHeight_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)detailsExpanseImageFallbackDimension
{
  if (detailsExpanseImageFallbackDimension_once != -1)
    dispatch_once(&detailsExpanseImageFallbackDimension_once, &__block_literal_global_978);
  return *(double *)&detailsExpanseImageFallbackDimension_sBehavior;
}

void __52__CKUIBehavior_detailsExpanseImageFallbackDimension__block_invoke()
{
  detailsExpanseImageFallbackDimension_sBehavior = 0x4049000000000000;
}

- (double)detailsExpanseActivityDescriptionVerticalPadding
{
  if (detailsExpanseActivityDescriptionVerticalPadding_once != -1)
    dispatch_once(&detailsExpanseActivityDescriptionVerticalPadding_once, &__block_literal_global_979);
  return *(double *)&detailsExpanseActivityDescriptionVerticalPadding_sBehavior;
}

void __64__CKUIBehavior_detailsExpanseActivityDescriptionVerticalPadding__block_invoke()
{
  detailsExpanseActivityDescriptionVerticalPadding_sBehavior = 0x4018000000000000;
}

- (double)detailsExpanseActivityImageInsetPadding
{
  if (detailsExpanseActivityImageInsetPadding_once != -1)
    dispatch_once(&detailsExpanseActivityImageInsetPadding_once, &__block_literal_global_980_0);
  return *(double *)&detailsExpanseActivityImageInsetPadding_sBehavior;
}

void __55__CKUIBehavior_detailsExpanseActivityImageInsetPadding__block_invoke()
{
  detailsExpanseActivityImageInsetPadding_sBehavior = 0x4030000000000000;
}

- (double)detailsExpanseScreenShareIconHorizontalInsetPadding
{
  if (detailsExpanseScreenShareIconHorizontalInsetPadding_once != -1)
    dispatch_once(&detailsExpanseScreenShareIconHorizontalInsetPadding_once, &__block_literal_global_981);
  return *(double *)&detailsExpanseScreenShareIconHorizontalInsetPadding_sBehavior;
}

void __67__CKUIBehavior_detailsExpanseScreenShareIconHorizontalInsetPadding__block_invoke()
{
  detailsExpanseScreenShareIconHorizontalInsetPadding_sBehavior = 0x402C000000000000;
}

- (double)detailsExpanseScreenShareIconVerticalInsetPadding
{
  if (detailsExpanseScreenShareIconVerticalInsetPadding_once != -1)
    dispatch_once(&detailsExpanseScreenShareIconVerticalInsetPadding_once, &__block_literal_global_982);
  return *(double *)&detailsExpanseScreenShareIconVerticalInsetPadding_sBehavior;
}

void __65__CKUIBehavior_detailsExpanseScreenShareIconVerticalInsetPadding__block_invoke()
{
  detailsExpanseScreenShareIconVerticalInsetPadding_sBehavior = 0x4020000000000000;
}

- (double)tuConversationJoinButtonCornerRadius
{
  if (tuConversationJoinButtonCornerRadius_once != -1)
    dispatch_once(&tuConversationJoinButtonCornerRadius_once, &__block_literal_global_983_0);
  return *(double *)&tuConversationJoinButtonCornerRadius_sBehavior;
}

void __52__CKUIBehavior_tuConversationJoinButtonCornerRadius__block_invoke()
{
  tuConversationJoinButtonCornerRadius_sBehavior = 0x4032000000000000;
}

- (double)tuConversationJoinButtonHeight
{
  if (tuConversationJoinButtonHeight_once != -1)
    dispatch_once(&tuConversationJoinButtonHeight_once, &__block_literal_global_984);
  return *(double *)&tuConversationJoinButtonHeight_sBehavior;
}

void __46__CKUIBehavior_tuConversationJoinButtonHeight__block_invoke()
{
  tuConversationJoinButtonHeight_sBehavior = 0x4042000000000000;
}

- (double)tuConversationJoinButtonMinWidth
{
  if (tuConversationJoinButtonMinWidth_once != -1)
    dispatch_once(&tuConversationJoinButtonMinWidth_once, &__block_literal_global_985);
  return *(double *)&tuConversationJoinButtonMinWidth_sBehavior;
}

void __48__CKUIBehavior_tuConversationJoinButtonMinWidth__block_invoke()
{
  tuConversationJoinButtonMinWidth_sBehavior = 0x4052000000000000;
}

- (double)detailsSectionHeaderPaddingLeading
{
  if (detailsSectionHeaderPaddingLeading_once != -1)
    dispatch_once(&detailsSectionHeaderPaddingLeading_once, &__block_literal_global_986_0);
  return 0.0;
}

- (double)detailsSectionHeaderPaddingAbove
{
  if (detailsSectionHeaderPaddingAbove_once != -1)
    dispatch_once(&detailsSectionHeaderPaddingAbove_once, &__block_literal_global_987);
  return 0.0;
}

- (double)detailsCellLabelPadding
{
  if (detailsCellLabelPadding_once != -1)
    dispatch_once(&detailsCellLabelPadding_once, &__block_literal_global_988);
  return 0.0;
}

- (int64_t)groupRecipientSelectionPresentationStyle
{
  if (groupRecipientSelectionPresentationStyle_once != -1)
    dispatch_once(&groupRecipientSelectionPresentationStyle_once, &__block_literal_global_989_0);
  if (groupRecipientSelectionPresentationStyle_sBehavior)
    return -2;
  else
    return 0;
}

void __56__CKUIBehavior_groupRecipientSelectionPresentationStyle__block_invoke()
{
  groupRecipientSelectionPresentationStyle_sBehavior = 1;
}

- (double)detailsAddButtonDiameter
{
  if (detailsAddButtonDiameter_once != -1)
    dispatch_once(&detailsAddButtonDiameter_once, &__block_literal_global_990);
  return *(double *)&detailsAddButtonDiameter_sBehavior;
}

void __40__CKUIBehavior_detailsAddButtonDiameter__block_invoke()
{
  detailsAddButtonDiameter_sBehavior = 0x4042800000000000;
}

- (double)detailsContactAvatarLabelSpacing
{
  if (detailsContactAvatarLabelSpacing_once != -1)
    dispatch_once(&detailsContactAvatarLabelSpacing_once, &__block_literal_global_991);
  return *(double *)&detailsContactAvatarLabelSpacing_sBehavior;
}

void __48__CKUIBehavior_detailsContactAvatarLabelSpacing__block_invoke()
{
  detailsContactAvatarLabelSpacing_sBehavior = 0x4028000000000000;
}

- (double)detailsShareLocationCornerRadius
{
  if (detailsShareLocationCornerRadius_once != -1)
    dispatch_once(&detailsShareLocationCornerRadius_once, &__block_literal_global_992_0);
  return 0.0;
}

- (UIFont)nameFieldFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)nameFieldFont_sContentSizeCategory_nameFieldFont, (UIContentSizeCategory)v2)|| nameFieldFont_sIsIncreaseContrastEnabled_nameFieldFont != v3|| nameFieldFont_sIsBoldTextEnabled_nameFieldFont != IsBoldTextEnabled|| (v10 = nameFieldFont_sTextFontSize_nameFieldFont, *(double *)&nameFieldFont_sTextFontSize_nameFieldFont != v5)|| (v10 = nameFieldFont_sCustomTextFontSize_nameFieldFont, *(double *)&nameFieldFont_sCustomTextFontSize_nameFieldFont != v6)|| (objc_msgSend((id)nameFieldFont_sCustomTextFontName_nameFieldFont, "isEqualToString:", v9, *(double *)&nameFieldFont_sCustomTextFontSize_nameFieldFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)nameFieldFont_sBehavior;
    nameFieldFont_sBehavior = v11;

    objc_storeStrong((id *)&nameFieldFont_sContentSizeCategory_nameFieldFont, v2);
    nameFieldFont_sIsIncreaseContrastEnabled_nameFieldFont = v3;
    nameFieldFont_sIsBoldTextEnabled_nameFieldFont = IsBoldTextEnabled;
    nameFieldFont_sTextFontSize_nameFieldFont = *(_QWORD *)&v5;
    nameFieldFont_sCustomTextFontSize_nameFieldFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&nameFieldFont_sCustomTextFontName_nameFieldFont, v8);
  }
  v13 = (UIFont *)(id)nameFieldFont_sBehavior;

  return v13;
}

- (UIFont)recipientNameFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)recipientNameFont_sContentSizeCategory_recipientNameFont, (UIContentSizeCategory)v2)|| recipientNameFont_sIsIncreaseContrastEnabled_recipientNameFont != v3|| recipientNameFont_sIsBoldTextEnabled_recipientNameFont != IsBoldTextEnabled|| (v10 = recipientNameFont_sTextFontSize_recipientNameFont, *(double *)&recipientNameFont_sTextFontSize_recipientNameFont != v5)|| (v10 = recipientNameFont_sCustomTextFontSize_recipientNameFont, *(double *)&recipientNameFont_sCustomTextFontSize_recipientNameFont != v6)|| (objc_msgSend((id)recipientNameFont_sCustomTextFontName_recipientNameFont, "isEqualToString:", v9, *(double *)&recipientNameFont_sCustomTextFontSize_recipientNameFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB568], 0x8000, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)recipientNameFont_sBehavior;
    recipientNameFont_sBehavior = v12;

    objc_storeStrong((id *)&recipientNameFont_sContentSizeCategory_recipientNameFont, v2);
    recipientNameFont_sIsIncreaseContrastEnabled_recipientNameFont = v3;
    recipientNameFont_sIsBoldTextEnabled_recipientNameFont = IsBoldTextEnabled;
    recipientNameFont_sTextFontSize_recipientNameFont = *(_QWORD *)&v5;
    recipientNameFont_sCustomTextFontSize_recipientNameFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&recipientNameFont_sCustomTextFontName_recipientNameFont, v8);
  }
  v14 = (UIFont *)(id)recipientNameFont_sBehavior;

  return v14;
}

- (UIFont)locationSubtitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)locationSubtitleFont_sContentSizeCategory_locationSubtitleFont, (UIContentSizeCategory)v2)|| locationSubtitleFont_sIsIncreaseContrastEnabled_locationSubtitleFont != v3|| locationSubtitleFont_sIsBoldTextEnabled_locationSubtitleFont != IsBoldTextEnabled|| (v10 = locationSubtitleFont_sTextFontSize_locationSubtitleFont, *(double *)&locationSubtitleFont_sTextFontSize_locationSubtitleFont != v5)|| (v10 = locationSubtitleFont_sCustomTextFontSize_locationSubtitleFont, *(double *)&locationSubtitleFont_sCustomTextFontSize_locationSubtitleFont != v6)|| (objc_msgSend((id)locationSubtitleFont_sCustomTextFontName_locationSubtitleFont, "isEqualToString:", v9, *(double *)&locationSubtitleFont_sCustomTextFontSize_locationSubtitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB588], 0x8000, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)locationSubtitleFont_sBehavior;
    locationSubtitleFont_sBehavior = v12;

    objc_storeStrong((id *)&locationSubtitleFont_sContentSizeCategory_locationSubtitleFont, v2);
    locationSubtitleFont_sIsIncreaseContrastEnabled_locationSubtitleFont = v3;
    locationSubtitleFont_sIsBoldTextEnabled_locationSubtitleFont = IsBoldTextEnabled;
    locationSubtitleFont_sTextFontSize_locationSubtitleFont = *(_QWORD *)&v5;
    locationSubtitleFont_sCustomTextFontSize_locationSubtitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&locationSubtitleFont_sCustomTextFontName_locationSubtitleFont, v8);
  }
  v14 = (UIFont *)(id)locationSubtitleFont_sBehavior;

  return v14;
}

- (UIFont)addContactFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)addContactFont_sContentSizeCategory_addContactFont, (UIContentSizeCategory)v2)|| addContactFont_sIsIncreaseContrastEnabled_addContactFont != v3|| addContactFont_sIsBoldTextEnabled_addContactFont != IsBoldTextEnabled|| (v10 = addContactFont_sTextFontSize_addContactFont, *(double *)&addContactFont_sTextFontSize_addContactFont != v5)|| (v10 = addContactFont_sCustomTextFontSize_addContactFont, *(double *)&addContactFont_sCustomTextFontSize_addContactFont != v6)|| (objc_msgSend((id)addContactFont_sCustomTextFontName_addContactFont, "isEqualToString:", v9, *(double *)&addContactFont_sCustomTextFontSize_addContactFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB538], 0x8000, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)addContactFont_sBehavior;
    addContactFont_sBehavior = v12;

    objc_storeStrong((id *)&addContactFont_sContentSizeCategory_addContactFont, v2);
    addContactFont_sIsIncreaseContrastEnabled_addContactFont = v3;
    addContactFont_sIsBoldTextEnabled_addContactFont = IsBoldTextEnabled;
    addContactFont_sTextFontSize_addContactFont = *(_QWORD *)&v5;
    addContactFont_sCustomTextFontSize_addContactFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&addContactFont_sCustomTextFontName_addContactFont, v8);
  }
  v14 = (UIFont *)(id)addContactFont_sBehavior;

  return v14;
}

- (UIFont)headerFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)headerFont_sContentSizeCategory_headerFont, (UIContentSizeCategory)v2)|| headerFont_sIsIncreaseContrastEnabled_headerFont != v3|| headerFont_sIsBoldTextEnabled_headerFont != IsBoldTextEnabled|| (v10 = headerFont_sTextFontSize_headerFont, *(double *)&headerFont_sTextFontSize_headerFont != v5)|| (v10 = headerFont_sCustomTextFontSize_headerFont, *(double *)&headerFont_sCustomTextFontSize_headerFont != v6)|| (objc_msgSend((id)headerFont_sCustomTextFontName_headerFont, "isEqualToString:", v9, *(double *)&headerFont_sCustomTextFontSize_headerFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)headerFont_sBehavior;
    headerFont_sBehavior = v11;

    objc_storeStrong((id *)&headerFont_sContentSizeCategory_headerFont, v2);
    headerFont_sIsIncreaseContrastEnabled_headerFont = v3;
    headerFont_sIsBoldTextEnabled_headerFont = IsBoldTextEnabled;
    headerFont_sTextFontSize_headerFont = *(_QWORD *)&v5;
    headerFont_sCustomTextFontSize_headerFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&headerFont_sCustomTextFontName_headerFont, v8);
  }
  v13 = (UIFont *)(id)headerFont_sBehavior;

  return v13;
}

- (UIFont)downloadButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)downloadButtonFont_sContentSizeCategory_downloadButtonFont, (UIContentSizeCategory)v2)|| downloadButtonFont_sIsIncreaseContrastEnabled_downloadButtonFont != v3|| downloadButtonFont_sIsBoldTextEnabled_downloadButtonFont != IsBoldTextEnabled|| (v10 = downloadButtonFont_sTextFontSize_downloadButtonFont, *(double *)&downloadButtonFont_sTextFontSize_downloadButtonFont != v5)|| (v10 = downloadButtonFont_sCustomTextFontSize_downloadButtonFont, *(double *)&downloadButtonFont_sCustomTextFontSize_downloadButtonFont != v6)|| (objc_msgSend((id)downloadButtonFont_sCustomTextFontName_downloadButtonFont, "isEqualToString:", v9, *(double *)&downloadButtonFont_sCustomTextFontSize_downloadButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)downloadButtonFont_sBehavior;
    downloadButtonFont_sBehavior = v11;

    objc_storeStrong((id *)&downloadButtonFont_sContentSizeCategory_downloadButtonFont, v2);
    downloadButtonFont_sIsIncreaseContrastEnabled_downloadButtonFont = v3;
    downloadButtonFont_sIsBoldTextEnabled_downloadButtonFont = IsBoldTextEnabled;
    downloadButtonFont_sTextFontSize_downloadButtonFont = *(_QWORD *)&v5;
    downloadButtonFont_sCustomTextFontSize_downloadButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&downloadButtonFont_sCustomTextFontName_downloadButtonFont, v8);
  }
  v13 = (UIFont *)(id)downloadButtonFont_sBehavior;

  return v13;
}

- (UIFont)iCloudTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)iCloudTextFont_sContentSizeCategory_iCloudTextFont, (UIContentSizeCategory)v2)|| iCloudTextFont_sIsIncreaseContrastEnabled_iCloudTextFont != v3|| iCloudTextFont_sIsBoldTextEnabled_iCloudTextFont != IsBoldTextEnabled|| (v10 = iCloudTextFont_sTextFontSize_iCloudTextFont, *(double *)&iCloudTextFont_sTextFontSize_iCloudTextFont != v5)|| (v10 = iCloudTextFont_sCustomTextFontSize_iCloudTextFont, *(double *)&iCloudTextFont_sCustomTextFontSize_iCloudTextFont != v6)|| (objc_msgSend((id)iCloudTextFont_sCustomTextFontName_iCloudTextFont, "isEqualToString:", v9, *(double *)&iCloudTextFont_sCustomTextFontSize_iCloudTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortPreferredFontForTextStyle:", *MEMORY[0x1E0CEB570], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)iCloudTextFont_sBehavior;
    iCloudTextFont_sBehavior = v11;

    objc_storeStrong((id *)&iCloudTextFont_sContentSizeCategory_iCloudTextFont, v2);
    iCloudTextFont_sIsIncreaseContrastEnabled_iCloudTextFont = v3;
    iCloudTextFont_sIsBoldTextEnabled_iCloudTextFont = IsBoldTextEnabled;
    iCloudTextFont_sTextFontSize_iCloudTextFont = *(_QWORD *)&v5;
    iCloudTextFont_sCustomTextFontSize_iCloudTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&iCloudTextFont_sCustomTextFontName_iCloudTextFont, v8);
  }
  v13 = (UIFont *)(id)iCloudTextFont_sBehavior;

  return v13;
}

- (double)detailsDownloadAttachmentsHeaderiCloudImageAlphaForLightMode
{
  if (detailsDownloadAttachmentsHeaderiCloudImageAlphaForLightMode_once != -1)
    dispatch_once(&detailsDownloadAttachmentsHeaderiCloudImageAlphaForLightMode_once, &__block_literal_global_993);
  return *(double *)&detailsDownloadAttachmentsHeaderiCloudImageAlphaForLightMode_sBehavior;
}

void __76__CKUIBehavior_detailsDownloadAttachmentsHeaderiCloudImageAlphaForLightMode__block_invoke()
{
  detailsDownloadAttachmentsHeaderiCloudImageAlphaForLightMode_sBehavior = 0x3FB999999999999ALL;
}

- (double)detailsDownloadAttachmentsHeaderiCloudImageAlphaForDarkMode
{
  if (detailsDownloadAttachmentsHeaderiCloudImageAlphaForDarkMode_once != -1)
    dispatch_once(&detailsDownloadAttachmentsHeaderiCloudImageAlphaForDarkMode_once, &__block_literal_global_994);
  return *(double *)&detailsDownloadAttachmentsHeaderiCloudImageAlphaForDarkMode_sBehavior;
}

void __75__CKUIBehavior_detailsDownloadAttachmentsHeaderiCloudImageAlphaForDarkMode__block_invoke()
{
  detailsDownloadAttachmentsHeaderiCloudImageAlphaForDarkMode_sBehavior = 0x3FD999999999999ALL;
}

- (UIImage)detailsViewFaceTimeVideoImage
{
  if (detailsViewFaceTimeVideoImage_once != -1)
    dispatch_once(&detailsViewFaceTimeVideoImage_once, &__block_literal_global_995_0);
  return (UIImage *)(id)detailsViewFaceTimeVideoImage_sBehavior;
}

void __45__CKUIBehavior_detailsViewFaceTimeVideoImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("video.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)detailsViewFaceTimeVideoImage_sBehavior;
  detailsViewFaceTimeVideoImage_sBehavior = v0;

}

- (UIImage)detailsViewPhoneImage
{
  if (detailsViewPhoneImage_once != -1)
    dispatch_once(&detailsViewPhoneImage_once, &__block_literal_global_996);
  return (UIImage *)(id)detailsViewPhoneImage_sBehavior;
}

void __37__CKUIBehavior_detailsViewPhoneImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("phone.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)detailsViewPhoneImage_sBehavior;
  detailsViewPhoneImage_sBehavior = v0;

}

- (UIImage)detailsViewMessagesImage
{
  if (detailsViewMessagesImage_once != -1)
    dispatch_once(&detailsViewMessagesImage_once, &__block_literal_global_997);
  return (UIImage *)(id)detailsViewMessagesImage_sBehavior;
}

void __40__CKUIBehavior_detailsViewMessagesImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("message.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)detailsViewMessagesImage_sBehavior;
  detailsViewMessagesImage_sBehavior = v0;

}

- (double)ktStatusCellImagePadding
{
  if (ktStatusCellImagePadding_once != -1)
    dispatch_once(&ktStatusCellImagePadding_once, &__block_literal_global_1000_0);
  return *(double *)&ktStatusCellImagePadding_sBehavior;
}

void __40__CKUIBehavior_ktStatusCellImagePadding__block_invoke()
{
  ktStatusCellImagePadding_sBehavior = 0x4014000000000000;
}

- (CGRect)ktStringAttachmentPadding
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  if (ktStringAttachmentPadding_once != -1)
    dispatch_once(&ktStringAttachmentPadding_once, &__block_literal_global_1001);
  v2 = *(double *)&ktStringAttachmentPadding_sBehavior_2;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.size.height = v5;
  result.size.width = v2;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

void __41__CKUIBehavior_ktStringAttachmentPadding__block_invoke()
{
  ktStringAttachmentPadding_sBehavior_2 = 0x4008000000000000;
}

- (CGSize)avatarSize
{
  double v2;
  double v3;
  CGSize result;

  if (avatarSize_once != -1)
    dispatch_once(&avatarSize_once, &__block_literal_global_1002);
  v2 = *(double *)&avatarSize_sBehavior_0;
  v3 = *(double *)&avatarSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __26__CKUIBehavior_avatarSize__block_invoke()
{
  double v0;
  double v1;

  if (IMEnableTranscriptChromelessNavBar())
  {
    if (CKPixelWidth_once_7 != -1)
      dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
    v0 = *(double *)&CKPixelWidth_sPixel_7 + 60.0;
    v1 = *(double *)&CKPixelWidth_sPixel_7 + 60.0;
  }
  else
  {
    v0 = 50.0;
    v1 = 50.0;
  }
  avatarSize_sBehavior_0 = *(_QWORD *)&v0;
  avatarSize_sBehavior_1 = *(_QWORD *)&v1;
}

- (CGSize)groupAvatarViewSize
{
  double v2;
  double v3;
  CGSize result;

  if (groupAvatarViewSize_once != -1)
    dispatch_once(&groupAvatarViewSize_once, &__block_literal_global_1003_0);
  v2 = *(double *)&groupAvatarViewSize_sBehavior_0;
  v3 = *(double *)&groupAvatarViewSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __35__CKUIBehavior_groupAvatarViewSize__block_invoke()
{
  groupAvatarViewSize_sBehavior_0 = 0x404E000000000000;
  groupAvatarViewSize_sBehavior_1 = 0x404E000000000000;
}

- (CGSize)avatarCollapsedSize
{
  double v2;
  double v3;
  CGSize result;

  if (avatarCollapsedSize_once != -1)
    dispatch_once(&avatarCollapsedSize_once, &__block_literal_global_1004);
  v2 = *(double *)&avatarCollapsedSize_sBehavior_0;
  v3 = *(double *)&avatarCollapsedSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

double __35__CKUIBehavior_avatarCollapsedSize__block_invoke()
{
  double result;

  if (CKPixelWidth_once_7 != -1)
    dispatch_once(&CKPixelWidth_once_7, &__block_literal_global_4580);
  result = *(double *)&CKPixelWidth_sPixel_7 + 30.0;
  *(double *)&avatarCollapsedSize_sBehavior_0 = *(double *)&CKPixelWidth_sPixel_7 + 30.0;
  *(double *)&avatarCollapsedSize_sBehavior_1 = *(double *)&CKPixelWidth_sPixel_7 + 30.0;
  return result;
}

- (double)avatarSpacingMargin
{
  if (avatarSpacingMargin_once != -1)
    dispatch_once(&avatarSpacingMargin_once, &__block_literal_global_1005);
  return *(double *)&avatarSpacingMargin_sBehavior;
}

void __35__CKUIBehavior_avatarSpacingMargin__block_invoke()
{
  avatarSpacingMargin_sBehavior = 0x4048000000000000;
}

- (double)avatarNameWidth
{
  if (avatarNameWidth_once != -1)
    dispatch_once(&avatarNameWidth_once, &__block_literal_global_1006_0);
  return *(double *)&avatarNameWidth_sBehavior;
}

void __31__CKUIBehavior_avatarNameWidth__block_invoke()
{
  avatarNameWidth_sBehavior = 0x4055000000000000;
}

- (double)avatarContactImageNameMargin
{
  if (avatarContactImageNameMargin_once != -1)
    dispatch_once(&avatarContactImageNameMargin_once, &__block_literal_global_1007);
  return *(double *)&avatarContactImageNameMargin_sBehavior;
}

void __44__CKUIBehavior_avatarContactImageNameMargin__block_invoke()
{
  avatarContactImageNameMargin_sBehavior = 0x4024000000000000;
}

- (double)avatarVerticalOffset
{
  if (avatarVerticalOffset_once != -1)
    dispatch_once(&avatarVerticalOffset_once, &__block_literal_global_1008);
  return *(double *)&avatarVerticalOffset_sBehavior;
}

void __36__CKUIBehavior_avatarVerticalOffset__block_invoke()
{
  avatarVerticalOffset_sBehavior = 0x4008000000000000;
}

- (CGSize)avatarCutoutSize
{
  double v2;
  double v3;
  _QWORD block[5];
  CGSize result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __32__CKUIBehavior_avatarCutoutSize__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (avatarCutoutSize_once != -1)
    dispatch_once(&avatarCutoutSize_once, block);
  v2 = *(double *)&avatarCutoutSize_sBehavior_0;
  v3 = *(double *)&avatarCutoutSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

double __32__CKUIBehavior_avatarCutoutSize__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "avatarSize");
  v3 = v2 + 4.0;
  objc_msgSend(*(id *)(a1 + 32), "avatarSize");
  result = v4 + 4.0;
  avatarCutoutSize_sBehavior_0 = *(_QWORD *)&v3;
  *(double *)&avatarCutoutSize_sBehavior_1 = v4 + 4.0;
  return result;
}

- (double)avatarTitleOffset
{
  if (avatarTitleOffset_once != -1)
    dispatch_once(&avatarTitleOffset_once, &__block_literal_global_1009);
  return *(double *)&avatarTitleOffset_sBehavior;
}

void __33__CKUIBehavior_avatarTitleOffset__block_invoke()
{
  avatarTitleOffset_sBehavior = 0x402E000000000000;
}

- (UIFont)avatarStackTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)avatarStackTitleFont_sContentSizeCategory_avatarStackTitleFont, (UIContentSizeCategory)v2)|| avatarStackTitleFont_sIsIncreaseContrastEnabled_avatarStackTitleFont != v3|| avatarStackTitleFont_sIsBoldTextEnabled_avatarStackTitleFont != IsBoldTextEnabled|| (v10 = avatarStackTitleFont_sTextFontSize_avatarStackTitleFont, *(double *)&avatarStackTitleFont_sTextFontSize_avatarStackTitleFont != v5)|| (v10 = avatarStackTitleFont_sCustomTextFontSize_avatarStackTitleFont, *(double *)&avatarStackTitleFont_sCustomTextFontSize_avatarStackTitleFont != v6)|| (objc_msgSend((id)avatarStackTitleFont_sCustomTextFontName_avatarStackTitleFont, "isEqualToString:", v9, *(double *)&avatarStackTitleFont_sCustomTextFontSize_avatarStackTitleFont) & 1) == 0)
  {
    +[CKUIBehavior fontWithStyle:adjustedForMaxSizeCategory:](CKUIBehavior, "fontWithStyle:adjustedForMaxSizeCategory:", *MEMORY[0x1E0CEB550], *MEMORY[0x1E0CEB3E0], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)avatarStackTitleFont_sBehavior;
    avatarStackTitleFont_sBehavior = v11;

    objc_storeStrong((id *)&avatarStackTitleFont_sContentSizeCategory_avatarStackTitleFont, v2);
    avatarStackTitleFont_sIsIncreaseContrastEnabled_avatarStackTitleFont = v3;
    avatarStackTitleFont_sIsBoldTextEnabled_avatarStackTitleFont = IsBoldTextEnabled;
    avatarStackTitleFont_sTextFontSize_avatarStackTitleFont = *(_QWORD *)&v5;
    avatarStackTitleFont_sCustomTextFontSize_avatarStackTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&avatarStackTitleFont_sCustomTextFontName_avatarStackTitleFont, v8);
  }
  v13 = (UIFont *)(id)avatarStackTitleFont_sBehavior;

  return v13;
}

- (UIFont)noAvatarTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)noAvatarTitleFont_sContentSizeCategory_noAvatarTitleFont, (UIContentSizeCategory)v2)|| noAvatarTitleFont_sIsIncreaseContrastEnabled_noAvatarTitleFont != v3|| noAvatarTitleFont_sIsBoldTextEnabled_noAvatarTitleFont != IsBoldTextEnabled|| (v10 = noAvatarTitleFont_sTextFontSize_noAvatarTitleFont, *(double *)&noAvatarTitleFont_sTextFontSize_noAvatarTitleFont != v5)|| (v10 = noAvatarTitleFont_sCustomTextFontSize_noAvatarTitleFont, *(double *)&noAvatarTitleFont_sCustomTextFontSize_noAvatarTitleFont != v6)|| (objc_msgSend((id)noAvatarTitleFont_sCustomTextFontName_noAvatarTitleFont, "isEqualToString:", v9, *(double *)&noAvatarTitleFont_sCustomTextFontSize_noAvatarTitleFont) & 1) == 0)
  {
    +[CKUIBehavior fontWithStyle:adjustedForMaxSizeCategory:](CKUIBehavior, "fontWithStyle:adjustedForMaxSizeCategory:", *MEMORY[0x1E0CEB568], *MEMORY[0x1E0CEB3E0], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)noAvatarTitleFont_sBehavior;
    noAvatarTitleFont_sBehavior = v11;

    objc_storeStrong((id *)&noAvatarTitleFont_sContentSizeCategory_noAvatarTitleFont, v2);
    noAvatarTitleFont_sIsIncreaseContrastEnabled_noAvatarTitleFont = v3;
    noAvatarTitleFont_sIsBoldTextEnabled_noAvatarTitleFont = IsBoldTextEnabled;
    noAvatarTitleFont_sTextFontSize_noAvatarTitleFont = *(_QWORD *)&v5;
    noAvatarTitleFont_sCustomTextFontSize_noAvatarTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&noAvatarTitleFont_sCustomTextFontName_noAvatarTitleFont, v8);
  }
  v13 = (UIFont *)(id)noAvatarTitleFont_sBehavior;

  return v13;
}

- (UIFont)avatarNameFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)avatarNameFont_sContentSizeCategory_avatarNameFont, (UIContentSizeCategory)v2)|| avatarNameFont_sIsIncreaseContrastEnabled_avatarNameFont != v3|| avatarNameFont_sIsBoldTextEnabled_avatarNameFont != IsBoldTextEnabled|| (v10 = avatarNameFont_sTextFontSize_avatarNameFont, *(double *)&avatarNameFont_sTextFontSize_avatarNameFont != v5)|| (v10 = avatarNameFont_sCustomTextFontSize_avatarNameFont, *(double *)&avatarNameFont_sCustomTextFontSize_avatarNameFont != v6)|| (objc_msgSend((id)avatarNameFont_sCustomTextFontName_avatarNameFont, "isEqualToString:", v9, *(double *)&avatarNameFont_sCustomTextFontSize_avatarNameFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "defaultFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)avatarNameFont_sBehavior;
    avatarNameFont_sBehavior = v11;

    objc_storeStrong((id *)&avatarNameFont_sContentSizeCategory_avatarNameFont, v2);
    avatarNameFont_sIsIncreaseContrastEnabled_avatarNameFont = v3;
    avatarNameFont_sIsBoldTextEnabled_avatarNameFont = IsBoldTextEnabled;
    avatarNameFont_sTextFontSize_avatarNameFont = *(_QWORD *)&v5;
    avatarNameFont_sCustomTextFontSize_avatarNameFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&avatarNameFont_sCustomTextFontName_avatarNameFont, v8);
  }
  v13 = (UIFont *)(id)avatarNameFont_sBehavior;

  return v13;
}

- (UIFont)avatarNameEmergencyFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)avatarNameEmergencyFont_sContentSizeCategory_avatarNameEmergencyFont, (UIContentSizeCategory)v2)|| avatarNameEmergencyFont_sIsIncreaseContrastEnabled_avatarNameEmergencyFont != v3|| avatarNameEmergencyFont_sIsBoldTextEnabled_avatarNameEmergencyFont != IsBoldTextEnabled|| *(double *)&avatarNameEmergencyFont_sTextFontSize_avatarNameEmergencyFont != v5|| *(double *)&avatarNameEmergencyFont_sCustomTextFontSize_avatarNameEmergencyFont != v6|| (objc_msgSend((id)avatarNameEmergencyFont_sCustomTextFontName_avatarNameEmergencyFont, "isEqualToString:", v9, *(double *)&avatarNameEmergencyFont_sCustomTextFontSize_avatarNameEmergencyFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_fontForStyle:weight:", *MEMORY[0x1E0CEB548], *MEMORY[0x1E0DC1448]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)avatarNameEmergencyFont_sBehavior;
    avatarNameEmergencyFont_sBehavior = v10;

    objc_storeStrong((id *)&avatarNameEmergencyFont_sContentSizeCategory_avatarNameEmergencyFont, v2);
    avatarNameEmergencyFont_sIsIncreaseContrastEnabled_avatarNameEmergencyFont = v3;
    avatarNameEmergencyFont_sIsBoldTextEnabled_avatarNameEmergencyFont = IsBoldTextEnabled;
    avatarNameEmergencyFont_sTextFontSize_avatarNameEmergencyFont = *(_QWORD *)&v5;
    avatarNameEmergencyFont_sCustomTextFontSize_avatarNameEmergencyFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&avatarNameEmergencyFont_sCustomTextFontName_avatarNameEmergencyFont, v8);
  }
  v12 = (UIFont *)(id)avatarNameEmergencyFont_sBehavior;

  return v12;
}

- (UIFont)navigationHeaderJoinLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)navigationHeaderJoinLabelFont_sContentSizeCategory_navigationHeaderJoinLabelFont, (UIContentSizeCategory)v2)|| navigationHeaderJoinLabelFont_sIsIncreaseContrastEnabled_navigationHeaderJoinLabelFont != v3|| navigationHeaderJoinLabelFont_sIsBoldTextEnabled_navigationHeaderJoinLabelFont != IsBoldTextEnabled|| (v10 = navigationHeaderJoinLabelFont_sTextFontSize_navigationHeaderJoinLabelFont, *(double *)&navigationHeaderJoinLabelFont_sTextFontSize_navigationHeaderJoinLabelFont != v5)|| (v10 = navigationHeaderJoinLabelFont_sCustomTextFontSize_navigationHeaderJoinLabelFont, *(double *)&navigationHeaderJoinLabelFont_sCustomTextFontSize_navigationHeaderJoinLabelFont != v6)|| (objc_msgSend((id)navigationHeaderJoinLabelFont_sCustomTextFontName_navigationHeaderJoinLabelFont, "isEqualToString:", v9, *(double *)&navigationHeaderJoinLabelFont_sCustomTextFontSize_navigationHeaderJoinLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB550], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)navigationHeaderJoinLabelFont_sBehavior;
    navigationHeaderJoinLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&navigationHeaderJoinLabelFont_sContentSizeCategory_navigationHeaderJoinLabelFont, v2);
    navigationHeaderJoinLabelFont_sIsIncreaseContrastEnabled_navigationHeaderJoinLabelFont = v3;
    navigationHeaderJoinLabelFont_sIsBoldTextEnabled_navigationHeaderJoinLabelFont = IsBoldTextEnabled;
    navigationHeaderJoinLabelFont_sTextFontSize_navigationHeaderJoinLabelFont = *(_QWORD *)&v5;
    navigationHeaderJoinLabelFont_sCustomTextFontSize_navigationHeaderJoinLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&navigationHeaderJoinLabelFont_sCustomTextFontName_navigationHeaderJoinLabelFont, v8);
  }
  v13 = (UIFont *)(id)navigationHeaderJoinLabelFont_sBehavior;

  return v13;
}

- (BOOL)areBannersSupported
{
  if (areBannersSupported_once != -1)
    dispatch_once(&areBannersSupported_once, &__block_literal_global_1010);
  return areBannersSupported_sBehavior;
}

void __35__CKUIBehavior_areBannersSupported__block_invoke()
{
  areBannersSupported_sBehavior = 1;
}

- (CGSize)bannerCellSize
{
  double v2;
  double v3;
  CGSize result;

  if (bannerCellSize_once != -1)
    dispatch_once(&bannerCellSize_once, &__block_literal_global_1011_0);
  v2 = *(double *)&bannerCellSize_sBehavior_0;
  v3 = *(double *)&bannerCellSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __30__CKUIBehavior_bannerCellSize__block_invoke()
{
  bannerCellSize_sBehavior_0 = 0x4070800000000000;
  bannerCellSize_sBehavior_1 = 0x4041000000000000;
}

- (double)bannerAdditionalOffset
{
  if (bannerAdditionalOffset_once != -1)
    dispatch_once(&bannerAdditionalOffset_once, &__block_literal_global_1012);
  return *(double *)&bannerAdditionalOffset_sBehavior;
}

void __38__CKUIBehavior_bannerAdditionalOffset__block_invoke()
{
  bannerAdditionalOffset_sBehavior = 0x4022000000000000;
}

- (double)bannerTitleAdditionalOffset
{
  if (bannerTitleAdditionalOffset_once != -1)
    dispatch_once(&bannerTitleAdditionalOffset_once, &__block_literal_global_1013);
  return *(double *)&bannerTitleAdditionalOffset_sBehavior;
}

void __43__CKUIBehavior_bannerTitleAdditionalOffset__block_invoke()
{
  bannerTitleAdditionalOffset_sBehavior = 0x4020000000000000;
}

- (UIFont)nicknameUpdatesTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)nicknameUpdatesTitleFont_sContentSizeCategory_nicknameUpdatesTitleFont, (UIContentSizeCategory)v2)|| nicknameUpdatesTitleFont_sIsIncreaseContrastEnabled_nicknameUpdatesTitleFont != v3|| nicknameUpdatesTitleFont_sIsBoldTextEnabled_nicknameUpdatesTitleFont != IsBoldTextEnabled|| (v10 = nicknameUpdatesTitleFont_sTextFontSize_nicknameUpdatesTitleFont, *(double *)&nicknameUpdatesTitleFont_sTextFontSize_nicknameUpdatesTitleFont != v5)|| (v10 = nicknameUpdatesTitleFont_sCustomTextFontSize_nicknameUpdatesTitleFont, *(double *)&nicknameUpdatesTitleFont_sCustomTextFontSize_nicknameUpdatesTitleFont != v6)|| (objc_msgSend((id)nicknameUpdatesTitleFont_sCustomTextFontName_nicknameUpdatesTitleFont, "isEqualToString:", v9, *(double *)&nicknameUpdatesTitleFont_sCustomTextFontSize_nicknameUpdatesTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB540], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)nicknameUpdatesTitleFont_sBehavior;
    nicknameUpdatesTitleFont_sBehavior = v11;

    objc_storeStrong((id *)&nicknameUpdatesTitleFont_sContentSizeCategory_nicknameUpdatesTitleFont, v2);
    nicknameUpdatesTitleFont_sIsIncreaseContrastEnabled_nicknameUpdatesTitleFont = v3;
    nicknameUpdatesTitleFont_sIsBoldTextEnabled_nicknameUpdatesTitleFont = IsBoldTextEnabled;
    nicknameUpdatesTitleFont_sTextFontSize_nicknameUpdatesTitleFont = *(_QWORD *)&v5;
    nicknameUpdatesTitleFont_sCustomTextFontSize_nicknameUpdatesTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&nicknameUpdatesTitleFont_sCustomTextFontName_nicknameUpdatesTitleFont, v8);
  }
  v13 = (UIFont *)(id)nicknameUpdatesTitleFont_sBehavior;

  return v13;
}

- (UIFont)nicknameUpdatesSubtitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)nicknameUpdatesSubtitleFont_sContentSizeCategory_nicknameUpdatesSubtitleFont, (UIContentSizeCategory)v2)|| nicknameUpdatesSubtitleFont_sIsIncreaseContrastEnabled_nicknameUpdatesSubtitleFont != v3|| nicknameUpdatesSubtitleFont_sIsBoldTextEnabled_nicknameUpdatesSubtitleFont != IsBoldTextEnabled|| (v10 = nicknameUpdatesSubtitleFont_sTextFontSize_nicknameUpdatesSubtitleFont, *(double *)&nicknameUpdatesSubtitleFont_sTextFontSize_nicknameUpdatesSubtitleFont != v5)|| (v10 = nicknameUpdatesSubtitleFont_sCustomTextFontSize_nicknameUpdatesSubtitleFont, *(double *)&nicknameUpdatesSubtitleFont_sCustomTextFontSize_nicknameUpdatesSubtitleFont != v6)|| (objc_msgSend((id)nicknameUpdatesSubtitleFont_sCustomTextFontName_nicknameUpdatesSubtitleFont, "isEqualToString:", v9, *(double *)&nicknameUpdatesSubtitleFont_sCustomTextFontSize_nicknameUpdatesSubtitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)nicknameUpdatesSubtitleFont_sBehavior;
    nicknameUpdatesSubtitleFont_sBehavior = v11;

    objc_storeStrong((id *)&nicknameUpdatesSubtitleFont_sContentSizeCategory_nicknameUpdatesSubtitleFont, v2);
    nicknameUpdatesSubtitleFont_sIsIncreaseContrastEnabled_nicknameUpdatesSubtitleFont = v3;
    nicknameUpdatesSubtitleFont_sIsBoldTextEnabled_nicknameUpdatesSubtitleFont = IsBoldTextEnabled;
    nicknameUpdatesSubtitleFont_sTextFontSize_nicknameUpdatesSubtitleFont = *(_QWORD *)&v5;
    nicknameUpdatesSubtitleFont_sCustomTextFontSize_nicknameUpdatesSubtitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&nicknameUpdatesSubtitleFont_sCustomTextFontName_nicknameUpdatesSubtitleFont, v8);
  }
  v13 = (UIFont *)(id)nicknameUpdatesSubtitleFont_sBehavior;

  return v13;
}

- (UIButtonConfiguration)nicknameUpdatesButtonConfiguration
{
  if (nicknameUpdatesButtonConfiguration_once != -1)
    dispatch_once(&nicknameUpdatesButtonConfiguration_once, &__block_literal_global_1014_0);
  return (UIButtonConfiguration *)(id)nicknameUpdatesButtonConfiguration_sBehavior;
}

void __50__CKUIBehavior_nicknameUpdatesButtonConfiguration__block_invoke()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "plainButtonConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "contentInsets");
  objc_msgSend(v0, "setContentInsets:");
  v1 = (void *)nicknameUpdatesButtonConfiguration_sBehavior;
  nicknameUpdatesButtonConfiguration_sBehavior = (uint64_t)v0;

}

- (void)prewarmAcknowledgementsImage
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;

  v3 = -[CKUIBehavior grayHeartAckImage](self, "grayHeartAckImage");
  v4 = -[CKUIBehavior whiteHeartAckImage](self, "whiteHeartAckImage");
  v5 = -[CKUIBehavior grayThumbsUpAckImage](self, "grayThumbsUpAckImage");
  v6 = -[CKUIBehavior grayThumbsUpAckImage](self, "grayThumbsUpAckImage");
  v7 = -[CKUIBehavior grayThumbsDownAckImage](self, "grayThumbsDownAckImage");
  v8 = -[CKUIBehavior grayExclamationLeftAckImage](self, "grayExclamationLeftAckImage");
  v9 = -[CKUIBehavior grayExclamationRightAckImage](self, "grayExclamationRightAckImage");
  v10 = -[CKUIBehavior grayQuestionMarkGlyphAckImage](self, "grayQuestionMarkGlyphAckImage");
  v11 = -[CKUIBehavior grayQuestionMarkDotAckImage](self, "grayQuestionMarkDotAckImage");
  v12 = -[CKUIBehavior grayHaAckImage](self, "grayHaAckImage");
  v13 = -[CKUIBehavior grayH1AckImage](self, "grayH1AckImage");
  v14 = -[CKUIBehavior grayA1AckImage](self, "grayA1AckImage");
  v15 = -[CKUIBehavior grayH2AckImage](self, "grayH2AckImage");
  v16 = -[CKUIBehavior grayA2AckImage](self, "grayA2AckImage");
  v17 = -[CKUIBehavior redHeartAckImage](self, "redHeartAckImage");
  v18 = -[CKUIBehavior whiteThumbsUpAckImage](self, "whiteThumbsUpAckImage");
  v19 = -[CKUIBehavior whiteThumbsDownAckImage](self, "whiteThumbsDownAckImage");
  v20 = -[CKUIBehavior whiteExclamationRightAckImage](self, "whiteExclamationRightAckImage");
  v21 = -[CKUIBehavior whiteExclamationLeftAckImage](self, "whiteExclamationLeftAckImage");
  v22 = -[CKUIBehavior whiteQuestionMarkGlyphAckImage](self, "whiteQuestionMarkGlyphAckImage");
  v23 = -[CKUIBehavior whiteQuestionMarkDotAckImage](self, "whiteQuestionMarkDotAckImage");
  v24 = -[CKUIBehavior whiteHaAckImage](self, "whiteHaAckImage");
  v25 = -[CKUIBehavior whiteH1AckImage](self, "whiteH1AckImage");
  v26 = -[CKUIBehavior whiteH2AckImage](self, "whiteH2AckImage");
  v27 = -[CKUIBehavior whiteH2AckImage](self, "whiteH2AckImage");
  v28 = -[CKUIBehavior whiteA1AckImage](self, "whiteA1AckImage");
  v29 = -[CKUIBehavior whiteA2AckImage](self, "whiteA2AckImage");
}

- (UIImage)grayHeartAckImage
{
  if (grayHeartAckImage_once != -1)
    dispatch_once(&grayHeartAckImage_once, &__block_literal_global_1015);
  return (UIImage *)(id)grayHeartAckImage_sBehavior;
}

void __33__CKUIBehavior_grayHeartAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-Heart"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayHeartAckImage_sBehavior;
  grayHeartAckImage_sBehavior = v3;

}

- (UIImage)whiteHeartAckImage
{
  if (whiteHeartAckImage_once != -1)
    dispatch_once(&whiteHeartAckImage_once, &__block_literal_global_1018);
  return (UIImage *)(id)whiteHeartAckImage_sBehavior;
}

void __34__CKUIBehavior_whiteHeartAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentWhiteColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-Heart"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)whiteHeartAckImage_sBehavior;
  whiteHeartAckImage_sBehavior = v3;

}

- (UIImage)grayThumbsUpAckImage
{
  if (grayThumbsUpAckImage_once != -1)
    dispatch_once(&grayThumbsUpAckImage_once, &__block_literal_global_1019);
  return (UIImage *)(id)grayThumbsUpAckImage_sBehavior;
}

void __36__CKUIBehavior_grayThumbsUpAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-ThumbsUp"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayThumbsUpAckImage_sBehavior;
  grayThumbsUpAckImage_sBehavior = v3;

}

- (UIImage)grayThumbsDownAckImage
{
  if (grayThumbsDownAckImage_once != -1)
    dispatch_once(&grayThumbsDownAckImage_once, &__block_literal_global_1022_0);
  return (UIImage *)(id)grayThumbsDownAckImage_sBehavior;
}

void __38__CKUIBehavior_grayThumbsDownAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-ThumbsDown"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayThumbsDownAckImage_sBehavior;
  grayThumbsDownAckImage_sBehavior = v3;

}

- (UIImage)grayExclamationLeftAckImage
{
  if (grayExclamationLeftAckImage_once != -1)
    dispatch_once(&grayExclamationLeftAckImage_once, &__block_literal_global_1025);
  return (UIImage *)(id)grayExclamationLeftAckImage_sBehavior;
}

void __43__CKUIBehavior_grayExclamationLeftAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-Left-Exclamation"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayExclamationLeftAckImage_sBehavior;
  grayExclamationLeftAckImage_sBehavior = v3;

}

- (UIImage)grayExclamationRightAckImage
{
  if (grayExclamationRightAckImage_once != -1)
    dispatch_once(&grayExclamationRightAckImage_once, &__block_literal_global_1028_0);
  return (UIImage *)(id)grayExclamationRightAckImage_sBehavior;
}

void __44__CKUIBehavior_grayExclamationRightAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-Right-Exclamation"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayExclamationRightAckImage_sBehavior;
  grayExclamationRightAckImage_sBehavior = v3;

}

- (UIImage)grayQuestionMarkGlyphAckImage
{
  if (grayQuestionMarkGlyphAckImage_once != -1)
    dispatch_once(&grayQuestionMarkGlyphAckImage_once, &__block_literal_global_1031_0);
  return (UIImage *)(id)grayQuestionMarkGlyphAckImage_sBehavior;
}

void __45__CKUIBehavior_grayQuestionMarkGlyphAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-QuestionMark-Glyph"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayQuestionMarkGlyphAckImage_sBehavior;
  grayQuestionMarkGlyphAckImage_sBehavior = v3;

}

- (UIImage)grayQuestionMarkDotAckImage
{
  if (grayQuestionMarkDotAckImage_once != -1)
    dispatch_once(&grayQuestionMarkDotAckImage_once, &__block_literal_global_1034_0);
  return (UIImage *)(id)grayQuestionMarkDotAckImage_sBehavior;
}

void __43__CKUIBehavior_grayQuestionMarkDotAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "theme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "messageAcknowledgmentGrayColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(CFSTR("Acknowledgments-Menu-QuestionMark-Dot"), v2);
  v3 = objc_claimAutoreleasedReturnValue();

  v4 = (void *)grayQuestionMarkDotAckImage_sBehavior;
  grayQuestionMarkDotAckImage_sBehavior = v3;

}

- (UIImage)grayHaAckImage
{
  if (grayHaAckImage_once != -1)
    dispatch_once(&grayHaAckImage_once, &__block_literal_global_1037);
  return (UIImage *)(id)grayHaAckImage_sBehavior;
}

void __30__CKUIBehavior_grayHaAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v0 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("%@-%@"), CFSTR("Acknowledgments-Menu-HAHA"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "theme");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "messageAcknowledgmentGrayColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(v3, v6);
  v7 = objc_claimAutoreleasedReturnValue();

  v8 = (void *)grayHaAckImage_sBehavior;
  grayHaAckImage_sBehavior = v7;

}

- (UIImage)grayH1AckImage
{
  if (grayH1AckImage_once != -1)
    dispatch_once(&grayH1AckImage_once, &__block_literal_global_1046);
  return (UIImage *)(id)grayH1AckImage_sBehavior;
}

void __30__CKUIBehavior_grayH1AckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v0 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("%@-%@-1"), CFSTR("Acknowledgments-Menu-HAHA"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "theme");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "messageAcknowledgmentGrayColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(v3, v6);
  v7 = objc_claimAutoreleasedReturnValue();

  v8 = (void *)grayH1AckImage_sBehavior;
  grayH1AckImage_sBehavior = v7;

}

- (UIImage)grayA1AckImage
{
  if (grayA1AckImage_once != -1)
    dispatch_once(&grayA1AckImage_once, &__block_literal_global_1049);
  return (UIImage *)(id)grayA1AckImage_sBehavior;
}

void __30__CKUIBehavior_grayA1AckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v0 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("%@-%@-2"), CFSTR("Acknowledgments-Menu-HAHA"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "theme");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "messageAcknowledgmentGrayColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(v3, v6);
  v7 = objc_claimAutoreleasedReturnValue();

  v8 = (void *)grayA1AckImage_sBehavior;
  grayA1AckImage_sBehavior = v7;

}

- (UIImage)grayH2AckImage
{
  if (grayH2AckImage_once != -1)
    dispatch_once(&grayH2AckImage_once, &__block_literal_global_1052);
  return (UIImage *)(id)grayH2AckImage_sBehavior;
}

void __30__CKUIBehavior_grayH2AckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v0 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("%@-%@-3"), CFSTR("Acknowledgments-Menu-HAHA"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "theme");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "messageAcknowledgmentGrayColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(v3, v6);
  v7 = objc_claimAutoreleasedReturnValue();

  v8 = (void *)grayH2AckImage_sBehavior;
  grayH2AckImage_sBehavior = v7;

}

- (UIImage)grayA2AckImage
{
  if (grayA2AckImage_once != -1)
    dispatch_once(&grayA2AckImage_once, &__block_literal_global_1055);
  return (UIImage *)(id)grayA2AckImage_sBehavior;
}

void __30__CKUIBehavior_grayA2AckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v0 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("%@-%@-4"), CFSTR("Acknowledgments-Menu-HAHA"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "theme");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "messageAcknowledgmentGrayColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKImageNamedWithDynamicTintColor(v3, v6);
  v7 = objc_claimAutoreleasedReturnValue();

  v8 = (void *)grayA2AckImage_sBehavior;
  grayA2AckImage_sBehavior = v7;

}

- (UIImage)redHeartAckImage
{
  if (redHeartAckImage_once != -1)
    dispatch_once(&redHeartAckImage_once, &__block_literal_global_1058);
  return (UIImage *)(id)redHeartAckImage_sBehavior;
}

void __32__CKUIBehavior_redHeartAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-Heart"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "theme");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "messageAcknowledgmentRedColor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v3);
  v4 = objc_claimAutoreleasedReturnValue();

  v5 = (void *)redHeartAckImage_sBehavior;
  redHeartAckImage_sBehavior = v4;

}

- (UIImage)whiteThumbsUpAckImage
{
  if (whiteThumbsUpAckImage_once != -1)
    dispatch_once(&whiteThumbsUpAckImage_once, &__block_literal_global_1059);
  return (UIImage *)(id)whiteThumbsUpAckImage_sBehavior;
}

void __37__CKUIBehavior_whiteThumbsUpAckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-ThumbsUp"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteThumbsUpAckImage_sBehavior;
  whiteThumbsUpAckImage_sBehavior = v2;

}

- (UIImage)whiteThumbsDownAckImage
{
  if (whiteThumbsDownAckImage_once != -1)
    dispatch_once(&whiteThumbsDownAckImage_once, &__block_literal_global_1060);
  return (UIImage *)(id)whiteThumbsDownAckImage_sBehavior;
}

void __39__CKUIBehavior_whiteThumbsDownAckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-ThumbsDown"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteThumbsDownAckImage_sBehavior;
  whiteThumbsDownAckImage_sBehavior = v2;

}

- (UIImage)whiteExclamationRightAckImage
{
  if (whiteExclamationRightAckImage_once != -1)
    dispatch_once(&whiteExclamationRightAckImage_once, &__block_literal_global_1061);
  return (UIImage *)(id)whiteExclamationRightAckImage_sBehavior;
}

void __45__CKUIBehavior_whiteExclamationRightAckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-Right-Exclamation"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteExclamationRightAckImage_sBehavior;
  whiteExclamationRightAckImage_sBehavior = v2;

}

- (UIImage)whiteExclamationLeftAckImage
{
  if (whiteExclamationLeftAckImage_once != -1)
    dispatch_once(&whiteExclamationLeftAckImage_once, &__block_literal_global_1062);
  return (UIImage *)(id)whiteExclamationLeftAckImage_sBehavior;
}

void __44__CKUIBehavior_whiteExclamationLeftAckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-Left-Exclamation"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteExclamationLeftAckImage_sBehavior;
  whiteExclamationLeftAckImage_sBehavior = v2;

}

- (UIImage)whiteQuestionMarkGlyphAckImage
{
  if (whiteQuestionMarkGlyphAckImage_once != -1)
    dispatch_once(&whiteQuestionMarkGlyphAckImage_once, &__block_literal_global_1063);
  return (UIImage *)(id)whiteQuestionMarkGlyphAckImage_sBehavior;
}

void __46__CKUIBehavior_whiteQuestionMarkGlyphAckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-QuestionMark-Glyph"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteQuestionMarkGlyphAckImage_sBehavior;
  whiteQuestionMarkGlyphAckImage_sBehavior = v2;

}

- (UIImage)whiteQuestionMarkDotAckImage
{
  if (whiteQuestionMarkDotAckImage_once != -1)
    dispatch_once(&whiteQuestionMarkDotAckImage_once, &__block_literal_global_1064_0);
  return (UIImage *)(id)whiteQuestionMarkDotAckImage_sBehavior;
}

void __44__CKUIBehavior_whiteQuestionMarkDotAckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-QuestionMark-Dot"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteQuestionMarkDotAckImage_sBehavior;
  whiteQuestionMarkDotAckImage_sBehavior = v2;

}

- (UIImage)whiteHaAckImage
{
  if (whiteHaAckImage_once != -1)
    dispatch_once(&whiteHaAckImage_once, &__block_literal_global_1065);
  return (UIImage *)(id)whiteHaAckImage_sBehavior;
}

void __31__CKUIBehavior_whiteHaAckImage__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v0 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("%@-%@"), CFSTR("Acknowledgments-Menu-HAHA"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_flatImageWithColor:", v5);
  v6 = objc_claimAutoreleasedReturnValue();

  v7 = (void *)whiteHaAckImage_sBehavior;
  whiteHaAckImage_sBehavior = v6;

}

- (UIImage)whiteH1AckImage
{
  if (whiteH1AckImage_once != -1)
    dispatch_once(&whiteH1AckImage_once, &__block_literal_global_1066);
  return (UIImage *)(id)whiteH1AckImage_sBehavior;
}

void __31__CKUIBehavior_whiteH1AckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-HAHA-ENG-1"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteH1AckImage_sBehavior;
  whiteH1AckImage_sBehavior = v2;

}

- (UIImage)whiteH2AckImage
{
  if (whiteH2AckImage_once != -1)
    dispatch_once(&whiteH2AckImage_once, &__block_literal_global_1069);
  return (UIImage *)(id)whiteH2AckImage_sBehavior;
}

void __31__CKUIBehavior_whiteH2AckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-HAHA-ENG-2"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteH2AckImage_sBehavior;
  whiteH2AckImage_sBehavior = v2;

}

- (UIImage)whiteA1AckImage
{
  if (whiteA1AckImage_once != -1)
    dispatch_once(&whiteA1AckImage_once, &__block_literal_global_1072);
  return (UIImage *)(id)whiteA1AckImage_sBehavior;
}

void __31__CKUIBehavior_whiteA1AckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-HAHA-ENG-3"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteA1AckImage_sBehavior;
  whiteA1AckImage_sBehavior = v2;

}

- (UIImage)whiteA2AckImage
{
  if (whiteA2AckImage_once != -1)
    dispatch_once(&whiteA2AckImage_once, &__block_literal_global_1075);
  return (UIImage *)(id)whiteA2AckImage_sBehavior;
}

void __31__CKUIBehavior_whiteA2AckImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA638], "ckImageNamed:", CFSTR("Acknowledgments-Menu-HAHA-ENG-4"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_flatImageWithColor:", v1);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)whiteA2AckImage_sBehavior;
  whiteA2AckImage_sBehavior = v2;

}

- (UIImage)businessVerifiedImageLarge
{
  if (businessVerifiedImageLarge_once != -1)
    dispatch_once(&businessVerifiedImageLarge_once, &__block_literal_global_1078);
  return (UIImage *)(id)businessVerifiedImageLarge_sBehavior;
}

void __42__CKUIBehavior_businessVerifiedImageLarge__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithTextStyle:scale:", *MEMORY[0x1E0CEB588], 3);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("checkmark.seal.fill"), v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "imageWithRenderingMode:", 2);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)businessVerifiedImageLarge_sBehavior;
  businessVerifiedImageLarge_sBehavior = v2;

}

- (UIImage)businessVerifiedImageSmall
{
  if (businessVerifiedImageSmall_once != -1)
    dispatch_once(&businessVerifiedImageSmall_once, &__block_literal_global_1081);
  return (UIImage *)(id)businessVerifiedImageSmall_sBehavior;
}

void __42__CKUIBehavior_businessVerifiedImageSmall__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithTextStyle:scale:", *MEMORY[0x1E0CEB588], 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("checkmark.seal.fill"), v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "imageWithRenderingMode:", 2);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)businessVerifiedImageSmall_sBehavior;
  businessVerifiedImageSmall_sBehavior = v2;

}

- (UIImage)businessFallbackImage
{
  if (businessFallbackImage_once != -1)
    dispatch_once(&businessFallbackImage_once, &__block_literal_global_1082);
  return (UIImage *)(id)businessFallbackImage_sBehavior;
}

void __37__CKUIBehavior_businessFallbackImage__block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0CEA638];
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithIdentifier:", CFSTR("com.apple.Contacts.ContactsUICore"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "imageNamed:inBundle:compatibleWithTraitCollection:", CFSTR("company-silhouette-S"), v1, 0);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)businessFallbackImage_sBehavior;
  businessFallbackImage_sBehavior = v2;

}

- (UIImage)navBarHeaderChevronImageNoAvatar
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = (void *)MEMORY[0x1E0CEA650];
  -[CKUIBehavior noAvatarTitleFont](self, "noAvatarTitleFont");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "configurationWithFont:scale:", v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0CEA478], "tertiaryLabelColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "configurationWithHierarchicalColor:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "configurationByApplyingConfiguration:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("chevron.forward"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "imageWithSymbolConfiguration:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIImage *)v10;
}

- (UIImage)navBarHeaderOpaqueChevronImageNoAvatar
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = (void *)MEMORY[0x1E0CEA650];
  -[CKUIBehavior noAvatarTitleFont](self, "noAvatarTitleFont");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "configurationWithFont:scale:", v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("chevron.forward"), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "imageWithRenderingMode:", 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIImage *)v6;
}

- (id)navBarHeaderChevronImageDefault
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = (void *)MEMORY[0x1E0CEA650];
  -[CKUIBehavior avatarStackTitleFont](self, "avatarStackTitleFont");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "configurationWithFont:scale:", v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(MEMORY[0x1E0CEA478], "tertiaryLabelColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "configurationWithHierarchicalColor:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "configurationByApplyingConfiguration:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("chevron.forward"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "imageWithSymbolConfiguration:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "imageWithBaselineOffsetFromBottom:", 1.0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

- (id)navBarHeaderOpaqueChevronImageDefault
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v2 = (void *)MEMORY[0x1E0CEA650];
  -[CKUIBehavior avatarStackTitleFont](self, "avatarStackTitleFont");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "configurationWithFont:scale:", v3, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("chevron.forward"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "imageWithSymbolConfiguration:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "imageWithBaselineOffsetFromBottom:", 1.0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "imageWithRenderingMode:", 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (UIImage)navBarHeaderChevronImage
{
  if (-[CKUIBehavior contactPhotosEnabled](self, "contactPhotosEnabled"))
    -[CKUIBehavior navBarHeaderChevronImageDefault](self, "navBarHeaderChevronImageDefault");
  else
    -[CKUIBehavior navBarHeaderChevronImageNoAvatar](self, "navBarHeaderChevronImageNoAvatar");
  return (UIImage *)(id)objc_claimAutoreleasedReturnValue();
}

- (UIImage)navBarHeaderOpaqueChevronImage
{
  if (-[CKUIBehavior contactPhotosEnabled](self, "contactPhotosEnabled"))
    -[CKUIBehavior navBarHeaderOpaqueChevronImageDefault](self, "navBarHeaderOpaqueChevronImageDefault");
  else
    -[CKUIBehavior navBarHeaderOpaqueChevronImageNoAvatar](self, "navBarHeaderOpaqueChevronImageNoAvatar");
  return (UIImage *)(id)objc_claimAutoreleasedReturnValue();
}

- (UIImage)navBarHeaderVideoImage
{
  if (navBarHeaderVideoImage_once != -1)
    dispatch_once(&navBarHeaderVideoImage_once, &__block_literal_global_1088);
  return (UIImage *)(id)navBarHeaderVideoImage_sBehavior;
}

void __38__CKUIBehavior_navBarHeaderVideoImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("video.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)navBarHeaderVideoImage_sBehavior;
  navBarHeaderVideoImage_sBehavior = v0;

}

- (UIImage)navBarHeaderAudioImage
{
  if (navBarHeaderAudioImage_once != -1)
    dispatch_once(&navBarHeaderAudioImage_once, &__block_literal_global_1089);
  return (UIImage *)(id)navBarHeaderAudioImage_sBehavior;
}

void __38__CKUIBehavior_navBarHeaderAudioImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("phone.fill"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)navBarHeaderAudioImage_sBehavior;
  navBarHeaderAudioImage_sBehavior = v0;

}

- (UIImage)navBarHeaderExpanseImage
{
  if (navBarHeaderExpanseImage_once != -1)
    dispatch_once(&navBarHeaderExpanseImage_once, &__block_literal_global_1090);
  return (UIImage *)(id)navBarHeaderExpanseImage_sBehavior;
}

void __40__CKUIBehavior_navBarHeaderExpanseImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("shareplay"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)navBarHeaderExpanseImage_sBehavior;
  navBarHeaderExpanseImage_sBehavior = v0;

}

- (id)navBarGlyphFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  id v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)navBarGlyphFont_sContentSizeCategory_navBarGlyphFont, (UIContentSizeCategory)v2)|| navBarGlyphFont_sIsIncreaseContrastEnabled_navBarGlyphFont != v3|| navBarGlyphFont_sIsBoldTextEnabled_navBarGlyphFont != IsBoldTextEnabled|| *(double *)&navBarGlyphFont_sTextFontSize_navBarGlyphFont != v5|| *(double *)&navBarGlyphFont_sCustomTextFontSize_navBarGlyphFont != v6|| (objc_msgSend((id)navBarGlyphFont_sCustomTextFontName_navBarGlyphFont, "isEqualToString:", v9, *(double *)&navBarGlyphFont_sCustomTextFontSize_navBarGlyphFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 17.0);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)navBarGlyphFont_sBehavior;
    navBarGlyphFont_sBehavior = v10;

    objc_storeStrong((id *)&navBarGlyphFont_sContentSizeCategory_navBarGlyphFont, v2);
    navBarGlyphFont_sIsIncreaseContrastEnabled_navBarGlyphFont = v3;
    navBarGlyphFont_sIsBoldTextEnabled_navBarGlyphFont = IsBoldTextEnabled;
    navBarGlyphFont_sTextFontSize_navBarGlyphFont = *(_QWORD *)&v5;
    navBarGlyphFont_sCustomTextFontSize_navBarGlyphFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&navBarGlyphFont_sCustomTextFontName_navBarGlyphFont, v8);
  }
  v12 = (id)navBarGlyphFont_sBehavior;

  return v12;
}

- (UIImage)navBarVideoImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __32__CKUIBehavior_navBarVideoImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (navBarVideoImage_once != -1)
    dispatch_once(&navBarVideoImage_once, block);
  return (UIImage *)(id)navBarVideoImage_sBehavior;
}

void __32__CKUIBehavior_navBarVideoImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(*(id *)(a1 + 32), "navBarGlyphFont");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "configurationWithFont:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("video"), v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "imageWithRenderingMode:", 2);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)navBarVideoImage_sBehavior;
  navBarVideoImage_sBehavior = v5;

}

- (UIImage)navBarVideoFillImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __36__CKUIBehavior_navBarVideoFillImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (navBarVideoFillImage_once != -1)
    dispatch_once(&navBarVideoFillImage_once, block);
  return (UIImage *)(id)navBarVideoFillImage_sBehavior;
}

void __36__CKUIBehavior_navBarVideoFillImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(*(id *)(a1 + 32), "navBarGlyphFont");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "configurationWithFont:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("video.fill"), v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "imageWithRenderingMode:", 2);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)navBarVideoFillImage_sBehavior;
  navBarVideoFillImage_sBehavior = v5;

}

- (UIImage)navBarAudioImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __32__CKUIBehavior_navBarAudioImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (navBarAudioImage_once != -1)
    dispatch_once(&navBarAudioImage_once, block);
  return (UIImage *)(id)navBarAudioImage_sBehavior;
}

void __32__CKUIBehavior_navBarAudioImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(*(id *)(a1 + 32), "navBarGlyphFont");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "configurationWithFont:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("phone"), v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "imageWithRenderingMode:", 2);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)navBarAudioImage_sBehavior;
  navBarAudioImage_sBehavior = v5;

}

- (UIImage)navBarAudioFillImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __36__CKUIBehavior_navBarAudioFillImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (navBarAudioFillImage_once != -1)
    dispatch_once(&navBarAudioFillImage_once, block);
  return (UIImage *)(id)navBarAudioFillImage_sBehavior;
}

void __36__CKUIBehavior_navBarAudioFillImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(*(id *)(a1 + 32), "navBarGlyphFont");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "configurationWithFont:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("phone.fill"), v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "imageWithRenderingMode:", 2);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)navBarAudioFillImage_sBehavior;
  navBarAudioFillImage_sBehavior = v5;

}

- (UIImage)navBarSharePlayImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __36__CKUIBehavior_navBarSharePlayImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (navBarSharePlayImage_once != -1)
    dispatch_once(&navBarSharePlayImage_once, block);
  return (UIImage *)(id)navBarSharePlayImage_sBehavior;
}

void __36__CKUIBehavior_navBarSharePlayImage__block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)MEMORY[0x1E0CEA650];
  objc_msgSend(*(id *)(a1 + 32), "navBarGlyphFont");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "configurationWithFont:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:withConfiguration:", CFSTR("shareplay"), v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "imageWithRenderingMode:", 2);
  v5 = objc_claimAutoreleasedReturnValue();

  v6 = (void *)navBarSharePlayImage_sBehavior;
  navBarSharePlayImage_sBehavior = v5;

}

- (UIFont)navBarUnifiedCallButtonJoinTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)navBarUnifiedCallButtonJoinTextFont_sContentSizeCategory_navBarUnifiedCallButtonJoinTextFont, (UIContentSizeCategory)v2)|| navBarUnifiedCallButtonJoinTextFont_sIsIncreaseContrastEnabled_navBarUnifiedCallButtonJoinTextFont != v3|| navBarUnifiedCallButtonJoinTextFont_sIsBoldTextEnabled_navBarUnifiedCallButtonJoinTextFont != IsBoldTextEnabled|| (v10 = navBarUnifiedCallButtonJoinTextFont_sTextFontSize_navBarUnifiedCallButtonJoinTextFont, *(double *)&navBarUnifiedCallButtonJoinTextFont_sTextFontSize_navBarUnifiedCallButtonJoinTextFont != v5)|| (v10 = navBarUnifiedCallButtonJoinTextFont_sCustomTextFontSize_navBarUnifiedCallButtonJoinTextFont, *(double *)&navBarUnifiedCallButtonJoinTextFont_sCustomTextFontSize_navBarUnifiedCallButtonJoinTextFont != v6)|| (objc_msgSend((id)navBarUnifiedCallButtonJoinTextFont_sCustomTextFontName_navBarUnifiedCallButtonJoinTextFont, "isEqualToString:", v9, *(double *)&navBarUnifiedCallButtonJoinTextFont_sCustomTextFontSize_navBarUnifiedCallButtonJoinTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB590], 2, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)navBarUnifiedCallButtonJoinTextFont_sBehavior;
    navBarUnifiedCallButtonJoinTextFont_sBehavior = v12;

    objc_storeStrong((id *)&navBarUnifiedCallButtonJoinTextFont_sContentSizeCategory_navBarUnifiedCallButtonJoinTextFont, v2);
    navBarUnifiedCallButtonJoinTextFont_sIsIncreaseContrastEnabled_navBarUnifiedCallButtonJoinTextFont = v3;
    navBarUnifiedCallButtonJoinTextFont_sIsBoldTextEnabled_navBarUnifiedCallButtonJoinTextFont = IsBoldTextEnabled;
    navBarUnifiedCallButtonJoinTextFont_sTextFontSize_navBarUnifiedCallButtonJoinTextFont = *(_QWORD *)&v5;
    navBarUnifiedCallButtonJoinTextFont_sCustomTextFontSize_navBarUnifiedCallButtonJoinTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&navBarUnifiedCallButtonJoinTextFont_sCustomTextFontName_navBarUnifiedCallButtonJoinTextFont, v8);
  }
  v14 = (UIFont *)(id)navBarUnifiedCallButtonJoinTextFont_sBehavior;

  return v14;
}

- (BOOL)recipientSelectionCollapsedHeightIncludesNavigationBar
{
  if (recipientSelectionCollapsedHeightIncludesNavigationBar_once != -1)
    dispatch_once(&recipientSelectionCollapsedHeightIncludesNavigationBar_once, &__block_literal_global_1095);
  return 0;
}

- (BOOL)recipientSelectionViewRequiresMainScreenBounds
{
  if (recipientSelectionViewRequiresMainScreenBounds_once != -1)
    dispatch_once(&recipientSelectionViewRequiresMainScreenBounds_once, &__block_literal_global_1096);
  return recipientSelectionViewRequiresMainScreenBounds_sBehavior;
}

void __62__CKUIBehavior_recipientSelectionViewRequiresMainScreenBounds__block_invoke()
{
  recipientSelectionViewRequiresMainScreenBounds_sBehavior = 1;
}

- (BOOL)recipientSelectionSearchControllerRequiresFlexibleMargins
{
  if (recipientSelectionSearchControllerRequiresFlexibleMargins_once != -1)
    dispatch_once(&recipientSelectionSearchControllerRequiresFlexibleMargins_once, &__block_literal_global_1097_0);
  return 0;
}

- (BOOL)recipientSelectionSearchControllerHidesInfoButton
{
  if (recipientSelectionSearchControllerHidesInfoButton_once != -1)
    dispatch_once(&recipientSelectionSearchControllerHidesInfoButton_once, &__block_literal_global_1098);
  return 0;
}

- (BOOL)recipientSelectionShouldSlideToField
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __52__CKUIBehavior_recipientSelectionShouldSlideToField__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (recipientSelectionShouldSlideToField_once != -1)
    dispatch_once(&recipientSelectionShouldSlideToField_once, block);
  return recipientSelectionShouldSlideToField_sBehavior;
}

uint64_t __52__CKUIBehavior_recipientSelectionShouldSlideToField__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "canAccessContacts");
  recipientSelectionShouldSlideToField_sBehavior = result;
  return result;
}

- (UIEdgeInsets)additionalComposeRecipientLayoutMargins
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (additionalComposeRecipientLayoutMargins_once != -1)
    dispatch_once(&additionalComposeRecipientLayoutMargins_once, &__block_literal_global_1099);
  v3 = *((double *)&additionalComposeRecipientLayoutMargins_sBehavior + 1);
  v2 = *(double *)&additionalComposeRecipientLayoutMargins_sBehavior;
  v4 = *(double *)&qword_1EE1163A0;
  v5 = unk_1EE1163A8;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

__n128 __55__CKUIBehavior_additionalComposeRecipientLayoutMargins__block_invoke()
{
  __n128 result;
  __int128 v1;

  result = *(__n128 *)MEMORY[0x1E0CEB4B0];
  v1 = *(_OWORD *)(MEMORY[0x1E0CEB4B0] + 16);
  additionalComposeRecipientLayoutMargins_sBehavior = *MEMORY[0x1E0CEB4B0];
  *(_OWORD *)&qword_1EE1163A0 = v1;
  return result;
}

- (double)recipientSelectionBackgroundPlatterCornerRadius
{
  if (recipientSelectionBackgroundPlatterCornerRadius_once != -1)
    dispatch_once(&recipientSelectionBackgroundPlatterCornerRadius_once, &__block_literal_global_1100);
  return *(double *)&recipientSelectionBackgroundPlatterCornerRadius_sBehavior;
}

void __63__CKUIBehavior_recipientSelectionBackgroundPlatterCornerRadius__block_invoke()
{
  recipientSelectionBackgroundPlatterCornerRadius_sBehavior = 0x4024000000000000;
}

- (double)recipientSelectionBackgroundPlatterVerticalInset
{
  if (recipientSelectionBackgroundPlatterVerticalInset_once != -1)
    dispatch_once(&recipientSelectionBackgroundPlatterVerticalInset_once, &__block_literal_global_1101);
  return *(double *)&recipientSelectionBackgroundPlatterVerticalInset_sBehavior;
}

void __64__CKUIBehavior_recipientSelectionBackgroundPlatterVerticalInset__block_invoke()
{
  recipientSelectionBackgroundPlatterVerticalInset_sBehavior = 0x4010000000000000;
}

- (double)defaultToolbarHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __36__CKUIBehavior_defaultToolbarHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (defaultToolbarHeight_once != -1)
    dispatch_once(&defaultToolbarHeight_once, block);
  return *(double *)&defaultToolbarHeight_sBehavior;
}

uint64_t __36__CKUIBehavior_defaultToolbarHeight__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "macAppKitToolbarHeight");
  defaultToolbarHeight_sBehavior = v2;
  return result;
}

- (CGSize)businessBannerSize
{
  double v2;
  double v3;
  CGSize result;

  if (businessBannerSize_once != -1)
    dispatch_once(&businessBannerSize_once, &__block_literal_global_1102);
  v2 = *(double *)&businessBannerSize_sBehavior_0;
  v3 = *(double *)&businessBannerSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __34__CKUIBehavior_businessBannerSize__block_invoke()
{
  businessBannerSize_sBehavior_0 = 0x4066800000000000;
  businessBannerSize_sBehavior_1 = 0x403B000000000000;
}

- (double)businessSquareToolbarLogoHeight
{
  if (businessSquareToolbarLogoHeight_once != -1)
    dispatch_once(&businessSquareToolbarLogoHeight_once, &__block_literal_global_1103);
  return *(double *)&businessSquareToolbarLogoHeight_sBehavior;
}

void __47__CKUIBehavior_businessSquareToolbarLogoHeight__block_invoke()
{
  businessSquareToolbarLogoHeight_sBehavior = 0x4041800000000000;
}

- (unint64_t)messageAcknowledgmentVotingStackSize
{
  if (messageAcknowledgmentVotingStackSize_once != -1)
    dispatch_once(&messageAcknowledgmentVotingStackSize_once, &__block_literal_global_1104);
  if (messageAcknowledgmentVotingStackSize_sBehavior)
    return 4;
  else
    return 0;
}

void __52__CKUIBehavior_messageAcknowledgmentVotingStackSize__block_invoke()
{
  messageAcknowledgmentVotingStackSize_sBehavior = 1;
}

- (Class)acknowledgementPickerBarClass
{
  if (acknowledgementPickerBarClass_once != -1)
    dispatch_once(&acknowledgementPickerBarClass_once, &__block_literal_global_1105);
  return (Class)(id)acknowledgementPickerBarClass_sBehavior;
}

uint64_t __45__CKUIBehavior_acknowledgementPickerBarClass__block_invoke()
{
  uint64_t result;

  result = objc_opt_class();
  acknowledgementPickerBarClass_sBehavior = result;
  return result;
}

- (id)fullscreenPickerActionLayoutAxisPrioritiesForWidth:(double)a3
{
  return &unk_1E286F5B0;
}

- (BOOL)longPressHidesAssociatedAcknowledgments
{
  if (longPressHidesAssociatedAcknowledgments_once != -1)
    dispatch_once(&longPressHidesAssociatedAcknowledgments_once, &__block_literal_global_1110);
  return 0;
}

- (BOOL)canTapAssociatedAcknowledgment
{
  if (canTapAssociatedAcknowledgment_once != -1)
    dispatch_once(&canTapAssociatedAcknowledgment_once, &__block_literal_global_1111_0);
  return canTapAssociatedAcknowledgment_sBehavior;
}

void __46__CKUIBehavior_canTapAssociatedAcknowledgment__block_invoke()
{
  canTapAssociatedAcknowledgment_sBehavior = 1;
}

- (unint64_t)suggestedAcknowledgementCount
{
  if (suggestedAcknowledgementCount_once != -1)
    dispatch_once(&suggestedAcknowledgementCount_once, &__block_literal_global_1112_0);
  if (suggestedAcknowledgementCount_sBehavior)
    return 6;
  else
    return 0;
}

void __45__CKUIBehavior_suggestedAcknowledgementCount__block_invoke()
{
  suggestedAcknowledgementCount_sBehavior = 1;
}

- (CGSize)messageAcknowledgmentTranscriptBalloonSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentTranscriptBalloonSize_once != -1)
    dispatch_once(&messageAcknowledgmentTranscriptBalloonSize_once, &__block_literal_global_1113);
  v2 = *(double *)&messageAcknowledgmentTranscriptBalloonSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentTranscriptBalloonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __58__CKUIBehavior_messageAcknowledgmentTranscriptBalloonSize__block_invoke()
{
  messageAcknowledgmentTranscriptBalloonSize_sBehavior_0 = 0x4042000000000000;
  messageAcknowledgmentTranscriptBalloonSize_sBehavior_1 = 0x4042000000000000;
}

- (UIEdgeInsets)messageAcknowledgmentTranscriptGlyphInset
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (messageAcknowledgmentTranscriptGlyphInset_once != -1)
    dispatch_once(&messageAcknowledgmentTranscriptGlyphInset_once, &__block_literal_global_1114);
  v2 = *(double *)&messageAcknowledgmentTranscriptGlyphInset_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentTranscriptGlyphInset_sBehavior_1;
  v4 = *(double *)&messageAcknowledgmentTranscriptGlyphInset_sBehavior_2;
  v5 = *(double *)&messageAcknowledgmentTranscriptGlyphInset_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __57__CKUIBehavior_messageAcknowledgmentTranscriptGlyphInset__block_invoke()
{
  messageAcknowledgmentTranscriptGlyphInset_sBehavior_0 = 0x4010000000000000;
  messageAcknowledgmentTranscriptGlyphInset_sBehavior_1 = 0x4010000000000000;
  messageAcknowledgmentTranscriptGlyphInset_sBehavior_2 = 0x4010000000000000;
  messageAcknowledgmentTranscriptGlyphInset_sBehavior_3 = 0x4010000000000000;
}

- (CGPoint)messageAcknowledgmentTranscriptBalloonRelativePosition
{
  double v2;
  double v3;
  CGPoint result;

  if (messageAcknowledgmentTranscriptBalloonRelativePosition_once != -1)
    dispatch_once(&messageAcknowledgmentTranscriptBalloonRelativePosition_once, &__block_literal_global_1115);
  v2 = *(double *)&messageAcknowledgmentTranscriptBalloonRelativePosition_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentTranscriptBalloonRelativePosition_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __70__CKUIBehavior_messageAcknowledgmentTranscriptBalloonRelativePosition__block_invoke()
{
  double v0;
  double v1;
  double v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isEmojiTapbacksEnabled"))
  {
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v0 = 1.0;
    v1 = round(v0 * 12.5) / v0;
    v2 = -15.5;
  }
  else
  {
    if (CKMainScreenScale_once_41 != -1)
      dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
    v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
      v0 = 1.0;
    v1 = round(v0 * 12.5) / v0;
    v2 = -17.5;
  }
  messageAcknowledgmentTranscriptBalloonRelativePosition_sBehavior_0 = *(_QWORD *)&v1;
  *(double *)&messageAcknowledgmentTranscriptBalloonRelativePosition_sBehavior_1 = round(v0 * v2) / v0;

}

- (CGPoint)messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset
{
  double v2;
  double v3;
  CGPoint result;

  if (messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset_once != -1)
    dispatch_once(&messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset_once, &__block_literal_global_1116_0);
  v2 = *(double *)&messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __77__CKUIBehavior_messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset__block_invoke()
{
  messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset_sBehavior_0 = 0x4008000000000000;
  messageAcknowledgmentTranscriptOrganicBalloonAdditionalOffset_sBehavior_1 = 0xC020000000000000;
}

- (double)messageAcknowledgmentPhotoCarouselXOffsetScalar
{
  if (messageAcknowledgmentPhotoCarouselXOffsetScalar_once != -1)
    dispatch_once(&messageAcknowledgmentPhotoCarouselXOffsetScalar_once, &__block_literal_global_1117);
  return *(double *)&messageAcknowledgmentPhotoCarouselXOffsetScalar_sBehavior;
}

void __63__CKUIBehavior_messageAcknowledgmentPhotoCarouselXOffsetScalar__block_invoke()
{
  messageAcknowledgmentPhotoCarouselXOffsetScalar_sBehavior = 0x3FC99999A0000000;
}

- (double)messageAcknowledgmentPhotoGridXOffsetScalar
{
  if (messageAcknowledgmentPhotoGridXOffsetScalar_once != -1)
    dispatch_once(&messageAcknowledgmentPhotoGridXOffsetScalar_once, &__block_literal_global_1118);
  return 0.0;
}

- (double)messageAcknowledgmentPhotoGridYOffsetScalar
{
  if (messageAcknowledgmentPhotoGridYOffsetScalar_once != -1)
    dispatch_once(&messageAcknowledgmentPhotoGridYOffsetScalar_once, &__block_literal_global_1119);
  return *(double *)&messageAcknowledgmentPhotoGridYOffsetScalar_sBehavior;
}

void __59__CKUIBehavior_messageAcknowledgmentPhotoGridYOffsetScalar__block_invoke()
{
  messageAcknowledgmentPhotoGridYOffsetScalar_sBehavior = 0x3FC99999A0000000;
}

- (CGSize)messageAcknowledgmentPickerBarSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentPickerBarSize_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarSize_once, &__block_literal_global_1120_0);
  v2 = *(double *)&messageAcknowledgmentPickerBarSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentPickerBarSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __50__CKUIBehavior_messageAcknowledgmentPickerBarSize__block_invoke()
{
  messageAcknowledgmentPickerBarSize_sBehavior_0 = 0x4073600000000000;
  messageAcknowledgmentPickerBarSize_sBehavior_1 = 0x4052800000000000;
}

- (CGSize)messageAcknowledgmentPickerBarAcknowledgmentImageSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentPickerBarAcknowledgmentImageSize_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarAcknowledgmentImageSize_once, &__block_literal_global_1121);
  v2 = *(double *)&messageAcknowledgmentPickerBarAcknowledgmentImageSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentPickerBarAcknowledgmentImageSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __69__CKUIBehavior_messageAcknowledgmentPickerBarAcknowledgmentImageSize__block_invoke()
{
  messageAcknowledgmentPickerBarAcknowledgmentImageSize_sBehavior_0 = 0x4042000000000000;
  messageAcknowledgmentPickerBarAcknowledgmentImageSize_sBehavior_1 = 0x4042000000000000;
}

- (CGSize)messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize_once, &__block_literal_global_1122_0);
  v2 = *(double *)&messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __75__CKUIBehavior_messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize__block_invoke()
{
  messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize_sBehavior_0 = 0x4045000000000000;
  messageAcknowledgmentPickerBarAcknowledgmentItemBalloonSize_sBehavior_1 = 0x4045000000000000;
}

- (CGSize)messageAcknowledgmentPickerBarOffsetFromBalloon
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentPickerBarOffsetFromBalloon_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarOffsetFromBalloon_once, &__block_literal_global_1123);
  v2 = *(double *)&messageAcknowledgmentPickerBarOffsetFromBalloon_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentPickerBarOffsetFromBalloon_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __63__CKUIBehavior_messageAcknowledgmentPickerBarOffsetFromBalloon__block_invoke()
{
  messageAcknowledgmentPickerBarOffsetFromBalloon_sBehavior_0 = 0x403E000000000000;
  messageAcknowledgmentPickerBarOffsetFromBalloon_sBehavior_1 = 0x4028000000000000;
}

- (double)messageAcknowledgmentPickerBarPadding
{
  if (messageAcknowledgmentPickerBarPadding_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarPadding_once, &__block_literal_global_1124);
  return *(double *)&messageAcknowledgmentPickerBarPadding_sBehavior;
}

void __53__CKUIBehavior_messageAcknowledgmentPickerBarPadding__block_invoke()
{
  messageAcknowledgmentPickerBarPadding_sBehavior = 0x4014000000000000;
}

- (double)messageAcknowledgmentPickerBarArrowPadding
{
  if (messageAcknowledgmentPickerBarArrowPadding_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarArrowPadding_once, &__block_literal_global_1125);
  return *(double *)&messageAcknowledgmentPickerBarArrowPadding_sBehavior;
}

void __58__CKUIBehavior_messageAcknowledgmentPickerBarArrowPadding__block_invoke()
{
  messageAcknowledgmentPickerBarArrowPadding_sBehavior = 0x4020000000000000;
}

- (double)messageAcknowledgmentPickerBarArrowWidth
{
  if (messageAcknowledgmentPickerBarArrowWidth_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarArrowWidth_once, &__block_literal_global_1126);
  return *(double *)&messageAcknowledgmentPickerBarArrowWidth_sBehavior;
}

void __56__CKUIBehavior_messageAcknowledgmentPickerBarArrowWidth__block_invoke()
{
  messageAcknowledgmentPickerBarArrowWidth_sBehavior = 0x4038000000000000;
}

- (double)messageAcknowledgmentPickerBarItemSectionScaleFactor
{
  if (messageAcknowledgmentPickerBarItemSectionScaleFactor_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarItemSectionScaleFactor_once, &__block_literal_global_1127);
  return *(double *)&messageAcknowledgmentPickerBarItemSectionScaleFactor_sBehavior;
}

void __68__CKUIBehavior_messageAcknowledgmentPickerBarItemSectionScaleFactor__block_invoke()
{
  messageAcknowledgmentPickerBarItemSectionScaleFactor_sBehavior = 0x3FEB333333333333;
}

- (double)messageAcknowledgmentPickerBarItemSectionPush
{
  if (messageAcknowledgmentPickerBarItemSectionPush_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarItemSectionPush_once, &__block_literal_global_1128_0);
  return *(double *)&messageAcknowledgmentPickerBarItemSectionPush_sBehavior;
}

void __61__CKUIBehavior_messageAcknowledgmentPickerBarItemSectionPush__block_invoke()
{
  messageAcknowledgmentPickerBarItemSectionPush_sBehavior = 0x4020000000000000;
}

- (CGSize)aggregateAcknowledgmentTranscriptBalloonSize
{
  double v2;
  double v3;
  CGSize result;

  if (aggregateAcknowledgmentTranscriptBalloonSize_once != -1)
    dispatch_once(&aggregateAcknowledgmentTranscriptBalloonSize_once, &__block_literal_global_1129_0);
  v2 = *(double *)&aggregateAcknowledgmentTranscriptBalloonSize_sBehavior_0;
  v3 = *(double *)&aggregateAcknowledgmentTranscriptBalloonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __60__CKUIBehavior_aggregateAcknowledgmentTranscriptBalloonSize__block_invoke()
{
  aggregateAcknowledgmentTranscriptBalloonSize_sBehavior_0 = 0x4047000000000000;
  aggregateAcknowledgmentTranscriptBalloonSize_sBehavior_1 = 0x4044000000000000;
}

- (CGSize)messageAcknowledgmentVotingAvatarSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentVotingAvatarSize_once != -1)
    dispatch_once(&messageAcknowledgmentVotingAvatarSize_once, &__block_literal_global_1130_0);
  v2 = *(double *)&messageAcknowledgmentVotingAvatarSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentVotingAvatarSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_messageAcknowledgmentVotingAvatarSize__block_invoke()
{
  messageAcknowledgmentVotingAvatarSize_sBehavior_0 = 0x4044000000000000;
  messageAcknowledgmentVotingAvatarSize_sBehavior_1 = 0x4044000000000000;
}

- (UIFont)messageAcknowledgmentVoteCountFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)messageAcknowledgmentVoteCountFont_sContentSizeCategory_messageAcknowledgmentVoteCountFont, (UIContentSizeCategory)v2)|| messageAcknowledgmentVoteCountFont_sIsIncreaseContrastEnabled_messageAcknowledgmentVoteCountFont != v3|| messageAcknowledgmentVoteCountFont_sIsBoldTextEnabled_messageAcknowledgmentVoteCountFont != IsBoldTextEnabled|| (v10 = messageAcknowledgmentVoteCountFont_sTextFontSize_messageAcknowledgmentVoteCountFont, *(double *)&messageAcknowledgmentVoteCountFont_sTextFontSize_messageAcknowledgmentVoteCountFont != v5)|| (v10 = messageAcknowledgmentVoteCountFont_sCustomTextFontSize_messageAcknowledgmentVoteCountFont, *(double *)&messageAcknowledgmentVoteCountFont_sCustomTextFontSize_messageAcknowledgmentVoteCountFont != v6)|| (objc_msgSend((id)messageAcknowledgmentVoteCountFont_sCustomTextFontName_messageAcknowledgmentVoteCountFont, "isEqualToString:", v9, *(double *)&messageAcknowledgmentVoteCountFont_sCustomTextFontSize_messageAcknowledgmentVoteCountFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)messageAcknowledgmentVoteCountFont_sBehavior;
    messageAcknowledgmentVoteCountFont_sBehavior = v11;

    objc_storeStrong((id *)&messageAcknowledgmentVoteCountFont_sContentSizeCategory_messageAcknowledgmentVoteCountFont, v2);
    messageAcknowledgmentVoteCountFont_sIsIncreaseContrastEnabled_messageAcknowledgmentVoteCountFont = v3;
    messageAcknowledgmentVoteCountFont_sIsBoldTextEnabled_messageAcknowledgmentVoteCountFont = IsBoldTextEnabled;
    messageAcknowledgmentVoteCountFont_sTextFontSize_messageAcknowledgmentVoteCountFont = *(_QWORD *)&v5;
    messageAcknowledgmentVoteCountFont_sCustomTextFontSize_messageAcknowledgmentVoteCountFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&messageAcknowledgmentVoteCountFont_sCustomTextFontName_messageAcknowledgmentVoteCountFont, v8);
  }
  v13 = (UIFont *)(id)messageAcknowledgmentVoteCountFont_sBehavior;

  return v13;
}

- (double)messageAcknowledgementVotingViewHeight
{
  if (messageAcknowledgementVotingViewHeight_once != -1)
    dispatch_once(&messageAcknowledgementVotingViewHeight_once, &__block_literal_global_1131_1);
  return *(double *)&messageAcknowledgementVotingViewHeight_sBehavior;
}

void __54__CKUIBehavior_messageAcknowledgementVotingViewHeight__block_invoke()
{
  messageAcknowledgementVotingViewHeight_sBehavior = 0x4052000000000000;
}

- (double)messageAcknowledgementVotingViewMaxWidth
{
  if (messageAcknowledgementVotingViewMaxWidth_once != -1)
    dispatch_once(&messageAcknowledgementVotingViewMaxWidth_once, &__block_literal_global_1132_0);
  return *(double *)&messageAcknowledgementVotingViewMaxWidth_sBehavior;
}

void __56__CKUIBehavior_messageAcknowledgementVotingViewMaxWidth__block_invoke()
{
  messageAcknowledgementVotingViewMaxWidth_sBehavior = 0x4079000000000000;
}

- (double)messageAcknowledgementVotingViewMinPadding
{
  if (messageAcknowledgementVotingViewMinPadding_once != -1)
    dispatch_once(&messageAcknowledgementVotingViewMinPadding_once, &__block_literal_global_1133_0);
  return *(double *)&messageAcknowledgementVotingViewMinPadding_sBehavior;
}

void __58__CKUIBehavior_messageAcknowledgementVotingViewMinPadding__block_invoke()
{
  messageAcknowledgementVotingViewMinPadding_sBehavior = 0x4020000000000000;
}

- (CGSize)messageAcknowledgmentAnchorBubbleOffset
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentAnchorBubbleOffset_once != -1)
    dispatch_once(&messageAcknowledgmentAnchorBubbleOffset_once, &__block_literal_global_1134);
  v2 = *(double *)&messageAcknowledgmentAnchorBubbleOffset_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentAnchorBubbleOffset_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __55__CKUIBehavior_messageAcknowledgmentAnchorBubbleOffset__block_invoke()
{
  messageAcknowledgmentAnchorBubbleOffset_sBehavior_0 = 0x4020000000000000;
  messageAcknowledgmentAnchorBubbleOffset_sBehavior_1 = 0x4000000000000000;
}

- (double)messageAcknowledgmentPickerMinHorizontalMargin
{
  if (messageAcknowledgmentPickerMinHorizontalMargin_once != -1)
    dispatch_once(&messageAcknowledgmentPickerMinHorizontalMargin_once, &__block_literal_global_1135);
  return *(double *)&messageAcknowledgmentPickerMinHorizontalMargin_sBehavior;
}

void __62__CKUIBehavior_messageAcknowledgmentPickerMinHorizontalMargin__block_invoke()
{
  messageAcknowledgmentPickerMinHorizontalMargin_sBehavior = 0x4014000000000000;
}

- (CGSize)messageAcknowledgmentAnchorBubbleSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentAnchorBubbleSize_once != -1)
    dispatch_once(&messageAcknowledgmentAnchorBubbleSize_once, &__block_literal_global_1136_0);
  v2 = *(double *)&messageAcknowledgmentAnchorBubbleSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentAnchorBubbleSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_messageAcknowledgmentAnchorBubbleSize__block_invoke()
{
  messageAcknowledgmentAnchorBubbleSize_sBehavior_0 = 0x4020000000000000;
  messageAcknowledgmentAnchorBubbleSize_sBehavior_1 = 0x401C000000000000;
}

- (CGSize)messageAcknowledgmentIntermediateBubbleSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentIntermediateBubbleSize_once != -1)
    dispatch_once(&messageAcknowledgmentIntermediateBubbleSize_once, &__block_literal_global_1137);
  v2 = *(double *)&messageAcknowledgmentIntermediateBubbleSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentIntermediateBubbleSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __59__CKUIBehavior_messageAcknowledgmentIntermediateBubbleSize__block_invoke()
{
  messageAcknowledgmentIntermediateBubbleSize_sBehavior_0 = 0x4030000000000000;
  messageAcknowledgmentIntermediateBubbleSize_sBehavior_1 = 0x402E000000000000;
}

- (CGSize)messageAcknowledgmentPillBubbleSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentPillBubbleSize_once != -1)
    dispatch_once(&messageAcknowledgmentPillBubbleSize_once, &__block_literal_global_1138);
  v2 = *(double *)&messageAcknowledgmentPillBubbleSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentPillBubbleSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __51__CKUIBehavior_messageAcknowledgmentPillBubbleSize__block_invoke()
{
  messageAcknowledgmentPillBubbleSize_sBehavior_0 = 0x4073600000000000;
  messageAcknowledgmentPillBubbleSize_sBehavior_1 = 0x404A000000000000;
}

- (double)messageAcknowledgmentButtonMargin
{
  if (messageAcknowledgmentButtonMargin_once != -1)
    dispatch_once(&messageAcknowledgmentButtonMargin_once, &__block_literal_global_1139);
  return *(double *)&messageAcknowledgmentButtonMargin_sBehavior;
}

void __49__CKUIBehavior_messageAcknowledgmentButtonMargin__block_invoke()
{
  messageAcknowledgmentButtonMargin_sBehavior = 0x4024000000000000;
}

- (CGSize)messageAcknowledgmentButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageAcknowledgmentButtonSize_once != -1)
    dispatch_once(&messageAcknowledgmentButtonSize_once, &__block_literal_global_1140);
  v2 = *(double *)&messageAcknowledgmentButtonSize_sBehavior_0;
  v3 = *(double *)&messageAcknowledgmentButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __47__CKUIBehavior_messageAcknowledgmentButtonSize__block_invoke()
{
  messageAcknowledgmentButtonSize_sBehavior_0 = 0x4044000000000000;
  messageAcknowledgmentButtonSize_sBehavior_1 = 0x4044000000000000;
}

- (CGSize)attributionViewAvatarSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionViewAvatarSize_once != -1)
    dispatch_once(&attributionViewAvatarSize_once, &__block_literal_global_1141);
  v2 = *(double *)&attributionViewAvatarSize_sBehavior_0;
  v3 = *(double *)&attributionViewAvatarSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __41__CKUIBehavior_attributionViewAvatarSize__block_invoke()
{
  attributionViewAvatarSize_sBehavior_0 = 0x4044000000000000;
  attributionViewAvatarSize_sBehavior_1 = 0x4044000000000000;
}

- (double)attributionViewHeight
{
  if (attributionViewHeight_once != -1)
    dispatch_once(&attributionViewHeight_once, &__block_literal_global_1142);
  return *(double *)&attributionViewHeight_sBehavior;
}

void __37__CKUIBehavior_attributionViewHeight__block_invoke()
{
  attributionViewHeight_sBehavior = 0x4060800000000000;
}

- (double)attributionViewMaxWidth
{
  if (attributionViewMaxWidth_once != -1)
    dispatch_once(&attributionViewMaxWidth_once, &__block_literal_global_1143);
  return *(double *)&attributionViewMaxWidth_sBehavior;
}

void __39__CKUIBehavior_attributionViewMaxWidth__block_invoke()
{
  attributionViewMaxWidth_sBehavior = 0x4079000000000000;
}

- (double)attributionViewMinPadding
{
  if (attributionViewMinPadding_once != -1)
    dispatch_once(&attributionViewMinPadding_once, &__block_literal_global_1144);
  return *(double *)&attributionViewMinPadding_sBehavior;
}

void __41__CKUIBehavior_attributionViewMinPadding__block_invoke()
{
  attributionViewMinPadding_sBehavior = 0x4018000000000000;
}

- (UIFont)attributionCountViewFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)attributionCountViewFont_sContentSizeCategory_attributionCountViewFont, (UIContentSizeCategory)v2)|| attributionCountViewFont_sIsIncreaseContrastEnabled_attributionCountViewFont != v3|| attributionCountViewFont_sIsBoldTextEnabled_attributionCountViewFont != IsBoldTextEnabled|| *(double *)&attributionCountViewFont_sTextFontSize_attributionCountViewFont != v5|| *(double *)&attributionCountViewFont_sCustomTextFontSize_attributionCountViewFont != v6|| (objc_msgSend((id)attributionCountViewFont_sCustomTextFontName_attributionCountViewFont, "isEqualToString:", v9, *(double *)&attributionCountViewFont_sCustomTextFontSize_attributionCountViewFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:weight:", 13.0, *MEMORY[0x1E0DC1428]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)attributionCountViewFont_sBehavior;
    attributionCountViewFont_sBehavior = v10;

    objc_storeStrong((id *)&attributionCountViewFont_sContentSizeCategory_attributionCountViewFont, v2);
    attributionCountViewFont_sIsIncreaseContrastEnabled_attributionCountViewFont = v3;
    attributionCountViewFont_sIsBoldTextEnabled_attributionCountViewFont = IsBoldTextEnabled;
    attributionCountViewFont_sTextFontSize_attributionCountViewFont = *(_QWORD *)&v5;
    attributionCountViewFont_sCustomTextFontSize_attributionCountViewFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&attributionCountViewFont_sCustomTextFontName_attributionCountViewFont, v8);
  }
  v12 = (UIFont *)(id)attributionCountViewFont_sBehavior;

  return v12;
}

- (CGSize)attributionCountViewImageSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionCountViewImageSize_once != -1)
    dispatch_once(&attributionCountViewImageSize_once, &__block_literal_global_1145);
  v2 = *(double *)&attributionCountViewImageSize_sBehavior_0;
  v3 = *(double *)&attributionCountViewImageSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __45__CKUIBehavior_attributionCountViewImageSize__block_invoke()
{
  attributionCountViewImageSize_sBehavior_0 = 0x4034000000000000;
  attributionCountViewImageSize_sBehavior_1 = 0x4034000000000000;
}

- (CGSize)attributionIconSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionIconSize_once != -1)
    dispatch_once(&attributionIconSize_once, &__block_literal_global_1146);
  v2 = *(double *)&attributionIconSize_sBehavior_0;
  v3 = *(double *)&attributionIconSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __35__CKUIBehavior_attributionIconSize__block_invoke()
{
  attributionIconSize_sBehavior_0 = 0x4038000000000000;
  attributionIconSize_sBehavior_1 = 0x4038000000000000;
}

- (double)attributionCountAndImageViewPadding
{
  if (attributionCountAndImageViewPadding_once != -1)
    dispatch_once(&attributionCountAndImageViewPadding_once, &__block_literal_global_1147);
  return *(double *)&attributionCountAndImageViewPadding_sBehavior;
}

void __51__CKUIBehavior_attributionCountAndImageViewPadding__block_invoke()
{
  attributionCountAndImageViewPadding_sBehavior = 0x4000000000000000;
}

- (CGSize)attributionStickerDetailsViewButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionStickerDetailsViewButtonSize_once != -1)
    dispatch_once(&attributionStickerDetailsViewButtonSize_once, &__block_literal_global_1148);
  v2 = *(double *)&attributionStickerDetailsViewButtonSize_sBehavior_0;
  v3 = *(double *)&attributionStickerDetailsViewButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __55__CKUIBehavior_attributionStickerDetailsViewButtonSize__block_invoke()
{
  attributionStickerDetailsViewButtonSize_sBehavior_0 = 0x4044000000000000;
  attributionStickerDetailsViewButtonSize_sBehavior_1 = 0x4044000000000000;
}

- (CGSize)attributionStickerDetailsViewAvatarSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionStickerDetailsViewAvatarSize_once != -1)
    dispatch_once(&attributionStickerDetailsViewAvatarSize_once, &__block_literal_global_1149);
  v2 = *(double *)&attributionStickerDetailsViewAvatarSize_sBehavior_0;
  v3 = *(double *)&attributionStickerDetailsViewAvatarSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __55__CKUIBehavior_attributionStickerDetailsViewAvatarSize__block_invoke()
{
  attributionStickerDetailsViewAvatarSize_sBehavior_0 = 0x4034000000000000;
  attributionStickerDetailsViewAvatarSize_sBehavior_1 = 0x4034000000000000;
}

- (CGSize)attributionStickerDetailsViewImageSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionStickerDetailsViewImageSize_once != -1)
    dispatch_once(&attributionStickerDetailsViewImageSize_once, &__block_literal_global_1150);
  v2 = *(double *)&attributionStickerDetailsViewImageSize_sBehavior_0;
  v3 = *(double *)&attributionStickerDetailsViewImageSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __54__CKUIBehavior_attributionStickerDetailsViewImageSize__block_invoke()
{
  attributionStickerDetailsViewImageSize_sBehavior_0 = 0x404E000000000000;
  attributionStickerDetailsViewImageSize_sBehavior_1 = 0x404E000000000000;
}

- (BOOL)attributionViewShouldCenterInTranscript
{
  if (attributionViewShouldCenterInTranscript_once != -1)
    dispatch_once(&attributionViewShouldCenterInTranscript_once, &__block_literal_global_1151);
  return 0;
}

- (double)attributionViewAdditionalTopOffset
{
  if (attributionViewAdditionalTopOffset_once != -1)
    dispatch_once(&attributionViewAdditionalTopOffset_once, &__block_literal_global_1152);
  return *(double *)&attributionViewAdditionalTopOffset_sBehavior;
}

void __50__CKUIBehavior_attributionViewAdditionalTopOffset__block_invoke()
{
  attributionViewAdditionalTopOffset_sBehavior = 0x4010000000000000;
}

- (UIFont)attributionStickerDetailsViewSenderNameFont
{
  if (attributionStickerDetailsViewSenderNameFont_once != -1)
    dispatch_once(&attributionStickerDetailsViewSenderNameFont_once, &__block_literal_global_1153);
  return (UIFont *)(id)attributionStickerDetailsViewSenderNameFont_sBehavior;
}

void __59__CKUIBehavior_attributionStickerDetailsViewSenderNameFont__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0DC1350], "boldSystemFontOfSize:", 14.0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)attributionStickerDetailsViewSenderNameFont_sBehavior;
  attributionStickerDetailsViewSenderNameFont_sBehavior = v0;

}

- (UIFont)attributionStickerDetailsViewStickerPackNameFont
{
  if (attributionStickerDetailsViewStickerPackNameFont_once != -1)
    dispatch_once(&attributionStickerDetailsViewStickerPackNameFont_once, &__block_literal_global_1154);
  return (UIFont *)(id)attributionStickerDetailsViewStickerPackNameFont_sBehavior;
}

void __64__CKUIBehavior_attributionStickerDetailsViewStickerPackNameFont__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 12.0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)attributionStickerDetailsViewStickerPackNameFont_sBehavior;
  attributionStickerDetailsViewStickerPackNameFont_sBehavior = v0;

}

- (CGSize)attributionCollapseButtonSize
{
  double v2;
  double v3;
  CGSize result;

  if (attributionCollapseButtonSize_once != -1)
    dispatch_once(&attributionCollapseButtonSize_once, &__block_literal_global_1155);
  v2 = *(double *)&attributionCollapseButtonSize_sBehavior_0;
  v3 = *(double *)&attributionCollapseButtonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __45__CKUIBehavior_attributionCollapseButtonSize__block_invoke()
{
  attributionCollapseButtonSize_sBehavior_0 = 0x4046000000000000;
  attributionCollapseButtonSize_sBehavior_1 = 0x4046000000000000;
}

- (UIEdgeInsets)attributionViewCollapsedModeInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (attributionViewCollapsedModeInsets_once != -1)
    dispatch_once(&attributionViewCollapsedModeInsets_once, &__block_literal_global_1156);
  v2 = *(double *)&attributionViewCollapsedModeInsets_sBehavior_1;
  v3 = *(double *)&attributionViewCollapsedModeInsets_sBehavior_3;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v3;
  result.bottom = v5;
  result.left = v2;
  result.top = v4;
  return result;
}

void __50__CKUIBehavior_attributionViewCollapsedModeInsets__block_invoke()
{
  attributionViewCollapsedModeInsets_sBehavior_1 = 0x402C000000000000;
  attributionViewCollapsedModeInsets_sBehavior_3 = 0x402C000000000000;
}

- (double)attributionCollapseButtonLeadingInset
{
  if (attributionCollapseButtonLeadingInset_once != -1)
    dispatch_once(&attributionCollapseButtonLeadingInset_once, &__block_literal_global_1157);
  return *(double *)&attributionCollapseButtonLeadingInset_sBehavior;
}

void __53__CKUIBehavior_attributionCollapseButtonLeadingInset__block_invoke()
{
  attributionCollapseButtonLeadingInset_sBehavior = 0x4000000000000000;
}

- (double)attributionVoteCountTrailingInset
{
  if (attributionVoteCountTrailingInset_once != -1)
    dispatch_once(&attributionVoteCountTrailingInset_once, &__block_literal_global_1158);
  return *(double *)&attributionVoteCountTrailingInset_sBehavior;
}

void __49__CKUIBehavior_attributionVoteCountTrailingInset__block_invoke()
{
  attributionVoteCountTrailingInset_sBehavior = 0xC02C000000000000;
}

- (UIImage)attributionCollapseButtonImage
{
  if (attributionCollapseButtonImage_once != -1)
    dispatch_once(&attributionCollapseButtonImage_once, &__block_literal_global_1159);
  return (UIImage *)(id)attributionCollapseButtonImage_sBehavior;
}

void __46__CKUIBehavior_attributionCollapseButtonImage__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("chevron.backward"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)attributionCollapseButtonImage_sBehavior;
  attributionCollapseButtonImage_sBehavior = v0;

}

- (NSArray)messageAcknowledgmentPickerBarAcknowledgmentOrder
{
  return (NSArray *)&unk_1E286F5C8;
}

- (id)messageAcknowledgmentImageNameForType:(int64_t)a3
{
  __CFString *v3;
  void *v4;
  void *v5;
  void *v6;

  switch(a3)
  {
    case 2000:
      v3 = CFSTR("Acknowledgments-Menu-Heart");
      break;
    case 2001:
      v3 = CFSTR("Acknowledgments-Menu-ThumbsUp");
      break;
    case 2002:
      v3 = CFSTR("Acknowledgments-Menu-ThumbsDown");
      break;
    case 2003:
      v4 = (void *)MEMORY[0x1E0CB3940];
      CKFrameworkBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "stringWithFormat:", CFSTR("%@-%@"), CFSTR("Acknowledgments-Menu-HAHA"), v6);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();

      break;
    case 2004:
      v3 = CFSTR("Acknowledgments-Menu-Exclamation");
      break;
    case 2005:
      v3 = CFSTR("Acknowledgments-Menu-QuestionMark");
      break;
    default:
      v3 = 0;
      break;
  }
  return v3;
}

- (id)messageAcknowledgmentPollingImageNameForAcknowledgmentType:(int64_t)a3
{
  __CFString *v3;
  void *v4;
  void *v5;
  void *v6;

  switch(a3)
  {
    case 2000:
      v3 = CFSTR("Polling-Heart");
      break;
    case 2001:
      v3 = CFSTR("Polling-ThumbsUp");
      break;
    case 2002:
      v3 = CFSTR("Polling-ThumbsDown");
      break;
    case 2003:
      v4 = (void *)MEMORY[0x1E0CB3940];
      CKFrameworkBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "stringWithFormat:", CFSTR("Polling-HAHA-%@"), v6);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();

      break;
    case 2004:
      v3 = CFSTR("Polling-Exclamation");
      break;
    case 2005:
      v3 = CFSTR("Polling-QuestionMark");
      break;
    default:
      v3 = 0;
      break;
  }
  return v3;
}

- (id)largeMessageAcknowledgmentPollingImageNameForAcknowledgmentType:(int64_t)a3
{
  __CFString *v3;
  void *v4;
  void *v5;
  void *v6;

  switch(a3)
  {
    case 2000:
      v3 = CFSTR("Polling-Heart-Large");
      break;
    case 2001:
      v3 = CFSTR("Polling-ThumbsUp-Large");
      break;
    case 2002:
      v3 = CFSTR("Polling-ThumbsDown-Large");
      break;
    case 2003:
      v4 = (void *)MEMORY[0x1E0CB3940];
      CKFrameworkBundle();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("ACKNOWLEDGMENT_HAHA_ASSET_NAME_SUFFIX"), CFSTR("ENG"), CFSTR("ChatKit"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "stringWithFormat:", CFSTR("Polling-HAHA-%@-Large"), v6);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();

      break;
    case 2004:
      v3 = CFSTR("Polling-Exclamation-Large");
      break;
    case 2005:
      v3 = CFSTR("Polling-QuestionMark-Large");
      break;
    default:
      v3 = 0;
      break;
  }
  return v3;
}

- (NSString)messageAcknowledgmentPickerBarBubbleName
{
  if (messageAcknowledgmentPickerBarBubbleName_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarBubbleName_once, &__block_literal_global_1198);
  return (NSString *)(id)messageAcknowledgmentPickerBarBubbleName_sBehavior;
}

void __56__CKUIBehavior_messageAcknowledgmentPickerBarBubbleName__block_invoke()
{
  void *v0;

  v0 = (void *)messageAcknowledgmentPickerBarBubbleName_sBehavior;
  messageAcknowledgmentPickerBarBubbleName_sBehavior = (uint64_t)CFSTR("MenuBubble1");

}

- (NSString)messageAcknowledgmentPickerBarBubbleTailName
{
  if (messageAcknowledgmentPickerBarBubbleTailName_once != -1)
    dispatch_once(&messageAcknowledgmentPickerBarBubbleTailName_once, &__block_literal_global_1201);
  return (NSString *)(id)messageAcknowledgmentPickerBarBubbleTailName_sBehavior;
}

void __60__CKUIBehavior_messageAcknowledgmentPickerBarBubbleTailName__block_invoke()
{
  void *v0;

  v0 = (void *)messageAcknowledgmentPickerBarBubbleTailName_sBehavior;
  messageAcknowledgmentPickerBarBubbleTailName_sBehavior = (uint64_t)CFSTR("MenuBubble2");

}

- (id)aggregateAcknowledgmentStackBackgroundName3:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentStackBackground-3Stack");
  else
    return CFSTR("AcknowledgmentStackBackground-3");
}

- (id)aggregateAcknowledgmentStackBackgroundName2:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentStackBackground-2Stack");
  else
    return CFSTR("AcknowledgmentStackBackground-2");
}

- (id)aggregateAcknowledgmentTopBackgroundName:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentTopBackgroundStack");
  else
    return CFSTR("AcknowledgmentTopBackground");
}

- (id)aggregateAcknowledgmentBottomMiddleName:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentBottomMiddleStack");
  else
    return CFSTR("AcknowledgmentBottomMiddle");
}

- (id)aggregateAcknowledgmentBottomTopName:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentBottomTopStack");
  else
    return CFSTR("AcknowledgmentBottomTop");
}

- (id)aggregateAcknowledgmentStackName3:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentStack-3Stack");
  else
    return CFSTR("AcknowledgmentStack-3");
}

- (id)aggregateAcknowledgmentStackName2:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentStack-2Stack");
  else
    return CFSTR("AcknowledgmentStack-2");
}

- (id)aggregateAcknowledgmentMiddleName:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentMiddleStack");
  else
    return CFSTR("AcknowledgmentMiddle");
}

- (id)aggregateAcknowledgmentTopName:(BOOL)a3
{
  if (a3)
    return CFSTR("AcknowledgmentTopStack");
  else
    return CFSTR("AcknowledgmentTop");
}

- (CGPoint)messageHighlightTranscriptBalloonRelativePosition
{
  double v2;
  double v3;
  CGPoint result;

  if (messageHighlightTranscriptBalloonRelativePosition_once != -1)
    dispatch_once(&messageHighlightTranscriptBalloonRelativePosition_once, &__block_literal_global_1240);
  v2 = *(double *)&messageHighlightTranscriptBalloonRelativePosition_sBehavior_0;
  v3 = *(double *)&messageHighlightTranscriptBalloonRelativePosition_sBehavior_1;
  result.y = v3;
  result.x = v2;
  return result;
}

void __65__CKUIBehavior_messageHighlightTranscriptBalloonRelativePosition__block_invoke()
{
  messageHighlightTranscriptBalloonRelativePosition_sBehavior_0 = 0x402A000000000000;
  messageHighlightTranscriptBalloonRelativePosition_sBehavior_1 = 0x402A000000000000;
}

- (double)messageHighlightGlyphSymbolPointSize
{
  if (messageHighlightGlyphSymbolPointSize_once != -1)
    dispatch_once(&messageHighlightGlyphSymbolPointSize_once, &__block_literal_global_1241);
  return *(double *)&messageHighlightGlyphSymbolPointSize_sBehavior;
}

void __52__CKUIBehavior_messageHighlightGlyphSymbolPointSize__block_invoke()
{
  messageHighlightGlyphSymbolPointSize_sBehavior = 0x402A000000000000;
}

- (CGSize)messageHighlightTranscriptBalloonSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageHighlightTranscriptBalloonSize_once != -1)
    dispatch_once(&messageHighlightTranscriptBalloonSize_once, &__block_literal_global_1242);
  v2 = *(double *)&messageHighlightTranscriptBalloonSize_sBehavior_0;
  v3 = *(double *)&messageHighlightTranscriptBalloonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_messageHighlightTranscriptBalloonSize__block_invoke()
{
  messageHighlightTranscriptBalloonSize_sBehavior_0 = 0x4034000000000000;
  messageHighlightTranscriptBalloonSize_sBehavior_1 = 0x4034000000000000;
}

- (double)messageHighlightTranscriptBalloonBorderWidth
{
  if (messageHighlightTranscriptBalloonBorderWidth_once != -1)
    dispatch_once(&messageHighlightTranscriptBalloonBorderWidth_once, &__block_literal_global_1243);
  return *(double *)&messageHighlightTranscriptBalloonBorderWidth_sBehavior;
}

void __60__CKUIBehavior_messageHighlightTranscriptBalloonBorderWidth__block_invoke()
{
  messageHighlightTranscriptBalloonBorderWidth_sBehavior = 0x3FF0000000000000;
}

- (UIColor)messageHighlightGoldColor
{
  if (messageHighlightGoldColor_once != -1)
    dispatch_once(&messageHighlightGoldColor_once, &__block_literal_global_1244);
  return (UIColor *)(id)messageHighlightGoldColor_sBehavior;
}

void __41__CKUIBehavior_messageHighlightGoldColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemYellowColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)messageHighlightGoldColor_sBehavior;
  messageHighlightGoldColor_sBehavior = v0;

}

- (UIColor)messageHighlightGlyphColor
{
  if (messageHighlightGlyphColor_once != -1)
    dispatch_once(&messageHighlightGlyphColor_once, &__block_literal_global_1245);
  return (UIColor *)(id)messageHighlightGlyphColor_sBehavior;
}

void __42__CKUIBehavior_messageHighlightGlyphColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)messageHighlightGlyphColor_sBehavior;
  messageHighlightGlyphColor_sBehavior = v0;

}

- (UIImage)messageHighlightImage
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __37__CKUIBehavior_messageHighlightImage__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageHighlightImage_once != -1)
    dispatch_once(&messageHighlightImage_once, block);
  return (UIImage *)(id)messageHighlightImage_sBehavior;
}

void __37__CKUIBehavior_messageHighlightImage__block_invoke(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(v2, "messageHighlightGlyphSymbolPointSize");
  v4 = v3;
  objc_msgSend(*(id *)(a1 + 32), "messageHighlightGlyphColor");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "imageNamed:pointSize:insets:color:", CFSTR("pin.fill"), v7, v4, *MEMORY[0x1E0CEB4B0], *(double *)(MEMORY[0x1E0CEB4B0] + 8), *(double *)(MEMORY[0x1E0CEB4B0] + 16), *(double *)(MEMORY[0x1E0CEB4B0] + 24));
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)messageHighlightImage_sBehavior;
  messageHighlightImage_sBehavior = v5;

}

- (double)messageHighlightTranscriptBalloonBottomPadding
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __62__CKUIBehavior_messageHighlightTranscriptBalloonBottomPadding__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageHighlightTranscriptBalloonBottomPadding_once != -1)
    dispatch_once(&messageHighlightTranscriptBalloonBottomPadding_once, block);
  return *(double *)&messageHighlightTranscriptBalloonBottomPadding_sBehavior;
}

double __62__CKUIBehavior_messageHighlightTranscriptBalloonBottomPadding__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "messageHighlightTranscriptBalloonSize");
  v2 = v1;
  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v3 = 1.0;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 != 0.0)
    v3 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  result = round((v2 + 1.0) * 0.5 * v3) / v3;
  messageHighlightTranscriptBalloonBottomPadding_sBehavior = *(_QWORD *)&result;
  return result;
}

- (CGPoint)messageHighlightButtonRelativePositionToTranscriptMessageBalloon
{
  double v2;
  double v3;
  CGPoint result;

  if (messageHighlightButtonRelativePositionToTranscriptMessageBalloon_once != -1)
    dispatch_once(&messageHighlightButtonRelativePositionToTranscriptMessageBalloon_once, &__block_literal_global_1248);
  v2 = 0.0;
  v3 = 0.0;
  result.y = v3;
  result.x = v2;
  return result;
}

- (CGSize)messageHighlightButtonVisibleViewSize
{
  double v2;
  double v3;
  CGSize result;

  if (messageHighlightButtonVisibleViewSize_once != -1)
    dispatch_once(&messageHighlightButtonVisibleViewSize_once, &__block_literal_global_1249);
  v2 = *(double *)&messageHighlightButtonVisibleViewSize_sBehavior_0;
  v3 = *(double *)&messageHighlightButtonVisibleViewSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __53__CKUIBehavior_messageHighlightButtonVisibleViewSize__block_invoke()
{
  messageHighlightButtonVisibleViewSize_sBehavior_0 = 0x4043000000000000;
  messageHighlightButtonVisibleViewSize_sBehavior_1 = 0x4043000000000000;
}

- (UIEdgeInsets)messageHighlightButtonInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (messageHighlightButtonInsets_once != -1)
    dispatch_once(&messageHighlightButtonInsets_once, &__block_literal_global_1250);
  v2 = *(double *)&messageHighlightButtonInsets_sBehavior_0;
  v3 = *(double *)&messageHighlightButtonInsets_sBehavior_1;
  v4 = *(double *)&messageHighlightButtonInsets_sBehavior_2;
  v5 = *(double *)&messageHighlightButtonInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __44__CKUIBehavior_messageHighlightButtonInsets__block_invoke()
{
  messageHighlightButtonInsets_sBehavior_0 = 0x4018000000000000;
  messageHighlightButtonInsets_sBehavior_1 = 0x4018000000000000;
  messageHighlightButtonInsets_sBehavior_2 = 0x4018000000000000;
  messageHighlightButtonInsets_sBehavior_3 = 0x4018000000000000;
}

- (double)messageHighlightButtonGlyphSymbolPointSize
{
  if (messageHighlightButtonGlyphSymbolPointSize_once != -1)
    dispatch_once(&messageHighlightButtonGlyphSymbolPointSize_once, &__block_literal_global_1251);
  return *(double *)&messageHighlightButtonGlyphSymbolPointSize_sBehavior;
}

void __58__CKUIBehavior_messageHighlightButtonGlyphSymbolPointSize__block_invoke()
{
  messageHighlightButtonGlyphSymbolPointSize_sBehavior = 0x4034000000000000;
}

- (UIColor)messageHighlightButtonSelectedBackgroundColor
{
  if (messageHighlightButtonSelectedBackgroundColor_once != -1)
    dispatch_once(&messageHighlightButtonSelectedBackgroundColor_once, &__block_literal_global_1252);
  return (UIColor *)(id)messageHighlightButtonSelectedBackgroundColor_sBehavior;
}

void __61__CKUIBehavior_messageHighlightButtonSelectedBackgroundColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemYellowColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)messageHighlightButtonSelectedBackgroundColor_sBehavior;
  messageHighlightButtonSelectedBackgroundColor_sBehavior = v0;

}

- (UIColor)messageHighlightButtonUnselectedBackgroundColor
{
  if (messageHighlightButtonUnselectedBackgroundColor_once != -1)
    dispatch_once(&messageHighlightButtonUnselectedBackgroundColor_once, &__block_literal_global_1253);
  return (UIColor *)(id)messageHighlightButtonUnselectedBackgroundColor_sBehavior;
}

void __63__CKUIBehavior_messageHighlightButtonUnselectedBackgroundColor__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "theme");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "replyButtonColor");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)messageHighlightButtonUnselectedBackgroundColor_sBehavior;
  messageHighlightButtonUnselectedBackgroundColor_sBehavior = v1;

}

- (UIImage)messageHighlightButtonImageHighlightOn
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__CKUIBehavior_messageHighlightButtonImageHighlightOn__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageHighlightButtonImageHighlightOn_once != -1)
    dispatch_once(&messageHighlightButtonImageHighlightOn_once, block);
  return (UIImage *)(id)messageHighlightButtonImageHighlightOn_sBehavior;
}

void __54__CKUIBehavior_messageHighlightButtonImageHighlightOn__block_invoke(uint64_t a1)
{
  void *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "messageHighlightButtonGlyphSymbolPointSize");
  v3 = v2;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "theme");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "messageAcknowledgmentGrayColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "imageNamed:pointSize:insets:color:", CFSTR("pin.slash.fill"), v5, v3, *MEMORY[0x1E0CEB4B0], *(double *)(MEMORY[0x1E0CEB4B0] + 8), *(double *)(MEMORY[0x1E0CEB4B0] + 16), *(double *)(MEMORY[0x1E0CEB4B0] + 24));
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)messageHighlightButtonImageHighlightOn_sBehavior;
  messageHighlightButtonImageHighlightOn_sBehavior = v6;

}

- (UIImage)messageHighlightButtonImageHighlightOff
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __55__CKUIBehavior_messageHighlightButtonImageHighlightOff__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (messageHighlightButtonImageHighlightOff_once != -1)
    dispatch_once(&messageHighlightButtonImageHighlightOff_once, block);
  return (UIImage *)(id)messageHighlightButtonImageHighlightOff_sBehavior;
}

void __55__CKUIBehavior_messageHighlightButtonImageHighlightOff__block_invoke(uint64_t a1)
{
  void *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "messageHighlightButtonGlyphSymbolPointSize");
  v3 = v2;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "theme");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "messageAcknowledgmentGrayColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "imageNamed:pointSize:insets:color:", CFSTR("pin.fill"), v5, v3, *MEMORY[0x1E0CEB4B0], *(double *)(MEMORY[0x1E0CEB4B0] + 8), *(double *)(MEMORY[0x1E0CEB4B0] + 16), *(double *)(MEMORY[0x1E0CEB4B0] + 24));
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)messageHighlightButtonImageHighlightOff_sBehavior;
  messageHighlightButtonImageHighlightOff_sBehavior = v6;

}

- (double)browserSwitcherCollapsedGrabberHeaderHeight
{
  if (browserSwitcherCollapsedGrabberHeaderHeight_once != -1)
    dispatch_once(&browserSwitcherCollapsedGrabberHeaderHeight_once, &__block_literal_global_1259);
  return *(double *)&browserSwitcherCollapsedGrabberHeaderHeight_sBehavior;
}

void __59__CKUIBehavior_browserSwitcherCollapsedGrabberHeaderHeight__block_invoke()
{
  browserSwitcherCollapsedGrabberHeaderHeight_sBehavior = 0x4031000000000000;
}

- (double)browserSwitcherCompactGrabberVisibleHeight
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __58__CKUIBehavior_browserSwitcherCompactGrabberVisibleHeight__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (browserSwitcherCompactGrabberVisibleHeight_once != -1)
    dispatch_once(&browserSwitcherCompactGrabberVisibleHeight_once, block);
  return *(double *)&browserSwitcherCompactGrabberVisibleHeight_sBehavior;
}

uint64_t __58__CKUIBehavior_browserSwitcherCompactGrabberVisibleHeight__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "browserSwitcherCollapsedGrabberHeaderHeight");
  browserSwitcherCompactGrabberVisibleHeight_sBehavior = v2;
  return result;
}

- (double)browserSwitcherExpandedGrabberHeaderHeight
{
  if (browserSwitcherExpandedGrabberHeaderHeight_once != -1)
    dispatch_once(&browserSwitcherExpandedGrabberHeaderHeight_once, &__block_literal_global_1260);
  return *(double *)&browserSwitcherExpandedGrabberHeaderHeight_sBehavior;
}

void __58__CKUIBehavior_browserSwitcherExpandedGrabberHeaderHeight__block_invoke()
{
  browserSwitcherExpandedGrabberHeaderHeight_sBehavior = 0x404D000000000000;
}

- (double)browserSwitcherExpandThreshold
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __46__CKUIBehavior_browserSwitcherExpandThreshold__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (browserSwitcherExpandThreshold_once != -1)
    dispatch_once(&browserSwitcherExpandThreshold_once, block);
  return *(double *)&browserSwitcherExpandThreshold_sBehavior;
}

uint64_t __46__CKUIBehavior_browserSwitcherExpandThreshold__block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = 0;
  result = CKIsAppCardsEnabled();
  if ((result & 1) == 0)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "chatChromeBottomInset");
    v2 = v4;
  }
  browserSwitcherExpandThreshold_sBehavior = v2;
  return result;
}

- (double)browserSwitcherGutterWidth
{
  if (browserSwitcherGutterWidth_once != -1)
    dispatch_once(&browserSwitcherGutterWidth_once, &__block_literal_global_1261);
  return *(double *)&browserSwitcherGutterWidth_sBehavior;
}

void __42__CKUIBehavior_browserSwitcherGutterWidth__block_invoke()
{
  browserSwitcherGutterWidth_sBehavior = 0x4020000000000000;
}

- (double)browserSwitcherEdgeGestureWidth
{
  if (browserSwitcherEdgeGestureWidth_once != -1)
    dispatch_once(&browserSwitcherEdgeGestureWidth_once, &__block_literal_global_1262_0);
  return *(double *)&browserSwitcherEdgeGestureWidth_sBehavior;
}

void __47__CKUIBehavior_browserSwitcherEdgeGestureWidth__block_invoke()
{
  browserSwitcherEdgeGestureWidth_sBehavior = 0x4028000000000000;
}

- (double)chatChromeBottomInset
{
  if (chatChromeBottomInset_once != -1)
    dispatch_once(&chatChromeBottomInset_once, &__block_literal_global_1263);
  return *(double *)&chatChromeBottomInset_sBehavior;
}

void __37__CKUIBehavior_chatChromeBottomInset__block_invoke()
{
  chatChromeBottomInset_sBehavior = 0x4046000000000000;
}

- (double)chatMagnifiedChromeBottomInset
{
  if (chatMagnifiedChromeBottomInset_once != -1)
    dispatch_once(&chatMagnifiedChromeBottomInset_once, &__block_literal_global_1264);
  return *(double *)&chatMagnifiedChromeBottomInset_sBehavior;
}

void __46__CKUIBehavior_chatMagnifiedChromeBottomInset__block_invoke()
{
  chatMagnifiedChromeBottomInset_sBehavior = 0x4052C00000000000;
}

- (double)browserSwitcherScrollerHeight
{
  if (browserSwitcherScrollerHeight_once != -1)
    dispatch_once(&browserSwitcherScrollerHeight_once, &__block_literal_global_1265);
  return *(double *)&browserSwitcherScrollerHeight_sBehavior;
}

void __45__CKUIBehavior_browserSwitcherScrollerHeight__block_invoke()
{
  browserSwitcherScrollerHeight_sBehavior = 0x4010000000000000;
}

- (double)cameraAppsMinimizedDockHeight
{
  if (cameraAppsMinimizedDockHeight_once != -1)
    dispatch_once(&cameraAppsMinimizedDockHeight_once, &__block_literal_global_1266);
  return *(double *)&cameraAppsMinimizedDockHeight_sBehavior;
}

void __45__CKUIBehavior_cameraAppsMinimizedDockHeight__block_invoke()
{
  void *v0;
  double v1;
  double v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_referenceBounds");
  v2 = v1;

  if (v2 == 320.0)
  {
    v3 = 0x4043000000000000;
  }
  else
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "chatChromeBottomInset");
    v3 = v5;

  }
  cameraAppsMinimizedDockHeight_sBehavior = v3;
}

- (UIEdgeInsets)pluginBalloonInsetsForMessageFromMe:(BOOL)a3
{
  _BOOL4 v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  UIEdgeInsets result;

  v3 = a3;
  -[CKUIBehavior balloonMaskTailWidth](self, "balloonMaskTailWidth");
  v5 = 0.0;
  if (v3)
    v6 = 0.0;
  else
    v6 = v4;
  if (v3)
    v7 = v4;
  else
    v7 = 0.0;
  v8 = 0.0;
  result.right = v7;
  result.bottom = v5;
  result.left = v6;
  result.top = v8;
  return result;
}

- (UIFont)appLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)appLabelFont_sContentSizeCategory_appLabelFont, (UIContentSizeCategory)v2)|| appLabelFont_sIsIncreaseContrastEnabled_appLabelFont != v3|| appLabelFont_sIsBoldTextEnabled_appLabelFont != IsBoldTextEnabled|| (v10 = appLabelFont_sTextFontSize_appLabelFont, *(double *)&appLabelFont_sTextFontSize_appLabelFont != v5)|| (v10 = appLabelFont_sCustomTextFontSize_appLabelFont, *(double *)&appLabelFont_sCustomTextFontSize_appLabelFont != v6)|| (objc_msgSend((id)appLabelFont_sCustomTextFontName_appLabelFont, "isEqualToString:", v9, *(double *)&appLabelFont_sCustomTextFontSize_appLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "__ck_shortEmphasizedPreferredFontForTextStyle:", *MEMORY[0x1E0CEB5C0], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)appLabelFont_sBehavior;
    appLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&appLabelFont_sContentSizeCategory_appLabelFont, v2);
    appLabelFont_sIsIncreaseContrastEnabled_appLabelFont = v3;
    appLabelFont_sIsBoldTextEnabled_appLabelFont = IsBoldTextEnabled;
    appLabelFont_sTextFontSize_appLabelFont = *(_QWORD *)&v5;
    appLabelFont_sCustomTextFontSize_appLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&appLabelFont_sCustomTextFontName_appLabelFont, v8);
  }
  v13 = (UIFont *)(id)appLabelFont_sBehavior;

  return v13;
}

- (double)dragPinchGestureScaleFactor
{
  if (dragPinchGestureScaleFactor_once != -1)
    dispatch_once(&dragPinchGestureScaleFactor_once, &__block_literal_global_1267);
  return *(double *)&dragPinchGestureScaleFactor_sBehavior;
}

void __43__CKUIBehavior_dragPinchGestureScaleFactor__block_invoke()
{
  dragPinchGestureScaleFactor_sBehavior = 0x4052C00000000000;
}

- (double)dragBalloonHeightReducedAttractorThreshold
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __58__CKUIBehavior_dragBalloonHeightReducedAttractorThreshold__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (dragBalloonHeightReducedAttractorThreshold_once != -1)
    dispatch_once(&dragBalloonHeightReducedAttractorThreshold_once, block);
  return *(double *)&dragBalloonHeightReducedAttractorThreshold_sBehavior;
}

double __58__CKUIBehavior_dragBalloonHeightReducedAttractorThreshold__block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskSizeWithTailShape:isMultiline:", 1, 0);
  v3 = v2;
  objc_msgSend(*(id *)(a1 + 32), "balloonBalloonTranscriptSpace:", 2);
  result = v3 + v4 * 2.0;
  dragBalloonHeightReducedAttractorThreshold_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)dragBalloonWidthIncreasedAttractorThreshold
{
  if (dragBalloonWidthIncreasedAttractorThreshold_once != -1)
    dispatch_once(&dragBalloonWidthIncreasedAttractorThreshold_once, &__block_literal_global_1268);
  return *(double *)&dragBalloonWidthIncreasedAttractorThreshold_sBehavior;
}

void __59__CKUIBehavior_dragBalloonWidthIncreasedAttractorThreshold__block_invoke()
{
  dragBalloonWidthIncreasedAttractorThreshold_sBehavior = 0x4044000000000000;
}

- (double)dragBalloonCornerRadius
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__CKUIBehavior_dragBalloonCornerRadius__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (dragBalloonCornerRadius_once != -1)
    dispatch_once(&dragBalloonCornerRadius_once, block);
  return *(double *)&dragBalloonCornerRadius_sBehavior;
}

double __39__CKUIBehavior_dragBalloonCornerRadius__block_invoke(uint64_t a1)
{
  double v1;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskSize");
  result = v1 * 0.5 + 2.5;
  *(double *)&dragBalloonCornerRadius_sBehavior = result;
  return result;
}

- (double)composeBalloonCornerRadius
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __42__CKUIBehavior_composeBalloonCornerRadius__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (composeBalloonCornerRadius_once != -1)
    dispatch_once(&composeBalloonCornerRadius_once, block);
  return *(double *)&composeBalloonCornerRadius_sBehavior;
}

uint64_t __42__CKUIBehavior_composeBalloonCornerRadius__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "dragBalloonCornerRadius");
  composeBalloonCornerRadius_sBehavior = v2;
  return result;
}

- (double)dragBalloonTailCropWidth
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __40__CKUIBehavior_dragBalloonTailCropWidth__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (dragBalloonTailCropWidth_once != -1)
    dispatch_once(&dragBalloonTailCropWidth_once, block);
  return *(double *)&dragBalloonTailCropWidth_sBehavior;
}

double __40__CKUIBehavior_dragBalloonTailCropWidth__block_invoke(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double result;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "balloonMaskTailWidth");
  v2 = v1;
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "scale");
  *(double *)&dragBalloonTailCropWidth_sBehavior = v2 + 1.0 / v3;

  return result;
}

- (double)dragEdgeLayoutIntentPadding
{
  if (dragEdgeLayoutIntentPadding_once != -1)
    dispatch_once(&dragEdgeLayoutIntentPadding_once, &__block_literal_global_1269);
  return *(double *)&dragEdgeLayoutIntentPadding_sBehavior;
}

void __43__CKUIBehavior_dragEdgeLayoutIntentPadding__block_invoke()
{
  dragEdgeLayoutIntentPadding_sBehavior = 0x4024000000000000;
}

- (double)dragTranscriptScrollThreshold
{
  if (dragTranscriptScrollThreshold_once != -1)
    dispatch_once(&dragTranscriptScrollThreshold_once, &__block_literal_global_1270);
  return *(double *)&dragTranscriptScrollThreshold_sBehavior;
}

void __45__CKUIBehavior_dragTranscriptScrollThreshold__block_invoke()
{
  dragTranscriptScrollThreshold_sBehavior = 0x4056800000000000;
}

- (double)dragTranscriptScrollDisplayLinkMaxDelta
{
  if (dragTranscriptScrollDisplayLinkMaxDelta_once != -1)
    dispatch_once(&dragTranscriptScrollDisplayLinkMaxDelta_once, &__block_literal_global_1271);
  return *(double *)&dragTranscriptScrollDisplayLinkMaxDelta_sBehavior;
}

void __55__CKUIBehavior_dragTranscriptScrollDisplayLinkMaxDelta__block_invoke()
{
  dragTranscriptScrollDisplayLinkMaxDelta_sBehavior = 0x4039000000000000;
}

- (double)stickerScreenScale
{
  if (stickerScreenScale_once != -1)
    dispatch_once(&stickerScreenScale_once, &__block_literal_global_1272);
  return *(double *)&stickerScreenScale_sBehavior;
}

void __34__CKUIBehavior_stickerScreenScale__block_invoke()
{
  stickerScreenScale_sBehavior = 0x4008000000000000;
}

- (double)stickerDisplaySizeScale
{
  if (stickerDisplaySizeScale_once != -1)
    dispatch_once(&stickerDisplaySizeScale_once, &__block_literal_global_1273);
  return *(double *)&stickerDisplaySizeScale_sBehavior;
}

void __39__CKUIBehavior_stickerDisplaySizeScale__block_invoke()
{
  stickerDisplaySizeScale_sBehavior = 0x3FF0000000000000;
}

- (double)emojiStickerImageGenerationFontSize
{
  if (emojiStickerImageGenerationFontSize_once != -1)
    dispatch_once(&emojiStickerImageGenerationFontSize_once, &__block_literal_global_1274);
  return *(double *)&emojiStickerImageGenerationFontSize_sBehavior;
}

void __51__CKUIBehavior_emojiStickerImageGenerationFontSize__block_invoke()
{
  emojiStickerImageGenerationFontSize_sBehavior = 0x4060000000000000;
}

- (UIFont)emojiStickerTranscriptCellFont
{
  if (emojiStickerTranscriptCellFont_once != -1)
    dispatch_once(&emojiStickerTranscriptCellFont_once, &__block_literal_global_1275);
  return (UIFont *)(id)emojiStickerTranscriptCellFont_sBehavior;
}

void __46__CKUIBehavior_emojiStickerTranscriptCellFont__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0DC1350], "systemFontOfSize:", 80.0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)emojiStickerTranscriptCellFont_sBehavior;
  emojiStickerTranscriptCellFont_sBehavior = v0;

}

- (CGSize)emojiStickerTranscriptBalloonSize
{
  double v2;
  double v3;
  CGSize result;

  if (emojiStickerTranscriptBalloonSize_once != -1)
    dispatch_once(&emojiStickerTranscriptBalloonSize_once, &__block_literal_global_1276);
  v2 = *(double *)&emojiStickerTranscriptBalloonSize_sBehavior_0;
  v3 = *(double *)&emojiStickerTranscriptBalloonSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __49__CKUIBehavior_emojiStickerTranscriptBalloonSize__block_invoke()
{
  emojiStickerTranscriptBalloonSize_sBehavior_0 = 0x4048000000000000;
  emojiStickerTranscriptBalloonSize_sBehavior_1 = 0x4048000000000000;
}

- (UIFont)tapbackPickerSizingFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)tapbackPickerSizingFont_sContentSizeCategory_tapbackPickerSizingFont, (UIContentSizeCategory)v2)|| tapbackPickerSizingFont_sIsIncreaseContrastEnabled_tapbackPickerSizingFont != v3|| tapbackPickerSizingFont_sIsBoldTextEnabled_tapbackPickerSizingFont != IsBoldTextEnabled|| (v10 = tapbackPickerSizingFont_sTextFontSize_tapbackPickerSizingFont, *(double *)&tapbackPickerSizingFont_sTextFontSize_tapbackPickerSizingFont != v5)|| (v10 = tapbackPickerSizingFont_sCustomTextFontSize_tapbackPickerSizingFont, *(double *)&tapbackPickerSizingFont_sCustomTextFontSize_tapbackPickerSizingFont != v6)|| (objc_msgSend((id)tapbackPickerSizingFont_sCustomTextFontName_tapbackPickerSizingFont, "isEqualToString:", v9, *(double *)&tapbackPickerSizingFont_sCustomTextFontSize_tapbackPickerSizingFont) & 1) == 0)
  {
    +[CKUIBehavior fontWithStyle:adjustedForMaxSizeCategory:](CKUIBehavior, "fontWithStyle:adjustedForMaxSizeCategory:", *MEMORY[0x1E0CEB580], *MEMORY[0x1E0CEB400], *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_fontScaledByScaleFactor:", 0.8);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)tapbackPickerSizingFont_sBehavior;
    tapbackPickerSizingFont_sBehavior = v12;

    objc_storeStrong((id *)&tapbackPickerSizingFont_sContentSizeCategory_tapbackPickerSizingFont, v2);
    tapbackPickerSizingFont_sIsIncreaseContrastEnabled_tapbackPickerSizingFont = v3;
    tapbackPickerSizingFont_sIsBoldTextEnabled_tapbackPickerSizingFont = IsBoldTextEnabled;
    tapbackPickerSizingFont_sTextFontSize_tapbackPickerSizingFont = *(_QWORD *)&v5;
    tapbackPickerSizingFont_sCustomTextFontSize_tapbackPickerSizingFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&tapbackPickerSizingFont_sCustomTextFontName_tapbackPickerSizingFont, v8);
  }
  v14 = (UIFont *)(id)tapbackPickerSizingFont_sBehavior;

  return v14;
}

- (CGSize)stickerSizeScaledWithInitialSize:(CGSize)a3 imageScale:(double)a4 userScale:(double)a5 rectifiedScreenScale:(double)a6 maxWidth:(double)a7
{
  double height;
  double width;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGSize result;

  height = a3.height;
  width = a3.width;
  -[CKUIBehavior stickerDisplaySizeScale](self, "stickerDisplaySizeScale");
  v14 = height * v13 * a4 * a5;
  v15 = 1.0 / a6 * (width * v13 * a4 * a5);
  v16 = 1.0 / a6 * v14;
  if (v15 <= a7 || v15 == 0.0)
    a7 = v15;
  else
    v16 = v16 * (a7 / v15);
  v17 = round(a7 * a6) / a6;
  v18 = round(v16 * a6) / a6;
  result.height = v18;
  result.width = v17;
  return result;
}

- (BOOL)stickerSavingEnabled
{
  if (stickerSavingEnabled_once != -1)
    dispatch_once(&stickerSavingEnabled_once, &__block_literal_global_1277);
  return stickerSavingEnabled_sBehavior;
}

void __36__CKUIBehavior_stickerSavingEnabled__block_invoke()
{
  stickerSavingEnabled_sBehavior = 1;
}

- (double)stickersCellCornerRadius
{
  if (stickersCellCornerRadius_once != -1)
    dispatch_once(&stickersCellCornerRadius_once, &__block_literal_global_1278);
  return *(double *)&stickersCellCornerRadius_sBehavior;
}

void __40__CKUIBehavior_stickersCellCornerRadius__block_invoke()
{
  stickersCellCornerRadius_sBehavior = 0x4020000000000000;
}

- (UIFont)stickerDetailsCellTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)stickerDetailsCellTitleFont_sContentSizeCategory_stickerDetailsCellTitleFont, (UIContentSizeCategory)v2)|| stickerDetailsCellTitleFont_sIsIncreaseContrastEnabled_stickerDetailsCellTitleFont != v3|| stickerDetailsCellTitleFont_sIsBoldTextEnabled_stickerDetailsCellTitleFont != IsBoldTextEnabled|| (v10 = stickerDetailsCellTitleFont_sTextFontSize_stickerDetailsCellTitleFont, *(double *)&stickerDetailsCellTitleFont_sTextFontSize_stickerDetailsCellTitleFont != v5)|| (v10 = stickerDetailsCellTitleFont_sCustomTextFontSize_stickerDetailsCellTitleFont, *(double *)&stickerDetailsCellTitleFont_sCustomTextFontSize_stickerDetailsCellTitleFont != v6)|| (objc_msgSend((id)stickerDetailsCellTitleFont_sCustomTextFontName_stickerDetailsCellTitleFont, "isEqualToString:", v9, *(double *)&stickerDetailsCellTitleFont_sCustomTextFontSize_stickerDetailsCellTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB568], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)stickerDetailsCellTitleFont_sBehavior;
    stickerDetailsCellTitleFont_sBehavior = v11;

    objc_storeStrong((id *)&stickerDetailsCellTitleFont_sContentSizeCategory_stickerDetailsCellTitleFont, v2);
    stickerDetailsCellTitleFont_sIsIncreaseContrastEnabled_stickerDetailsCellTitleFont = v3;
    stickerDetailsCellTitleFont_sIsBoldTextEnabled_stickerDetailsCellTitleFont = IsBoldTextEnabled;
    stickerDetailsCellTitleFont_sTextFontSize_stickerDetailsCellTitleFont = *(_QWORD *)&v5;
    stickerDetailsCellTitleFont_sCustomTextFontSize_stickerDetailsCellTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&stickerDetailsCellTitleFont_sCustomTextFontName_stickerDetailsCellTitleFont, v8);
  }
  v13 = (UIFont *)(id)stickerDetailsCellTitleFont_sBehavior;

  return v13;
}

- (UIFont)stickerDetailsCellSubtitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)stickerDetailsCellSubtitleFont_sContentSizeCategory_stickerDetailsCellSubtitleFont, (UIContentSizeCategory)v2)|| stickerDetailsCellSubtitleFont_sIsIncreaseContrastEnabled_stickerDetailsCellSubtitleFont != v3|| stickerDetailsCellSubtitleFont_sIsBoldTextEnabled_stickerDetailsCellSubtitleFont != IsBoldTextEnabled|| (v10 = stickerDetailsCellSubtitleFont_sTextFontSize_stickerDetailsCellSubtitleFont, *(double *)&stickerDetailsCellSubtitleFont_sTextFontSize_stickerDetailsCellSubtitleFont != v5)|| (v10 = stickerDetailsCellSubtitleFont_sCustomTextFontSize_stickerDetailsCellSubtitleFont, *(double *)&stickerDetailsCellSubtitleFont_sCustomTextFontSize_stickerDetailsCellSubtitleFont != v6)|| (objc_msgSend((id)stickerDetailsCellSubtitleFont_sCustomTextFontName_stickerDetailsCellSubtitleFont, "isEqualToString:", v9, *(double *)&stickerDetailsCellSubtitleFont_sCustomTextFontSize_stickerDetailsCellSubtitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB590], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)stickerDetailsCellSubtitleFont_sBehavior;
    stickerDetailsCellSubtitleFont_sBehavior = v11;

    objc_storeStrong((id *)&stickerDetailsCellSubtitleFont_sContentSizeCategory_stickerDetailsCellSubtitleFont, v2);
    stickerDetailsCellSubtitleFont_sIsIncreaseContrastEnabled_stickerDetailsCellSubtitleFont = v3;
    stickerDetailsCellSubtitleFont_sIsBoldTextEnabled_stickerDetailsCellSubtitleFont = IsBoldTextEnabled;
    stickerDetailsCellSubtitleFont_sTextFontSize_stickerDetailsCellSubtitleFont = *(_QWORD *)&v5;
    stickerDetailsCellSubtitleFont_sCustomTextFontSize_stickerDetailsCellSubtitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&stickerDetailsCellSubtitleFont_sCustomTextFontName_stickerDetailsCellSubtitleFont, v8);
  }
  v13 = (UIFont *)(id)stickerDetailsCellSubtitleFont_sBehavior;

  return v13;
}

- (UIFont)stickerDetailsCellTimestampFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)stickerDetailsCellTimestampFont_sContentSizeCategory_stickerDetailsCellTimestampFont, (UIContentSizeCategory)v2)|| stickerDetailsCellTimestampFont_sIsIncreaseContrastEnabled_stickerDetailsCellTimestampFont != v3|| stickerDetailsCellTimestampFont_sIsBoldTextEnabled_stickerDetailsCellTimestampFont != IsBoldTextEnabled|| (v10 = stickerDetailsCellTimestampFont_sTextFontSize_stickerDetailsCellTimestampFont, *(double *)&stickerDetailsCellTimestampFont_sTextFontSize_stickerDetailsCellTimestampFont != v5)|| (v10 = stickerDetailsCellTimestampFont_sCustomTextFontSize_stickerDetailsCellTimestampFont, *(double *)&stickerDetailsCellTimestampFont_sCustomTextFontSize_stickerDetailsCellTimestampFont != v6)|| (objc_msgSend((id)stickerDetailsCellTimestampFont_sCustomTextFontName_stickerDetailsCellTimestampFont, "isEqualToString:", v9, *(double *)&stickerDetailsCellTimestampFont_sCustomTextFontSize_stickerDetailsCellTimestampFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)stickerDetailsCellTimestampFont_sBehavior;
    stickerDetailsCellTimestampFont_sBehavior = v11;

    objc_storeStrong((id *)&stickerDetailsCellTimestampFont_sContentSizeCategory_stickerDetailsCellTimestampFont, v2);
    stickerDetailsCellTimestampFont_sIsIncreaseContrastEnabled_stickerDetailsCellTimestampFont = v3;
    stickerDetailsCellTimestampFont_sIsBoldTextEnabled_stickerDetailsCellTimestampFont = IsBoldTextEnabled;
    stickerDetailsCellTimestampFont_sTextFontSize_stickerDetailsCellTimestampFont = *(_QWORD *)&v5;
    stickerDetailsCellTimestampFont_sCustomTextFontSize_stickerDetailsCellTimestampFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&stickerDetailsCellTimestampFont_sCustomTextFontName_stickerDetailsCellTimestampFont, v8);
  }
  v13 = (UIFont *)(id)stickerDetailsCellTimestampFont_sBehavior;

  return v13;
}

- (UIColor)stickerDetailsCellBackgroundColor
{
  if (stickerDetailsCellBackgroundColor_once != -1)
    dispatch_once(&stickerDetailsCellBackgroundColor_once, &__block_literal_global_1279);
  return 0;
}

- (UIButtonConfiguration)stickerViewButtonConfiguration
{
  if (stickerViewButtonConfiguration_once != -1)
    dispatch_once(&stickerViewButtonConfiguration_once, &__block_literal_global_1280);
  return (UIButtonConfiguration *)(id)stickerViewButtonConfiguration_sBehavior;
}

void __46__CKUIBehavior_stickerViewButtonConfiguration__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "grayButtonConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("appstore"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setImage:", v1);

  objc_msgSend(v0, "setButtonSize:", 1);
  objc_msgSend(v0, "setCornerStyle:", 4);
  objc_msgSend(v0, "setMacIdiomStyle:", 1);
  objc_msgSend(v0, "setContentInsets:", 14.0, 14.0, 14.0, 14.0);
  v2 = (void *)stickerViewButtonConfiguration_sBehavior;
  stickerViewButtonConfiguration_sBehavior = (uint64_t)v0;

}

- (UIButtonConfiguration)stickerSaveButtonConfiguration
{
  if (stickerSaveButtonConfiguration_once != -1)
    dispatch_once(&stickerSaveButtonConfiguration_once, &__block_literal_global_1283);
  return (UIButtonConfiguration *)(id)stickerSaveButtonConfiguration_sBehavior;
}

void __46__CKUIBehavior_stickerSaveButtonConfiguration__block_invoke()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CEA3A8], "grayButtonConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "_systemImageNamed:", CFSTR("square.and.arrow.down"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setImage:", v1);

  objc_msgSend(v0, "setButtonSize:", 1);
  objc_msgSend(v0, "setCornerStyle:", 4);
  objc_msgSend(v0, "setMacIdiomStyle:", 1);
  objc_msgSend(v0, "setContentInsets:", 14.0, 14.0, 14.0, 14.0);
  v2 = (void *)stickerSaveButtonConfiguration_sBehavior;
  stickerSaveButtonConfiguration_sBehavior = (uint64_t)v0;

}

- (BOOL)shouldPopoverSuggestionsBanner
{
  return 1;
}

- (UIFont)businessInfoViewGreetingTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)businessInfoViewGreetingTextFont_sContentSizeCategory_businessInfoViewGreetingTextFont, (UIContentSizeCategory)v2)|| businessInfoViewGreetingTextFont_sIsIncreaseContrastEnabled_businessInfoViewGreetingTextFont != v3|| businessInfoViewGreetingTextFont_sIsBoldTextEnabled_businessInfoViewGreetingTextFont != IsBoldTextEnabled|| (v10 = businessInfoViewGreetingTextFont_sTextFontSize_businessInfoViewGreetingTextFont, *(double *)&businessInfoViewGreetingTextFont_sTextFontSize_businessInfoViewGreetingTextFont != v5)|| (v10 = businessInfoViewGreetingTextFont_sCustomTextFontSize_businessInfoViewGreetingTextFont, *(double *)&businessInfoViewGreetingTextFont_sCustomTextFontSize_businessInfoViewGreetingTextFont != v6)|| (objc_msgSend((id)businessInfoViewGreetingTextFont_sCustomTextFontName_businessInfoViewGreetingTextFont, "isEqualToString:", v9, *(double *)&businessInfoViewGreetingTextFont_sCustomTextFontSize_businessInfoViewGreetingTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB540], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)businessInfoViewGreetingTextFont_sBehavior;
    businessInfoViewGreetingTextFont_sBehavior = v11;

    objc_storeStrong((id *)&businessInfoViewGreetingTextFont_sContentSizeCategory_businessInfoViewGreetingTextFont, v2);
    businessInfoViewGreetingTextFont_sIsIncreaseContrastEnabled_businessInfoViewGreetingTextFont = v3;
    businessInfoViewGreetingTextFont_sIsBoldTextEnabled_businessInfoViewGreetingTextFont = IsBoldTextEnabled;
    businessInfoViewGreetingTextFont_sTextFontSize_businessInfoViewGreetingTextFont = *(_QWORD *)&v5;
    businessInfoViewGreetingTextFont_sCustomTextFontSize_businessInfoViewGreetingTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&businessInfoViewGreetingTextFont_sCustomTextFontName_businessInfoViewGreetingTextFont, v8);
  }
  v13 = (UIFont *)(id)businessInfoViewGreetingTextFont_sBehavior;

  return v13;
}

- (UIFont)businessInfoViewDescriptionTextFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)businessInfoViewDescriptionTextFont_sContentSizeCategory_businessInfoViewDescriptionTextFont, (UIContentSizeCategory)v2)|| businessInfoViewDescriptionTextFont_sIsIncreaseContrastEnabled_businessInfoViewDescriptionTextFont != v3|| businessInfoViewDescriptionTextFont_sIsBoldTextEnabled_businessInfoViewDescriptionTextFont != IsBoldTextEnabled|| (v10 = businessInfoViewDescriptionTextFont_sTextFontSize_businessInfoViewDescriptionTextFont, *(double *)&businessInfoViewDescriptionTextFont_sTextFontSize_businessInfoViewDescriptionTextFont != v5)|| (v10 = businessInfoViewDescriptionTextFont_sCustomTextFontSize_businessInfoViewDescriptionTextFont, *(double *)&businessInfoViewDescriptionTextFont_sCustomTextFontSize_businessInfoViewDescriptionTextFont != v6)|| (objc_msgSend((id)businessInfoViewDescriptionTextFont_sCustomTextFontName_businessInfoViewDescriptionTextFont, "isEqualToString:", v9, *(double *)&businessInfoViewDescriptionTextFont_sCustomTextFontSize_businessInfoViewDescriptionTextFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)businessInfoViewDescriptionTextFont_sBehavior;
    businessInfoViewDescriptionTextFont_sBehavior = v11;

    objc_storeStrong((id *)&businessInfoViewDescriptionTextFont_sContentSizeCategory_businessInfoViewDescriptionTextFont, v2);
    businessInfoViewDescriptionTextFont_sIsIncreaseContrastEnabled_businessInfoViewDescriptionTextFont = v3;
    businessInfoViewDescriptionTextFont_sIsBoldTextEnabled_businessInfoViewDescriptionTextFont = IsBoldTextEnabled;
    businessInfoViewDescriptionTextFont_sTextFontSize_businessInfoViewDescriptionTextFont = *(_QWORD *)&v5;
    businessInfoViewDescriptionTextFont_sCustomTextFontSize_businessInfoViewDescriptionTextFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&businessInfoViewDescriptionTextFont_sCustomTextFontName_businessInfoViewDescriptionTextFont, v8);
  }
  v13 = (UIFont *)(id)businessInfoViewDescriptionTextFont_sBehavior;

  return v13;
}

- (UIFont)businessInfoViewTitleLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)businessInfoViewTitleLabelFont_sContentSizeCategory_businessInfoViewTitleLabelFont, (UIContentSizeCategory)v2)|| businessInfoViewTitleLabelFont_sIsIncreaseContrastEnabled_businessInfoViewTitleLabelFont != v3|| businessInfoViewTitleLabelFont_sIsBoldTextEnabled_businessInfoViewTitleLabelFont != IsBoldTextEnabled|| (v10 = businessInfoViewTitleLabelFont_sTextFontSize_businessInfoViewTitleLabelFont, *(double *)&businessInfoViewTitleLabelFont_sTextFontSize_businessInfoViewTitleLabelFont != v5)|| (v10 = businessInfoViewTitleLabelFont_sCustomTextFontSize_businessInfoViewTitleLabelFont, *(double *)&businessInfoViewTitleLabelFont_sCustomTextFontSize_businessInfoViewTitleLabelFont != v6)|| (objc_msgSend((id)businessInfoViewTitleLabelFont_sCustomTextFontName_businessInfoViewTitleLabelFont, "isEqualToString:", v9, *(double *)&businessInfoViewTitleLabelFont_sCustomTextFontSize_businessInfoViewTitleLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)businessInfoViewTitleLabelFont_sBehavior;
    businessInfoViewTitleLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&businessInfoViewTitleLabelFont_sContentSizeCategory_businessInfoViewTitleLabelFont, v2);
    businessInfoViewTitleLabelFont_sIsIncreaseContrastEnabled_businessInfoViewTitleLabelFont = v3;
    businessInfoViewTitleLabelFont_sIsBoldTextEnabled_businessInfoViewTitleLabelFont = IsBoldTextEnabled;
    businessInfoViewTitleLabelFont_sTextFontSize_businessInfoViewTitleLabelFont = *(_QWORD *)&v5;
    businessInfoViewTitleLabelFont_sCustomTextFontSize_businessInfoViewTitleLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&businessInfoViewTitleLabelFont_sCustomTextFontName_businessInfoViewTitleLabelFont, v8);
  }
  v13 = (UIFont *)(id)businessInfoViewTitleLabelFont_sBehavior;

  return v13;
}

- (UIFont)businessDescriptionVCTextViewFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)businessDescriptionVCTextViewFont_sContentSizeCategory_businessDescriptionVCTextViewFont, (UIContentSizeCategory)v2)|| businessDescriptionVCTextViewFont_sIsIncreaseContrastEnabled_businessDescriptionVCTextViewFont != v3|| businessDescriptionVCTextViewFont_sIsBoldTextEnabled_businessDescriptionVCTextViewFont != IsBoldTextEnabled|| (v10 = businessDescriptionVCTextViewFont_sTextFontSize_businessDescriptionVCTextViewFont, *(double *)&businessDescriptionVCTextViewFont_sTextFontSize_businessDescriptionVCTextViewFont != v5)|| (v10 = businessDescriptionVCTextViewFont_sCustomTextFontSize_businessDescriptionVCTextViewFont, *(double *)&businessDescriptionVCTextViewFont_sCustomTextFontSize_businessDescriptionVCTextViewFont != v6)|| (objc_msgSend((id)businessDescriptionVCTextViewFont_sCustomTextFontName_businessDescriptionVCTextViewFont, "isEqualToString:", v9, *(double *)&businessDescriptionVCTextViewFont_sCustomTextFontSize_businessDescriptionVCTextViewFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)businessDescriptionVCTextViewFont_sBehavior;
    businessDescriptionVCTextViewFont_sBehavior = v11;

    objc_storeStrong((id *)&businessDescriptionVCTextViewFont_sContentSizeCategory_businessDescriptionVCTextViewFont, v2);
    businessDescriptionVCTextViewFont_sIsIncreaseContrastEnabled_businessDescriptionVCTextViewFont = v3;
    businessDescriptionVCTextViewFont_sIsBoldTextEnabled_businessDescriptionVCTextViewFont = IsBoldTextEnabled;
    businessDescriptionVCTextViewFont_sTextFontSize_businessDescriptionVCTextViewFont = *(_QWORD *)&v5;
    businessDescriptionVCTextViewFont_sCustomTextFontSize_businessDescriptionVCTextViewFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&businessDescriptionVCTextViewFont_sCustomTextFontName_businessDescriptionVCTextViewFont, v8);
  }
  v13 = (UIFont *)(id)businessDescriptionVCTextViewFont_sBehavior;

  return v13;
}

- (double)businessBrandingAnimationDuration
{
  if (businessBrandingAnimationDuration_once != -1)
    dispatch_once(&businessBrandingAnimationDuration_once, &__block_literal_global_1284);
  return *(double *)&businessBrandingAnimationDuration_sBehavior;
}

void __49__CKUIBehavior_businessBrandingAnimationDuration__block_invoke()
{
  businessBrandingAnimationDuration_sBehavior = 0x3FD6666666666666;
}

- (double)businessBrandingBannerInset
{
  if (businessBrandingBannerInset_once != -1)
    dispatch_once(&businessBrandingBannerInset_once, &__block_literal_global_1285);
  return *(double *)&businessBrandingBannerInset_sBehavior;
}

void __43__CKUIBehavior_businessBrandingBannerInset__block_invoke()
{
  businessBrandingBannerInset_sBehavior = 0x4018000000000000;
}

- (UIFont)syncProgressLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)syncProgressLabelFont_sContentSizeCategory_syncProgressLabelFont, (UIContentSizeCategory)v2)|| syncProgressLabelFont_sIsIncreaseContrastEnabled_syncProgressLabelFont != v3|| syncProgressLabelFont_sIsBoldTextEnabled_syncProgressLabelFont != IsBoldTextEnabled|| (v10 = syncProgressLabelFont_sTextFontSize_syncProgressLabelFont, *(double *)&syncProgressLabelFont_sTextFontSize_syncProgressLabelFont != v5)|| (v10 = syncProgressLabelFont_sCustomTextFontSize_syncProgressLabelFont, *(double *)&syncProgressLabelFont_sCustomTextFontSize_syncProgressLabelFont != v6)|| (objc_msgSend((id)syncProgressLabelFont_sCustomTextFontName_syncProgressLabelFont, "isEqualToString:", v9, *(double *)&syncProgressLabelFont_sCustomTextFontSize_syncProgressLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:maximumContentSizeCategory:", *MEMORY[0x1E0CEB550], *MEMORY[0x1E0CEB408], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)syncProgressLabelFont_sBehavior;
    syncProgressLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&syncProgressLabelFont_sContentSizeCategory_syncProgressLabelFont, v2);
    syncProgressLabelFont_sIsIncreaseContrastEnabled_syncProgressLabelFont = v3;
    syncProgressLabelFont_sIsBoldTextEnabled_syncProgressLabelFont = IsBoldTextEnabled;
    syncProgressLabelFont_sTextFontSize_syncProgressLabelFont = *(_QWORD *)&v5;
    syncProgressLabelFont_sCustomTextFontSize_syncProgressLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&syncProgressLabelFont_sCustomTextFontName_syncProgressLabelFont, v8);
  }
  v13 = (UIFont *)(id)syncProgressLabelFont_sBehavior;

  return v13;
}

- (UIColor)syncBarHairlineColor
{
  if (syncBarHairlineColor_once != -1)
    dispatch_once(&syncBarHairlineColor_once, &__block_literal_global_1286);
  return (UIColor *)(id)syncBarHairlineColor_sBehavior;
}

void __36__CKUIBehavior_syncBarHairlineColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemGray5Color");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)syncBarHairlineColor_sBehavior;
  syncBarHairlineColor_sBehavior = v0;

}

- (UIColor)syncProgressTrackColor
{
  if (syncProgressTrackColor_once != -1)
    dispatch_once(&syncProgressTrackColor_once, &__block_literal_global_1287);
  return (UIColor *)(id)syncProgressTrackColor_sBehavior;
}

void __38__CKUIBehavior_syncProgressTrackColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)syncProgressTrackColor_sBehavior;
  syncProgressTrackColor_sBehavior = v0;

}

- (UIColor)syncProgressColor
{
  if (syncProgressColor_once != -1)
    dispatch_once(&syncProgressColor_once, &__block_literal_global_1288);
  return (UIColor *)(id)syncProgressColor_sBehavior;
}

void __33__CKUIBehavior_syncProgressColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "systemBlueColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)syncProgressColor_sBehavior;
  syncProgressColor_sBehavior = v0;

}

- (double)syncBarFooterHeight
{
  if (syncBarFooterHeight_once != -1)
    dispatch_once(&syncBarFooterHeight_once, &__block_literal_global_1289);
  return *(double *)&syncBarFooterHeight_sBehavior;
}

void __35__CKUIBehavior_syncBarFooterHeight__block_invoke()
{
  syncBarFooterHeight_sBehavior = 0x4048800000000000;
}

- (int64_t)syncBarBlurEffectStyle
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __38__CKUIBehavior_syncBarBlurEffectStyle__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (syncBarBlurEffectStyle_once != -1)
    dispatch_once(&syncBarBlurEffectStyle_once, block);
  return syncBarBlurEffectStyle_sBehavior;
}

uint64_t __38__CKUIBehavior_syncBarBlurEffectStyle__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "_syncBarBlurEffectStyle");
  syncBarBlurEffectStyle_sBehavior = result;
  return result;
}

- (int64_t)_syncBarBlurEffectStyle
{
  return 10;
}

- (double)syncProgressLeadingPadding
{
  if (syncProgressLeadingPadding_once != -1)
    dispatch_once(&syncProgressLeadingPadding_once, &__block_literal_global_1290);
  return 0.0;
}

- (double)syncProgressTrailingPadding
{
  if (syncProgressTrailingPadding_once != -1)
    dispatch_once(&syncProgressTrailingPadding_once, &__block_literal_global_1291);
  return 0.0;
}

- (double)syncProgressTopPadding
{
  if (syncProgressTopPadding_once != -1)
    dispatch_once(&syncProgressTopPadding_once, &__block_literal_global_1292);
  return 0.0;
}

- (int64_t)syncProgressBarStyle
{
  if (syncProgressBarStyle_once != -1)
    dispatch_once(&syncProgressBarStyle_once, &__block_literal_global_1293);
  return syncProgressBarStyle_sBehavior;
}

void __36__CKUIBehavior_syncProgressBarStyle__block_invoke()
{
  syncProgressBarStyle_sBehavior = 1;
}

- (double)callButtonSize
{
  if (callButtonSize_once != -1)
    dispatch_once(&callButtonSize_once, &__block_literal_global_1294);
  return *(double *)&callButtonSize_sBehavior;
}

void __30__CKUIBehavior_callButtonSize__block_invoke()
{
  callButtonSize_sBehavior = 0x4040000000000000;
}

- (UIEdgeInsets)callButtonImageInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (callButtonImageInsets_once != -1)
    dispatch_once(&callButtonImageInsets_once, &__block_literal_global_1295);
  v2 = *(double *)&callButtonImageInsets_sBehavior_0;
  v3 = *(double *)&callButtonImageInsets_sBehavior_1;
  v4 = *(double *)&callButtonImageInsets_sBehavior_2;
  v5 = *(double *)&callButtonImageInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

void __37__CKUIBehavior_callButtonImageInsets__block_invoke()
{
  callButtonImageInsets_sBehavior_0 = 0x401C000000000000;
  callButtonImageInsets_sBehavior_1 = 0x401C000000000000;
  callButtonImageInsets_sBehavior_2 = 0x401C000000000000;
  callButtonImageInsets_sBehavior_3 = 0x401C000000000000;
}

- (double)callButtonLongPressDuration
{
  if (callButtonLongPressDuration_once != -1)
    dispatch_once(&callButtonLongPressDuration_once, &__block_literal_global_1296);
  return *(double *)&callButtonLongPressDuration_sBehavior;
}

void __43__CKUIBehavior_callButtonLongPressDuration__block_invoke()
{
  callButtonLongPressDuration_sBehavior = 0x4000000000000000;
}

- (double)searchCellPreferredWidth
{
  if (searchCellPreferredWidth_once != -1)
    dispatch_once(&searchCellPreferredWidth_once, &__block_literal_global_1297);
  return *(double *)&searchCellPreferredWidth_sBehavior;
}

void __40__CKUIBehavior_searchCellPreferredWidth__block_invoke()
{
  searchCellPreferredWidth_sBehavior = 0x4064000000000000;
}

- (unint64_t)searchDefaultMaxResults
{
  if (searchDefaultMaxResults_once != -1)
    dispatch_once(&searchDefaultMaxResults_once, &__block_literal_global_1298);
  if (searchDefaultMaxResults_sBehavior)
    return 4;
  else
    return 0;
}

void __39__CKUIBehavior_searchDefaultMaxResults__block_invoke()
{
  searchDefaultMaxResults_sBehavior = 1;
}

- (UIEdgeInsets)searchSectionInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (searchSectionInsets_once != -1)
    dispatch_once(&searchSectionInsets_once, &__block_literal_global_1299);
  v2 = *(double *)&searchSectionInsets_sBehavior_3;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v2;
  result.bottom = v5;
  result.left = v4;
  result.top = v3;
  return result;
}

void __35__CKUIBehavior_searchSectionInsets__block_invoke()
{
  searchSectionInsets_sBehavior_3 = 0x4020000000000000;
}

- (UIEdgeInsets)searchSectionMarginInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  UIEdgeInsets result;

  if (searchSectionMarginInsets_once != -1)
    dispatch_once(&searchSectionMarginInsets_once, &__block_literal_global_1300);
  v2 = *(double *)&searchSectionMarginInsets_sBehavior_1;
  v3 = *(double *)&searchSectionMarginInsets_sBehavior_3;
  v4 = 0.0;
  v5 = 0.0;
  result.right = v3;
  result.bottom = v5;
  result.left = v2;
  result.top = v4;
  return result;
}

void __41__CKUIBehavior_searchSectionMarginInsets__block_invoke()
{
  searchSectionMarginInsets_sBehavior_1 = 0x4030000000000000;
  searchSectionMarginInsets_sBehavior_3 = 0x4030000000000000;
}

- (UIEdgeInsets)searchDetailsSectionMarginInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  _QWORD block[5];
  UIEdgeInsets result;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __48__CKUIBehavior_searchDetailsSectionMarginInsets__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchDetailsSectionMarginInsets_once != -1)
    dispatch_once(&searchDetailsSectionMarginInsets_once, block);
  v2 = *(double *)&searchDetailsSectionMarginInsets_sBehavior_0;
  v3 = *(double *)&searchDetailsSectionMarginInsets_sBehavior_1;
  v4 = *(double *)&searchDetailsSectionMarginInsets_sBehavior_2;
  v5 = *(double *)&searchDetailsSectionMarginInsets_sBehavior_3;
  result.right = v5;
  result.bottom = v4;
  result.left = v3;
  result.top = v2;
  return result;
}

uint64_t __48__CKUIBehavior_searchDetailsSectionMarginInsets__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "searchSectionMarginInsets");
  searchDetailsSectionMarginInsets_sBehavior_0 = v2;
  searchDetailsSectionMarginInsets_sBehavior_1 = v3;
  searchDetailsSectionMarginInsets_sBehavior_2 = v4;
  searchDetailsSectionMarginInsets_sBehavior_3 = v5;
  return result;
}

- (double)searchLeadingAndTrailingMaxPadding
{
  if (searchLeadingAndTrailingMaxPadding_once != -1)
    dispatch_once(&searchLeadingAndTrailingMaxPadding_once, &__block_literal_global_1301);
  return *(double *)&searchLeadingAndTrailingMaxPadding_sBehavior;
}

void __50__CKUIBehavior_searchLeadingAndTrailingMaxPadding__block_invoke()
{
  searchLeadingAndTrailingMaxPadding_sBehavior = 0x4030000000000000;
}

- (double)searchDetailsLeadingAndTrailingMaxPadding
{
  if (searchDetailsLeadingAndTrailingMaxPadding_once != -1)
    dispatch_once(&searchDetailsLeadingAndTrailingMaxPadding_once, &__block_literal_global_1302);
  return *(double *)&searchDetailsLeadingAndTrailingMaxPadding_sBehavior;
}

void __57__CKUIBehavior_searchDetailsLeadingAndTrailingMaxPadding__block_invoke()
{
  searchDetailsLeadingAndTrailingMaxPadding_sBehavior = 0x4030000000000000;
}

- (NSDirectionalEdgeInsets)searchResultsInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (searchResultsInsets_once != -1)
    dispatch_once(&searchResultsInsets_once, &__block_literal_global_1303);
  v3 = *((double *)&searchResultsInsets_sBehavior + 1);
  v2 = *(double *)&searchResultsInsets_sBehavior;
  v4 = *(double *)&qword_1EE1138E0;
  v5 = unk_1EE1138E8;
  result.trailing = v5;
  result.bottom = v4;
  result.leading = v3;
  result.top = v2;
  return result;
}

__n128 __35__CKUIBehavior_searchResultsInsets__block_invoke()
{
  __n128 result;
  __int128 v1;

  result = *(__n128 *)MEMORY[0x1E0CEA080];
  v1 = *(_OWORD *)(MEMORY[0x1E0CEA080] + 16);
  searchResultsInsets_sBehavior = *MEMORY[0x1E0CEA080];
  *(_OWORD *)&qword_1EE1138E0 = v1;
  return result;
}

- (NSDirectionalEdgeInsets)searchDetailsResultsInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (searchDetailsResultsInsets_once != -1)
    dispatch_once(&searchDetailsResultsInsets_once, &__block_literal_global_1304);
  v2 = *(double *)&searchDetailsResultsInsets_sBehavior_0;
  v3 = *(double *)&searchDetailsResultsInsets_sBehavior_1;
  v4 = *(double *)&searchDetailsResultsInsets_sBehavior_2;
  v5 = *(double *)&searchDetailsResultsInsets_sBehavior_3;
  result.trailing = v5;
  result.bottom = v4;
  result.leading = v3;
  result.top = v2;
  return result;
}

void __42__CKUIBehavior_searchDetailsResultsInsets__block_invoke()
{
  searchDetailsResultsInsets_sBehavior_0 = 0x4028000000000000;
  searchDetailsResultsInsets_sBehavior_1 = 0x4030000000000000;
  searchDetailsResultsInsets_sBehavior_2 = 0x4030000000000000;
  searchDetailsResultsInsets_sBehavior_3 = 0x4030000000000000;
}

- (double)searchSuggestionsSeparatorLeadingInset
{
  if (searchSuggestionsSeparatorLeadingInset_once != -1)
    dispatch_once(&searchSuggestionsSeparatorLeadingInset_once, &__block_literal_global_1305);
  return *(double *)&searchSuggestionsSeparatorLeadingInset_sBehavior;
}

void __54__CKUIBehavior_searchSuggestionsSeparatorLeadingInset__block_invoke()
{
  searchSuggestionsSeparatorLeadingInset_sBehavior = 0x402C000000000000;
}

- (double)searchSuggestionsImageToTextPadding
{
  if (searchSuggestionsImageToTextPadding_once != -1)
    dispatch_once(&searchSuggestionsImageToTextPadding_once, &__block_literal_global_1306);
  return *(double *)&searchSuggestionsImageToTextPadding_sBehavior;
}

void __51__CKUIBehavior_searchSuggestionsImageToTextPadding__block_invoke()
{
  searchSuggestionsImageToTextPadding_sBehavior = 0x4028000000000000;
}

- (BOOL)searchSectionHeadersPinToBounds
{
  if (searchSectionHeadersPinToBounds_once != -1)
    dispatch_once(&searchSectionHeadersPinToBounds_once, &__block_literal_global_1307);
  return searchSectionHeadersPinToBounds_sBehavior;
}

void __47__CKUIBehavior_searchSectionHeadersPinToBounds__block_invoke()
{
  searchSectionHeadersPinToBounds_sBehavior = 1;
}

- (double)searchSeeAllButtonTrailingMargin
{
  if (searchSeeAllButtonTrailingMargin_once != -1)
    dispatch_once(&searchSeeAllButtonTrailingMargin_once, &__block_literal_global_1308);
  return 0.0;
}

- (double)searchResultsTitleHeaderTopPadding
{
  if (searchResultsTitleHeaderTopPadding_once != -1)
    dispatch_once(&searchResultsTitleHeaderTopPadding_once, &__block_literal_global_1309);
  return *(double *)&searchResultsTitleHeaderTopPadding_sBehavior;
}

void __50__CKUIBehavior_searchResultsTitleHeaderTopPadding__block_invoke()
{
  searchResultsTitleHeaderTopPadding_sBehavior = 0x4028000000000000;
}

- (double)searchResultsTitleHeaderBottomPadding
{
  if (searchResultsTitleHeaderBottomPadding_once != -1)
    dispatch_once(&searchResultsTitleHeaderBottomPadding_once, &__block_literal_global_1310);
  return *(double *)&searchResultsTitleHeaderBottomPadding_sBehavior;
}

void __53__CKUIBehavior_searchResultsTitleHeaderBottomPadding__block_invoke()
{
  searchResultsTitleHeaderBottomPadding_sBehavior = 0x4028000000000000;
}

- (double)searchResultsTitleHeaderAXTopPadding
{
  if (searchResultsTitleHeaderAXTopPadding_once != -1)
    dispatch_once(&searchResultsTitleHeaderAXTopPadding_once, &__block_literal_global_1311);
  return *(double *)&searchResultsTitleHeaderAXTopPadding_sBehavior;
}

void __52__CKUIBehavior_searchResultsTitleHeaderAXTopPadding__block_invoke()
{
  searchResultsTitleHeaderAXTopPadding_sBehavior = 0x4038000000000000;
}

- (double)searchResultsTitleHeaderAXBottomPadding
{
  if (searchResultsTitleHeaderAXBottomPadding_once != -1)
    dispatch_once(&searchResultsTitleHeaderAXBottomPadding_once, &__block_literal_global_1312_0);
  return *(double *)&searchResultsTitleHeaderAXBottomPadding_sBehavior;
}

void __55__CKUIBehavior_searchResultsTitleHeaderAXBottomPadding__block_invoke()
{
  searchResultsTitleHeaderAXBottomPadding_sBehavior = 0x4031000000000000;
}

- (double)searchResultsTitleHeaderDetailsTopPadding
{
  if (searchResultsTitleHeaderDetailsTopPadding_once != -1)
    dispatch_once(&searchResultsTitleHeaderDetailsTopPadding_once, &__block_literal_global_1313_0);
  return *(double *)&searchResultsTitleHeaderDetailsTopPadding_sBehavior;
}

void __57__CKUIBehavior_searchResultsTitleHeaderDetailsTopPadding__block_invoke()
{
  searchResultsTitleHeaderDetailsTopPadding_sBehavior = 0x4028000000000000;
}

- (double)searchResultsTitleHeaderInterItemSpacing
{
  if (searchResultsTitleHeaderInterItemSpacing_once != -1)
    dispatch_once(&searchResultsTitleHeaderInterItemSpacing_once, &__block_literal_global_1314);
  return *(double *)&searchResultsTitleHeaderInterItemSpacing_sBehavior;
}

void __56__CKUIBehavior_searchResultsTitleHeaderInterItemSpacing__block_invoke()
{
  searchResultsTitleHeaderInterItemSpacing_sBehavior = 0x4030000000000000;
}

- (double)searchHeaderHeight
{
  if (searchHeaderHeight_once != -1)
    dispatch_once(&searchHeaderHeight_once, &__block_literal_global_1315);
  return *(double *)&searchHeaderHeight_sBehavior;
}

void __34__CKUIBehavior_searchHeaderHeight__block_invoke()
{
  searchHeaderHeight_sBehavior = 0x4046000000000000;
}

- (UIFont)searchHeaderFont
{
  NSString *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  id *v11;
  void *v12;
  void *v13;
  __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  UIFont *v20;
  NSString *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  CKPreferredContentSizeCategory();
  v2 = (NSString *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  v11 = (id *)&unk_1EE116000;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchHeaderFont_sContentSizeCategory_searchHeaderFont, v2)|| searchHeaderFont_sIsIncreaseContrastEnabled_searchHeaderFont != v3|| searchHeaderFont_sIsBoldTextEnabled_searchHeaderFont != IsBoldTextEnabled|| (v10 = searchHeaderFont_sTextFontSize_searchHeaderFont, *(double *)&searchHeaderFont_sTextFontSize_searchHeaderFont != v5)|| (v10 = searchHeaderFont_sCustomTextFontSize_searchHeaderFont, *(double *)&searchHeaderFont_sCustomTextFontSize_searchHeaderFont != v6)|| (objc_msgSend((id)searchHeaderFont_sCustomTextFontName_searchHeaderFont, "isEqualToString:", v9, *(double *)&searchHeaderFont_sCustomTextFontSize_searchHeaderFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB5C0], 0x8000, 0, *(double *)&v10);
    v22 = v2;
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = *MEMORY[0x1E0DC13C0];
    v23 = *MEMORY[0x1E0DC1458];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *MEMORY[0x1E0DC1448]);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = v13;
    v14 = v9;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v24, &v23, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v26[0] = v15;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "fontDescriptorByAddingAttributes:", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = (id *)&unk_1EE116000;
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v17, 0.0);
    v18 = objc_claimAutoreleasedReturnValue();

    v9 = v14;
    v19 = (void *)searchHeaderFont_sBehavior;
    searchHeaderFont_sBehavior = v18;
    v2 = v22;

    objc_storeStrong((id *)&searchHeaderFont_sContentSizeCategory_searchHeaderFont, v22);
    searchHeaderFont_sIsIncreaseContrastEnabled_searchHeaderFont = v3;
    searchHeaderFont_sIsBoldTextEnabled_searchHeaderFont = IsBoldTextEnabled;
    searchHeaderFont_sTextFontSize_searchHeaderFont = *(_QWORD *)&v5;
    searchHeaderFont_sCustomTextFontSize_searchHeaderFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchHeaderFont_sCustomTextFontName_searchHeaderFont, v8);
  }
  v20 = (UIFont *)v11[48];

  return v20;
}

- (UIFont)searchHeaderButtonFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchHeaderButtonFont_sContentSizeCategory_searchHeaderButtonFont, (UIContentSizeCategory)v2)|| searchHeaderButtonFont_sIsIncreaseContrastEnabled_searchHeaderButtonFont != v3|| searchHeaderButtonFont_sIsBoldTextEnabled_searchHeaderButtonFont != IsBoldTextEnabled|| (v10 = searchHeaderButtonFont_sTextFontSize_searchHeaderButtonFont, *(double *)&searchHeaderButtonFont_sTextFontSize_searchHeaderButtonFont != v5)|| (v10 = searchHeaderButtonFont_sCustomTextFontSize_searchHeaderButtonFont, *(double *)&searchHeaderButtonFont_sCustomTextFontSize_searchHeaderButtonFont != v6)|| (objc_msgSend((id)searchHeaderButtonFont_sCustomTextFontName_searchHeaderButtonFont, "isEqualToString:", v9, *(double *)&searchHeaderButtonFont_sCustomTextFontSize_searchHeaderButtonFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB538], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)searchHeaderButtonFont_sBehavior;
    searchHeaderButtonFont_sBehavior = v11;

    objc_storeStrong((id *)&searchHeaderButtonFont_sContentSizeCategory_searchHeaderButtonFont, v2);
    searchHeaderButtonFont_sIsIncreaseContrastEnabled_searchHeaderButtonFont = v3;
    searchHeaderButtonFont_sIsBoldTextEnabled_searchHeaderButtonFont = IsBoldTextEnabled;
    searchHeaderButtonFont_sTextFontSize_searchHeaderButtonFont = *(_QWORD *)&v5;
    searchHeaderButtonFont_sCustomTextFontSize_searchHeaderButtonFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchHeaderButtonFont_sCustomTextFontName_searchHeaderButtonFont, v8);
  }
  v13 = (UIFont *)(id)searchHeaderButtonFont_sBehavior;

  return v13;
}

- (UIFont)searchDetailsHeaderFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchDetailsHeaderFont_sContentSizeCategory_searchDetailsHeaderFont, (UIContentSizeCategory)v2)|| searchDetailsHeaderFont_sIsIncreaseContrastEnabled_searchDetailsHeaderFont != v3|| searchDetailsHeaderFont_sIsBoldTextEnabled_searchDetailsHeaderFont != IsBoldTextEnabled|| (v10 = searchDetailsHeaderFont_sTextFontSize_searchDetailsHeaderFont, *(double *)&searchDetailsHeaderFont_sTextFontSize_searchDetailsHeaderFont != v5)|| (v10 = searchDetailsHeaderFont_sCustomTextFontSize_searchDetailsHeaderFont, *(double *)&searchDetailsHeaderFont_sCustomTextFontSize_searchDetailsHeaderFont != v6)|| (objc_msgSend((id)searchDetailsHeaderFont_sCustomTextFontName_searchDetailsHeaderFont, "isEqualToString:", v9, *(double *)&searchDetailsHeaderFont_sCustomTextFontSize_searchDetailsHeaderFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB558], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)searchDetailsHeaderFont_sBehavior;
    searchDetailsHeaderFont_sBehavior = v11;

    objc_storeStrong((id *)&searchDetailsHeaderFont_sContentSizeCategory_searchDetailsHeaderFont, v2);
    searchDetailsHeaderFont_sIsIncreaseContrastEnabled_searchDetailsHeaderFont = v3;
    searchDetailsHeaderFont_sIsBoldTextEnabled_searchDetailsHeaderFont = IsBoldTextEnabled;
    searchDetailsHeaderFont_sTextFontSize_searchDetailsHeaderFont = *(_QWORD *)&v5;
    searchDetailsHeaderFont_sCustomTextFontSize_searchDetailsHeaderFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchDetailsHeaderFont_sCustomTextFontName_searchDetailsHeaderFont, v8);
  }
  v13 = (UIFont *)(id)searchDetailsHeaderFont_sBehavior;

  return v13;
}

- (UIFont)searchDetailsHeaderFontIdentity
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchDetailsHeaderFontIdentity_sContentSizeCategory_searchDetailsHeaderFontIdentity, (UIContentSizeCategory)v2)|| searchDetailsHeaderFontIdentity_sIsIncreaseContrastEnabled_searchDetailsHeaderFontIdentity != v3|| searchDetailsHeaderFontIdentity_sIsBoldTextEnabled_searchDetailsHeaderFontIdentity != IsBoldTextEnabled|| (v10 = searchDetailsHeaderFontIdentity_sTextFontSize_searchDetailsHeaderFontIdentity, *(double *)&searchDetailsHeaderFontIdentity_sTextFontSize_searchDetailsHeaderFontIdentity != v5)|| (v10 = searchDetailsHeaderFontIdentity_sCustomTextFontSize_searchDetailsHeaderFontIdentity, *(double *)&searchDetailsHeaderFontIdentity_sCustomTextFontSize_searchDetailsHeaderFontIdentity != v6)|| (objc_msgSend((id)searchDetailsHeaderFontIdentity_sCustomTextFontName_searchDetailsHeaderFontIdentity, "isEqualToString:", v9, *(double *)&searchDetailsHeaderFontIdentity_sCustomTextFontSize_searchDetailsHeaderFontIdentity) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", *MEMORY[0x1E0CEB568], *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)searchDetailsHeaderFontIdentity_sBehavior;
    searchDetailsHeaderFontIdentity_sBehavior = v12;

    objc_storeStrong((id *)&searchDetailsHeaderFontIdentity_sContentSizeCategory_searchDetailsHeaderFontIdentity, v2);
    searchDetailsHeaderFontIdentity_sIsIncreaseContrastEnabled_searchDetailsHeaderFontIdentity = v3;
    searchDetailsHeaderFontIdentity_sIsBoldTextEnabled_searchDetailsHeaderFontIdentity = IsBoldTextEnabled;
    searchDetailsHeaderFontIdentity_sTextFontSize_searchDetailsHeaderFontIdentity = *(_QWORD *)&v5;
    searchDetailsHeaderFontIdentity_sCustomTextFontSize_searchDetailsHeaderFontIdentity = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchDetailsHeaderFontIdentity_sCustomTextFontName_searchDetailsHeaderFontIdentity, v8);
  }
  v14 = (UIFont *)(id)searchDetailsHeaderFontIdentity_sBehavior;

  return v14;
}

- (UIFont)searchAttachmentResultLabelFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchAttachmentResultLabelFont_sContentSizeCategory_searchAttachmentResultLabelFont, (UIContentSizeCategory)v3)|| searchAttachmentResultLabelFont_sIsIncreaseContrastEnabled_searchAttachmentResultLabelFont != v4|| searchAttachmentResultLabelFont_sIsBoldTextEnabled_searchAttachmentResultLabelFont != IsBoldTextEnabled|| (v11 = searchAttachmentResultLabelFont_sTextFontSize_searchAttachmentResultLabelFont, *(double *)&searchAttachmentResultLabelFont_sTextFontSize_searchAttachmentResultLabelFont != v6)|| (v11 = searchAttachmentResultLabelFont_sCustomTextFontSize_searchAttachmentResultLabelFont, *(double *)&searchAttachmentResultLabelFont_sCustomTextFontSize_searchAttachmentResultLabelFont != v7)|| (objc_msgSend((id)searchAttachmentResultLabelFont_sCustomTextFontName_searchAttachmentResultLabelFont, "isEqualToString:", v10, *(double *)&searchAttachmentResultLabelFont_sCustomTextFontSize_searchAttachmentResultLabelFont) & 1) == 0)
  {
    -[CKUIBehavior searchResultLabelFont](self, "searchResultLabelFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)searchAttachmentResultLabelFont_sBehavior;
    searchAttachmentResultLabelFont_sBehavior = v12;

    objc_storeStrong((id *)&searchAttachmentResultLabelFont_sContentSizeCategory_searchAttachmentResultLabelFont, v3);
    searchAttachmentResultLabelFont_sIsIncreaseContrastEnabled_searchAttachmentResultLabelFont = v4;
    searchAttachmentResultLabelFont_sIsBoldTextEnabled_searchAttachmentResultLabelFont = IsBoldTextEnabled;
    searchAttachmentResultLabelFont_sTextFontSize_searchAttachmentResultLabelFont = *(_QWORD *)&v6;
    searchAttachmentResultLabelFont_sCustomTextFontSize_searchAttachmentResultLabelFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&searchAttachmentResultLabelFont_sCustomTextFontName_searchAttachmentResultLabelFont, v9);
  }
  v14 = (UIFont *)(id)searchAttachmentResultLabelFont_sBehavior;

  return v14;
}

- (UIFont)searchAttachmentResultDateLabelFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchAttachmentResultDateLabelFont_sContentSizeCategory_searchAttachmentResultDateLabelFont, (UIContentSizeCategory)v3)|| searchAttachmentResultDateLabelFont_sIsIncreaseContrastEnabled_searchAttachmentResultDateLabelFont != v4|| searchAttachmentResultDateLabelFont_sIsBoldTextEnabled_searchAttachmentResultDateLabelFont != IsBoldTextEnabled|| (v11 = searchAttachmentResultDateLabelFont_sTextFontSize_searchAttachmentResultDateLabelFont, *(double *)&searchAttachmentResultDateLabelFont_sTextFontSize_searchAttachmentResultDateLabelFont != v6)|| (v11 = searchAttachmentResultDateLabelFont_sCustomTextFontSize_searchAttachmentResultDateLabelFont, *(double *)&searchAttachmentResultDateLabelFont_sCustomTextFontSize_searchAttachmentResultDateLabelFont != v7)|| (objc_msgSend((id)searchAttachmentResultDateLabelFont_sCustomTextFontName_searchAttachmentResultDateLabelFont, "isEqualToString:", v10, *(double *)&searchAttachmentResultDateLabelFont_sCustomTextFontSize_searchAttachmentResultDateLabelFont) & 1) == 0)
  {
    -[CKUIBehavior searchResultLabelFont](self, "searchResultLabelFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)searchAttachmentResultDateLabelFont_sBehavior;
    searchAttachmentResultDateLabelFont_sBehavior = v12;

    objc_storeStrong((id *)&searchAttachmentResultDateLabelFont_sContentSizeCategory_searchAttachmentResultDateLabelFont, v3);
    searchAttachmentResultDateLabelFont_sIsIncreaseContrastEnabled_searchAttachmentResultDateLabelFont = v4;
    searchAttachmentResultDateLabelFont_sIsBoldTextEnabled_searchAttachmentResultDateLabelFont = IsBoldTextEnabled;
    searchAttachmentResultDateLabelFont_sTextFontSize_searchAttachmentResultDateLabelFont = *(_QWORD *)&v6;
    searchAttachmentResultDateLabelFont_sCustomTextFontSize_searchAttachmentResultDateLabelFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&searchAttachmentResultDateLabelFont_sCustomTextFontName_searchAttachmentResultDateLabelFont, v9);
  }
  v14 = (UIFont *)(id)searchAttachmentResultDateLabelFont_sBehavior;

  return v14;
}

- (double)searchSectionTitleVertPadding
{
  if (searchSectionTitleVertPadding_once != -1)
    dispatch_once(&searchSectionTitleVertPadding_once, &__block_literal_global_1316);
  return *(double *)&searchSectionTitleVertPadding_sBehavior;
}

void __45__CKUIBehavior_searchSectionTitleVertPadding__block_invoke()
{
  searchSectionTitleVertPadding_sBehavior = 0x4018000000000000;
}

- (NSDirectionalEdgeInsets)searchConversationSectionInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (searchConversationSectionInsets_once != -1)
    dispatch_once(&searchConversationSectionInsets_once, &__block_literal_global_1317_0);
  v2 = *(double *)&searchConversationSectionInsets_sBehavior_0;
  v3 = *(double *)&searchConversationSectionInsets_sBehavior_2;
  v4 = 0.0;
  v5 = 0.0;
  result.trailing = v5;
  result.bottom = v3;
  result.leading = v4;
  result.top = v2;
  return result;
}

void __47__CKUIBehavior_searchConversationSectionInsets__block_invoke()
{
  searchConversationSectionInsets_sBehavior_0 = 0x4034000000000000;
  searchConversationSectionInsets_sBehavior_2 = 0x4034000000000000;
}

- (double)searchConversationMinAvatarLabelSpacing
{
  if (searchConversationMinAvatarLabelSpacing_once != -1)
    dispatch_once(&searchConversationMinAvatarLabelSpacing_once, &__block_literal_global_1318_0);
  return *(double *)&searchConversationMinAvatarLabelSpacing_sBehavior;
}

void __55__CKUIBehavior_searchConversationMinAvatarLabelSpacing__block_invoke()
{
  searchConversationMinAvatarLabelSpacing_sBehavior = 0x4024000000000000;
}

- (double)searchConversationCellPadding
{
  if (searchConversationCellPadding_once != -1)
    dispatch_once(&searchConversationCellPadding_once, &__block_literal_global_1319_0);
  return 0.0;
}

- (double)searchConversationAvatarCellInterItemSpacing
{
  if (searchConversationAvatarCellInterItemSpacing_once != -1)
    dispatch_once(&searchConversationAvatarCellInterItemSpacing_once, &__block_literal_global_1320_0);
  return 0.0;
}

- (double)searchResultsInterItemSpacing
{
  if (searchResultsInterItemSpacing_once != -1)
    dispatch_once(&searchResultsInterItemSpacing_once, &__block_literal_global_1321);
  return *(double *)&searchResultsInterItemSpacing_sBehavior;
}

void __45__CKUIBehavior_searchResultsInterItemSpacing__block_invoke()
{
  searchResultsInterItemSpacing_sBehavior = 0x4024000000000000;
}

- (double)searchResultsCellCornerRadius
{
  if (searchResultsCellCornerRadius_once != -1)
    dispatch_once(&searchResultsCellCornerRadius_once, &__block_literal_global_1322);
  return *(double *)&searchResultsCellCornerRadius_sBehavior;
}

void __45__CKUIBehavior_searchResultsCellCornerRadius__block_invoke()
{
  searchResultsCellCornerRadius_sBehavior = 0x4024000000000000;
}

- (double)searchResultAvatarSize
{
  if (searchResultAvatarSize_once != -1)
    dispatch_once(&searchResultAvatarSize_once, &__block_literal_global_1323);
  return *(double *)&searchResultAvatarSize_sBehavior;
}

void __38__CKUIBehavior_searchResultAvatarSize__block_invoke()
{
  searchResultAvatarSize_sBehavior = 0x4040000000000000;
}

- (NSDirectionalEdgeInsets)searchMessagesSectionInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (searchMessagesSectionInsets_once != -1)
    dispatch_once(&searchMessagesSectionInsets_once, &__block_literal_global_1324);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.trailing = v5;
  result.bottom = v4;
  result.leading = v3;
  result.top = v2;
  return result;
}

- (double)searchMessagesTopSpacing
{
  if (searchMessagesTopSpacing_once != -1)
    dispatch_once(&searchMessagesTopSpacing_once, &__block_literal_global_1325_0);
  return *(double *)&searchMessagesTopSpacing_sBehavior;
}

void __40__CKUIBehavior_searchMessagesTopSpacing__block_invoke()
{
  searchMessagesTopSpacing_sBehavior = 0x4028000000000000;
}

- (double)searchMessagesBottomSpacing
{
  if (searchMessagesBottomSpacing_once != -1)
    dispatch_once(&searchMessagesBottomSpacing_once, &__block_literal_global_1326);
  return *(double *)&searchMessagesBottomSpacing_sBehavior;
}

void __43__CKUIBehavior_searchMessagesBottomSpacing__block_invoke()
{
  searchMessagesBottomSpacing_sBehavior = 0x4032000000000000;
}

- (double)searchMessagesInterGroupSpacing
{
  if (searchMessagesInterGroupSpacing_once != -1)
    dispatch_once(&searchMessagesInterGroupSpacing_once, &__block_literal_global_1327);
  return 0.0;
}

- (NSDirectionalEdgeInsets)searchMessagesContentInsets
{
  double v2;
  double v3;
  double v4;
  double v5;
  NSDirectionalEdgeInsets result;

  if (searchMessagesContentInsets_once != -1)
    dispatch_once(&searchMessagesContentInsets_once, &__block_literal_global_1328);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  result.trailing = v5;
  result.bottom = v4;
  result.leading = v3;
  result.top = v2;
  return result;
}

- (double)searchMessagesConversationToSenderSpacing
{
  if (searchMessagesConversationToSenderSpacing_once != -1)
    dispatch_once(&searchMessagesConversationToSenderSpacing_once, &__block_literal_global_1329);
  return *(double *)&searchMessagesConversationToSenderSpacing_sBehavior;
}

void __57__CKUIBehavior_searchMessagesConversationToSenderSpacing__block_invoke()
{
  searchMessagesConversationToSenderSpacing_sBehavior = 0x4010000000000000;
}

- (double)searchMessagesSenderToBalloonSpacing
{
  if (searchMessagesSenderToBalloonSpacing_once != -1)
    dispatch_once(&searchMessagesSenderToBalloonSpacing_once, &__block_literal_global_1330);
  return *(double *)&searchMessagesSenderToBalloonSpacing_sBehavior;
}

void __52__CKUIBehavior_searchMessagesSenderToBalloonSpacing__block_invoke()
{
  searchMessagesSenderToBalloonSpacing_sBehavior = 0x4020000000000000;
}

- (double)searchMessagesBalloonToChevronSpacing
{
  if (searchMessagesBalloonToChevronSpacing_once != -1)
    dispatch_once(&searchMessagesBalloonToChevronSpacing_once, &__block_literal_global_1331);
  return *(double *)&searchMessagesBalloonToChevronSpacing_sBehavior;
}

void __53__CKUIBehavior_searchMessagesBalloonToChevronSpacing__block_invoke()
{
  searchMessagesBalloonToChevronSpacing_sBehavior = 0x4028000000000000;
}

- (double)searchMessagesHorizontalBalloonMargin
{
  if (searchMessagesHorizontalBalloonMargin_once != -1)
    dispatch_once(&searchMessagesHorizontalBalloonMargin_once, &__block_literal_global_1332);
  return *(double *)&searchMessagesHorizontalBalloonMargin_sBehavior;
}

void __53__CKUIBehavior_searchMessagesHorizontalBalloonMargin__block_invoke()
{
  searchMessagesHorizontalBalloonMargin_sBehavior = 0x4052000000000000;
}

- (CGSize)searchMessagesAvatarSize
{
  double v2;
  double v3;
  CGSize result;

  if (searchMessagesAvatarSize_once != -1)
    dispatch_once(&searchMessagesAvatarSize_once, &__block_literal_global_1333);
  v2 = *(double *)&searchMessagesAvatarSize_sBehavior_0;
  v3 = *(double *)&searchMessagesAvatarSize_sBehavior_1;
  result.height = v3;
  result.width = v2;
  return result;
}

void __40__CKUIBehavior_searchMessagesAvatarSize__block_invoke()
{
  searchMessagesAvatarSize_sBehavior_0 = 0x403C000000000000;
  searchMessagesAvatarSize_sBehavior_1 = 0x403C000000000000;
}

- (unint64_t)searchMessagesMaxSummaryLength
{
  if (searchMessagesMaxSummaryLength_once != -1)
    dispatch_once(&searchMessagesMaxSummaryLength_once, &__block_literal_global_1334);
  if (searchMessagesMaxSummaryLength_sBehavior)
    return 200;
  else
    return 0;
}

void __46__CKUIBehavior_searchMessagesMaxSummaryLength__block_invoke()
{
  searchMessagesMaxSummaryLength_sBehavior = 1;
}

- (UIColor)searchMessagesConversationLabelColor
{
  if (searchMessagesConversationLabelColor_once != -1)
    dispatch_once(&searchMessagesConversationLabelColor_once, &__block_literal_global_1335);
  return (UIColor *)(id)searchMessagesConversationLabelColor_sBehavior;
}

void __52__CKUIBehavior_searchMessagesConversationLabelColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "labelColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)searchMessagesConversationLabelColor_sBehavior;
  searchMessagesConversationLabelColor_sBehavior = v0;

}

- (UIColor)searchMessagesSenderLabelColor
{
  if (searchMessagesSenderLabelColor_once != -1)
    dispatch_once(&searchMessagesSenderLabelColor_once, &__block_literal_global_1336);
  return (UIColor *)(id)searchMessagesSenderLabelColor_sBehavior;
}

void __46__CKUIBehavior_searchMessagesSenderLabelColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "secondaryLabelColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)searchMessagesSenderLabelColor_sBehavior;
  searchMessagesSenderLabelColor_sBehavior = v0;

}

- (UIColor)searchMessagesFromMeUnannotatedLabelColor
{
  if (searchMessagesFromMeUnannotatedLabelColor_once != -1)
    dispatch_once(&searchMessagesFromMeUnannotatedLabelColor_once, &__block_literal_global_1337_0);
  return (UIColor *)(id)searchMessagesFromMeUnannotatedLabelColor_sBehavior;
}

void __57__CKUIBehavior_searchMessagesFromMeUnannotatedLabelColor__block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "colorWithAlphaComponent:", 0.6);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)searchMessagesFromMeUnannotatedLabelColor_sBehavior;
  searchMessagesFromMeUnannotatedLabelColor_sBehavior = v0;

}

- (UIFont)searchMessagesSenderFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchMessagesSenderFont_sContentSizeCategory_searchMessagesSenderFont, (UIContentSizeCategory)v2)|| searchMessagesSenderFont_sIsIncreaseContrastEnabled_searchMessagesSenderFont != v3|| searchMessagesSenderFont_sIsBoldTextEnabled_searchMessagesSenderFont != IsBoldTextEnabled|| (v10 = searchMessagesSenderFont_sTextFontSize_searchMessagesSenderFont, *(double *)&searchMessagesSenderFont_sTextFontSize_searchMessagesSenderFont != v5)|| (v10 = searchMessagesSenderFont_sCustomTextFontSize_searchMessagesSenderFont, *(double *)&searchMessagesSenderFont_sCustomTextFontSize_searchMessagesSenderFont != v6)|| (objc_msgSend((id)searchMessagesSenderFont_sCustomTextFontName_searchMessagesSenderFont, "isEqualToString:", v9, *(double *)&searchMessagesSenderFont_sCustomTextFontSize_searchMessagesSenderFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)searchMessagesSenderFont_sBehavior;
    searchMessagesSenderFont_sBehavior = v11;

    objc_storeStrong((id *)&searchMessagesSenderFont_sContentSizeCategory_searchMessagesSenderFont, v2);
    searchMessagesSenderFont_sIsIncreaseContrastEnabled_searchMessagesSenderFont = v3;
    searchMessagesSenderFont_sIsBoldTextEnabled_searchMessagesSenderFont = IsBoldTextEnabled;
    searchMessagesSenderFont_sTextFontSize_searchMessagesSenderFont = *(_QWORD *)&v5;
    searchMessagesSenderFont_sCustomTextFontSize_searchMessagesSenderFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchMessagesSenderFont_sCustomTextFontName_searchMessagesSenderFont, v8);
  }
  v13 = (UIFont *)(id)searchMessagesSenderFont_sBehavior;

  return v13;
}

- (UIFont)searchMessagesDMConversationFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  UIFont *v12;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchMessagesDMConversationFont_sContentSizeCategory_searchMessagesDMConversationFont, (UIContentSizeCategory)v2)|| searchMessagesDMConversationFont_sIsIncreaseContrastEnabled_searchMessagesDMConversationFont != v3|| searchMessagesDMConversationFont_sIsBoldTextEnabled_searchMessagesDMConversationFont != IsBoldTextEnabled|| *(double *)&searchMessagesDMConversationFont_sTextFontSize_searchMessagesDMConversationFont != v5|| *(double *)&searchMessagesDMConversationFont_sCustomTextFontSize_searchMessagesDMConversationFont != v6|| (objc_msgSend((id)searchMessagesDMConversationFont_sCustomTextFontName_searchMessagesDMConversationFont, "isEqualToString:", v9, *(double *)&searchMessagesDMConversationFont_sCustomTextFontSize_searchMessagesDMConversationFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "_preferredFontForTextStyle:weight:", *MEMORY[0x1E0CEB548], *MEMORY[0x1E0DC1438]);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)searchMessagesDMConversationFont_sBehavior;
    searchMessagesDMConversationFont_sBehavior = v10;

    objc_storeStrong((id *)&searchMessagesDMConversationFont_sContentSizeCategory_searchMessagesDMConversationFont, v2);
    searchMessagesDMConversationFont_sIsIncreaseContrastEnabled_searchMessagesDMConversationFont = v3;
    searchMessagesDMConversationFont_sIsBoldTextEnabled_searchMessagesDMConversationFont = IsBoldTextEnabled;
    searchMessagesDMConversationFont_sTextFontSize_searchMessagesDMConversationFont = *(_QWORD *)&v5;
    searchMessagesDMConversationFont_sCustomTextFontSize_searchMessagesDMConversationFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchMessagesDMConversationFont_sCustomTextFontName_searchMessagesDMConversationFont, v8);
  }
  v12 = (UIFont *)(id)searchMessagesDMConversationFont_sBehavior;

  return v12;
}

- (UIFont)searchMessagesGroupConversationFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchMessagesGroupConversationFont_sContentSizeCategory_searchMessagesGroupConversationFont, (UIContentSizeCategory)v3)|| searchMessagesGroupConversationFont_sIsIncreaseContrastEnabled_searchMessagesGroupConversationFont != v4|| searchMessagesGroupConversationFont_sIsBoldTextEnabled_searchMessagesGroupConversationFont != IsBoldTextEnabled|| (v11 = searchMessagesGroupConversationFont_sTextFontSize_searchMessagesGroupConversationFont, *(double *)&searchMessagesGroupConversationFont_sTextFontSize_searchMessagesGroupConversationFont != v6)|| (v11 = searchMessagesGroupConversationFont_sCustomTextFontSize_searchMessagesGroupConversationFont, *(double *)&searchMessagesGroupConversationFont_sCustomTextFontSize_searchMessagesGroupConversationFont != v7)|| (objc_msgSend((id)searchMessagesGroupConversationFont_sCustomTextFontName_searchMessagesGroupConversationFont, "isEqualToString:", v10, *(double *)&searchMessagesGroupConversationFont_sCustomTextFontSize_searchMessagesGroupConversationFont) & 1) == 0)
  {
    -[CKUIBehavior searchMessagesDMConversationFont](self, "searchMessagesDMConversationFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)searchMessagesGroupConversationFont_sBehavior;
    searchMessagesGroupConversationFont_sBehavior = v12;

    objc_storeStrong((id *)&searchMessagesGroupConversationFont_sContentSizeCategory_searchMessagesGroupConversationFont, v3);
    searchMessagesGroupConversationFont_sIsIncreaseContrastEnabled_searchMessagesGroupConversationFont = v4;
    searchMessagesGroupConversationFont_sIsBoldTextEnabled_searchMessagesGroupConversationFont = IsBoldTextEnabled;
    searchMessagesGroupConversationFont_sTextFontSize_searchMessagesGroupConversationFont = *(_QWORD *)&v6;
    searchMessagesGroupConversationFont_sCustomTextFontSize_searchMessagesGroupConversationFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&searchMessagesGroupConversationFont_sCustomTextFontName_searchMessagesGroupConversationFont, v9);
  }
  v14 = (UIFont *)(id)searchMessagesGroupConversationFont_sBehavior;

  return v14;
}

- (UIFont)searchMessagesBalloonFont
{
  void *v3;
  int v4;
  int IsBoldTextEnabled;
  double v6;
  double v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v6 = CKUserPreferenceFontSize();
  v7 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v8, "length"))
    v9 = v8;
  else
    v9 = CFSTR("None");
  v10 = v9;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchMessagesBalloonFont_sContentSizeCategory_searchMessagesBalloonFont, (UIContentSizeCategory)v3)|| searchMessagesBalloonFont_sIsIncreaseContrastEnabled_searchMessagesBalloonFont != v4|| searchMessagesBalloonFont_sIsBoldTextEnabled_searchMessagesBalloonFont != IsBoldTextEnabled|| (v11 = searchMessagesBalloonFont_sTextFontSize_searchMessagesBalloonFont, *(double *)&searchMessagesBalloonFont_sTextFontSize_searchMessagesBalloonFont != v6)|| (v11 = searchMessagesBalloonFont_sCustomTextFontSize_searchMessagesBalloonFont, *(double *)&searchMessagesBalloonFont_sCustomTextFontSize_searchMessagesBalloonFont != v7)|| (objc_msgSend((id)searchMessagesBalloonFont_sCustomTextFontName_searchMessagesBalloonFont, "isEqualToString:", v10, *(double *)&searchMessagesBalloonFont_sCustomTextFontSize_searchMessagesBalloonFont) & 1) == 0)
  {
    -[CKUIBehavior balloonTextFont](self, "balloonTextFont", *(double *)&v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)searchMessagesBalloonFont_sBehavior;
    searchMessagesBalloonFont_sBehavior = v12;

    objc_storeStrong((id *)&searchMessagesBalloonFont_sContentSizeCategory_searchMessagesBalloonFont, v3);
    searchMessagesBalloonFont_sIsIncreaseContrastEnabled_searchMessagesBalloonFont = v4;
    searchMessagesBalloonFont_sIsBoldTextEnabled_searchMessagesBalloonFont = IsBoldTextEnabled;
    searchMessagesBalloonFont_sTextFontSize_searchMessagesBalloonFont = *(_QWORD *)&v6;
    searchMessagesBalloonFont_sCustomTextFontSize_searchMessagesBalloonFont = *(_QWORD *)&v7;
    objc_storeStrong((id *)&searchMessagesBalloonFont_sCustomTextFontName_searchMessagesBalloonFont, v9);
  }
  v14 = (UIFont *)(id)searchMessagesBalloonFont_sBehavior;

  return v14;
}

- (UIFont)searchMessagesDateFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchMessagesDateFont_sContentSizeCategory_searchMessagesDateFont, (UIContentSizeCategory)v2)|| searchMessagesDateFont_sIsIncreaseContrastEnabled_searchMessagesDateFont != v3|| searchMessagesDateFont_sIsBoldTextEnabled_searchMessagesDateFont != IsBoldTextEnabled|| (v10 = searchMessagesDateFont_sTextFontSize_searchMessagesDateFont, *(double *)&searchMessagesDateFont_sTextFontSize_searchMessagesDateFont != v5)|| (v10 = searchMessagesDateFont_sCustomTextFontSize_searchMessagesDateFont, *(double *)&searchMessagesDateFont_sCustomTextFontSize_searchMessagesDateFont != v6)|| (objc_msgSend((id)searchMessagesDateFont_sCustomTextFontName_searchMessagesDateFont, "isEqualToString:", v9, *(double *)&searchMessagesDateFont_sCustomTextFontSize_searchMessagesDateFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)searchMessagesDateFont_sBehavior;
    searchMessagesDateFont_sBehavior = v11;

    objc_storeStrong((id *)&searchMessagesDateFont_sContentSizeCategory_searchMessagesDateFont, v2);
    searchMessagesDateFont_sIsIncreaseContrastEnabled_searchMessagesDateFont = v3;
    searchMessagesDateFont_sIsBoldTextEnabled_searchMessagesDateFont = IsBoldTextEnabled;
    searchMessagesDateFont_sTextFontSize_searchMessagesDateFont = *(_QWORD *)&v5;
    searchMessagesDateFont_sCustomTextFontSize_searchMessagesDateFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchMessagesDateFont_sCustomTextFontName_searchMessagesDateFont, v8);
  }
  v13 = (UIFont *)(id)searchMessagesDateFont_sBehavior;

  return v13;
}

- (double)searchPhotosThumbnailWidth
{
  if (searchPhotosThumbnailWidth_once != -1)
    dispatch_once(&searchPhotosThumbnailWidth_once, &__block_literal_global_1338);
  return *(double *)&searchPhotosThumbnailWidth_sBehavior;
}

double __42__CKUIBehavior_searchPhotosThumbnailWidth__block_invoke()
{
  double result;
  id v1;
  CGRect v2;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_referenceBounds");
  *(double *)&searchPhotosThumbnailWidth_sBehavior = CGRectGetWidth(v2) * 0.5;

  return result;
}

- (double)searchPhotosSeeAllCellCornerRadius
{
  if (searchPhotosSeeAllCellCornerRadius_once != -1)
    dispatch_once(&searchPhotosSeeAllCellCornerRadius_once, &__block_literal_global_1339);
  return 0.0;
}

- (double)searchPhotosCellZKWAndDetailsCornerRadius
{
  if (searchPhotosCellZKWAndDetailsCornerRadius_once != -1)
    dispatch_once(&searchPhotosCellZKWAndDetailsCornerRadius_once, &__block_literal_global_1340_0);
  return *(double *)&searchPhotosCellZKWAndDetailsCornerRadius_sBehavior;
}

void __57__CKUIBehavior_searchPhotosCellZKWAndDetailsCornerRadius__block_invoke()
{
  searchPhotosCellZKWAndDetailsCornerRadius_sBehavior = 0x4010000000000000;
}

- (double)searchPhotosInterItemSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __44__CKUIBehavior_searchPhotosInterItemSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchPhotosInterItemSpacing_once != -1)
    dispatch_once(&searchPhotosInterItemSpacing_once, block);
  return *(double *)&searchPhotosInterItemSpacing_sBehavior;
}

uint64_t __44__CKUIBehavior_searchPhotosInterItemSpacing__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsInterItemSpacing");
  searchPhotosInterItemSpacing_sBehavior = v2;
  return result;
}

- (double)searchPhotosInterItemSpacingDetailsView
{
  if (searchPhotosInterItemSpacingDetailsView_once != -1)
    dispatch_once(&searchPhotosInterItemSpacingDetailsView_once, &__block_literal_global_1341);
  return *(double *)&searchPhotosInterItemSpacingDetailsView_sBehavior;
}

double __55__CKUIBehavior_searchPhotosInterItemSpacingDetailsView__block_invoke()
{
  double v0;
  double result;

  if (CKMainScreenScale_once_41 != -1)
    dispatch_once(&CKMainScreenScale_once_41, &__block_literal_global_4568);
  v0 = *(double *)&CKMainScreenScale_sMainScreenScale_41;
  if (*(double *)&CKMainScreenScale_sMainScreenScale_41 == 0.0)
    v0 = 1.0;
  result = round(v0 * 1.5) / v0;
  searchPhotosInterItemSpacingDetailsView_sBehavior = *(_QWORD *)&result;
  return result;
}

- (double)searchPhotosZKWAndDetailsInterItemSpacing
{
  if (searchPhotosZKWAndDetailsInterItemSpacing_once != -1)
    dispatch_once(&searchPhotosZKWAndDetailsInterItemSpacing_once, &__block_literal_global_1342);
  return *(double *)&searchPhotosZKWAndDetailsInterItemSpacing_sBehavior;
}

void __57__CKUIBehavior_searchPhotosZKWAndDetailsInterItemSpacing__block_invoke()
{
  searchPhotosZKWAndDetailsInterItemSpacing_sBehavior = 0x4000000000000000;
}

- (double)searchPhotosSegmentedControlBottomPadding
{
  if (searchPhotosSegmentedControlBottomPadding_once != -1)
    dispatch_once(&searchPhotosSegmentedControlBottomPadding_once, &__block_literal_global_1343_0);
  return *(double *)&searchPhotosSegmentedControlBottomPadding_sBehavior;
}

void __57__CKUIBehavior_searchPhotosSegmentedControlBottomPadding__block_invoke()
{
  searchPhotosSegmentedControlBottomPadding_sBehavior = 0x4034000000000000;
}

- (double)searchLinksThumbnailWidth
{
  if (searchLinksThumbnailWidth_once != -1)
    dispatch_once(&searchLinksThumbnailWidth_once, &__block_literal_global_1344);
  return *(double *)&searchLinksThumbnailWidth_sBehavior;
}

void __41__CKUIBehavior_searchLinksThumbnailWidth__block_invoke()
{
  id v0;
  CGRect v1;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_referenceBounds");
  searchLinksThumbnailWidth_sBehavior = CGRectGetWidth(v1);

}

- (double)searchLinksInterItemSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __43__CKUIBehavior_searchLinksInterItemSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchLinksInterItemSpacing_once != -1)
    dispatch_once(&searchLinksInterItemSpacing_once, block);
  return *(double *)&searchLinksInterItemSpacing_sBehavior;
}

uint64_t __43__CKUIBehavior_searchLinksInterItemSpacing__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsInterItemSpacing");
  searchLinksInterItemSpacing_sBehavior = v2;
  return result;
}

- (double)searchLinksCellCornerRadius
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __43__CKUIBehavior_searchLinksCellCornerRadius__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchLinksCellCornerRadius_once != -1)
    dispatch_once(&searchLinksCellCornerRadius_once, block);
  return *(double *)&searchLinksCellCornerRadius_sBehavior;
}

uint64_t __43__CKUIBehavior_searchLinksCellCornerRadius__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsCellCornerRadius");
  searchLinksCellCornerRadius_sBehavior = v2;
  return result;
}

- (double)searchLinksFractionalHeightScale
{
  if (searchLinksFractionalHeightScale_once != -1)
    dispatch_once(&searchLinksFractionalHeightScale_once, &__block_literal_global_1345_0);
  return *(double *)&searchLinksFractionalHeightScale_sBehavior;
}

void __48__CKUIBehavior_searchLinksFractionalHeightScale__block_invoke()
{
  searchLinksFractionalHeightScale_sBehavior = 0x3FEB333333333333;
}

- (double)searchLinksFractionalWidthScale
{
  if (searchLinksFractionalWidthScale_once != -1)
    dispatch_once(&searchLinksFractionalWidthScale_once, &__block_literal_global_1346);
  return *(double *)&searchLinksFractionalWidthScale_sBehavior;
}

void __47__CKUIBehavior_searchLinksFractionalWidthScale__block_invoke()
{
  searchLinksFractionalWidthScale_sBehavior = 0x3FF3333333333333;
}

- (double)searchAttachmentsInterItemSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __49__CKUIBehavior_searchAttachmentsInterItemSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchAttachmentsInterItemSpacing_once != -1)
    dispatch_once(&searchAttachmentsInterItemSpacing_once, block);
  return *(double *)&searchAttachmentsInterItemSpacing_sBehavior;
}

uint64_t __49__CKUIBehavior_searchAttachmentsInterItemSpacing__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsInterItemSpacing");
  searchAttachmentsInterItemSpacing_sBehavior = v2;
  return result;
}

- (double)searchAttachmentsCellCornerRadius
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __49__CKUIBehavior_searchAttachmentsCellCornerRadius__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchAttachmentsCellCornerRadius_once != -1)
    dispatch_once(&searchAttachmentsCellCornerRadius_once, block);
  return *(double *)&searchAttachmentsCellCornerRadius_sBehavior;
}

uint64_t __49__CKUIBehavior_searchAttachmentsCellCornerRadius__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsCellCornerRadius");
  searchAttachmentsCellCornerRadius_sBehavior = v2;
  return result;
}

- (double)searchAttachmentsCellDatePadding
{
  if (searchAttachmentsCellDatePadding_once != -1)
    dispatch_once(&searchAttachmentsCellDatePadding_once, &__block_literal_global_1347_0);
  return *(double *)&searchAttachmentsCellDatePadding_sBehavior;
}

void __48__CKUIBehavior_searchAttachmentsCellDatePadding__block_invoke()
{
  searchAttachmentsCellDatePadding_sBehavior = 0x4010000000000000;
}

- (double)searchAttachmentsCellPadding
{
  if (searchAttachmentsCellPadding_once != -1)
    dispatch_once(&searchAttachmentsCellPadding_once, &__block_literal_global_1348);
  return 0.0;
}

- (double)searchAttachmentsImageTopPadding
{
  if (searchAttachmentsImageTopPadding_once != -1)
    dispatch_once(&searchAttachmentsImageTopPadding_once, &__block_literal_global_1349);
  return 0.0;
}

- (double)searchAttachmentsTitleTopPadding
{
  if (searchAttachmentsTitleTopPadding_once != -1)
    dispatch_once(&searchAttachmentsTitleTopPadding_once, &__block_literal_global_1350_0);
  return *(double *)&searchAttachmentsTitleTopPadding_sBehavior;
}

void __48__CKUIBehavior_searchAttachmentsTitleTopPadding__block_invoke()
{
  searchAttachmentsTitleTopPadding_sBehavior = 0x4028000000000000;
}

- (CGSize)searchAttachmentsThumbnailAlignmentSize
{
  double v2;
  double v3;
  CGSize result;

  if (searchAttachmentsThumbnailAlignmentSize_once != -1)
    dispatch_once(&searchAttachmentsThumbnailAlignmentSize_once, &__block_literal_global_1351);
  v3 = *((double *)&searchAttachmentsThumbnailAlignmentSize_sBehavior + 1);
  v2 = *(double *)&searchAttachmentsThumbnailAlignmentSize_sBehavior;
  result.height = v3;
  result.width = v2;
  return result;
}

__n128 __55__CKUIBehavior_searchAttachmentsThumbnailAlignmentSize__block_invoke()
{
  __n128 result;

  result = *(__n128 *)MEMORY[0x1E0C9D820];
  searchAttachmentsThumbnailAlignmentSize_sBehavior = *MEMORY[0x1E0C9D820];
  return result;
}

- (double)searchLocationsInterItemSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __47__CKUIBehavior_searchLocationsInterItemSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchLocationsInterItemSpacing_once != -1)
    dispatch_once(&searchLocationsInterItemSpacing_once, block);
  return *(double *)&searchLocationsInterItemSpacing_sBehavior;
}

uint64_t __47__CKUIBehavior_searchLocationsInterItemSpacing__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsInterItemSpacing");
  searchLocationsInterItemSpacing_sBehavior = v2;
  return result;
}

- (double)searchLocationCellCornerRadius
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __46__CKUIBehavior_searchLocationCellCornerRadius__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchLocationCellCornerRadius_once != -1)
    dispatch_once(&searchLocationCellCornerRadius_once, block);
  return *(double *)&searchLocationCellCornerRadius_sBehavior;
}

uint64_t __46__CKUIBehavior_searchLocationCellCornerRadius__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsCellCornerRadius");
  searchLocationCellCornerRadius_sBehavior = v2;
  return result;
}

- (double)searchHighlightsInterItemSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __48__CKUIBehavior_searchHighlightsInterItemSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchHighlightsInterItemSpacing_once != -1)
    dispatch_once(&searchHighlightsInterItemSpacing_once, block);
  return *(double *)&searchHighlightsInterItemSpacing_sBehavior;
}

uint64_t __48__CKUIBehavior_searchHighlightsInterItemSpacing__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsInterItemSpacing");
  searchHighlightsInterItemSpacing_sBehavior = v2;
  return result;
}

- (double)searchCollaborationInterItemSpacing
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __51__CKUIBehavior_searchCollaborationInterItemSpacing__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (searchCollaborationInterItemSpacing_once != -1)
    dispatch_once(&searchCollaborationInterItemSpacing_once, block);
  return *(double *)&searchCollaborationInterItemSpacing_sBehavior;
}

uint64_t __51__CKUIBehavior_searchCollaborationInterItemSpacing__block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "searchResultsInterItemSpacing");
  searchCollaborationInterItemSpacing_sBehavior = v2;
  return result;
}

- (double)searchMessageCellHeightForDisplayScale:(double)a3
{
  double result;

  +[CKConversationListCell cellHeightForDisplayScale:](CKConversationSearchResultEmbeddedCell, "cellHeightForDisplayScale:", a3);
  return result;
}

- (UIFont)searchResultLabelFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchResultLabelFont_sContentSizeCategory_searchResultLabelFont, (UIContentSizeCategory)v2)|| searchResultLabelFont_sIsIncreaseContrastEnabled_searchResultLabelFont != v3|| searchResultLabelFont_sIsBoldTextEnabled_searchResultLabelFont != IsBoldTextEnabled|| (v10 = searchResultLabelFont_sTextFontSize_searchResultLabelFont, *(double *)&searchResultLabelFont_sTextFontSize_searchResultLabelFont != v5)|| (v10 = searchResultLabelFont_sCustomTextFontSize_searchResultLabelFont, *(double *)&searchResultLabelFont_sCustomTextFontSize_searchResultLabelFont != v6)|| (objc_msgSend((id)searchResultLabelFont_sCustomTextFontName_searchResultLabelFont, "isEqualToString:", v9, *(double *)&searchResultLabelFont_sCustomTextFontSize_searchResultLabelFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB548], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)searchResultLabelFont_sBehavior;
    searchResultLabelFont_sBehavior = v11;

    objc_storeStrong((id *)&searchResultLabelFont_sContentSizeCategory_searchResultLabelFont, v2);
    searchResultLabelFont_sIsIncreaseContrastEnabled_searchResultLabelFont = v3;
    searchResultLabelFont_sIsBoldTextEnabled_searchResultLabelFont = IsBoldTextEnabled;
    searchResultLabelFont_sTextFontSize_searchResultLabelFont = *(_QWORD *)&v5;
    searchResultLabelFont_sCustomTextFontSize_searchResultLabelFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchResultLabelFont_sCustomTextFontName_searchResultLabelFont, v8);
  }
  v13 = (UIFont *)(id)searchResultLabelFont_sBehavior;

  return v13;
}

- (UIFont)searchResultLabelBoldFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchResultLabelBoldFont_sContentSizeCategory_searchResultLabelBoldFont, (UIContentSizeCategory)v2)|| searchResultLabelBoldFont_sIsIncreaseContrastEnabled_searchResultLabelBoldFont != v3|| searchResultLabelBoldFont_sIsBoldTextEnabled_searchResultLabelBoldFont != IsBoldTextEnabled|| (v10 = searchResultLabelBoldFont_sTextFontSize_searchResultLabelBoldFont, *(double *)&searchResultLabelBoldFont_sTextFontSize_searchResultLabelBoldFont != v5)|| (v10 = searchResultLabelBoldFont_sCustomTextFontSize_searchResultLabelBoldFont, *(double *)&searchResultLabelBoldFont_sCustomTextFontSize_searchResultLabelBoldFont != v6)|| (objc_msgSend((id)searchResultLabelBoldFont_sCustomTextFontName_searchResultLabelBoldFont, "isEqualToString:", v9, *(double *)&searchResultLabelBoldFont_sCustomTextFontSize_searchResultLabelBoldFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB548], 2, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)searchResultLabelBoldFont_sBehavior;
    searchResultLabelBoldFont_sBehavior = v12;

    objc_storeStrong((id *)&searchResultLabelBoldFont_sContentSizeCategory_searchResultLabelBoldFont, v2);
    searchResultLabelBoldFont_sIsIncreaseContrastEnabled_searchResultLabelBoldFont = v3;
    searchResultLabelBoldFont_sIsBoldTextEnabled_searchResultLabelBoldFont = IsBoldTextEnabled;
    searchResultLabelBoldFont_sTextFontSize_searchResultLabelBoldFont = *(_QWORD *)&v5;
    searchResultLabelBoldFont_sCustomTextFontSize_searchResultLabelBoldFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchResultLabelBoldFont_sCustomTextFontName_searchResultLabelBoldFont, v8);
  }
  v14 = (UIFont *)(id)searchResultLabelBoldFont_sBehavior;

  return v14;
}

- (UIFont)searchIndexingTitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  UIFont *v14;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchIndexingTitleFont_sContentSizeCategory_searchIndexingTitleFont, (UIContentSizeCategory)v2)|| searchIndexingTitleFont_sIsIncreaseContrastEnabled_searchIndexingTitleFont != v3|| searchIndexingTitleFont_sIsBoldTextEnabled_searchIndexingTitleFont != IsBoldTextEnabled|| (v10 = searchIndexingTitleFont_sTextFontSize_searchIndexingTitleFont, *(double *)&searchIndexingTitleFont_sTextFontSize_searchIndexingTitleFont != v5)|| (v10 = searchIndexingTitleFont_sCustomTextFontSize_searchIndexingTitleFont, *(double *)&searchIndexingTitleFont_sCustomTextFontSize_searchIndexingTitleFont != v6)|| (objc_msgSend((id)searchIndexingTitleFont_sCustomTextFontName_searchIndexingTitleFont, "isEqualToString:", v9, *(double *)&searchIndexingTitleFont_sCustomTextFontSize_searchIndexingTitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:", *MEMORY[0x1E0CEB5B8], 0x8000, 0, *(double *)&v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v11, 0.0);
    v12 = objc_claimAutoreleasedReturnValue();

    v13 = (void *)searchIndexingTitleFont_sBehavior;
    searchIndexingTitleFont_sBehavior = v12;

    objc_storeStrong((id *)&searchIndexingTitleFont_sContentSizeCategory_searchIndexingTitleFont, v2);
    searchIndexingTitleFont_sIsIncreaseContrastEnabled_searchIndexingTitleFont = v3;
    searchIndexingTitleFont_sIsBoldTextEnabled_searchIndexingTitleFont = IsBoldTextEnabled;
    searchIndexingTitleFont_sTextFontSize_searchIndexingTitleFont = *(_QWORD *)&v5;
    searchIndexingTitleFont_sCustomTextFontSize_searchIndexingTitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchIndexingTitleFont_sCustomTextFontName_searchIndexingTitleFont, v8);
  }
  v14 = (UIFont *)(id)searchIndexingTitleFont_sBehavior;

  return v14;
}

- (UIFont)searchIndexingSubtitleFont
{
  void *v2;
  int v3;
  int IsBoldTextEnabled;
  double v5;
  double v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIFont *v13;

  CKPreferredContentSizeCategory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = UIAccessibilityDarkerSystemColorsEnabled();
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v5 = CKUserPreferenceFontSize();
  v6 = CKAccessibilityCustomTextFontSize();
  CKAccessibilityCustomTextFontName();
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString length](v7, "length"))
    v8 = v7;
  else
    v8 = CFSTR("None");
  v9 = v8;
  if (UIContentSizeCategoryCompareToCategory((UIContentSizeCategory)searchIndexingSubtitleFont_sContentSizeCategory_searchIndexingSubtitleFont, (UIContentSizeCategory)v2)|| searchIndexingSubtitleFont_sIsIncreaseContrastEnabled_searchIndexingSubtitleFont != v3|| searchIndexingSubtitleFont_sIsBoldTextEnabled_searchIndexingSubtitleFont != IsBoldTextEnabled|| (v10 = searchIndexingSubtitleFont_sTextFontSize_searchIndexingSubtitleFont, *(double *)&searchIndexingSubtitleFont_sTextFontSize_searchIndexingSubtitleFont != v5)|| (v10 = searchIndexingSubtitleFont_sCustomTextFontSize_searchIndexingSubtitleFont, *(double *)&searchIndexingSubtitleFont_sCustomTextFontSize_searchIndexingSubtitleFont != v6)|| (objc_msgSend((id)searchIndexingSubtitleFont_sCustomTextFontName_searchIndexingSubtitleFont, "isEqualToString:", v9, *(double *)&searchIndexingSubtitleFont_sCustomTextFontSize_searchIndexingSubtitleFont) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC1350], "preferredFontForTextStyle:", *MEMORY[0x1E0CEB588], *(double *)&v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)searchIndexingSubtitleFont_sBehavior;
    searchIndexingSubtitleFont_sBehavior = v11;

    objc_storeStrong((id *)&searchIndexingSubtitleFont_sContentSizeCategory_searchIndexingSubtitleFont, v2);
    searchIndexingSubtitleFont_sIsIncreaseContrastEnabled_searchIndexingSubtitleFont = v3;
    searchIndexingSubtitleFont_sIsBoldTextEnabled_searchIndexingSubtitleFont = IsBoldTextEnabled;
    searchIndexingSubtitleFont_sTextFontSize_searchIndexingSubtitleFont = *(_QWORD *)&v5;
    searchIndexingSubtitleFont_sCustomTextFontSize_searchIndexingSubtitleFont = *(_QWORD *)&v6;
    objc_storeStrong((id *)&searchIndexingSubtitleFont_sCustomTextFontName_searchIndexingSubtitleFont, v8);
  }
  v13 = (UIFont *)(id)searchIndexingSubtitleFont_sBehavior;

  return v13;
}

- (UIFont)signInTitleFont
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0DC1358], "preferredFontDescriptorWithTextStyle:", *MEMORY[0x1E0CEB580]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = *MEMORY[0x1E0DC13C0];
  v9 = *MEMORY[0x1E0DC1458];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *MEMORY[0x1E0DC1420]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v10, &v9, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, &v11, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fontDescriptorByAddingAttributes:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC1350], "fontWithDescriptor:size:", v6, 0.0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return (UIFont *)v7;
}

- (UIImage)signInAppIconImage
{
  if (signInAppIconImage_once != -1)
    dispatch_once(&signInAppIconImage_once, &__block_literal_global_1353_0);
  return (UIImage *)(id)signInAppIconImage_sBehavior;
}

void __34__CKUIBehavior_signInAppIconImage__block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v0 = (void *)MEMORY[0x1E0CEA638];
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "scale");
  objc_msgSend(v0, "_applicationIconImageForBundleIdentifier:format:scale:", CFSTR("com.apple.MobileSMS"), 2);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)signInAppIconImage_sBehavior;
  signInAppIconImage_sBehavior = v1;

}

- (double)signInSplashImageTopPadding
{
  if (signInSplashImageTopPadding_once != -1)
    dispatch_once(&signInSplashImageTopPadding_once, &__block_literal_global_1354_0);
  return *(double *)&signInSplashImageTopPadding_sBehavior;
}

void __43__CKUIBehavior_signInSplashImageTopPadding__block_invoke()
{
  signInSplashImageTopPadding_sBehavior = 0x4034000000000000;
}

- (double)signInSplashImageBottomPadding
{
  if (signInSplashImageBottomPadding_once != -1)
    dispatch_once(&signInSplashImageBottomPadding_once, &__block_literal_global_1355);
  return *(double *)&signInSplashImageBottomPadding_sBehavior;
}

void __46__CKUIBehavior_signInSplashImageBottomPadding__block_invoke()
{
  signInSplashImageBottomPadding_sBehavior = 0x402E000000000000;
}

- (double)signInPrivacyWidthMultiplier
{
  if (signInPrivacyWidthMultiplier_once != -1)
    dispatch_once(&signInPrivacyWidthMultiplier_once, &__block_literal_global_1356_0);
  return *(double *)&signInPrivacyWidthMultiplier_sBehavior;
}

void __44__CKUIBehavior_signInPrivacyWidthMultiplier__block_invoke()
{
  signInPrivacyWidthMultiplier_sBehavior = 0x3FE0000000000000;
}

- (double)signInTitleBottomPadding
{
  if (signInTitleBottomPadding_once != -1)
    dispatch_once(&signInTitleBottomPadding_once, &__block_literal_global_1357);
  return *(double *)&signInTitleBottomPadding_sBehavior;
}

void __40__CKUIBehavior_signInTitleBottomPadding__block_invoke()
{
  signInTitleBottomPadding_sBehavior = 0x4014000000000000;
}

- (UIColor)signInTintColor
{
  if (signInTintColor_once != -1)
    dispatch_once(&signInTintColor_once, &__block_literal_global_1358);
  return 0;
}

- (UIColor)signInActivityIndicatorColor
{
  if (signInActivityIndicatorColor_once != -1)
    dispatch_once(&signInActivityIndicatorColor_once, &__block_literal_global_1359_0);
  return (UIColor *)(id)signInActivityIndicatorColor_sBehavior;
}

void __44__CKUIBehavior_signInActivityIndicatorColor__block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)signInActivityIndicatorColor_sBehavior;
  signInActivityIndicatorColor_sBehavior = v0;

}

- (double)signInContainerWidth
{
  if (signInContainerWidth_once != -1)
    dispatch_once(&signInContainerWidth_once, &__block_literal_global_1360);
  return *(double *)&signInContainerWidth_sBehavior;
}

void __36__CKUIBehavior_signInContainerWidth__block_invoke()
{
  signInContainerWidth_sBehavior = 0x407E000000000000;
}

- (double)signInAuthKitViewWidth
{
  if (signInAuthKitViewWidth_once != -1)
    dispatch_once(&signInAuthKitViewWidth_once, &__block_literal_global_1361);
  return *(double *)&signInAuthKitViewWidth_sBehavior;
}

void __38__CKUIBehavior_signInAuthKitViewWidth__block_invoke()
{
  signInAuthKitViewWidth_sBehavior = 0x4079000000000000;
}

- (double)signInAuthKitViewHeight
{
  if (signInAuthKitViewHeight_once != -1)
    dispatch_once(&signInAuthKitViewHeight_once, &__block_literal_global_1362_0);
  return *(double *)&signInAuthKitViewHeight_sBehavior;
}

void __39__CKUIBehavior_signInAuthKitViewHeight__block_invoke()
{
  signInAuthKitViewHeight_sBehavior = 0x406B800000000000;
}

- (double)signInPrivacyLinkHeight
{
  if (signInPrivacyLinkHeight_once != -1)
    dispatch_once(&signInPrivacyLinkHeight_once, &__block_literal_global_1363);
  return *(double *)&signInPrivacyLinkHeight_sBehavior;
}

void __39__CKUIBehavior_signInPrivacyLinkHeight__block_invoke()
{
  signInPrivacyLinkHeight_sBehavior = 0x4059000000000000;
}

- (id)__ck_localizedString:(id)a3
{
  id v3;
  void *v4;
  void *v5;

  v3 = a3;
  CKFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", v3, &stru_1E276D870, CFSTR("ChatKit"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (double)tipCellLeadingInset
{
  if (tipCellLeadingInset_once != -1)
    dispatch_once(&tipCellLeadingInset_once, &__block_literal_global_1364_0);
  return *(double *)&tipCellLeadingInset_sBehavior;
}

void __35__CKUIBehavior_tipCellLeadingInset__block_invoke()
{
  tipCellLeadingInset_sBehavior = 0x4030000000000000;
}

- (double)tipCellTrailingInset
{
  if (tipCellTrailingInset_once != -1)
    dispatch_once(&tipCellTrailingInset_once, &__block_literal_global_1365);
  return *(double *)&tipCellTrailingInset_sBehavior;
}

void __36__CKUIBehavior_tipCellTrailingInset__block_invoke()
{
  tipCellTrailingInset_sBehavior = 0xC030000000000000;
}

- (double)tipCellMicaAnimationSize
{
  if (tipCellMicaAnimationSize_once != -1)
    dispatch_once(&tipCellMicaAnimationSize_once, &__block_literal_global_1366);
  return *(double *)&tipCellMicaAnimationSize_sBehavior;
}

void __40__CKUIBehavior_tipCellMicaAnimationSize__block_invoke()
{
  tipCellMicaAnimationSize_sBehavior = 0x4050000000000000;
}

- (double)tipCellCornerRadius
{
  if (tipCellCornerRadius_once != -1)
    dispatch_once(&tipCellCornerRadius_once, &__block_literal_global_1367_0);
  return *(double *)&tipCellCornerRadius_sBehavior;
}

void __35__CKUIBehavior_tipCellCornerRadius__block_invoke()
{
  tipCellCornerRadius_sBehavior = 0x402A000000000000;
}

- (double)tipCellMicaAnimationPadding
{
  if (tipCellMicaAnimationPadding_once != -1)
    dispatch_once(&tipCellMicaAnimationPadding_once, &__block_literal_global_1368);
  return *(double *)&tipCellMicaAnimationPadding_sBehavior;
}

void __43__CKUIBehavior_tipCellMicaAnimationPadding__block_invoke()
{
  tipCellMicaAnimationPadding_sBehavior = 0x4024000000000000;
}

- (UIColor)suggestedRepliesViewBackgroundColor
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __51__CKUIBehavior_suggestedRepliesViewBackgroundColor__block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  if (suggestedRepliesViewBackgroundColor_once != -1)
    dispatch_once(&suggestedRepliesViewBackgroundColor_once, block);
  return (UIColor *)(id)suggestedRepliesViewBackgroundColor_sBehavior;
}

void __51__CKUIBehavior_suggestedRepliesViewBackgroundColor__block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "_suggestedRepliesViewBackgroundColor");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)suggestedRepliesViewBackgroundColor_sBehavior;
  suggestedRepliesViewBackgroundColor_sBehavior = v1;

}

- (id)_suggestedRepliesViewBackgroundColor
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)MEMORY[0x1E0CEA478];
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.894117647, 0.898039216, 0.909803922, 1.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "colorWithRed:green:blue:alpha:", 0.149019608, 0.149019608, 0.160784314, 1.0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dynamicColorWithLightColor:darkColor:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (double)suggestedRepliesViewMaxWidth
{
  if (suggestedRepliesViewMaxWidth_once != -1)
    dispatch_once(&suggestedRepliesViewMaxWidth_once, &__block_literal_global_1369);
  return *(double *)&suggestedRepliesViewMaxWidth_sBehavior;
}

void __44__CKUIBehavior_suggestedRepliesViewMaxWidth__block_invoke()
{
  suggestedRepliesViewMaxWidth_sBehavior = 0x4070700000000000;
}

- (int64_t)HUDStyle
{
  return self->_HUDStyle;
}

- (Class)conversationListTableViewClass
{
  return self->_conversationListTableViewClass;
}

- (UIImage)dndActionImage
{
  return self->_dndActionImage;
}

- (UIImage)unDNDActionImage
{
  return self->_unDNDActionImage;
}

- (BOOL)shouldInsetForStatusBarWithSafeArea
{
  return self->_shouldInsetForStatusBarWithSafeArea;
}

- (NSDictionary)transcriptErrorStampFontAttributes
{
  return self->_transcriptErrorStampFontAttributes;
}

- (UIImage)messageReplyImage
{
  return self->_messageReplyImage;
}

- (double)quickReplyListBottomTranscriptSpace
{
  return self->_quickReplyListBottomTranscriptSpace;
}

- (double)quickReplyListTopTranscriptSpace
{
  return self->_quickReplyListTopTranscriptSpace;
}

- (double)additionalQuickReplyListPadding
{
  return self->_additionalQuickReplyListPadding;
}

- (double)spaceBetweenQuickReplyRows
{
  return self->_spaceBetweenQuickReplyRows;
}

- (double)waveformMaxWidth
{
  return self->_waveformMaxWidth;
}

- (double)toFieldInterItemSpacing
{
  return self->_toFieldInterItemSpacing;
}

- (double)toFieldXOffset
{
  return self->_toFieldXOffset;
}

- (double)toFieldYOffset
{
  return self->_toFieldYOffset;
}

- (double)bubbleLeftInsetForQuicktationInEntryView
{
  return self->_bubbleLeftInsetForQuicktationInEntryView;
}

- (CGSize)navBarUnifiedCallButtonSize
{
  double width;
  double height;
  CGSize result;

  width = self->_navBarUnifiedCallButtonSize.width;
  height = self->_navBarUnifiedCallButtonSize.height;
  result.height = height;
  result.width = width;
  return result;
}

- (double)messageHighlightButtonGlyphPointSize
{
  return self->_messageHighlightButtonGlyphPointSize;
}

- (double)appDrawerTitleIconWidth
{
  return self->_appDrawerTitleIconWidth;
}

- (double)appDrawerTitleIconHeight
{
  return self->_appDrawerTitleIconHeight;
}

- (double)searchDetailsSeeAllButtonTrailingMargin
{
  return self->_searchDetailsSeeAllButtonTrailingMargin;
}

- (double)searchResultsTitleHeaderTextLeadingMargin
{
  return self->_searchResultsTitleHeaderTextLeadingMargin;
}

- (double)searchResultsDetailsTitleHeaderTextLeadingMargin
{
  return self->_searchResultsDetailsTitleHeaderTextLeadingMargin;
}

- (double)searchDetailsPhotosShowAllSectionMarginHorizonalInset
{
  return self->_searchDetailsPhotosShowAllSectionMarginHorizonalInset;
}

- (UIFont)searchDetailsSubHeaderFont
{
  return self->_searchDetailsSubHeaderFont;
}

- (double)searchResultsInterItemSpacingDetailsView
{
  return self->_searchResultsInterItemSpacingDetailsView;
}

- (double)searchResultsItemFractionalHeight
{
  return self->_searchResultsItemFractionalHeight;
}

- (double)searchResultsDetailsItemFractionalHeight
{
  return self->_searchResultsDetailsItemFractionalHeight;
}

- (double)searchPhotosCellCornerRadius
{
  return self->_searchPhotosCellCornerRadius;
}

- (double)searchPassesInterItemSpacing
{
  return self->_searchPassesInterItemSpacing;
}

- (double)searchDropdownAvatarDiameter
{
  return self->_searchDropdownAvatarDiameter;
}

- (double)balloonSelectionScrollThresholdTop
{
  return self->_balloonSelectionScrollThresholdTop;
}

- (double)balloonSelectionScrollThresholdBottom
{
  return self->_balloonSelectionScrollThresholdBottom;
}

- (double)balloonSelectionLoadMoreSpinnerHeight
{
  return self->_balloonSelectionLoadMoreSpinnerHeight;
}

- (double)balloonSelectionMaxScrollSpeed
{
  return self->_balloonSelectionMaxScrollSpeed;
}

- (CGSize)signInSplashImageSize
{
  double width;
  double height;
  CGSize result;

  width = self->_signInSplashImageSize.width;
  height = self->_signInSplashImageSize.height;
  result.height = height;
  result.width = width;
  return result;
}

- (CGSize)detonatedItemBalloonViewSize
{
  double width;
  double height;
  CGSize result;

  width = self->_detonatedItemBalloonViewSize.width;
  height = self->_detonatedItemBalloonViewSize.height;
  result.height = height;
  result.width = width;
  return result;
}

- (CGSize)detonatedItemDocumentIconSize
{
  double width;
  double height;
  CGSize result;

  width = self->_detonatedItemDocumentIconSize.width;
  height = self->_detonatedItemDocumentIconSize.height;
  result.height = height;
  result.width = width;
  return result;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_searchDetailsSubHeaderFont, 0);
  objc_storeStrong((id *)&self->_messageReplyImage, 0);
  objc_storeStrong((id *)&self->_transcriptErrorStampFontAttributes, 0);
  objc_storeStrong((id *)&self->_unDNDActionImage, 0);
  objc_storeStrong((id *)&self->_dndActionImage, 0);
  objc_storeStrong((id *)&self->_conversationListTableViewClass, 0);
}

@end
