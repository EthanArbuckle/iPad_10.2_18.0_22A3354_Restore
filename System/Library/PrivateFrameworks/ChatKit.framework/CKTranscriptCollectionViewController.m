@implementation CKTranscriptCollectionViewController

- (id)dataSourceWithCollectionView:(id)a3
{
  id v4;
  id v5;
  void *v6;
  _QWORD v8[5];
  id v9;
  id location;

  v4 = a3;
  location = 0;
  objc_initWeak(&location, self);
  v5 = objc_alloc(MEMORY[0x1E0CEA440]);
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __81__CKTranscriptCollectionViewController_DataSource__dataSourceWithCollectionView___block_invoke;
  v8[3] = &unk_1E274BD28;
  v8[4] = self;
  objc_copyWeak(&v9, &location);
  v6 = (void *)objc_msgSend(v5, "initWithCollectionView:cellProvider:", v4, v8);
  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);

  return v6;
}

id __81__CKTranscriptCollectionViewController_DataSource__dataSourceWithCollectionView___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id WeakRetained;
  void *v12;

  v7 = a4;
  v8 = a3;
  v9 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_ckChatItemWithGUID:inSection:", v7, objc_msgSend(v8, "section"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "collectionView:cellForCKChatItem:atIndexPath:", v9, v10, v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

- (id)generateSnapshotForCKChatItems:(id)a3
{
  id v3;
  NSObject *v4;
  os_signpost_id_t v5;
  NSObject *v6;
  NSObject *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  NSObject *v36;
  os_signpost_id_t spid;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id obj;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint8_t buf[16];
  _BYTE v57[128];
  _BYTE v58[128];
  _BYTE v59[128];
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  +[CKTranscriptCollectionViewController logHandle](CKTranscriptCollectionViewController, "logHandle");
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_signpost_id_generate(v4);

  +[CKTranscriptCollectionViewController logHandle](CKTranscriptCollectionViewController, "logHandle");
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = v6;
  v39 = v5 - 1;
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v7, OS_SIGNPOST_INTERVAL_BEGIN, v5, "generateTranscriptSnapshot", ", buf, 2u);
  }
  spid = v5;

  v40 = objc_alloc_init(MEMORY[0x1E0CEA210]);
  objc_msgSend(v40, "appendSectionsWithIdentifiers:", &unk_1E286F328);
  v8 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v9 = v3;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v52, v59, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v53;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v53 != v12)
          objc_enumerationMutation(v9);
        objc_msgSend(*(id *)(*((_QWORD *)&v52 + 1) + 8 * v13), "IMChatItem", spid);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "guid");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addObject:", v15);

        ++v13;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v52, v59, 16);
    }
    while (v11);
  }

  v16 = (void *)objc_msgSend(v8, "copy");
  objc_msgSend(v40, "appendItemsWithIdentifiers:", v16);

  objc_msgSend(v40, "appendSectionsWithIdentifiers:", &unk_1E286F340);
  v17 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  obj = v9;
  v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v48, v58, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v49;
    v41 = *(_QWORD *)v49;
    do
    {
      v21 = 0;
      v42 = v19;
      do
      {
        if (*(_QWORD *)v49 != v20)
          objc_enumerationMutation(obj);
        objc_msgSend(*(id *)(*((_QWORD *)&v48 + 1) + 8 * v21), "IMChatItem", spid);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v23 = v8;
          v24 = v22;
          objc_msgSend(v24, "visibleAssociatedMessageChatItems");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          v44 = 0u;
          v45 = 0u;
          v46 = 0u;
          v47 = 0u;
          v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v57, 16);
          if (v26)
          {
            v27 = v26;
            v28 = *(_QWORD *)v45;
            do
            {
              v29 = 0;
              do
              {
                if (*(_QWORD *)v45 != v28)
                  objc_enumerationMutation(v25);
                objc_msgSend(*(id *)(*((_QWORD *)&v44 + 1) + 8 * v29), "guid");
                v30 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v17, "addObject:", v30);

                ++v29;
              }
              while (v27 != v29);
              v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v57, 16);
            }
            while (v27);
          }
          objc_msgSend(v24, "messageHighlightChatItem");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v32 = v31;
          if (v31)
          {
            objc_msgSend(v31, "guid");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "addObject:", v33);

          }
          v8 = v23;
          v20 = v41;
          v19 = v42;
        }

        ++v21;
      }
      while (v21 != v19);
      v19 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v48, v58, 16);
    }
    while (v19);
  }

  v34 = (void *)objc_msgSend(v17, "copy");
  objc_msgSend(v40, "appendItemsWithIdentifiers:", v34);

  +[CKTranscriptCollectionViewController logHandle](CKTranscriptCollectionViewController, "logHandle");
  v35 = objc_claimAutoreleasedReturnValue();
  v36 = v35;
  if (v39 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v35))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v36, OS_SIGNPOST_INTERVAL_END, spid, "generateTranscriptSnapshot", ", buf, 2u);
  }

  return v40;
}

- (id)_ckChatItemWithGUID:(id)a3 inSection:(unint64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v6 = a3;
  if (a4 == 1)
  {
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a4)
    {
      v9 = 0;
      goto LABEL_7;
    }
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v8 = v7;
  objc_msgSend(v7, "__ck_chatItemWithGUID:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_7:
  return v9;
}

+ (id)logHandle
{
  if (logHandle_onceToken != -1)
    dispatch_once(&logHandle_onceToken, &__block_literal_global_15);
  return (id)logHandle_sLogHandle;
}

void __61__CKTranscriptCollectionViewController_DataSource__logHandle__block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.Messages", "Transcript");
  v1 = (void *)logHandle_sLogHandle;
  logHandle_sLogHandle = (uint64_t)v0;

}

- (id)logHandle
{
  return (id)objc_msgSend((id)objc_opt_class(), "logHandle");
}

+ (CGSize)defaultCollectionViewSize
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGSize result;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;

  v7 = v4;
  v8 = v6;
  result.height = v8;
  result.width = v7;
  return result;
}

- (id)imChatItems
{
  void *v2;
  void *v3;

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "chatItems");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (NSArray)chatItems
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  NSObject *v8;
  const char *v9;
  uint8_t *v10;
  __int16 v11;
  __int16 v12;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isConsolidatedChatItemsEnabled");

  if (!v4)
    return self->_chatItems;
  if ((-[CKTranscriptCollectionViewController isViewLoaded](self, "isViewLoaded") & 1) != 0)
  {
    if (self->_chatItemController)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "chatItems");
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      return (NSArray *)v6;
    }
    if (!IMOSLoggingEnabled())
      return (NSArray *)MEMORY[0x1E0C9AA60];
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      goto LABEL_13;
    v11 = 0;
    v9 = "Accessing -[CKTranscriptCollectionViewController chatItems] with consolidated chat items enabled = YES but with"
         "out actually having a chatItemController. This not supported and indicates a programmer error. Returning an emp"
         "ty array as a fallback.";
    v10 = (uint8_t *)&v11;
    goto LABEL_12;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
LABEL_13:

      return (NSArray *)MEMORY[0x1E0C9AA60];
    }
    v12 = 0;
    v9 = "Accessing -[CKTranscriptCollectionViewController chatItems] with consolidated chat items enabled = YES is not s"
         "upported before the view is actually loaded. This is a programmer error. Returning an empty array as a fallback"
         ". Please check why you are accessing the chat items that early.";
    v10 = (uint8_t *)&v12;
LABEL_12:
    _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, v9, v10, 2u);
    goto LABEL_13;
  }
  return (NSArray *)MEMORY[0x1E0C9AA60];
}

- (NSArray)associatedChatItems
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  NSObject *v8;
  const char *v9;
  uint8_t *v10;
  __int16 v11;
  __int16 v12;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isConsolidatedChatItemsEnabled");

  if (!v4)
    return self->_associatedChatItems;
  if ((-[CKTranscriptCollectionViewController isViewLoaded](self, "isViewLoaded") & 1) != 0)
  {
    if (self->_chatItemController)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "associatedChatItems");
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      return (NSArray *)v6;
    }
    if (!IMOSLoggingEnabled())
      return (NSArray *)MEMORY[0x1E0C9AA60];
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      goto LABEL_13;
    v11 = 0;
    v9 = "Accessing -[CKTranscriptCollectionViewController associatedChatItems] with consolidated chat items enabled = YE"
         "S but without actually having a chatItemController. This not supported and indicates a programmer error. Return"
         "ing an empty array as a fallback.";
    v10 = (uint8_t *)&v11;
    goto LABEL_12;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
LABEL_13:

      return (NSArray *)MEMORY[0x1E0C9AA60];
    }
    v12 = 0;
    v9 = "Accessing -[CKTranscriptCollectionViewController associatedChatItems] with consolidated chat items enabled = YE"
         "S is not supported before the view is actually loaded. This is a programmer error. Returning an empty array as "
         "a fallback. Please check why you are accessing the chat items that early.";
    v10 = (uint8_t *)&v12;
LABEL_12:
    _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, v9, v10, 2u);
    goto LABEL_13;
  }
  return (NSArray *)MEMORY[0x1E0C9AA60];
}

- (NSString)transcriptIdentifier
{
  NSString *transcriptIdentifier;
  void *v4;
  NSString *v5;
  NSString *v6;

  transcriptIdentifier = self->_transcriptIdentifier;
  if (!transcriptIdentifier)
  {
    objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "UUIDString");
    v5 = (NSString *)objc_claimAutoreleasedReturnValue();
    v6 = self->_transcriptIdentifier;
    self->_transcriptIdentifier = v5;

    transcriptIdentifier = self->_transcriptIdentifier;
  }
  return transcriptIdentifier;
}

- (void)dealloc
{
  void *v3;
  void *v4;
  objc_super v5;

  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "invalidateDisplayLink");

  IMIsRunningInUnitTesting();
  -[CKTranscriptCollectionViewController _releaseActiveBalloonControllers](self, "_releaseActiveBalloonControllers");
  -[CKAudioController setDelegate:](self->_audioController, "setDelegate:", 0);
  -[CKAudioController stop](self->_audioController, "stop");
  -[CKConversation chat](self->_conversation, "chat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "endHoldingChatItemsUpdatesForAllReasons");
  -[CKTranscriptCollectionView setDelegate:](self->_collectionView, "setDelegate:", 0);
  -[CKTranscriptCollectionView setDataSource:](self->_collectionView, "setDataSource:", 0);
  -[CKImpactEffectManager setDelegate:](self->_impactEffectManager, "setDelegate:", 0);

  v5.receiver = self;
  v5.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKTranscriptCollectionViewController dealloc](&v5, sel_dealloc);
}

- (void)loadView
{
  void *v2;
  NSObject *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  CKTranscriptCompositionalLayout *v9;
  CKTranscriptCompositionalLayout *v10;
  CKTranscriptCollectionViewLayout *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  CKTranscriptCollectionView *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _BOOL4 v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  int v30;
  void *v31;
  int v32;
  void *v33;
  int v34;
  void *v35;
  BOOL v36;
  void *v37;
  NSObject *v38;
  _BOOL4 IsReduceMotionEnabled;
  int v40;
  NSObject *v41;
  void *v42;
  _QWORD v43[4];
  NSObject *v44;
  id v45[2];
  id location;
  uint8_t buf[4];
  _BOOL4 v48;
  __int16 v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  IMLogHandleForCategory();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)os_signpost_id_generate(v4);
  v6 = objc_alloc(MEMORY[0x1E0D4D8E0]);
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v6, "initWithLayoutContext:datasource:", 1, v7);

  objc_msgSend(v8, "setDelegate:", self);
  -[CKTranscriptCollectionViewController setCompositor:](self, "setCompositor:", v8);
  location = 0;
  objc_initWeak(&location, self);
  v9 = [CKTranscriptCompositionalLayout alloc];
  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = __48__CKTranscriptCollectionViewController_loadView__block_invoke;
  v43[3] = &unk_1E27547F0;
  v41 = v4;
  v44 = v41;
  v45[1] = v5;
  objc_copyWeak(v45, &location);
  v10 = -[CKTranscriptCompositionalLayout initWithSectionProvider:](v9, "initWithSectionProvider:", v43);
  v11 = (CKTranscriptCollectionViewLayout *)v10;
  if (!v10)
    v11 = objc_alloc_init(CKTranscriptCollectionViewLayout);
  -[CKTranscriptCollectionViewController chat](self, "chat", v41);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewLayout setChatStyle:](v11, "setChatStyle:", objc_msgSend(v12, "chatStyle"));

  -[CKTranscriptCollectionViewController collectionViewSize](self, "collectionViewSize");
  v14 = v13;
  -[CKTranscriptCollectionViewController collectionViewSize](self, "collectionViewSize");
  v16 = -[CKTranscriptCollectionView initWithFrame:collectionViewLayout:]([CKTranscriptCollectionView alloc], "initWithFrame:collectionViewLayout:", v11, 0.0, 0.0, v14, v15);
  -[CKTranscriptCollectionViewController compositor](self, "compositor");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    -[CKTranscriptCollectionViewController compositor](self, "compositor");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "setCollectionView:", v16);

  }
  -[CKTranscriptCollectionView setAutoresizingMask:](v16, "setAutoresizingMask:", 18);
  -[CKTranscriptCollectionViewController transcriptBackgroundColor](self, "transcriptBackgroundColor");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionView setBackgroundColor:](v16, "setBackgroundColor:", v19);

  if (CKIsRunningInMessagesNotificationExtension())
  {
    v20 = 0;
  }
  else
  {
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handles");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "count") != 0;

    v20 = 2 * v23;
  }
  -[CKTranscriptCollectionView setKeyboardDismissMode:](v16, "setKeyboardDismissMode:", v20);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionView setContentInsetAdjustmentBehavior:](v16, "setContentInsetAdjustmentBehavior:", objc_msgSend(v24, "transcriptContentInsetBehavior"));

  -[CKTranscriptCollectionView setUpdateInsetBottomDuringKeyboardDismiss:](v16, "setUpdateInsetBottomDuringKeyboardDismiss:", 1);
  -[CKTranscriptCollectionView setAlwaysBounceVertical:](v16, "setAlwaysBounceVertical:", 1);
  -[CKTranscriptCollectionView setAlwaysBounceHorizontal:](v16, "setAlwaysBounceHorizontal:", -[CKTranscriptCollectionViewController wantsDrawerLayout](self, "wantsDrawerLayout"));
  -[CKTranscriptCollectionView setShowsHorizontalScrollIndicator:](v16, "setShowsHorizontalScrollIndicator:", 0);
  -[CKTranscriptCollectionView setAutomaticallyAdjustsScrollIndicatorInsets:](v16, "setAutomaticallyAdjustsScrollIndicatorInsets:", 0);
  -[CKTranscriptCollectionView _setAllowsVisibleCellUpdatesDuringUpdateAnimations:](v16, "_setAllowsVisibleCellUpdatesDuringUpdateAnimations:", 1);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "theme");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionView setIndicatorStyle:](v16, "setIndicatorStyle:", objc_msgSend(v26, "scrollIndicatorStyle"));

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v26) = objc_msgSend(v27, "isDiffableTranscriptDataSourceEnabled");

  if ((_DWORD)v26)
  {
    -[CKTranscriptCollectionViewController dataSourceWithCollectionView:](self, "dataSourceWithCollectionView:", v16);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController setDataSource:](self, "setDataSource:", v28);
    -[CKTranscriptCollectionView setDataSource:](v16, "setDataSource:", v28);

  }
  else
  {
    -[CKTranscriptCollectionView setDataSource:](v16, "setDataSource:", self);
  }
  -[CKTranscriptCollectionView setDelegate:](v16, "setDelegate:", self);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend(v29, "forceMinTranscriptMarginInsets");
  if (v30)
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "minTranscriptMarginInsets");
  }
  else
  {
    -[CKTranscriptCollectionViewController marginInsets](self, "marginInsets");
  }
  -[CKEditableCollectionView setMarginInsets:](v16, "setMarginInsets:");
  if (v30)

  -[CKTranscriptCollectionView setAccessibilityIdentifier:](v16, "setAccessibilityIdentifier:", CFSTR("TranscriptCollectionView"));
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = objc_msgSend(v31, "isSizeConstrained");

  if (v32)
    -[CKTranscriptCollectionView setShowsVerticalScrollIndicator:](v16, "setShowsVerticalScrollIndicator:", 0);
  -[CKTranscriptCollectionViewController setView:](self, "setView:", v16);
  -[CKTranscriptCollectionViewController setCollectionView:](self, "setCollectionView:", v16);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "isDiffableTranscriptDataSourceEnabled");

  if (v34)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(v35, "count") == 0;

    if (!v36)
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController _updateTranscriptChatItemsWithoutAnimation:](self, "_updateTranscriptChatItemsWithoutAnimation:", v37);

    }
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
    {
      IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
      v40 = _AXSReduceMotionAutoplayMessagesEffectsEnabled();
      *(_DWORD *)buf = 67109376;
      v48 = IsReduceMotionEnabled;
      v49 = 1024;
      v50 = v40;
      _os_log_impl(&dword_18DFCD000, v38, OS_LOG_TYPE_INFO, "AutoPlayback allowed? ReduceMotionEnabled:%d - AutoplayEffectsEnabled:%d", buf, 0xEu);
    }

  }
  objc_destroyWeak(v45);

  objc_destroyWeak(&location);
}

id __48__CKTranscriptCollectionViewController_loadView__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  NSObject *v6;
  NSObject *v7;
  os_signpost_id_t v8;
  id WeakRetained;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  os_signpost_id_t v14;
  NSObject *v15;
  void *v16;
  int v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = *(id *)(a1 + 32);
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 48);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    v18 = 134217984;
    v19 = a2;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v7, OS_SIGNPOST_INTERVAL_BEGIN, v8, "layoutSectionProvider", "Section %ld", (uint8_t *)&v18, 0xCu);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "compositor");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "layoutSectionForSection:layoutEnvironment:", a2, v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = *(id *)(a1 + 32);
  v13 = v12;
  v14 = *(_QWORD *)(a1 + 48);
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    v18 = 134217984;
    v19 = a2;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v13, OS_SIGNPOST_INTERVAL_END, v14, "layoutSectionProvider", "Section %ld", (uint8_t *)&v18, 0xCu);
  }

  if (!v11 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a2);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = 138412290;
      v19 = v16;
      _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "CKTranscriptCollectionViewController - Got nil layoutSection for %@, invalid state!", (uint8_t *)&v18, 0xCu);

    }
  }

  return v11;
}

- (void)viewDidLoad
{
  void *v3;
  int v4;
  void *v5;
  id v6;
  void *v7;
  int v8;
  void *v9;
  id v10;
  CKChatItemController *v11;
  void *v12;
  id v13;
  objc_super v14;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v14.receiver = self;
  v14.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKTranscriptCollectionViewController viewDidLoad](&v14, sel_viewDidLoad);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isExpressiveTextEnabled");

  if (v4)
  {
    v15[0] = objc_opt_class();
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v15, 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (id)-[CKTranscriptCollectionViewController registerForTraitChanges:withHandler:](self, "registerForTraitChanges:withHandler:", v5, &__block_literal_global_103);

  }
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isConsolidatedChatItemsEnabled");

  if (v8)
  {
    -[CKTranscriptCollectionViewController imChatItems](self, "imChatItems");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = -[CKTranscriptCollectionViewController newChatItemsWithIMChatItems:](self, "newChatItemsWithIMChatItems:", v9);

    v11 = [CKChatItemController alloc];
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = -[CKChatItemController initForCollectionView:chatItems:delegate:](v11, "initForCollectionView:chatItems:delegate:", v12, v10, self);

    -[CKTranscriptCollectionViewController setChatItemController:](self, "setChatItemController:", v13);
  }
}

void __51__CKTranscriptCollectionViewController_viewDidLoad__block_invoke(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "transcriptTextEffectCoordinator");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "updateWithReason:", CFSTR("UITraitActiveAppearance trait did change"));

}

- (void)viewWillAppear:(BOOL)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD block[4];
  id v21;
  _QWORD aBlock[5];
  _QWORD v23[4];
  id v24;
  objc_super v25;

  v25.receiver = self;
  v25.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController viewWillAppear:](&v25, sel_viewWillAppear_, a3);
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController setTranscriptBecameVisibleTimestamp:](self, "setTranscriptBecameVisibleTimestamp:", v4);

  +[CKAssociatedStickerChatItem clearTranscriptDisplayCaches](CKAssociatedStickerChatItem, "clearTranscriptDisplayCaches");
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke;
  v23[3] = &unk_1E274A208;
  v7 = v5;
  v24 = v7;
  -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v23, 0, 0);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "chatIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "configureAppEntityForConversationId:", v9);

  if (-[CKTranscriptCollectionViewController shouldLoadDefaultConversationViewingMessageCountOnAppear](self, "shouldLoadDefaultConversationViewingMessageCountOnAppear"))
  {
    aBlock[0] = v6;
    aBlock[1] = 3221225472;
    aBlock[2] = __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_2;
    aBlock[3] = &unk_1E274B4D0;
    aBlock[4] = self;
    v10 = _Block_copy(aBlock);
    -[CKTranscriptCollectionViewController transitionCoordinator](self, "transitionCoordinator");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v11)
    {
      objc_msgSend(v11, "animateAlongsideTransition:completion:", 0, v10);
    }
    else
    {
      block[0] = v6;
      block[1] = 3221225472;
      block[2] = __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_5;
      block[3] = &unk_1E274AED0;
      v21 = v10;
      dispatch_async(MEMORY[0x1E0C80D38], block);

    }
  }
  v13 = objc_alloc(MEMORY[0x1E0D39B08]);
  v14 = (void *)objc_msgSend(v13, "initWithObject:title:queue:", self, CFSTR("CKTranscriptCollectionViewController-Visible"), MEMORY[0x1E0C80D38]);
  -[CKTranscriptCollectionViewController setStateCaptureAssistant:](self, "setStateCaptureAssistant:", v14);

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "isFindMyNavBarEnabled");

  if (v16)
  {
    objc_msgSend(MEMORY[0x1E0D35810], "sharedInstance");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "chat");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "startTrackingLocationForChat:", v19);

  }
}

uint64_t __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateChatItemsSynchronouslyIfAsyncUpdateIsPending");
}

uint64_t __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_2(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  _QWORD v4[5];

  v3 = *(id *)(a1 + 32);
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_3;
  v4[3] = &unk_1E274A208;
  v4[4] = v3;
  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_4;
  v2[3] = &unk_1E274A208;
  return objc_msgSend(v3, "updateTranscript:animated:completion:", v4, 0, v2);
}

void __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_3(uint64_t a1)
{
  void *v1;
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "conversation");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setLoadedMessageCount:", objc_msgSend(v1, "defaultConversationViewingMessageCount"));

}

void __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_4(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  id v5;

  +[CKScrollViewAnimationProperties unanimated](CKScrollViewAnimationProperties, "unanimated");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "scrollToBottomStopsAtTopOfLastBubble");

  v4 = *(void **)(a1 + 32);
  if (v3)
    objc_msgSend(v4, "scrollToTopOfLastBubbleCellWithAnimationProperties:", v5);
  else
    objc_msgSend(v4, "scrollTranscriptToEntryViewInsertionTimeWithAnimation:", 0);

}

uint64_t __55__CKTranscriptCollectionViewController_viewWillAppear___block_invoke_5(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)viewWillDisappear:(BOOL)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  objc_super v18;

  v18.receiver = self;
  v18.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController viewWillDisappear:](&v18, sel_viewWillDisappear_, a3);
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stop");

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "beginHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesDisappeared"));

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stopFullscreenEffect");

  -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stopAllEffects");

  -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setIsDisabled:", 1);

  -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:](self, "addContentAnimationPauseReasons:", 8);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isBackgroundAudioEnabled");

  if ((v10 & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setIdleTimerDisabled:", 0);

  }
  -[CKTranscriptCollectionViewController _tearDownLiveBubbles](self, "_tearDownLiveBubbles");
  -[CKTranscriptCollectionViewController stateCaptureAssistant](self, "stateCaptureAssistant");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "deregister");

  -[CKTranscriptCollectionViewController setStateCaptureAssistant:](self, "setStateCaptureAssistant:", 0);
  -[CKTranscriptCollectionViewController setTranscriptBecameVisibleTimestamp:](self, "setTranscriptBecameVisibleTimestamp:", 0);
  +[CKAssociatedStickerChatItem clearTranscriptDisplayCaches](CKAssociatedStickerChatItem, "clearTranscriptDisplayCaches");
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isFindMyNavBarEnabled");

  if (v14)
  {
    objc_msgSend(MEMORY[0x1E0D35810], "sharedInstance");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "chat");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stopTrackingLocationForChat:", v17);

  }
}

- (BOOL)shouldEndShowingEditHistoryOnViewDisappearance
{
  return 1;
}

- (void)viewDidDisappear:(BOOL)a3
{
  void *v4;
  void *v5;
  objc_super v6;

  v6.receiver = self;
  v6.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController viewDidDisappear:](&v6, sel_viewDidDisappear_, a3);
  if (-[CKTranscriptCollectionViewController shouldEndShowingEditHistoryOnViewDisappearance](self, "shouldEndShowingEditHistoryOnViewDisappearance"))
  {
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "endShowingEditHistoryForAllChatItems");

  }
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "invalidateDisplayLink");

}

- (void)viewDidLayoutSubviews
{
  void *v3;
  double v4;
  double v5;
  double v6;
  BOOL v7;
  void *v8;
  double v9;
  void *v10;
  char v11;
  void *v12;
  objc_super v13;

  v13.receiver = self;
  v13.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKTranscriptCollectionViewController viewDidLayoutSubviews](&v13, sel_viewDidLayoutSubviews);
  -[CKTranscriptCollectionViewController view](self, "view");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bounds");
  v5 = v4;
  -[CKTranscriptCollectionViewController lastViewWidthUsedToLayoutChatItems](self, "lastViewWidthUsedToLayoutChatItems");
  v7 = CKFloatApproximatelyEqualToFloatWithTolerance(v5, v6, 0.00000999999975);

  if (!v7)
  {
    -[CKTranscriptCollectionViewController _requestChatItemLayoutInvalidation](self, "_requestChatItemLayoutInvalidation");
    -[CKTranscriptCollectionViewController view](self, "view");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "bounds");
    -[CKTranscriptCollectionViewController setLastViewWidthUsedToLayoutChatItems:](self, "setLastViewWidthUsedToLayoutChatItems:", v9);

  }
  -[CKTranscriptCollectionViewController updateEffectViewMessageRects](self, "updateEffectViewMessageRects");
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_opt_respondsToSelector();

  if ((v11 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "viewDidLayoutSubviewsForTranscriptCollectionViewController:", self);

  }
}

- (void)presentViewController:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v6;
  id v8;
  id v9;
  CKTranscriptCollectionViewController *v10;
  void *v11;
  char v12;
  void *v13;
  CKTranscriptCollectionViewController *v14;
  objc_super v15;

  v6 = a4;
  v8 = a3;
  v9 = a5;
  v10 = self;
  -[CKTranscriptCollectionViewController delegate](v10, "delegate");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_opt_respondsToSelector();

  if ((v12 & 1) == 0
    || (-[CKTranscriptCollectionViewController delegate](v10, "delegate"),
        v13 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v13, "viewControllerForAlertPresentationFromTranscriptCollectionViewController:", v10),
        v14 = (CKTranscriptCollectionViewController *)objc_claimAutoreleasedReturnValue(),
        v10,
        v13,
        v14 == v10))
  {
    v15.receiver = v10;
    v15.super_class = (Class)CKTranscriptCollectionViewController;
    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](&v15, sel_presentViewController_animated_completion_, v8, v6, v9);
  }
  else
  {
    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](v14, "presentViewController:animated:completion:", v8, v6, v9);
    v10 = v14;
  }

}

- (id)transcriptBackgroundColor
{
  void *v2;
  void *v3;
  void *v4;

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "theme");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "transcriptBackgroundColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (void)setEditing:(BOOL)a3 animated:(BOOL)a4
{
  _BOOL8 v4;
  _BOOL8 v5;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  objc_super v15;

  v4 = a4;
  v5 = a3;
  v15.receiver = self;
  v15.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKTranscriptCollectionViewController setEditing:animated:](&v15, sel_setEditing_animated_);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setAllowsSelection:", v5);
  objc_msgSend(v7, "setAllowsMultipleSelection:", v5);
  objc_msgSend(v7, "_ck_setEditing:animated:", v5, v4);
  objc_msgSend(v7, "setAlwaysBounceHorizontal:", -[CKTranscriptCollectionViewController wantsDrawerLayout](self, "wantsDrawerLayout"));
  if (v5)
  {
    v8 = objc_alloc_init(MEMORY[0x1E0CB3788]);
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __60__CKTranscriptCollectionViewController_setEditing_animated___block_invoke;
    v13[3] = &unk_1E27500C0;
    v14 = v8;
    v10 = v8;
    objc_msgSend(v9, "enumerateObjectsUsingBlock:", v13);

    -[CKTranscriptCollectionViewController setHiddenItems:](self, "setHiddenItems:", v10);
    -[CKTranscriptCollectionViewController audioController](self, "audioController");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stop");

  }
  else
  {
    v12 = (void *)objc_opt_new();
    -[CKTranscriptCollectionViewController setHiddenItems:](self, "setHiddenItems:", v12);

    -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
    v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "removeAllSelectedMessageGuids");
  }

}

void __60__CKTranscriptCollectionViewController_setEditing_animated___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_msgSend(v5, "itemIsReplyCount") & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);

}

- (void)viewWillTransitionToSize:(CGSize)a3 withTransitionCoordinator:(id)a4
{
  double height;
  double width;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  objc_super v18;

  height = a3.height;
  width = a3.width;
  v7 = a4;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "beginHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D353C0]);
  objc_msgSend(v10, "beginDisablingTranscriptDynamicsForReason:", CFSTR("Rotation"));
  objc_msgSend(v9, "setUseInitialLayoutAttributesForRotation:", 1);
  objc_msgSend(v9, "setSizeForRotation:", width, height);
  v18.receiver = self;
  v18.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKTranscriptCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:](&v18, sel_viewWillTransitionToSize_withTransitionCoordinator_, v7, width, height);
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __91__CKTranscriptCollectionViewController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke;
  v14[3] = &unk_1E2754838;
  v15 = v8;
  v16 = v10;
  v17 = v9;
  v11 = v9;
  v12 = v10;
  v13 = v8;
  objc_msgSend(v7, "animateAlongsideTransition:completion:", 0, v14);

}

uint64_t __91__CKTranscriptCollectionViewController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke(id *a1)
{
  objc_msgSend(a1[4], "endHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D353C0]);
  objc_msgSend(a1[5], "endDisablingTranscriptDynamicsForReason:", CFSTR("Rotation"));
  objc_msgSend(a1[6], "setUseInitialLayoutAttributesForRotation:", 0);
  return objc_msgSend(a1[6], "setSizeForRotation:", *MEMORY[0x1E0C9D820], *(double *)(MEMORY[0x1E0C9D820] + 8));
}

- (double)_fullMaxWidth
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bounds");
  v4 = v3;
  objc_msgSend(v2, "marginInsets");
  v7 = v4 - (v5 + v6);

  return v7;
}

- (BOOL)_canShowWhileLocked
{
  return 1;
}

- (BOOL)_canUseOpaqueMask
{
  void *v3;
  void *v4;
  char v5;
  void *v7;
  char v8;

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "transcriptCollectionViewControllerShouldForceOpaqueMask:", self);

    if ((v5 & 1) != 0)
      return 0;
  }
  else
  {

  }
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "transcriptCanUseOpaqueMask");

  return v8;
}

- (void)parentControllerDidBecomeActive
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  objc_super v7;

  v7.receiver = self;
  v7.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController parentControllerDidBecomeActive](&v7, sel_parentControllerDidBecomeActive);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isExpressiveTextEnabled");

  if (v4)
    -[CKTextEffectCoordinator updateWithReason:](self->_transcriptTextEffectCoordinator, "updateWithReason:", CFSTR("potentially start a new animation because parentControllerDidBecomeActive"));
  -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setIsDisabled:", 0);

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "endHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesAppSuspension"));

  if (-[CKTranscriptCollectionViewController _allowsEffectAutoPlayback](self, "_allowsEffectAutoPlayback"))
    -[CKTranscriptCollectionViewController _replayLastImpactEffectIfNotFromMe](self, "_replayLastImpactEffectIfNotFromMe");
  -[CKTranscriptCollectionViewController setAllowsPluginPlayback:](self, "setAllowsPluginPlayback:", 1);
  -[CKTranscriptCollectionViewController pluginPlaybackDelay](self, "pluginPlaybackDelay");
  -[CKTranscriptCollectionViewController startPluginPlaybackAfterDelay:](self, "startPluginPlaybackAfterDelay:");
}

- (void)prepareForSuspend
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  objc_super v9;

  v9.receiver = self;
  v9.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController prepareForSuspend](&v9, sel_prepareForSuspend);
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "invalidateDisplayLink");

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "currentEffect");
  v5 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v5, "stopSoundEffect");

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "beginHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesAppSuspension"));

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v5) = objc_msgSend(v7, "isBackgroundAudioEnabled");

  if ((v5 & 1) == 0)
  {
    -[CKTranscriptCollectionViewController audioController](self, "audioController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "stop");

  }
  -[CKTranscriptCollectionViewController setAllowsPluginPlayback:](self, "setAllowsPluginPlayback:", 0);
  -[CKTranscriptCollectionViewController stopPluginPlayback](self, "stopPluginPlayback");
  -[CKTranscriptCollectionViewController _tearDownLiveBubbles](self, "_tearDownLiveBubbles");
}

- (void)performResumeDeferredSetup
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  objc_super v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v19.receiver = self;
  v19.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController performResumeDeferredSetup](&v19, sel_performResumeDeferredSetup);
  +[CKPreviewDispatchCache genmojiPreviewCache](CKPreviewDispatchCache, "genmojiPreviewCache");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "resume");

  +[CKPreviewDispatchCache transcriptPreviewCache](CKPreviewDispatchCache, "transcriptPreviewCache");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "resume");

  +[CKPreviewDispatchCache snapshotCache](CKPreviewDispatchCache, "snapshotCache");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "resume");

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v6, "copy");

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v8 = v7;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v16;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v16 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * v12);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier", (_QWORD)v15);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "performHostAppResumeWithContext:", v14);

        }
        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v10);
  }

}

- (void)viewDidAppear:(BOOL)a3
{
  void *v4;
  char v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  objc_super v13;

  v13.receiver = self;
  v13.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController viewDidAppear:](&v13, sel_viewDidAppear_, a3);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "shouldSizeInitialViewingMessageCount");

  if ((v5 & 1) == 0)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isUserInteractionEnabled");

    if (v7)
    {
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "flashScrollIndicators");

    }
  }
  -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:](self, "removeContentAnimationPauseReasons:", 8);
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "endHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesDisappeared"));

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isExpressiveTextEnabled");

  if (v11)
  {
    -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "updateWithReason:", CFSTR("viewDidAppear"));

  }
}

- (void)viewDidAppearDeferredSetup
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  _QWORD v12[5];
  _QWORD v13[4];
  id v14;
  _QWORD block[5];
  objc_super v16;

  v16.receiver = self;
  v16.super_class = (Class)CKTranscriptCollectionViewController;
  -[CKViewController viewDidAppearDeferredSetup](&v16, sel_viewDidAppearDeferredSetup);
  -[CKTranscriptCollectionViewController sizeFullTranscriptIfNecessary](self, "sizeFullTranscriptIfNecessary");
  +[CKPreviewDispatchCache genmojiPreviewCache](CKPreviewDispatchCache, "genmojiPreviewCache");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "resume");

  +[CKPreviewDispatchCache transcriptPreviewCache](CKPreviewDispatchCache, "transcriptPreviewCache");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "resume");

  +[CKPreviewDispatchCache snapshotCache](CKPreviewDispatchCache, "snapshotCache");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "resume");

  if (-[CKTranscriptCollectionViewController _allowsEffectAutoPlayback](self, "_allowsEffectAutoPlayback"))
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke;
    block[3] = &unk_1E274A208;
    block[4] = self;
    dispatch_async(MEMORY[0x1E0C80D38], block);
  }
  -[CKTranscriptCollectionViewController setAllowsPluginPlayback:](self, "setAllowsPluginPlayback:", 1);
  -[CKTranscriptCollectionViewController pluginPlaybackDelay](self, "pluginPlaybackDelay");
  -[CKTranscriptCollectionViewController startPluginPlaybackAfterDelay:](self, "startPluginPlaybackAfterDelay:");
  -[CKTranscriptCollectionViewController _prewarmBalloonControllers](self, "_prewarmBalloonControllers");
  -[CKTranscriptCollectionViewController _prewarmMediaPreviews](self, "_prewarmMediaPreviews");
  -[CKTranscriptCollectionViewController _prewarmLinkPresentations](self, "_prewarmLinkPresentations");
  -[CKTranscriptCollectionViewController _prewarmTranscriptAssetsIfNecessary](self, "_prewarmTranscriptAssetsIfNecessary");
  if (objc_msgSend(MEMORY[0x1E0D39AF8], "isInternationalSpamFilteringEnabled"))
    -[CKTranscriptCollectionViewController repromptLastBlackholeFailureIfNotPrompted](self, "repromptLastBlackholeFailureIfNotPrompted");
  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (!__CurrentTestName)
    goto LABEL_8;
  objc_msgSend(v6, "_launchTestName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v7, "isRunningTest:", v8))
  {
LABEL_9:

    goto LABEL_10;
  }
  v9 = objc_msgSend(v7, "shouldRecordExtendedLaunchTime");

  if (v9)
  {
LABEL_8:
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke_2;
    v13[3] = &unk_1E274A208;
    v14 = v7;
    dispatch_async(MEMORY[0x1E0C80D38], v13);
    v8 = v14;
    goto LABEL_9;
  }
LABEL_10:
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isExpressiveTextEnabled");

  if (v11
    && -[CKTranscriptCollectionViewController _shouldMakeTextEffectStateReadyInViewDidAppearDeferredSetup](self, "_shouldMakeTextEffectStateReadyInViewDidAppearDeferredSetup"))
  {
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke_3;
    v12[3] = &unk_1E274A208;
    v12[4] = self;
    dispatch_async(MEMORY[0x1E0C80D38], v12);
  }

}

uint64_t __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "impactEffectManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setIsDisabled:", 0);

  return objc_msgSend(*(id *)(a1 + 32), "_replayLastImpactEffectIfNotFromMe");
}

void __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "_launchTestName");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "finishedTest:extraResults:", v2, 0);

}

uint64_t __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateTextEffectsState:", &__block_literal_global_279_1);
}

uint64_t __66__CKTranscriptCollectionViewController_viewDidAppearDeferredSetup__block_invoke_4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setIsReady:", 1);
}

- (void)_prewarmTranscriptAssetsIfNecessary
{
  void *v3;
  int v4;
  id v5;

  if (CKIsRunningInMessages()
    || CKIsRunningInCarousel()
    || CKIsRunningInMessagesNotificationExtension() && (IMSharedHelperIsOlderDevice() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "isEmojiTapbacksEnabled");

    if (v4)
    {
      -[CKTranscriptCollectionViewController prewarmTapbackPickerImages](self, "prewarmTapbackPickerImages");
    }
    else
    {
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v5 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "prewarmAcknowledgementsImage");

    }
  }
}

+ (id)chatItemsDidChangeNotification
{
  return (id)*MEMORY[0x1E0D35328];
}

- (CKTranscriptCollectionViewController)initWithConversation:(id)a3 delegate:(id)a4 balloonMaxWidth:(double)a5 marginInsets:(UIEdgeInsets)a6
{
  double right;
  double bottom;
  double left;
  double top;
  id v13;
  id v14;
  double v15;
  double v16;
  CKTranscriptCollectionViewController *v17;

  right = a6.right;
  bottom = a6.bottom;
  left = a6.left;
  top = a6.top;
  v13 = a4;
  v14 = a3;
  objc_msgSend((id)objc_opt_class(), "defaultCollectionViewSize");
  v17 = -[CKTranscriptCollectionViewController initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:collectionViewSize:](self, "initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:collectionViewSize:", v14, v13, MEMORY[0x1E0C9AA60], a5, top, left, bottom, right, v15, v16);

  return v17;
}

- (CKTranscriptCollectionViewController)initWithConversation:(id)a3 delegate:(id)a4 balloonMaxWidth:(double)a5 marginInsets:(UIEdgeInsets)a6 collectionViewSize:(CGSize)a7
{
  return -[CKTranscriptCollectionViewController initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:collectionViewSize:](self, "initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:collectionViewSize:", a3, a4, MEMORY[0x1E0C9AA60], a5, a6.top, a6.left, a6.bottom, a6.right, a7.width, a7.height);
}

- (CKTranscriptCollectionViewController)initWithConversation:(id)a3 delegate:(id)a4 notifications:(id)a5 balloonMaxWidth:(double)a6 marginInsets:(UIEdgeInsets)a7
{
  double right;
  double bottom;
  double left;
  double top;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  CKTranscriptCollectionViewController *v20;

  right = a7.right;
  bottom = a7.bottom;
  left = a7.left;
  top = a7.top;
  v15 = a5;
  v16 = a4;
  v17 = a3;
  objc_msgSend((id)objc_opt_class(), "defaultCollectionViewSize");
  v20 = -[CKTranscriptCollectionViewController initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:collectionViewSize:](self, "initWithConversation:delegate:notifications:balloonMaxWidth:marginInsets:collectionViewSize:", v17, v16, v15, a6, top, left, bottom, right, v18, v19);

  return v20;
}

- (CKTranscriptCollectionViewController)initWithConversation:(id)a3 delegate:(id)a4 notifications:(id)a5 balloonMaxWidth:(double)a6 marginInsets:(UIEdgeInsets)a7 collectionViewSize:(CGSize)a8
{
  CGFloat height;
  CGFloat width;
  double right;
  double bottom;
  double left;
  double top;
  id v18;
  id v19;
  id v20;
  CKTranscriptCollectionViewController *v21;
  void *v22;
  int v23;
  void *v24;
  int v25;
  uint64_t v26;
  _TtC7ChatKit23CKTextEffectCoordinator *transcriptTextEffectCoordinator;
  uint64_t v28;
  CKTranscriptTextEffectsState *textEffectsState;
  _TtC7ChatKit23CKTextEffectCoordinator *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  NSObject *v34;
  id v35;
  void *v36;
  int v37;
  void *v38;
  unint64_t v39;
  id v40;
  void *v41;
  void *v42;
  int v43;
  void *v44;
  id v45;
  dispatch_group_t v46;
  void *v47;
  void *v48;
  CKImpactEffectManager *v49;
  CKTranscriptBalloonSelectionManager *v50;
  CKTranscriptBalloonSelectionManager *selectionManager;
  void *v52;
  int v53;
  void *v54;
  void *v56;
  id v57;
  id v58;
  uint8_t buf[16];
  objc_super v60;

  height = a8.height;
  width = a8.width;
  right = a7.right;
  bottom = a7.bottom;
  left = a7.left;
  top = a7.top;
  v18 = a3;
  v19 = a4;
  v20 = a5;
  v60.receiver = self;
  v60.super_class = (Class)CKTranscriptCollectionViewController;
  v21 = -[CKTranscriptCollectionViewController initWithNibName:bundle:](&v60, sel_initWithNibName_bundle_, 0, 0);
  if (!v21)
    goto LABEL_25;
  v57 = v20;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "isExpressiveTextEnabled");

  if (v23)
  {
    objc_msgSend(v18, "chat");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend(v24, "supportsCapabilities:", 0x100000);

    if (v25)
    {
      v26 = objc_msgSend((id)objc_opt_class(), "newTranscriptTextEffectCoordinatorForTranscriptCollectionViewController:isInline:", v21, -[CKTranscriptCollectionViewController isInline](v21, "isInline"));
      transcriptTextEffectCoordinator = v21->_transcriptTextEffectCoordinator;
      v21->_transcriptTextEffectCoordinator = (_TtC7ChatKit23CKTextEffectCoordinator *)v26;

      -[CKTextEffectCoordinator setDelegate:](v21->_transcriptTextEffectCoordinator, "setDelegate:", v21);
      -[CKTextEffectCoordinator setConfigurationDelegate:](v21->_transcriptTextEffectCoordinator, "setConfigurationDelegate:", v21);
      objc_msgSend((id)objc_opt_class(), "initialTextEffectsState");
      v28 = objc_claimAutoreleasedReturnValue();
      textEffectsState = v21->_textEffectsState;
      v21->_textEffectsState = (CKTranscriptTextEffectsState *)v28;

      v30 = v21->_transcriptTextEffectCoordinator;
      -[CKTranscriptCollectionViewController textEffectsState](v21, "textEffectsState");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTextEffectCoordinator setPaused:includingAnimators:](v30, "setPaused:includingAnimators:", objc_msgSend(v31, "isPaused"), 1);

    }
  }
  v21->_collectionViewSize.width = width;
  v21->_collectionViewSize.height = height;
  v21->_lastViewWidthUsedToLayoutChatItems = width;
  -[CKTranscriptCollectionViewController setDelegate:](v21, "setDelegate:", v19);
  objc_msgSend(v18, "chat");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController setConversation:](v21, "setConversation:", v18);
  -[CKTranscriptCollectionViewController setBalloonMaxWidth:](v21, "setBalloonMaxWidth:", a6);
  -[CKTranscriptCollectionViewController setMarginInsets:](v21, "setMarginInsets:", top, left, bottom, right);
  -[CKTranscriptCollectionViewController setShouldUseOpaqueMask:](v21, "setShouldUseOpaqueMask:", -[CKTranscriptCollectionViewController _canUseOpaqueMask](v21, "_canUseOpaqueMask"));
  -[CKTranscriptCollectionViewController imChatItems](v21, "imChatItems");
  v33 = objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v34, OS_LOG_TYPE_INFO, "Displaying content from chatItems", buf, 2u);
    }

  }
  v58 = v19;
  v56 = (void *)v33;
  v35 = -[CKTranscriptCollectionViewController newChatItemsWithIMChatItems:](v21, "newChatItemsWithIMChatItems:", v33);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "shouldSizeInitialViewingMessageCount");

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = objc_msgSend(v38, "initialConversationSizingMessageCount");

  if (v37 && v39 < objc_msgSend(v35, "count"))
  {
    objc_msgSend(v35, "subarrayWithRange:", objc_msgSend(v35, "count") - v39, v39);
    v40 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[CKTranscriptCollectionViewController setSizedFullTranscript:](v21, "setSizedFullTranscript:", 1);
    v40 = v35;
  }
  v41 = v40;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = objc_msgSend(v42, "isConsolidatedChatItemsEnabled");

  if (v43)
  {
    -[CKTranscriptCollectionViewController chatItemController](v21, "chatItemController");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = (id)objc_msgSend(v44, "setChatItems:completion:", v41, 0);

    if (!v37)
      goto LABEL_19;
LABEL_17:
    if (!-[CKTranscriptCollectionViewController sizedFullTranscript](v21, "sizedFullTranscript"))
      objc_msgSend(v32, "beginHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35370]);
    goto LABEL_19;
  }
  -[CKTranscriptCollectionViewController setChatItems:](v21, "setChatItems:", v41);
  if (v37)
    goto LABEL_17;
LABEL_19:
  -[CKTranscriptCollectionViewController _createInputContextHistory](v21, "_createInputContextHistory");
  -[CKTranscriptCollectionViewController _refreshLocationsForRecipientsIfNecessary](v21, "_refreshLocationsForRecipientsIfNecessary");
  v46 = dispatch_group_create();
  -[CKTranscriptCollectionViewController setUpdateAnimationGroup:](v21, "setUpdateAnimationGroup:", v46);
  -[CKTranscriptCollectionViewController setTranscriptUpdateAnimated:](v21, "setTranscriptUpdateAnimated:", 1);
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_transferRestored_, CFSTR("CKFileTransferRestoredNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_previewDidChange_, CFSTR("CKPreviewDidChangeNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel__adaptiveImageGlyphWasGeneratedNotification_, CFSTR("CKAdaptiveImageGlyphGeneratedNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_snapshotDidChange_, CFSTR("CKSnapshotChangedNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_locationStringDidChange_, CFSTR("CKLocationStringDidChangeNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_transferUpdated_, CFSTR("CKFileTransferUpdatedNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_addressBookChanged_, *MEMORY[0x1E0D373C0], 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel__conversationListFinishedMerging_, CFSTR("CKConversationListFinishedMergingChatsNotification"), 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_installedAppsChanged_, *MEMORY[0x1E0D352C8], 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_snapshotTaken_, *MEMORY[0x1E0CEB340], 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_multiwayCallStateChanged_, *MEMORY[0x1E0D35410], 0);
  objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_connectivityChanged_, *MEMORY[0x1E0D352E8], 0);
  if (v32)
  {
    objc_msgSend((id)objc_opt_class(), "chatItemsDidChangeNotification");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "addObserver:selector:name:object:", v21, sel_chatItemsDidChange_, v48, v32);

  }
  v49 = objc_alloc_init(CKImpactEffectManager);
  -[CKImpactEffectManager setDelegate:](v49, "setDelegate:", v21);
  -[CKTranscriptCollectionViewController setImpactEffectManager:](v21, "setImpactEffectManager:", v49);
  -[CKTranscriptCollectionViewController setIsPerformingRegenerateOrReloadOnlyUpdate:](v21, "setIsPerformingRegenerateOrReloadOnlyUpdate:", 0);
  v21->_allowsPluginPlayback = 0;
  v21->_pluginPlaybackDelay = 0.1;
  v50 = objc_alloc_init(CKTranscriptBalloonSelectionManager);
  selectionManager = v21->_selectionManager;
  v21->_selectionManager = v50;

  -[CKTranscriptBalloonSelectionManager setDelegate:](v21->_selectionManager, "setDelegate:", v21);
  -[CKTranscriptBalloonSelectionManager setDataSource:](v21->_selectionManager, "setDataSource:", v21);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v53 = objc_msgSend(v52, "isDiffableTranscriptDataSourceEnabled");

  if (v53)
  {
    -[CKTranscriptCollectionViewController viewIfLoaded](v21, "viewIfLoaded");
    v54 = (void *)objc_claimAutoreleasedReturnValue();

    if (v54)
      -[CKTranscriptCollectionViewController _updateTranscriptChatItemsWithoutAnimation:](v21, "_updateTranscriptChatItemsWithoutAnimation:", v41);
  }

  v20 = v57;
  v19 = v58;
LABEL_25:

  return v21;
}

- (IMChat)chat
{
  void *v2;
  void *v3;

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (IMChat *)v3;
}

- (void)setHiddenItems:(id)a3
{
  NSIndexSet *v4;
  NSIndexSet *v5;
  void *v6;
  void *v7;
  NSIndexSet *v8;
  _QWORD v9[5];

  v4 = (NSIndexSet *)a3;
  if (self->_hiddenItems != v4)
  {
    v8 = v4;
    v5 = (NSIndexSet *)-[NSIndexSet copy](v4, "copy");

    objc_storeStrong((id *)&self->_hiddenItems, v5);
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "visibleCells");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __55__CKTranscriptCollectionViewController_setHiddenItems___block_invoke;
    v9[3] = &unk_1E2754860;
    v9[4] = self;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v9);

    v4 = v5;
  }

}

void __55__CKTranscriptCollectionViewController_setHiddenItems___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  double v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "indexPathForCell:", v7);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v4, "section"))
  {
    if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1096), "containsIndex:", objc_msgSend(v4, "row")))
      v5 = 0.0;
    else
      v5 = 1.0;
    objc_msgSend(v7, "contentView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setAlpha:", v5);

  }
}

- (void)updateAssociatedItem:(id)a3 hidden:(BOOL)a4
{
  _BOOL4 v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;

  v4 = a4;
  -[CKTranscriptCollectionViewController cellForAssociatedChatItem:](self, "cellForAssociatedChatItem:", a3);
  v14 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "indexPathForCell:", v14);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    -[CKTranscriptCollectionViewController hiddenAssociatedItems](self, "hiddenAssociatedItems");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v8, "mutableCopy");
    v10 = v9;
    if (v9)
      v11 = v9;
    else
      v11 = (id)objc_opt_new();
    v12 = v11;

    v13 = objc_msgSend(v7, "item");
    if (v4)
      objc_msgSend(v12, "addIndex:", v13);
    else
      objc_msgSend(v12, "removeIndex:", v13);
    -[CKTranscriptCollectionViewController setHiddenAssociatedItems:](self, "setHiddenAssociatedItems:", v12);

  }
}

- (void)setHiddenAssociatedItems:(id)a3
{
  NSIndexSet *v4;
  NSIndexSet *v5;
  void *v6;
  void *v7;
  NSIndexSet *v8;
  _QWORD v9[5];

  v4 = (NSIndexSet *)a3;
  if (self->_hiddenAssociatedItems != v4)
  {
    v8 = v4;
    v5 = (NSIndexSet *)-[NSIndexSet copy](v4, "copy");

    objc_storeStrong((id *)&self->_hiddenAssociatedItems, v5);
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "visibleCells");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __65__CKTranscriptCollectionViewController_setHiddenAssociatedItems___block_invoke;
    v9[3] = &unk_1E2754860;
    v9[4] = self;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v9);

    v4 = v5;
  }

}

void __65__CKTranscriptCollectionViewController_setHiddenAssociatedItems___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  int v5;
  double v6;
  void *v7;
  id v8;

  v8 = a2;
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "indexPathForCell:", v8);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1104), "containsIndex:", objc_msgSend(v4, "row"));
  if (objc_msgSend(v4, "section") == 1)
  {
    if (v5)
      v6 = 0.0;
    else
      v6 = 1.0;
    objc_msgSend(v8, "contentView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setAlpha:", v6);

  }
}

- (void)setHiddenAssociatedItemsForMessageEditing:(id)a3
{
  NSIndexSet *v4;
  NSIndexSet *v5;
  void *v6;
  void *v7;
  NSIndexSet *v8;
  _QWORD v9[5];

  v4 = (NSIndexSet *)a3;
  if (self->_hiddenAssociatedItemsForMessageEditing != v4)
  {
    v8 = v4;
    v5 = (NSIndexSet *)-[NSIndexSet copy](v4, "copy");

    objc_storeStrong((id *)&self->_hiddenAssociatedItemsForMessageEditing, v5);
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "visibleCells");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __82__CKTranscriptCollectionViewController_setHiddenAssociatedItemsForMessageEditing___block_invoke;
    v9[3] = &unk_1E2754860;
    v9[4] = self;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v9);

    v4 = v5;
  }

}

void __82__CKTranscriptCollectionViewController_setHiddenAssociatedItemsForMessageEditing___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  int v5;
  id v6;

  v6 = a2;
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "indexPathForCell:", v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1112), "containsIndex:", objc_msgSend(v4, "item"));
  if (objc_msgSend(v4, "section") == 1 && v5 != objc_msgSend(v6, "isHidden"))
  {
    if (objc_msgSend(v6, "isHidden"))
      objc_msgSend(v6, "performReveal:", 0);
    else
      objc_msgSend(v6, "performHide:", 0);
  }

}

- (void)setHiddenBalloonViews:(id)a3
{
  NSIndexSet *v4;
  NSIndexSet *v5;
  void *v6;
  void *v7;
  NSIndexSet *v8;
  _QWORD v9[5];

  v4 = (NSIndexSet *)a3;
  if (self->_hiddenBalloonViews != v4)
  {
    v8 = v4;
    v5 = (NSIndexSet *)-[NSIndexSet copy](v4, "copy");

    objc_storeStrong((id *)&self->_hiddenBalloonViews, v5);
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "visibleCells");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __62__CKTranscriptCollectionViewController_setHiddenBalloonViews___block_invoke;
    v9[3] = &unk_1E2754860;
    v9[4] = self;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v9);

    v4 = v5;
  }

}

void __62__CKTranscriptCollectionViewController_setHiddenBalloonViews___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "collectionView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "indexPathForCell:", v7);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    v5 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1120), "containsIndex:", objc_msgSend(v4, "item"));
    objc_msgSend(v7, "balloonView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setHidden:", v5);

  }
}

- (NSMutableArray)stickerGUIDsHiddenDuringStickerAddAnimation
{
  NSMutableArray *stickerGUIDsHiddenDuringStickerAddAnimation;
  NSMutableArray *v4;
  NSMutableArray *v5;

  stickerGUIDsHiddenDuringStickerAddAnimation = self->_stickerGUIDsHiddenDuringStickerAddAnimation;
  if (!stickerGUIDsHiddenDuringStickerAddAnimation)
  {
    v4 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v5 = self->_stickerGUIDsHiddenDuringStickerAddAnimation;
    self->_stickerGUIDsHiddenDuringStickerAddAnimation = v4;

    stickerGUIDsHiddenDuringStickerAddAnimation = self->_stickerGUIDsHiddenDuringStickerAddAnimation;
  }
  return stickerGUIDsHiddenDuringStickerAddAnimation;
}

- (void)beginHidingStickerWithGUIDDuringAddStickerAnimation:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a3;
  -[CKTranscriptCollectionViewController stickerGUIDsHiddenDuringStickerAddAnimation](self, "stickerGUIDsHiddenDuringStickerAddAnimation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addObject:", v4);

  -[CKTranscriptCollectionViewController associatedChatItemForGUID:](self, "associatedChatItemForGUID:", v4);
  v8 = (id)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController cellForAssociatedChatItem:](self, "cellForAssociatedChatItem:", v8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v6, "associatedItemView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setHidden:", 1);

  }
}

- (void)endHidingStickerWithGUIDDuringAddStickerAnimation:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a3;
  -[CKTranscriptCollectionViewController stickerGUIDsHiddenDuringStickerAddAnimation](self, "stickerGUIDsHiddenDuringStickerAddAnimation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "removeObject:", v4);

  -[CKTranscriptCollectionViewController associatedChatItemForGUID:](self, "associatedChatItemForGUID:", v4);
  v8 = (id)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController cellForAssociatedChatItem:](self, "cellForAssociatedChatItem:", v8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v6, "associatedItemView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setHidden:", 0);

  }
}

- (void)_highlightCell:(id)a3 autoDismiss:(BOOL)a4
{
  _BOOL8 v4;
  NSIndexPath *itemIndexPathToHighlight;
  void *v7;
  int v8;
  BOOL v9;
  void *v10;
  id v11;

  v4 = a4;
  v11 = a3;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    itemIndexPathToHighlight = self->_itemIndexPathToHighlight;
    self->_itemIndexPathToHighlight = 0;

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "enableBalloonTextSelection");

    if (v8)
      v9 = !v4;
    else
      v9 = 0;
    if (!v9)
    {
      objc_msgSend(v11, "balloonView");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setHasOverlay:autoDismiss:", 1, v4);

    }
  }

}

- (void)highlightItemAtIndexPathWhenDisplayed:(id)a3 autoDismiss:(BOOL)a4
{
  _BOOL8 v4;
  NSIndexPath *v7;
  NSIndexPath **p_itemIndexPathToHighlight;
  void *v9;
  void *v10;
  NSIndexPath *v11;
  NSIndexPath *v12;

  v4 = a4;
  v7 = (NSIndexPath *)a3;
  p_itemIndexPathToHighlight = &self->_itemIndexPathToHighlight;
  if (self->_itemIndexPathToHighlight != v7)
  {
    v12 = v7;
    objc_storeStrong((id *)&self->_itemIndexPathToHighlight, a3);
    v7 = v12;
    if (v12)
    {
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "cellForItemAtIndexPath:", *p_itemIndexPathToHighlight);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (v10)
      {
        v11 = *p_itemIndexPathToHighlight;
        *p_itemIndexPathToHighlight = 0;

        -[CKTranscriptCollectionViewController _highlightCell:autoDismiss:](self, "_highlightCell:autoDismiss:", v10, v4);
      }

      v7 = v12;
    }
  }

}

- (id)selectedItems
{
  void *v3;
  void *v4;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;

  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "count"))
  {
    v5 = 0;
    do
    {
      objc_msgSend(v4, "objectAtIndex:", v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "IMChatItem");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "guid");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isMessageGuidSelected:", v8);

      if (v10)
        objc_msgSend(v3, "addIndex:", v5);

      ++v5;
    }
    while (v5 < objc_msgSend(v4, "count"));
  }

  return v3;
}

- (void)setSelectedItems:(id)a3
{
  id v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  CKTranscriptCollectionViewController *v9;

  if (a3)
  {
    v4 = a3;
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController deselectAllBalloons](self, "deselectAllBalloons");
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __57__CKTranscriptCollectionViewController_setSelectedItems___block_invoke;
    v7[3] = &unk_1E274E480;
    v8 = v5;
    v9 = self;
    v6 = v5;
    objc_msgSend(v4, "enumerateIndexesUsingBlock:", v7);

  }
}

void __57__CKTranscriptCollectionViewController_setSelectedItems___block_invoke(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "IMChatItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "guid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 40), "selectionManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addSelectedMessageGuid:selectionState:", v4, v6);

}

- (void)deleteSelectedChatItems:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController selectedChatItems](self, "selectedChatItems");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController deleteChatItems:sender:](self, "deleteChatItems:sender:", v5, v4);

}

- (id)_currentTopChatItemForAggregateChatItem:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v3, "stackView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "currentAssetReference");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "asset");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "chatItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (void)deleteChatItems:(id)a3 sender:(id)a4
{
  id v6;
  id v7;
  void *v8;
  char isKindOfClass;
  uint64_t v10;
  char v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  _BOOL8 v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  _QWORD aBlock[5];
  id v24;
  id v25;
  char v26;

  v6 = a3;
  v7 = a4;
  if (objc_msgSend(v6, "count"))
  {
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "beginHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35390]);
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    v10 = MEMORY[0x1E0C809B0];
    v11 = isKindOfClass & 1;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke;
    aBlock[3] = &unk_1E2754888;
    aBlock[4] = self;
    v12 = v6;
    v26 = v11;
    v24 = v12;
    v25 = v8;
    v13 = v8;
    v14 = _Block_copy(aBlock);
    v15 = (void *)objc_opt_new();
    v16 = CKIsRunningInMacCatalyst() != 0;
    v17 = objc_msgSend(v12, "count");
    v21[0] = v10;
    v21[1] = 3221225472;
    v21[2] = __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_332;
    v21[3] = &unk_1E274AED0;
    v22 = v14;
    v18 = v14;
    objc_msgSend(v15, "presentRecoverableDeletionConfirmationsFromViewController:forMessagesCount:alertControllerStyle:sender:alertsCompletedBlock:cancelBlock:", self, v17, v16, v7, v21, 0);

  }
  else
  {
    IMLogHandleForCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController deleteChatItems:sender:].cold.1(v13, v19, v20);
  }

}

void __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  _QWORD v4[5];
  id v5;
  id v6;
  char v7;

  objc_msgSend(*(id *)(a1 + 32), "updateAnimationGroup");
  v2 = objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_2;
  v4[3] = &unk_1E2754888;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  v7 = *(_BYTE *)(a1 + 56);
  v6 = *(id *)(a1 + 48);
  dispatch_group_notify(v2, MEMORY[0x1E0C80D38], v4);

}

void __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_2(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[4];
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  char v11;

  objc_msgSend(*(id *)(a1 + 32), "parentViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setEditing:animated:", 0, 1);

  v3 = MEMORY[0x1E0C809B0];
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_3;
  v7[3] = &unk_1E2754888;
  v4 = *(void **)(a1 + 40);
  v8 = *(id *)(a1 + 32);
  v9 = v4;
  v11 = *(_BYTE *)(a1 + 56);
  v10 = *(id *)(a1 + 48);
  v5[0] = v3;
  v5[1] = 3221225472;
  v5[2] = __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_327;
  v5[3] = &unk_1E274A208;
  v6 = *(id *)(a1 + 48);
  objc_msgSend(v8, "updateTranscript:animated:completion:", v7, 1, v5);

}

void __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_3(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  id v3;
  __int128 v4;
  id v5;
  void *v6;
  BOOL v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t j;
  void *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  __int128 v34;
  id obj;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t i;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint8_t v50[128];
  uint8_t buf[4];
  const char *v52;
  __int16 v53;
  void *v54;
  __int16 v55;
  void *v56;
  __int16 v57;
  _BOOL4 v58;
  __int16 v59;
  int v60;
  _BYTE v61[128];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v1 = (_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "transcriptCollectionViewController:willDeleteChatItems:", *v1, *(_QWORD *)(a1 + 40));

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  obj = *(id *)(a1 + 40);
  v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v61, 16);
  if (v38)
  {
    v37 = *(_QWORD *)v47;
    *(_QWORD *)&v4 = 136316162;
    v34 = v4;
    do
    {
      for (i = 0; i != v38; ++i)
      {
        if (*(_QWORD *)v47 != v37)
          objc_enumerationMutation(obj);
        v41 = *(id *)(*((_QWORD *)&v46 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v5 = v41;
          objc_msgSend(v5, "momentShareURL");
          v6 = (void *)objc_claimAutoreleasedReturnValue();

          if (*(_BYTE *)(a1 + 56))
            v7 = v6 != 0;
          else
            v7 = 1;
          if (!v7)
          {
            objc_msgSend(*(id *)(a1 + 32), "_currentTopChatItemForAggregateChatItem:", v5);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "IMChatItem");
            v9 = (void *)objc_claimAutoreleasedReturnValue();
            if (v9)
              objc_msgSend(v3, "addObject:", v9);

          }
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v10 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v5, "IMChatItem");
              v11 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v11, "guid");
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v5, "IMChatItem");
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v13, "guid");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              v15 = *(unsigned __int8 *)(a1 + 56);
              *(_DWORD *)buf = v34;
              v52 = "-[CKTranscriptCollectionViewController deleteChatItems:sender:]_block_invoke_3";
              v53 = 2112;
              v54 = v12;
              v55 = 2112;
              v56 = v14;
              v57 = 1024;
              v58 = v6 != 0;
              v59 = 1024;
              v60 = v15;
              _os_log_impl(&dword_18DFCD000, v10, OS_LOG_TYPE_INFO, "%s Targeting chatItem.guid for deletion: %@, given aggregateAttachmentChatItem.guid: %@. isMomentShare: %{BOOL}d, isKeyCommandDelete: %{BOOL}d", buf, 0x2Cu);

            }
          }

        }
        objc_msgSend(v41, "IMChatItem", v34);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        if (v39)
        {
          objc_msgSend(v3, "addObject:");
          objc_msgSend(v41, "visibleAssociatedMessageChatItems");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = (void *)objc_msgSend(v16, "mutableCopy");

          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v41, "visibleAssociatedMessageChatItemsIncludingTapbacks");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "arrayByAddingObjectsFromArray:", v18);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = objc_msgSend(v19, "mutableCopy");

            v17 = (void *)v20;
          }
          v44 = 0u;
          v45 = 0u;
          v42 = 0u;
          v43 = 0u;
          v21 = v17;
          v22 = -[NSObject countByEnumeratingWithState:objects:count:](v21, "countByEnumeratingWithState:objects:count:", &v42, v50, 16);
          if (v22)
          {
            v23 = *(_QWORD *)v43;
            do
            {
              for (j = 0; j != v22; ++j)
              {
                if (*(_QWORD *)v43 != v23)
                  objc_enumerationMutation(v21);
                v25 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * j);
                objc_msgSend(v25, "IMChatItem");
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v3, "addObject:", v26);

                IMLogHandleForCategory();
                v27 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
                {
                  objc_msgSend(v25, "IMChatItem");
                  v28 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v28, "guid");
                  v29 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 136315394;
                  v52 = "-[CKTranscriptCollectionViewController deleteChatItems:sender:]_block_invoke";
                  v53 = 2112;
                  v54 = v29;
                  _os_log_error_impl(&dword_18DFCD000, v27, OS_LOG_TYPE_ERROR, "%s adding associatedMessageChatItem.guid for deletion %@", buf, 0x16u);

                }
              }
              v22 = -[NSObject countByEnumeratingWithState:objects:count:](v21, "countByEnumeratingWithState:objects:count:", &v42, v50, 16);
            }
            while (v22);
          }

        }
        else
        {
          IMLogHandleForCategory();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v41, "IMChatItem");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "guid");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 136315394;
            v52 = "-[CKTranscriptCollectionViewController deleteChatItems:sender:]_block_invoke";
            v53 = 2112;
            v54 = v31;
            _os_log_error_impl(&dword_18DFCD000, v21, OS_LOG_TYPE_ERROR, "%s chatItem's underlying IMChatItem was nil. Will not delete chatItem.guid. %@", buf, 0x16u);

          }
        }

      }
      v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v61, 16);
    }
    while (v38);
  }

  IMLogHandleForCategory();
  v32 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_3_cold_1(v3, v32);

  objc_msgSend(*(id *)(a1 + 48), "deleteChatItems:", v3);
  if (CKIsRunningInMacCatalyst())
  {
    objc_msgSend(*(id *)(a1 + 32), "selectionManager");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "removeAllSelectedMessageGuids");

  }
}

void __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_327(uint64_t a1)
{
  NSObject *v1;
  id v2;
  int v3;
  const char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "endHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35390]);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      v3 = 136315138;
      v4 = "-[CKTranscriptCollectionViewController deleteChatItems:sender:]_block_invoke";
      _os_log_impl(&dword_18DFCD000, v1, OS_LOG_TYPE_INFO, "%s requesting purge of default snapshot", (uint8_t *)&v3, 0xCu);
    }

  }
  v2 = objc_alloc_init(MEMORY[0x1E0DAAD88]);
  objc_msgSend(v2, "deleteSnapshotsForApplicationIdentifier:", CFSTR("com.apple.MobileSMS"));
  objc_msgSend(v2, "invalidate");

}

uint64_t __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_332(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)setTransitionedFromComposing:(BOOL)a3
{
  self->_transitionedFromComposing = a3;
  if (a3)
    -[CKTranscriptCollectionViewController setTransitioningFromComposing:](self, "setTransitioningFromComposing:", 0);
}

- (NSDictionary)pluginSnapshots
{
  NSDictionary *pluginSnapshots;

  pluginSnapshots = self->_pluginSnapshots;
  if (!pluginSnapshots)
  {
    self->_pluginSnapshots = (NSDictionary *)MEMORY[0x1E0C9AA70];

    pluginSnapshots = self->_pluginSnapshots;
  }
  return pluginSnapshots;
}

- (void)setTransitioningFromComposing:(BOOL)a3
{
  void *v4;
  NSDictionary *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSDictionary *pluginSnapshots;
  NSDictionary *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  self->_transitioningFromComposing = a3;
  if (a3)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (NSDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v6 = v4;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v19 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v11, (_QWORD)v18);
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "IMChatItem");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "guid");
            v14 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v12, "snapshotViewAfterScreenUpdates:", 0);
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            -[NSDictionary setObject:forKeyedSubscript:](v5, "setObject:forKeyedSubscript:", v15, v14);

          }
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v8);
    }

    pluginSnapshots = self->_pluginSnapshots;
    self->_pluginSnapshots = v5;

  }
  else
  {
    v17 = self->_pluginSnapshots;
    self->_pluginSnapshots = (NSDictionary *)MEMORY[0x1E0C9AA70];

  }
}

- (void)setScrollAnchor:(double)a3
{
  id v4;

  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setAnchorYPosition:", a3);

}

- (void)__updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells:(BOOL)a3
{
  void *v5;
  int v6;
  void *v7;
  int v8;
  _QWORD v9[5];
  BOOL v10;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isExpressiveTextEnabled");

  if (v6)
  {
    if (-[CKTextEffectCoordinator isPaused](self->_transcriptTextEffectCoordinator, "isPaused"))
    {
      LOBYTE(v6) = 1;
    }
    else
    {
      -[CKTextEffectCoordinator setPaused:includingAnimators:](self->_transcriptTextEffectCoordinator, "setPaused:includingAnimators:", 1, 0);
      -[CKTextEffectCoordinator reset](self->_transcriptTextEffectCoordinator, "reset");
      LOBYTE(v6) = 0;
    }
  }
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __111__CKTranscriptCollectionViewController___updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells___block_invoke;
  v9[3] = &unk_1E274CA88;
  v9[4] = self;
  v10 = a3;
  objc_msgSend(MEMORY[0x1E0CEABB0], "performWithoutAnimation:", v9);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isExpressiveTextEnabled");

  if ((v6 & 1) == 0 && v8 && !+[CKApplicationState isResizing](CKApplicationState, "isResizing"))
  {
    -[CKTextEffectCoordinator setPaused:includingAnimators:](self->_transcriptTextEffectCoordinator, "setPaused:includingAnimators:", 0, 0);
    -[CKTextEffectCoordinator updateWithReason:](self->_transcriptTextEffectCoordinator, "updateWithReason:", CFSTR("TranscriptCollectionViewController did update and configure visible cells"));
  }
}

void __111__CKTranscriptCollectionViewController___updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "collectionViewLayout");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "reloadLayout");
  v20 = v3;
  objc_msgSend(v3, "prepareLayout");
  objc_msgSend(*(id *)(a1 + 32), "chatItems");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "associatedChatItems");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "indexPathsForVisibleItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v25;
    v22 = v2;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v25 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
        objc_msgSend(v2, "cellForItemAtIndexPath:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (v10)
        {
          if (!objc_msgSend(v9, "section"))
          {
            v11 = v4;
            objc_msgSend(v23, "objectAtIndexedSubscript:", objc_msgSend(v9, "item"));
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            v14 = objc_msgSend(v13, "isExpressiveTextEnabled");

            if (v14)
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
              {
                objc_msgSend(v10, "balloonView");
                v15 = (void *)objc_claimAutoreleasedReturnValue();
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) != 0)
                {
                  objc_msgSend(v15, "textView");
                  v16 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v16, "ck_invalidateAllAnimators");

                }
              }
            }
            objc_msgSend(*(id *)(a1 + 32), "configureCell:forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:", v10, v12, v9, 0, 3, 0.0);

            v4 = v11;
            v2 = v22;
          }
          if (*(_BYTE *)(a1 + 40) && objc_msgSend(v9, "section") == 1)
          {
            v17 = objc_msgSend(v9, "item");
            v18 = v10;
            objc_msgSend(v21, "objectAtIndexedSubscript:", v17);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(*(id *)(a1 + 32), "configureAssociatedCell:forChatItem:atIndexPath:", v18, v19, v9);

          }
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    }
    while (v6);
  }

}

- (void)_updateLayoutAndConfigureVisibleCells
{
  -[CKTranscriptCollectionViewController __updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells:](self, "__updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells:", 1);
}

- (void)traitCollectionDidChange:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = self;
  v8.super_class = (Class)CKTranscriptCollectionViewController;
  v4 = a3;
  -[CKTranscriptCollectionViewController traitCollectionDidChange:](&v8, sel_traitCollectionDidChange_, v4);
  -[CKTranscriptCollectionViewController traitCollection](self, "traitCollection", v8.receiver, v8.super_class);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "userInterfaceStyle");
  v7 = objc_msgSend(v4, "userInterfaceStyle");

  if (v6 != v7)
    -[CKTranscriptCollectionViewController _updateLayoutAndConfigureVisibleCells](self, "_updateLayoutAndConfigureVisibleCells");
}

- (void)_requestChatItemLayoutInvalidation
{
  id v3;

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "transcriptCollectionViewControllerNeedsChatItemLayoutInvalidation:", self);

}

- (void)invalidateChatItemLayoutWithNewBalloonMaxWidth:(double)a3 marginInsets:(UIEdgeInsets)a4 traitCollection:(id)a5
{
  double right;
  double bottom;
  double left;
  double top;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  int v17;
  void *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  right = a4.right;
  bottom = a4.bottom;
  left = a4.left;
  top = a4.top;
  v30 = *MEMORY[0x1E0C80C00];
  v11 = a5;
  -[CKTranscriptCollectionViewController setBalloonMaxWidth:](self, "setBalloonMaxWidth:", a3);
  -[CKTranscriptCollectionViewController setMarginInsets:](self, "setMarginInsets:", top, left, bottom, right);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setMarginInsets:", top, left, bottom, right);

  -[CKTranscriptCollectionViewController notifications](self, "notifications");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    -[CKTranscriptCollectionViewController notifications](self, "notifications");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = -[CKTranscriptCollectionViewController newChatItemsWithNotifications:](self, "newChatItemsWithNotifications:", v14);

    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "isConsolidatedChatItemsEnabled");

    if (v17)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setChatItemsUsingReloadDataWithoutAnimation:", v15);

    }
    else
    {
      -[CKTranscriptCollectionViewController setChatItems:](self, "setChatItems:", v15);
    }
  }
  else
  {
    -[CKTranscriptCollectionViewController _fullMaxWidth](self, "_fullMaxWidth");
    v20 = v19;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems", 0);
    v15 = (id)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    if (v21)
    {
      v22 = v21;
      v23 = *(_QWORD *)v26;
      do
      {
        for (i = 0; i != v22; ++i)
        {
          if (*(_QWORD *)v26 != v23)
            objc_enumerationMutation(v15);
          objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * i), "updateWithBalloonMaxWidth:fullMaxWidth:transcriptTraitCollection:", v11, a3, v20);
        }
        v22 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
      }
      while (v22);
    }
  }

  -[CKTranscriptCollectionViewController _updateLayoutAndConfigureVisibleCells](self, "_updateLayoutAndConfigureVisibleCells");
}

- (void)_resizingStart:(id)a3
{
  id v3;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "beginDisablingTranscriptDynamicsForReason:", CFSTR("MacWindowResizing"));

}

- (void)_resizingEnd:(id)a3
{
  void *v4;
  int v5;
  id v6;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", a3);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "endDisablingTranscriptDynamicsForReason:", CFSTR("MacWindowResizing"));
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isExpressiveTextEnabled");

  if (v5)
  {
    -[CKTextEffectCoordinator setPaused:includingAnimators:](self->_transcriptTextEffectCoordinator, "setPaused:includingAnimators:", 0, 0);
    -[CKTextEffectCoordinator updateWithReason:](self->_transcriptTextEffectCoordinator, "updateWithReason:", CFSTR("TranscriptCollectionViewController _resizingEnd"));
  }

}

- (void)sizeFullTranscriptIfNecessary
{
  void *v3;
  void *v4;
  unint64_t v5;
  id v6;
  void *v7;
  NSObject *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  dispatch_time_t v20;
  _QWORD block[5];
  uint8_t buf[16];

  if (!-[CKTranscriptCollectionViewController sizedFullTranscript](self, "sizedFullTranscript"))
  {
    -[CKTranscriptCollectionViewController setSizedFullTranscript:](self, "setSizedFullTranscript:", 1);
    -[CKTranscriptCollectionViewController imChatItems](self, "imChatItems");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v3, "count");
    if (v5 >= objc_msgSend(v4, "count"))
    {
      objc_msgSend(v3, "subarrayWithRange:", 0, objc_msgSend(v3, "count") - objc_msgSend(v4, "count"));
      v6 = (id)objc_claimAutoreleasedReturnValue();
      v7 = v4;
    }
    else
    {
      v6 = v3;
      objc_msgSend(MEMORY[0x1E0C99D20], "array");
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, "ChatItems changed between collection view init and viewDidAppearDeferredSetup, resetting transcript state", buf, 2u);
        }

      }
    }
    -[CKTranscriptCollectionViewController notifications](self, "notifications");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      -[CKTranscriptCollectionViewController notifications](self, "notifications");
      v10 = (id)objc_claimAutoreleasedReturnValue();
      v11 = -[CKTranscriptCollectionViewController newChatItemsWithNotifications:](self, "newChatItemsWithNotifications:", v10);
    }
    else
    {
      v10 = -[CKTranscriptCollectionViewController newChatItemsWithIMChatItems:](self, "newChatItemsWithIMChatItems:", v6);
      objc_msgSend(v10, "arrayByAddingObjectsFromArray:", v7);
      v11 = (id)objc_claimAutoreleasedReturnValue();
    }
    v12 = v11;

    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "isConsolidatedChatItemsEnabled");

    if (v14)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "setChatItemsUsingReloadDataWithoutAnimation:", v12);

    }
    else
    {
      -[CKTranscriptCollectionViewController setChatItems:](self, "setChatItems:", v12);
      -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "reloadData");

      -[CKTranscriptCollectionViewController reloadData](self, "reloadData");
    }
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKScrollViewAnimationProperties unanimated](CKScrollViewAnimationProperties, "unanimated");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "enforceTranscriptScrollIntentWithAnimationProperties:", v18);
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "endHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35370]);
    v20 = dispatch_time(0, 100000000);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __69__CKTranscriptCollectionViewController_sizeFullTranscriptIfNecessary__block_invoke;
    block[3] = &unk_1E274A208;
    block[4] = self;
    dispatch_after(v20, MEMORY[0x1E0C80D38], block);

  }
}

void __69__CKTranscriptCollectionViewController_sizeFullTranscriptIfNecessary__block_invoke(uint64_t a1)
{
  void *v2;
  int v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isUserInteractionEnabled");

  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "collectionView");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "flashScrollIndicators");

  }
}

- (void)_prewarmMediaPreviews
{
  NSObject *v3;
  void *v4;
  NSObject *v5;
  int v6;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint8_t buf[4];
  int v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v3, OS_LOG_TYPE_INFO, "prewarm media previews", buf, 2u);
    }

  }
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __61__CKTranscriptCollectionViewController__prewarmMediaPreviews__block_invoke;
  v7[3] = &unk_1E274DF98;
  v7[4] = &v8;
  objc_msgSend(v4, "enumerateObjectsWithOptions:usingBlock:", 2, v7);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *((_DWORD *)v9 + 6);
      *(_DWORD *)buf = 67109120;
      v13 = v6;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "prewarm media previews complete, %u warmed", buf, 8u);
    }

  }
  _Block_object_dispose(&v8, 8);
}

void __61__CKTranscriptCollectionViewController__prewarmMediaPreviews__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
    v3 = v9;
    objc_msgSend(v3, "mediaObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "previewMaxWidth");
    v7 = v6;
    v8 = objc_msgSend(v3, "balloonOrientation");

    objc_msgSend(v4, "prewarmPreviewForWidth:orientation:", v8, v7);
  }

}

- (void)_prewarmLinkPresentations
{
  id v3;

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _prewarmLinkPresentationsWithChatItems:](self, "_prewarmLinkPresentationsWithChatItems:", v3);

}

- (void)_prewarmLinkPresentationsWithChatItems:(id)a3
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  int v6;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint8_t buf[4];
  int v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "prewarm link presentations", buf, 2u);
    }

  }
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __79__CKTranscriptCollectionViewController__prewarmLinkPresentationsWithChatItems___block_invoke;
  v7[3] = &unk_1E274DF98;
  v7[4] = &v8;
  objc_msgSend(v3, "enumerateObjectsWithOptions:usingBlock:", 2, v7);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *((_DWORD *)v9 + 6);
      *(_DWORD *)buf = 67109120;
      v13 = v6;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "prewarm media previews complete, %u warmed", buf, 8u);
    }

  }
  _Block_object_dispose(&v8, 8);

}

void __79__CKTranscriptCollectionViewController__prewarmLinkPresentationsWithChatItems___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v6, "IMChatItem");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "dataSource");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pluginPayload");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "acceptPurgedTransfers");
    ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);

  }
}

- (void)_prewarmBalloonControllers
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v9 = v8;
          -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = (id)objc_msgSend(v9, "extensibleViewForContext:", v10);

        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

}

- (void)reloadData
{
  void *v3;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "reloadData");

  -[CKTranscriptCollectionViewController reconfigureVisibleSpeakerButtonCells](self, "reconfigureVisibleSpeakerButtonCells");
}

- (void)updateTranscript:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v6;
  void (**v8)(_QWORD);
  id v9;
  NSObject *v10;
  const __CFString *v11;
  void *v12;
  void *v13;
  BOOL v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  NSObject *v19;
  __CFString *v20;
  void *v21;
  void *v22;
  void *v23;
  BOOL v24;
  void (**v25)(void);
  void *v26;
  _QWORD aBlock[4];
  id v28;
  id v29;
  uint8_t buf[4];
  const __CFString *v31;
  __int16 v32;
  void *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v6 = a4;
  v36 = *MEMORY[0x1E0C80C00];
  v8 = (void (**)(_QWORD))a3;
  v9 = a5;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      if (v6)
        v11 = CFSTR("YES");
      else
        v11 = CFSTR("NO");
      v12 = _Block_copy(v9);
      *(_DWORD *)buf = 138412546;
      v31 = v11;
      v32 = 2112;
      v33 = v12;
      _os_log_impl(&dword_18DFCD000, v10, OS_LOG_TYPE_INFO, "Update transcript animated:%@, completion:%@", buf, 0x16u);

    }
  }
  -[CKTranscriptCollectionViewController transcriptUpdateCompletion](self, "transcriptUpdateCompletion");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v13 == 0;

  if (v14)
  {
    -[CKTranscriptCollectionViewController setTranscriptUpdateCompletion:](self, "setTranscriptUpdateCompletion:", v9);
  }
  else
  {
    -[CKTranscriptCollectionViewController transcriptUpdateCompletion](self, "transcriptUpdateCompletion");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __77__CKTranscriptCollectionViewController_updateTranscript_animated_completion___block_invoke;
    aBlock[3] = &unk_1E27548B0;
    v16 = v9;
    v28 = v16;
    v17 = v15;
    v29 = v17;
    v18 = _Block_copy(aBlock);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        -[CKTranscriptCollectionViewController transcriptUpdateCompletion](self, "transcriptUpdateCompletion");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = (__CFString *)_Block_copy(v26);
        v21 = _Block_copy(v16);
        v22 = _Block_copy(v18);
        *(_DWORD *)buf = 134218496;
        v31 = v20;
        v32 = 2048;
        v33 = v21;
        v34 = 2048;
        v35 = v22;
        _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, "Update transcript while update is already in progress. Current completion: %p – new completion: %p - chained: %p", buf, 0x20u);

      }
    }
    -[CKTranscriptCollectionViewController setTranscriptUpdateCompletion:](self, "setTranscriptUpdateCompletion:", v18);

  }
  -[CKTranscriptCollectionViewController setTranscriptUpdateAnimated:](self, "setTranscriptUpdateAnimated:", v6);
  v8[2](v8);
  -[CKTranscriptCollectionViewController transcriptUpdateCompletion](self, "transcriptUpdateCompletion");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v23 == 0;

  if (!v24)
  {
    -[CKTranscriptCollectionViewController transcriptUpdateCompletion](self, "transcriptUpdateCompletion");
    v25 = (void (**)(void))objc_claimAutoreleasedReturnValue();
    v25[2]();

  }
  -[CKTranscriptCollectionViewController setTranscriptUpdateCompletion:](self, "setTranscriptUpdateCompletion:", 0);
  -[CKTranscriptCollectionViewController setTranscriptUpdateAnimated:](self, "setTranscriptUpdateAnimated:", 1);

}

void __77__CKTranscriptCollectionViewController_updateTranscript_animated_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = _Block_copy(*(const void **)(a1 + 32));
      v4 = _Block_copy(*(const void **)(a1 + 40));
      v13 = 134218240;
      v14 = v3;
      v15 = 2048;
      v16 = v4;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "Update transcript while update is already in progress – chained completion handler called. Completion: %p - innerCompletion: %p", (uint8_t *)&v13, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v6 = _Block_copy(*(const void **)(a1 + 32));
        v13 = 134217984;
        v14 = v6;
        _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Update transcript while update is already in progress – chained completion handler called. Will call completion: %p", (uint8_t *)&v13, 0xCu);

      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v8 = _Block_copy(*(const void **)(a1 + 32));
        v13 = 134217984;
        v14 = v8;
        _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_INFO, "Update transcript while update is already in progress – chained completion handler called. Did call completion: %p", (uint8_t *)&v13, 0xCu);

      }
    }
  }
  if (*(_QWORD *)(a1 + 40))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = _Block_copy(*(const void **)(a1 + 40));
        v13 = 134217984;
        v14 = v10;
        _os_log_impl(&dword_18DFCD000, v9, OS_LOG_TYPE_INFO, "Update transcript while update is already in progress – chained completion handler called. Will call innerCompletion: %p", (uint8_t *)&v13, 0xCu);

      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        v12 = _Block_copy(*(const void **)(a1 + 40));
        v13 = 134217984;
        v14 = v12;
        _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Update transcript while update is already in progress – chained completion handler called. Did call innerCompletion: %p", (uint8_t *)&v13, 0xCu);

      }
    }
  }
}

- (id)latestScheduledMessageIndexPath
{
  void *v2;
  id v3;
  _QWORD v5[6];
  _QWORD v6[3];
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t);
  id v13;

  v8 = 0;
  v9 = &v8;
  v10 = 0x3032000000;
  v11 = __Block_byref_object_copy__38;
  v12 = __Block_byref_object_dispose__38;
  v13 = 0;
  v6[0] = 0;
  v6[1] = v6;
  v6[2] = 0x2020000000;
  v7 = 0;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __71__CKTranscriptCollectionViewController_latestScheduledMessageIndexPath__block_invoke;
  v5[3] = &unk_1E27548D8;
  v5[4] = v6;
  v5[5] = &v8;
  objc_msgSend(v2, "enumerateObjectsWithOptions:usingBlock:", 2, v5);

  v3 = (id)v9[5];
  _Block_object_dispose(v6, 8);
  _Block_object_dispose(&v8, 8);

  return v3;
}

void __71__CKTranscriptCollectionViewController_latestScheduledMessageIndexPath__block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && (objc_msgSend(v13, "messageItem"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        v8 = objc_msgSend(v7, "scheduleType"),
        v7,
        v8 == 2)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
LABEL_7:
    v12 = v13;
    goto LABEL_8;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 0);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *a4 = 1;
    goto LABEL_7;
  }
  v12 = v13;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    *a4 = 1;
LABEL_8:

}

- (void)scrollTranscriptToEntryViewInsertionTimeWithAnimation:(BOOL)a3
{
  _BOOL4 v3;
  NSObject *v5;
  const __CFString *v6;
  void *v7;
  void *v8;
  id WeakRetained;
  unint64_t v10;
  NSObject *v11;
  __CFString *v12;
  void *v13;
  void *v14;
  int v15;
  const __CFString *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v3 = a3;
  v19 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      if (v3)
        v6 = CFSTR("YES");
      else
        v6 = CFSTR("NO");
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      CKDebugNameForCKTranscriptScrollIntent(objc_msgSend(v7, "transcriptScrollIntent"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412546;
      v16 = v6;
      v17 = 2112;
      v18 = v8;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Received request to figure out & scroll to latest desired time Animated: %@, currentIntent: %@", (uint8_t *)&v15, 0x16u);

    }
  }
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v10 = objc_msgSend(WeakRetained, "transcriptCollectionViewControllerWantsCurrentDesiredIntent:", self);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      CKDebugNameForCKTranscriptScrollIntent(v10);
      v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v15 = 138412290;
      v16 = v12;
      _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Delegate informed us that the desired intent is: %@", (uint8_t *)&v15, 0xCu);

    }
  }
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setTranscriptScrollIntent:", v10);

  if (v3)
    +[CKScrollViewAnimationProperties systemDefaultScrollAnimation](CKScrollViewAnimationProperties, "systemDefaultScrollAnimation");
  else
    +[CKScrollViewAnimationProperties unanimated](CKScrollViewAnimationProperties, "unanimated");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController enforceTranscriptScrollIntentWithAnimationProperties:](self, "enforceTranscriptScrollIntentWithAnimationProperties:", v14);

}

- (void)enforceTranscriptScrollIntentWithAnimationProperties:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  unint64_t v7;
  void *v8;
  NSObject *v9;
  void *v10;
  int v11;
  void *WeakRetained;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _BOOL8 v18;
  void *v19;
  void *v20;
  _BOOL8 v21;
  void *v22;
  int v23;
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  IMLogHandleForCategory();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v23 = 138543362;
    v24 = v4;
    _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Received request to enforce transcript scrollIntent. Animation: %{public}@", (uint8_t *)&v23, 0xCu);
  }

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "transcriptScrollIntent");

  CKDebugNameForCKTranscriptScrollIntent(v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  IMLogHandleForCategory();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v23 = 138543618;
    v24 = v8;
    v25 = 2114;
    v26 = v4;
    _os_log_impl(&dword_18DFCD000, v9, OS_LOG_TYPE_INFO, "Enforcing transcript scroll intent %{public}@ with animation: %{public}@", (uint8_t *)&v23, 0x16u);
  }

  switch(v7)
  {
    case 6uLL:
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "scrollToBottomStopsAtTopOfLastBubble");

      if (!v14)
      {
        v17 = objc_msgSend(v4, "animationType");
        if ((unint64_t)(v17 - 1) >= 2)
        {
          if (v17)
            break;
          -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = v19;
          v21 = 0;
        }
        else
        {
          v18 = -[CKViewController deferredAppeared](self, "deferredAppeared");
          -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = v19;
          v21 = v18;
        }
        objc_msgSend(v19, "__ck_scrollToBottom:", v21);

        break;
      }
      -[CKTranscriptCollectionViewController scrollToTopOfLastBubbleCellWithAnimationProperties:](self, "scrollToTopOfLastBubbleCellWithAnimationProperties:", v4);
      break;
    case 2uLL:
      WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "highlightedMessageScrollContext");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(WeakRetained, "transcriptCollectionViewController:shouldScrollToHighlightedMessage:", self, v16);

LABEL_17:
      break;
    case 0uLL:
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "isScheduledMessagesCoreEnabled");

      if (v11)
      {
        -[CKTranscriptCollectionViewController latestScheduledMessageIndexPath](self, "latestScheduledMessageIndexPath");
        WeakRetained = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        WeakRetained = 0;
      }
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "scrollToBottomHidingMessageAtIndexPath:animationProperties:", WeakRetained, v4);

      goto LABEL_17;
  }

}

- (void)stopPlayingAudio
{
  id v2;

  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stop");

}

- (BOOL)canRaiseToListen
{
  void *v3;
  int v4;
  void *v5;
  char v6;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;

  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v12 = 0;
  if (+[CKRaiseGesture isRaiseGestureEnabled](CKRaiseGesture, "isRaiseGestureEnabled"))
  {
    -[CKTranscriptCollectionViewController audioController](self, "audioController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "isPlaying");

    if (v4)
    {
      *((_BYTE *)v10 + 24) = 1;
    }
    else
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v8[0] = MEMORY[0x1E0C809B0];
      v8[1] = 3221225472;
      v8[2] = __56__CKTranscriptCollectionViewController_canRaiseToListen__block_invoke;
      v8[3] = &unk_1E274DF98;
      v8[4] = &v9;
      objc_msgSend(v5, "enumerateObjectsWithOptions:usingBlock:", 2, v8);

    }
  }
  v6 = *((_BYTE *)v10 + 24);
  _Block_object_dispose(&v9, 8);
  return v6;
}

void __56__CKTranscriptCollectionViewController_canRaiseToListen__block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char isKindOfClass;
  void *v7;
  id v8;
  void *v9;
  char v10;
  id v11;

  v11 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v7 = v11;
  if ((isKindOfClass & 1) != 0)
  {
    v8 = v11;
    objc_msgSend(v8, "mediaObject");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "shouldSuppressPreview");

    if ((v10 & 1) == 0 && (objc_msgSend(v8, "isFromMe") & 1) == 0 && (objc_msgSend(v8, "isPlayed") & 1) == 0)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
      *a4 = 1;
    }

    v7 = v11;
  }

}

- (BOOL)canRaiseToTalk
{
  void *v3;
  int v4;
  NSObject *v5;
  const char *v6;
  uint8_t *v7;
  void *v8;
  int v9;
  __int16 v11;
  __int16 v12;

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isStewieConversation");

  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v12 = 0;
        v6 = "Raise to talk disabled for Stewie";
        v7 = (uint8_t *)&v12;
LABEL_9:
        _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, v6, v7, 2u);
        goto LABEL_10;
      }
      goto LABEL_10;
    }
    return 0;
  }
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isReadOnlyChat");

  if (v9)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v11 = 0;
        v6 = "Raise to talk disabled for read only chats";
        v7 = (uint8_t *)&v11;
        goto LABEL_9;
      }
LABEL_10:

    }
    return 0;
  }
  return +[CKRaiseGesture isRaiseGestureEnabled](CKRaiseGesture, "isRaiseGestureEnabled");
}

- (void)raiseGestureRecognized:(id)a3
{
  void *v4;
  char v5;
  id v6;

  v6 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isBlockedByCommunicationLimits");

  if ((v5 & 1) == 0)
    -[CKTranscriptCollectionViewController __raiseGestureRecognized:](self, "__raiseGestureRecognized:", v6);

}

- (void)__raiseGestureRecognized:(id)a3
{
  id v4;
  int v5;
  BOOL v6;
  CKAudioController *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  CKAudioController *v12;
  _QWORD v13[4];
  id v14;

  v4 = a3;
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v12 = (CKAudioController *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isRecognized");

  if (!v5)
  {
    -[CKAudioController pause](v12, "pause");
    goto LABEL_7;
  }
  if (!v12)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "__ck_indexesOfUnplayedAudioMessages");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v9, "count"));
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __65__CKTranscriptCollectionViewController___raiseGestureRecognized___block_invoke;
    v13[3] = &unk_1E2754900;
    v14 = v10;
    v11 = v10;
    objc_msgSend(v8, "enumerateObjectsAtIndexes:options:usingBlock:", v9, 0, v13);
    v12 = -[CKAudioController initWithMediaObjects:]([CKAudioController alloc], "initWithMediaObjects:", v11);
    -[CKAudioController setDelegate:](v12, "setDelegate:", self);
    -[CKTranscriptCollectionViewController setAudioController:](self, "setAudioController:", v12);
    -[CKAudioController setShouldUseSpeaker:](v12, "setShouldUseSpeaker:", 0);
    -[CKAudioController playAfterDelay:](v12, "playAfterDelay:", 0.5);

    goto LABEL_7;
  }
  -[CKAudioController setShouldUseSpeaker:](v12, "setShouldUseSpeaker:", 0);
  v6 = -[CKAudioController isPlaying](v12, "isPlaying");
  v7 = v12;
  if (!v6)
  {
    -[CKAudioController playAfterDelay:](v12, "playAfterDelay:", 0.5);
LABEL_7:
    v7 = v12;
  }

}

void __65__CKTranscriptCollectionViewController___raiseGestureRecognized___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "mediaObject");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

- (CKFullScreenEffectManager)fullscreenEffectManager
{
  CKFullScreenEffectManager *fullscreenEffectManager;
  CKFullScreenEffectManager *v4;
  CKFullScreenEffectManager *v5;

  fullscreenEffectManager = self->_fullscreenEffectManager;
  if (!fullscreenEffectManager)
  {
    v4 = objc_alloc_init(CKFullScreenEffectManager);
    v5 = self->_fullscreenEffectManager;
    self->_fullscreenEffectManager = v4;

    -[CKFullScreenEffectManager setDelegate:](self->_fullscreenEffectManager, "setDelegate:", self);
    fullscreenEffectManager = self->_fullscreenEffectManager;
  }
  return fullscreenEffectManager;
}

- (NSMutableSet)currentEffectDecorationViews
{
  NSMutableSet *currentEffectDecorationViews;
  NSMutableSet *v4;
  NSMutableSet *v5;

  currentEffectDecorationViews = self->_currentEffectDecorationViews;
  if (!currentEffectDecorationViews)
  {
    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v4 = (NSMutableSet *)objc_claimAutoreleasedReturnValue();
    v5 = self->_currentEffectDecorationViews;
    self->_currentEffectDecorationViews = v4;

    currentEffectDecorationViews = self->_currentEffectDecorationViews;
  }
  return currentEffectDecorationViews;
}

- (void)startFullscreenEffectIfNeededForChatItem:(id)a3
{
  id v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v4 = a3;
  objc_msgSend(v4, "messageItem");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "unsentIsFromMeItem");

  if (v6)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "transcriptCollectionViewControllerWillBeginFullscreenEffectAnimationForOutgoingMessage:", self);

  }
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController textInputMode](self, "textInputMode");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "primaryLanguage");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "startFullscreenEffectForChatItem:language:", v4, v9);

}

- (void)stopFullscreenEffect
{
  id v2;

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stopFullscreenEffect");

}

- (BOOL)isVisiblePlugin:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  char v13;
  BOOL v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "visibleCells");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v17;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v17 != v9)
          objc_enumerationMutation(v6);
        -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * i));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v11, "bundleIdentifier");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v12, "isEqualToString:", v4);

          if ((v13 & 1) != 0)
          {

            v14 = 1;
            goto LABEL_12;
          }
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      if (v8)
        continue;
      break;
    }
  }
  v14 = 0;
LABEL_12:

  return v14;
}

- (BOOL)hasRecentTouchForSendingPlugin:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[CKTranscriptCollectionViewController mostRecentlyTouchedPlugin](self, "mostRecentlyTouchedPlugin");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqualToString:", v4);

  return v6;
}

- (void)clearRecentPluginTouch
{
  -[CKTranscriptCollectionViewController setMostRecentlyTouchedPlugin:](self, "setMostRecentlyTouchedPlugin:", 0);
}

- (void)scrollViewWillBeginDragging:(id)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  id v15;

  v15 = a3;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *MEMORY[0x1E0D353A0];
  if ((objc_msgSend(v4, "isHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D353A0]) & 1) == 0)
    objc_msgSend(v4, "beginHoldingChatItemsUpdatesForReason:", v5);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setTranscriptScrollIntent:", 5);
  objc_msgSend(v6, "panGestureRecognizer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "locationInView:", v6);
  v9 = v8;

  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setAnchorYPosition:", v9);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "postNotificationName:object:", CFSTR("transcriptCollectionViewWillBeginDragging"), 0);

  -[CKTranscriptCollectionViewController stopPluginPlayback](self, "stopPluginPlayback");
  -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:](self, "addContentAnimationPauseReasons:", 1);
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_opt_respondsToSelector();

  if ((v13 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "contentOffset");
    objc_msgSend(v14, "transcriptCollectionViewController:willBeginDragging:", self);

  }
}

- (void)scrollViewWillEndDragging:(id)a3 withVelocity:(CGPoint)a4 targetContentOffset:(CGPoint *)a5
{
  id v7;
  void *v8;
  int v9;
  void *v10;
  char v11;
  NSObject *v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  uint8_t v17[16];

  v7 = a3;
  a5->x = 0.0;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isScheduledMessagesCoreEnabled");

  if (v9)
    -[CKTranscriptCollectionViewController adjustTargetContentOffsetToCurrentTimeIfNeeded:](self, "adjustTargetContentOffsetToCurrentTimeIfNeeded:", a5);
  objc_msgSend(v7, "panGestureRecognizer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "_canPanVertically");

  if ((v11 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController updateTranscriptScrollIntentForUserScrollToContentOffset:](self, "updateTranscriptScrollIntentForUserScrollToContentOffset:", a5->x, a5->y);
  }
  else
  {
    IMLogHandleForCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, "Not updating scroll intent for user drag gesture because vertical panning is disabled. Probably during a swipe to reply.", v17, 2u);
    }

    -[CKTranscriptCollectionViewController updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset](self, "updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset");
  }
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setTargetContentOffset:", a5->x, a5->y);

  -[CKTranscriptCollectionViewController _loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:](self, "_loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:", 0, a5->x, a5->y);
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_opt_respondsToSelector();

  if ((v15 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "contentOffset");
    objc_msgSend(v16, "transcriptCollectionViewController:willEndDragging:withVelocity:targetContentOffset:", self, a5);

  }
}

- (void)adjustTargetContentOffsetToCurrentTimeIfNeeded:(CGPoint *)a3
{
  void *v5;
  CGFloat v6;
  id v7;

  if (-[CKTranscriptCollectionViewController isContentOffsetAtCurrentTime:](self, "isContentOffsetAtCurrentTime:", a3->x, a3->y))
  {
    -[CKTranscriptCollectionViewController latestScheduledMessageIndexPath](self, "latestScheduledMessageIndexPath");
    v7 = (id)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "__ck_bottomOffsetHidingIndexPath:", v7);
    a3->y = v6;

  }
}

- (BOOL)isContentOffsetAtCurrentTime:(CGPoint)a3
{
  double y;
  CGFloat x;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  BOOL v17;
  NSObject *v18;
  void *v19;
  int v21;
  void *v22;
  uint64_t v23;
  CGPoint v24;

  y = a3.y;
  x = a3.x;
  v23 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController latestScheduledMessageIndexPath](self, "latestScheduledMessageIndexPath");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6 && objc_msgSend(v6, "item"))
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "__ck_bottomOffsetHidingIndexPath:", v7);
    v10 = v9;

    -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "layoutAttributesForItemAtIndexPath:", v7);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "largeTranscriptSpace");
    v15 = v14;

    objc_msgSend(v12, "frame");
    if (y >= v10 - v15 && y <= v10 + v16 * 0.75)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          v24.x = x;
          v24.y = y;
          NSStringFromCGPoint(v24);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = 138412290;
          v22 = v19;
          _os_log_impl(&dword_18DFCD000, v18, OS_LOG_TYPE_INFO, "We're currently at or around the currentTime offset, currentOffset: %@", (uint8_t *)&v21, 0xCu);

        }
      }
      v17 = 1;
    }
    else
    {
      v17 = 0;
    }

  }
  else
  {
    v17 = 0;
  }

  return v17;
}

- (BOOL)isContentOffsetAtOrBelowBottom:(CGPoint)a3
{
  double y;
  double v4;
  double v5;
  double v6;
  NSObject *v7;
  _BOOL4 v8;
  const char *v9;
  int v11;
  double v12;
  __int16 v13;
  double v14;
  uint64_t v15;

  y = a3.y;
  v15 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController _platformSpecificBottomContentOffset](self, "_platformSpecificBottomContentOffset", a3.x);
  v5 = v4;
  v6 = v4 + -1.0;
  IMLogHandleForCategory();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  if (y < v6)
  {
    if (v8)
    {
      v11 = 134218240;
      v12 = y;
      v13 = 2048;
      v14 = v5;
      v9 = "Content offset of %.2f is above bottom offset %.2f.";
      goto LABEL_6;
    }
  }
  else if (v8)
  {
    v11 = 134218240;
    v12 = y;
    v13 = 2048;
    v14 = v5;
    v9 = "Content offset of %.2f is at/below the bottom offset of %.2f.";
LABEL_6:
    _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_INFO, v9, (uint8_t *)&v11, 0x16u);
  }

  return y >= v6;
}

- (BOOL)isContentOffsetAtOrBelowReplies:(CGPoint)a3
{
  return 0;
}

- (void)updateTranscriptScrollIntentForUserScrollToContentOffset:(CGPoint)a3
{
  double y;
  double x;
  void *v6;
  uint64_t v7;
  NSObject *v8;

  y = a3.y;
  x = a3.x;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "transcriptScrollIntent");
  if (v7 == 3)
  {
    IMLogHandleForCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      -[CKTranscriptCollectionViewController updateTranscriptScrollIntentForUserScrollToContentOffset:].cold.1();
    goto LABEL_7;
  }
  if (v7 == 4)
  {
    IMLogHandleForCategory();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      -[CKTranscriptCollectionViewController updateTranscriptScrollIntentForUserScrollToContentOffset:].cold.2();
LABEL_7:

  }
  -[CKTranscriptCollectionViewController _updateTranscriptScrollIntentForContentOffset:reason:](self, "_updateTranscriptScrollIntentForContentOffset:reason:", CFSTR("User scroll"), x, y);

}

- (void)updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "contentOffset");
  v5 = v4;
  v7 = v6;

  -[CKTranscriptCollectionViewController _updateTranscriptScrollIntentForContentOffset:reason:](self, "_updateTranscriptScrollIntentForContentOffset:reason:", CFSTR("Current content offset"), v5, v7);
}

- (void)_updateTranscriptScrollIntentForContentOffset:(CGPoint)a3 reason:(id)a4
{
  double y;
  double x;
  id v7;
  void *v8;
  unint64_t v9;
  void *v10;
  NSObject *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  y = a3.y;
  x = a3.x;
  v16 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[CKTranscriptCollectionViewController desiredTranscriptScrollIntentForContentOffset:](self, "desiredTranscriptScrollIntentForContentOffset:", x, y);
  objc_msgSend(v8, "invalidateNeedsContentOffsetAdjustmentForNextContentSizeChange");
  CKDebugNameForCKTranscriptScrollIntent(v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  IMLogHandleForCategory();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = 138543618;
    v13 = v10;
    v14 = 2114;
    v15 = v7;
    _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Updating scroll intent to %{public}@ reason: %{public}@", (uint8_t *)&v12, 0x16u);
  }

  objc_msgSend(v8, "setTranscriptScrollIntent:", v9);
}

- (int64_t)desiredTranscriptScrollIntentForCurrentContentOffset
{
  void *v3;
  int64_t v4;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "contentOffset");
  v4 = -[CKTranscriptCollectionViewController desiredTranscriptScrollIntentForContentOffset:](self, "desiredTranscriptScrollIntentForContentOffset:");

  return v4;
}

- (int64_t)desiredTranscriptScrollIntentForContentOffset:(CGPoint)a3
{
  double y;
  double x;
  unint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;
  uint64_t v15;
  CGPoint v16;

  y = a3.y;
  x = a3.x;
  v15 = *MEMORY[0x1E0C80C00];
  if (-[CKTranscriptCollectionViewController isContentOffsetAtOrBelowReplies:](self, "isContentOffsetAtOrBelowReplies:"))
  {
    v6 = 7;
  }
  else
  {
    v6 = 1;
    if (!-[CKTranscriptCollectionViewController isLoadMoreSpinnerAboutToBeVisibleForDirection:withTargetContentOffset:](self, "isLoadMoreSpinnerAboutToBeVisibleForDirection:withTargetContentOffset:", 1, x, y))
    {
      if (-[CKTranscriptCollectionViewController isContentOffsetAtOrBelowBottom:](self, "isContentOffsetAtOrBelowBottom:", x, y))
      {
        v6 = 6;
      }
      else
      {
        v6 = -[CKTranscriptCollectionViewController isContentOffsetAtCurrentTime:](self, "isContentOffsetAtCurrentTime:", x, y) ^ 1;
      }
    }
  }
  IMLogHandleForCategory();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    CKDebugNameForCKTranscriptScrollIntent(v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v16.x = x;
    v16.y = y;
    NSStringFromCGPoint(v16);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138543618;
    v12 = v8;
    v13 = 2114;
    v14 = v9;
    _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_INFO, "Calculated desiredTranscriptScrollIntent as %{public}@ for offset %{public}@", (uint8_t *)&v11, 0x16u);

  }
  return v6;
}

- (CGPoint)_platformSpecificBottomContentOffset
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGPoint result;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "scrollToBottomStopsAtTopOfLastBubble");

  if (v4)
  {
    objc_msgSend(v2, "__ck_indexPathForInputView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "__ck_bottomOffsetHidingIndexPath:", v5);
    v7 = v6;
    v9 = v8;

  }
  else
  {
    objc_msgSend(v2, "__ck_bottomOffset");
    v7 = v10;
    v9 = v11;
  }

  v12 = v7;
  v13 = v9;
  result.y = v13;
  result.x = v12;
  return result;
}

- (void)scrollViewDidEndDragging:(id)a3 willDecelerate:(BOOL)a4
{
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  double v10;

  v6 = a3;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "endHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D353A0]);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "transcriptScrollIntent") == 5)
  {
    IMLogHandleForCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController scrollViewDidEndDragging:willDecelerate:].cold.1();

    -[CKTranscriptCollectionViewController updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset](self, "updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset");
  }
  objc_msgSend(v6, "contentOffset");
  if (v10 == 0.0 && (objc_msgSend(v6, "isDragging") & 1) == 0)
    -[CKTranscriptCollectionViewController setPeeking:](self, "setPeeking:", 0);
  -[CKTranscriptCollectionViewController setPeekSampleTranslation:](self, "setPeekSampleTranslation:", *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
  if (!a4)
  {
    -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:](self, "removeContentAnimationPauseReasons:", 1);
    -[CKTranscriptCollectionViewController _collectionViewDidRestAsync:](self, "_collectionViewDidRestAsync:", 0);
  }

}

- (void)scrollViewDidScroll:(id)a3
{
  id v4;
  double v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  void *v23;
  const __CFString *v24;
  void *v25;
  int v26;
  const __CFString *v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  CGPoint v31;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "contentOffset");
  if (v5 == 0.0 && (objc_msgSend(v4, "isDragging") & 1) == 0)
    -[CKTranscriptCollectionViewController setPeeking:](self, "setPeeking:", 0);
  -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "matchScrollViewOffset:", v4);

  -[CKTranscriptCollectionViewController cullCellSubviews](self, "cullCellSubviews");
  -[CKTranscriptCollectionViewController clearRecentPluginTouch](self, "clearRecentPluginTouch");
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_opt_respondsToSelector();

  if ((v8 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "contentOffset");
    objc_msgSend(v9, "transcriptCollectionViewController:didScroll:", self);

  }
  if (CKIsRunningInMacCatalyst())
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "shouldUseDynamicScrolling");

    if (v11)
    {
      if ((objc_msgSend(v4, "isDecelerating") & 1) == 0)
      {
        objc_msgSend(v4, "panGestureRecognizer");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "state");

        if (v13 >= 1)
        {
          objc_msgSend(v4, "panGestureRecognizer");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "velocityInView:", v4);
          v16 = v15;
          v18 = v17;

          -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "collectionViewLayout");
          v20 = (void *)objc_claimAutoreleasedReturnValue();

          if ((v18 == 0.0) != objc_msgSend(v20, "disableDynamicsWhileScrolling"))
          {
            objc_msgSend(v20, "setDisableDynamicsWhileScrolling:", v18 == 0.0);
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v21 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
              {
                v31.x = v16;
                v31.y = v18;
                NSStringFromCGPoint(v31);
                v22 = objc_claimAutoreleasedReturnValue();
                v23 = (void *)v22;
                v24 = CFSTR("NO");
                if (v18 == 0.0)
                  v24 = CFSTR("YES");
                v26 = 138412546;
                v27 = v24;
                v28 = 2112;
                v29 = v22;
                _os_log_impl(&dword_18DFCD000, v21, OS_LOG_TYPE_INFO, "Changing dynamicsDisabled on scroll to %@ - the scroll velocity is %@", (uint8_t *)&v26, 0x16u);

              }
            }
          }

        }
      }
    }
  }
  -[CKTranscriptCollectionViewController presentedChatItemScrollOffset](self, "presentedChatItemScrollOffset");
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  if (v25)
    -[CKTranscriptCollectionViewController setPresentedChatItemScrollOffset:](self, "setPresentedChatItemScrollOffset:", 0);

}

- (void)scrollViewDidEndDecelerating:(id)a3
{
  void *v4;
  int v5;

  -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:](self, "removeContentAnimationPauseReasons:", 1);
  -[CKTranscriptCollectionViewController _collectionViewDidRestAsync:](self, "_collectionViewDidRestAsync:", 0);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isExpressiveTextEnabled");

  if (v5)
  {
    -[CKTextEffectCoordinator resetBackoffState](self->_transcriptTextEffectCoordinator, "resetBackoffState");
    -[CKTextEffectCoordinator updateWithReason:](self->_transcriptTextEffectCoordinator, "updateWithReason:", CFSTR("scrollViewDidEndDecelerating"));
  }
}

- (void)scrollViewDidEndScrollingAnimation:(id)a3
{
  -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:](self, "removeContentAnimationPauseReasons:", 1);
  -[CKTranscriptCollectionViewController _collectionViewDidRestAsync:](self, "_collectionViewDidRestAsync:", 0);
}

- (BOOL)scrollViewShouldScrollToTop:(id)a3
{
  id WeakRetained;
  int v5;
  NSObject *v6;
  _BOOL4 v7;
  uint8_t v9[16];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v5 = objc_msgSend(WeakRetained, "transcriptCollectionViewControllerShouldShouldScrollToTopForStatusBarTap:", self);

  IMLogHandleForCategory();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);
  if (v5)
  {
    if (v7)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v6, OS_LOG_TYPE_INFO, "Scrolling to top (probably because the user tapped status bar)", buf, 2u);
    }

    -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:](self, "addContentAnimationPauseReasons:", 1);
  }
  else
  {
    if (v7)
    {
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_18DFCD000, v6, OS_LOG_TYPE_INFO, "Returning NO from scrollViewShouldScrollToTop", v9, 2u);
    }

  }
  return v5;
}

- (void)scrollViewDidScrollToTop:(id)a3
{
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v4 = a3;
  -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:](self, "removeContentAnimationPauseReasons:", 1);
  objc_msgSend(v4, "contentOffset");
  v6 = v5;
  v8 = v7;

  -[CKTranscriptCollectionViewController updateTranscriptScrollIntentForUserScrollToContentOffset:](self, "updateTranscriptScrollIntentForUserScrollToContentOffset:", v6, v8);
  -[CKTranscriptCollectionViewController _collectionViewDidRestAsync:](self, "_collectionViewDidRestAsync:", 1);
}

- (void)_setHoldingWhilePresentingKeyboardForChatItem:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  void *v6;
  id v7;

  v3 = a3;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v3)
  {
    objc_msgSend(v5, "beginHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesPresentingKeyboardForChatItem"));
    -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:](self, "addContentAnimationPauseReasons:", 16);
    objc_msgSend(v7, "beginHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35398]);
  }
  else
  {
    objc_msgSend(v5, "endHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesPresentingKeyboardForChatItem"));
    -[CKTranscriptCollectionViewController removeContentAnimationPauseReasons:](self, "removeContentAnimationPauseReasons:", 16);
    objc_msgSend(v7, "endHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35398]);
  }

}

- (void)_setHoldUpdatesForStickerMoveAnimation:(BOOL)a3
{
  _BOOL4 v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = a3;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *MEMORY[0x1E0D353B0];
  v6 = v4;
  if (v3)
    objc_msgSend(v4, "beginHoldingChatItemsUpdatesForReason:", v5);
  else
    objc_msgSend(v4, "endHoldingChatItemsUpdatesForReason:", v5);

}

- (CGRect)collectionViewAdjustedContentFrameWithKeyboard:(UIEdgeInsets)a3
{
  double right;
  double bottom;
  double left;
  double top;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  CGRect result;

  right = a3.right;
  bottom = a3.bottom;
  left = a3.left;
  top = a3.top;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "adjustedContentInset");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(MEMORY[0x1E0CEA6C8], "sizeForInterfaceOrientation:ignoreInputView:", CKNonFlatDeviceOrientation(), 1);
  v17 = v13 + v16;
  objc_msgSend(v7, "frame");
  v20 = v9 + v19;
  v22 = v21 - (v11 + v15);
  v24 = v23 - (v9 + v17);
  v25 = left + v11 + v18;
  v26 = top + v20;
  v27 = v22 - (left + right);
  v28 = v24 - (top + bottom);

  v29 = v25;
  v30 = v26;
  v31 = v27;
  v32 = v28;
  result.size.height = v32;
  result.size.width = v31;
  result.origin.y = v30;
  result.origin.x = v29;
  return result;
}

- (void)beginPresentingChatItemForKeyboardPresentation:(id)a3 layoutAreaContentInsets:(UIEdgeInsets)a4 completion:(id)a5
{
  CGFloat right;
  CGFloat bottom;
  CGFloat left;
  CGFloat top;
  id v11;
  id v12;
  void *v13;
  void *v14;
  dispatch_time_t v15;
  id v16;
  id v17;
  _QWORD block[5];
  id v19;
  id v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;

  right = a4.right;
  bottom = a4.bottom;
  left = a4.left;
  top = a4.top;
  v11 = a3;
  v12 = a5;
  -[CKTranscriptCollectionViewController _setHoldingWhilePresentingKeyboardForChatItem:](self, "_setHoldingWhilePresentingKeyboardForChatItem:", 1);
  -[CKTranscriptCollectionViewController setIsPresentingChatItemForKeyboard:](self, "setIsPresentingChatItemForKeyboard:", 1);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setIgnoresAutomaticScrollsTowardBottom:", 1);

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setScrollEnabled:", 0);

  v15 = dispatch_time(0, 100000000);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __122__CKTranscriptCollectionViewController_beginPresentingChatItemForKeyboardPresentation_layoutAreaContentInsets_completion___block_invoke;
  block[3] = &unk_1E2754950;
  block[4] = self;
  v19 = v11;
  v21 = top;
  v22 = left;
  v23 = bottom;
  v24 = right;
  v20 = v12;
  v16 = v12;
  v17 = v11;
  dispatch_after(v15, MEMORY[0x1E0C80D38], block);

}

void __122__CKTranscriptCollectionViewController_beginPresentingChatItemForKeyboardPresentation_layoutAreaContentInsets_completion___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  void *v33;
  double v34;
  CGFloat v35;
  double v36;
  double v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  double MaxY;
  BOOL v44;
  double v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[5];
  id v51;
  uint64_t v52;
  uint64_t v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;

  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contentOffset");
  v48 = v4;
  v49 = v3;
  objc_msgSend(*(id *)(a1 + 32), "balloonViewForChatItem:", *(_QWORD *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "window");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  objc_msgSend(v5, "superview");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "convertRect:fromView:", v15, v8, v10, v12, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  objc_msgSend(*(id *)(a1 + 32), "collectionViewAdjustedContentFrameWithKeyboard:", *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  objc_msgSend(v2, "window");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "superview");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "convertRect:fromView:", v33, v25, v27, v29, v31);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  if (v19 >= v37)
  {
    v54.origin.x = v17;
    v54.origin.y = v19;
    v54.size.width = v21;
    v54.size.height = v23;
    MaxY = CGRectGetMaxY(v54);
    v55.origin.x = v35;
    v55.origin.y = v37;
    v55.size.width = v39;
    v55.size.height = v41;
    v44 = MaxY <= CGRectGetMaxY(v55);
    v42 = v19;
    if (!v44)
    {
      v56.origin.x = v35;
      v56.origin.y = v37;
      v56.size.width = v39;
      v56.size.height = v41;
      v42 = CGRectGetMaxY(v56) - v23;
    }
  }
  else
  {
    v42 = v37;
  }
  v45 = v19 - v42;
  if (v45 != 0.0)
  {
    objc_msgSend(*(id *)(a1 + 32), "collectionView");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "setScrollEnabled:", 1);

    v47 = *(void **)(a1 + 32);
    v50[0] = MEMORY[0x1E0C809B0];
    v50[1] = 3221225472;
    v50[2] = __122__CKTranscriptCollectionViewController_beginPresentingChatItemForKeyboardPresentation_layoutAreaContentInsets_completion___block_invoke_2;
    v50[3] = &unk_1E2754928;
    v50[4] = v47;
    v52 = v49;
    v53 = v48;
    v51 = *(id *)(a1 + 48);
    objc_msgSend(v47, "verticallyScrollTranscriptByAmount:animated:completion:", 1, v50, v45);

  }
}

uint64_t __122__CKTranscriptCollectionViewController_beginPresentingChatItemForKeyboardPresentation_layoutAreaContentInsets_completion___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t result;
  __int128 v5;

  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setScrollEnabled:", 1);

  v5 = *(_OWORD *)(a1 + 48);
  objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithBytes:objCType:", &v5, "{CGPoint=dd}");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setPresentedChatItemScrollOffset:", v3);

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)endPresentingChatItemForKeyboardPresentation:(id)a3 completion:(id)a4
{
  id v5;
  void *v6;
  void (**v7)(_QWORD);
  void *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void *v18;
  CKTranscriptCollectionViewController *v19;
  id v20;

  v5 = a4;
  if (-[CKTranscriptCollectionViewController isPresentingChatItemForKeyboard](self, "isPresentingChatItemForKeyboard"))
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setScrollEnabled:", 1);

    v15 = MEMORY[0x1E0C809B0];
    v16 = 3221225472;
    v17 = __96__CKTranscriptCollectionViewController_endPresentingChatItemForKeyboardPresentation_completion___block_invoke;
    v18 = &unk_1E274C2E0;
    v19 = self;
    v20 = v5;
    v7 = (void (**)(_QWORD))_Block_copy(&v15);
    -[CKTranscriptCollectionViewController presentedChatItemScrollOffset](self, "presentedChatItemScrollOffset", v15, v16, v17, v18, v19);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      -[CKTranscriptCollectionViewController presentedChatItemScrollOffset](self, "presentedChatItemScrollOffset");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "pointValue");
      v11 = v10;

      -[CKTranscriptCollectionViewController setPresentedChatItemScrollOffset:](self, "setPresentedChatItemScrollOffset:", 0);
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "contentOffset");
      v14 = v13;

      -[CKTranscriptCollectionViewController verticallyScrollTranscriptByAmount:animated:completion:](self, "verticallyScrollTranscriptByAmount:animated:completion:", 1, v7, v11 - v14);
    }
    else
    {
      v7[2](v7);
    }

  }
}

void __96__CKTranscriptCollectionViewController_endPresentingChatItemForKeyboardPresentation_completion___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  dispatch_time_t v4;
  _QWORD block[5];

  objc_msgSend(*(id *)(a1 + 32), "_setHoldingWhilePresentingKeyboardForChatItem:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setIsPresentingChatItemForKeyboard:", 0);
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setScrollEnabled:", 1);

  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
    (*(void (**)(void))(v3 + 16))();
  v4 = dispatch_time(0, 3000000000);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __96__CKTranscriptCollectionViewController_endPresentingChatItemForKeyboardPresentation_completion___block_invoke_2;
  block[3] = &unk_1E274A208;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_after(v4, MEMORY[0x1E0C80D38], block);
}

void __96__CKTranscriptCollectionViewController_endPresentingChatItemForKeyboardPresentation_completion___block_invoke_2(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setIgnoresAutomaticScrollsTowardBottom:", 0);

}

- (void)stopPluginPlayback
{
  id v2;

  -[CKTranscriptCollectionViewController pluginPlaybackManager](self, "pluginPlaybackManager");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stopPlayback");

}

- (void)startPluginPlaybackAfterDelay:(double)a3
{
  objc_msgSend(MEMORY[0x1E0DE7910], "cancelPreviousPerformRequestsWithTarget:selector:object:", self, sel__deferredStartPlayback, 0);
  -[CKTranscriptCollectionViewController performSelector:withObject:afterDelay:](self, "performSelector:withObject:afterDelay:", sel__deferredStartPlayback, 0, a3);
}

- (void)_deferredStartPlayback
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  if (-[CKTranscriptCollectionViewController allowsPluginPlayback](self, "allowsPluginPlayback"))
  {
    -[CKTranscriptCollectionViewController pluginPlaybackManager](self, "pluginPlaybackManager");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "isPlayingBack");

    if ((v4 & 1) == 0)
    {
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v6 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "indexPathsForVisibleItems");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController _startPlaybackWithIndexPaths:](self, "_startPlaybackWithIndexPaths:", v5);

    }
  }
}

- (void)_startPlaybackWithIndexPaths:(id)a3
{
  id v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  unint64_t v11;
  void *v12;
  _BOOL4 v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  int v18;
  NSObject *v19;
  void *v20;
  CKPluginPlaybackManager *v21;
  void *v22;
  __int128 v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  void *v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
  if (v6)
  {
    v8 = *(_QWORD *)v26;
    *(_QWORD *)&v7 = 138412546;
    v23 = v7;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v26 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        if (!objc_msgSend(v10, "section", v23))
        {
          v11 = objc_msgSend(v10, "item");
          -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = v11 < objc_msgSend(v12, "count");

          if (v13)
          {
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v14, "objectAtIndex:", objc_msgSend(v10, "item"));
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v16 = v15;
              objc_msgSend(v16, "IMChatItem");
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              v18 = objc_msgSend(v17, "wantsAutoPlayback");

              if (v18)
                objc_msgSend(v24, "addObject:", v16);

            }
          }
          else
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v19 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
              {
                -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = v23;
                v30 = v10;
                v31 = 2112;
                v32 = v20;
                _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, "Attempted to access chatItems out of bounds (%@): %@", buf, 0x16u);

              }
            }
            IMLogBacktrace();
          }
        }
      }
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
    }
    while (v6);
  }

  objc_msgSend(v24, "sortUsingComparator:", &__block_literal_global_382_0);
  -[CKTranscriptCollectionViewController stopPluginPlayback](self, "stopPluginPlayback");
  v21 = -[CKPluginPlaybackManager initWithPluginItems:]([CKPluginPlaybackManager alloc], "initWithPluginItems:", v24);
  -[CKPluginPlaybackManager setDelegate:](v21, "setDelegate:", self);
  -[CKTranscriptCollectionViewController pluginPlaybackManager](self, "pluginPlaybackManager");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "setDelegate:", 0);

  -[CKTranscriptCollectionViewController setPluginPlaybackManager:](self, "setPluginPlaybackManager:", v21);
  -[CKPluginPlaybackManager startPlayback](v21, "startPlayback");

}

BOOL __69__CKTranscriptCollectionViewController__startPlaybackWithIndexPaths___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _BOOL8 v8;

  v4 = a3;
  objc_msgSend(a2, "message");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "messageID");
  objc_msgSend(v4, "message");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = v6 > objc_msgSend(v7, "messageID");
  return v8;
}

- (void)pluginPlaybackManagerDidStopPlayback:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController pluginPlaybackManager](self, "pluginPlaybackManager");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v5 == v4)
    -[CKTranscriptCollectionViewController setPluginPlaybackManager:](self, "setPluginPlaybackManager:", 0);
}

- (void)collectionViewLayoutRestingDidChange:(id)a3
{
  id v4;
  void *v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transcriptCollectionViewControllerRestingStateDidChange:", self);

  LODWORD(v5) = objc_msgSend(v4, "isResting");
  if ((_DWORD)v5)
    -[CKTranscriptCollectionViewController _collectionViewDidRestAsync:](self, "_collectionViewDidRestAsync:", 1);
}

- (id)overrideCurrentFrameMapForLayout:(id)a3
{
  return 0;
}

- (id)overrideTargetFrameMapForLayout:(id)a3
{
  return 0;
}

- (id)balloonOffsetMapForLayout:(id)a3 resetsOffsetMapAfterUse:(BOOL)a4
{
  return 0;
}

- (BOOL)collectionViewLayout:(id)a3 hasPlayingOrPausedTextEffectForChatItem:(id)a4 indexPath:(id)a5
{
  id v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v6 = a4;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isExpressiveTextEnabled");

  if (v8)
  {
    if (objc_msgSend(v6, "_textContainsIMTextEffect")
      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v6);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (v9 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        objc_msgSend(v9, "balloonView");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (v10 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          objc_msgSend(v10, "textView");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = v11;
          if (v11)
            LOBYTE(v8) = objc_msgSend(v11, "ck_hasPlayingOrPausedTextAnimator");
          else
            LOBYTE(v8) = 0;

        }
        else
        {
          LOBYTE(v8) = 0;
        }

      }
      else
      {
        LOBYTE(v8) = 0;
      }

    }
    else
    {
      LOBYTE(v8) = 0;
    }
  }

  return v8;
}

- (void)_collectionViewDidRestAsync:(BOOL)a3
{
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD block[5];

  if (a3)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __68__CKTranscriptCollectionViewController__collectionViewDidRestAsync___block_invoke;
    block[3] = &unk_1E274A208;
    block[4] = self;
    dispatch_async(MEMORY[0x1E0C80D38], block);
  }
  else
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "contentOffset");
    v6 = v5;
    v8 = v7;
    if (objc_msgSend(v4, "transcriptScrollIntent") == 6)
    {
      objc_msgSend(v4, "__ck_bottomOffset");
      v6 = v9;
      v8 = v10;
    }
    -[CKTranscriptCollectionViewController _loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:](self, "_loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:", 0, v6, v8);

  }
  -[CKTranscriptCollectionViewController pluginPlaybackDelay](self, "pluginPlaybackDelay");
  -[CKTranscriptCollectionViewController startPluginPlaybackAfterDelay:](self, "startPluginPlaybackAfterDelay:");
}

uint64_t __68__CKTranscriptCollectionViewController__collectionViewDidRestAsync___block_invoke(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;

  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contentOffset");
  v4 = v3;
  v6 = v5;

  return objc_msgSend(*(id *)(a1 + 32), "_loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:", 0, v4, v6);
}

- (id)compositorDatasourceItemsForSection:(int64_t)a3
{
  void *v3;
  void *v4;
  id v5;
  void *v6;

  if (a3 == 1)
  {
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a3)
    {
      v6 = 0;
      return v6;
    }
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    v4 = v5;
  }
  else
  {
    v5 = (id)objc_opt_new();
  }
  v6 = v5;

  return v6;
}

- (id)layoutGroupForDatasourceItems:(id)a3 environment:(id)a4 layoutItems:(id)a5
{
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  NSObject *v20;
  NSObject *v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  const char *v28;
  __int16 v29;
  objc_class *v30;
  __int16 v31;
  uint64_t v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v9 = a5;
  if ((unint64_t)objc_msgSend(v7, "count") >= 2)
  {
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v10 = v7;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
    if (v11)
    {
      v12 = 0;
      v13 = *(_QWORD *)v24;
      while (2)
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v24 != v13)
            objc_enumerationMutation(v10);
          v15 = objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * i), "customLayoutGroupProviderClass", (_QWORD)v23);
          v16 = v15;
          if (v12)
          {
            if (v12 != (objc_class *)v15)
            {
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v20 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 136315650;
                  v28 = "-[CKTranscriptCollectionViewController layoutGroupForDatasourceItems:environment:layoutItems:]";
                  v29 = 2112;
                  v30 = v12;
                  v31 = 2112;
                  v32 = v16;
                  _os_log_impl(&dword_18DFCD000, v20, OS_LOG_TYPE_INFO, "CKTranscriptCollectionViewController - %s got a layout group with differing layout group classes, returning nil. Expected %@ got %@", buf, 0x20u);
                }

              }
              goto LABEL_25;
            }
          }
          else
          {
            v12 = (objc_class *)v15;
          }
        }
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
        if (v11)
          continue;
        break;
      }

      if (v12)
      {
        v17 = objc_alloc_init(v12);
        objc_msgSend(v17, "layoutGroupForDatasourceItems:environment:layoutItems:", v10, v8, v9);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_26;
      }
    }
    else
    {

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315394;
        v28 = "-[CKTranscriptCollectionViewController layoutGroupForDatasourceItems:environment:layoutItems:]";
        v29 = 2112;
        v30 = (objc_class *)v10;
        _os_log_impl(&dword_18DFCD000, v21, OS_LOG_TYPE_INFO, "CKTranscriptCollectionViewController - %s got a nil layout group provider for items %@", buf, 0x16u);
      }

    }
  }
LABEL_25:
  v18 = 0;
LABEL_26:

  return v18;
}

- (BOOL)compositorSupportsCustomLayoutGroupsForSection:(int64_t)a3
{
  return a3 == 0;
}

- (BOOL)compositorSupportsCustomLayoutGroupsForLayoutProvider:(id)a3
{
  uint64_t v3;

  v3 = objc_msgSend(a3, "chatItemClass");
  return v3 == objc_opt_class();
}

- (void)collectionViewWillScroll:(id)a3 targetContentOffset:(CGPoint *)a4
{
  id v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  int v11;
  double x;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  int v30;
  float v31;
  float v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  CGFloat v38;
  void *v39;
  double v40;
  double v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t i;
  void *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[128];
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  if (objc_msgSend(v6, "isDragging")
    && !-[CKTranscriptCollectionViewController isPeeking](self, "isPeeking"))
  {
    objc_msgSend(v6, "panGestureRecognizer");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "translationInView:", v6);
    v22 = v21;
    v24 = v23;

    -[CKTranscriptCollectionViewController peekSampleTranslation](self, "peekSampleTranslation");
    v26 = v25;
    v28 = v27 - v22;
    objc_msgSend(v6, "layer");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = objc_msgSend(v29, "flipsHorizontalAxis");

    if (v30)
      v28 = -v28;
    if (v28 >= 20.0)
    {
      v31 = v26 - v24;
      v32 = v28;
      if (fabs(atan2f(v31, v32) * 57.2957795) < 5.0)
      {
        -[CKTranscriptCollectionViewController setPeeking:](self, "setPeeking:", 1);
        v22 = 20.0 - v28;
        objc_msgSend(v6, "panGestureRecognizer");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "setTranslation:inView:", v6, 20.0 - v28, v24);

      }
      -[CKTranscriptCollectionViewController setPeekSampleTranslation:](self, "setPeekSampleTranslation:", v22, v24);
    }
    a4->x = 0.0;
    goto LABEL_23;
  }
  if (a4->x == 0.0)
  {
LABEL_23:
    v34 = 0.0;
    goto LABEL_37;
  }
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors", a4->x);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "marginInsets");
  objc_msgSend(v7, "transcriptDrawerMaxContentOffsetXForMarginInsets:");
  v9 = v8;
  objc_msgSend(v6, "layer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "flipsHorizontalAxis");

  x = a4->x;
  if (v11)
  {
    v13 = -x;
    if (v9 <= v13)
      v13 = v9;
    if (v13 < 0.0)
      v13 = 0.0;
    v14 = -v13;
    a4->x = -v13;
    if (CKMainScreenScale_once_42 != -1)
      dispatch_once(&CKMainScreenScale_once_42, &__block_literal_global_2254);
    v15 = *(double *)&CKMainScreenScale_sMainScreenScale_42;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_42 == 0.0)
      v15 = 1.0;
    v16 = floor(v15 * v14) / v15;
    v17 = 0.0;
    if (v16 != 0.0)
      v17 = a4->x;
    a4->x = v17;
    objc_msgSend(v7, "transcriptDrawerGestureAcceleration");
    v19 = -a4->x;
  }
  else
  {
    if (x >= v9)
      x = v9;
    if (x >= 0.0)
      v35 = x;
    else
      v35 = 0.0;
    a4->x = v35;
    if (CKMainScreenScale_once_42 != -1)
      dispatch_once(&CKMainScreenScale_once_42, &__block_literal_global_2254);
    v36 = *(double *)&CKMainScreenScale_sMainScreenScale_42;
    if (*(double *)&CKMainScreenScale_sMainScreenScale_42 == 0.0)
      v36 = 1.0;
    v37 = floor(v35 * v36) / v36;
    v38 = 0.0;
    if (v37 != 0.0)
      v38 = a4->x;
    a4->x = v38;
    objc_msgSend(v7, "transcriptDrawerGestureAcceleration");
    v19 = a4->x;
  }
  v34 = fmin(v18 * (v19 / v9), 1.0);

LABEL_37:
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v39, "disableTranscriptTimestamps") & 1) != 0)
  {

    goto LABEL_39;
  }
  if (a4->x == 0.0)
  {
    objc_msgSend(v6, "contentOffset", a4->x);
    v41 = v40;

    if (v41 == 0.0)
    {
LABEL_39:
      if (CKIsRunningInMacCatalyst())
        -[CKTranscriptCollectionViewController hideTranscriptTimestampsIfNeeded](self, "hideTranscriptTimestampsIfNeeded");
      goto LABEL_54;
    }
  }
  else
  {

  }
  v50 = 0u;
  v51 = 0u;
  v48 = 0u;
  v49 = 0u;
  objc_msgSend(v6, "visibleCells", 0);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v48, v52, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v49;
    do
    {
      for (i = 0; i != v44; ++i)
      {
        if (*(_QWORD *)v49 != v45)
          objc_enumerationMutation(v42);
        v47 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * i);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          -[CKTranscriptCollectionViewController freezeReplyDecorationsIfNeededForCell:](self, "freezeReplyDecorationsIfNeededForCell:", v47);
          objc_msgSend(v47, "setDrawerPercentRevealed:", v34);
        }
      }
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v48, v52, 16);
    }
    while (v44);
  }

LABEL_54:
}

- (void)freezeReplyDecorationsIfNeededForCell:(id)a3
{
  id v4;
  id v5;

  v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v4 = v5;
    objc_msgSend(v4, "setShouldFreezeReplyDecorationsForTimestampReveal:", -[CKTranscriptCollectionViewController shouldFreezeReplyDecorationsForCell:](self, "shouldFreezeReplyDecorationsForCell:", v4));

  }
}

- (BOOL)shouldFreezeReplyDecorationsForCell:(id)a3
{
  id v4;
  void *v5;
  char v6;
  char isKindOfClass;
  void *v8;
  void *v9;
  char v10;

  v4 = a3;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isGroupChat");

  if ((v6 & 1) != 0)
  {
    isKindOfClass = 0;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      isKindOfClass = 1;
    }
    else
    {
      -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v4);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "IMChatItem");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isFromMe");

      if ((v10 & 1) != 0)
      {
        isKindOfClass = 0;
      }
      else
      {
        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();
      }

    }
  }

  return isKindOfClass & 1;
}

- (void)collectionViewWillProgrammaticallyScroll:(id)a3 animated:(BOOL)a4
{
  if (a4)
    -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:](self, "addContentAnimationPauseReasons:", 1);
}

- (void)transcriptCollectionView:(id)a3 shouldScrollToHighlightedMessage:(id)a4
{
  CKTranscriptCollectionViewControllerDelegate **p_delegate;
  id v6;
  id WeakRetained;

  p_delegate = &self->_delegate;
  v6 = a4;
  WeakRetained = objc_loadWeakRetained((id *)p_delegate);
  objc_msgSend(WeakRetained, "transcriptCollectionViewController:shouldScrollToHighlightedMessage:", self, v6);

}

- (BOOL)isShowingTranscriptTimestamps
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  double v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "visibleCells");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * i);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v7, "drawerPercentRevealed");
          if (v8 > 0.0)
          {
            LOBYTE(v4) = 1;
            goto LABEL_12;
          }
        }
      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_12:

  return v4;
}

- (void)hideTranscriptTimestampsIfNeeded
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  if (-[CKTranscriptCollectionViewController isShowingTranscriptTimestamps](self, "isShowingTranscriptTimestamps"))
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "visibleCells");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)MEMORY[0x1E0CEABB0];
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __72__CKTranscriptCollectionViewController_hideTranscriptTimestampsIfNeeded__block_invoke;
    v7[3] = &unk_1E274A208;
    v8 = v4;
    v6 = v4;
    objc_msgSend(v5, "animateWithDuration:delay:options:animations:completion:", 0, v7, 0, 0.25, 0.0);

  }
}

void __72__CKTranscriptCollectionViewController_hideTranscriptTimestampsIfNeeded__block_invoke(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        v6 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * v5);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v7 = v6;
          objc_msgSend(v7, "setShouldFreezeReplyDecorationsForTimestampReveal:", 0, (_QWORD)v8);
          objc_msgSend(v7, "setDrawerPercentRevealed:", 0.0);
          objc_msgSend(v7, "layoutIfNeeded");

        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v3);
  }

}

- (void)showTranscriptTimestamps
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __64__CKTranscriptCollectionViewController_showTranscriptTimestamps__block_invoke;
  v2[3] = &unk_1E274A208;
  v2[4] = self;
  objc_msgSend(MEMORY[0x1E0CEABB0], "animateWithDuration:delay:options:animations:completion:", 0, v2, 0, 0.25, 0.0);
}

void __64__CKTranscriptCollectionViewController_showTranscriptTimestamps__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  objc_msgSend(v2, "visibleCells", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v10;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v10 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * v7);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(*(id *)(a1 + 32), "freezeReplyDecorationsIfNeededForCell:", v8);
          objc_msgSend(v8, "setDrawerPercentRevealed:", 1.0);
          objc_msgSend(v8, "layoutIfNeeded");
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v5);
  }

}

+ (id)newTranscriptTextEffectCoordinatorForTranscriptCollectionViewController:(id)a3 isInline:(BOOL)a4
{
  _BOOL4 v4;
  id v5;
  void *v6;
  int v7;
  void *v8;
  char v9;
  const __CFString *v10;
  _TtC7ChatKit23CKTextEffectCoordinator *v11;

  v4 = a4;
  v5 = a3;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isExpressiveTextEnabled");

  if (v7)
  {
    +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isPrinting");

    if ((v9 & 1) == 0)
    {
      if (v4)
      {
        if (!+[CKTextEffectCoordinator inlineRepliesTextEffectCoordinationDisabled](_TtC7ChatKit23CKTextEffectCoordinator, "inlineRepliesTextEffectCoordinationDisabled"))
        {
          v10 = CFSTR("transcript_inline");
LABEL_10:
          v11 = -[CKTextEffectCoordinator initWithLogIdentifier:]([_TtC7ChatKit23CKTextEffectCoordinator alloc], "initWithLogIdentifier:", v10);
          -[CKTextEffectCoordinator setDelegate:](v11, "setDelegate:", v5);
          goto LABEL_8;
        }
      }
      else if (!+[CKTextEffectCoordinator transcriptTextEffectCoordinationDisabled](_TtC7ChatKit23CKTextEffectCoordinator, "transcriptTextEffectCoordinationDisabled"))
      {
        v10 = CFSTR("transcript");
        goto LABEL_10;
      }
    }
  }
  v11 = 0;
LABEL_8:

  return v11;
}

- (void)_textMessagePartItem:(id)a3 textBalloonView:(id)a4 getHasValidOrigin:(BOOL *)a5 getHasValidSize:(BOOL *)a6
{
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  BOOL v27;
  BOOL v28;

  v9 = a4;
  objc_msgSend(a3, "size");
  objc_msgSend(v9, "_computedTextViewFrameForBoundsSize:");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  objc_msgSend(v9, "textView");
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v18, "frame");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v27 = CKPointApproximatelyEqualToPointWithTolerance(v20, v22, v11, v13, 0.5);
  if (a5)
    *a5 = v27;
  v28 = CKSizeApproximatelyEqualToSizeWithTolerance(v24, v26, v15, v17, 0.5);
  if (a6)
    *a6 = v28;
}

- (id)textEffectCoordinator:(id)a3 explodeConfigurationForTextViewIdentifier:(id)a4
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  _TtC7ChatKit32CKTextEffectExplodeConfiguration *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  id v21;

  v21 = 0;
  -[CKTranscriptCollectionViewController balloonViewForChatItemGUID:getChatItem:](self, "balloonViewForChatItemGUID:getChatItem:", a4, &v21);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v21;
  v6 = v5;
  if (v4
    && v5
    && (objc_msgSend(v5, "isFromMe") & 1) != 0
    && (v19 = 0u,
        v20 = 0u,
        v17 = 0u,
        v18 = 0u,
        v16 = 0u,
        objc_msgSend(v4, "balloonDescriptor"),
        !BYTE2(v16) && v17 < 2u))
  {
    v13 = v18;
    v14 = v19;
    v15 = v20;
    v11 = v16;
    v12 = v17;
    CKResolvedBackgroundColorForBalloonDescriptor((uint64_t)&v11);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v18;
    v14 = v19;
    v15 = v20;
    v11 = v16;
    v12 = v17;
    CKResolvedColorForBalloonDescriptor((uint64_t)&v11);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = -[CKTextEffectExplodeConfiguration initWithSourceColor:targetColor:]([_TtC7ChatKit32CKTextEffectExplodeConfiguration alloc], "initWithSourceColor:targetColor:", v7, v8);

  }
  else
  {
    +[CKTextEffectExplodeConfiguration defaultConfiguration](_TtC7ChatKit32CKTextEffectExplodeConfiguration, "defaultConfiguration");
    v9 = (_TtC7ChatKit32CKTextEffectExplodeConfiguration *)objc_claimAutoreleasedReturnValue();
  }

  return v9;
}

- (id)visibleTextViewIdentifiersFor:(id)a3
{
  CKTranscriptCollectionViewControllerDelegate **p_delegate;
  id WeakRetained;
  id v6;
  char v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  p_delegate = &self->_delegate;
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);

  if (!WeakRetained)
    goto LABEL_26;
  v6 = objc_loadWeakRetained((id *)p_delegate);
  v7 = objc_opt_respondsToSelector();

  if ((v7 & 1) == 0)
    goto LABEL_26;
  v8 = objc_loadWeakRetained((id *)p_delegate);
  objc_msgSend(v8, "effectiveVisibleRectOfCollectionViewForTranscriptCollectionViewController:", self);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = *(double *)(MEMORY[0x1E0C9D820] + 8);
  if (*MEMORY[0x1E0C9D820] != v14 || v17 != v16)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView", *MEMORY[0x1E0C9D820], v17);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "collectionViewLayout");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "layoutAttributesForElementsInRect:", v10, v12, v14, v16);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v21;
    if (v21 && objc_msgSend(v21, "count"))
    {
      v36 = v20;
      v37 = v19;
      v38 = (void *)objc_opt_new();
      v39 = 0u;
      v40 = 0u;
      v41 = 0u;
      v42 = 0u;
      v35 = v22;
      v23 = v22;
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v39, v43, 16);
      if (v24)
      {
        v25 = v24;
        v26 = *(_QWORD *)v40;
        do
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v40 != v26)
              objc_enumerationMutation(v23);
            v28 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * i);
            objc_msgSend(v28, "indexPath", v35);
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            if (v29
              && !objc_msgSend(v28, "representedElementCategory")
              && objc_msgSend(v29, "length") == 2
              && objc_msgSend(v29, "item") != 0x7FFFFFFFFFFFFFFFLL
              && !objc_msgSend(v29, "section"))
            {
              -[CKTranscriptCollectionViewController chatItemAtIndexPath:](self, "chatItemAtIndexPath:", v29);
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v30, "IMChatItem");
              v31 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "guid");
              v32 = (void *)objc_claimAutoreleasedReturnValue();

              if (v32 && objc_msgSend(v30, "_textContainsIMTextEffect"))
                objc_msgSend(v38, "addObject:", v32);

            }
          }
          v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v39, v43, 16);
        }
        while (v25);
      }

      v33 = (void *)objc_msgSend(v38, "copy");
      v20 = v36;
      v19 = v37;
      v22 = v35;
    }
    else
    {
      v33 = (void *)MEMORY[0x1E0C9AA60];
    }

  }
  else
  {
LABEL_26:
    v33 = (void *)MEMORY[0x1E0C9AA60];
  }
  return v33;
}

- (BOOL)textEffectCoordinator:(id)a3 textViewIdentifierIsCandidateForTextEffectPlayback:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  BOOL v13;
  dispatch_time_t v14;
  NSObject *v16;
  uint8_t v17[8];
  _QWORD block[4];
  id v19;
  id v20;
  id v21;

  v6 = a3;
  v7 = a4;
  v21 = 0;
  -[CKTranscriptCollectionViewController balloonViewForChatItemGUID:getChatItem:](self, "balloonViewForChatItemGUID:getChatItem:", v7, &v21);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v21;
  if (v9)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v10 = v9;
      objc_msgSend(v10, "IMChatItem");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "ageForTextEffectCoordination");
      if (v12 <= 1.0)
      {
        v14 = dispatch_time(0, (uint64_t)((1.0 - v12 + 0.1) * 1000000000.0));
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = __113__CKTranscriptCollectionViewController_textEffectCoordinator_textViewIdentifierIsCandidateForTextEffectPlayback___block_invoke;
        block[3] = &unk_1E274A108;
        v19 = v11;
        v20 = v6;
        dispatch_after(v14, MEMORY[0x1E0C80D38], block);

      }
      else
      {
        if (CKReduceMotionAutoplayEnabled())
          goto LABEL_5;
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v16 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)v17 = 0;
            _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "Autoplay text effects disabled.", v17, 2u);
          }

        }
        if (objc_msgSend(v10, "isFromMe")
          && objc_msgSend(v10, "isRecentForTextEffectCoordinationWithinTimeInterval:", 3.0))
        {
LABEL_5:
          v13 = -[CKTranscriptCollectionViewController textEffectIsCandidateBalloonViewChecksForChatItem:balloonView:](self, "textEffectIsCandidateBalloonViewChecksForChatItem:balloonView:", v10, v8);
LABEL_9:

          goto LABEL_10;
        }
      }
      v13 = 0;
      goto LABEL_9;
    }
  }
  v13 = 0;
LABEL_10:

  return v13;
}

void __113__CKTranscriptCollectionViewController_textEffectCoordinator_textViewIdentifierIsCandidateForTextEffectPlayback___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "guid");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("item %@ was too young"), v3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "updateWithReason:", v2);

}

- (BOOL)_textMessagePartItemHasValidLayout:(id)a3 textBalloonView:(id)a4
{
  BOOL v4;
  __int16 v6;

  v6 = 0;
  -[CKTranscriptCollectionViewController _textMessagePartItem:textBalloonView:getHasValidOrigin:getHasValidSize:](self, "_textMessagePartItem:textBalloonView:getHasValidOrigin:getHasValidSize:", a3, a4, (char *)&v6 + 1, &v6);
  if (HIBYTE(v6))
    v4 = v6 == 0;
  else
    v4 = 1;
  return !v4;
}

- (BOOL)textEffectIsCandidateBalloonViewChecksForChatItem:(id)a3 balloonView:(id)a4
{
  id v6;
  id v7;
  char isKindOfClass;
  char v9;
  id v10;

  v6 = a3;
  v7 = a4;
  if (!v6)
    goto LABEL_7;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v9 = 0;
  if (!v7 || (isKindOfClass & 1) == 0)
    goto LABEL_10;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_7:
    v9 = 0;
    goto LABEL_10;
  }
  v10 = v7;
  if (-[CKTranscriptCollectionViewController _textMessagePartItemHasValidLayout:textBalloonView:](self, "_textMessagePartItemHasValidLayout:textBalloonView:", v6, v10))
  {
    v9 = objc_msgSend(v10, "isCandidateForTextEffectPlayback");
  }
  else
  {
    v9 = 0;
  }

LABEL_10:
  return v9;
}

- (BOOL)textEffectIsCandidateBalloonViewChecksForChatItem:(id)a3
{
  id v4;
  void *v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[CKTranscriptCollectionViewController textEffectIsCandidateBalloonViewChecksForChatItem:balloonView:](self, "textEffectIsCandidateBalloonViewChecksForChatItem:balloonView:", v4, v5);

  return (char)self;
}

- (id)textEffectCoordinator:(id)a3 textViewForTextViewIdentifier:(id)a4
{
  void *v4;
  void *v5;
  uint64_t v7;

  v7 = 0;
  -[CKTranscriptCollectionViewController balloonViewForChatItemGUID:getChatItem:](self, "balloonViewForChatItemGUID:getChatItem:", a4, &v7);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = 0;
  if (v4 && v7)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v4, "textView");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v5 = 0;
    }
  }

  return v5;
}

- (id)textEffectCoordinator:(id)a3 highPriorityTextViewIdentifiersForUnplayedVisibleTextViewIdentifiers:(id)a4
{
  id v5;
  void *v6;
  id WeakRetained;
  void *v8;
  id v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t j;
  void *v34;
  void *v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[128];
  _BYTE v46[128];
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  objc_msgSend(MEMORY[0x1E0CB36B8], "indexSet");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  if (WeakRetained)
  {
    v8 = WeakRetained;
    v9 = objc_loadWeakRetained((id *)&self->_delegate);
    v10 = objc_opt_respondsToSelector();

    if ((v10 & 1) != 0)
    {
      v11 = objc_loadWeakRetained((id *)&self->_delegate);
      objc_msgSend(v11, "firstUnreadMessageItemGUIDForTranscriptCollectionViewController:", self);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12)
      {
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "__ck_indexesOfPartsOfMessageWithGUID:", v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        v15 = objc_msgSend(v14, "firstIndex");
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "count");

        if (v15 != 0x7FFFFFFFFFFFFFFFLL && v17 != 0x8000000000000000)
        {
          objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v15, v17 - 1 - v15);
          v18 = objc_claimAutoreleasedReturnValue();

          v6 = (void *)v18;
        }

      }
    }
  }
  v19 = (void *)objc_opt_new();
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v20 = v5;
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v41, v46, 16);
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)v42;
    do
    {
      for (i = 0; i != v22; ++i)
      {
        if (*(_QWORD *)v42 != v23)
          objc_enumerationMutation(v20);
        v25 = *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * i);
        -[CKTranscriptCollectionViewController chatItemForGUID:](self, "chatItemForGUID:", v25);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        if (v26)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            if (objc_msgSend(v26, "isRecentForTextEffectCoordinationWithinTimeInterval:", 3.0))
              objc_msgSend(v19, "addObject:", v25);
          }
        }

      }
      v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v41, v46, 16);
    }
    while (v22);
  }

  if (objc_msgSend(v6, "count"))
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "objectsAtIndexes:", v6);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    v39 = 0u;
    v40 = 0u;
    v37 = 0u;
    v38 = 0u;
    v29 = v28;
    v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v37, v45, 16);
    if (v30)
    {
      v31 = v30;
      v32 = *(_QWORD *)v38;
      do
      {
        for (j = 0; j != v31; ++j)
        {
          if (*(_QWORD *)v38 != v32)
            objc_enumerationMutation(v29);
          objc_msgSend(*(id *)(*((_QWORD *)&v37 + 1) + 8 * j), "IMChatItem", (_QWORD)v37);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "guid");
          v35 = (void *)objc_claimAutoreleasedReturnValue();

          if (v35 && objc_msgSend(v20, "containsObject:", v35))
            objc_msgSend(v19, "addObject:", v35);

        }
        v31 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v37, v45, 16);
      }
      while (v31);
    }

  }
  return v19;
}

- (BOOL)canStartNewTextAnimationsInTextEffectCoordinator:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  BOOL v11;

  -[CKTranscriptCollectionViewController viewIfLoaded](self, "viewIfLoaded", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "window");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "windowScene");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (v8)
      {
        -[CKTranscriptCollectionViewController traitCollection](self, "traitCollection");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = v9;
        v11 = v9
           && objc_msgSend(v9, "activeAppearance")
           && !+[CKApplicationState isResizing](CKApplicationState, "isResizing")
           && objc_msgSend(v8, "activationState") == 0;

      }
      else
      {
        v11 = 0;
      }

    }
    else
    {
      v11 = 0;
    }

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

- (void)textEffectCoordinator:(id)a3 willRequestAnimatorUsing:(id)a4
{
  void *v4;
  id v5;

  v5 = a4;
  if (objc_msgSend(MEMORY[0x1E0CEAB18], "ck_supportsDynamicallyTogglingAllowsTextAnimations"))
  {
    objc_msgSend(v5, "textView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAllowsTextAnimations:", 1);

  }
}

- (void)textEffectCoordinator:(id)a3 didChangeStateOfAnimator:(id)a4 textView:(id)a5
{
  id v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a4;
  v7 = a5;
  if (objc_msgSend(MEMORY[0x1E0CEAB18], "ck_supportsDynamicallyTogglingAllowsTextAnimations"))
  {
    v8 = objc_msgSend(v12, "state");
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "collectionViewLayout");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "reloadData");
    objc_msgSend(v10, "invalidateLayout");
    if (v8 <= 1)
    {
      objc_msgSend(v12, "animation");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setAllowsTextAnimations:", objc_msgSend(v7, "ck_isLastTextAnimation:", v11) ^ 1);

    }
  }

}

- (BOOL)_shouldMakeTextEffectStateReadyInViewDidAppearDeferredSetup
{
  return 1;
}

+ (id)initialTextEffectsState
{
  void *v2;
  int v3;
  CKTranscriptTextEffectsState *v4;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isExpressiveTextEnabled");

  if (v3)
  {
    v4 = objc_alloc_init(CKTranscriptTextEffectsState);
    -[CKTranscriptTextEffectsState setIsReady:](v4, "setIsReady:", 0);
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

- (void)updateTextEffectsState:(id)a3
{
  CKTranscriptTextEffectsState *textEffectsState;
  void (**v5)(id, CKTranscriptTextEffectsState *);
  _BOOL4 v6;
  _BOOL8 v7;
  id v8;

  textEffectsState = self->_textEffectsState;
  if (textEffectsState)
  {
    v5 = (void (**)(id, CKTranscriptTextEffectsState *))a3;
    v6 = -[CKTranscriptTextEffectsState isPaused](textEffectsState, "isPaused");
    v5[2](v5, self->_textEffectsState);

    v7 = -[CKTranscriptTextEffectsState isPaused](self->_textEffectsState, "isPaused");
    LODWORD(v5) = v7;
    -[CKTextEffectCoordinator setPaused:includingAnimators:](self->_transcriptTextEffectCoordinator, "setPaused:includingAnimators:", v7, 1);
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("changed text effect state – isPausedBeforeUpdate: %i – isPaused: %i"), v6, v5);
    v8 = (id)objc_claimAutoreleasedReturnValue();
    -[CKTextEffectCoordinator updateWithReason:](self->_transcriptTextEffectCoordinator, "updateWithReason:", v8);

  }
}

- (BOOL)isTextEffectCoordinatorPaused
{
  void *v2;
  char v3;

  if (!self->_transcriptTextEffectCoordinator)
    return 1;
  -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isPaused");

  return v3;
}

- (void)setTextEffectCoordinatorPaused:(BOOL)a3 reason:(id)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  unsigned int v8;
  void *v9;
  void *v10;
  id v11;

  v4 = a3;
  v6 = a4;
  -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isPaused");

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("paused %d ↦ %d: %@"), v8, v4, v6);
  v11 = (id)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPaused:includingAnimators:", v4, 1);

  -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "updateWithReason:", v11);

}

- (void)prepareTextEffectsForModalPresentation
{
  void *v3;
  int v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isExpressiveTextEnabled");

  if (v4)
  {
    -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
    v5 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setPaused:includingAnimators:", 1, 0);
    objc_msgSend(v5, "reset");
    -[CKTranscriptCollectionViewController __updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells:](self, "__updateLayoutAndConfigureVisibleMessagesCellsIncludingAssociatedCells:", 0);

  }
}

- (void)textEffectsEndTransitionSetReady
{
  -[CKTranscriptCollectionViewController updateTextEffectsState:](self, "updateTextEffectsState:", &__block_literal_global_413_0);
}

void __72__CKTranscriptCollectionViewController_textEffectsEndTransitionSetReady__block_invoke(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  objc_msgSend(v2, "setInTransition:", 0);
  objc_msgSend(v2, "setIsReady:", 1);

}

- (void)transcriptBalloonCell:(id)a3 didChangeRenderBoundsOfTextBalloonView:(id)a4
{
  id v6;
  id v7;
  _TtC7ChatKit23CKTextEffectCoordinator *transcriptTextEffectCoordinator;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  id v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  transcriptTextEffectCoordinator = self->_transcriptTextEffectCoordinator;
  if (transcriptTextEffectCoordinator
    && !-[CKTextEffectCoordinator isPaused](transcriptTextEffectCoordinator, "isPaused"))
  {
    objc_msgSend(v7, "textView");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "attributedText");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v10, "ck_hasTextAnimation"))
    {
      -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v6);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (v11)
      {
        v23 = v10;
        objc_msgSend(v7, "bounds");
        v13 = v12;
        v15 = v14;
        objc_msgSend(v6, "setNeedsLayout");
        objc_msgSend(v11, "visibleAssociatedMessageChatItems");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = 0u;
        v25 = 0u;
        v26 = 0u;
        v27 = 0u;
        v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
        if (v17)
        {
          v18 = v17;
          v19 = *(_QWORD *)v25;
          do
          {
            for (i = 0; i != v18; ++i)
            {
              if (*(_QWORD *)v25 != v19)
                objc_enumerationMutation(v16);
              -[CKTranscriptCollectionViewController cellForAssociatedChatItem:](self, "cellForAssociatedChatItem:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i));
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
              {
                v22 = v21;
                objc_msgSend(v22, "setParentSize:", v13, v15);
                objc_msgSend(v22, "setNeedsLayout");

              }
            }
            v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
          }
          while (v18);
        }

        v10 = v23;
      }

    }
  }

}

- (void)transcriptBalloonCell:(id)a3 textBalloonView:(id)a4 didChangeTextEffectPlaybackCandidateStatus:(BOOL)a5
{
  id v6;

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("TextEffectPlaybackCandidateStatus did change to %{BOOL}d"), a4, a5);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  if (!+[CKApplicationState isResizing](CKApplicationState, "isResizing"))
    -[CKTextEffectCoordinator updateWithReason:](self->_transcriptTextEffectCoordinator, "updateWithReason:", v6);

}

- (unint64_t)transcriptBalloonCell:(id)a3 allowedLayoutActionForTextBalloonView:(id)a4
{
  id v6;
  void *v7;
  unint64_t v8;
  unsigned __int8 v10;

  v6 = a4;
  if (self->_transcriptTextEffectCoordinator)
  {
    -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", a3);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v10 = 0;
      -[CKTranscriptCollectionViewController _textMessagePartItem:textBalloonView:getHasValidOrigin:getHasValidSize:](self, "_textMessagePartItem:textBalloonView:getHasValidOrigin:getHasValidSize:", v7, v6, 0, &v10);
      v8 = v10;
    }
    else
    {
      v8 = 0;
    }

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (id)transcriptBalloonCell:(id)a3 customTextRenderingDisplayLinkForTextBalloonViewTextView:(id)a4
{
  void *v4;
  void *v5;

  -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator", a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "customRenderDisplayLink");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (BOOL)collectionView:(id)a3 shouldHighlightItemAtIndexPath:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  char v8;

  v5 = a4;
  if (objc_msgSend(v5, "section")
    || !-[CKTranscriptCollectionViewController isEditing](self, "isEditing"))
  {
    v8 = 0;
  }
  else
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectAtIndex:", objc_msgSend(v5, "item"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "canBeSelectedInEditMode");

  }
  return v8;
}

- (void)collectionView:(id)a3 didSelectItemAtIndexPath:(id)a4
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a4;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v14, "item");
  if (v6 >= 1)
  {
    v7 = v6;
    if (v6 < (unint64_t)objc_msgSend(v5, "count"))
    {
      objc_msgSend(v5, "objectAtIndex:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "IMChatItem");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "guid");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "addSelectedMessageGuid:selectionState:", v10, v12);

    }
  }
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "transcriptCollectionViewController:didSelectItemAtIndexPath:", self, v14);

}

- (void)collectionView:(id)a3 didDeselectItemAtIndexPath:(id)a4
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a4;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v13, "item");
  if (v6 >= 1)
  {
    v7 = v6;
    if (v6 < (unint64_t)objc_msgSend(v5, "count"))
    {
      objc_msgSend(v5, "objectAtIndex:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "IMChatItem");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "guid");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeSelectedMessageGuid:", v10);

    }
  }
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "transcriptCollectionViewController:didDeselectItemAtIndexPath:", self, v13);

}

- (void)collectionView:(id)a3 didEndDisplayingCell:(id)a4 forItemAtIndexPath:(id)a5
{
  id v8;
  id v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  CGRect v33;
  CGRect v34;

  v32 = a3;
  v8 = a4;
  v9 = a5;
  if (!objc_msgSend(v9, "section") && !+[CKApplicationState isResizing](CKApplicationState, "isResizing"))
  {
    v10 = objc_msgSend(v9, "item");
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10 < objc_msgSend(v11, "count"))
    {
      objc_msgSend(v11, "objectAtIndex:", v10);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "isExpressiveTextEnabled");

      if (v14)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          objc_msgSend(v8, "setTextEffectsDelegate:", 0);
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v15 = v12;
        objc_msgSend(v8, "frame");
        v17 = v16;
        v19 = v18;
        v21 = v20;
        v23 = v22;
        objc_msgSend(v32, "bounds");
        v34.origin.x = v17;
        v34.origin.y = v19;
        v34.size.width = v21;
        v34.size.height = v23;
        if (!CGRectIntersectsRect(v33, v34))
        {
          -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "extensibleViewControllerForContext:", v24);
          v25 = (void *)objc_claimAutoreleasedReturnValue();

          if (v25)
            objc_msgSend(v25, "removeFromParentViewController");
          objc_msgSend(v15, "IMChatItem");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v27 = objc_msgSend(v26, "isDataSourceInitialized");

          if (v27)
          {
            -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "balloonControllerForContext:", v28);
            v29 = (void *)objc_claimAutoreleasedReturnValue();

            if ((objc_opt_respondsToSelector() & 1) != 0)
              objc_msgSend(v29, "pluginContentViewDidDissapear");

          }
        }
        -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "relinquishBalloonControllerForContext:", v30);

      }
    }

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "balloonView");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v31, "prepareForReuse");

  }
}

- (void)_prepareTextEffectCoordinatorForCell:(id)a3 forItem:(id)a4 atIndexPath:(id)a5
{
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id location;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (self->_transcriptTextEffectCoordinator)
  {
    if (!+[CKApplicationState isResizing](CKApplicationState, "isResizing"))
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(v8, "setTextEffectsDelegate:", self);
        if (objc_msgSend(v9, "_textContainsIMTextEffect"))
        {
          location = 0;
          objc_initWeak(&location, self);
          v11[0] = MEMORY[0x1E0C809B0];
          v11[1] = 3221225472;
          v11[2] = __97__CKTranscriptCollectionViewController__prepareTextEffectCoordinatorForCell_forItem_atIndexPath___block_invoke;
          v11[3] = &unk_1E274CB00;
          objc_copyWeak(&v14, &location);
          v12 = v10;
          v13 = v9;
          dispatch_async(MEMORY[0x1E0C80D38], v11);

          objc_destroyWeak(&v14);
          objc_destroyWeak(&location);
        }
      }
    }
  }

}

void __97__CKTranscriptCollectionViewController__prepareTextEffectCoordinatorForCell_forItem_atIndexPath___block_invoke(id *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  objc_msgSend(WeakRetained, "transcriptTextEffectCoordinator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x1E0CB3940];
  v4 = objc_msgSend(a1[4], "section");
  v5 = objc_msgSend(a1[4], "item");
  objc_msgSend(a1[5], "IMChatItem");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "guid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringWithFormat:", CFSTR("willDisplayCell at index path: %lu|%lu - identifier: %@"), v4, v5, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "updateWithReason:", v8);

}

- (void)collectionView:(id)a3 willDisplayCell:(id)a4 forItemAtIndexPath:(id)a5
{
  id v7;
  id v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  char v23;
  void *v24;
  NSIndexPath *itemIndexPathToHighlight;
  void *v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  BOOL v43;
  uint64_t v44;
  void *v45;
  void *v46;
  char v47;
  void *v48;
  double v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  unint64_t v69;
  _QWORD v70[2];

  v70[1] = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  v9 = objc_msgSend(v8, "item");
  if (objc_msgSend(v8, "section"))
  {
    if (objc_msgSend(v8, "section") == 1)
    {
      -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "count");

      if (v9 < v11)
      {
        -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectAtIndexedSubscript:", v9);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_9;
      }
    }
    goto LABEL_8;
  }
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "count");

  if (v9 >= v15)
  {
LABEL_8:
    v13 = 0;
    goto LABEL_9;
  }
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "objectAtIndexedSubscript:", v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "isExpressiveTextEnabled");

  if (v18)
    -[CKTranscriptCollectionViewController _prepareTextEffectCoordinatorForCell:forItem:atIndexPath:](self, "_prepareTextEffectCoordinatorForCell:forItem:atIndexPath:", v7, v13, v8);
LABEL_9:
  if (!objc_msgSend(v8, "section"))
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "balloonControllerForContext:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v20, "pluginContentViewWillAppear");

    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v21 = v7;
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_opt_respondsToSelector();

      if ((v23 & 1) != 0)
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "transcriptCollectionViewController:willDisplayStatusCell:", self, v21);

      }
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v7, "setDelegate:", self);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v7, "setDelegate:", self);
  }
  v69 = v9;
  if (-[NSIndexPath isEqual:](self->_itemIndexPathToHighlight, "isEqual:", v8))
  {
    -[CKTranscriptCollectionViewController _highlightCell:autoDismiss:](self, "_highlightCell:autoDismiss:", v7, 1);
    itemIndexPathToHighlight = self->_itemIndexPathToHighlight;
    self->_itemIndexPathToHighlight = 0;

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "enableBalloonTextSelection");

    if (v27)
    {
      objc_msgSend(v13, "IMChatItem");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "guid");
      v29 = (void *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = v30;
      if (v29 && objc_msgSend(v30, "isMessageGuidSelected:", v29))
      {
        objc_msgSend(v7, "balloonView");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "selectedStateForGuid:", v29);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v32, "setSelected:withSelectionState:", 1, v33);

      }
    }
  }
  objc_msgSend(v13, "IMChatItem");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v34, "message");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "lastIncomingFinishedMessage");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = objc_msgSend(v37, "compare:comparisonType:", v35, 2);

    if (v38)
      goto LABEL_38;
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "transcriptCollectionViewControllerWillDisplayLastBalloon:", self);

    -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v40, "isAnimating") & 1) != 0)
    {
      -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "animatingIdentifier");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = +[CKImpactEffectManager identifierShouldPlayInWindow:](CKImpactEffectManager, "identifierShouldPlayInWindow:", v42);

      if (v43)
      {
        v44 = 1;
LABEL_37:
        objc_msgSend(v7, "setHidden:", v44);
LABEL_38:
        objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v45, "isCatchUpEnabled"))
        {
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          v47 = objc_opt_respondsToSelector();

          if ((v47 & 1) == 0)
          {
LABEL_42:

            goto LABEL_43;
          }
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "guid");
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "frame");
          objc_msgSend(v45, "transcriptCollectionViewController:willDisplayBalloonForGUID:withIndexPath:withOriginY:", self, v48, v8, v49);

        }
        goto LABEL_42;
      }
    }
    else
    {

    }
    v44 = 0;
    goto LABEL_37;
  }
LABEL_43:
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "currentEffect");
  v51 = (void *)objc_claimAutoreleasedReturnValue();

  if (v51)
  {
    if (objc_msgSend(v8, "section") == 1
      || !objc_msgSend(v8, "section")
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v53, "currentEffect");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v54, "triggeringChatItem");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      v56 = objc_msgSend(v52, "indexOfObject:", v55);

      -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v57, "currentEffect");
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      v59 = v58;
      if (v69 == v56)
      {
        objc_msgSend(v58, "applyMessageFiltersToTriggeringCell:", v7);
      }
      else
      {
        v70[0] = v7;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v70, 1);
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v59, "applyMessageFiltersToCells:", v60);

      }
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v7, "setDelegate:", self);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v61 = v7;
    objc_msgSend(v61, "setDelegate:", self);
    objc_msgSend(v61, "balloonView");
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    if (v62)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v63 = *MEMORY[0x1E0D38730];
        v64 = v62;
        -[CKTranscriptCollectionViewController _trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:](self, "_trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:", v63, v64, objc_msgSend(v13, "transcriptOrientation"));

      }
    }

  }
  if (!objc_msgSend(v8, "section"))
  {
    -[CKTranscriptCollectionViewController hiddenChatItemGUIDs](self, "hiddenChatItemGUIDs");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "IMChatItem");
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "guid");
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    v67 = objc_msgSend(v65, "containsObject:", v68);

    goto LABEL_66;
  }
  if (objc_msgSend(v8, "section") == 1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v13, "associatedMessageGUID");
      v65 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController chatItemGUIDsOfHiddenTapbackPiles](self, "chatItemGUIDsOfHiddenTapbackPiles");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      v67 = objc_msgSend(v66, "containsObject:", v65);
LABEL_66:

      goto LABEL_67;
    }
  }
  v67 = 0;
LABEL_67:
  -[CKTranscriptCollectionViewController configureTranscriptCell:hidden:](self, "configureTranscriptCell:hidden:", v7, v67);

}

- (BOOL)collectionView:(id)a3 canFocusItemAtIndexPath:(id)a4
{
  return 0;
}

- (void)collectionViewWillInset:(id)a3 targetContentInset:(UIEdgeInsets *)a4
{
  id v6;

  -[CKTranscriptCollectionViewController delegate](self, "delegate", a3);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "transcriptCollectionViewControllerWillInset:targetContentInset:", self, a4);

}

- (void)collectionViewDidInset:(id)a3
{
  id v4;

  -[CKTranscriptCollectionViewController delegate](self, "delegate", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transcriptCollectionViewControllerDidInset:", self);

}

- (int64_t)numberOfSectionsInCollectionView:(id)a3
{
  return 2;
}

- (int64_t)collectionView:(id)a3 numberOfItemsInSection:(int64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  char v9;
  int64_t v10;
  void *v11;

  v6 = a3;
  if (a4 == 1)
  {
    +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isPrinting");

    if ((v9 & 1) == 0)
    {
      -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_7;
    }
  }
  else if (!a4)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_7:
    v11 = v7;
    v10 = objc_msgSend(v7, "count");

    goto LABEL_8;
  }
  v10 = 0;
LABEL_8:

  return v10;
}

- (id)collectionView:(id)a3 cellForItemAtIndexPath:(id)a4
{
  id v6;
  id v7;
  unint64_t v8;
  void *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;

  v6 = a3;
  v7 = a4;
  if (!objc_msgSend(v7, "section"))
  {
    v8 = objc_msgSend(v7, "item");
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "count");

    if (v8 >= v10)
    {
      v11 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "section"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "item"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "stringWithFormat:", CFSTR("[cellForItemAtIndexPath] Attempting to access chat item at invalid index (section: %@, item: %@)"), v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99DA0], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E0C99778], v14, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "raise");

    }
  }
  if (objc_msgSend(v7, "section") == 1)
  {
    v16 = objc_msgSend(v7, "item");
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "count");

    if (v16 >= v18)
    {
      v19 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "section"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "item"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "stringWithFormat:", CFSTR("[cellForItemAtIndexPath] Attempting to access associated chat item at invalid index (section: %@, item: %@)"), v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99DA0], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E0C99778], v22, 0);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "raise");

    }
  }
  if (objc_msgSend(v7, "section"))
  {
    if (objc_msgSend(v7, "section") != 1)
    {
LABEL_12:
      v27 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "section"));
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "item"));
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "stringWithFormat:", CFSTR("[cellForItemAtIndexPath] Unable to retrieve chatItem for index (section: %@, item: %@), "), v28, v29);
      v30 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99DA0], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E0C99778], v30, 0);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "raise");

      v26 = 0;
      goto LABEL_13;
    }
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "objectAtIndex:", objc_msgSend(v7, "item"));
    v25 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "objectAtIndex:", objc_msgSend(v7, "item"));
    v25 = objc_claimAutoreleasedReturnValue();
  }
  v26 = (void *)v25;

  if (!v26)
    goto LABEL_12;
LABEL_13:
  -[CKTranscriptCollectionViewController collectionView:cellForCKChatItem:atIndexPath:](self, "collectionView:cellForCKChatItem:atIndexPath:", v6, v26, v7);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

- (id)collectionView:(id)a3 cellForCKChatItem:(id)a4 atIndexPath:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;

  v8 = a4;
  v9 = a5;
  v10 = a3;
  objc_msgSend(v8, "cellIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "registerClass:forCellWithReuseIdentifier:", objc_msgSend(v8, "cellClass"), v11);
  objc_msgSend(v10, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v11, v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    -[CKTranscriptCollectionViewController configureAssociatedCell:forChatItem:atIndexPath:](self, "configureAssociatedCell:forChatItem:atIndexPath:", v12, v8, v9);
  else
    -[CKTranscriptCollectionViewController configureCell:forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:](self, "configureCell:forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:", v12, v8, v9, 0, 3, 0.0);

  return v12;
}

- (void)collectionView:(id)a3 willDisplaySupplementaryView:(id)a4 forElementKind:(id)a5 atIndexPath:(id)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  objc_class *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  char isKindOfClass;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  void *v35;
  double v36;
  CGFloat v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  CGSize v42;

  v41 = a3;
  v10 = a4;
  v11 = a6;
  v12 = a5;
  +[CKFullscreenEffectDecorationView decorationViewKind](CKFullscreenEffectDecorationView, "decorationViewKind");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v12, "isEqualToString:", v13);

  if (v14)
  {
    -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "currentEffect");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = (objc_class *)objc_msgSend(v16, "effectViewClass");
    objc_msgSend(v41, "collectionViewLayout");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "effectIndexForDecorationViewAtIndex:", objc_msgSend(v11, "section"));

    v20 = v10;
    -[CKTranscriptCollectionViewController currentEffectDecorationViews](self, "currentEffectDecorationViews");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "addObject:", v20);

    objc_msgSend(v20, "setUserInteractionEnabled:", 0);
    v22 = [v17 alloc];
    objc_msgSend(v20, "bounds");
    v23 = (void *)objc_msgSend(v22, "initWithFrame:");
    objc_msgSend(v23, "setUserInteractionEnabled:", 0);
    objc_msgSend(v23, "setZIndex:", v19);
    objc_msgSend(v20, "setupForEffectView:", v23);
    -[CKTranscriptCollectionViewController _updateEffectViewMessageRect:effect:](self, "_updateEffectViewMessageRect:effect:", v23, v16);
    if (objc_msgSend(v16, "isForegroundEffect"))
    {
      objc_msgSend(v16, "triggeringChatItem");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v41, "addSubview:", v25);
      objc_msgSend(v41, "insertSubview:belowSubview:", v20, v25);

    }
    objc_msgSend(v16, "triggeringChatItem");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v27, "balloonView");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();

      if ((isKindOfClass & 1) != 0)
      {
        objc_msgSend(v27, "balloonView");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "bounds");
        v32 = v31;
        v34 = v33;
        objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "scale");
        v37 = v36;
        v42.width = v32;
        v42.height = v34;
        UIGraphicsBeginImageContextWithOptions(v42, 1, v37);

        objc_msgSend(v27, "balloonView");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "balloonView");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v39, "bounds");
        objc_msgSend(v38, "drawViewHierarchyInRect:afterScreenUpdates:", 0);

        UIGraphicsGetImageFromCurrentImageContext();
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        UIGraphicsEndImageContext();
        objc_msgSend(v23, "setMessageImage:", v40);

      }
    }
    objc_msgSend(v23, "startAnimation");

  }
}

- (void)collectionView:(id)a3 didEndDisplayingSupplementaryView:(id)a4 forElementOfKind:(id)a5 atIndexPath:(id)a6
{
  id v8;
  void *v9;
  int v10;
  id v11;
  void *v12;
  id v13;

  v13 = a4;
  v8 = a5;
  +[CKFullscreenEffectDecorationView decorationViewKind](CKFullscreenEffectDecorationView, "decorationViewKind");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v8, "isEqualToString:", v9);

  if (v10)
  {
    v11 = v13;
    -[CKTranscriptCollectionViewController currentEffectDecorationViews](self, "currentEffectDecorationViews");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "removeObject:", v11);

    objc_msgSend(v11, "tearDownEffectView");
  }

}

- (void)updateEffectViewMessageRects
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "currentEffect");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    -[CKTranscriptCollectionViewController currentEffectDecorationViews](self, "currentEffectDecorationViews");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v22;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v22 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v9), "effectView");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          -[CKTranscriptCollectionViewController _updateEffectViewMessageRect:effect:](self, "_updateEffectViewMessageRect:effect:", v10, v4);

          ++v9;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
      }
      while (v7);
    }

    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    -[CKTranscriptCollectionViewController delegate](self, "delegate", 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "transcriptCollectionViewControllerAdditionalFullscreenEffectViews:", self);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v18;
      do
      {
        v16 = 0;
        do
        {
          if (*(_QWORD *)v18 != v15)
            objc_enumerationMutation(v12);
          -[CKTranscriptCollectionViewController _updateEffectViewMessageRect:effect:](self, "_updateEffectViewMessageRect:effect:", *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v16++), v4);
        }
        while (v14 != v16);
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
      }
      while (v14);
    }

  }
}

- (void)endHoldingUpdatesAfterQuicklookCancelsDismiss
{
  id v2;

  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "endHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesDisappeared"));

}

- (void)_addChatItemsToGenerativeContextHistory:(id)a3
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  const __CFString *v28;
  uint64_t v29;
  CKTranscriptCollectionViewController *v30;
  uint64_t v31;
  id obj;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  obj = a3;
  v30 = self;
  if (self->_generativeContextHistory)
  {
    v35 = 0u;
    v36 = 0u;
    v33 = 0u;
    v34 = 0u;
    v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v34;
      v28 = CFSTR("CKGenerativeContextDisplayName");
      v29 = *(_QWORD *)v34;
      do
      {
        v7 = 0;
        v31 = v5;
        do
        {
          if (*(_QWORD *)v34 != v6)
            objc_enumerationMutation(obj);
          v8 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * v7);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v9 = v8;
            objc_msgSend(v9, "text");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "string");
            v11 = (void *)objc_claimAutoreleasedReturnValue();

            if (objc_msgSend(v11, "length"))
            {
              objc_msgSend(v9, "messageItem");
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v12, "time");
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v12, "sender");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              MEMORY[0x193FF3B40]();
              v15 = (void *)objc_claimAutoreleasedReturnValue();

              if (!objc_msgSend(v15, "length") && objc_msgSend(v12, "isFromMe"))
              {
                objc_msgSend(v12, "destinationCallerID");
                v16 = (void *)objc_claimAutoreleasedReturnValue();
                MEMORY[0x193FF3B40]();
                v17 = objc_claimAutoreleasedReturnValue();

                v15 = (void *)v17;
              }
              objc_msgSend(MEMORY[0x1E0C99E08], "dictionary", v28);
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = v18;
              if (v13)
                objc_msgSend(v18, "setObject:forKey:", v13, CFSTR("CKGenerativeContextTimestamp"));
              if (v11)
                objc_msgSend(v19, "setObject:forKey:", v11, CFSTR("CKGenerativeContextText"));
              if (v15)
                objc_msgSend(v19, "setObject:forKey:", v15, CFSTR("CKGenerativeContextHandle"));
              objc_msgSend(v9, "sender");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v20, "cnContact");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "displayName");
              v22 = (void *)objc_claimAutoreleasedReturnValue();

              if (v22)
              {
                objc_msgSend(v9, "sender");
                v23 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v23, "cnContact");
                v24 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v24, "displayName");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v19, "setObject:forKey:", v25, v28);

              }
              -[CKTranscriptCollectionViewController generativeContextHistory](v30, "generativeContextHistory");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              v27 = (void *)objc_msgSend(v19, "copy");
              objc_msgSend(v26, "addObject:", v27);

              v6 = v29;
              v5 = v31;
            }

          }
          ++v7;
        }
        while (v5 != v7);
        v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
      }
      while (v5);
    }
  }

}

- (BOOL)_shouldMarkAllInputContextHistoryEntriesAsJunk
{
  void *v2;
  void *v3;
  BOOL v4;

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    v4 = objc_msgSend(v3, "isFiltered") == 2;
  else
    v4 = 0;

  return v4;
}

- (void)_addChatItemsToInputContextHistory:(id)a3
{
  id v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  dispatch_time_t v33;
  CKTranscriptCollectionViewController *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  BOOL v39;
  void *v40;
  uint64_t v41;
  _QWORD block[5];
  id v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  void *v48;
  _BYTE v49[128];
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController inputContextHistory](self, "inputContextHistory");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = -[CKTranscriptCollectionViewController _shouldMarkAllInputContextHistoryEntriesAsJunk](self, "_shouldMarkAllInputContextHistoryEntriesAsJunk");
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v6 = v4;
  v41 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v44, v49, 16);
  if (!v41)
  {

    goto LABEL_41;
  }
  v34 = self;
  v40 = v5;
  v7 = 0;
  v8 = *(_QWORD *)v45;
  v36 = *MEMORY[0x1E0D366F8];
  v37 = *(_QWORD *)v45;
  v38 = v6;
  do
  {
    for (i = 0; i != v41; ++i)
    {
      if (*(_QWORD *)v45 != v8)
        objc_enumerationMutation(v6);
      v10 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * i);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v11 = v10;
        objc_msgSend(v11, "messageItem");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "time");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "sender");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        MEMORY[0x193FF3B40]();
        v15 = (void *)objc_claimAutoreleasedReturnValue();

        if (!objc_msgSend(v15, "length") && objc_msgSend(v12, "isFromMe"))
        {
          objc_msgSend(v12, "destinationCallerID");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          MEMORY[0x193FF3B40]();
          v17 = objc_claimAutoreleasedReturnValue();

          v15 = (void *)v17;
        }
        objc_msgSend(v12, "guid", v34);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "threadIdentifier");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        if (v39)
        {
          v20 = 0;
          v21 = 3;
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v11, "text");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v29, "attribute:existsInRange:", v36, 0, objc_msgSend(v29, "length")))
              v21 = 2;
            else
              v21 = 0;
            objc_msgSend(v29, "string");
            v20 = (void *)objc_claimAutoreleasedReturnValue();

          }
          else
          {
            objc_opt_class();
            v20 = 0;
            if ((objc_opt_isKindOfClass() & 1) != 0)
              v21 = 1;
            else
              v21 = 4;
          }
        }
        v30 = objc_alloc_init(MEMORY[0x1E0DBDCA0]);
        objc_msgSend(v30, "setText:", v20);
        objc_msgSend(v30, "setSenderIdentifier:", v15);
        objc_msgSend(v30, "setTimestamp:", v13);
        objc_msgSend(v30, "setEntryIdentifier:", v18);
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v30, "setEntryType:", v21);
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v30, "setThreadIdentifier:", v19);
        v31 = (void *)objc_msgSend(v30, "copy");
        objc_msgSend(v40, "addEntry:", v31);

        v7 = 1;
        v8 = v37;
        v6 = v38;
        goto LABEL_31;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
        continue;
      v22 = v10;
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        objc_msgSend(v22, "handle");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "ID");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        MEMORY[0x193FF3B40]();
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v40, "recipientIdentifiers");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = objc_msgSend(v24, "containsObject:", v13);

        if ((v25 & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CB3850], "descriptorForUsedKeys");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v48 = v26;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v48, 1);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "cnContactWithKeys:", v27);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(MEMORY[0x1E0CB3850], "componentsForContact:", v15);
          v28 = objc_claimAutoreleasedReturnValue();
          v18 = (void *)v28;
          if (v13 && v28)
          {
            objc_msgSend(v40, "addNewParticipantWithIdentifier:name:", v13, v28);
            v7 = 1;
          }
LABEL_31:

        }
      }

    }
    v41 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v44, v49, 16);
  }
  while (v41);

  v5 = v40;
  if ((v7 & 1) != 0)
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v40, "didFinishAddingEntriesToInputContextHistory");
    objc_msgSend(MEMORY[0x1E0CEA6C8], "activeKeyboard", v34);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "responseContextDidChange");

    v33 = dispatch_time(0, 100000000);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __75__CKTranscriptCollectionViewController__addChatItemsToInputContextHistory___block_invoke;
    block[3] = &unk_1E274A108;
    block[4] = v35;
    v43 = v6;
    dispatch_after(v33, MEMORY[0x1E0C80D38], block);

  }
LABEL_41:

}

uint64_t __75__CKTranscriptCollectionViewController__addChatItemsToInputContextHistory___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "initiateSmartEmojiResponsesUpdateWithChatItems:", *(_QWORD *)(a1 + 40));
}

- (void)_createInputContextHistory
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  UIInputContextHistory *v12;
  UIInputContextHistory *inputContextHistory;
  void *v14;
  id v15;

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v15 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v15, "isKnownSender"))
  {
    objc_msgSend(v15, "deviceIndependentID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    CKTextInputIdentifier(v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v15, "recipients");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController _inputContextIdentifiersForRecipients:](self, "_inputContextIdentifiersForRecipients:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController _inputContextIdentifiersForMe](self, "_inputContextIdentifiersForMe");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController _participantsNameMapFromRecipients:mySenderIdentifiers:](self, "_participantsNameMapFromRecipients:mySenderIdentifiers:", v5, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_alloc(MEMORY[0x1E0CEA670]);
    v10 = objc_alloc_init(MEMORY[0x1E0C99E60]);
    v11 = objc_alloc_init(MEMORY[0x1E0C99D80]);
    v12 = (UIInputContextHistory *)objc_msgSend(v9, "initWithThreadIdentifier:participantsIDtoNames:firstPerson:primaryRecipients:secondaryRecipients:info:", v4, v8, v7, v6, v10, v11);

    inputContextHistory = self->_inputContextHistory;
    self->_inputContextHistory = v12;

    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController _addChatItemsToInputContextHistory:](self, "_addChatItemsToInputContextHistory:", v14);

  }
}

- (NSMutableArray)generativeContextHistory
{
  NSMutableArray *generativeContextHistory;

  generativeContextHistory = self->_generativeContextHistory;
  if (!generativeContextHistory)
  {
    -[CKTranscriptCollectionViewController _createGenerativeContextHistory](self, "_createGenerativeContextHistory");
    generativeContextHistory = self->_generativeContextHistory;
  }
  return generativeContextHistory;
}

- (void)_createGenerativeContextHistory
{
  NSMutableArray *v3;
  NSMutableArray *generativeContextHistory;
  id v5;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v3 = (NSMutableArray *)objc_claimAutoreleasedReturnValue();
  generativeContextHistory = self->_generativeContextHistory;
  self->_generativeContextHistory = v3;

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _addChatItemsToGenerativeContextHistory:](self, "_addChatItemsToGenerativeContextHistory:", v5);

}

- (id)_inputContextIdentifiersForRecipients:(id)a3
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v4 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v15;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v15 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v9), "rawAddress", (_QWORD)v14);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        MEMORY[0x193FF3B40]();
        v11 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v11, "length"))
          objc_msgSend(v4, "addObject:", v11);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v7);
  }

  v12 = (void *)objc_msgSend(v4, "copy");
  return v12;
}

- (id)_inputContextIdentifiersForMe
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  objc_msgSend(MEMORY[0x1E0D35738], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "senderIdentifiers");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        MEMORY[0x193FF3B40](*(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v9));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v10, "length", (_QWORD)v13))
          objc_msgSend(v2, "addObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

- (id)_participantsNameMapFromRecipients:(id)a3 mySenderIdentifiers:(id)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  BOOL v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t j;
  void *v29;
  BOOL v30;
  void *v31;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];
  _QWORD v44[3];

  v44[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v33 = a4;
  v6 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(MEMORY[0x1E0CB3850], "descriptorForUsedKeys");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v44[0] = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v44, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  v9 = v5;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v39;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v39 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * i);
        objc_msgSend(v14, "rawAddress");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        MEMORY[0x193FF3B40]();
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v14, "cnContactWithKeys:", v8);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3850], "componentsForContact:", v17);
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = (void *)v18;
        if (v16)
          v20 = v18 == 0;
        else
          v20 = 1;
        if (!v20)
          objc_msgSend(v6, "setObject:forKeyedSubscript:", v18, v16);

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    }
    while (v11);
  }

  objc_msgSend(MEMORY[0x1E0D397A8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "fetchMeContactWithKeys:", v8);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3850], "componentsForContact:", v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v24 = v33;
  v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
  if (v25)
  {
    v26 = v25;
    v27 = *(_QWORD *)v35;
    do
    {
      for (j = 0; j != v26; ++j)
      {
        if (*(_QWORD *)v35 != v27)
          objc_enumerationMutation(v24);
        MEMORY[0x193FF3B40](*(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * j));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v29, "length"))
          v30 = v23 == 0;
        else
          v30 = 1;
        if (!v30)
          objc_msgSend(v6, "setObject:forKeyedSubscript:", v23, v29);

      }
      v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
    }
    while (v26);
  }

  v31 = (void *)objc_msgSend(v6, "copy");
  return v31;
}

- (void)_updateEffectViewMessageRect:(id)a3 effect:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;

  v38 = a3;
  v6 = a4;
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "triggeringChatItem");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      objc_msgSend(v7, "setMessageOrientation:", objc_msgSend(v9, "orientation"));
      objc_msgSend(v9, "center");
      v11 = v10;
      v13 = v12;
      objc_msgSend(v9, "superview");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "superview");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "convertPoint:toView:", v15, v11, v13);
      v17 = v16;
      v19 = v18;

      objc_msgSend(v9, "superview");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "frame");
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v28 = v27;
      objc_msgSend(v38, "superview");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "convertRect:toView:", v29, v22, v24, v26, v28);
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v37 = v36;

      if ((objc_msgSend(v7, "shouldDrawOverNavigationBar") & 1) != 0)
      {
        -[CKFullscreenEffectView setFocusPoint:](self->_topEffectView, "setFocusPoint:", v17, v19);
        -[CKFullscreenEffectView setMessageRect:](self->_topEffectView, "setMessageRect:", v31, v33, v35, v37);
        -[CKFullscreenEffectView setMessageOrientation:](self->_topEffectView, "setMessageOrientation:", objc_msgSend(v9, "orientation"));
      }
      objc_msgSend(v38, "setFocusPoint:", v17, v19);
      objc_msgSend(v38, "setMessageRect:", v31, v33, v35, v37);
      objc_msgSend(v38, "setMessageOrientation:", objc_msgSend(v9, "orientation"));
    }

  }
}

- (id)collectionView:(id)a3 layout:(id)a4 chatItemForItemAtIndexPath:(id)a5
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v6 = a5;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "item");

  objc_msgSend(v7, "objectAtIndex:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)collectionView:(id)a3 layout:(id)a4 chatItemForSupplementaryViewAtIndexPath:(id)a5
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v6 = a5;
  -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "item");

  objc_msgSend(v7, "objectAtIndex:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)chatItemAtIndexPath:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  if (objc_msgSend(v4, "section"))
  {
    if (objc_msgSend(v4, "section") != 1)
    {
      v7 = 0;
      goto LABEL_7;
    }
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v6 = v5;
  objc_msgSend(v5, "objectAtIndex:", objc_msgSend(v4, "item"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_7:
  return v7;
}

- (void)collectionViewLayout:(id)a3 sizeDidChange:(CGSize)a4
{
  double height;
  double width;
  id v7;

  height = a4.height;
  width = a4.width;
  -[CKTranscriptCollectionViewController delegate](self, "delegate", a3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "transcriptCollectionViewController:collectionViewContentSizeDidChange:", self, width, height);

}

- (id)currentEffectForCollectionView:(id)a3 layout:(id)a4
{
  void *v5;
  int v6;
  void *v7;
  void *v8;

  -[CKTranscriptCollectionViewController delegate](self, "delegate", a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "transcriptCollectionViewControllerShouldLayoutFullscreenEffects:", self);

  if (v6)
  {
    -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "currentEffect");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }
  return v8;
}

- (void)didTapBlockContact
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "logPrivatizedUIInteractionEvent:", 6);

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "recipients");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstObject");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "defaultIMHandle");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _blockHandle:](self, "_blockHandle:", v6);

}

- (void)didTapWaysToGetHelp
{
  void *v3;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "logPrivatizedUIInteractionEvent:", 4);

  -[CKTranscriptCollectionViewController _showMoreHelp](self, "_showMoreHelp");
}

- (void)balloonViewTapped:(id)a3 withModifierFlags:(int64_t)a4 selectedText:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  unint64_t v34;
  void *v35;
  unint64_t v36;
  NSObject *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  int v45;
  void *v46;
  int v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  unint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  int v57;
  const char *v58;
  __int16 v59;
  void *v60;
  __int16 v61;
  void *v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a5;
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "section") == 1)
  {
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "objectAtIndex:", objc_msgSend(v10, "item"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v13 = v12;
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "associatedChatItemGUID");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_msgSend(v13, "associatedMessageRange");
      v18 = objc_msgSend(v14, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v15, v16, v17);

      objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v18, 0);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "cellForItemAtIndexPath:", v19);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v21, "balloonView");
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      LOBYTE(v18) = objc_msgSend(v23, "canTapAssociatedAcknowledgment");

      if ((v18 & 1) != 0)
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "transcriptCollectionViewController:balloonView:longPressedForItemWithIndexPath:", self, v22, v19);

        goto LABEL_36;
      }

    }
    else
    {
      v19 = v10;
      v22 = v8;
    }

  }
  else
  {
    v19 = v10;
    v22 = v8;
  }
  if ((-[CKTranscriptCollectionViewController isEditing](self, "isEditing") & 1) != 0)
    goto LABEL_19;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController _presentOfframpDetonationAlert](self, "_presentOfframpDetonationAlert");
LABEL_19:
    v25 = 1;
    goto LABEL_20;
  }
  if (!objc_msgSend(v22, "conformsToProtocol:", &unk_1EE228328))
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_19;
    v26 = v22;
    if (objc_msgSend(v26, "isObscured"))
    {
      if (-[CKTranscriptCollectionViewController canInteractWithObscuredItem](self, "canInteractWithObscuredItem"))
      {
        objc_msgSend(MEMORY[0x1E0D397A0], "sharedManager");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v28 = objc_msgSend(v27, "enablementGroup");

        if (v28 == 2)
        {
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "transcriptCollectionViewController:viewedCommSafetyItemWithIndexPath:", self, v19);

          -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "objectAtIndex:", objc_msgSend(v19, "item"));
          v31 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v31, "IMChatItem");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "revealSensitiveContent:", objc_msgSend(v32, "isReplyContextPreview"));

          v25 = 0;
LABEL_41:

          goto LABEL_20;
        }
        -[CKTranscriptCollectionViewController _handleCommSafetySensitiveReceiveStatusButtonTappedForIndexPath:](self, "_handleCommSafetySensitiveReceiveStatusButtonTappedForIndexPath:", v19);
      }
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(v26, "mediaObject");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController balloonView:mediaObjectDidFinishPlaying:](self, "balloonView:mediaObjectDidFinishPlaying:", v26, v56);

      }
    }
    v25 = 1;
    goto LABEL_41;
  }
  -[CKTranscriptCollectionViewController _handleAudioBalloonTapForIndexPath:](self, "_handleAudioBalloonTapForIndexPath:", v19);
  v25 = 0;
LABEL_20:
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v22);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = objc_msgSend(v35, "count");

  if (v34 <= v36)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "objectAtIndex:", v34);
    v43 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = objc_msgSend(v44, "transcriptCollectionViewController:balloonView:shouldSelectChatItem:", self, v22, v43);

    if (a4 || v45)
    {
      -[CKTranscriptCollectionViewController balloonViewSelected:withModifierFlags:selectedText:](self, "balloonViewSelected:withModifierFlags:selectedText:", v22, a4, v9);
    }
    else
    {
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      v47 = objc_msgSend(v46, "enableBalloonTextSelection");

      if (v47)
      {
        -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v48, "removeAllSelectedMessageGuids");

      }
      if (v25)
      {
        v49 = objc_msgSend(v19, "item");
        if ((v49 & 0x8000000000000000) == 0)
        {
          v50 = v49;
          -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          v52 = objc_msgSend(v51, "count");

          if (v50 < v52)
          {
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v53 = (void *)objc_claimAutoreleasedReturnValue();
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v54 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v54, "objectAtIndex:", v50);
            v55 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v53, "transcriptCollectionViewController:balloonView:tappedForChatItem:", self, v22, v55);

          }
        }
      }
    }

  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v34);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = (void *)MEMORY[0x1E0CB37E8];
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "numberWithUnsignedInteger:", objc_msgSend(v40, "count"));
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v57 = 136315650;
      v58 = "-[CKTranscriptCollectionViewController balloonViewTapped:withModifierFlags:selectedText:]";
      v59 = 2112;
      v60 = v38;
      v61 = 2112;
      v62 = v41;
      _os_log_impl(&dword_18DFCD000, v37, OS_LOG_TYPE_INFO, "%s Got tap on balloon not in current chat item set. idx %@ count %@", (uint8_t *)&v57, 0x20u);

    }
  }

LABEL_36:
}

- (void)_handleAudioBalloonTapForIndexPath:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  int v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  double v20;
  NSObject *v21;
  void *v22;
  void *v23;
  id v24;
  CKAudioController *v25;
  uint64_t v26;
  double v27;
  void *v28;
  char v29;
  void *v30;
  _QWORD v31[4];
  id v32;
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_msgSend(v4, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "currentMediaObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "transfer");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v6, "__ck_indexOfTransfer:", v9);

  if (v10 == v5)
  {
    if (objc_msgSend(v7, "isPlaying"))
    {
      objc_msgSend(v7, "pause");
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "isBackgroundAudioEnabled");

      if ((v12 & 1) == 0)
      {
        objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setIdleTimerDisabled:", 0);

      }
    }
    else
    {
      v19 = CKAudioPlaybackSpeakerEnabled();
      objc_msgSend(v7, "setShouldUseSpeaker:", v19);
      v20 = 1.0;
      if ((_DWORD)v19)
        v20 = 0.0;
      objc_msgSend(v7, "playAfterDelay:", v20);
    }
  }
  else
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "transcriptCollectionViewControllerShouldPlayAudio:", self);

    if (v15)
    {
      if (v10 != 0x7FFFFFFFFFFFFFFFLL)
      {
        objc_msgSend(v7, "stop");

        v7 = 0;
      }
      v16 = objc_alloc_init(MEMORY[0x1E0CB3788]);
      objc_msgSend(v6, "objectAtIndex:", v5);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v18 = v17;
        if ((objc_msgSend(v18, "isFromMe") & 1) != 0 || (objc_msgSend(v18, "isPlayed") & 1) != 0)
        {
          objc_msgSend(v16, "addIndex:", v5);
        }
        else
        {
          objc_msgSend(v6, "__ck_indexesOfUnplayedAudioMessages");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "addIndexes:", v22);

          objc_msgSend(v16, "removeIndexesInRange:", 0, v5);
        }
        if (objc_msgSend(v16, "count"))
        {
          v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v16, "count"));
          v31[0] = MEMORY[0x1E0C809B0];
          v31[1] = 3221225472;
          v31[2] = __75__CKTranscriptCollectionViewController__handleAudioBalloonTapForIndexPath___block_invoke;
          v31[3] = &unk_1E2754978;
          v24 = v23;
          v32 = v24;
          objc_msgSend(v6, "enumerateObjectsAtIndexes:options:usingBlock:", v16, 0, v31);
          v25 = -[CKAudioController initWithMediaObjects:]([CKAudioController alloc], "initWithMediaObjects:", v24);

          -[CKAudioController setDelegate:](v25, "setDelegate:", self);
          -[CKTranscriptCollectionViewController setAudioController:](self, "setAudioController:", v25);
          v26 = CKAudioPlaybackSpeakerEnabled();
          -[CKAudioController setShouldUseSpeaker:](v25, "setShouldUseSpeaker:", v26);
          v27 = 1.0;
          if ((_DWORD)v26)
            v27 = 0.0;
          -[CKAudioController playAfterDelay:](v25, "playAfterDelay:", v27);
          objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = objc_msgSend(v28, "isBackgroundAudioEnabled");

          if ((v29 & 1) == 0)
          {
            objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "setIdleTimerDisabled:", 1);

          }
          v7 = v25;
        }
      }
      else
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 134218242;
            v34 = v5;
            v35 = 2112;
            v36 = v17;
            _os_log_impl(&dword_18DFCD000, v21, OS_LOG_TYPE_INFO, "Handling audio balloon tapped for indexPath that returned an invalid chatItem type. Index: %lu, ChatItem: %@", buf, 0x16u);
          }

        }
        v18 = 0;
      }

    }
  }

}

void __75__CKTranscriptCollectionViewController__handleAudioBalloonTapForIndexPath___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "mediaObject");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

- (void)_presentOfframpDetonationAlert
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  IMSharedUtilitiesFrameworkBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("LOCKDOWN_ATTACHMENT_BALLOON_ALERT_TITLE"), &stru_1E276D870, CFSTR("IMSharedUtilities-Offramp"));
  v13 = (id)objc_claimAutoreleasedReturnValue();

  IMSharedUtilitiesFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("LOCKDOWN_ATTACHMENT_BALLOON_ALERT_MESSAGE"), &stru_1E276D870, CFSTR("IMSharedUtilities-Offramp"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v7, 1, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  IMSharedUtilitiesFrameworkBundle();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("LOCKDOWN_ATTACHMENT_BALLOON_ALERT_LEARN_MORE_BUTTON"), &stru_1E276D870, CFSTR("IMSharedUtilities-Offramp"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v10, 0, &__block_literal_global_555_0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v13, v5, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "addAction:", v8);
  objc_msgSend(v12, "addAction:", v11);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v12, 1, 0);

}

void __70__CKTranscriptCollectionViewController__presentOfframpDetonationAlert__block_invoke()
{
  void *v0;
  id v1;

  +[CKTranscriptCollectionViewController offrampLearnMoreURL](CKTranscriptCollectionViewController, "offrampLearnMoreURL");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openURL:configuration:completionHandler:", v1, 0, 0);

}

+ (id)offrampLearnMoreURL
{
  void *v2;
  void *v3;
  NSObject *v4;
  __CFString *v5;
  void *v6;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D34E78], "sharedInstanceForBagType:", 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", CFSTR("offramp-learn-more-url"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v8 = 138412290;
        v9 = v3;
        _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "Received offramp learn more URL from server: %@", (uint8_t *)&v8, 0xCu);
      }

    }
    v5 = v3;
  }
  else
  {
    v5 = CFSTR("https://support.apple.com/kb/HT212650");
  }
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)audioBalloonScrubberDidChangeValue:(double)a3
{
  id v4;

  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setCurrentTime:", a3);

}

- (void)audioBalloonDidResize:(id)a3 isExpanded:(BOOL)a4
{
  _BOOL8 v4;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a4;
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", a3);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v9, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectAtIndex:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v8, "setIsExpanded:", v4);
  -[CKTranscriptCollectionViewController unloadCachedSizeAndReloadChatItemAtIndexPath:](self, "unloadCachedSizeAndReloadChatItemAtIndexPath:", v9);

}

- (void)launchReaderViewForBalloonView:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a3;
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v4);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v9, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectAtIndex:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "transcriptCollectionViewController:balloonView:didRequestReaderViewControllerForChatItem:", self, v4, v7);

}

- (void)balloonView:(id)a3 selectedChipAction:(id)a4
{
  void *v5;
  char v6;
  void *v7;
  id v8;

  v8 = a4;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_opt_respondsToSelector();

  if ((v6 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "transcriptCollectionViewController:selectedChipAction:", self, v8);

  }
}

- (void)didTapChipListFromNotificationExtensionWithBalloonView:(id)a3
{
  void *v4;
  char v5;
  id v6;

  -[CKTranscriptCollectionViewController delegate](self, "delegate", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_opt_respondsToSelector();

  if ((v5 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "launchAppFromExtensionWith:", self);

  }
}

- (void)balloonView:(id)a3 selectedSuggestedReply:(id)a4 messageGUID:(id)a5
{
  id v7;
  void *v8;
  char v9;
  void *v10;
  id v11;

  v11 = a4;
  v7 = a5;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_respondsToSelector();

  if ((v9 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "transcriptCollectionViewController:selectedSuggestedReply:messageGUID:", self, v11, v7);

  }
}

- (void)balloonView:(id)a3 carouselScrolledToIndex:(int64_t)a4
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[5];
  id v21;
  int64_t v22;
  _QWORD block[5];
  id v24;
  int64_t v25;

  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectAtIndex:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D35928], "suggestedRepliesChatItemGUIDPrefix");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "IMChatItem");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "guid");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringByAppendingString:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItemForGUID:](self, "chatItemForGUID:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v14, "selectedIndex") != a4 && v14)
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __76__CKTranscriptCollectionViewController_balloonView_carouselScrolledToIndex___block_invoke;
      block[3] = &unk_1E274A420;
      block[4] = self;
      v24 = v14;
      v25 = a4;
      dispatch_async(MEMORY[0x1E0C80D38], block);

    }
    objc_msgSend(MEMORY[0x1E0D358E8], "richCardCountChatItemGUIDPrefix");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "IMChatItem");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "guid");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stringByAppendingString:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItemForGUID:](self, "chatItemForGUID:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19 && objc_msgSend(v19, "selectedRichCardIndex") != a4)
    {
      v20[0] = MEMORY[0x1E0C809B0];
      v20[1] = 3221225472;
      v20[2] = __76__CKTranscriptCollectionViewController_balloonView_carouselScrolledToIndex___block_invoke_2;
      v20[3] = &unk_1E274A420;
      v20[4] = self;
      v21 = v19;
      v22 = a4;
      dispatch_async(MEMORY[0x1E0C80D38], v20);

    }
  }

}

void __76__CKTranscriptCollectionViewController_balloonView_carouselScrolledToIndex___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "IMChatItem");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setSelectedIndexOnCarouselChatItem:selectedIndex:", v2, *(_QWORD *)(a1 + 48));

}

void __76__CKTranscriptCollectionViewController_balloonView_carouselScrolledToIndex___block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "IMChatItem");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setSelectedIndexOnCarouselChatItem:selectedIndex:", v2, *(_QWORD *)(a1 + 48));

}

- (BOOL)_isRecognizerScrubbingOnCurrentAudioMessageBalloon:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;

  v4 = a3;
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "view");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v6, "mediaObject");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "currentMediaObject");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v7, "isEqual:", v8);

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (void)audioBalloonScrubberWithRecognizer:(id)a3 didChangeValue:(double)a4
{
  id v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint8_t v12[16];

  v6 = a3;
  if (-[CKTranscriptCollectionViewController _isRecognizerScrubbingOnCurrentAudioMessageBalloon:](self, "_isRecognizerScrubbingOnCurrentAudioMessageBalloon:", v6))
  {
    -[CKTranscriptCollectionViewController audioController](self, "audioController");
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v6, "state");
    if (v8 == 2)
    {
      -[NSObject layoutViewsForScrubbingTime:](v7, "layoutViewsForScrubbingTime:", a4);
    }
    else
    {
      if (v8 == 1)
      {
        -[NSObject layoutViewsForScrubbingTime:](v7, "layoutViewsForScrubbingTime:", a4);
        if (-[NSObject isPlaying](v7, "isPlaying"))
        {
          -[CKTranscriptCollectionViewController setAudioControllerWasPlayingBeforeScrub:](self, "setAudioControllerWasPlayingBeforeScrub:", 1);
          -[NSObject pause](v7, "pause");
        }
        else
        {
          -[CKTranscriptCollectionViewController setAudioControllerWasPlayingBeforeScrub:](self, "setAudioControllerWasPlayingBeforeScrub:", 0);
        }
        -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = v9;
        v11 = 0;
      }
      else
      {
        -[NSObject setCurrentTime:](v7, "setCurrentTime:", a4);
        if (-[CKTranscriptCollectionViewController audioControllerWasPlayingBeforeScrub](self, "audioControllerWasPlayingBeforeScrub"))
        {
          -[NSObject play](v7, "play");
        }
        -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = v9;
        v11 = 1;
      }
      objc_msgSend(v9, "setScrollEnabled:", v11);

    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_INFO, "Attempted to scrub audio message balloon that is not currently being played.", v12, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:

}

- (void)playbackSpeedDidChangeForAudioMessageBalloonView:(id)a3 playbackSpeed:(double)a4
{
  id v6;
  CKAudioController *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void *v20;
  int v21;
  void *v22;
  CKAudioController *v23;
  uint64_t v24;
  double v25;
  void *v26;
  char v27;
  void *v28;
  _QWORD v29[2];

  v29[1] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v7 = (CKAudioController *)objc_claimAutoreleasedReturnValue();
  -[CKAudioController setPlaybackSpeed:](v7, "setPlaybackSpeed:", a4);
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "objectAtIndex:", v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v29[0] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v29, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKChatItem unloadSizesOfChatItems:](CKChatItem, "unloadSizesOfChatItems:", v12);

  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "reloadLayout");

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKAudioController currentMediaObject](v7, "currentMediaObject");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "transfer");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v14, "__ck_indexOfTransfer:", v16);

  if (v17 == v9)
  {
    if (!-[CKAudioController isPlaying](v7, "isPlaying"))
    {
      v18 = CKAudioPlaybackSpeakerEnabled();
      -[CKAudioController setShouldUseSpeaker:](v7, "setShouldUseSpeaker:", v18);
      v19 = 1.0;
      if ((_DWORD)v18)
        v19 = 0.0;
      -[CKAudioController playAfterDelay:](v7, "playAfterDelay:", v19);
    }
  }
  else
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "transcriptCollectionViewControllerShouldPlayAudio:", self);

    if (v21)
    {
      if (v17 != 0x7FFFFFFFFFFFFFFFLL)
      {
        -[CKAudioController stop](v7, "stop");

        v7 = 0;
      }
      -[CKTranscriptCollectionViewController audioMessageMediaObjectsFromBalloonView:](self, "audioMessageMediaObjectsFromBalloonView:", v6);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v22, "count"))
      {
        v23 = -[CKAudioController initWithMediaObjects:]([CKAudioController alloc], "initWithMediaObjects:", v22);

        -[CKAudioController setDelegate:](v23, "setDelegate:", self);
        -[CKTranscriptCollectionViewController setAudioController:](self, "setAudioController:", v23);
        v24 = CKAudioPlaybackSpeakerEnabled();
        -[CKAudioController setShouldUseSpeaker:](v23, "setShouldUseSpeaker:", v24);
        v25 = 1.0;
        if ((_DWORD)v24)
          v25 = 0.0;
        -[CKAudioController playAfterDelay:](v23, "playAfterDelay:", v25);
        -[CKAudioController setPlaybackSpeed:](v23, "setPlaybackSpeed:", a4);
        objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = objc_msgSend(v26, "isBackgroundAudioEnabled");

        if ((v27 & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "setIdleTimerDisabled:", 1);

        }
      }
      else
      {
        v23 = v7;
      }

      v7 = v23;
    }
  }

}

- (id)audioMessageMediaObjectsFromBalloonView:(id)a3
{
  objc_class *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v17;
  void *v18;
  _QWORD v19[4];
  id v20;

  v4 = (objc_class *)MEMORY[0x1E0CB3788];
  v5 = a3;
  v6 = objc_alloc_init(v4);
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_msgSend(v7, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "objectAtIndex:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v11 = v10;
  else
    v11 = 0;
  if ((objc_msgSend(v11, "isFromMe") & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    || (objc_msgSend(v11, "isPlayed") & 1) != 0)
  {
    objc_msgSend(v6, "addIndex:", v8);
  }
  else
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "__ck_indexesOfUnplayedAudioMessages");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addIndexes:", v18);

    objc_msgSend(v6, "removeIndexesInRange:", 0, v8);
  }
  if (objc_msgSend(v6, "count"))
  {
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v6, "count"));
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __80__CKTranscriptCollectionViewController_audioMessageMediaObjectsFromBalloonView___block_invoke;
    v19[3] = &unk_1E27500C0;
    v20 = v12;
    v14 = v12;
    objc_msgSend(v13, "enumerateObjectsAtIndexes:options:usingBlock:", v6, 0, v19);

    v15 = (void *)objc_msgSend(v14, "copy");
  }
  else
  {
    v15 = (void *)MEMORY[0x1E0C9AA60];
  }

  return v15;
}

void __80__CKTranscriptCollectionViewController_audioMessageMediaObjectsFromBalloonView___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v3 = *(void **)(a1 + 32);
    objc_msgSend(v5, "mediaObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "addObject:", v4);

  }
}

- (void)liveBalloonTouched:(id)a3
{
  char isKindOfClass;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v11;
  if ((isKindOfClass & 1) != 0)
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v11);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "cellForItemAtIndexPath:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v9, "bundleIdentifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController setMostRecentlyTouchedPlugin:](self, "setMostRecentlyTouchedPlugin:", v10);

    }
    v5 = v11;
  }

}

- (void)interactionStartedWithPluginBalloonView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  BOOL v20;
  dispatch_time_t v21;
  _QWORD block[4];
  id v23;
  CKTranscriptCollectionViewController *v24;
  char v25;
  BOOL v26;

  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cellForItemAtIndexPath:", v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v9 = objc_msgSend(v8, "syndicationBehavior");
      v10 = objc_msgSend(v8, "isHighlighted");
      v11 = objc_msgSend(v8, "syndicationType");
      if (v9 == 1 && (v10 & 1) == 0 && !v11)
      {
        objc_msgSend(v8, "IMChatItem");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "dataSource");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "pluginPayload");
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0D35770], "sharedInstance");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "dataSourceForPluginPayload:", v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v16, "richLinkMetadata");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "collaborationMetadata");
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        v19 = objc_msgSend(v8, "canPerformQuickAction");
        if ((v19 & 1) != 0 || v18)
        {
          v20 = v18 != 0;
          v21 = dispatch_time(0, 100000000);
          block[0] = MEMORY[0x1E0C809B0];
          block[1] = 3221225472;
          block[2] = __80__CKTranscriptCollectionViewController_interactionStartedWithPluginBalloonView___block_invoke;
          block[3] = &unk_1E274C730;
          v25 = v19;
          v26 = v20;
          v23 = v8;
          v24 = self;
          dispatch_after(v21, MEMORY[0x1E0C80D38], block);

        }
      }
    }

  }
}

void __80__CKTranscriptCollectionViewController_interactionStartedWithPluginBalloonView___block_invoke(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  const __CFString *v6;
  int v7;
  const __CFString *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[12];
  __int16 v15;
  const __CFString *v16;
  __int16 v17;
  const __CFString *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "IMChatItem");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "guid");
      v4 = objc_claimAutoreleasedReturnValue();
      v5 = (void *)v4;
      v6 = CFSTR("YES");
      v7 = *(unsigned __int8 *)(a1 + 49);
      if (*(_BYTE *)(a1 + 48))
        v8 = CFSTR("YES");
      else
        v8 = CFSTR("NO");
      *(_DWORD *)v14 = 138412802;
      if (!v7)
        v6 = CFSTR("NO");
      *(_QWORD *)&v14[4] = v4;
      v15 = 2112;
      v16 = v8;
      v17 = 2112;
      v18 = v6;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "Sending syndication action \"Interacted with item\" for chatItem with guid %@. canPerformQuickAction: %@, supportsCollaboration: %@", v14, 0x20u);

    }
  }
  objc_msgSend(*(id *)(a1 + 40), "chat", *(_QWORD *)v14);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "IMChatItem");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "guid");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(*(id *)(a1 + 32), "messagePartRange");
  objc_msgSend(v9, "sendSyndicationAction:forMessagePartGUID:syndicatedMessagePartRange:", 64, v11, v12, v13);

}

- (void)balloonViewLongTouched:(id)a3
{
  id v4;
  void *v5;
  id v6;

  v4 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "transcriptCollectionViewController:balloonView:longPressedForItemWithIndexPath:", self, v4, v5);

}

- (void)balloonViewShowInlineReply:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKInlineReplyTransitionProperties defaultProperties](CKInlineReplyTransitionProperties, "defaultProperties");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "transcriptCollectionViewController:balloonView:showInlineReplyForItemWithIndexPath:withReplyTransitionProperties:", self, v4, v5, v6);

}

- (void)balloonViewDoubleTapped:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  int v13;
  id v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v13 = 138412290;
      v14 = v4;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Received balloonViewDoubleTapped: callback for balloonView %@", (uint8_t *)&v13, 0xCu);
    }

  }
  if (!CKIsRunningInMacCatalyst())
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = 138412546;
        v14 = v6;
        v15 = 2112;
        v16 = v12;
        _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Calling into delegate to handle balloon double tap with indexPath %@, delegate: %@", (uint8_t *)&v13, 0x16u);

      }
    }
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "transcriptCollectionViewController:balloonView:doubleTappedItemAtIndexPath:", self, v4, v6);
    goto LABEL_13;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "item");
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectAtIndex:", v7);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "transcriptCollectionViewController:balloonView:tappedForChatItem:", self, v4, v10);

LABEL_13:
  }

}

- (void)balloonViewSelected:(id)a3 withModifierFlags:(int64_t)a4 selectedText:(id)a5
{
  id v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;

  v28 = a3;
  v8 = a5;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "enableBalloonTextSelection");

  if (v10)
  {
    -[CKTranscriptCollectionViewController _searchForSelectedBalloonHack](self, "_searchForSelectedBalloonHack");
    -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v28);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v12, "item");
    if ((v14 & 0x8000000000000000) != 0)
      goto LABEL_25;
    v15 = v14;
    if (v14 >= objc_msgSend(v13, "count"))
      goto LABEL_25;
    objc_msgSend(v13, "objectAtIndex:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "IMChatItem");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "guid");
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v11, "isMessageGuidSelected:", v18))
    {
      if (a4 == 0x100000)
      {
        objc_msgSend(v11, "removeSelectedMessageGuid:", v18);
        goto LABEL_24;
      }
      if (a4 != 0x20000)
      {
        v19 = objc_msgSend(v11, "selectedGuidCount");
        objc_msgSend(v11, "removeAllSelectedMessageGuids");
        if (v19 < 2)
          goto LABEL_24;
        goto LABEL_18;
      }
    }
    else
    {
      if (a4 == 0x100000)
      {
        objc_msgSend(v11, "trackedGuid");
        v20 = (void *)objc_claimAutoreleasedReturnValue();

        if (v20)
        {
          objc_msgSend(v11, "trackedGuid");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "selectedStateForGuid:", v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();

          if (v22)
            v23 = objc_msgSend(v22, "style");
          else
            v23 = 0;

        }
        else
        {
          v23 = 0;
        }
        v24 = v23;
        goto LABEL_23;
      }
      if (a4 != 0x20000)
      {
        if (!objc_msgSend(v8, "length"))
        {
          objc_msgSend(v11, "removeAllSelectedMessageGuids");
LABEL_18:
          v24 = 0;
LABEL_23:
          +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", v24);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "addSelectedMessageGuid:selectionState:", v18, v25);

        }
LABEL_24:

LABEL_25:
        goto LABEL_26;
      }
    }
    -[CKTranscriptCollectionViewController selectRangeWithIndexPath:](self, "selectRangeWithIndexPath:", v12);
    goto LABEL_24;
  }
LABEL_26:
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v28);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "transcriptCollectionViewController:balloonView:selectedItemAtIndexPath:", self, v28, v27);

}

- (id)selectedChatItems
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v17 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        objc_msgSend(v11, "IMChatItem", (_QWORD)v16);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "guid");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v5, "isMessageGuidSelected:", v13);

        if (v14)
          objc_msgSend(v4, "addObject:", v11);
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v8);
  }

  return v4;
}

- (BOOL)balloonTextViewIsSelected
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController selectedChatItems](self, "selectedChatItems");
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v2);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          LOBYTE(v3) = 1;
          goto LABEL_11;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_11:

  return v3;
}

- (void)_selectChatItemGuid:(id)a3 selectionState:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a3;
  v6 = a4;
  if ((-[CKTranscriptCollectionViewController isEditing](self, "isEditing") & 1) == 0)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "__ck_chatItemWithGUID:", v11);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v9, "balloonView");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setSelected:withSelectionState:", 1, v6);

    }
  }

}

- (void)_deselectChatItemGuid:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "__ck_chatItemWithGUID:", v4);
  v8 = (id)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v6, "balloonView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setSelected:withSelectionState:", 0, 0);

  }
}

- (void)balloonViewTextViewDidChangeSelection:(id)a3 selectedText:(id)a4 textView:(id)a5
{
  id v8;
  void *v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;

  v21 = a3;
  v8 = a5;
  if (objc_msgSend(a4, "length"))
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v21);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v9, "item");
    if ((v11 & 0x8000000000000000) == 0)
    {
      v12 = v11;
      if (v11 < objc_msgSend(v10, "count"))
      {
        objc_msgSend(v10, "objectAtIndex:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "IMChatItem");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "guid");
        v15 = (void *)objc_claimAutoreleasedReturnValue();

        -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v8, "selectedRange");
        +[CKBalloonSelectionState balloonSelectionState:textSelectionRange:](CKBalloonSelectionState, "balloonSelectionState:textSelectionRange:", 1, v17, v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "trackSelectedGuid:selectionState:", v15, v19);

        -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "removeAllSelectedMessageGuidsExceptTrackedGuid");

      }
    }

  }
}

- (void)balloonView:(id)a3 userDidDragOutsideBalloonWithPoint:(CGPoint)a4
{
  double y;
  double x;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t j;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t i;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;

  y = a4.y;
  x = a4.x;
  v33 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v33);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectAtIndex:", objc_msgSend(v9, "item"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "IMChatItem");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "guid");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "convertPoint:fromView:", v33, x, y);
  v14 = v13;
  v16 = v15;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "indexPathForItemAtPoint:", v14, v16);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18 && !objc_msgSend(v18, "section") && objc_msgSend(v18, "item") >= 1)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "item");
    if (v19 >= objc_msgSend(v9, "item"))
    {
      v25 = objc_msgSend(v9, "item");
      if (v25 < objc_msgSend(v18, "item"))
      {
        for (i = objc_msgSend(v9, "item"); i <= objc_msgSend(v18, "item"); ++i)
        {
          objc_msgSend(v7, "objectAtIndex:", i);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "IMChatItem");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "guid");
          v29 = (void *)objc_claimAutoreleasedReturnValue();

          if ((objc_msgSend(v29, "isEqualToString:", v12) & 1) == 0)
          {
            +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 1);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v32, "setObject:forKey:", v30, v29);

          }
        }
      }
    }
    else
    {
      for (j = objc_msgSend(v18, "item"); j <= objc_msgSend(v9, "item"); ++j)
      {
        objc_msgSend(v7, "objectAtIndex:", j);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "IMChatItem");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "guid");
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        if ((objc_msgSend(v23, "isEqualToString:", v12) & 1) == 0)
        {
          +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 1);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v32, "setObject:forKey:", v24, v23);

        }
      }
    }
    -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "setSelectedGuids:", v32);

  }
}

- (void)balloonView:(id)a3 willInsertPluginViewAsSubview:(id)a4
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  CKTranscriptCollectionViewController *v17;
  CKTranscriptCollectionViewController *v18;
  NSObject *v19;
  int v20;
  unint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "row");
  if (v8)
  {
    v10 = v9;
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "count");

    if (v10 < v12)
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "objectAtIndex:", v10);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "contentViewControllerForContext:", v15);
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v16, "parentViewController");
        v17 = (CKTranscriptCollectionViewController *)objc_claimAutoreleasedReturnValue();
        v18 = v17;
        if (v17)
        {
          if (v17 != self)
          {
            -[CKTranscriptCollectionViewController removeChildViewController:](v17, "removeChildViewController:", v16);
            -[CKTranscriptCollectionViewController addChildViewController:](self, "addChildViewController:", v16);
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v19 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
              {
                v20 = 134217984;
                v21 = v10;
                _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, "Re-parented chat item content view controller for chat item at index:%li", (uint8_t *)&v20, 0xCu);
              }

            }
          }
        }

      }
    }
  }

}

- (void)quickActionButtonWasTapped:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  unint64_t v12;
  NSObject *v13;
  char isKindOfClass;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  id v20;
  uint8_t *v21;
  uint8_t buf[8];
  _QWORD v23[4];
  id v24;

  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Quick save button tapped.", buf, 2u);
    }

  }
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)buf = 0;
  v23[0] = buf;
  v23[1] = 0x3032000000;
  v23[2] = __Block_byref_object_copy__38;
  v23[3] = __Block_byref_object_dispose__38;
  v24 = 0;
  objc_msgSend(v6, "indexPathsForVisibleItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __67__CKTranscriptCollectionViewController_quickActionButtonWasTapped___block_invoke;
  v18[3] = &unk_1E27549A0;
  v8 = v6;
  v19 = v8;
  v9 = v4;
  v20 = v9;
  v21 = buf;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v18);

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = *(void **)(v23[0] + 40);
  if (!v11
    || objc_msgSend(v11, "item") < 0
    || (v12 = objc_msgSend(*(id *)(v23[0] + 40), "item"), v12 >= objc_msgSend(v10, "count")))
  {
    IMLogHandleForCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController quickActionButtonWasTapped:].cold.1((uint64_t)v23, v13, v16);
  }
  else
  {
    objc_msgSend(v10, "objectAtIndex:", objc_msgSend(*(id *)(v23[0] + 40), "item"));
    v13 = objc_claimAutoreleasedReturnValue();
    if ((-[NSObject canPerformQuickAction](v13, "canPerformQuickAction") & 1) != 0)
    {
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      v15 = *(_QWORD *)(v23[0] + 40);
      if ((isKindOfClass & 1) != 0)
        -[CKTranscriptCollectionViewController _quickActionPinButtonWasTapped:atIndexPath:chatItem:](self, "_quickActionPinButtonWasTapped:atIndexPath:chatItem:", v9, v15, v13);
      else
        -[CKTranscriptCollectionViewController _quickActionSaveButtonWasTapped:atIndexPath:chatItem:](self, "_quickActionSaveButtonWasTapped:atIndexPath:chatItem:", v9, v15, v13);
    }
    else
    {
      IMLogHandleForCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController quickActionButtonWasTapped:].cold.2();

    }
  }

  _Block_object_dispose(buf, 8);
}

void __67__CKTranscriptCollectionViewController_quickActionButtonWasTapped___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "quickActionButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(a1 + 40);

    if (v8 == v9)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
      *a4 = 1;
    }
  }

}

- (void)_quickActionPinButtonWasTapped:(id)a3 atIndexPath:(id)a4 chatItem:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  id v14;
  void (**v15)(_QWORD);
  id v16;
  void *v17;
  dispatch_time_t v18;
  id v19;
  id v20;
  id v21;
  _QWORD v22[4];
  id v23;
  CKTranscriptCollectionViewController *v24;
  id v25;
  id v26;
  _QWORD v27[4];
  id v28;
  _QWORD aBlock[4];
  id v30;
  uint8_t buf[4];
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v32 = v10;
      _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Request to Pin chat item: %@", buf, 0xCu);
    }

  }
  v12 = v8;
  v13 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __92__CKTranscriptCollectionViewController__quickActionPinButtonWasTapped_atIndexPath_chatItem___block_invoke;
  aBlock[3] = &unk_1E274A208;
  v14 = v12;
  v30 = v14;
  v15 = (void (**)(_QWORD))_Block_copy(aBlock);
  v27[0] = v13;
  v27[1] = 3221225472;
  v27[2] = __92__CKTranscriptCollectionViewController__quickActionPinButtonWasTapped_atIndexPath_chatItem___block_invoke_2;
  v27[3] = &unk_1E274B1A0;
  v16 = v14;
  v28 = v16;
  v17 = _Block_copy(v27);
  v15[2](v15);
  v18 = dispatch_time(0, 100000000);
  v22[0] = v13;
  v22[1] = 3221225472;
  v22[2] = __92__CKTranscriptCollectionViewController__quickActionPinButtonWasTapped_atIndexPath_chatItem___block_invoke_3;
  v22[3] = &unk_1E2751308;
  v23 = v10;
  v24 = self;
  v25 = v16;
  v26 = v17;
  v19 = v10;
  v20 = v17;
  v21 = v16;
  dispatch_after(v18, MEMORY[0x1E0C80D38], v22);

}

uint64_t __92__CKTranscriptCollectionViewController__quickActionPinButtonWasTapped_atIndexPath_chatItem___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setState:animated:", 2, 1);
}

uint64_t __92__CKTranscriptCollectionViewController__quickActionPinButtonWasTapped_atIndexPath_chatItem___block_invoke_2(uint64_t a1, int a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  if (a2)
  {
    v3 = 3;
    v4 = 1;
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  return objc_msgSend(v2, "setState:animated:", v3, v4);
}

void __92__CKTranscriptCollectionViewController__quickActionPinButtonWasTapped_atIndexPath_chatItem___block_invoke_3(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char v17;
  void *v18;
  id v19;

  if (objc_msgSend(*(id *)(a1 + 32), "isHighlighted"))
    v2 = 8;
  else
    v2 = 4;
  objc_msgSend(*(id *)(a1 + 40), "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "IMChatItem");
  v4 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v4, "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(*(id *)(a1 + 32), "messagePartRange");
  objc_msgSend(v3, "sendSyndicationAction:forMessagePartGUID:syndicatedMessagePartRange:", v2, v5, v6, v7);

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  objc_msgSend(*(id *)(a1 + 32), "IMChatItem");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  LOBYTE(v4) = objc_opt_isKindOfClass();

  if ((v4 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "IMChatItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "messageItem");
    v19 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v19, "swyAppName");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "swyBundleID");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)v11;
    if (v10 && v11)
    {
      if ((_DWORD)v2 == 8)
      {
        objc_msgSend(MEMORY[0x1E0D39AE8], "sharedManager");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "decrementPinCountForBundleID:", v12);

      }
      else
      {
        objc_msgSend(MEMORY[0x1E0D39AE8], "sharedManager");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "incrementPinCountForBundleID:", v12);

        objc_msgSend(MEMORY[0x1E0D39AE8], "sharedManager");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_msgSend(v14, "getPinCountForBundleID:", v12);

        objc_msgSend(MEMORY[0x1E0D39AE8], "sharedManager");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "isSharedWithYouEnabledForApplicationWithBundleID:", v12);

        if (v15 >= 3 && (v17 & 1) == 0)
          objc_msgSend(*(id *)(a1 + 40), "_showAutoDonationAlert:forAppName:bundleID:", *(_QWORD *)(a1 + 48), v10, v12);
      }
    }

  }
}

- (void)_showAutoDonationAlert:(id)a3 forAppName:(id)a4 bundleID:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  __CFString *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD v27[4];
  id v28;
  CKTranscriptCollectionViewController *v29;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (objc_msgSend(v9, "length") && objc_msgSend(v10, "length"))
  {
    v11 = (void *)MEMORY[0x1E0CB3940];
    CKFrameworkBundle();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("SHARED_WITH_YOU_AUTO_DONATION_ALERT"), &stru_1E276D870, CFSTR("ChatKit"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringWithFormat:", v13, v9, v9);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "userInterfaceLayoutDirection");

    if (v16 == 1)
      v17 = CFSTR("\u200F");
    else
      v17 = CFSTR("\u200E");
    -[__CFString stringByAppendingString:](v17, "stringByAppendingString:", v14);
    v18 = objc_claimAutoreleasedReturnValue();

    +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v18, 0, 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    CKFrameworkBundle();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "localizedStringForKey:value:table:", CFSTR("SHARED_WITH_YOU_OK_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v27[0] = MEMORY[0x1E0C809B0];
    v27[1] = 3221225472;
    v27[2] = __83__CKTranscriptCollectionViewController__showAutoDonationAlert_forAppName_bundleID___block_invoke;
    v27[3] = &unk_1E274B818;
    v28 = v10;
    v29 = self;
    +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v21, 0, v27);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "addAction:", v22);

    CKFrameworkBundle();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("SHARED_WITH_YOU_CANCEL_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v24, 1, 0);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "addAction:", v25);

    objc_msgSend(v19, "popoverPresentationController");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "setSourceView:", v8);

    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v19, 1, 0);
  }
  else
  {
    IMLogHandleForCategory();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController _showAutoDonationAlert:forAppName:bundleID:].cold.1();
  }

}

void __83__CKTranscriptCollectionViewController__showAutoDonationAlert_forAppName_bundleID___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0D39AE8], "sharedManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setSharedWithYouEnabled:forApplicationWithBundleID:", 1, *(_QWORD *)(a1 + 32));

  objc_msgSend(*(id *)(a1 + 40), "collectionView");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "reloadData");

}

- (void)_quickActionSaveButtonWasTapped:(id)a3 atIndexPath:(id)a4 chatItem:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  uint8_t buf[4];
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[CKTranscriptCollectionViewController balloonViewForIndexPath:](self, "balloonViewForIndexPath:", v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v12 = *MEMORY[0x1E0D38760];
      v13 = v11;
      -[CKTranscriptCollectionViewController _trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:](self, "_trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:", v12, v13, objc_msgSend(v10, "transcriptOrientation"));

    }
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v10;
      _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_INFO, "Request to quick save chat item: %@", buf, 0xCu);
    }

  }
  v15 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController _mediaObjectsForOrganicChatItem:onIndexPath:](self, "_mediaObjectsForOrganicChatItem:onIndexPath:", v10, v9);
    v16 = (id)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v16, "count"))
    {
      objc_msgSend(v15, "addObjectsFromArray:", v16);
      CKMomentShareURLForMediaObjects(v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      IMLogHandleForCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController _quickActionSaveButtonWasTapped:atIndexPath:chatItem:].cold.1();

      v17 = 0;
    }
    goto LABEL_23;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v16 = v10;
    objc_msgSend(v16, "mediaObject");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      objc_msgSend(v15, "addObject:", v18);
      v23 = v18;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v23, 1);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      CKMomentShareURLForMediaObjects(v19);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v17 = 0;
    }

LABEL_23:
    goto LABEL_24;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v16 = v10;
    objc_msgSend(v16, "momentShareURL");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "mediaObjects");
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    if (v20)
    {
      objc_msgSend(v16, "mediaObjects");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "addObjectsFromArray:", v21);

    }
    goto LABEL_23;
  }
  v17 = 0;
LABEL_24:
  -[CKTranscriptCollectionViewController _saveMediaObjects:withMomentShareURL:sender:](self, "_saveMediaObjects:withMomentShareURL:sender:", v15, v17, v8);

}

- (id)_mediaObjectsForOrganicChatItem:(id)a3 onIndexPath:(id)a4
{
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  char v17;
  id v18;
  unint64_t i;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  char v25;
  NSObject *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t j;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint8_t v41[128];
  uint8_t buf[4];
  void *v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v35 = a3;
  v6 = a4;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v6 || objc_msgSend(v6, "item") < 0 || (v8 = objc_msgSend(v6, "item"), v8 >= objc_msgSend(v7, "count")))
  {
    v18 = 0;
  }
  else
  {
    v9 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    objc_msgSend(v9, "addObject:", v35);
    objc_msgSend(v35, "layoutRecipe");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "groupIdentifier");
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = objc_msgSend(v6, "item");
    if (v11 >= 1)
    {
      v12 = v11 + 1;
      while (1)
      {
        objc_msgSend(v7, "objectAtIndex:", v12 - 2, v35);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
          break;
        v14 = v13;
        objc_msgSend(v14, "layoutRecipe");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "groupIdentifier");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v36, "isEqualToString:", v16);

        if ((v17 & 1) == 0)
        {

          break;
        }
        objc_msgSend(v9, "addObject:", v14);

        if ((unint64_t)--v12 < 2)
          goto LABEL_14;
      }

    }
LABEL_14:
    for (i = objc_msgSend(v6, "item", v35) + 1; i < objc_msgSend(v7, "count"); ++i)
    {
      objc_msgSend(v7, "objectAtIndex:", i);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
        goto LABEL_20;
      v22 = v21;
      objc_msgSend(v22, "layoutRecipe");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "groupIdentifier");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = objc_msgSend(v36, "isEqualToString:", v24);

      if ((v25 & 1) == 0)
      {

LABEL_20:
        break;
      }
      objc_msgSend(v9, "addObject:", v22);

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v9, "count"));
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v43 = v27;
        v44 = 2112;
        v45 = v36;
        _os_log_impl(&dword_18DFCD000, v26, OS_LOG_TYPE_INFO, "Quick saving all %@ chat items in organic layout group with identifier %@", buf, 0x16u);

      }
    }
    v18 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v39 = 0u;
    v40 = 0u;
    v37 = 0u;
    v38 = 0u;
    v28 = v9;
    v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    if (v29)
    {
      v30 = *(_QWORD *)v38;
      do
      {
        for (j = 0; j != v29; ++j)
        {
          if (*(_QWORD *)v38 != v30)
            objc_enumerationMutation(v28);
          v32 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * j);
          objc_msgSend(v32, "mediaObject");
          v33 = (void *)objc_claimAutoreleasedReturnValue();

          if (v33)
          {
            objc_msgSend(v32, "mediaObject");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "addObject:", v34);

          }
        }
        v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
      }
      while (v29);
    }

  }
  return v18;
}

- (void)_saveMediaObjects:(id)a3 withMomentShareURL:(id)a4 sender:(id)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void (**v16)(_QWORD);
  NSObject *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, int);
  void *v23;
  NSObject *v24;
  _QWORD v25[4];
  id v26;
  _QWORD aBlock[4];
  id v28;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v11 = v10;
    v12 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __84__CKTranscriptCollectionViewController__saveMediaObjects_withMomentShareURL_sender___block_invoke;
    aBlock[3] = &unk_1E274A208;
    v13 = v11;
    v28 = v13;
    v14 = _Block_copy(aBlock);
    v25[0] = v12;
    v25[1] = 3221225472;
    v25[2] = __84__CKTranscriptCollectionViewController__saveMediaObjects_withMomentShareURL_sender___block_invoke_2;
    v25[3] = &unk_1E274A208;
    v15 = v13;
    v26 = v15;
    v16 = (void (**)(_QWORD))_Block_copy(v25);
    v20 = v12;
    v21 = 3221225472;
    v22 = __84__CKTranscriptCollectionViewController__saveMediaObjects_withMomentShareURL_sender___block_invoke_3;
    v23 = &unk_1E274B1A0;
    v17 = v15;
    v24 = v17;
    v18 = _Block_copy(&v20);
    if (v9)
    {
      v16[2](v16);
      if ((CKSaveMomentShareFromURL(v9, 0, v18) & 1) != 0)
      {
LABEL_11:

        goto LABEL_12;
      }
      IMLogHandleForCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController _saveMediaObjects:withMomentShareURL:sender:].cold.1();
    }
    else
    {
      +[CKUtilities quickSaveConfirmationAlertForMediaObjects:momentShareURL:popoverSource:metricsSource:cancelHandler:preSaveHandler:postSaveHandler:](CKUtilities, "quickSaveConfirmationAlertForMediaObjects:momentShareURL:popoverSource:metricsSource:cancelHandler:preSaveHandler:postSaveHandler:", v8, 0, v17, *MEMORY[0x1E0D388C8], v14, v16, v18, v20, v21, v22, v23);
      v19 = objc_claimAutoreleasedReturnValue();
      if (v19)
        -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v19, 1, 0);
    }

    goto LABEL_11;
  }
  IMLogHandleForCategory();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    -[CKTranscriptCollectionViewController _saveMediaObjects:withMomentShareURL:sender:].cold.2();
LABEL_12:

}

uint64_t __84__CKTranscriptCollectionViewController__saveMediaObjects_withMomentShareURL_sender___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setState:animated:", 0, 1);
}

uint64_t __84__CKTranscriptCollectionViewController__saveMediaObjects_withMomentShareURL_sender___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setState:animated:", 2, 1);
}

uint64_t __84__CKTranscriptCollectionViewController__saveMediaObjects_withMomentShareURL_sender___block_invoke_3(uint64_t a1, int a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  if (a2)
  {
    v3 = 3;
    v4 = 1;
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  return objc_msgSend(v2, "setState:animated:", v3, v4);
}

- (void)_handleAssociatedMessageCellTapEvent:(id)a3 isDoubleTap:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;

  v4 = a4;
  v6 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v19 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "indexPathForCell:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectAtIndex:", objc_msgSend(v7, "row"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "associatedChatItemGUID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v9, "associatedMessageRange");
  v14 = objc_msgSend(v10, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v11, v12, v13);

  if (v14 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v14, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController balloonViewForIndexPath:](self, "balloonViewForIndexPath:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (v16)
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = v17;
      if (v4)
        objc_msgSend(v17, "transcriptCollectionViewController:balloonView:doubleTappedItemAtIndexPath:", self, v16, v15);
      else
        objc_msgSend(v17, "transcriptCollectionViewController:balloonView:longPressedForItemWithIndexPath:", self, v16, v15);

    }
  }

}

- (void)associatedMessageTranscriptCellDoubleTapped:(id)a3
{
  -[CKTranscriptCollectionViewController _handleAssociatedMessageCellTapEvent:isDoubleTap:](self, "_handleAssociatedMessageCellTapEvent:isDoubleTap:", a3, 1);
}

- (void)associatedMessageTranscriptCellLongTouched:(id)a3
{
  -[CKTranscriptCollectionViewController _handleAssociatedMessageCellTapEvent:isDoubleTap:](self, "_handleAssociatedMessageCellTapEvent:isDoubleTap:", a3, 0);
}

- (void)liveViewController:(id)a3 requestPresentationStyle:(unint64_t)a4
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  BOOL v14;
  void *v15;
  void *v16;
  NSObject *v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint8_t buf[4];
  id v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
  if (!v7)
  {
LABEL_11:

LABEL_14:
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v24 = v5;
        _os_log_impl(&dword_18DFCD000, v17, OS_LOG_TYPE_INFO, "CKTranscriptCollectionViewController - Did not find a CKTranscriptPluginChatItem object to call transcriptCollectionViewController:balloonView:didRequestPresentationStyle:forChatItem:allowAllStyles: for viewController %@", buf, 0xCu);
      }

    }
    goto LABEL_18;
  }
  v8 = *(_QWORD *)v20;
LABEL_3:
  v9 = 0;
  while (1)
  {
    if (*(_QWORD *)v20 != v8)
      objc_enumerationMutation(v6);
    v10 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v9);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_9;
    v11 = v10;
    -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "extensibleViewControllerForContext:", v12);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    v14 = v13 == v5;

    if (v14)
      break;

LABEL_9:
    if (v7 == ++v9)
    {
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
      if (v7)
        goto LABEL_3;
      goto LABEL_11;
    }
  }

  if (!v11)
    goto LABEL_14;
  -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v11);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "transcriptCollectionViewController:balloonView:didRequestPresentationStyle:forChatItem:allowAllStyles:", self, v15, a4, v11, 1);

LABEL_18:
}

- (void)liveViewController:(id)a3 stagePayload:(id)a4 skipShelf:(BOOL)a5 allowAllCommits:(BOOL)a6 completionHandler:(id)a7
{
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  _QWORD block[5];
  id v19;
  id v20;
  id v21;
  BOOL v22;
  BOOL v23;

  v12 = a4;
  v13 = a7;
  -[CKTranscriptCollectionViewController balloonPluginForViewController:](self, "balloonPluginForViewController:", a3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __116__CKTranscriptCollectionViewController_liveViewController_stagePayload_skipShelf_allowAllCommits_completionHandler___block_invoke;
  block[3] = &unk_1E27549C8;
  v22 = a5;
  block[4] = self;
  v19 = v12;
  v23 = a6;
  v20 = v14;
  v21 = v13;
  v15 = v13;
  v16 = v14;
  v17 = v12;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void __116__CKTranscriptCollectionViewController_liveViewController_stagePayload_skipShelf_allowAllCommits_completionHandler___block_invoke(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _BOOL8 v6;
  id v7;
  id v8;
  id v9;

  v2 = *(unsigned __int8 *)(a1 + 64);
  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *(_BYTE *)(a1 + 65) != 0;
  if (v2)
  {
    v9 = 0;
    objc_msgSend(v8, "transcriptCollectionViewController:balloonViewDidRequestCommitPayload:forPlugin:allowAllCommits:error:", v3, v4, v5, v6, &v9);
    v7 = v9;

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    objc_msgSend(v8, "transcriptCollectionViewController:balloonViewDidRequestStartEditingPayload:forPlugin:allowAllCommits:completionHandler:", v3, v4, v5, v6, *(_QWORD *)(a1 + 56));

  }
}

- (void)liveViewController:(id)a3 stageSticker:(id)a4 skipShelf:(BOOL)a5 allowAllCommits:(BOOL)a6 completionHandler:(id)a7
{
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  _QWORD block[5];
  id v18;
  id v19;
  id v20;
  BOOL v21;

  v11 = a4;
  v12 = a7;
  -[CKTranscriptCollectionViewController balloonPluginForViewController:](self, "balloonPluginForViewController:", a3);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __116__CKTranscriptCollectionViewController_liveViewController_stageSticker_skipShelf_allowAllCommits_completionHandler___block_invoke;
  block[3] = &unk_1E27549F0;
  block[4] = self;
  v18 = v11;
  v21 = a6;
  v19 = v13;
  v20 = v12;
  v14 = v12;
  v15 = v13;
  v16 = v11;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void __116__CKTranscriptCollectionViewController_liveViewController_stageSticker_skipShelf_allowAllCommits_completionHandler___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *(unsigned __int8 *)(a1 + 64);
  v8 = 0;
  objc_msgSend(v2, "transcriptCollectionViewController:balloonViewDidRequestCommitSticker:forPlugin:allowAllCommits:error:", v3, v4, v5, v6, &v8);
  v7 = v8;

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

- (void)didTapWorkoutBalloonView:(id)a3 workoutData:(id)a4
{
  +[CKWorkoutUtilities presentWorkoutViewOnHostViewController:withWorkoutData:](CKWorkoutUtilities, "presentWorkoutViewOnHostViewController:withWorkoutData:", self, a4);
}

- (void)interactionStartedFromPreviewItemControllerInBalloonView:(id)a3
{
  id v3;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "beginHoldingContentOffsetUpdatesForReason:", CFSTR("TranscriptPreviewItem"));

}

- (void)interactionStoppedFromPreviewItemControllerInBalloonView:(id)a3
{
  id v3;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "endHoldingContentOffsetUpdatesForReason:", CFSTR("TranscriptPreviewItem"));

}

- (void)tuConversationBalloonJoinButtonTapped:(id)a3
{
  id v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v9 = 138412290;
      v10 = v4;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Processing join button tapped from balloonView: %@", (uint8_t *)&v9, 0xCu);
    }

  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v6 = v4;
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v7 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "tuConversationUUID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    -[NSObject joinExistingTUConversationWithUUID:](v7, "joinExistingTUConversationWithUUID:", v8);
  }
  else
  {
    IMLogHandleForCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      -[CKTranscriptCollectionViewController tuConversationBalloonJoinButtonTapped:].cold.1();
  }

}

- (void)balloonView:(id)a3 mediaObjectDidFinishPlaying:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[5];
  id v11;

  v5 = a4;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transfer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_msgSend(v6, "__ck_indexOfTransfer:", v7);
  if (v8 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v6, "objectAtIndex:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && (objc_msgSend(v9, "isPlayed") & 1) == 0
      && (objc_msgSend(v9, "isFromMe") & 1) == 0)
    {
      v10[0] = MEMORY[0x1E0C809B0];
      v10[1] = 3221225472;
      v10[2] = __80__CKTranscriptCollectionViewController_balloonView_mediaObjectDidFinishPlaying___block_invoke;
      v10[3] = &unk_1E274A108;
      v10[4] = self;
      v11 = v9;
      -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v10, 1, 0);

    }
  }

}

void __80__CKTranscriptCollectionViewController_balloonView_mediaObjectDidFinishPlaying___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "IMChatItem");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "markChatItemAsPlayed:", v2);

}

- (id)videoPlayerReusePool
{
  return +[CKVideoPlayerReusePool sharedPool](CKVideoPlayerReusePool, "sharedPool");
}

- (void)photoStackBalloonView:(id)a3 photoStack:(id)a4 didSelectAssetReference:(id)a5
{
  id v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  v18 = a3;
  v7 = a5;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_respondsToSelector();

  if ((v9 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v18);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      v12 = objc_msgSend(v10, "item");
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "count");

      if (v12 < v14)
      {
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "objectAtIndex:", objc_msgSend(v11, "item"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "transcriptCollectionViewController:didTapPhotoStackForChatItem:assetReference:", self, v16, v7);

          -[CKTranscriptCollectionViewController _trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:](self, "_trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:", *MEMORY[0x1E0D38770], v18, objc_msgSend(v16, "transcriptOrientation"));
        }

      }
    }

  }
}

- (void)photoStackBalloonView:(id)a3 didChangeCurrentAssetReference:(id)a4 isProgrammaticChange:(BOOL)a5 didChangeIndex:(BOOL)a6
{
  _BOOL4 v6;
  id v9;
  void *v10;
  void *v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;

  v6 = a6;
  v9 = a3;
  if (v6 && !a5)
  {
    v17 = v9;
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      v12 = objc_msgSend(v10, "item");
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "count");

      if (v12 < v14)
      {
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "objectAtIndex:", objc_msgSend(v11, "item"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        -[CKTranscriptCollectionViewController _trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:](self, "_trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:", *MEMORY[0x1E0D38768], v17, objc_msgSend(v16, "transcriptOrientation"));
      }
    }

    v9 = v17;
  }

}

- (void)photoStackBalloonView:(id)a3 photoStackDidSelectAdditionalItems:(id)a4
{
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  v16 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_opt_respondsToSelector();

  v7 = v16;
  if ((v6 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v16);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      v10 = objc_msgSend(v8, "item");
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "count");

      if (v10 < v12)
      {
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "objectAtIndex:", objc_msgSend(v9, "item"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "transcriptCollectionViewController:didTapPhotoStackAdditionalItemsForChatItem:", self, v14);

        }
      }
    }

    v7 = v16;
  }

}

- (void)didTapPendingMomentSharePhotoStackBalloonView:(id)a3
{
  void *v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v15 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_opt_respondsToSelector();

  v6 = v15;
  if ((v5 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v15);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v7)
    {
      v9 = objc_msgSend(v7, "item");
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "count");

      if (v9 < v11)
      {
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectAtIndex:", objc_msgSend(v8, "item"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "transcriptCollectionViewController:didTapPendingMomentShareForChatItem:", self, v13);

        }
      }
    }

    v6 = v15;
  }

}

- (void)didTapUnavailableMomentShareBalloonView:(id)a3
{
  void *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _QWORD v14[4];
  NSObject *v15;

  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = objc_msgSend(v4, "item");
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "count");

    if (v6 < v8)
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "objectAtIndex:", objc_msgSend(v5, "item"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(v10, "momentShareURL");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v14[0] = MEMORY[0x1E0C809B0];
          v14[1] = 3221225472;
          v14[2] = __80__CKTranscriptCollectionViewController_didTapUnavailableMomentShareBalloonView___block_invoke;
          v14[3] = &unk_1E2754A18;
          v15 = v11;
          objc_msgSend(v12, "openURL:configuration:completionHandler:", v15, 0, v14);

          v13 = v15;
        }
        else
        {
          IMLogHandleForCategory();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            -[CKTranscriptCollectionViewController didTapUnavailableMomentShareBalloonView:].cold.1();
        }

      }
    }
  }

}

void __80__CKTranscriptCollectionViewController_didTapUnavailableMomentShareBalloonView___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;

  v5 = a3;
  if (!a2)
  {
    IMLogHandleForCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      __80__CKTranscriptCollectionViewController_didTapUnavailableMomentShareBalloonView___block_invoke_cold_1(a1, (uint64_t)v5, v6);

  }
}

- (void)locationShareBalloonViewIgnoreButtonTapped:(id)a3
{
  id v3;

  -[CKTranscriptCollectionViewController chat](self, "chat", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "markAllLocationShareItemsAsUnactionable");

}

- (void)locationShareBalloonViewShareButtonTapped:(id)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v24;
  _QWORD v25[4];
  id v26;
  _QWORD v27[4];
  id v28;
  _QWORD v29[4];
  id v30;
  _QWORD aBlock[6];

  v24 = a3;
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke;
  aBlock[3] = &unk_1E274C9E8;
  aBlock[4] = self;
  v6 = _Block_copy(aBlock);
  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("SHARE_LOCATION_ONE_HOUR"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = v5;
  v29[1] = 3221225472;
  v29[2] = __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke_2;
  v29[3] = &unk_1E274B330;
  v9 = v6;
  v30 = v9;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v8, 0, v29);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addAction:", v10);

  CKFrameworkBundle();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("SHARE_LOCATION_EOD"), &stru_1E276D870, CFSTR("ChatKit"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v5;
  v27[1] = 3221225472;
  v27[2] = __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke_3;
  v27[3] = &unk_1E274B330;
  v13 = v9;
  v28 = v13;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v12, 0, v27);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addAction:", v14);

  CKFrameworkBundle();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("SHARE_INDEFINITELY"), &stru_1E276D870, CFSTR("ChatKit"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = v5;
  v25[1] = 3221225472;
  v25[2] = __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke_4;
  v25[3] = &unk_1E274B330;
  v26 = v13;
  v17 = v13;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v16, 0, v25);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addAction:", v18);

  CKFrameworkBundle();
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v20, 1, 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addAction:", v21);

  objc_msgSend(v4, "popoverPresentationController");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "setSourceView:", v24);

  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v4, 1, 0);
}

void __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "chat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "shareLocationWithDuration:", a2);

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "markAllLocationShareItemsAsUnactionable");

}

uint64_t __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __82__CKTranscriptCollectionViewController_locationShareBalloonViewShareButtonTapped___block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (id)sharingMenu
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD v25[4];
  id v26;
  _QWORD v27[4];
  id v28;
  _QWORD v29[4];
  id v30;
  _QWORD aBlock[4];
  id v32;
  id location;
  _QWORD v34[5];

  v34[3] = *MEMORY[0x1E0C80C00];
  location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke;
  aBlock[3] = &unk_1E274BAD8;
  objc_copyWeak(&v32, &location);
  v2 = _Block_copy(aBlock);
  v3 = (void *)MEMORY[0x1E0CEA2A8];
  CKFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("SHARE_LOCATION_ONE_HOUR"), &stru_1E276D870, CFSTR("ChatKit"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("clock"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = MEMORY[0x1E0C809B0];
  v29[1] = 3221225472;
  v29[2] = __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke_2;
  v29[3] = &unk_1E274EE40;
  v7 = v2;
  v30 = v7;
  objc_msgSend(v3, "actionWithTitle:image:identifier:handler:", v5, v6, 0, v29);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = (void *)MEMORY[0x1E0CEA2A8];
  CKFrameworkBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("SHARE_LOCATION_EOD"), &stru_1E276D870, CFSTR("ChatKit"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("calendar"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 3221225472;
  v27[2] = __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke_3;
  v27[3] = &unk_1E274EE40;
  v13 = v7;
  v28 = v13;
  objc_msgSend(v9, "actionWithTitle:image:identifier:handler:", v11, v12, 0, v27);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = (void *)MEMORY[0x1E0CEA2A8];
  CKFrameworkBundle();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("SHARE_INDEFINITELY"), &stru_1E276D870, CFSTR("ChatKit"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("infinity"));
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke_4;
  v25[3] = &unk_1E274EE40;
  v19 = v13;
  v26 = v19;
  objc_msgSend(v15, "actionWithTitle:image:identifier:handler:", v17, v18, 0, v25);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  v21 = (void *)MEMORY[0x1E0CEA740];
  v34[0] = v8;
  v34[1] = v14;
  v34[2] = v20;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 3);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "menuWithTitle:image:identifier:options:children:", &stru_1E276D870, 0, 0, 1, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  objc_destroyWeak(&v32);
  objc_destroyWeak(&location);
  return v23;
}

void __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke(uint64_t a1, uint64_t a2)
{
  id *v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "conversation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "chat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "shareLocationWithDuration:", a2);

  v8 = objc_loadWeakRetained(v3);
  objc_msgSend(v8, "chat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "markAllLocationShareItemsAsUnactionable");

}

uint64_t __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __51__CKTranscriptCollectionViewController_sharingMenu__block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)locationSharingClient:(id)a3 showShareLocationMenuWithBalloonPluginView:(id)a4
{
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  id v37;
  _QWORD v38[4];
  id v39;
  _QWORD v40[4];
  id v41;
  _QWORD v42[4];
  id v43;
  _QWORD aBlock[6];

  v37 = a4;
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke;
  aBlock[3] = &unk_1E274C9E8;
  aBlock[4] = self;
  v7 = _Block_copy(aBlock);
  CKFrameworkBundle();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("SHARE_LOCATION_ONE_HOUR"), &stru_1E276D870, CFSTR("ChatKit"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = v6;
  v42[1] = 3221225472;
  v42[2] = __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke_2;
  v42[3] = &unk_1E274B330;
  v10 = v7;
  v43 = v10;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v9, 0, v42);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addAction:", v11);

  CKFrameworkBundle();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("SHARE_LOCATION_EOD"), &stru_1E276D870, CFSTR("ChatKit"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v40[0] = v6;
  v40[1] = 3221225472;
  v40[2] = __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke_3;
  v40[3] = &unk_1E274B330;
  v14 = v10;
  v41 = v14;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v13, 0, v40);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addAction:", v15);

  CKFrameworkBundle();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("SHARE_INDEFINITELY"), &stru_1E276D870, CFSTR("ChatKit"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v38[0] = v6;
  v38[1] = 3221225472;
  v38[2] = __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke_4;
  v38[3] = &unk_1E274B330;
  v18 = v14;
  v39 = v18;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v17, 0, v38);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addAction:", v19);

  CKFrameworkBundle();
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v21, 1, 0);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addAction:", v22);

  if (!CKIsRunningInMacCatalyst())
  {
    objc_msgSend(v5, "popoverPresentationController");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController view](self, "view");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "setSourceView:", v24);

    objc_msgSend(v5, "popoverPresentationController");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController view](self, "view");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    objc_msgSend(v37, "superview");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "convertRect:fromView:", v35, v28, v30, v32, v34);
    objc_msgSend(v25, "setSourceRect:");

  }
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v5, 1, 0);

}

void __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "conversation");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "shareLocationWithDuration:", a2);

}

uint64_t __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __105__CKTranscriptCollectionViewController_locationSharingClient_showShareLocationMenuWithBalloonPluginView___block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)balloonViewTitleTapped:(id)a3
{
  void *v4;
  id v5;

  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transcriptCollectionViewController:balloonViewTitleTappedForItemWithIndexPath:", self, v5);

}

- (void)audioController:(id)a3 mediaObjectDidFinishPlaying:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  void *v24;
  CKTranscriptCollectionViewController *v25;
  id v26;

  v5 = a4;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transfer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "__ck_indexOfTransfer:", v7);

  if (v8 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v6, "objectAtIndex:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v9, "isFromMe") & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_msgSend(v9, "isPlayed") & 1) == 0)
      {
        v21 = MEMORY[0x1E0C809B0];
        v22 = 3221225472;
        v23 = __84__CKTranscriptCollectionViewController_audioController_mediaObjectDidFinishPlaying___block_invoke;
        v24 = &unk_1E274A108;
        v25 = self;
        v26 = v9;
        -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", &v21, 1, 0);

      }
    }
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems", v21, v22, v23, v24, v25);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "transfer");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v10, "__ck_indexOfTransfer:", v11);

    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v12, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "cellForItemAtIndexPath:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = v15;
    if (v15 && objc_msgSend(v15, "isAudioMessage"))
    {
      objc_msgSend(v16, "balloonView");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "setTime:", 0.0);
      objc_msgSend(v17, "setPlaying:", 0);
      objc_msgSend(v17, "setPlayed:", 1);
      objc_msgSend(v17, "prepareForDisplayIfNeeded");

    }
    v6 = v10;
  }
  -[CKTranscriptCollectionViewController __CurrentTestName](self, "__CurrentTestName");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isEqualToString:", CFSTR("AudioBalloonPlayBack"));

  if (v19)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "postNotificationName:object:", CFSTR("kAudioBalloonViewPlaybackDidFinishNotification"), 0);

  }
}

void __84__CKTranscriptCollectionViewController_audioController_mediaObjectDidFinishPlaying___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "IMChatItem");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "markChatItemAsPlayed:", v2);

}

- (void)audioController:(id)a3 updateAudioBalloonsForTime:(double)a4 mediaObject:(id)a5
{
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  id v24;

  v24 = a3;
  v8 = a5;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "transfer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = objc_msgSend(v9, "__ck_indexOfTransfer:", v10);
  if (v11 != 0x7FFFFFFFFFFFFFFFLL)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v11, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "cellForItemAtIndexPath:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v14;
    if (v14 && objc_msgSend(v14, "isAudioMessage"))
    {
      objc_msgSend(v15, "balloonView");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "setTime:", a4);
      objc_msgSend(v16, "setPlaying:", objc_msgSend(v24, "isPlaying"));
      objc_msgSend(v16, "prepareForDisplayIfNeeded");

    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        objc_msgSend(v24, "stop");
    }

    objc_msgSend(v9, "objectAtIndex:", v11);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "mediaObject");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "transferGUID");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController setSpeakerTransferGUID:](self, "setSpeakerTransferGUID:", v19);

    -[CKTranscriptCollectionViewController reconfigureVisibleSpeakerButtonCells](self, "reconfigureVisibleSpeakerButtonCells");
  }
  -[CKTranscriptCollectionViewController __CurrentTestName](self, "__CurrentTestName");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(v20, "isEqualToString:", CFSTR("AudioBalloonPlayBack"));

  if (v21)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v22;
    if (a4 == 0.0)
      objc_msgSend(v22, "postNotificationName:object:", CFSTR("kAudioBalloonViewPlaybackWillStartNotification"), 0);

  }
}

- (void)audioControllerDidPause:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "currentMediaObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transfer");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v4, "__ck_indexOfTransfer:", v6);

  if (v7 != 0x7FFFFFFFFFFFFFFFLL)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v7, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "cellForItemAtIndexPath:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10 && objc_msgSend(v10, "isAudioMessage"))
    {
      objc_msgSend(v11, "balloonView");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setPlaying:", 0);
      objc_msgSend(v12, "prepareForDisplayIfNeeded");

    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        objc_msgSend(v13, "stop");
    }

  }
}

- (void)audioControllerDidStop:(id)a3
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  v4 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_opt_respondsToSelector();

  if ((v6 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "transcriptCollectionViewControllerAudioControllerDidStop:", self);

  }
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v19 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "currentMediaObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "transfer");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v19, "__ck_indexOfTransfer:", v9);

  if (v10 != 0x7FFFFFFFFFFFFFFFLL)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v10, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "cellForItemAtIndexPath:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v13 && objc_msgSend(v13, "isAudioMessage"))
    {
      objc_msgSend(v14, "balloonView");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "setTime:", 0.0);
      objc_msgSend(v15, "setPlaying:", 0);
      objc_msgSend(v15, "prepareForDisplayIfNeeded");

    }
  }
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v16 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v16, "setDelegate:", 0);

  -[CKTranscriptCollectionViewController setAudioController:](self, "setAudioController:", 0);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v16) = objc_msgSend(v17, "isBackgroundAudioEnabled");

  if ((v16 & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "setIdleTimerDisabled:", 0);

  }
}

- (void)audioControllerPlayingDidChange:(id)a3
{
  id v4;

  -[CKTranscriptCollectionViewController delegate](self, "delegate", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transcriptCollectionViewControllerPlayingAudioDidChange:", self);

}

- (id)avatarView:(id)a3 orderedPropertiesForProperties:(id)a4 category:(id)a5
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  id v26;
  uint64_t v27;
  id obj;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v29 = a3;
  v7 = a4;
  if (objc_msgSend(a5, "isEqualToString:", *MEMORY[0x1E0C97420]))
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v7, "count"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v26 = v7;
    obj = v7;
    v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v31;
      v12 = *MEMORY[0x1E0C966A8];
      v27 = *MEMORY[0x1E0C967C0];
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v31 != v11)
            objc_enumerationMutation(obj);
          v14 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
          objc_msgSend(v14, "key", v26);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = objc_msgSend(v15, "isEqualToString:", v12);

          if (v16)
          {
            objc_msgSend(v14, "value");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            objc_msgSend(v14, "key");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v19 = objc_msgSend(v18, "isEqualToString:", v27);

            if (v19)
            {
              objc_msgSend(v14, "value");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v20, "stringValue");
              v17 = (void *)objc_claimAutoreleasedReturnValue();

            }
            else
            {
              v17 = 0;
            }
          }
          IMStripFormattingFromAddress();
          v21 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v29, "preferredHandle");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          IMStripFormattingFromAddress();
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = MEMORY[0x193FF417C](v21, v23);

          if (v24)
            objc_msgSend(v8, "insertObject:atIndex:", v14, 0);
          else
            objc_msgSend(v8, "addObject:", v14);

        }
        v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
      }
      while (v10);
    }

    v7 = v26;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (void)effectManager:(id)a3 didStartEffect:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  void *v26;
  void *v27;
  char v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  int v50;
  void *v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  int v57;
  void *v58;
  void *v59;
  double v60;
  void *v61;
  double v62;
  void *v63;
  double v64;
  void *v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  CGFloat v85;
  CGFloat v86;
  NSObject *v87;
  void *v88;
  double v89;
  CGFloat v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  _QWORD v96[5];
  id v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _BYTE v102[128];
  uint64_t v103;
  CGSize v104;

  v103 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  if (v5)
  {
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "triggeringChatItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "IMChatItem");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "markChatItemAsPlayedExpressiveSend:", v8);

    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "visibleCells");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v10, "mutableCopy");

    if (objc_msgSend(v5, "effectIsDark"))
    {
      v100 = 0u;
      v101 = 0u;
      v98 = 0u;
      v99 = 0u;
      v12 = v11;
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v98, v102, 16);
      if (v13)
      {
        v14 = v13;
        v15 = *(_QWORD *)v99;
        do
        {
          v16 = 0;
          do
          {
            if (*(_QWORD *)v99 != v15)
              objc_enumerationMutation(v12);
            v17 = *(void **)(*((_QWORD *)&v98 + 1) + 8 * v16);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              objc_msgSend(v17, "setShouldConfigureForDarkFSM:", 1);
            ++v16;
          }
          while (v14 != v16);
          v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v98, v102, 16);
        }
        while (v14);
      }

    }
    objc_msgSend(v5, "playSoundEffect");
    -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "beginHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesPlaying"));

    -[CKTranscriptCollectionViewController addContentAnimationPauseReasons:](self, "addContentAnimationPauseReasons:", 4);
    -[CKTranscriptCollectionViewController setShouldUseOpaqueMask:](self, "setShouldUseOpaqueMask:", 0);
    objc_msgSend(v5, "triggeringChatItem");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "removeObject:", v20);
    if (objc_msgSend(v11, "count"))
      objc_msgSend(v5, "applyMessageFiltersToCells:", v11);
    if (v20)
    {
      -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "currentEffect");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "applyMessageFiltersToTriggeringCell:", v20);

    }
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_msgSend(v23, "transcriptCollectionViewController:shouldSetupFullscreenEffectUI:", self, v5);

    if (v24)
    {
      objc_msgSend(v5, "backgroundColor");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      if (v25)
      {
        -[CKTranscriptCollectionViewController view](self, "view");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "backgroundColor");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v28 = objc_msgSend(v27, "isEqual:", v25);

        if ((v28 & 1) == 0)
        {
          v29 = (void *)MEMORY[0x1E0CEABB0];
          v96[0] = MEMORY[0x1E0C809B0];
          v96[1] = 3221225472;
          v96[2] = __69__CKTranscriptCollectionViewController_effectManager_didStartEffect___block_invoke;
          v96[3] = &unk_1E274A108;
          v96[4] = self;
          v97 = v25;
          objc_msgSend(v29, "animateWithDuration:animations:completion:", v96, 0, 0.3);

        }
      }
      if (objc_msgSend(v5, "shouldDrawOverNavigationBar") && CKIsRunningInMessages())
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "transcriptCollectionViewControllerOuterEffectPresentingView:", self);
        v31 = (void *)objc_claimAutoreleasedReturnValue();

        v32 = objc_alloc((Class)objc_msgSend(v5, "effectViewClass"));
        -[CKTranscriptCollectionViewController view](self, "view");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "bounds");
        v35 = v34;
        v37 = v36;
        v39 = v38;
        v41 = v40;
        -[CKTranscriptCollectionViewController view](self, "view");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "convertRect:fromView:", v42, v35, v37, v39, v41);
        v43 = (void *)objc_msgSend(v32, "initWithFrame:");

        objc_msgSend(v43, "setZIndex:", 3);
        objc_msgSend(v43, "setUserInteractionEnabled:", 0);
        objc_msgSend(v31, "addSubview:", v43);
        +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(v42) = objc_msgSend(v44, "shouldHideStatusBarForFullScreenEffects");

        if ((_DWORD)v42)
        {
          objc_msgSend((id)*MEMORY[0x1E0CEB258], "statusBar");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v45, "setHidden:animated:", 1, 1);

        }
        -[CKTranscriptCollectionViewController setTopEffectView:](self, "setTopEffectView:", v43);
        -[CKTranscriptCollectionViewController _updateEffectViewMessageRect:effect:](self, "_updateEffectViewMessageRect:effect:", v43, v5);
        objc_msgSend(v5, "triggeringChatItem");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v46);
        v47 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v47, "balloonView");
          v48 = (id)objc_claimAutoreleasedReturnValue();
          -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v47);
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          v95 = v49;
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v49, "transcriptOrientation") == 2)
            {
              v48 = v48;
              v50 = objc_msgSend(v48, "wantsGradient");
              v51 = v48;
              if (v50)
              {
                v94 = v48;
                CKBalloonViewForClass((objc_class *)objc_msgSend(v49, "balloonViewClass"));
                v48 = (id)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v48, "configureForMessagePart:", v49);
                objc_msgSend(v48, "setInvisibleInkEffectEnabled:", 0);
                objc_msgSend(v48, "setCanUseOpaqueMask:", 0);
                if ((objc_opt_respondsToSelector() & 1) != 0)
                {
                  -[CKTranscriptCollectionViewController gradientReferenceView](self, "gradientReferenceView");
                  v52 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v48, "setGradientReferenceView:", v52);

                  v49 = v95;
                }
                objc_msgSend(v48, "setNeedsPrepareForDisplay");
                objc_msgSend(v48, "prepareForDisplayIfNeeded");
                objc_msgSend(v49, "size");
                v54 = v53;
                v56 = v55;
                v57 = objc_msgSend(v49, "itemIsReplyContextPreview");
                +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                if (v57)
                {
                  v59 = v58;
                  objc_msgSend(v58, "replyBalloonMaskSizeWithTailShape:isMultiline:", 1, 0);
                  objc_msgSend(v48, "setWantsSkinnyMask:", v54 < v60);

                  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
                  v61 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v61, "textReplyPreviewBalloonMinHeight");
                }
                else
                {
                  v63 = v58;
                  objc_msgSend(v58, "balloonMaskSizeWithTailShape:isMultiline:", 1, 0);
                  objc_msgSend(v48, "setWantsSkinnyMask:", v54 < v64);

                  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
                  v61 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v61, "textBalloonMinHeight");
                }
                objc_msgSend(v48, "setWantsMultilineMask:", v56 > v62);

                objc_msgSend(v94, "bounds");
                objc_msgSend(v48, "setFrame:");
                objc_msgSend(v48, "layoutIfNeeded");
                -[CKTranscriptCollectionViewController gradientReferenceView](self, "gradientReferenceView");
                v65 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v65, "gradientFrame");
                v67 = v66;
                v69 = v68;
                v71 = v70;
                v73 = v72;

                -[CKTranscriptCollectionViewController gradientReferenceView](self, "gradientReferenceView");
                v74 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v74, "convertRect:toView:", v94, v67, v69, v71, v73);
                v76 = v75;
                v78 = v77;
                v80 = v79;
                v82 = v81;

                if ((objc_opt_respondsToSelector() & 1) != 0)
                  objc_msgSend(v48, "setGradientOverrideFrame:", v76, v78, v80, v82);
                objc_msgSend(v48, "layoutIfNeeded");

                v51 = v94;
              }

            }
          }
          objc_msgSend(v48, "bounds");
          v85 = v84;
          v86 = v83;
          if (v84 == *MEMORY[0x1E0C9D820] && v83 == *(double *)(MEMORY[0x1E0C9D820] + 8))
          {
            IMLogHandleForCategory();
            v87 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v87, OS_LOG_TYPE_ERROR))
              -[CKTranscriptCollectionViewController effectManager:didStartEffect:].cold.1();
          }
          else
          {
            objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
            v88 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v88, "scale");
            v90 = v89;
            v104.width = v85;
            v104.height = v86;
            UIGraphicsBeginImageContextWithOptions(v104, 0, v90);

            objc_msgSend(v48, "bounds");
            objc_msgSend(v48, "drawViewHierarchyInRect:afterScreenUpdates:", 1);
            UIGraphicsGetImageFromCurrentImageContext();
            v87 = objc_claimAutoreleasedReturnValue();
            UIGraphicsEndImageContext();
            objc_msgSend(v43, "setMessageImage:", v87);
          }

        }
        objc_msgSend(v43, "startAnimation");

      }
    }
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v91, "collectionViewLayout");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v92, "invalidateLayout");

    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v93 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v93, "reloadData");

  }
}

void __69__CKTranscriptCollectionViewController_effectManager_didStartEffect___block_invoke(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "view");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setBackgroundColor:", *(_QWORD *)(a1 + 40));

}

- (void)effectManager:(id)a3 didStopEffect:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void (**v22)(_QWORD);
  void *v23;
  int v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  void *v29;
  void *v30;
  void *v31;
  _QWORD v32[4];
  void (**v33)(_QWORD);
  _QWORD v34[5];
  _QWORD aBlock[5];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a4;
  v6 = v5;
  if (v5)
  {
    if (objc_msgSend(v5, "effectIsDark"))
    {
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "visibleCells");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)objc_msgSend(v8, "mutableCopy");

      v38 = 0u;
      v39 = 0u;
      v37 = 0u;
      v36 = 0u;
      v10 = v9;
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v37;
        do
        {
          v14 = 0;
          do
          {
            if (*(_QWORD *)v37 != v13)
              objc_enumerationMutation(v10);
            v15 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * v14);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              objc_msgSend(v15, "setShouldConfigureForDarkFSM:", 0);
            ++v14;
          }
          while (v12 != v14);
          v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
        }
        while (v12);
      }

    }
    -[CKTranscriptCollectionViewController __CurrentTestName](self, "__CurrentTestName");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "postNotificationName:object:", CFSTR("CKEffectManagerEffectDidEndForPPT"), self);

    }
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "visibleCells");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "clearMessageFiltersFromCells:", v19);

    objc_msgSend(v6, "stopSoundEffect");
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "reloadData");

    v21 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __68__CKTranscriptCollectionViewController_effectManager_didStopEffect___block_invoke;
    aBlock[3] = &unk_1E274A208;
    aBlock[4] = self;
    v22 = (void (**)(_QWORD))_Block_copy(aBlock);
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_msgSend(v23, "transcriptCollectionViewController:shouldCleanupFullscreenEffectUI:", self, v6);

    if (!v24)
      goto LABEL_20;
    -[CKTranscriptCollectionViewController topEffectView](self, "topEffectView");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "stopAnimation");

    -[CKTranscriptCollectionViewController topEffectView](self, "topEffectView");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "removeFromSuperview");

    -[CKTranscriptCollectionViewController setTopEffectView:](self, "setTopEffectView:", 0);
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = objc_msgSend(v27, "shouldHideStatusBarForFullScreenEffects");

    if (v28)
    {
      objc_msgSend((id)*MEMORY[0x1E0CEB258], "statusBar");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "setHidden:animated:", 0, 1);

    }
    objc_msgSend(v6, "backgroundColor");
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    if (v30)
    {
      v31 = (void *)MEMORY[0x1E0CEABB0];
      v34[0] = v21;
      v34[1] = 3221225472;
      v34[2] = __68__CKTranscriptCollectionViewController_effectManager_didStopEffect___block_invoke_2;
      v34[3] = &unk_1E274A208;
      v34[4] = self;
      v32[0] = v21;
      v32[1] = 3221225472;
      v32[2] = __68__CKTranscriptCollectionViewController_effectManager_didStopEffect___block_invoke_3;
      v32[3] = &unk_1E274C308;
      v33 = v22;
      objc_msgSend(v31, "animateWithDuration:animations:completion:", v34, v32, 0.5);

    }
    else
    {
LABEL_20:
      v22[2](v22);
    }

  }
}

void __68__CKTranscriptCollectionViewController_effectManager_didStopEffect___block_invoke(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "setShouldUseOpaqueMask:", objc_msgSend(*(id *)(a1 + 32), "_canUseOpaqueMask"));
  objc_msgSend(*(id *)(a1 + 32), "removeContentAnimationPauseReasons:", 4);
  objc_msgSend(*(id *)(a1 + 32), "fullscreenEffectManager");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "endHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesPlaying"));

}

void __68__CKTranscriptCollectionViewController_effectManager_didStopEffect___block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "view");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "transcriptBackgroundColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setBackgroundColor:", v2);

}

uint64_t __68__CKTranscriptCollectionViewController_effectManager_didStopEffect___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)sendAnimationManagerWillStartAnimation:(id)a3 context:(id)a4
{
  id v5;
  void *v6;
  id v7;

  v5 = a4;
  -[CKTranscriptCollectionViewController setShouldUseOpaqueMask:](self, "setShouldUseOpaqueMask:", 0);
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "beginHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesImpactAnimation"));

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "transcriptCollectionViewController:willBeginImpactEffectAnimationWithSendAnimationContext:", self, v5);

}

- (void)sendAnimationManagerDidStopAnimation:(id)a3 context:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a4;
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "currentEffect");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v7)
    -[CKTranscriptCollectionViewController setShouldUseOpaqueMask:](self, "setShouldUseOpaqueMask:", -[CKTranscriptCollectionViewController _canUseOpaqueMask](self, "_canUseOpaqueMask"));
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "endHoldingUpdatesForKey:", CFSTR("CKFullscreenUpdatesImpactAnimation"));

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "transcriptCollectionViewController:didEndImpactEffectAnimationWithSendAnimationContext:", self, v5);

  -[CKTranscriptCollectionViewController reloadData](self, "reloadData");
}

- (void)setPoppedBalloonGUIDHiddenUntilNextChatItemUpdate:(id)a3
{
  NSString *v5;
  NSString *poppedBalloonGUIDHiddenUntilNextChatItemUpdate;
  NSString *v7;

  v5 = (NSString *)a3;
  poppedBalloonGUIDHiddenUntilNextChatItemUpdate = self->_poppedBalloonGUIDHiddenUntilNextChatItemUpdate;
  v7 = v5;
  if (poppedBalloonGUIDHiddenUntilNextChatItemUpdate != v5)
  {
    if (poppedBalloonGUIDHiddenUntilNextChatItemUpdate)
      -[CKTranscriptCollectionViewController setChatItemHidden:forChatItemGUID:](self, "setChatItemHidden:forChatItemGUID:", 0);
    objc_storeStrong((id *)&self->_poppedBalloonGUIDHiddenUntilNextChatItemUpdate, a3);
    if (self->_poppedBalloonGUIDHiddenUntilNextChatItemUpdate)
      -[CKTranscriptCollectionViewController setChatItemHidden:forChatItemGUID:](self, "setChatItemHidden:forChatItemGUID:", 1);
  }

}

- (void)transcriptBalloonCell:(id)a3 didTranslateBalloonByDelta:(double)a4
{
  id v6;
  void (**v7)(void *, _QWORD, double);
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD aBlock[6];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __89__CKTranscriptCollectionViewController_transcriptBalloonCell_didTranslateBalloonByDelta___block_invoke;
  aBlock[3] = &unk_1E2754A40;
  aBlock[4] = self;
  *(double *)&aBlock[5] = a4;
  v7 = (void (**)(void *, _QWORD, double))_Block_copy(aBlock);
  -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  objc_msgSend(v8, "visibleAssociatedMessageChatItems", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v17;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v17 != v12)
          objc_enumerationMutation(v9);
        v7[2](v7, *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v13++), a4);
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v11);
  }

  objc_msgSend(v8, "messageHighlightChatItem");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    objc_msgSend(v8, "messageHighlightChatItem");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(void *, void *, double))v7)[2](v7, v15, a4);

  }
}

void __89__CKTranscriptCollectionViewController_transcriptBalloonCell_didTranslateBalloonByDelta___block_invoke(uint64_t a1, uint64_t a2)
{
  double v3;
  id v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "cellForAssociatedChatItem:", a2);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v3 = *(double *)(a1 + 40);
      v4 = v5;
      objc_msgSend(v4, "setSwipeToReplyDelta:", v3);
      objc_msgSend(v4, "setNeedsLayout");
      objc_msgSend(v4, "layoutIfNeeded");

    }
  }

}

- (void)transcriptBalloonCell:(id)a3 didEndBalloonSwipeWithDelta:(double)a4 swipeVelocity:(CGPoint)a5
{
  double y;
  double x;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  CKInlineReplyTransitionProperties *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  _BYTE v32[128];
  uint64_t v33;

  y = a5.y;
  x = a5.x;
  v33 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "IMChatItem");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "guid");
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  objc_msgSend(v10, "visibleAssociatedMessageChatItems");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v28;
    do
    {
      v17 = 0;
      do
      {
        if (*(_QWORD *)v28 != v16)
          objc_enumerationMutation(v13);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v17), "IMChatItem");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "guid");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "addObject:", v19);

        ++v17;
      }
      while (v15 != v17);
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v27, v32, 16);
    }
    while (v15);
  }

  objc_msgSend(v9, "balloonView");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_alloc_init(CKInlineReplyTransitionProperties);
  -[CKInlineReplyTransitionProperties setInitialBalloonOffsetX:](v21, "setInitialBalloonOffsetX:", a4);
  v31 = v26;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v31, 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKInlineReplyTransitionProperties setChatItemGUIDs:](v21, "setChatItemGUIDs:", v22);

  v23 = (void *)objc_msgSend(v12, "copy");
  -[CKInlineReplyTransitionProperties setAssociatedChatItemGUIDs:](v21, "setAssociatedChatItemGUIDs:", v23);

  -[CKInlineReplyTransitionProperties setSwipeVelocity:](v21, "setSwipeVelocity:", x, y);
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v20);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "transcriptCollectionViewController:balloonView:showInlineReplyForItemWithIndexPath:withReplyTransitionProperties:", self, v20, v25, v21);

}

- (id)transcriptBalloonCell:(id)a3 layoutAttributesForTextBalloonView:(id)a4 messageDisplayViewFrame:(CGRect)a5 inContainerFrame:(CGRect)a6 proposedAttributes:(id)a7
{
  id v10;
  id v11;
  id v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  char v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  double v41;
  double v42;
  double v43;
  double v44;
  CGRect v45;
  CGRect v46;

  v10 = a3;
  v11 = a4;
  v12 = a7;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "isExpressiveTextEnabled");

  if (v14)
  {
    -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v10);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v15)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(v11, "textView");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "ck_hasPlayingOrPausedTextAnimator");

        if ((v17 & 1) != 0)
        {
          objc_msgSend(v11, "alignmentRectInsets");
          v43 = v19;
          v44 = v18;
          v21 = v20;
          v23 = v22;
          objc_msgSend(v11, "textAlignmentInsets");
          v41 = v25;
          v42 = v24;
          v27 = v26;
          v29 = v28;
          objc_msgSend(v11, "textView");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "_customRenderBounds");
          v32 = v31;
          v34 = v33;
          v36 = v35;
          v38 = v37;

          v45.origin.x = v32;
          v45.origin.y = v34;
          v45.size.width = v36;
          v45.size.height = v38;
          v39 = v23 - v29 + v21 - v27 + CGRectGetWidth(v45);
          v46.origin.x = v32;
          v46.origin.y = v34;
          v46.size.width = v36;
          v46.size.height = v38;
          objc_msgSend(v12, "setSize:", v39, v43 - v41 + v44 - v42 + CGRectGetHeight(v46));
          objc_msgSend(v12, "setWantsFrameClamping:", 0);
        }
        else
        {
          objc_msgSend(v15, "size");
          objc_msgSend(v12, "setSize:");
        }
      }
    }

  }
  return v12;
}

- (void)didTapTranscriptActionButtonCell:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v34 = 0;
  v35 = &v34;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__38;
  v38 = __Block_byref_object_dispose__38;
  v39 = 0;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 3221225472;
  v30[2] = __73__CKTranscriptCollectionViewController_didTapTranscriptActionButtonCell___block_invoke;
  v30[3] = &unk_1E27549A0;
  v7 = v5;
  v31 = v7;
  v8 = v4;
  v32 = v8;
  v33 = &v34;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v30);

  v9 = (void *)v35[5];
  if (v9)
  {
    v10 = (void *)MEMORY[0x1E0CB36B0];
    v11 = objc_msgSend(v9, "item");
    objc_msgSend(v10, "indexPathForItem:inSection:", v11 + 1, objc_msgSend((id)v35[5], "section"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController balloonViewForIndexPath:](self, "balloonViewForIndexPath:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "objectAtIndex:", objc_msgSend(v12, "item"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15 && v13)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v16 = v13;
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_opt_respondsToSelector();

        if ((v18 & 1) != 0)
        {
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "currentAssetReference");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "transcriptCollectionViewController:didTapPhotoStackButtonForChatItem:assetReference:", self, v15, v20);

        }
        v21 = objc_msgSend(v15, "transcriptOrientation");
        -[CKTranscriptCollectionViewController _trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:](self, "_trackPhotoStackEvent:forStackBalloonView:transcriptOrientation:", *MEMORY[0x1E0D38728], v16, v21);

LABEL_20:
        goto LABEL_21;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v25, "transcriptCollectionViewController:didTapPhotoStackButtonForPendingMomentShareChatItem:", self, v15);

        goto LABEL_20;
      }
    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v8, "attributedText");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "string");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = v35[5];
        *(_DWORD *)buf = 138412546;
        v41 = v28;
        v42 = 2112;
        v43 = v29;
        _os_log_impl(&dword_18DFCD000, v26, OS_LOG_TYPE_INFO, "Failed to locate balloon view for action button: \"%@\", index path: %@", buf, 0x16u);

      }
    }
    goto LABEL_20;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v8, "attributedText");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "string");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v41 = v24;
      _os_log_impl(&dword_18DFCD000, v22, OS_LOG_TYPE_INFO, "Failed to look up index path for action button: \"%@\", buf, 0xCu);

    }
  }
LABEL_21:

  _Block_object_dispose(&v34, 8);
}

void __73__CKTranscriptCollectionViewController_didTapTranscriptActionButtonCell___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  id v8;

  v8 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 == *(void **)(a1 + 40))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
    *a4 = 1;
  }

}

- (void)showGridForChatItem:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  NSObject *v11;
  int v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v6 = v5;
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_opt_respondsToSelector();

      if ((v8 & 1) != 0)
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "currentAssetReference");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "transcriptCollectionViewController:didTapPhotoStackButtonForChatItem:assetReference:", self, v4, v10);

      }
LABEL_9:

      goto LABEL_15;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v6 = (id)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v6, "transcriptCollectionViewController:didTapPhotoStackButtonForPendingMomentShareChatItem:", self, v4);
      goto LABEL_9;
    }
  }
  if (!v5 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = 138412290;
      v13 = v4;
      _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Failed to locate balloon view for chatItem: %@", (uint8_t *)&v12, 0xCu);
    }

  }
LABEL_15:

}

- (void)didPinchPhotoStackCell:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint8_t buf[4];
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__38;
  v27 = __Block_byref_object_dispose__38;
  v28 = 0;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __63__CKTranscriptCollectionViewController_didPinchPhotoStackCell___block_invoke;
  v19[3] = &unk_1E27549A0;
  v7 = v5;
  v20 = v7;
  v8 = v4;
  v21 = v8;
  v22 = &v23;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v19);

  if (v24[5])
  {
    -[CKTranscriptCollectionViewController balloonViewForIndexPath:](self, "balloonViewForIndexPath:");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "objectAtIndex:", objc_msgSend((id)v24[5], "item"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11 && v9 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_respondsToSelector();

      if ((v13 & 1) != 0)
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "currentAssetReference");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "transcriptCollectionViewController:didPinchPhotoStackForChatItem:assetReference:", self, v11, v15);

      }
    }
    else if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v17 = v24[5];
        *(_DWORD *)buf = 138412290;
        v30 = v17;
        _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "Failed to locate balloon view for transcriptPhotoStackCell, index path: %@", buf, 0xCu);
      }

    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v18, OS_LOG_TYPE_INFO, "Failed to look up index path for transcriptPhotoStackCell", buf, 2u);
    }

  }
  _Block_object_dispose(&v23, 8);

}

void __63__CKTranscriptCollectionViewController_didPinchPhotoStackCell___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  id v8;

  v8 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 == *(void **)(a1 + 40))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
    *a4 = 1;
  }

}

- (void)recoverJunkPressedInTranscriptCell:(id)a3
{
  id v4;
  CKConversationConfirmationAlertsController *v5;
  _BOOL8 v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void *v13;
  id v14;
  id location;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_alloc_init(CKConversationConfirmationAlertsController);
  v6 = CKIsRunningInMacCatalyst() != 0;
  location = 0;
  objc_initWeak(&location, self);
  v10 = MEMORY[0x1E0C809B0];
  v11 = 3221225472;
  v12 = __75__CKTranscriptCollectionViewController_recoverJunkPressedInTranscriptCell___block_invoke;
  v13 = &unk_1E274B548;
  objc_copyWeak(&v14, &location);
  v7 = _Block_copy(&v10);
  -[CKTranscriptCollectionViewController conversation](self, "conversation", v10, v11, v12, v13);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKConversationConfirmationAlertsController presentRecoverJunkConversationsConfirmationFromViewController:forConversations:alertControllerStyle:alertsCompletedBlock:cancelBlock:](v5, "presentRecoverJunkConversationsConfirmationFromViewController:forConversations:alertControllerStyle:alertsCompletedBlock:cancelBlock:", self, v9, v6, v7, 0);

  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);

}

void __75__CKTranscriptCollectionViewController_recoverJunkPressedInTranscriptCell___block_invoke(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "conversation");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "transcriptCollectionViewController:requestRecoverJunkConversation:", v5, v6);

}

- (void)dateCell:(id)a3 requestsPresentEditDateViewController:(id)a4
{
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", a4, 1, 0);
}

- (void)deleteConversationPressedInTranscriptCell:(id)a3
{
  id v4;
  CKConversationConfirmationAlertsController *v5;
  _BOOL8 v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void *v13;
  id v14;
  id location;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_alloc_init(CKConversationConfirmationAlertsController);
  v6 = CKIsRunningInMacCatalyst() != 0;
  location = 0;
  objc_initWeak(&location, self);
  v10 = MEMORY[0x1E0C809B0];
  v11 = 3221225472;
  v12 = __82__CKTranscriptCollectionViewController_deleteConversationPressedInTranscriptCell___block_invoke;
  v13 = &unk_1E274B548;
  objc_copyWeak(&v14, &location);
  v7 = _Block_copy(&v10);
  -[CKTranscriptCollectionViewController conversation](self, "conversation", v10, v11, v12, v13);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKConversationConfirmationAlertsController presentPermanentJunkDeletionConfirmationFromViewController:forConversations:alertControllerStyle:alertsCompletedBlock:cancelBlock:](v5, "presentPermanentJunkDeletionConfirmationFromViewController:forConversations:alertControllerStyle:alertsCompletedBlock:cancelBlock:", self, v9, v6, v7, 0);

  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);

}

void __82__CKTranscriptCollectionViewController_deleteConversationPressedInTranscriptCell___block_invoke(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "conversation");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "transcriptCollectionViewController:requestDeleteJunkConversation:", v5, v6);

}

- (void)keyTransparencyTranscriptCellDidRequestVerification:(id)a3
{
  id v4;

  -[CKTranscriptCollectionViewController chat](self, "chat", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  +[CKKeyTransparencyErrorUtilities showKTContactVerificationUIForIMChat:fromViewController:](CKKeyTransparencyErrorUtilities, "showKTContactVerificationUIForIMChat:fromViewController:", v4, self);

}

- (void)keyTransparencyTranscriptCellDidRequestReportToApple:(id)a3
{
  +[CKKeyTransparencyErrorUtilities showReportToAppleUIFromViewController:](CKKeyTransparencyErrorUtilities, "showReportToAppleUIFromViewController:", self);
}

- (void)keyTransparencyTranscriptCellDidSelectLearnMore:(id)a3
{
  +[CKKeyTransparencyErrorUtilities learnMorePressedFromError:](CKKeyTransparencyErrorUtilities, "learnMorePressedFromError:", 1);
}

- (void)keyTransparencyTranscriptCellDidSelectIgnoreFailures:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "chat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKKeyTransparencyErrorUtilities ktClearWarningAlertControllerForChat:confirmationHandler:](CKKeyTransparencyErrorUtilities, "ktClearWarningAlertControllerForChat:confirmationHandler:", v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (!CKIsRunningInMacCatalyst() && +[CKUtilities isIpad](CKUtilities, "isIpad"))
  {
    objc_msgSend(v6, "popoverPresentationController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "actionButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setSourceView:", v8);
    objc_msgSend(v8, "bounds");
    objc_msgSend(v7, "setSourceRect:");

  }
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v6, 1, 0);

}

- (void)keyTransparencyConversationViewControllerDidComplete:(id)a3
{
  void *v4;
  void *v5;

  -[CKTranscriptCollectionViewController conversation](self, "conversation", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "chat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchKTStatus");

  -[CKTranscriptCollectionViewController dismissViewControllerAnimated:completion:](self, "dismissViewControllerAnimated:completion:", 1, &__block_literal_global_645_0);
}

- (BOOL)_allowsEffectAutoPlayback
{
  void *v2;
  char v3;

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isStewieChat");

  return (v3 & 1) == 0 && CKReduceMotionAutoplayEnabled();
}

- (BOOL)_pluginChatItem:(id)a3 hasControllerConformingToProtocol:(id)a4
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v5 = (void *)MEMORY[0x1E0D35770];
  v6 = a4;
  v7 = a3;
  objc_msgSend(v5, "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "type");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "balloonPluginForBundleID:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v10, "bubbleClass");

  LOBYTE(v10) = objc_msgSend(v11, "conformsToProtocol:", v6);
  return (char)v10;
}

- (void)configureCell:(id)a3 forCKChatItem:(id)a4 atIndexPath:(id)a5 animated:(BOOL)a6 animationDuration:(double)a7 animationCurve:(int64_t)a8
{
  id v12;
  id v13;
  void *v14;
  int v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  int v31;
  void *v32;
  void *v33;
  _BOOL8 v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  int v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  NSObject *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  void *v82;
  int v83;
  void *v84;
  id v85;
  void *v86;
  uint64_t v87;
  void *v88;
  void *v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  uint64_t v98;
  void *v99;
  _BOOL8 v100;
  void *v101;
  double v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  id v108;
  void *v109;
  void *v110;
  uint64_t v111;
  void *v112;
  void *v113;
  void *v114;
  char v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  void *v126;
  double v127;
  void *v128;
  void *v129;
  void *v130;
  int v131;
  void *v132;
  void *v133;
  id v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int isKindOfClass;
  _BOOL4 v143;
  void *v144;
  char v145;
  void *v146;
  double v147;
  double v148;
  BOOL v149;
  void *v150;
  char v151;
  id v152;
  void *v153;
  void *v154;
  void *v155;
  int v156;
  double v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  _BOOL4 v164;
  void *v165;
  uint64_t v166;
  void *v168;
  id v169;
  id v170;
  _QWORD v171[4];
  id v172;
  _QWORD v173[4];
  id v174;
  _BYTE buf[12];
  __int16 v176;
  void *v177;
  __int16 v178;
  void *v179;
  __int16 v180;
  CKTranscriptCollectionViewController *v181;
  __int16 v182;
  void *v183;
  uint64_t v184;

  v164 = a6;
  v184 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v170 = a5;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "isExpressiveTextEnabled");

  if (v15)
  {
    if (!objc_msgSend(v170, "section"))
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v16 = v12;
        objc_msgSend(v16, "setTextEffectsDelegate:", self);

      }
    }
  }
  -[CKTranscriptCollectionViewController _configureEditMarginInsetsForCell:](self, "_configureEditMarginInsetsForCell:", v12);
  v166 = objc_msgSend(v170, "item");
  -[CKTranscriptCollectionViewController traitCollection](self, "traitCollection");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setTranscriptTraitCollection:", v17);

  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isDiffableTranscriptDataSourceEnabled");

  if ((v19 & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v12, "setMayReparentPluginViews:", -[CKTranscriptCollectionViewController isPerformingRegenerateOrReloadOnlyUpdate](self, "isPerformingRegenerateOrReloadOnlyUpdate") ^ 1);
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v169 = v13;
    -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v169, "extensibleViewControllerForContext:", v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    if (v21)
    {
      objc_msgSend(v21, "parentViewController");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      if (v22)
      {

      }
      else
      {
        objc_msgSend(v21, "view");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "window");
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        if (v24)
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v25 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
            {
              objc_msgSend(v21, "view");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "view");
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "superview");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              -[CKTranscriptCollectionViewController view](self, "view");
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138413314;
              *(_QWORD *)&buf[4] = v21;
              v176 = 2112;
              v177 = v26;
              v178 = 2112;
              v179 = v28;
              v180 = 2112;
              v181 = self;
              v182 = 2112;
              v183 = v29;
              _os_log_impl(&dword_18DFCD000, v25, OS_LOG_TYPE_INFO, "Adding detached view controller %@ (view:%@, superview:%@) to transcript collection view controller %@ (view:%@)", buf, 0x34u);

            }
          }
          objc_msgSend(v21, "view");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "removeFromSuperview");

        }
      }
      -[CKTranscriptCollectionViewController addChildViewController:](self, "addChildViewController:", v21);
    }

  }
  else
  {
    v169 = 0;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v31 = objc_msgSend(v13, "isFromMe");
  else
    v31 = 0;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v32, "shouldShowContactPhotosInTranscript"))
  {
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v33, "chatStyle") != 45;

  }
  else
  {
    v34 = 0;
  }

  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v12, "setChatEligibleForContactImage:", v34);
  if (v34)
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
      objc_msgSend(v12, "setWantsContactImageLayout:", v31 ^ 1u);
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        if ((v31 & 1) != 0 || !objc_msgSend(v13, "hasTail"))
        {
          v35 = 0;
          v36 = 0;
        }
        else
        {
          objc_msgSend(v13, "contact");
          v35 = (id)objc_claimAutoreleasedReturnValue();

          v36 = 1;
        }
        objc_msgSend(v13, "sender");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v37, "ID");
        v38 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "balloonControllerForContext:", v39);
          v40 = (void *)objc_claimAutoreleasedReturnValue();

          if ((objc_opt_respondsToSelector() & 1) != 0)
            v41 = objc_msgSend(v40, "wantsTranscriptGroupMonograms");
          else
            v41 = 0;

          v36 = v36 & v41;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v42 = v13;
          v43 = v42;
          if ((_DWORD)v36)
          {
            objc_msgSend(v42, "layoutRecipe");
            v44 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = objc_msgSend(v44, "isLastItem");

          }
        }
        objc_msgSend(v12, "setShowAvatarView:withContact:preferredHandle:avatarViewDelegate:", v36, v35, v38, self);

      }
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v45 = v12;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v46 = objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController _previousChatItemOfType:beforeIndex:inChatItems:](self, "_previousChatItemOfType:beforeIndex:inChatItems:", objc_opt_class(), v166, v46);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController _nextChatItemOfType:afterIndex:inChatItems:](self, "_nextChatItemOfType:afterIndex:inChatItems:", objc_opt_class(), v166, v46);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = v48;
      v50 = 0;
      if (v47 && v48)
      {
        if ((objc_msgSend(v48, "itemIsReply") & 1) != 0 || objc_msgSend(v49, "itemIsReplyCount"))
        {
          objc_msgSend(v47, "IMChatItem");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "threadGroupIdentifier");
          v52 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v49, "IMChatItem");
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v53, "threadIdentifier");
          v54 = (void *)objc_claimAutoreleasedReturnValue();

          v50 = objc_msgSend(v52, "isEqualToString:", v54);
        }
        else
        {
          v50 = 0;
        }
      }

    }
    else
    {
      IMLogHandleForCategory();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController configureCell:forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:].cold.1((uint64_t)v13, v46, v55);
      v50 = 0;
    }

    objc_msgSend(v45, "setWantsOffsetForReplyLine:", v50);
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v56 = v12;
    -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "currentEffect");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    v59 = objc_msgSend(v58, "effectIsDark");

    objc_msgSend(v56, "setShouldConfigureForDarkFSM:", v59);
    -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v56, "configureForChatItem:context:animated:animationDuration:animationCurve:", v13, v60, v164, a8, a7);

  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v61 = v12;
    objc_msgSend(v61, "balloonView");
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController traitCollection](self, "traitCollection");
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v62, "updateBalloonForTraitCollection:", v63);

    objc_msgSend(v61, "setBalloonCellDelegate:", self);
    objc_msgSend(v61, "configureAppEntityForMessage:", v13);

  }
  if (v169)
  {
    -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v169, "extensibleViewControllerForContext:", v64);
    v65 = (void *)objc_claimAutoreleasedReturnValue();

    if (v65)
    {
      -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v169, "extensibleViewForContext:", v66);
      v67 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v67, "configureForDisplay");
      objc_msgSend(v65, "didMoveToParentViewController:", self);
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v65, "setDelegate:", self);

    }
  }
  objc_msgSend(v12, "contentAlignmentRect");
  -[CKTranscriptCollectionViewController _balloonHorizontalOffsetForParentChatItem:contentAlignmentRect:responsibleChatItems:individualOffsets:](self, "_balloonHorizontalOffsetForParentChatItem:contentAlignmentRect:responsibleChatItems:individualOffsets:", v13, 0, 0);
  v69 = v68;
  -[CKTranscriptCollectionViewController marginInsets](self, "marginInsets");
  v71 = v70;
  v73 = v72;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v74, "minTranscriptMarginInsets");
  v76 = v75;
  v78 = v77;

  if (objc_msgSend(v13, "transcriptOrientation"))
  {
    if (objc_msgSend(v13, "transcriptOrientation") == 2)
    {
      if (v73 >= v78)
        v79 = v73;
      else
        v79 = v78;
      v80 = v69 + v79;
      if (v80 <= 0.0)
        v69 = v80;
      else
        v69 = 0.0;
    }
  }
  else
  {
    if (v71 >= v76)
      v81 = v71;
    else
      v81 = v76;
    v69 = fmax(v69 - v81, 0.0);
  }
  objc_msgSend(v12, "setAssociatedItemOffset:", v69);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v12, "setMayReparentPluginViews:", 1);
  objc_msgSend(MEMORY[0x1E0D397A0], "sharedManager");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v83 = objc_msgSend(v82, "isFeatureEnabled");

  if (v83)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v12, "balloonView");
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v85 = v84;
        objc_msgSend(v85, "setObscurableBalloonDelegate:", self);
        objc_msgSend(v13, "IMChatItem");
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        v87 = objc_msgSend(v86, "isReplyContextPreview");

        if (objc_msgSend(v13, "isCommSafetySensitiveViewable"))
        {
          objc_msgSend(v85, "revealSensitiveContent:", v87);
        }
        else if (objc_msgSend(v13, "isCommSafetySensitiveNotViewable"))
        {
          objc_msgSend(v85, "obscureSensitiveContent:", v87);
        }

      }
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v13, "previousPluginChatItem");
    v88 = (void *)objc_claimAutoreleasedReturnValue();
    if (v88)
    {
      -[CKTranscriptCollectionViewController snapshotOfPluginBeingReplacedByBreadcrumb](self, "snapshotOfPluginBeingReplacedByBreadcrumb");
      v89 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setPreviousPluginSnapshot:", v89);

    }
  }
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v168, "marginInsets");
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v97 = v96;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
    v98 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "balloonControllerForContext:", v98);
    v99 = (void *)objc_claimAutoreleasedReturnValue();

    LOBYTE(v98) = objc_msgSend(v99, "wantsTranscriptTimestampDrawer");
    if ((v98 & 1) == 0)
    {
LABEL_103:
      v100 = 0;
      goto LABEL_106;
    }
  }
  else if (!objc_msgSend(v13, "wantsDrawerLayout"))
  {
    goto LABEL_103;
  }
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v101, "transcriptDrawerWidthForMarginInsets:", v91, v93, v95, v97);
  v100 = v97 <= v102 - v97;

LABEL_106:
  objc_msgSend(v12, "setWantsDrawerLayout:", v100);
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_opt_class();
    objc_msgSend(v12, "setIsRetractionStamp:", objc_opt_isKindOfClass() & 1);
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "notifyAnywayButton");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v103, "addTarget:action:forControlEvents:", self, sel_touchUpInsideNotifyAnywayButton_, 64);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "failureButton");
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v104, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellFailureButton_, 64);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "statusButton");
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v105, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellStatusButton_, 64);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "stampButton");
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v106, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellStampButton_, 64);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "reportSpamButton");
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v107, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellReportSpamButton_, 64);

  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v108 = v12;
    *(_QWORD *)buf = 0;
    objc_initWeak((id *)buf, self);
    v173[0] = MEMORY[0x1E0C809B0];
    v173[1] = 3221225472;
    v173[2] = __122__CKTranscriptCollectionViewController_configureCell_forCKChatItem_atIndexPath_animated_animationDuration_animationCurve___block_invoke;
    v173[3] = &unk_1E2754A88;
    objc_copyWeak(&v174, (id *)buf);
    objc_msgSend(v108, "setConversationFetcher:", v173);
    objc_msgSend(v108, "setDelegate:", self);
    objc_destroyWeak(&v174);
    objc_destroyWeak((id *)buf);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "blockContactButton");
    v109 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v109, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellBlockContactButton_, 64);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    *(_QWORD *)buf = 0;
    objc_initWeak((id *)buf, self);
    v171[0] = MEMORY[0x1E0C809B0];
    v171[1] = 3221225472;
    v171[2] = __122__CKTranscriptCollectionViewController_configureCell_forCKChatItem_atIndexPath_animated_animationDuration_animationCurve___block_invoke_2;
    v171[3] = &unk_1E2754AB0;
    objc_copyWeak(&v172, (id *)buf);
    objc_msgSend(v12, "setQuickActionButtonTappedCallback:", v171);
    objc_destroyWeak(&v172);
    objc_destroyWeak((id *)buf);
  }
  if ((objc_opt_respondsToSelector() & (v166 != 0)) == 1)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    v111 = v166 - 1;
    objc_msgSend(v110, "objectAtIndex:", v166 - 1);
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      do
      {
        v141 = v111;
        objc_msgSend(v110, "objectAtIndex:", v111);
        v113 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();
        v143 = v111-- != 0;
        v112 = v113;
      }
      while ((v143 & ~isKindOfClass & 1) != 0);
      if (!v141)
        goto LABEL_129;
    }
    else
    {
      v113 = v112;
    }
    objc_msgSend(v113, "size");
    objc_msgSend(v12, "setPrevBalloonWidth:");
LABEL_129:

  }
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v114, "disableTranscriptTimestamps") & 1) == 0)
  {
    v115 = objc_opt_respondsToSelector();

    if ((v115 & 1) == 0)
      goto LABEL_134;
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v114 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v114, "marginInsets");
    v117 = v116;
    v119 = v118;
    v121 = v120;
    v123 = v122;
    objc_msgSend(v114, "contentOffset");
    v125 = v124;
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v126 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v126, "transcriptDrawerMaxContentOffsetXForMarginInsets:", v117, v119, v121, v123);
    objc_msgSend(v12, "setDrawerPercentRevealed:", v125 / v127);

  }
LABEL_134:
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "balloonView");
    v128 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      -[CKTranscriptCollectionViewController gradientReferenceView](self, "gradientReferenceView");
      v129 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v128, "setGradientReferenceView:", v129);

    }
    objc_msgSend(v128, "setCanUseOpaqueMask:", -[CKTranscriptCollectionViewController shouldUseOpaqueMask](self, "shouldUseOpaqueMask"));
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v130 = (void *)objc_claimAutoreleasedReturnValue();
    v131 = objc_msgSend(v130, "isSwipeToReplyEnabled");

    if (v131
      && !CKIsRunningInMessagesNotificationExtension()
      && !CKIsRunningInMessagesNotificationViewService())
    {
      objc_msgSend(v128, "longPressGestureRecognizer");
      v132 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v168, "panGestureRecognizer");
      v133 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v132, "requireGestureRecognizerToFail:", v133);

    }
    -[CKTranscriptCollectionViewController audioController](self, "audioController");
    v165 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v128, "isAudioMessage"))
    {
      v134 = v128;
      objc_msgSend(v165, "currentMediaObject");
      v135 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v135, "transferGUID");
      v136 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "mediaObject");
      v137 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v137, "transferGUID");
      v138 = (void *)objc_claimAutoreleasedReturnValue();
      v139 = objc_msgSend(v136, "isEqualToString:", v138);

      if (v139)
      {
        objc_msgSend(v165, "currentMediaObjectTime");
        objc_msgSend(v134, "setTime:");
        v140 = objc_msgSend(v165, "isPlaying");
      }
      else
      {
        objc_msgSend(v134, "setTime:", 0.0);
        v140 = 0;
      }
      objc_msgSend(v134, "setPlaying:", v140);
      -[CKTranscriptCollectionViewController configureSpeakerButtonCell:forItemAtIndexPath:](self, "configureSpeakerButtonCell:forItemAtIndexPath:", v12, v170);

    }
    objc_msgSend(v128, "setDelegate:", self);
    objc_msgSend(v128, "prepareForDisplayIfNeeded");
    objc_msgSend(v168, "bounds");
    objc_msgSend(v168, "convertRect:toView:", v128);
    objc_msgSend(v128, "cullSubviewsWithVisibleBounds:");
    +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
    v144 = (void *)objc_claimAutoreleasedReturnValue();
    v145 = objc_msgSend(v144, "isPrinting");

    if ((v145 & 1) == 0)
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v146 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v146, "transcriptCollectionViewController:targetAlphaForChatItem:", self, v13);
      v148 = v147;

      if (v148 != -1.0)
        objc_msgSend(v128, "setAlpha:", v148);
    }
    v149 = +[CKApplicationState isResizing](CKApplicationState, "isResizing");
    objc_msgSend(v128, "dragInteraction");
    v150 = (void *)objc_claimAutoreleasedReturnValue();

    if (v150)
      v151 = 1;
    else
      v151 = v149;
    if ((v151 & 1) == 0)
    {
      v152 = objc_alloc(MEMORY[0x1E0CEA550]);
      -[CKTranscriptCollectionViewController dragInteractionDelegate](self, "dragInteractionDelegate");
      v153 = (void *)objc_claimAutoreleasedReturnValue();
      v154 = (void *)objc_msgSend(v152, "initWithDelegate:", v153);

      objc_msgSend(v128, "setDragInteraction:", v154);
    }

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v12, "startAnimatingActivityIndicator");
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v12, "setAnimationPauseReasons:", -[CKTranscriptCollectionViewController contentAnimationPauseReasons](self, "contentAnimationPauseReasons"));
  -[CKTranscriptCollectionViewController hiddenItems](self, "hiddenItems");
  v155 = (void *)objc_claimAutoreleasedReturnValue();
  v156 = objc_msgSend(v155, "containsIndex:", objc_msgSend(v170, "item"));

  if (v156)
    v157 = 0.0;
  else
    v157 = 1.0;
  objc_msgSend(v12, "contentView");
  v158 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v158, "setAlpha:", v157);

  -[CKTranscriptCollectionViewController _hideBalloonViewIfNecessaryForCell:indexPath:](self, "_hideBalloonViewIfNecessaryForCell:indexPath:", v12, v170);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && -[CKTranscriptCollectionViewController transitioningFromComposing](self, "transitioningFromComposing"))
  {
    objc_msgSend(v13, "IMChatItem");
    v159 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v159, "guid");
    v160 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController pluginSnapshots](self, "pluginSnapshots");
    v161 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v161, "objectForKeyedSubscript:", v160);
    v162 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v162 = 0;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v12, "balloonView");
    v163 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v163, "setPluginSnapshotView:", v162);

  }
}

id __122__CKTranscriptCollectionViewController_configureCell_forCKChatItem_atIndexPath_animated_animationDuration_animationCurve___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "conversation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void __122__CKTranscriptCollectionViewController_configureCell_forCKChatItem_atIndexPath_animated_animationDuration_animationCurve___block_invoke_2(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "quickActionButtonWasTapped:", v3);

}

- (id)_nextChatItemOfType:(Class)a3 afterIndex:(int64_t)a4 inChatItems:(id)a5
{
  id v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  void *v10;
  id v11;

  v6 = a5;
  v7 = objc_msgSend(v6, "count");
  v8 = a4 + 1;
  if (v8 >= v7)
  {
    v11 = 0;
  }
  else
  {
    v9 = v7;
    do
    {
      objc_msgSend(v6, "objectAtIndexedSubscript:", v8);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v11 = v10;
      }
      else
      {
        v11 = 0;
        ++v8;
      }

    }
    while (!v11 && v8 < v9);
  }

  return v11;
}

- (id)_previousChatItemOfType:(Class)a3 beforeIndex:(int64_t)a4 inChatItems:(id)a5
{
  int64_t v5;
  void *v7;
  id v8;

  v5 = a4 - 1;
  if (a4 < 1)
  {
    v8 = 0;
  }
  else
  {
    do
    {
      objc_msgSend(a5, "objectAtIndexedSubscript:", v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v8 = v7;
      }
      else
      {
        v8 = 0;
        --v5;
      }

    }
    while (!v8 && (v5 & 0x8000000000000000) == 0);
  }
  return v8;
}

- (void)_hideBalloonViewIfNecessaryForCell:(id)a3 indexPath:(id)a4
{
  id v6;
  void *v7;
  char isKindOfClass;
  void *v9;
  uint64_t v10;
  id v11;

  v11 = a3;
  v6 = a4;
  -[CKTranscriptCollectionViewController hiddenBalloonViews](self, "hiddenBalloonViews");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v7, "count"))
    goto LABEL_4;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    -[CKTranscriptCollectionViewController hiddenBalloonViews](self, "hiddenBalloonViews");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "containsIndex:", objc_msgSend(v6, "item"));

    objc_msgSend(v11, "balloonView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setHidden:", v10);
LABEL_4:

  }
}

- (void)_configureEditMarginInsetsForCell:(id)a3
{
  char isKindOfClass;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;

  v22 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v22;
  if ((isKindOfClass & 1) != 0)
  {
    v6 = v22;
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "_ck_setEditing:", objc_msgSend(v7, "_ck_isEditing"));

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v8, "forceMinTranscriptMarginInsets") & 1) != 0)
    {
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "minTranscriptMarginInsets");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;

    }
    else
    {
      -[CKTranscriptCollectionViewController marginInsets](self, "marginInsets");
      v11 = v18;
      v13 = v19;
      v15 = v20;
      v17 = v21;
    }

    objc_msgSend(v6, "setMarginInsets:", v11, v13, v15, v17);
    v5 = v22;
  }

}

- (void)configureAssociatedCell:(id)a3 forChatItem:(id)a4 atIndexPath:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  double v34;
  double v35;
  void *v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _BOOL8 v46;
  void *v47;
  double v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  double v53;
  double v54;
  void *v55;
  void *v56;
  void *v57;
  char v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  void *v69;
  double v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  int v75;
  void *v76;
  id v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  id v83;
  id v84;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[CKTranscriptCollectionViewController _configureEditMarginInsetsForCell:](self, "_configureEditMarginInsetsForCell:", v8);
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "layoutAttributesForItemAtIndexPath:", v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "associatedChatItemGUID");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v9, "associatedMessageRange");
  v17 = objc_msgSend(v13, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v14, v15, v16);

  if (v17 != 0x7FFFFFFFFFFFFFFFLL)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "objectAtIndex:", v17);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "contentAlignmentRect");
    v83 = 0;
    v84 = 0;
    -[CKTranscriptCollectionViewController _balloonHorizontalOffsetForParentChatItem:contentAlignmentRect:responsibleChatItems:individualOffsets:](self, "_balloonHorizontalOffsetForParentChatItem:contentAlignmentRect:responsibleChatItems:individualOffsets:", v19, &v84, &v83);
    v21 = v20;
    v22 = v84;
    v23 = v83;
    if (v21 != 0.0)
    {
      -[CKTranscriptCollectionViewController marginInsets](self, "marginInsets");
      v25 = v24;
      v27 = v26;
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "minTranscriptMarginInsets");
      v30 = v29;
      v32 = v31;

      if (v25 >= v30)
        v30 = v25;
      if (v27 < v32)
        v27 = v32;
      if (objc_msgSend(v19, "transcriptOrientation"))
      {
        if (objc_msgSend(v19, "transcriptOrientation") == 2)
        {
          if (v21 + v27 <= 0.0)
            v21 = v21 + v27;
          else
            v21 = 0.0;
        }
      }
      else
      {
        v21 = fmax(v21 - v30, 0.0);
      }
      if (objc_msgSend(v22, "containsObject:", v9))
      {
        objc_msgSend(v23, "objectAtIndex:", objc_msgSend(v22, "indexOfObject:", v9));
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "doubleValue");
        v35 = v34;

        if (objc_msgSend(v19, "transcriptOrientation"))
        {
          if (objc_msgSend(v19, "transcriptOrientation") == 2)
          {
            if (v27 + v35 <= 0.0)
              v35 = v27 + v35;
            else
              v35 = 0.0;
          }
        }
        else
        {
          v35 = fmax(v35 - v30, 0.0);
        }
        v21 = v21 + v21 - v35;
      }
      objc_msgSend(v8, "setCumulativeAssociatedOffset:", v21);
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v8, "setParentIsFromMe:", objc_msgSend(v19, "isFromMe"));
    objc_msgSend(v19, "stickerReactionInsets");
    objc_msgSend(v8, "setStickerReactionInsetsForParent:");

  }
  objc_msgSend(v12, "parentChatItemSize");
  objc_msgSend(v8, "setParentSize:");
  objc_msgSend(v12, "parentRotationOffset");
  objc_msgSend(v8, "setParentRotationOffset:");
  -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "configureForChatItem:context:animated:animationDuration:animationCurve:", v9, v36, 0, 3, 0.0);

  objc_msgSend(v8, "setDelegate:", self);
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "marginInsets");
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = 0;
  if (objc_msgSend(v9, "wantsDrawerLayout"))
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "transcriptDrawerWidthForMarginInsets:", v39, v41, v43, v45);
    v46 = v45 <= v48 - v45;

  }
  objc_msgSend(v8, "setWantsDrawerLayout:", v46);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v49, "shouldShowContactPhotosInTranscript"))
  {
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v50, "chatStyle") == 45)
      v51 = 0;
    else
      v51 = objc_msgSend(v9, "parentMessageIsFromMe") ^ 1;

  }
  else
  {
    v51 = 0;
  }

  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v8, "setWantsContactImageLayout:", v51);
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "transcriptCollectionViewController:targetAlphaForChatItem:", self, v9);
  v54 = v53;

  if (v54 != -1.0)
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v8, "balloonView");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        -[CKTranscriptCollectionViewController gradientReferenceView](self, "gradientReferenceView");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v55, "setGradientReferenceView:", v56);

      }
      objc_msgSend(v55, "setCanUseOpaqueMask:", -[CKTranscriptCollectionViewController _canUseOpaqueMask](self, "_canUseOpaqueMask"));
      objc_msgSend(v55, "setDelegate:", self);
      objc_msgSend(v55, "prepareForDisplayIfNeeded");
    }
    else
    {
      if ((objc_opt_respondsToSelector() & 1) == 0)
        goto LABEL_43;
      objc_msgSend(v8, "imageView");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v55, "setAlpha:", v54);

  }
LABEL_43:
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v57, "disableTranscriptTimestamps") & 1) == 0)
  {
    v58 = objc_opt_respondsToSelector();

    if ((v58 & 1) == 0)
      goto LABEL_47;
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "marginInsets");
    v60 = v59;
    v62 = v61;
    v64 = v63;
    v66 = v65;
    objc_msgSend(v57, "contentOffset");
    v68 = v67;
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v69, "transcriptDrawerMaxContentOffsetXForMarginInsets:", v60, v62, v64, v66);
    objc_msgSend(v8, "setDrawerPercentRevealed:", v68 / v70);

  }
LABEL_47:
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "failureButton");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v71, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellFailureButton_, 64);

  }
  -[CKTranscriptCollectionViewController setHiddenAssociatedItemsForMessageEditing:](self, "setHiddenAssociatedItemsForMessageEditing:", self->_hiddenAssociatedItemsForMessageEditing);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v72 = v8;
    objc_msgSend(v9, "guid");
    v73 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController stickerGUIDsHiddenDuringStickerAddAnimation](self, "stickerGUIDsHiddenDuringStickerAddAnimation");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    v75 = objc_msgSend(v74, "containsObject:", v73);

    if (v75)
    {
      objc_msgSend(v72, "associatedItemView");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v76, "setHidden:", 1);

    }
    v77 = objc_alloc(MEMORY[0x1E0CEA550]);
    -[CKTranscriptCollectionViewController dragInteractionDelegate](self, "dragInteractionDelegate");
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    v79 = (void *)objc_msgSend(v77, "initWithDelegate:", v78);

    objc_msgSend(v72, "associatedItemView");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v80, "setInteractions:", MEMORY[0x1E0C9AA60]);

    objc_msgSend(v72, "associatedItemView");
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v81, "addInteraction:", v79);

    objc_msgSend(v72, "associatedItemView");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v82, "setUserInteractionEnabled:", 1);

  }
}

- (double)_balloonHorizontalOffsetForParentChatItem:(id)a3 contentAlignmentRect:(CGRect)a4 responsibleChatItems:(id *)a5 individualOffsets:(id *)a6
{
  CGFloat x;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  int v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  double v42;
  void *v43;
  void *v44;
  uint64_t v48;
  void *v49;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v53;
  _OWORD v54[3];
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[128];
  uint64_t v65;

  width = a4.size.width;
  height = a4.size.height;
  y = a4.origin.y;
  x = a4.origin.x;
  v65 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v60 = 0u;
  v61 = 0u;
  v62 = 0u;
  v63 = 0u;
  objc_msgSend(v7, "visibleAssociatedMessageChatItems");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v60, v64, 16);
  if (v10)
  {
    v11 = v10;
    v53 = 0;
    v12 = *(_QWORD *)v61;
    v13 = *MEMORY[0x1E0C9D648];
    v14 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v15 = 0.0;
    do
    {
      v16 = 0;
      v48 = v11;
      do
      {
        if (*(_QWORD *)v61 != v12)
          objc_enumerationMutation(v9);
        v17 = *(void **)(*((_QWORD *)&v60 + 1) + 8 * v16);
        v59 = 0;
        v57 = 0u;
        v58 = 0u;
        v56 = 0u;
        if (v17)
          objc_msgSend(v17, "geometryDescriptor");
        v18 = objc_msgSend(v7, "transcriptOrientation");
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v17, "isReaction"))
        {
          objc_msgSend(v7, "size");
          v20 = v19;
          v22 = v21;
          objc_msgSend(v7, "stickerReactionInsets");
          +[CKAssociatedMessageChatItem locationForStickerReactionWithParentFrame:reactionIndex:parentIsFromMe:insets:](CKAssociatedMessageChatItem, "locationForStickerReactionWithParentFrame:reactionIndex:parentIsFromMe:insets:", v53, v18 == 2, v13, v14, v20, v22, v23, v24, v25, v26);
          v28 = v27;
          if (v18 == 2)
          {
            if (v27 > v20)
            {
              v29 = v27 - v20;
              objc_msgSend(v49, "addObject:", v17);
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v29);
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addObject:", v30);

              if (v29 >= v15)
                v15 = v29;
            }
          }
          else if (!v18 && v27 < 0.0)
          {
            objc_msgSend(v49, "addObject:", v17);
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v28);
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "addObject:", v31);

            if (v28 < v15)
              v15 = v28;
          }
          ++v53;
          v11 = v48;
        }
        if ((unint64_t)(v56 - 12) <= 0xFFFFFFFFFFFFFFFDLL)
        {
          objc_msgSend(v17, "size");
          v33 = v32;
          v35 = v34;
          objc_msgSend(v7, "size");
          v37 = v36;
          v39 = v38;
          v40 = objc_msgSend(v17, "transcriptOrientation");
          v54[0] = v56;
          v54[1] = v57;
          v54[2] = v58;
          v55 = v59;
          +[CKAssociatedStickerChatItem computeHorizontalStickerFrameOffset:parentSize:forPositioningWithinContentAlignmentRect:geometryDescriptor:forTranscriptOrientation:](CKAssociatedStickerChatItem, "computeHorizontalStickerFrameOffset:parentSize:forPositioningWithinContentAlignmentRect:geometryDescriptor:forTranscriptOrientation:", v54, v40, v13, v14, v33, v35, v37, v39, *(_QWORD *)&x, *(_QWORD *)&y, *(_QWORD *)&width, *(_QWORD *)&height);
          v42 = v41;
          if (v18 == 2)
          {
            if (v41 < 0.0)
            {
              objc_msgSend(v49, "addObject:", v17);
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v42);
              v44 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addObject:", v44);

            }
            if (v42 < v15)
              v15 = v42;
          }
          else if (!(_BYTE)v18)
          {
            if (v41 > 0.0)
            {
              objc_msgSend(v49, "addObject:", v17);
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v42);
              v43 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addObject:", v43);

            }
            if (v42 >= v15)
              v15 = v42;
          }
        }
        ++v16;
      }
      while (v11 != v16);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v60, v64, 16);
    }
    while (v11);
  }
  else
  {
    v15 = 0.0;
  }

  if (a5)
    *a5 = (id)objc_msgSend(v49, "copy");
  if (a6)
    *a6 = (id)objc_msgSend(v8, "copy");

  return v15;
}

- (void)_indicesOfReplyChatItemsToInsertWithoutFading:(id)a3 inserted:(id)a4 outInsertIndices:(id *)a5
{
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v7 = a4;
  v8 = objc_alloc_init(MEMORY[0x1E0CB3788]);
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __112__CKTranscriptCollectionViewController__indicesOfReplyChatItemsToInsertWithoutFading_inserted_outInsertIndices___block_invoke;
  v11[3] = &unk_1E2754AD8;
  v9 = v8;
  v12 = v9;
  objc_msgSend(v10, "enumerateObjectsAtIndexes:options:usingBlock:", v7, 0, v11);

  if (a5)
    *a5 = (id)objc_msgSend(v9, "copy");

}

void __112__CKTranscriptCollectionViewController__indicesOfReplyChatItemsToInsertWithoutFading_inserted_outInsertIndices___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = a2;
  if ((objc_msgSend(v5, "itemIsReply") & 1) != 0 || objc_msgSend(v5, "itemIsReplyContextPreview"))
    objc_msgSend(*(id *)(a1 + 32), "addIndex:", a3);

}

- (void)_indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading:(id)a3 inserted:(id)a4 removed:(id)a5 outInsertIndices:(id *)a6 outRemoveIndices:(id *)a7
{
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void *v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  unint64_t v30;
  void *v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  unint64_t v39;
  void *v40;
  _BOOL4 v41;
  void *v42;
  void *v43;
  char isKindOfClass;
  id *v45;
  id *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id obj;
  void *v54;
  _QWORD v55[4];
  id v56;
  _BYTE *v57;
  unint64_t v58;
  _QWORD v59[4];
  id v60;
  _BYTE *v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _QWORD v67[4];
  id v68;
  _QWORD v69[4];
  id v70;
  uint8_t v71[128];
  _BYTE buf[24];
  uint64_t v73;
  uint64_t v74;

  v74 = *MEMORY[0x1E0C80C00];
  v49 = a3;
  v48 = a4;
  v12 = a5;
  v45 = a7;
  v46 = a6;
  if ((unint64_t)a6 | (unint64_t)a7)
  {
    v47 = v12;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = MEMORY[0x1E0C809B0];
    v69[0] = MEMORY[0x1E0C809B0];
    v69[1] = 3221225472;
    v69[2] = __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke;
    v69[3] = &unk_1E2754AD8;
    v16 = v13;
    v70 = v16;
    objc_msgSend(v49, "enumerateObjectsAtIndexes:options:usingBlock:", v48, 0, v69);

    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v67[0] = v15;
    v67[1] = 3221225472;
    v67[2] = __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke_704;
    v67[3] = &unk_1E27500C0;
    v50 = v14;
    v68 = v50;
    objc_msgSend(v17, "enumerateObjectsAtIndexes:options:usingBlock:", v47, 0, v67);

    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    obj = v16;
    v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v71, 16);
    if (v18)
    {
      v19 = *(_QWORD *)v64;
      while (2)
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_QWORD *)v64 != v19)
            objc_enumerationMutation(obj);
          v21 = *(_QWORD *)(*((_QWORD *)&v63 + 1) + 8 * i);
          objc_msgSend(v50, "objectForKey:", v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (!v22)
          {

            goto LABEL_37;
          }
          objc_msgSend(obj, "objectForKey:", v21);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = objc_msgSend(v23, "count");
          v25 = objc_msgSend(v22, "count");
          if (v24 >= v25)
            v24 = v25;
          *(_QWORD *)buf = 0;
          *(_QWORD *)&buf[8] = buf;
          *(_QWORD *)&buf[16] = 0x2020000000;
          v73 = 0;
          v59[0] = v15;
          v59[1] = 3221225472;
          v59[2] = __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke_705;
          v59[3] = &unk_1E2754B00;
          v60 = v54;
          v61 = buf;
          v62 = v24;
          objc_msgSend(v23, "enumerateIndexesWithOptions:usingBlock:", 2, v59);
          *(_QWORD *)(*(_QWORD *)&buf[8] + 24) = 0;
          v55[0] = v15;
          v55[1] = 3221225472;
          v55[2] = __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke_2;
          v55[3] = &unk_1E2754B00;
          v56 = v52;
          v57 = buf;
          v58 = v24;
          objc_msgSend(v22, "enumerateIndexesWithOptions:usingBlock:", 2, v55);

          _Block_object_dispose(buf, 8);
        }
        v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v71, 16);
        if (v18)
          continue;
        break;
      }
    }

    if (objc_msgSend(v52, "count") && IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v52, "count"));
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v27;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v52;
        _os_log_impl(&dword_18DFCD000, v26, OS_LOG_TYPE_INFO, "The indices to remove unconsumed breadcrumbs are (count: %@): %@", buf, 0x16u);

      }
    }
    if (objc_msgSend(v54, "count") && IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v52, "count"));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v29;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v54;
        _os_log_impl(&dword_18DFCD000, v28, OS_LOG_TYPE_INFO, "The indices to insert unconsumed breadcrumbs are (count: %@): %@", buf, 0x16u);

      }
    }
    objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
    obj = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
    v50 = (id)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v54, "count"))
    {
      v30 = 0;
      do
      {
        objc_msgSend(v54, "objectAtIndexedSubscript:", v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = objc_msgSend(v31, "unsignedIntegerValue");

        objc_msgSend(v52, "objectAtIndexedSubscript:", v30);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v34 = objc_msgSend(v33, "unsignedIntegerValue");

        objc_msgSend(v49, "objectAtIndexedSubscript:", v32);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "objectAtIndexedSubscript:", v34);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v37, "IMChatItem");
        v38 = (void *)objc_claimAutoreleasedReturnValue();

        LODWORD(v36) = objc_msgSend(v35, "isFromMe");
        if ((_DWORD)v36 == objc_msgSend(v38, "isFromMe"))
        {
          v39 = v34 + 1;
          while (v39 <= v32)
          {
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            v41 = v39 < objc_msgSend(v40, "count");

            if (!v41)
              break;
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "objectAtIndex:", v39);
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            isKindOfClass = objc_opt_isKindOfClass();

            ++v39;
            if ((isKindOfClass & 1) != 0)
              goto LABEL_31;
          }
          objc_msgSend(obj, "addIndex:", v32);
          objc_msgSend(v50, "addIndex:", v34);
        }
LABEL_31:

        ++v30;
      }
      while (v30 < objc_msgSend(v54, "count"));
    }
    if (v46)
      *v46 = objc_retainAutorelease(obj);
    if (v45)
    {
      v51 = objc_retainAutorelease(v50);
      *v45 = v51;

    }
    else
    {
LABEL_37:

    }
    v12 = v47;
  }

}

void __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v10;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v10, "dataSource");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "sessionGUID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v9)
    {
      objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v9, "addIndex:", a3);
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v9, v8);

    v6 = v10;
  }

}

void __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke_704(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  char isKindOfClass;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_msgSend(v12, "IMChatItem");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  v7 = v12;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v12, "IMChatItem");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "dataSource");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "sessionGUID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v11)
    {
      objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v11, "addIndex:", a3);
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v11, v10);

    v7 = v12;
  }

}

void __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke_705(_QWORD *a1, uint64_t a2, _BYTE *a3)
{
  void *v5;
  void *v6;

  v5 = (void *)a1[4];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addObject:", v6);

  if (++*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) >= a1[6])
    *a3 = 1;
}

void __156__CKTranscriptCollectionViewController__indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading_inserted_removed_outInsertIndices_outRemoveIndices___block_invoke_2(_QWORD *a1, uint64_t a2, _BYTE *a3)
{
  void *v5;
  void *v6;

  v5 = (void *)a1[4];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addObject:", v6);

  if (++*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) >= a1[6])
    *a3 = 1;
}

- (unint64_t)_indexOfBreadcrumbReplacingTranscriptPluginInChatItems:(id)a3 inserted:(id)a4 removed:(id)a5 outIndexOfReplacedPlugin:(unint64_t *)a6 outIndexOfNewPlugin:(unint64_t *)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v23;
  _QWORD v24[4];
  id v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  id v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t *v37;
  _QWORD v38[4];
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[4];
  id v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD v48[5];
  id v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;

  v12 = a3;
  v13 = a4;
  v14 = a5;
  if (a6)
    *a6 = 0x7FFFFFFFFFFFFFFFLL;
  if (a7)
    *a7 = 0x7FFFFFFFFFFFFFFFLL;
  v50 = 0;
  v51 = &v50;
  v52 = 0x2020000000;
  v53 = 0x7FFFFFFFFFFFFFFFLL;
  v48[0] = 0;
  v48[1] = v48;
  v48[2] = 0x3032000000;
  v48[3] = __Block_byref_object_copy__38;
  v48[4] = __Block_byref_object_dispose__38;
  v49 = 0;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "count");
  v17 = MEMORY[0x1E0C809B0];
  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = __157__CKTranscriptCollectionViewController__indexOfBreadcrumbReplacingTranscriptPluginInChatItems_inserted_removed_outIndexOfReplacedPlugin_outIndexOfNewPlugin___block_invoke;
  v43[3] = &unk_1E2754B28;
  v47 = v16;
  v18 = v15;
  v44 = v18;
  v45 = &v50;
  v46 = v48;
  objc_msgSend(v14, "enumerateIndexesWithOptions:usingBlock:", 2, v43);
  v19 = v51[3];
  v20 = 0x7FFFFFFFFFFFFFFFLL;
  if (v19 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v39 = 0;
    v40 = &v39;
    v41 = 0x2020000000;
    v42 = 0x7FFFFFFFFFFFFFFFLL;
    v38[0] = 0;
    v38[1] = v38;
    v38[2] = 0x2020000000;
    v38[3] = v19;
    v33[0] = v17;
    v33[1] = 3221225472;
    v33[2] = __157__CKTranscriptCollectionViewController__indexOfBreadcrumbReplacingTranscriptPluginInChatItems_inserted_removed_outIndexOfReplacedPlugin_outIndexOfNewPlugin___block_invoke_2;
    v33[3] = &unk_1E2754B50;
    v35 = v38;
    v23 = v12;
    v21 = v12;
    v34 = v21;
    v36 = v48;
    v37 = &v39;
    objc_msgSend(v13, "enumerateIndexesUsingBlock:", v33);
    if (v40[3] != 0x7FFFFFFFFFFFFFFFLL)
    {
      v29 = 0;
      v30 = &v29;
      v31 = 0x2020000000;
      v32 = 0x7FFFFFFFFFFFFFFFLL;
      v24[0] = v17;
      v24[1] = 3221225472;
      v24[2] = __157__CKTranscriptCollectionViewController__indexOfBreadcrumbReplacingTranscriptPluginInChatItems_inserted_removed_outIndexOfReplacedPlugin_outIndexOfNewPlugin___block_invoke_3;
      v24[3] = &unk_1E2754B50;
      v26 = &v39;
      v25 = v21;
      v27 = v48;
      v28 = &v29;
      objc_msgSend(v13, "enumerateIndexesWithOptions:usingBlock:", 2, v24);
      if (a6)
        *a6 = v51[3];
      if (a7)
        *a7 = v30[3];
      v20 = v40[3];

      _Block_object_dispose(&v29, 8);
    }

    _Block_object_dispose(v38, 8);
    _Block_object_dispose(&v39, 8);
    v12 = v23;
  }

  _Block_object_dispose(v48, 8);
  _Block_object_dispose(&v50, 8);

  return v20;
}

void __157__CKTranscriptCollectionViewController__indexOfBreadcrumbReplacingTranscriptPluginInChatItems_inserted_removed_outIndexOfReplacedPlugin_outIndexOfNewPlugin___block_invoke(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (*(_QWORD *)(a1 + 56) > a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "IMChatItem");
    v11 = (id)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
      objc_msgSend(v11, "dataSource");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "sessionGUID");
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v10 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v8;

      *a3 = 1;
    }

  }
}

void __157__CKTranscriptCollectionViewController__indexOfBreadcrumbReplacingTranscriptPluginInChatItems_inserted_removed_outIndexOfReplacedPlugin_outIndexOfNewPlugin___block_invoke_2(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v6;
  void *v7;
  int v8;
  id v9;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) == a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v9, "dataSource");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "sessionGUID");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

      if (v8)
      {
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = a2;
        *a3 = 1;
      }
    }

  }
}

void __157__CKTranscriptCollectionViewController__indexOfBreadcrumbReplacingTranscriptPluginInChatItems_inserted_removed_outIndexOfReplacedPlugin_outIndexOfNewPlugin___block_invoke_3(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  void *v6;
  void *v7;
  int v8;
  id v9;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) >= a2)
  {
    *a3 = 1;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v9, "dataSource");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "sessionGUID");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

      if (v8)
      {
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = a2;
        *a3 = 1;
      }
    }

  }
}

- (void)_updatePluginPlaybackManagerForInsertedChatItems:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t j;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  id v28;
  void *v29;
  int v30;
  void *v31;
  char v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (objc_msgSend(v4, "count") && !self->_notifications)
  {
    -[CKTranscriptCollectionViewController pluginPlaybackManager](self, "pluginPlaybackManager");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    if (v33)
    {
      v31 = v4;
      objc_msgSend(MEMORY[0x1E0C99E20], "set");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v38 = 0u;
      v39 = 0u;
      v40 = 0u;
      v41 = 0u;
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "indexPathsForVisibleItems");
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v39;
        do
        {
          for (i = 0; i != v9; ++i)
          {
            if (*(_QWORD *)v39 != v10)
              objc_enumerationMutation(v7);
            v12 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * i);
            if (!objc_msgSend(v12, "section"))
            {
              -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v13, "objectAtIndex:", objc_msgSend(v12, "item"));
              v14 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v14, "IMChatItem");
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "guid");
              v16 = (void *)objc_claimAutoreleasedReturnValue();

              if (v16)
              {
                objc_msgSend(v14, "IMChatItem");
                v17 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v17, "guid");
                v18 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v5, "addObject:", v18);

              }
            }
          }
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
        }
        while (v9);
      }

      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      v19 = v31;
      v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
      if (v20)
      {
        v21 = v20;
        v32 = 0;
        v22 = *(_QWORD *)v35;
        do
        {
          for (j = 0; j != v21; ++j)
          {
            if (*(_QWORD *)v35 != v22)
              objc_enumerationMutation(v19);
            v24 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * j);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              objc_msgSend(v24, "IMChatItem");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v25, "guid");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              v27 = objc_msgSend(v5, "containsObject:", v26);

              if (v27)
              {
                v28 = v24;
                objc_msgSend(v28, "IMChatItem");
                v29 = (void *)objc_claimAutoreleasedReturnValue();
                v30 = objc_msgSend(v29, "wantsAutoPlayback");

                if (v30)
                {
                  objc_msgSend(v33, "addPluginItem:", v28);
                  v32 = 1;
                }

              }
            }
          }
          v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
        }
        while (v21);
      }
      else
      {
        v32 = 0;
      }

      if ((objc_msgSend(v33, "isPlayingBack") & 1) == 0 && (v32 & 1) != 0)
        objc_msgSend(v33, "startPlayback");

      v4 = v31;
    }
    else
    {
      -[CKTranscriptCollectionViewController pluginPlaybackDelay](self, "pluginPlaybackDelay");
      -[CKTranscriptCollectionViewController startPluginPlaybackAfterDelay:](self, "startPluginPlaybackAfterDelay:");
    }

  }
}

- (void)reloadChatItemsAtIndexes:(id)a3 animated:(BOOL)a4
{
  -[CKTranscriptCollectionViewController reloadChatItemsAtIndexes:animated:completion:](self, "reloadChatItemsAtIndexes:animated:completion:", a3, a4, 0);
}

- (void)reloadChatItemsAtIndexes:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v5;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v5 = a4;
  v8 = a5;
  v9 = a3;
  -[CKTranscriptCollectionViewController imChatItems](self, "imChatItems");
  v13 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB36B8], "indexSet");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB36B8], "indexSet");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB36B8], "indexSet");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:](self, "updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:", v13, v10, v11, v9, v12, v5, v8);

}

- (void)updateTranscriptChatItems:(id)a3 inserted:(id)a4 removed:(id)a5 reload:(id)a6 regenerate:(id)a7 animated:(BOOL)a8 checkFiltered:(BOOL)a9 completion:(id)a10
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  CKTranscriptCollectionViewController *v20;
  id v21;
  void *v22;
  void *v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  void *v30;
  CKTranscriptCollectionViewController *v31;
  void *v32;
  _BOOL4 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  uint64_t v39;

  v33 = a8;
  v39 = *MEMORY[0x1E0C80C00];
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a7;
  v20 = self;
  v21 = a10;
  if (a9)
  {
    v32 = v15;
    -[CKTranscriptCollectionViewController chat](v20, "chat");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v22, "isFiltered"))
    {
      -[CKTranscriptCollectionViewController chat](v20, "chat");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v23, "isSMS");

      v15 = v32;
      if ((v24 & 1) == 0)
      {
        v31 = v20;
        v36 = 0u;
        v37 = 0u;
        v34 = 0u;
        v35 = 0u;
        v25 = v32;
        v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
        if (v26)
        {
          v27 = v26;
          v28 = *(_QWORD *)v35;
          do
          {
            for (i = 0; i != v27; ++i)
            {
              if (*(_QWORD *)v35 != v28)
                objc_enumerationMutation(v25);
              v30 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
                objc_msgSend(v30, "setShouldDisplayRichLink:", 0);
            }
            v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
          }
          while (v27);
        }

        v15 = v32;
        v20 = v31;
      }
    }
    else
    {

      v15 = v32;
    }
  }
  -[CKTranscriptCollectionViewController updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:](v20, "updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:", v15, v16, v17, v18, v19, v33, v21);

}

- (void)updateTranscriptChatItems:(id)a3 inserted:(id)a4 removed:(id)a5 reload:(id)a6 regenerate:(id)a7 animated:(BOOL)a8 completion:(id)a9
{
  _BOOL8 v9;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v9 = a8;
  v20 = a3;
  v15 = a4;
  v16 = a5;
  v17 = a6;
  v18 = a7;
  v19 = a9;
  -[CKTranscriptCollectionViewController _updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:](self, "_updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:", v20, v15, v16, v17, v18, v9, v19);

}

- (void)_updateTranscriptChatItems:(id)a3 inserted:(id)a4 removed:(id)a5 reload:(id)a6 regenerate:(id)a7 animated:(BOOL)a8 completion:(id)a9
{
  __CFString *v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  const __CFString *v18;
  _BOOL4 v19;
  int v20;
  NSObject *v21;
  __CFString *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  __CFString *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  void *v42;
  uint64_t v43;
  NSObject *v44;
  NSIndexPath *itemIndexPathToHighlight;
  void *v46;
  void *v47;
  void *v48;
  BOOL v49;
  NSObject *v50;
  __CFString *v51;
  void *v52;
  void *v53;
  void *v54;
  _BOOL8 v55;
  void *v56;
  NSObject *v57;
  __CFString *v58;
  void *v59;
  NSObject *v60;
  os_signpost_id_t v61;
  NSObject *v62;
  NSObject *v63;
  id v64;
  id v65;
  __CFString *v66;
  id v67;
  NSObject *v68;
  _BOOL4 v69;
  void *v70;
  void *v71;
  id v72;
  __CFString *v73;
  __CFString *v74;
  id v75;
  __CFString *v76;
  _QWORD v77[4];
  NSObject *v78;
  CKTranscriptCollectionViewController *v79;
  id v80;
  __CFString *v81;
  id v82;
  id v83;
  __CFString *v84;
  id v85;
  id v86;
  __CFString *v87;
  id v88;
  id v89;
  os_signpost_id_t v90;
  BOOL v91;
  __CFString *v92;
  id v93;
  uint8_t buf[4];
  const __CFString *v95;
  __int16 v96;
  uint64_t v97;
  __int16 v98;
  void *v99;
  __int16 v100;
  void *v101;
  uint64_t v102;

  v69 = a8;
  v102 = *MEMORY[0x1E0C80C00];
  v75 = a3;
  v14 = (__CFString *)a4;
  v74 = (__CFString *)a5;
  v76 = (__CFString *)a6;
  v73 = (__CFString *)a7;
  v72 = a9;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      -[CKTranscriptCollectionViewController chat](self, "chat");
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = (void *)v16;
      v18 = CFSTR("NO");
      if (v69)
        v18 = CFSTR("YES");
      *(_DWORD *)buf = 138412546;
      v95 = v18;
      v96 = 2112;
      v97 = v16;
      _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "Beginning to update transcript chatItems (animated: %@) for chat: %@", buf, 0x16u);

    }
  }
  v19 = -[CKTranscriptCollectionViewController isInline](self, "isInline");
  v20 = IMOSLoggingEnabled();
  if (v19)
  {
    if (!v20)
      goto LABEL_16;
    OSLogHandleForIMFoundationCategory();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      -[CKTranscriptCollectionViewController chat](self, "chat");
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v70, "inlineReplyController");
      v22 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v23 = (void *)MEMORY[0x1E0CB37E8];
      -[CKTranscriptCollectionViewController imChatItems](self, "imChatItems");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "numberWithUnsignedInteger:", objc_msgSend(v24, "count"));
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v75, "count"));
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = (void *)MEMORY[0x1E0CB37E8];
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "numberWithUnsignedInteger:", objc_msgSend(v28, "count"));
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413058;
      v95 = v22;
      v96 = 2112;
      v97 = (uint64_t)v25;
      v98 = 2112;
      v99 = v26;
      v100 = 2112;
      v101 = v29;
      _os_log_impl(&dword_18DFCD000, v21, OS_LOG_TYPE_INFO, "\tTranscript Type: Inline, inlineReplyController: %@, self.imChatItems<IMChatItem *>.count:%@, imChatItems<IMChatItem *>.count:%@, self.chatItems<CKChatItem *>.count:%@", buf, 0x2Au);

    }
  }
  else
  {
    if (!v20)
      goto LABEL_16;
    OSLogHandleForIMFoundationCategory();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      v30 = (void *)MEMORY[0x1E0CB37E8];
      -[CKTranscriptCollectionViewController imChatItems](self, "imChatItems");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "numberWithUnsignedInteger:", objc_msgSend(v31, "count"));
      v32 = (__CFString *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v75, "count"));
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = (void *)MEMORY[0x1E0CB37E8];
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "numberWithUnsignedInteger:", objc_msgSend(v35, "count"));
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412802;
      v95 = v32;
      v96 = 2112;
      v97 = (uint64_t)v33;
      v98 = 2112;
      v99 = v36;
      _os_log_impl(&dword_18DFCD000, v21, OS_LOG_TYPE_INFO, "\tTranscript Type: Standard, self.imChatItems<IMChatItem *>.count:%@, imChatItems<IMChatItem *>.count:%@, self.chatItems<CKChatItem *>.count:%@", buf, 0x20u);

    }
  }

LABEL_16:
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[__CFString count](v14, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v95 = v14;
        _os_log_impl(&dword_18DFCD000, v38, OS_LOG_TYPE_INFO, "\tinserted: %@", buf, 0xCu);
      }

    }
    objc_msgSend(v37, "addObject:", v14);
  }
  if (-[__CFString count](v74, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v39 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v95 = v74;
        _os_log_impl(&dword_18DFCD000, v39, OS_LOG_TYPE_INFO, "\tremoved: %@", buf, 0xCu);
      }

    }
    objc_msgSend(v37, "addObject:", v74);
  }
  if (-[__CFString count](v76, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v40 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v95 = v76;
        _os_log_impl(&dword_18DFCD000, v40, OS_LOG_TYPE_INFO, "\treload: %@", buf, 0xCu);
      }

    }
    objc_msgSend(v37, "addObject:", v76);
  }
  if (-[__CFString count](v73, "count"))
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v41 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v95 = v73;
        _os_log_impl(&dword_18DFCD000, v41, OS_LOG_TYPE_INFO, "\tregenerate: %@", buf, 0xCu);
      }

    }
    objc_msgSend(v37, "addObject:", v73);
  }
  -[CKTranscriptCollectionViewController _itemGUIDsForItems:inIMChatItem:](self, "_itemGUIDsForItems:inIMChatItem:", v76, v75);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController imChatItems](self, "imChatItems");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = objc_msgSend(v42, "count");
  LOBYTE(v43) = v43 == objc_msgSend(v75, "count");

  if ((v43 & 1) == 0)
  {
    IMLogHandleForCategory();
    v44 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController _updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:].cold.1();

  }
  itemIndexPathToHighlight = self->_itemIndexPathToHighlight;
  self->_itemIndexPathToHighlight = 0;

  if (-[CKTranscriptCollectionViewController sizedFullTranscript](self, "sizedFullTranscript"))
  {
    -[CKTranscriptCollectionViewController view](self, "view");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "window");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "windowScene");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v48, "activationState"))
    {
      v49 = CKIsRunningUnitTests() != 0;

      LOBYTE(v69) = v49 && v69;
    }
    else
    {

    }
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = (void *)objc_msgSend(v52, "mutableCopy");

    v54 = (void *)objc_msgSend(v53, "copy");
    if (-[__CFString count](v14, "count") || -[__CFString count](v74, "count"))
    {
      v55 = 0;
    }
    else if (-[__CFString count](v76, "count"))
    {
      v55 = 1;
    }
    else
    {
      v55 = -[__CFString count](v73, "count") != 0;
    }
    -[CKTranscriptCollectionViewController setIsPerformingRegenerateOrReloadOnlyUpdate:](self, "setIsPerformingRegenerateOrReloadOnlyUpdate:", v55);
    if (!-[CKTranscriptCollectionViewController isPerformingRegenerateOrReloadOnlyUpdate](self, "isPerformingRegenerateOrReloadOnlyUpdate"))
    {
      -[CKTranscriptCollectionViewController _logChatItems:withUpdates:](self, "_logChatItems:withUpdates:", v53, v37);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v57 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v53, "count"));
          v58 = (__CFString *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v95 = v58;
          v96 = 2112;
          v97 = (uint64_t)v56;
          _os_log_impl(&dword_18DFCD000, v57, OS_LOG_TYPE_INFO, "↱ %@ chatItems before update:\n %@", buf, 0x16u);

        }
      }

    }
    -[CKTranscriptCollectionViewController _sanitizeInsertedIndices:inChatItems:withIMChatItems:](self, "_sanitizeInsertedIndices:inChatItems:withIMChatItems:", v14, v53, v75);
    v59 = (void *)objc_claimAutoreleasedReturnValue();

    IMLogHandleForCategory();
    v60 = objc_claimAutoreleasedReturnValue();
    v61 = os_signpost_id_generate(v60);
    v62 = v60;
    v63 = v62;
    if (v61 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v62))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_18DFCD000, v63, OS_SIGNPOST_INTERVAL_BEGIN, v61, "handlePluginBreadcrumbingInChatItems_all", ", buf, 2u);
    }

    v92 = v74;
    v93 = v59;
    v77[0] = MEMORY[0x1E0C809B0];
    v77[1] = 3221225472;
    v77[2] = __122__CKTranscriptCollectionViewController__updateTranscriptChatItems_inserted_removed_reload_regenerate_animated_completion___block_invoke;
    v77[3] = &unk_1E2754B78;
    v90 = v61;
    v78 = v63;
    v79 = self;
    v80 = v53;
    v81 = v74;
    v82 = v75;
    v83 = v59;
    v84 = v73;
    v91 = v69;
    v85 = v71;
    v89 = v72;
    v86 = v54;
    v87 = v76;
    v88 = v37;
    v64 = v54;
    v65 = v59;
    v66 = v74;
    v67 = v53;
    v68 = v63;
    -[CKTranscriptCollectionViewController _handlePluginBreadcrumbingInChatItems:withIMChatItems:inserted:removed:completion:](self, "_handlePluginBreadcrumbingInChatItems:withIMChatItems:inserted:removed:completion:", v67, v82, &v93, &v92, v77);
    v14 = (__CFString *)v93;

    v74 = v92;
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v50 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v51 = (__CFString *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v95 = v51;
      _os_log_impl(&dword_18DFCD000, v50, OS_LOG_TYPE_INFO, "Chat items changed before full transcript was sized\n %@", buf, 0xCu);

    }
  }

}

void __122__CKTranscriptCollectionViewController__updateTranscriptChatItems_inserted_removed_reload_regenerate_animated_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  os_signpost_id_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  int v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  double v24;
  id *v25;
  id *v26;
  void *v27;
  uint64_t v28;
  double v29;
  void *v30;
  NSObject *v31;
  void *v32;
  void *v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  NSObject *v37;
  os_signpost_id_t v38;
  NSObject *v39;
  NSObject *v40;
  os_signpost_id_t v41;
  _QWORD v42[5];
  id v43;
  id v44;
  _QWORD v45[5];
  id v46;
  id v47;
  double v48;
  char v49;
  id v50;
  id v51;
  uint8_t buf[4];
  void *v53;
  __int16 v54;
  void *v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = *(id *)(a1 + 32);
  v5 = v4;
  v6 = *(_QWORD *)(a1 + 128);
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v5, OS_SIGNPOST_INTERVAL_BEGIN, v6, "handlePluginBreadcrumbingInChatItems_completionHandler", ", buf, 2u);
  }

  objc_msgSend(*(id *)(a1 + 40), "_removeChatItemsFrom:removed:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 72);
  v50 = 0;
  v51 = v3;
  objc_msgSend(v7, "_insertChatItemsInto:withIMChatItems:inserted:insertedUnreadMessage:insertedLocalUnsentChatItem:", v9, v8, v10, &v51, &v50);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v51;

  v13 = v50;
  v49 = 0;
  objc_msgSend(*(id *)(a1 + 40), "_regenerateChatItemsIn:withIMChatItems:regenerate:shouldShowBlackholeAlert:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 80), &v49);
  objc_msgSend(*(id *)(a1 + 40), "_updateAudioControllerForInserted:chatItems:", *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "_prewarmLinkPresentationsWithChatItems:", v11);
  objc_msgSend(*(id *)(a1 + 40), "_addChatItemsToInputContextHistory:", v11);
  objc_msgSend(*(id *)(a1 + 40), "_addChatItemsToGenerativeContextHistory:", v11);
  v14 = objc_msgSend(*(id *)(a1 + 40), "_computeDesiredScrollIntentForInsertedUnreadChatItem:insertedLocalUnsentChatItem:", v12, v13);
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "transcriptScrollToBottomDuration");
  v17 = v16;

  v48 = v17;
  if (*(_BYTE *)(a1 + 136))
  {
    objc_msgSend(*(id *)(a1 + 40), "_updateTranscriptChatItemsWithAnimation:withIMChatItems:oldChatItems:insertedChatItems:inserted:removed:reload:reloadItemGUIDs:desiredScrollIntent:scrollToBottomDuration:animationCurve:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 96), v11, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 88), v14, &v48, 0, *(_QWORD *)(a1 + 120));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedInstance");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "isDiffableTranscriptDataSourceEnabled");

    v20 = *(void **)(a1 + 40);
    v21 = *(_QWORD *)(a1 + 48);
    if (v19)
      objc_msgSend(v20, "_updateSnapshotWithoutAnimation:reloadingItemGUIDs:completion:", v21, *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 120));
    else
      objc_msgSend(v20, "_updateTranscriptChatItemsWithoutAnimation:", v21);
  }
  if (v14 == 6)
  {
    v27 = *(void **)(a1 + 40);
    v28 = *(unsigned __int8 *)(a1 + 136);
    v29 = v48;
    v42[0] = MEMORY[0x1E0C809B0];
    v42[1] = 3221225472;
    v42[2] = __122__CKTranscriptCollectionViewController__updateTranscriptChatItems_inserted_removed_reload_regenerate_animated_completion___block_invoke_2;
    v42[3] = &unk_1E274A0B8;
    v42[4] = v27;
    v43 = v12;
    v44 = v13;
    objc_msgSend(v27, "scrollToBottomAnimated:withDuration:animationCurve:insertedUnreadMessage:insertedLocalUnsentChatItem:withCompletion:", v28, 0, v43, v44, v42, v29);
    v25 = &v43;
    v26 = &v44;
  }
  else
  {
    if (v14)
      goto LABEL_14;
    v22 = *(void **)(a1 + 40);
    v23 = *(unsigned __int8 *)(a1 + 136);
    v24 = v48;
    v45[0] = MEMORY[0x1E0C809B0];
    v45[1] = 3221225472;
    v45[2] = __122__CKTranscriptCollectionViewController__updateTranscriptChatItems_inserted_removed_reload_regenerate_animated_completion___block_invoke_710;
    v45[3] = &unk_1E274A0B8;
    v45[4] = v22;
    v46 = v12;
    v47 = v13;
    objc_msgSend(v22, "scrollToCurrentTimeAnimated:withDuration:animationCurve:withCompletion:", v23, 0, v45, v24);
    v25 = &v46;
    v26 = &v47;
  }

LABEL_14:
  if (v49)
    objc_msgSend(*(id *)(a1 + 40), "repromptLastBlackholeFailureIfNotPrompted");
  objc_msgSend(*(id *)(a1 + 40), "setPoppedBalloonGUIDHiddenUntilNextChatItemUpdate:", 0);
  if ((objc_msgSend(*(id *)(a1 + 40), "isPerformingRegenerateOrReloadOnlyUpdate") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "_logChatItems:withUpdates:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 112));
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 48), "count"));
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v53 = v32;
        v54 = 2112;
        v55 = v30;
        _os_log_impl(&dword_18DFCD000, v31, OS_LOG_TYPE_INFO, "↳ %@ chatItems after update:\n %@", buf, 0x16u);

      }
    }

  }
  if (!*(_BYTE *)(a1 + 136))
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedInstance");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v33, "isDiffableTranscriptDataSourceEnabled");

    if ((v34 & 1) == 0)
    {
      v35 = *(_QWORD *)(a1 + 120);
      if (v35)
        (*(void (**)(void))(v35 + 16))();
    }
  }
  v36 = *(id *)(a1 + 32);
  v37 = v36;
  v38 = *(_QWORD *)(a1 + 128);
  if (v38 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v36))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v37, OS_SIGNPOST_INTERVAL_END, v38, "handlePluginBreadcrumbingInChatItems_completionHandler", ", buf, 2u);
  }

  v39 = *(id *)(a1 + 32);
  v40 = v39;
  v41 = *(_QWORD *)(a1 + 128);
  if (v41 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v39))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v40, OS_SIGNPOST_INTERVAL_END, v41, "handlePluginBreadcrumbingInChatItems_all", ", buf, 2u);
  }

}

uint64_t __122__CKTranscriptCollectionViewController__updateTranscriptChatItems_inserted_removed_reload_regenerate_animated_completion___block_invoke_710(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "playEffectsIfNecessaryWithInsertedUnreadMessage:insertedLocalUnsentChatItem:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t __122__CKTranscriptCollectionViewController__updateTranscriptChatItems_inserted_removed_reload_regenerate_animated_completion___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "playEffectsIfNecessaryWithInsertedUnreadMessage:insertedLocalUnsentChatItem:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

- (void)_updateTranscriptChatItemsWithAnimation:(id)a3 withIMChatItems:(id)a4 oldChatItems:(id)a5 insertedChatItems:(id)a6 inserted:(id)a7 removed:(id)a8 reload:(id)a9 reloadItemGUIDs:(id)a10 desiredScrollIntent:(int64_t)a11 scrollToBottomDuration:(double *)a12 animationCurve:(int64_t)a13 completion:(id)a14
{
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  CKTranscriptCollectionViewController *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  NSObject *v33;
  NSObject *v34;
  void *v35;
  void *v36;
  int v37;
  id *v38;
  id *v39;
  id v40;
  id v41;
  void *v42;
  _BOOL8 v44;
  NSObject *v45;
  void *v46;
  char v47;
  void *v48;
  void *v49;
  char v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  _QWORD v61[5];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD aBlock[5];
  NSObject *v67;
  id v68;
  _QWORD block[4];
  id v70;
  id v71;
  id v72;
  CKTranscriptCollectionViewController *v73;
  id v74;
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v76;
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v20 = a3;
  v57 = a4;
  v59 = a5;
  v21 = a6;
  v60 = a7;
  v22 = a8;
  v58 = a9;
  v56 = a10;
  v23 = a14;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
  v24 = objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v76 = self;
      _os_log_impl(&dword_18DFCD000, v25, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: _updateTranscriptChatItemsWithAnimation", buf, 0xCu);
    }

  }
  dispatch_group_enter(v24);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v20, "count"));
      v27 = (CKTranscriptCollectionViewController *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v76 = v27;
      _os_log_impl(&dword_18DFCD000, v26, OS_LOG_TYPE_INFO, "Preparing to animate transcript updates, chatItems (count): %@", buf, 0xCu);

    }
  }
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "beginHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35360]);
  objc_msgSend(v29, "setHoldingBoundsInvalidation:", 1);
  v30 = MEMORY[0x1E0C809B0];
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __236__CKTranscriptCollectionViewController__updateTranscriptChatItemsWithAnimation_withIMChatItems_oldChatItems_insertedChatItems_inserted_removed_reload_reloadItemGUIDs_desiredScrollIntent_scrollToBottomDuration_animationCurve_completion___block_invoke;
  block[3] = &unk_1E274D1B0;
  v31 = v20;
  v70 = v31;
  v55 = v29;
  v71 = v55;
  v54 = v28;
  v72 = v54;
  v73 = self;
  v52 = v21;
  v74 = v52;
  v32 = (void *)MEMORY[0x1E0C80D38];
  dispatch_group_notify(v24, MEMORY[0x1E0C80D38], block);

  -[CKTranscriptCollectionViewController _animateChatItemRemoval:removed:](self, "_animateChatItemRemoval:removed:", v59, v22);
  -[CKTranscriptCollectionViewController _identifyIndicesNeedingCustomAnimationsForIMChatItems:inserted:removed:](self, "_identifyIndicesNeedingCustomAnimationsForIMChatItems:inserted:removed:", v57, v60, v22);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v76 = self;
      _os_log_impl(&dword_18DFCD000, v33, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: collectionViewUpdateCompletion", buf, 0xCu);
    }

  }
  dispatch_group_enter(v24);
  aBlock[0] = v30;
  aBlock[1] = 3221225472;
  aBlock[2] = __236__CKTranscriptCollectionViewController__updateTranscriptChatItemsWithAnimation_withIMChatItems_oldChatItems_insertedChatItems_inserted_removed_reload_reloadItemGUIDs_desiredScrollIntent_scrollToBottomDuration_animationCurve_completion___block_invoke_713;
  aBlock[3] = &unk_1E274CC10;
  aBlock[4] = self;
  v34 = v24;
  v67 = v34;
  v53 = v23;
  v68 = v53;
  v35 = _Block_copy(aBlock);
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "isDiffableTranscriptDataSourceEnabled");

  if (v37)
  {
    v64 = 0;
    v65 = 0;
    -[CKTranscriptCollectionViewController _updateCollectionViewSnapshotForChatItems:reloadingItemGUIDs:animatingDifferences:associatedInserted:associatedRemoved:completion:](self, "_updateCollectionViewSnapshotForChatItems:reloadingItemGUIDs:animatingDifferences:associatedInserted:associatedRemoved:completion:", v31, v56, 1, &v65, &v64, v35);
    v38 = (id *)&v64;
    v39 = (id *)&v65;
  }
  else
  {
    v62 = 0;
    v63 = 0;
    -[CKTranscriptCollectionViewController _updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:](self, "_updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:", v31, v59, v60, v22, &v63, &v62, *a12, a13, v35, v52, v53, v54, v55);
    v38 = (id *)&v62;
    v39 = (id *)&v63;
  }
  v40 = *v39;
  v41 = *v38;
  -[CKTranscriptCollectionViewController _animateChatItemReload:reload:associatedInserted:animationDuration:animationCurve:](self, "_animateChatItemReload:reload:associatedInserted:animationDuration:animationCurve:", v31, v58, v40, a13, *a12);
  v61[0] = v30;
  v61[1] = 3221225472;
  v61[2] = __236__CKTranscriptCollectionViewController__updateTranscriptChatItemsWithAnimation_withIMChatItems_oldChatItems_insertedChatItems_inserted_removed_reload_reloadItemGUIDs_desiredScrollIntent_scrollToBottomDuration_animationCurve_completion___block_invoke_714;
  v61[3] = &unk_1E274A208;
  v61[4] = self;
  v42 = (void *)MEMORY[0x1E0C80D38];
  dispatch_group_notify(v34, MEMORY[0x1E0C80D38], v61);

  v44 = a11 == 6 || a11 == 0;
  -[CKTranscriptCollectionViewController _animateChatItemInsertion:inserted:wantsScrollToBottom:scrollToBottomDuration:](self, "_animateChatItemInsertion:inserted:wantsScrollToBottom:scrollToBottomDuration:", v31, v60, v44, a12);
  -[CKTranscriptCollectionViewController _animateAssociatedChatItemWithIndices:](self, "_animateAssociatedChatItemWithIndices:", v40);
  -[CKTranscriptCollectionViewController reconfigureVisibleSpeakerButtonCells](self, "reconfigureVisibleSpeakerButtonCells");
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v45 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v76 = self;
      _os_log_impl(&dword_18DFCD000, v45, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: _updateTranscriptChatItemsWithAnimation", buf, 0xCu);
    }

  }
  dispatch_group_leave(v34);
  if (objc_msgSend(v60, "count") || objc_msgSend(v40, "count") || objc_msgSend(v58, "count"))
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = objc_opt_respondsToSelector();

    if ((v47 & 1) != 0)
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v48, "transcriptCollectionViewController:didInsertChatItems:associatedChatItems:", self, v60, v40);

    }
  }
  if (objc_msgSend(v22, "count") || objc_msgSend(v41, "count") || objc_msgSend(v58, "count"))
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = objc_opt_respondsToSelector();

    if ((v50 & 1) != 0)
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "transcriptCollectionViewController:didRemoveChatItems:associatedChatItems:", self, v22, v41);

    }
  }

}

uint64_t __236__CKTranscriptCollectionViewController__updateTranscriptChatItemsWithAnimation_withIMChatItems_oldChatItems_insertedChatItems_inserted_removed_reload_reloadItemGUIDs_desiredScrollIntent_scrollToBottomDuration_animationCurve_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "count"));
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = 138412290;
      v6 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "Completed animating transcript updates, performing clean up. chatItems (count): %@", (uint8_t *)&v5, 0xCu);

    }
  }
  objc_msgSend(*(id *)(a1 + 40), "setIndicesOfChatItemsToBeRemovedWithoutFading:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setIndicesOfChatItemsToBeInsertedWithoutFading:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setHoldingBoundsInvalidation:", 0);
  objc_msgSend(*(id *)(a1 + 48), "endHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35360]);
  return objc_msgSend(*(id *)(a1 + 56), "_updatePluginPlaybackManagerForInsertedChatItems:", *(_QWORD *)(a1 + 64));
}

void __236__CKTranscriptCollectionViewController__updateTranscriptChatItemsWithAnimation_withIMChatItems_oldChatItems_insertedChatItems_inserted_removed_reload_reloadItemGUIDs_desiredScrollIntent_scrollToBottomDuration_animationCurve_completion___block_invoke_713(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v6 = 134217984;
      v7 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: collectionViewUpdateCompletion", (uint8_t *)&v6, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  v4 = *(_QWORD *)(a1 + 48);
  if (v4)
    (*(void (**)(void))(v4 + 16))();
  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transcriptCollectionViewControllerPerformBatchUpdateCompleted:", *(_QWORD *)(a1 + 32));

}

uint64_t __236__CKTranscriptCollectionViewController__updateTranscriptChatItemsWithAnimation_withIMChatItems_oldChatItems_insertedChatItems_inserted_removed_reload_reloadItemGUIDs_desiredScrollIntent_scrollToBottomDuration_animationCurve_completion___block_invoke_714(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setIsPerformingRegenerateOrReloadOnlyUpdate:", 0);
}

- (void)_updateSnapshotWithoutAnimation:(id)a3 reloadingItemGUIDs:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  _QWORD v10[5];
  id v11;

  v8 = a5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __102__CKTranscriptCollectionViewController__updateSnapshotWithoutAnimation_reloadingItemGUIDs_completion___block_invoke;
  v10[3] = &unk_1E274C2E0;
  v10[4] = self;
  v11 = v8;
  v9 = v8;
  -[CKTranscriptCollectionViewController _updateCollectionViewSnapshotForChatItems:reloadingItemGUIDs:animatingDifferences:associatedInserted:associatedRemoved:completion:](self, "_updateCollectionViewSnapshotForChatItems:reloadingItemGUIDs:animatingDifferences:associatedInserted:associatedRemoved:completion:", a3, a4, 0, 0, 0, v10);

}

uint64_t __102__CKTranscriptCollectionViewController__updateSnapshotWithoutAnimation_reloadingItemGUIDs_completion___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "reconfigureVisibleSpeakerButtonCells");
  objc_msgSend(*(id *)(a1 + 32), "setIsPerformingRegenerateOrReloadOnlyUpdate:", 0);
  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "transcriptCollectionViewControllerPerformBatchUpdateCompleted:", *(_QWORD *)(a1 + 32));

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)_updateTranscriptChatItemsWithoutAnimation:(id)a3
{
  void *v4;
  int v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isDiffableTranscriptDataSourceEnabled");

  if (v5)
  {
    -[CKTranscriptCollectionViewController _updateSnapshotWithoutAnimation:reloadingItemGUIDs:completion:](self, "_updateSnapshotWithoutAnimation:reloadingItemGUIDs:completion:", v10, MEMORY[0x1E0C9AA60], 0);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isConsolidatedChatItemsEnabled");

    if (v7)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setChatItemsUsingReloadDataWithoutAnimation:", v10);

    }
    else
    {
      -[CKTranscriptCollectionViewController setChatItems:removedAssociatedIndexes:insertedAssociatedIndexes:](self, "setChatItems:removedAssociatedIndexes:insertedAssociatedIndexes:", v10, 0, 0);
      -[CKTranscriptCollectionViewController reloadData](self, "reloadData");
    }
    -[CKTranscriptCollectionViewController setIsPerformingRegenerateOrReloadOnlyUpdate:](self, "setIsPerformingRegenerateOrReloadOnlyUpdate:", 0);
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "transcriptCollectionViewControllerPerformBatchUpdateCompleted:", self);

  }
}

- (id)_itemGUIDsForItems:(id)a3 inIMChatItem:(id)a4
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, unint64_t);
  void *v14;
  id v15;
  id v16;

  v5 = a3;
  v6 = a4;
  if (objc_msgSend(v5, "count"))
  {
    v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v11 = MEMORY[0x1E0C809B0];
    v12 = 3221225472;
    v13 = __72__CKTranscriptCollectionViewController__itemGUIDsForItems_inIMChatItem___block_invoke;
    v14 = &unk_1E274E480;
    v15 = v6;
    v16 = v7;
    v8 = v7;
    objc_msgSend(v5, "enumerateIndexesUsingBlock:", &v11);
    v9 = (void *)objc_msgSend(v8, "copy", v11, v12, v13, v14);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v9;
}

void __72__CKTranscriptCollectionViewController__itemGUIDsForItems_inIMChatItem___block_invoke(uint64_t a1, unint64_t a2)
{
  id *v4;
  unint64_t v5;
  void *v6;
  char isKindOfClass;
  void *v8;
  NSObject *v9;
  id v10;

  v4 = (id *)(a1 + 32);
  v5 = objc_msgSend(*(id *)(a1 + 32), "count");
  if (a2 == 0x7FFFFFFFFFFFFFFFLL || v5 <= a2)
  {
    IMLogHandleForCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      __72__CKTranscriptCollectionViewController__itemGUIDsForItems_inIMChatItem___block_invoke_cold_1(v4, a2, v9);

  }
  else
  {
    objc_msgSend(*v4, "objectAtIndexedSubscript:", a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a2);
      v10 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "guid");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);

    }
  }
}

- (void)_removeChatItemsFrom:(id)a3 removed:(id)a4
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  id v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  if (objc_msgSend(v6, "count"))
  {
    objc_msgSend(v5, "removeObjectsAtIndexes:", v6);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v5, "count"));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = 138412546;
        v10 = v6;
        v11 = 2112;
        v12 = v8;
        _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_INFO, "Removed chatItems at indices: %@, chatItems (count): %@", (uint8_t *)&v9, 0x16u);

      }
    }
  }

}

- (id)_insertChatItemsInto:(id)a3 withIMChatItems:(id)a4 inserted:(id)a5 insertedUnreadMessage:(id *)a6 insertedLocalUnsentChatItem:(id *)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, void *, uint64_t);
  void *v27;
  CKTranscriptCollectionViewController *v28;
  id v29;
  id v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t);
  id v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  void (*v50)(uint64_t);
  id v51;
  uint8_t buf[4];
  id v53;
  __int16 v54;
  void *v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a5;
  if (objc_msgSend(v14, "count"))
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "traitCollectionForTranscriptCollectionViewController:", self);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v46 = 0;
    v47 = &v46;
    v48 = 0x3032000000;
    v49 = __Block_byref_object_copy__38;
    v50 = __Block_byref_object_dispose__38;
    v51 = 0;
    v40 = 0;
    v41 = &v40;
    v42 = 0x3032000000;
    v43 = __Block_byref_object_copy__38;
    v44 = __Block_byref_object_dispose__38;
    v45 = 0;
    v34 = 0;
    v35 = &v34;
    v36 = 0x3032000000;
    v37 = __Block_byref_object_copy__38;
    v38 = __Block_byref_object_dispose__38;
    v39 = 0;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v39 = (id)objc_claimAutoreleasedReturnValue();
    v24 = MEMORY[0x1E0C809B0];
    v25 = 3221225472;
    v26 = __136__CKTranscriptCollectionViewController__insertChatItemsInto_withIMChatItems_inserted_insertedUnreadMessage_insertedLocalUnsentChatItem___block_invoke;
    v27 = &unk_1E2754BA0;
    v28 = self;
    v17 = v16;
    v29 = v17;
    v18 = v12;
    v30 = v18;
    v31 = &v34;
    v32 = &v46;
    v33 = &v40;
    objc_msgSend(v13, "enumerateObjectsAtIndexes:options:usingBlock:", v14, 0, &v24);
    +[CKChatItemSizeCache sharedInstance](CKChatItemSizeCache, "sharedInstance", v24, v25, v26, v27, v28);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "invalidateCachedSizeForChatItems:reason:", v35[5], CFSTR("transcript_insert"));

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v18, "count"));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v53 = v14;
        v54 = 2112;
        v55 = v21;
        _os_log_impl(&dword_18DFCD000, v20, OS_LOG_TYPE_INFO, "Inserted chatItems at indices: %@, chatItems (count): %@", buf, 0x16u);

      }
    }
    *a6 = objc_retainAutorelease((id)v47[5]);
    *a7 = objc_retainAutorelease((id)v41[5]);
    v22 = (void *)objc_msgSend((id)v35[5], "copy");

    _Block_object_dispose(&v34, 8);
    _Block_object_dispose(&v40, 8);

    _Block_object_dispose(&v46, 8);
  }
  else
  {
    v22 = (void *)MEMORY[0x1E0C9AA60];
  }

  return v22;
}

void __136__CKTranscriptCollectionViewController__insertChatItemsInto_withIMChatItems_inserted_insertedUnreadMessage_insertedLocalUnsentChatItem___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;

  v30 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = (void *)objc_msgSend(*(id *)(a1 + 32), "newChatItemWithIMChatItem:traitCollection:", v30, *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 48), "insertObject:atIndex:", v5, a3);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v6 = v30;
      objc_msgSend(v6, "message");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "messageItem");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addObject:", v5);
      if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40)
        && (objc_msgSend(v7, "isFromMe") & 1) == 0
        && (objc_msgSend(v7, "isRead") & 1) == 0
        && (objc_msgSend(v7, "isTypingMessage") & 1) == 0)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v5);
      }
      if (objc_msgSend(v8, "unsentIsFromMeItem"))
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v5);
      }

    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v9 = v30;
      if (objc_msgSend(v9, "offerState") != 2)
      {
        objc_msgSend(MEMORY[0x1E0D35810], "sharedInstance");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "sender");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "findMyLocationForHandle:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v12, "fmfLocation");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v13;
        if (!v13)
          goto LABEL_18;
        objc_msgSend(v13, "location");
        v15 = objc_claimAutoreleasedReturnValue();
        if (!v15)
          goto LABEL_18;
        v16 = (void *)v15;
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "timestamp");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "timeIntervalSinceDate:", v18);
        v20 = v19;
        +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "locationValidInterval");
        v23 = v22;

        if (v20 > v23)
        {
LABEL_18:
          objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = objc_msgSend(v24, "applicationState");

          if (!v25)
          {
            objc_msgSend(MEMORY[0x1E0D35810], "sharedInstance");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v9, "sender");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(*(id *)(a1 + 32), "conversation");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "chat");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "refreshLocationForHandle:inChat:", v27, v29);

          }
        }

      }
    }

  }
}

- (void)_regenerateChatItemsIn:(id)a3 withIMChatItems:(id)a4 regenerate:(id)a5 shouldShowBlackholeAlert:(BOOL *)a6
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  NSObject *v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  uint8_t buf[4];
  id v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  if (objc_msgSend(v12, "count"))
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "traitCollectionForTranscriptCollectionViewController:", self);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v27 = 0;
    v28 = &v27;
    v29 = 0x2020000000;
    v30 = 0;
    v15 = (void *)objc_opt_new();
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __115__CKTranscriptCollectionViewController__regenerateChatItemsIn_withIMChatItems_regenerate_shouldShowBlackholeAlert___block_invoke;
    v22[3] = &unk_1E2754BC8;
    v22[4] = self;
    v16 = v14;
    v23 = v16;
    v17 = v15;
    v24 = v17;
    v18 = v10;
    v25 = v18;
    v26 = &v27;
    objc_msgSend(v11, "enumerateObjectsAtIndexes:options:usingBlock:", v12, 0, v22);
    +[CKChatItemSizeCache sharedInstance](CKChatItemSizeCache, "sharedInstance");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "invalidateCachedSizeForChatItems:reason:", v17, CFSTR("transcript_regenerate"));

    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v18, "count"));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v32 = v12;
        v33 = 2112;
        v34 = v21;
        _os_log_impl(&dword_18DFCD000, v20, OS_LOG_TYPE_INFO, "Regenerated chatItems at indices: %@, chatItems (count): %@", buf, 0x16u);

      }
    }
    *a6 = *((_BYTE *)v28 + 24);

    _Block_object_dispose(&v27, 8);
  }

}

void __115__CKTranscriptCollectionViewController__regenerateChatItemsIn_withIMChatItems_regenerate_shouldShowBlackholeAlert___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v8;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = (void *)objc_msgSend(*(id *)(a1 + 32), "newChatItemWithIMChatItem:traitCollection:", v8, *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v7);
    objc_msgSend(*(id *)(a1 + 56), "replaceObjectAtIndex:withObject:", a3, v7);
    if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "shouldPresentHawkingPromptForChatItem:", v8);

    v6 = v8;
  }

}

- (void)_updateAudioControllerForInserted:(id)a3 chatItems:(id)a4
{
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v8 = a3;
  v6 = a4;
  -[CKTranscriptCollectionViewController audioController](self, "audioController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __84__CKTranscriptCollectionViewController__updateAudioControllerForInserted_chatItems___block_invoke;
    v9[3] = &unk_1E274E480;
    v10 = v6;
    v11 = v7;
    objc_msgSend(v8, "enumerateIndexesUsingBlock:", v9);

  }
}

void __84__CKTranscriptCollectionViewController__updateAudioControllerForInserted_chatItems___block_invoke(uint64_t a1, uint64_t a2)
{
  char isKindOfClass;
  void *v4;
  id v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v4 = v10;
  if ((isKindOfClass & 1) != 0)
  {
    v5 = v10;
    objc_msgSend(v5, "mediaObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "shouldSuppressPreview");

    if ((v7 & 1) == 0 && (objc_msgSend(v5, "isFromMe") & 1) == 0 && (objc_msgSend(v5, "isPlayed") & 1) == 0)
    {
      v8 = *(void **)(a1 + 40);
      objc_msgSend(v5, "mediaObject");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "addMediaObject:", v9);

    }
    v4 = v10;
  }

}

- (void)_updateCollectionViewSnapshotForChatItems:(id)a3 reloadingItemGUIDs:(id)a4 animatingDifferences:(BOOL)a5 associatedInserted:(id *)a6 associatedRemoved:(id *)a7 completion:(id)a8
{
  _BOOL8 v9;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  NSObject *v22;
  id v23;
  id v24;
  NSObject *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v35;
  _QWORD v36[4];
  id v37;
  id v38;
  CKTranscriptCollectionViewController *v39;
  NSObject *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  BOOL v45;
  id v46;
  id v47;
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v49;
  uint64_t v50;

  v9 = a5;
  v50 = *MEMORY[0x1E0C80C00];
  v35 = a3;
  v32 = a4;
  v31 = a8;
  -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
  v12 = objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController dataSource](self, "dataSource");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "beginDisablingTranscriptDynamicsForReason:", CFSTR("CollectionViewDiffableSnapshotUpdate"));
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "isConsolidatedChatItemsEnabled");

  if (v16)
  {
    -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setChatItems:completion:", v35, 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v18, "inserted");
    v19 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "removed");
    v20 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v46 = 0;
    v47 = 0;
    -[CKTranscriptCollectionViewController setChatItems:removedAssociatedIndexes:insertedAssociatedIndexes:](self, "setChatItems:removedAssociatedIndexes:insertedAssociatedIndexes:", v35, &v47, &v46);
    v20 = v47;
    v19 = v46;
  }
  -[CKTranscriptCollectionViewController generateSnapshotForCKChatItems:](self, "generateSnapshotForCKChatItems:", v35);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v49 = self;
      _os_log_impl(&dword_18DFCD000, v22, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: will call applySnapshot", buf, 0xCu);
    }

  }
  dispatch_group_enter(v12);
  objc_msgSend(v14, "reloadData");
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 3221225472;
  v36[2] = __170__CKTranscriptCollectionViewController__updateCollectionViewSnapshotForChatItems_reloadingItemGUIDs_animatingDifferences_associatedInserted_associatedRemoved_completion___block_invoke;
  v36[3] = &unk_1E2754BF0;
  v23 = v13;
  v37 = v23;
  v24 = v14;
  v38 = v24;
  v39 = self;
  v25 = v12;
  v40 = v25;
  v26 = v31;
  v44 = v26;
  v27 = v32;
  v41 = v27;
  v28 = v21;
  v42 = v28;
  v29 = v30;
  v43 = v29;
  v45 = v9;
  objc_msgSend(v29, "applySnapshot:animatingDifferences:completion:", v28, v9, v36);
  if (a6)
    *a6 = objc_retainAutorelease(v19);
  if (a7)
    *a7 = objc_retainAutorelease(v20);

}

void __170__CKTranscriptCollectionViewController__updateCollectionViewSnapshotForChatItems_reloadingItemGUIDs_animatingDifferences_associatedInserted_associatedRemoved_completion___block_invoke(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  void (**v6)(_QWORD);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  void (**v11)(_QWORD);
  _QWORD aBlock[4];
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;

  v2 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __170__CKTranscriptCollectionViewController__updateCollectionViewSnapshotForChatItems_reloadingItemGUIDs_animatingDifferences_associatedInserted_associatedRemoved_completion___block_invoke_2;
  aBlock[3] = &unk_1E274CC88;
  v13 = *(id *)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(void **)(a1 + 56);
  v14 = v3;
  v15 = v4;
  v16 = v5;
  v17 = *(id *)(a1 + 88);
  v6 = (void (**)(_QWORD))_Block_copy(aBlock);
  if (objc_msgSend(*(id *)(a1 + 64), "count")
    && objc_msgSend(*(id *)(a1 + 48), "isPerformingRegenerateOrReloadOnlyUpdate"))
  {
    objc_msgSend(*(id *)(a1 + 72), "reloadItemsWithIdentifiers:", *(_QWORD *)(a1 + 64));
    v8 = *(_QWORD *)(a1 + 72);
    v7 = *(void **)(a1 + 80);
    v9 = *(unsigned __int8 *)(a1 + 96);
    v10[0] = v2;
    v10[1] = 3221225472;
    v10[2] = __170__CKTranscriptCollectionViewController__updateCollectionViewSnapshotForChatItems_reloadingItemGUIDs_animatingDifferences_associatedInserted_associatedRemoved_completion___block_invoke_727;
    v10[3] = &unk_1E274AED0;
    v11 = v6;
    objc_msgSend(v7, "applySnapshot:animatingDifferences:completion:", v8, v9, v10);

  }
  else
  {
    v6[2](v6);
  }

}

uint64_t __170__CKTranscriptCollectionViewController__updateCollectionViewSnapshotForChatItems_reloadingItemGUIDs_animatingDifferences_associatedInserted_associatedRemoved_completion___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "endDisablingTranscriptDynamicsForReason:", CFSTR("CollectionViewDiffableSnapshotUpdate"));
  objc_msgSend(*(id *)(a1 + 40), "clearParentInitialIndexesAndFinalOffsets");
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 48);
      v5 = 134217984;
      v6 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: will call applySnapshot", (uint8_t *)&v5, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
}

uint64_t __170__CKTranscriptCollectionViewController__updateCollectionViewSnapshotForChatItems_reloadingItemGUIDs_animatingDifferences_associatedInserted_associatedRemoved_completion___block_invoke_727(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)_updateCollectionViewForChatItems:(id)a3 oldChatItems:(id)a4 inserted:(id)a5 removed:(id)a6 associatedInserted:(id *)a7 associatedRemoved:(id *)a8 animationDuration:(double)a9 animationCurve:(int64_t)a10 completion:(id)a11
{
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  id v30;
  id v31;
  id v32;
  NSObject *group;
  _QWORD v36[5];
  id v37;
  id v38;
  id v39;
  _QWORD *v40;
  double v41;
  int64_t v42;
  _QWORD v43[5];
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t *v50;
  uint64_t *v51;
  _QWORD *v52;
  id v53;
  id location;
  _QWORD v55[5];
  id v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  void (*v61)(uint64_t);
  id v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  void (*v67)(uint64_t);
  id v68;
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v70;
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = a11;
  -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
  group = objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "beginDisablingTranscriptDynamicsForReason:", CFSTR("CollectionViewBatchUpdate"));
  v63 = 0;
  v64 = &v63;
  v65 = 0x3032000000;
  v66 = __Block_byref_object_copy__38;
  v67 = __Block_byref_object_dispose__38;
  v68 = 0;
  v57 = 0;
  v58 = &v57;
  v59 = 0x3032000000;
  v60 = __Block_byref_object_copy__38;
  v61 = __Block_byref_object_dispose__38;
  v62 = 0;
  v55[0] = 0;
  v55[1] = v55;
  v55[2] = 0x3032000000;
  v55[3] = __Block_byref_object_copy__38;
  v55[4] = __Block_byref_object_dispose__38;
  v56 = 0;
  location = 0;
  objc_initWeak(&location, v22);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v70 = self;
      _os_log_impl(&dword_18DFCD000, v23, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: will call performBatchUpdates", buf, 0xCu);
    }

  }
  dispatch_group_enter(group);
  v24 = MEMORY[0x1E0C809B0];
  v43[0] = MEMORY[0x1E0C809B0];
  v43[1] = 3221225472;
  v43[2] = __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke;
  v43[3] = &unk_1E2754C90;
  v43[4] = self;
  v30 = v16;
  v44 = v30;
  v50 = &v63;
  v51 = &v57;
  v52 = v55;
  v32 = v18;
  v45 = v32;
  v31 = v17;
  v46 = v31;
  objc_copyWeak(&v53, &location);
  v25 = v19;
  v47 = v25;
  v48 = v21;
  v49 = v22;
  v36[0] = v24;
  v36[1] = 3221225472;
  v36[2] = __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_5;
  v36[3] = &unk_1E2754CE0;
  v40 = v55;
  v36[4] = self;
  v26 = v49;
  v37 = v26;
  v41 = a9;
  v42 = a10;
  v27 = v48;
  v38 = v27;
  v28 = v20;
  v39 = v28;
  objc_msgSend(v26, "performBatchUpdates:completion:", v43, v36);

  objc_destroyWeak(&v53);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v70 = self;
      _os_log_impl(&dword_18DFCD000, v29, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: will call performBatchUpdates", buf, 0xCu);
    }

  }
  dispatch_group_leave(group);
  *a7 = objc_retainAutorelease((id)v64[5]);
  *a8 = objc_retainAutorelease((id)v58[5]);
  objc_destroyWeak(&location);
  _Block_object_dispose(v55, 8);

  _Block_object_dispose(&v57, 8);
  _Block_object_dispose(&v63, 8);

}

void __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  _QWORD v38[4];
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD v43[4];
  id v44;
  id v45;
  id v46;
  id v47;
  _QWORD v48[4];
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;

  objc_msgSend(*(id *)(a1 + 32), "associatedChatItems");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isConsolidatedChatItemsEnabled");

  v5 = *(void **)(a1 + 32);
  if (v4)
  {
    objc_msgSend(v5, "chatItemController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setChatItems:completion:", *(_QWORD *)(a1 + 40), 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "inserted");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    objc_msgSend(v7, "removed");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    objc_msgSend(v7, "parentItemsToReload");
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  else
  {
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
    v18 = *(void **)(v17 + 40);
    v19 = *(_QWORD *)(a1 + 40);
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v55 = *(id *)(v20 + 40);
    v56 = v18;
    objc_msgSend(v5, "setChatItems:removedAssociatedIndexes:insertedAssociatedIndexes:", v19, &v56, &v55);
    objc_storeStrong((id *)(v17 + 40), v56);
    objc_storeStrong((id *)(v20 + 40), v55);
  }
  v21 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v22 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40);
  v23 = MEMORY[0x1E0C809B0];
  v48[0] = MEMORY[0x1E0C809B0];
  v48[1] = 3221225472;
  v48[2] = __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_2;
  v48[3] = &unk_1E2754C18;
  v24 = v2;
  v49 = v24;
  v50 = *(id *)(a1 + 40);
  v51 = *(id *)(a1 + 48);
  v52 = *(id *)(a1 + 56);
  objc_copyWeak(&v54, (id *)(a1 + 112));
  v25 = v21;
  v53 = v25;
  objc_msgSend(v22, "enumerateIndexesUsingBlock:", v48);
  objc_msgSend(*(id *)(a1 + 32), "associatedChatItems");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
  v43[0] = v23;
  v43[1] = 3221225472;
  v43[2] = __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_3;
  v43[3] = &unk_1E2754C40;
  v28 = v26;
  v44 = v28;
  v45 = *(id *)(a1 + 56);
  v46 = *(id *)(a1 + 64);
  v47 = *(id *)(a1 + 72);
  objc_msgSend(v27, "enumerateIndexesUsingBlock:", v43);
  v29 = *(void **)(a1 + 80);
  objc_msgSend(*(id *)(a1 + 48), "__ck_indexPathItemsInSection:", 0);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "insertItemsAtIndexPaths:", v30);

  v31 = *(void **)(a1 + 80);
  objc_msgSend(*(id *)(a1 + 64), "__ck_indexPathItemsInSection:", 0);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "deleteItemsAtIndexPaths:", v32);

  v33 = *(void **)(a1 + 80);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "__ck_indexPathItemsInSection:", 1);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "insertItemsAtIndexPaths:", v34);

  v35 = *(void **)(a1 + 80);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40), "__ck_indexPathItemsInSection:", 1);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "deleteItemsAtIndexPaths:", v36);

  objc_msgSend(*(id *)(a1 + 80), "reloadData");
  v38[0] = v23;
  v38[1] = 3221225472;
  v38[2] = __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_4;
  v38[3] = &unk_1E2754C68;
  v37 = v24;
  v39 = v37;
  v40 = *(id *)(a1 + 40);
  objc_copyWeak(&v42, (id *)(a1 + 112));
  v41 = *(id *)(a1 + 72);
  objc_msgSend(v25, "enumerateKeysAndObjectsUsingBlock:", v38);

  objc_destroyWeak(&v42);
  objc_destroyWeak(&v54);

}

void __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id WeakRetained;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  void *v20;
  void *v21;
  id v22;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
  v22 = (id)objc_claimAutoreleasedReturnValue();
  v4 = *(void **)(a1 + 40);
  objc_msgSend(v22, "associatedChatItemGUID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v22, "associatedMessageRange");
  v8 = objc_msgSend(v4, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v5, v6, v7);

  if (v8 != 0x7FFFFFFFFFFFFFFFLL && (objc_msgSend(*(id *)(a1 + 48), "containsIndex:", v8) & 1) == 0)
  {
    v9 = *(void **)(a1 + 56);
    objc_msgSend(v22, "associatedChatItemGUID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v22, "associatedMessageRange");
    v13 = objc_msgSend(v9, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v10, v11, v12);

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v13, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "cellForItemAtIndexPath:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      v17 = *(void **)(a1 + 64);
      v18 = (void *)MEMORY[0x1E0CB37E8];
      objc_msgSend(v16, "frame");
      objc_msgSend(v18, "numberWithDouble:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "setObject:forKey:", v20, v21);

    }
  }

}

void __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_3(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", a2);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  v4 = *(void **)(a1 + 40);
  objc_msgSend(v9, "associatedChatItemGUID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v9, "associatedMessageRange");
  v8 = objc_msgSend(v4, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v5, v6, v7);

  if (v8 != 0x7FFFFFFFFFFFFFFFLL && (objc_msgSend(*(id *)(a1 + 48), "containsIndex:", v8) & 1) == 0)
    objc_msgSend(*(id *)(a1 + 56), "setInitialIndex:forParentOfAssociatedItemInsertedAtIndex:", v8, a2);

}

void __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id WeakRetained;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  id v18;

  v18 = a2;
  v5 = a3;
  objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", objc_msgSend(v18, "unsignedIntegerValue"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *(void **)(a1 + 40);
  objc_msgSend(v6, "associatedChatItemGUID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "associatedMessageRange");
  v11 = objc_msgSend(v7, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v8, v9, v10);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v11, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(WeakRetained, "cellForItemAtIndexPath:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    objc_msgSend(v5, "doubleValue");
    v16 = v15;
    objc_msgSend(v14, "frame");
    objc_msgSend(*(id *)(a1 + 48), "setVerticalOffset:forParentOfAssociatedItemDeletedAtIndex:", objc_msgSend(v18, "unsignedIntegerValue"), v16 - v17);
  }

}

void __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_5(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *);
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "__ck_indexPathItemsInSection:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = MEMORY[0x1E0C809B0];
  v7 = 3221225472;
  v8 = __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_6;
  v9 = &unk_1E2754CB8;
  v3 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = v3;
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  objc_msgSend(v2, "enumerateObjectsUsingBlock:", &v6);

  objc_msgSend(*(id *)(a1 + 32), "collectionView", v6, v7, v8, v9, v10);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "endDisablingTranscriptDynamicsForReason:", CFSTR("CollectionViewBatchUpdate"));

  objc_msgSend(*(id *)(a1 + 48), "clearParentInitialIndexesAndFinalOffsets");
  v5 = *(_QWORD *)(a1 + 56);
  if (v5)
    (*(void (**)(void))(v5 + 16))();

}

void __185__CKTranscriptCollectionViewController__updateCollectionViewForChatItems_oldChatItems_inserted_removed_associatedInserted_associatedRemoved_animationDuration_animationCurve_completion___block_invoke_6(uint64_t a1, void *a2)
{
  unint64_t v3;
  void *v4;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  v3 = objc_msgSend(v9, "item");
  objc_msgSend(*(id *)(a1 + 32), "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count");

  if (v3 < v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "chatItems");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectAtIndexedSubscript:", objc_msgSend(v9, "item"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "cellForItemAtIndexPath:", v9);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
      objc_msgSend(*(id *)(a1 + 32), "configureCell:forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:", v8, v7, v9, 0, *(_QWORD *)(a1 + 56), *(double *)(a1 + 48));

  }
}

- (void)_handlePluginBreadcrumbingInChatItems:(id)a3 withIMChatItems:(id)a4 inserted:(id *)a5 removed:(id *)a6 completion:(id)a7
{
  id v12;
  id v13;
  void (**v14)(id, _QWORD);
  unint64_t v15;
  void *v18;
  int v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char isKindOfClass;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  int v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  id *v62;
  id *v63;
  id v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void (**v73)(id, _QWORD);
  void *v74;
  id v75;
  _QWORD v76[4];
  id v77;
  CKTranscriptCollectionViewController *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void (**v85)(id, _QWORD);
  _QWORD v86[4];
  id v87;
  CKTranscriptCollectionViewController *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void (**v93)(id, _QWORD);
  _QWORD v94[5];
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  unint64_t v104;

  v12 = a3;
  v13 = a4;
  v14 = (void (**)(id, _QWORD))a7;
  v103 = 0;
  v104 = 0;
  v15 = -[CKTranscriptCollectionViewController _indexOfBreadcrumbReplacingTranscriptPluginInChatItems:inserted:removed:outIndexOfReplacedPlugin:outIndexOfNewPlugin:](self, "_indexOfBreadcrumbReplacingTranscriptPluginInChatItems:inserted:removed:outIndexOfReplacedPlugin:outIndexOfNewPlugin:", v13, *a5, *a6, &v104, &v103);
  if (v15 == 0x7FFFFFFFFFFFFFFFLL || v104 == 0x7FFFFFFFFFFFFFFFLL || v103 == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "isConsolidatedChatItemsEnabled");

    if (v19)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = (id)objc_msgSend(v20, "setChatItems:completion:", v12, 0);

      if (!v14)
        goto LABEL_33;
    }
    else
    {
      -[CKTranscriptCollectionViewController setChatItems:](self, "setChatItems:", v12);
      if (!v14)
        goto LABEL_33;
    }
    v14[2](v14, 0);
    goto LABEL_33;
  }
  v22 = v15;
  v73 = v14;
  v62 = a6;
  v63 = a5;
  v23 = *a6;
  v24 = *a5;
  v101 = 0;
  v102 = 0;
  v99 = 0;
  v100 = 0;
  CKSeparateInsertionsAndDeletions(v23, v24, v104, v22, &v102, &v101, &v100, &v99);
  v25 = v102;
  v26 = v101;
  v75 = v100;
  v27 = v99;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "traitCollectionForTranscriptCollectionViewController:", self);
  v30 = objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v104, 0);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v72 = v28;
  objc_msgSend(v28, "cellForItemAtIndexPath:", v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  v71 = v32;
  objc_msgSend(v32, "balloonView");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "snapshot");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v70 = v33;
  objc_msgSend(v33, "frame");
  objc_msgSend(v34, "setFrame:");
  v69 = v34;
  -[CKTranscriptCollectionViewController setSnapshotOfPluginBeingReplacedByBreadcrumb:](self, "setSnapshotOfPluginBeingReplacedByBreadcrumb:", v34);
  objc_msgSend(v12, "objectAtIndex:", v104);
  v35 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "removeObjectsAtIndexes:", v25);
  v36 = v13;
  objc_msgSend(v13, "objectAtIndex:", v22);
  v37 = objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v74 = (void *)v30;
  v67 = (void *)v37;
  v68 = (void *)v35;
  if ((isKindOfClass & 1) != 0)
  {
    v59 = v25;
    v39 = -[CKTranscriptCollectionViewController newChatItemWithIMChatItem:traitCollection:](self, "newChatItemWithIMChatItem:traitCollection:", v37, v30);
    objc_msgSend(v39, "setPreviousPluginChatItem:", v35);
    v40 = v12;
    objc_msgSend(v12, "insertObject:atIndex:", v39, objc_msgSend(v26, "firstIndex"));
    v95 = 0;
    v96 = &v95;
    v97 = 0x2020000000;
    v98 = v103;
    v41 = v27;
    v42 = objc_msgSend(v27, "countOfIndexesInRange:", 0);
    v43 = MEMORY[0x1E0C809B0];
    v96[3] -= v42;
    v94[0] = v43;
    v94[1] = 3221225472;
    v94[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke;
    v94[3] = &unk_1E2754D08;
    v94[4] = &v95;
    objc_msgSend(v75, "enumerateIndexesUsingBlock:", v94);
    v14 = v73;
    v44 = (void *)objc_msgSend(v26, "mutableCopy");
    v13 = v36;
    objc_msgSend(v44, "addIndex:", v96[3]);
    v61 = (void *)objc_msgSend(v44, "copy");
    v58 = v44;

    objc_msgSend(v36, "objectAtIndex:", v103);
    v45 = v59;
    v12 = v40;
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "message");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = v72;
    objc_msgSend(v36, "objectAtIndex:", v103);
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v64 = -[CKTranscriptCollectionViewController newChatItemWithIMChatItem:traitCollection:](self, "newChatItemWithIMChatItem:traitCollection:", v66, v74);
      objc_msgSend(v64, "setIsAppearing:", 1);
      objc_msgSend(v12, "insertObject:atIndex:", v64, v96[3]);
      if ((objc_msgSend(v65, "isFromMe") & 1) != 0 || (objc_msgSend(v65, "isRead") & 1) != 0)
        v60 = 0;
      else
        v60 = v64;
      v56 = v39;
      v48 = (void *)objc_msgSend(v41, "mutableCopy");
      objc_msgSend(v48, "removeIndex:", v103);
      v55 = v48;
      *v63 = (id)objc_msgSend(v48, "copy");
      v49 = (void *)objc_msgSend(v75, "mutableCopy");
      objc_msgSend(v49, "shiftIndexesStartingAtIndex:by:", v96[3], 1);
      *v62 = (id)objc_msgSend(v49, "copy");
      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      v51 = objc_msgSend(v50, "isDiffableTranscriptDataSourceEnabled");

      if (v51)
      {
        -[CKTranscriptCollectionViewController generateSnapshotForCKChatItems:](self, "generateSnapshotForCKChatItems:", v12);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController dataSource](self, "dataSource");
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        v86[0] = MEMORY[0x1E0C809B0];
        v86[1] = 3221225472;
        v86[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_2;
        v86[3] = &unk_1E2754D30;
        v87 = v56;
        v88 = self;
        v89 = v64;
        v90 = v72;
        v91 = v61;
        v93 = v73;
        v92 = v60;
        objc_msgSend(v53, "applySnapshotUsingReloadData:completion:", v52, v86);

      }
      else
      {
        v54 = (void *)MEMORY[0x1E0CEABB0];
        v76[0] = MEMORY[0x1E0C809B0];
        v76[1] = 3221225472;
        v76[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_730;
        v76[3] = &unk_1E2754D80;
        v77 = v72;
        v78 = self;
        v79 = v12;
        v80 = v59;
        v81 = v61;
        v82 = v56;
        v83 = v64;
        v85 = v73;
        v84 = v60;
        objc_msgSend(v54, "performWithoutAnimation:", v76);

        v52 = v77;
      }

      v39 = v56;
    }
    else
    {
      if (v73)
        v73[2](v73, 0);
      v60 = 0;
    }

    _Block_object_dispose(&v95, 8);
    v47 = v60;
    v26 = v61;
  }
  else
  {
    v41 = v27;
    v14 = v73;
    if (v73)
      v73[2](v73, 0);
    v47 = 0;
    v13 = v36;
    v46 = v72;
    v45 = v25;
  }

LABEL_33:
}

uint64_t __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(result + 32) + 8);
  v3 = *(_QWORD *)(v2 + 24);
  if (v3 > a2)
    *(_QWORD *)(v2 + 24) = v3 + 1;
  return result;
}

void __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD v10[5];
  NSObject *v11;
  uint8_t buf[4];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "setPreviousPluginChatItem:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setSnapshotOfPluginBeingReplacedByBreadcrumb:", 0);
  objc_msgSend(*(id *)(a1 + 48), "setIsAppearing:", 0);
  v2 = *(void **)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", objc_msgSend(*(id *)(a1 + 64), "firstIndex"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "cellForItemAtIndexPath:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 40), "updateAnimationGroup");
    v5 = objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 134217984;
        v13 = v7;
        _os_log_impl(&dword_18DFCD000, v6, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in applySnapshotUsingReloadData – will call performInsertion:", buf, 0xCu);
      }

    }
    dispatch_group_enter(v5);
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_729;
    v10[3] = &unk_1E274BE58;
    v10[4] = *(_QWORD *)(a1 + 40);
    v11 = v5;
    v8 = v5;
    objc_msgSend(v4, "performInsertion:", v10);

  }
  v9 = *(_QWORD *)(a1 + 80);
  if (v9)
    (*(void (**)(uint64_t, _QWORD))(v9 + 16))(v9, *(_QWORD *)(a1 + 72));

}

void __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_729(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in applySnapshotUsingReloadData – will call performInsertion:", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_730(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[5];
  id v15;
  id v16;
  id v17;
  id v18;

  v2 = MEMORY[0x1E0C809B0];
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_2_731;
  v14[3] = &unk_1E274D1B0;
  v3 = *(void **)(a1 + 32);
  v14[4] = *(_QWORD *)(a1 + 40);
  v15 = *(id *)(a1 + 48);
  v16 = *(id *)(a1 + 32);
  v17 = *(id *)(a1 + 56);
  v18 = *(id *)(a1 + 64);
  v6[0] = v2;
  v6[1] = 3221225472;
  v6[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_3;
  v6[3] = &unk_1E2754D58;
  v4 = *(id *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = v4;
  v8 = v5;
  v9 = *(id *)(a1 + 80);
  v10 = *(id *)(a1 + 32);
  v11 = *(id *)(a1 + 64);
  v13 = *(id *)(a1 + 96);
  v12 = *(id *)(a1 + 88);
  objc_msgSend(v3, "performBatchUpdates:completion:", v14, v6);

}

void __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_2_731(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;

  objc_msgSend(*(id *)(a1 + 32), "associatedChatItems");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isConsolidatedChatItemsEnabled");

  v5 = *(void **)(a1 + 32);
  if (v4)
  {
    objc_msgSend(v5, "chatItemController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setChatItems:completion:", *(_QWORD *)(a1 + 40), 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "inserted");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removed");
    v9 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(v5, "setChatItems:", *(_QWORD *)(a1 + 40));
    v10 = *(void **)(a1 + 32);
    v19 = 0;
    v20 = 0;
    objc_msgSend(v10, "_diffAssociatedItemsWithOldAssociatedItems:removedAssociatedIndexes:insertedAssociatedIndexes:", v2, &v20, &v19);
    v9 = v20;
    v8 = v19;
  }
  v11 = *(void **)(a1 + 48);
  objc_msgSend(v9, "__ck_indexPathItemsInSection:", 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "deleteItemsAtIndexPaths:", v12);

  v13 = *(void **)(a1 + 48);
  objc_msgSend(v8, "__ck_indexPathItemsInSection:", 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "insertItemsAtIndexPaths:", v14);

  v15 = *(void **)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 56), "__ck_indexPathItemsInSection:", 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "deleteItemsAtIndexPaths:", v16);

  v17 = *(void **)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 64), "__ck_indexPathItemsInSection:", 0);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "insertItemsAtIndexPaths:", v18);

  objc_msgSend(*(id *)(a1 + 48), "reloadData");
}

void __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_3(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD v10[5];
  NSObject *v11;
  uint8_t buf[4];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "setPreviousPluginChatItem:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setSnapshotOfPluginBeingReplacedByBreadcrumb:", 0);
  objc_msgSend(*(id *)(a1 + 48), "setIsAppearing:", 0);
  v2 = *(void **)(a1 + 56);
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", objc_msgSend(*(id *)(a1 + 64), "firstIndex"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "cellForItemAtIndexPath:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 40), "updateAnimationGroup");
    v5 = objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 134217984;
        v13 = v7;
        _os_log_impl(&dword_18DFCD000, v6, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _handlePluginBreadcrumbingInChatItems – will call performInsertion:", buf, 0xCu);
      }

    }
    dispatch_group_enter(v5);
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_732;
    v10[3] = &unk_1E274BE58;
    v10[4] = *(_QWORD *)(a1 + 40);
    v11 = v5;
    v8 = v5;
    objc_msgSend(v4, "performInsertion:", v10);

  }
  v9 = *(_QWORD *)(a1 + 80);
  if (v9)
    (*(void (**)(uint64_t, _QWORD))(v9 + 16))(v9, *(_QWORD *)(a1 + 72));

}

void __122__CKTranscriptCollectionViewController__handlePluginBreadcrumbingInChatItems_withIMChatItems_inserted_removed_completion___block_invoke_732(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _handlePluginBreadcrumbingInChatItems – will call performInsertion:", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

- (void)_animateChatItemRemoval:(id)a3 removed:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  CKTranscriptCollectionViewController *v17;
  id v18;
  uint8_t buf[4];
  id v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if (objc_msgSend(v7, "count"))
  {
    dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v6, "count"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v20 = v7;
        v21 = 2112;
        v22 = v9;
        _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, "  Animating removal of chatItems at indices: %@, oldchatItems (count): %@", buf, 0x16u);

      }
    }
    -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKChatItemSizeCache sharedInstance](CKChatItemSizeCache, "sharedInstance");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "invalidateCachedSizeForChatItems:reason:", v6, CFSTR("transcript_animated_removal"));

    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __72__CKTranscriptCollectionViewController__animateChatItemRemoval_removed___block_invoke;
    v15[3] = &unk_1E2754DA8;
    v16 = v11;
    v17 = self;
    v18 = v10;
    v13 = v10;
    v14 = v11;
    objc_msgSend(v6, "enumerateObjectsAtIndexes:options:usingBlock:", v7, 0, v15);

  }
}

void __72__CKTranscriptCollectionViewController__animateChatItemRemoval_removed___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[5];
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "cellForItemAtIndexPath:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v10 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 134217984;
        v15 = v10;
        _os_log_impl(&dword_18DFCD000, v9, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _animateChatItemRemoval – will call performRemoval:", buf, 0xCu);
      }

    }
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 48));
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __72__CKTranscriptCollectionViewController__animateChatItemRemoval_removed___block_invoke_735;
    v12[3] = &unk_1E274BE58;
    v11 = *(void **)(a1 + 48);
    v12[4] = *(_QWORD *)(a1 + 40);
    v13 = v11;
    objc_msgSend(v8, "performRemoval:", v12);

  }
}

void __72__CKTranscriptCollectionViewController__animateChatItemRemoval_removed___block_invoke_735(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateChatItemRemoval – will call performRemoval:", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

- (void)_animateChatItemReload:(id)a3 reload:(id)a4 associatedInserted:(id)a5 animationDuration:(double)a6 animationCurve:(int64_t)a7
{
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  _QWORD v23[4];
  id v24;
  CKTranscriptCollectionViewController *v25;
  id v26;
  id v27;
  double v28;
  int64_t v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  v13 = a4;
  v14 = a5;
  if (objc_msgSend(v13, "count"))
  {
    dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v12, "count"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v31 = v13;
        v32 = 2112;
        v33 = v16;
        _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "  Animating reload of chatItems at indices: %@, chatItems (count): %@", buf, 0x16u);

      }
    }
    -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "objectsAtIndexes:", v13);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKChatItemSizeCache sharedInstance](CKChatItemSizeCache, "sharedInstance");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "invalidateCachedSizeForChatItems:reason:", v19, CFSTR("transcript_animated_reload"));

    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke;
    v23[3] = &unk_1E2754DF8;
    v24 = v18;
    v25 = self;
    v26 = v17;
    v28 = a6;
    v29 = a7;
    v27 = v14;
    v21 = v17;
    v22 = v18;
    objc_msgSend(v12, "enumerateObjectsAtIndexes:options:usingBlock:", v13, 0, v23);

  }
}

void __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  NSObject *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  objc_class *v42;
  void *v43;
  void *v44;
  _QWORD v45[5];
  id v46;
  _QWORD v47[5];
  NSObject *v48;
  id v49;
  id v50;
  _QWORD v51[5];
  id v52;
  id v53;
  id v54;
  _QWORD v55[5];
  id v56;
  _QWORD v57[4];
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint8_t buf[4];
  void *v65;
  __int16 v66;
  void *v67;
  __int16 v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  _QWORD v73[4];

  v73[1] = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_opt_class();
  if (objc_msgSend(v8, "isEqual:", objc_opt_class()))
  {
    v9 = (void *)objc_opt_class();
    if (objc_msgSend(v9, "isEqual:", objc_opt_class()))
    {
      v10 = *(void **)(a1 + 32);
      v73[0] = v6;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v73, 1);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "reloadItemsAtIndexPaths:", v11);

      objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", v6);
      v12 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v12;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v13 = *(void **)(a1 + 32);
      v72 = v6;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v72, 1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "reloadItemsAtIndexPaths:", v14);

      objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", v6);
      v15 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v15;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v16 = *(void **)(a1 + 32);
      v71 = v6;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v71, 1);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "reloadItemsAtIndexPaths:", v17);

      objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", v6);
      v18 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v18;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v19 = *(void **)(a1 + 32);
      v70 = v6;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v70, 1);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "reloadItemsAtIndexPaths:", v20);

      objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", v6);
      v21 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v21;
    }
  }
  if (v7)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v5, "itemIsReply"))
      objc_msgSend(v7, "setSuppressAnimationsForLineUpdates:", 1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        v23 = *(void **)(a1 + 40);
        *(_DWORD *)buf = 134217984;
        v65 = v23;
        _os_log_impl(&dword_18DFCD000, v22, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _animateChatItemReload – will call performReload:", buf, 0xCu);
      }

    }
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 48));
    v24 = MEMORY[0x1E0C809B0];
    v57[0] = MEMORY[0x1E0C809B0];
    v57[1] = 3221225472;
    v57[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_745;
    v57[3] = &unk_1E2750BB8;
    v25 = v7;
    v26 = *(_QWORD *)(a1 + 40);
    v58 = v25;
    v59 = v26;
    v60 = v5;
    v27 = v6;
    v61 = v27;
    v62 = *(_QWORD *)(a1 + 64);
    v63 = *(_QWORD *)(a1 + 72);
    v55[0] = v24;
    v55[1] = 3221225472;
    v29 = *(_QWORD *)(a1 + 40);
    v28 = *(void **)(a1 + 48);
    v55[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_2;
    v55[3] = &unk_1E274BE58;
    v55[4] = v29;
    v56 = v28;
    objc_msgSend(v25, "performReload:completion:", v57, v55);
    if (!objc_msgSend(v27, "section"))
    {
      objc_msgSend(*(id *)(a1 + 40), "chatItems");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "objectAtIndexedSubscript:", objc_msgSend(v27, "item"));
      v31 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v31, "visibleAssociatedMessageChatItems");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v51[0] = v24;
      v51[1] = 3221225472;
      v51[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_746;
      v51[3] = &unk_1E2754DD0;
      v51[4] = *(_QWORD *)(a1 + 40);
      v52 = *(id *)(a1 + 56);
      v53 = *(id *)(a1 + 48);
      v54 = v25;
      objc_msgSend(v32, "enumerateObjectsUsingBlock:", v51);

      objc_msgSend(v31, "messageHighlightChatItem");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      if (v33)
      {
        v34 = (void *)MEMORY[0x1E0CB36B0];
        objc_msgSend(*(id *)(a1 + 40), "associatedChatItems");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "indexPathForItem:inSection:", objc_msgSend(v35, "indexOfObject:", v33), 1);
        v36 = (void *)objc_claimAutoreleasedReturnValue();

        if ((objc_msgSend(*(id *)(a1 + 56), "containsIndex:", objc_msgSend(v36, "row")) & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", v36);
            v37 = objc_claimAutoreleasedReturnValue();
            if (v37)
            {
              objc_msgSend(*(id *)(a1 + 40), "collectionViewLayout");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "updateAssociatedLayoutAttributesIfNecessary");

              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v39 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
                {
                  v40 = *(void **)(a1 + 40);
                  *(_DWORD *)buf = 134217984;
                  v65 = v40;
                  _os_log_impl(&dword_18DFCD000, v39, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _animateChatItemReload – will call performReload: on CKAssociatedMessageTranscriptCell", buf, 0xCu);
                }

              }
              dispatch_group_enter(*(dispatch_group_t *)(a1 + 48));
              v47[0] = v24;
              v47[1] = 3221225472;
              v47[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_750;
              v47[3] = &unk_1E274B060;
              v47[4] = *(_QWORD *)(a1 + 40);
              v37 = v37;
              v48 = v37;
              v49 = v33;
              v50 = v36;
              v45[0] = v24;
              v45[1] = 3221225472;
              v45[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_2_751;
              v45[3] = &unk_1E274BE58;
              v41 = *(void **)(a1 + 48);
              v45[4] = *(_QWORD *)(a1 + 40);
              v46 = v41;
              -[NSObject performReload:completion:](v37, "performReload:completion:", v47, v45);

            }
          }
          else
          {
            IMLogHandleForCategory();
            v37 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
            {
              v42 = (objc_class *)objc_opt_class();
              NSStringFromClass(v42);
              v43 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "messageHighlightChatItem");
              v44 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412802;
              v65 = v36;
              v66 = 2112;
              v67 = v43;
              v68 = 2112;
              v69 = v44;
              _os_log_error_impl(&dword_18DFCD000, v37, OS_LOG_TYPE_ERROR, "2 Cell for indexPath %@ was of type %@, expected CKAssociatedMessageTranscriptCell. Not reloading. cellChatItem.messageHighlightChatItem: %@", buf, 0x20u);

            }
          }

        }
      }

    }
  }

}

uint64_t __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_745(uint64_t a1)
{
  double v2;

  objc_msgSend(*(id *)(a1 + 32), "bounds");
  return objc_msgSend(*(id *)(a1 + 40), "configureCell:forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v2 >= 5.0, *(_QWORD *)(a1 + 72), *(double *)(a1 + 64));
}

void __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateChatItemReload – will call performReload:", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_746(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[5];
  id v18;
  _QWORD v19[5];
  id v20;
  id v21;
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "associatedChatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "containsObject:", v3);

  if (v5)
  {
    v6 = (void *)MEMORY[0x1E0CB36B0];
    objc_msgSend(*(id *)(a1 + 32), "associatedChatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "indexPathForItem:inSection:", objc_msgSend(v7, "indexOfObject:", v3), 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(*(id *)(a1 + 40), "containsIndex:", objc_msgSend(v8, "row")) & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "cellForAssociatedChatItem:", v3);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (v9)
      {
        objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "isStickerRepositioningEnabled");

        if (v11
          && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
          && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
          && objc_msgSend(v3, "chatItemIsStickerReposition"))
        {
          objc_msgSend(*(id *)(a1 + 32), "_animateStickerRepositionWithAssociatedChatItem:associatedCell:associatedIndexPath:", v3, v9, v8);
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            objc_msgSend(*(id *)(a1 + 32), "collectionViewLayout");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "updateAssociatedLayoutAttributesIfNecessary");

            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v13 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
              {
                v14 = *(_QWORD *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                v24 = v14;
                _os_log_impl(&dword_18DFCD000, v13, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _animateChatItemReload – will call performReload: to configureAssociatedCell", buf, 0xCu);
              }

            }
            dispatch_group_enter(*(dispatch_group_t *)(a1 + 48));
            v15 = *(void **)(a1 + 56);
            v16 = MEMORY[0x1E0C809B0];
            v19[0] = MEMORY[0x1E0C809B0];
            v19[1] = 3221225472;
            v19[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_747;
            v19[3] = &unk_1E274B060;
            v19[4] = *(_QWORD *)(a1 + 32);
            v20 = v9;
            v21 = v3;
            v22 = v8;
            v17[0] = v16;
            v17[1] = 3221225472;
            v17[2] = __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_2_748;
            v17[3] = &unk_1E274BE58;
            v17[4] = *(_QWORD *)(a1 + 32);
            v18 = *(id *)(a1 + 48);
            objc_msgSend(v15, "performReload:completion:", v19, v17);

          }
        }
      }

    }
  }

}

uint64_t __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_747(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "configureAssociatedCell:forChatItem:atIndexPath:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_2_748(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateChatItemReload – will call performReload: to configureAssociatedCell", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_750(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "configureAssociatedCell:forChatItem:atIndexPath:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void __122__CKTranscriptCollectionViewController__animateChatItemReload_reload_associatedInserted_animationDuration_animationCurve___block_invoke_2_751(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateChatItemReload – will call performReload: on CKAssociatedMessageTranscriptCell", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

- (void)_animateChatItemInsertion:(id)a3 inserted:(id)a4 wantsScrollToBottom:(BOOL)a5 scrollToBottomDuration:(double *)a6
{
  _BOOL4 v6;
  id v9;
  id v10;
  NSObject *v11;
  const __CFString *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  double v25;
  void *v26;
  int v27;
  uint64_t v28;
  double v29;
  void *v30;
  double v31;
  uint64_t v32;
  _BOOL4 v33;
  _QWORD v35[5];
  id v36;
  _QWORD *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  _QWORD v41[3];
  CFTimeInterval v42;
  _QWORD v43[4];
  id v44;
  _BYTE *v45;
  _BYTE buf[24];
  uint64_t (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t);
  id v49;
  uint64_t v50;

  v6 = a5;
  v50 = *MEMORY[0x1E0C80C00];
  v9 = a3;
  v10 = a4;
  if (objc_msgSend(v10, "count"))
  {
    v33 = v6;
    dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        if (-[CKTranscriptCollectionViewController isInline](self, "isInline"))
          v12 = CFSTR("YES");
        else
          v12 = CFSTR("NO");
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v9, "count"));
        v13 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        *(_QWORD *)&buf[4] = v12;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v10;
        *(_WORD *)&buf[22] = 2112;
        v47 = v13;
        _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "\t(Inline: %@) Animating insertion of chatItems at indices: %@, chatItems (count): %@", buf, 0x20u);

      }
    }
    -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v47 = __Block_byref_object_copy__38;
    v48 = __Block_byref_object_dispose__38;
    v49 = 0;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v49 = (id)objc_claimAutoreleasedReturnValue();
    v43[0] = MEMORY[0x1E0C809B0];
    v43[1] = 3221225472;
    v43[2] = __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke;
    v43[3] = &unk_1E274C218;
    v16 = v15;
    v44 = v16;
    v45 = buf;
    objc_msgSend(v9, "enumerateObjectsAtIndexes:options:usingBlock:", v10, 0, v43);
    objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "indexesOfObjectsPassingTest:", &__block_literal_global_753);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v17, "count"))
    {
      v21 = 0;
      v20 = 0.0;
      v22 = 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_15;
    }
    v18 = objc_msgSend(v17, "lastIndex");
    objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "objectAtIndex:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = 0.0;
    if (!objc_msgSend(v19, "isReply") || (objc_msgSend(v19, "isFromMe") & 1) != 0)
    {
      v21 = 0;
      v22 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_13:

LABEL_15:
      v41[0] = 0;
      v41[1] = v41;
      v41[2] = 0x2020000000;
      v42 = 0.0;
      v42 = CACurrentMediaTime();
      v23 = *(void **)(*(_QWORD *)&buf[8] + 40);
      v35[0] = MEMORY[0x1E0C809B0];
      v35[1] = 3221225472;
      v35[2] = __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke_3;
      v35[3] = &unk_1E2754E40;
      v37 = v41;
      v38 = v21;
      v39 = v20;
      v40 = v22;
      v35[4] = self;
      v24 = v14;
      v36 = v24;
      objc_msgSend(v23, "enumerateObjectsUsingBlock:", v35);

      _Block_object_dispose(v41, 8);
      _Block_object_dispose(buf, 8);

      goto LABEL_16;
    }
    v21 = objc_msgSend(v19, "insertionAnimationType");
    objc_msgSend(v19, "insertionDurationForInsertionType:", v21);
    v20 = v25;
    if ((unint64_t)objc_msgSend(v17, "count") < 2)
    {
      v22 = 0x7FFFFFFFFFFFFFFFLL;
      if (!v33)
        goto LABEL_13;
      v29 = 0.0;
      if (v21 == 2)
        goto LABEL_13;
    }
    else
    {
      v22 = objc_msgSend(v17, "firstIndex");
      objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "objectAtIndex:", v22);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = objc_msgSend(v26, "isReplyContextPreview");
      v28 = 0x7FFFFFFFFFFFFFFFLL;
      if (v27)
        v28 = v22;
      v32 = v28;

      if (!v33 || v21 == 2)
      {
        v22 = v32;
        goto LABEL_13;
      }
      if (v32 == 0x7FFFFFFFFFFFFFFFLL)
      {
        v29 = 0.0;
        v22 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else
      {
        +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "fadeInReplyPreviewAnimationDuration");
        v29 = v31;

      }
    }
    *a6 = v20 + v29;
    goto LABEL_13;
  }
LABEL_16:

}

void __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "cellForItemAtIndexPath:", v5);
  v7 = (id)objc_claimAutoreleasedReturnValue();

  v6 = v7;
  if (v7)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v7);
    v6 = v7;
  }

}

uint64_t __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  char isKindOfClass;

  v2 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke_3(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];
  id v10;
  uint8_t buf[4];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_msgSend(v5, "setInsertionType:", *(_QWORD *)(a1 + 56));
  objc_msgSend(v5, "setInsertionDuration:", *(double *)(a1 + 64));
  objc_msgSend(v5, "setInsertionBeginTime:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  if (*(_QWORD *)(a1 + 72) != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v5, "setInsertingWithReplyPreview:", 1);
    objc_msgSend(v5, "setInsertingBeforeReplyPreview:", *(_QWORD *)(a1 + 72) > a3);
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      v12 = v7;
      _os_log_impl(&dword_18DFCD000, v6, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _animateChatItemInsertion – will call performInsertion:", buf, 0xCu);
    }

  }
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke_754;
  v9[3] = &unk_1E274BE58;
  v8 = *(void **)(a1 + 40);
  v9[4] = *(_QWORD *)(a1 + 32);
  v10 = v8;
  objc_msgSend(v5, "performInsertion:", v9);

}

void __118__CKTranscriptCollectionViewController__animateChatItemInsertion_inserted_wantsScrollToBottom_scrollToBottomDuration___block_invoke_754(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateChatItemInsertion – will call performInsertion:", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

- (void)_animateAssociatedChatItemWithIndices:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;

  v13 = a3;
  if (objc_msgSend(v13, "count"))
  {
    -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "currentlyFocusedChatItemForTapbackInTranscriptCollectionViewController:", self);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "tapbacksChatItem");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __78__CKTranscriptCollectionViewController__animateAssociatedChatItemWithIndices___block_invoke;
    v14[3] = &unk_1E2754DA8;
    v15 = v5;
    v16 = v4;
    v17 = v8;
    v10 = v8;
    v11 = v4;
    v12 = v5;
    objc_msgSend(v9, "enumerateObjectsAtIndexes:options:usingBlock:", v13, 0, v14);

  }
}

void __78__CKTranscriptCollectionViewController__animateAssociatedChatItemWithIndices___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void *v20;
  id v21;
  uint64_t v22;
  uint8_t buf[4];
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "cellForItemAtIndexPath:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134217984;
        v24 = a3;
        _os_log_impl(&dword_18DFCD000, v9, OS_LOG_TYPE_INFO, "Entering updateAnimationGroup: in _animateAssociatedChatItemWithIndices at index: %lu", buf, 0xCu);
      }

    }
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    v17 = MEMORY[0x1E0C809B0];
    v18 = 3221225472;
    v19 = __78__CKTranscriptCollectionViewController__animateAssociatedChatItemWithIndices___block_invoke_755;
    v20 = &unk_1E274F528;
    v22 = a3;
    v21 = *(id *)(a1 + 40);
    v10 = _Block_copy(&v17);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v5, "IMChatItem", v17, v18, v19, v20);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "guid");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 48), "IMChatItem");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "guid");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v12, "isEqual:", v14);

      if (v15 && IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 134217984;
          v24 = a3;
          _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "Skipping insertion animation for index: %lu", buf, 0xCu);
        }

      }
      objc_msgSend(v8, "performInsertion:animated:", v10, v15 ^ 1u);
    }
    else
    {
      objc_msgSend(v8, "performInsertion:", v10, v17, v18, v19, v20);
    }

  }
}

void __78__CKTranscriptCollectionViewController__animateAssociatedChatItemWithIndices___block_invoke_755(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 40);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "Leaving updateAnimationGroup: in _animateAssociatedChatItemWithIndices at index: %lu", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

- (void)_animateStickerRepositionWithAssociatedChatItem:(id)a3 associatedCell:(id)a4 associatedIndexPath:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  void (**v22)(void *, void *);
  void *v23;
  id v24;
  double v25;
  double v26;
  void *v27;
  void *v28;
  _QWORD v29[4];
  id v30;
  _QWORD aBlock[5];
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  char v37;
  char v38;
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v40;
  _QWORD v41[2];

  v41[1] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  objc_msgSend(v9, "associatedItemView");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
  v12 = objc_claimAutoreleasedReturnValue();
  v41[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKChatItem unloadSizesOfChatItems:](CKChatItem, "unloadSizesOfChatItems:", v13);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v40 = self;
      _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in _animateStickerRepositionWithAssociatedChatItem", buf, 0xCu);
    }

  }
  dispatch_group_enter(v12);
  v15 = objc_msgSend(v8, "currentStickerRepositionIsLocalReposition");
  objc_msgSend(v8, "clearStickerRepositionLocalState");
  v16 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke;
  aBlock[3] = &unk_1E2754E68;
  aBlock[4] = self;
  v17 = v9;
  v32 = v17;
  v18 = v11;
  v33 = v18;
  v19 = v8;
  v34 = v19;
  v20 = v10;
  v35 = v20;
  v37 = v15;
  v38 = 0;
  v21 = v12;
  v36 = v21;
  v22 = (void (**)(void *, void *))_Block_copy(aBlock);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v18, "image");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v22[2](v22, v23);
  }
  else
  {
    v24 = objc_alloc(MEMORY[0x1E0CEA610]);
    objc_msgSend(v18, "bounds");
    v27 = (void *)objc_msgSend(v24, "initWithSize:", v25, v26);
    v29[0] = v16;
    v29[1] = 3221225472;
    v29[2] = __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke_761;
    v29[3] = &unk_1E274A3D0;
    v30 = v18;
    objc_msgSend(v27, "imageWithActions:", v29);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    v22[2](v22, v28);
    v23 = v30;
  }

}

void __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  CKBalloonImageView *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v20[4];
  CKBalloonImageView *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  CATransform3D v26;
  CATransform3D v27;
  CGAffineTransform v28;
  CATransform3D v29;
  CGAffineTransform transform;
  CGAffineTransformComponents v31;
  CGAffineTransform m;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = objc_alloc_init(CKBalloonImageView);
  -[CKBalloonImageView setContentMode:](v4, "setContentMode:", 1);
  -[CKBalloonImageView setImage:](v4, "setImage:", v3);
  objc_msgSend(*(id *)(a1 + 32), "view");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addSubview:", v4);

  v6 = *(void **)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "center");
  v8 = v7;
  v10 = v9;
  objc_msgSend(*(id *)(a1 + 32), "view");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "convertPoint:toView:", v11, v8, v10);
  -[CKBalloonImageView setCenter:](v4, "setCenter:");

  objc_msgSend(*(id *)(a1 + 48), "bounds");
  -[CKBalloonImageView setBounds:](v4, "setBounds:");
  memset(&v31, 0, sizeof(v31));
  objc_msgSend(*(id *)(a1 + 48), "layer");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v12)
    objc_msgSend(v12, "transform");
  else
    memset(&v29, 0, sizeof(v29));
  CATransform3DGetAffineTransform(&transform, &v29);
  CGAffineTransformDecompose(&v31, &transform);

  memset(&v28, 0, sizeof(v28));
  CGAffineTransformMakeRotation(&v28, v31.rotation);
  m = v28;
  CATransform3DMakeAffineTransform(&v27, &m);
  -[CKBalloonImageView layer](v4, "layer");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = v27;
  objc_msgSend(v14, "setTransform:", &v26);

  objc_msgSend(*(id *)(a1 + 40), "setHidden:", 1);
  objc_msgSend(*(id *)(a1 + 48), "setHidden:", 1);
  objc_msgSend(*(id *)(a1 + 56), "refreshMediaObjectForStickerRepositioning");
  objc_msgSend(*(id *)(a1 + 32), "collectionViewLayout");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "updateAssociatedLayoutAttributesIfNecessary");

  objc_msgSend(*(id *)(a1 + 32), "configureAssociatedCell:forChatItem:atIndexPath:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 40), "setNeedsLayout");
  if (*(_BYTE *)(a1 + 80) || *(_BYTE *)(a1 + 81))
  {
    objc_msgSend(*(id *)(a1 + 40), "setHidden:", 0);
    objc_msgSend(*(id *)(a1 + 48), "setHidden:", 0);
    -[CKBalloonImageView removeFromSuperview](v4, "removeFromSuperview");
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v17 = *(_QWORD *)(a1 + 32);
        LODWORD(m.a) = 134217984;
        *(_QWORD *)((char *)&m.a + 4) = v17;
        _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateStickerRepositionWithAssociatedChatItem - isLocalReposition || isWatchOS", (uint8_t *)&m, 0xCu);
      }

    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
  }
  else
  {
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 3221225472;
    v20[2] = __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke_758;
    v20[3] = &unk_1E274D1B0;
    v21 = v4;
    v22 = *(id *)(a1 + 40);
    v18 = *(id *)(a1 + 48);
    v19 = *(_QWORD *)(a1 + 32);
    v23 = v18;
    v24 = v19;
    v25 = *(id *)(a1 + 72);
    -[UIView ck_performHideAnimated:completion:](v21, "ck_performHideAnimated:completion:", 1, v20);

  }
}

void __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke_758(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  CATransform3D v21;
  CGAffineTransform m;
  CATransform3D v23;
  CGAffineTransform v24;
  CATransform3D v25;
  CGAffineTransform transform;
  CGAffineTransformComponents v27;

  v2 = *(void **)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "center");
  v4 = v3;
  v6 = v5;
  objc_msgSend(*(id *)(a1 + 56), "view");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "convertPoint:toView:", v7, v4, v6);
  objc_msgSend(*(id *)(a1 + 32), "setCenter:");

  objc_msgSend(*(id *)(a1 + 48), "bounds");
  objc_msgSend(*(id *)(a1 + 32), "setBounds:");
  memset(&v27, 0, sizeof(v27));
  objc_msgSend(*(id *)(a1 + 48), "layer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
    objc_msgSend(v8, "transform");
  else
    memset(&v25, 0, sizeof(v25));
  CATransform3DGetAffineTransform(&transform, &v25);
  CGAffineTransformDecompose(&v27, &transform);

  memset(&v24, 0, sizeof(v24));
  CGAffineTransformMakeRotation(&v24, v27.rotation);
  m = v24;
  CATransform3DMakeAffineTransform(&v23, &m);
  objc_msgSend(*(id *)(a1 + 32), "layer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = v23;
  objc_msgSend(v10, "setTransform:", &v21);

  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke_2;
  v15[3] = &unk_1E274D1B0;
  v11 = *(void **)(a1 + 32);
  v16 = *(id *)(a1 + 40);
  v17 = *(id *)(a1 + 48);
  v12 = *(id *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(void **)(a1 + 64);
  v18 = v12;
  v19 = v13;
  v20 = v14;
  objc_msgSend(v11, "ck_performRevealAnimated:completion:", 1, v15);

}

void __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "setHidden:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setHidden:", 0);
  objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 56);
      v4 = 134217984;
      v5 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in _animateStickerRepositionWithAssociatedChatItem - ck_performRevealAnimated completion", (uint8_t *)&v4, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

uint64_t __123__CKTranscriptCollectionViewController__animateStickerRepositionWithAssociatedChatItem_associatedCell_associatedIndexPath___block_invoke_761(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v1, "drawViewHierarchyInRect:afterScreenUpdates:", 0);
}

- (id)_sanitizeInsertedIndices:(id)a3 inChatItems:(id)a4 withIMChatItems:(id)a5
{
  id v8;
  id v9;
  id v10;
  __CFString *v11;
  __CFString *v12;
  unint64_t v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  const __CFString *v21;
  void *v22;
  int v23;
  const __CFString *v24;
  __int16 v25;
  __CFString *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = (__CFString *)v8;
  v12 = v11;
  if (-[__CFString count](v11, "count"))
  {
    v13 = -[__CFString firstIndex](v11, "firstIndex");
    v12 = v11;
    if (v13 > objc_msgSend(v9, "count"))
    {
      IMLogHandleForCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        if (-[CKTranscriptCollectionViewController isInline](self, "isInline"))
          v21 = CFSTR("YES");
        else
          v21 = CFSTR("NO");
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v9, "count"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = 138412802;
        v24 = v21;
        v25 = 2112;
        v26 = v11;
        v27 = 2112;
        v28 = v22;
        _os_log_error_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_ERROR, "(Inline: %@) Attempted to insert at indices: %@ into chatItems (count): %@", (uint8_t *)&v23, 0x20u);

      }
      IMLogHandleForCategory();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController _sanitizeInsertedIndices:inChatItems:withIMChatItems:].cold.2(self, v15);

      IMLogHandleForCategory();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController _sanitizeInsertedIndices:inChatItems:withIMChatItems:].cold.1(v10, v16);

      v17 = objc_msgSend(v9, "count");
      v18 = -[__CFString lastIndex](v11, "lastIndex");
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v17, v18 - v17 + 1);
      v12 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          v23 = 138412290;
          v24 = v12;
          _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, "\tRevised indices for inserting: %@", (uint8_t *)&v23, 0xCu);
        }

      }
    }
  }

  return v12;
}

- (void)_identifyIndicesNeedingCustomAnimationsForIMChatItems:(id)a3 inserted:(id)a4 removed:(id)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  __CFString *v14;
  void *v15;
  NSObject *v16;
  __CFString *v17;
  void *v18;
  id v19;
  NSObject *v20;
  const __CFString *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint8_t buf[4];
  const __CFString *v28;
  __int16 v29;
  id v30;
  __int16 v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (objc_msgSend(v9, "count") || objc_msgSend(v10, "count"))
  {
    v25 = 0;
    v26 = 0;
    -[CKTranscriptCollectionViewController _indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading:inserted:removed:outInsertIndices:outRemoveIndices:](self, "_indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading:inserted:removed:outInsertIndices:outRemoveIndices:", v8, v9, v10, &v26, &v25);
    v11 = v26;
    v12 = v25;
    if (objc_msgSend(v12, "count") && IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v12, "count"));
        v14 = (__CFString *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v28 = v14;
        v29 = 2112;
        v30 = v12;
        _os_log_impl(&dword_18DFCD000, v13, OS_LOG_TYPE_INFO, "The indices to remove WITHOUT animation are (count: %@): %@", buf, 0x16u);

      }
    }
    -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setIndicesOfChatItemsToBeRemovedWithoutFading:", v12);

    if (objc_msgSend(v11, "count") && IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v11, "count"));
        v17 = (__CFString *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v28 = v17;
        v29 = 2112;
        v30 = v11;
        _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "The indices to insert WITHOUT animation are (count: %@): %@", buf, 0x16u);

      }
    }
    -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "setIndicesOfChatItemsToBeInsertedWithoutFading:", v11);

    v24 = 0;
    -[CKTranscriptCollectionViewController _indicesOfReplyChatItemsToInsertWithoutFading:inserted:outInsertIndices:](self, "_indicesOfReplyChatItemsToInsertWithoutFading:inserted:outInsertIndices:", v8, v9, &v24);
    v19 = v24;
    if (objc_msgSend(v19, "count") && IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        if (-[CKTranscriptCollectionViewController isInline](self, "isInline"))
          v21 = CFSTR("YES");
        else
          v21 = CFSTR("NO");
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v19, "count"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v28 = v21;
        v29 = 2112;
        v30 = v22;
        v31 = 2112;
        v32 = v19;
        _os_log_impl(&dword_18DFCD000, v20, OS_LOG_TYPE_INFO, "(Inline: %@) The indices of reply items to insert with custom animation are (count: %@): %@", buf, 0x20u);

      }
    }
    -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "setIndicesOfReplyChatItemsToBeInserted:", v19);

  }
}

- (void)updateTranscriptScrollIntentForSendAnimationContext:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  _BOOL4 v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  int v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v14 = 138412290;
      v15 = v4;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "Received request to update the transcriptScrollIntent for the sendAnimationContext: %@", (uint8_t *)&v14, 0xCu);
    }

  }
  objc_msgSend(v4, "messages");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "__imArrayByFilteringWithBlock:", &__block_literal_global_765_0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8 == 0;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v9)
    v12 = 0;
  else
    v12 = 6;
  objc_msgSend(v10, "setTranscriptScrollIntent:", v12);

  +[CKScrollViewAnimationProperties systemDefaultScrollAnimation](CKScrollViewAnimationProperties, "systemDefaultScrollAnimation");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController enforceTranscriptScrollIntentWithAnimationProperties:](self, "enforceTranscriptScrollIntentWithAnimationProperties:", v13);

}

BOOL __92__CKTranscriptCollectionViewController_updateTranscriptScrollIntentForSendAnimationContext___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "scheduleType") == 2;
}

- (int64_t)_computeDesiredScrollIntentForInsertedUnreadChatItem:(id)a3 insertedLocalUnsentChatItem:(id)a4
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id WeakRetained;
  char v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  void *v19;
  int v21;
  void *v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "transcriptScrollIntent");

  if (v9 != 6 && v9)
  {
    v12 = v9;
    if (!v7)
      goto LABEL_20;
  }
  else
  {
    if (!v7)
      goto LABEL_20;
    objc_msgSend(v7, "messageItem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "scheduleType");

    if (v11 == 2)
      v12 = 6;
    else
      v12 = 0;
  }
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v14 = objc_msgSend(WeakRetained, "transcriptCollectionViewControllerShouldScrollToBottomForLocalSentMessage:", self);

  if ((v14 & 1) != 0)
  {
    objc_msgSend(v7, "messageItem");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "scheduleType");

    if (v16 == 2)
      v9 = 6;
    else
      v9 = 0;
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        CKDebugNameForCKTranscriptScrollIntent(v9);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138412546;
        v22 = v18;
        v23 = 2112;
        v24 = v7;
        _os_log_impl(&dword_18DFCD000, v17, OS_LOG_TYPE_INFO, "Computed new scrollIntent %@ for newly inserted unsent chatItem: %@.", (uint8_t *)&v21, 0x16u);

      }
LABEL_19:

    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      CKDebugNameForCKTranscriptScrollIntent(v12);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 138412290;
      v22 = v19;
      _os_log_impl(&dword_18DFCD000, v17, OS_LOG_TYPE_INFO, "Short-circuiting to not scroll to %@ because of a reply transcript being up.", (uint8_t *)&v21, 0xCu);

    }
    goto LABEL_19;
  }
LABEL_20:

  return v9;
}

- (void)scrollToCurrentTimeAnimated:(BOOL)a3 withDuration:(double)a4 animationCurve:(int64_t)a5 withCompletion:(id)a6
{
  id v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  _QWORD v16[5];
  NSObject *v17;
  id v18;
  int64_t v19;
  double v20;
  BOOL v21;
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v10 = a6;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setTranscriptScrollIntent:", 0);

  -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
  v12 = objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v23 = self;
      _os_log_impl(&dword_18DFCD000, v13, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in scrollToCurrentTimeAnimated", buf, 0xCu);
    }

  }
  dispatch_group_enter(v12);
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke;
  v16[3] = &unk_1E2754ED8;
  v16[4] = self;
  v17 = v12;
  v21 = a3;
  v18 = v10;
  v19 = a5;
  v20 = a4;
  v14 = v12;
  v15 = v10;
  dispatch_async(MEMORY[0x1E0C80D38], v16);

}

void __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD v16[5];
  id v17;
  id v18;
  _QWORD v19[4];
  uint64_t v20;
  uint8_t buf[4];
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "transcriptScrollIntent");

  if (v3)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v5 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 134217984;
        v22 = v5;
        _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToCurrentTimeAnimated – transcriptScrollIntent != CKTranscriptScrollIntentCurrentTime", buf, 0xCu);
      }
LABEL_12:

      goto LABEL_13;
    }
    goto LABEL_13;
  }
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isScrollEnabled");

  if ((v7 & 1) == 0)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v12 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 134217984;
        v22 = v12;
        _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToCurrentTimeAnimated – !isScrollEnabled", buf, 0xCu);
      }
      goto LABEL_12;
    }
LABEL_13:
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
    return;
  }
  if (*(_BYTE *)(a1 + 72))
  {
    v8 = *(_QWORD *)(a1 + 56) << 16;
    v9 = (void *)MEMORY[0x1E0CEABB0];
    v10 = *(double *)(a1 + 64);
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke_766;
    v19[3] = &unk_1E274A208;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[2] = __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke_2;
    v16[3] = &unk_1E2754EB0;
    v11 = *(void **)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 32);
    v16[4] = v20;
    v16[1] = 3221225472;
    v17 = v11;
    v18 = *(id *)(a1 + 48);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", v8, v19, v16, v10, 0.0);

  }
  else
  {
    +[CKScrollViewAnimationProperties unanimated](CKScrollViewAnimationProperties, "unanimated");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "enforceTranscriptScrollIntentWithAnimationProperties:", v13);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        v15 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 134217984;
        v22 = v15;
        _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToCurrentTimeAnimated – enforceTranscriptScrollIntentWithAnimationProperties unanimated", buf, 0xCu);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

  }
}

void __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke_766(uint64_t a1)
{
  id v2;

  +[CKScrollViewAnimationProperties inheritedAnimation](CKScrollViewAnimationProperties, "inheritedAnimation");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "enforceTranscriptScrollIntentWithAnimationProperties:", v2);

}

void __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  _QWORD block[4];
  id v5;
  uint8_t buf[4];
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      v7 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToCurrentTimeAnimated – enforceTranscriptScrollIntentWithAnimationProperties completion", buf, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke_767;
  block[3] = &unk_1E274AED0;
  v5 = *(id *)(a1 + 48);
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

uint64_t __111__CKTranscriptCollectionViewController_scrollToCurrentTimeAnimated_withDuration_animationCurve_withCompletion___block_invoke_767(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)scrollToBottomAnimated:(BOOL)a3 withDuration:(double)a4 animationCurve:(int64_t)a5 insertedUnreadMessage:(id)a6 insertedLocalUnsentChatItem:(id)a7 withCompletion:(id)a8
{
  id v14;
  id v15;
  id v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;
  id v21;
  id v22;
  _QWORD block[4];
  id v24;
  CKTranscriptCollectionViewController *v25;
  NSObject *v26;
  id v27;
  int64_t v28;
  double v29;
  BOOL v30;
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v14 = a6;
  v15 = a7;
  v16 = a8;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setTranscriptScrollIntent:", 6);
  -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
  v18 = objc_claimAutoreleasedReturnValue();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v32 = self;
      _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in scrollToBottomAnimated", buf, 0xCu);
    }

  }
  dispatch_group_enter(v18);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke;
  block[3] = &unk_1E2754F00;
  v24 = v17;
  v25 = self;
  v26 = v18;
  v27 = v16;
  v30 = a3;
  v28 = a5;
  v29 = a4;
  v20 = v18;
  v21 = v16;
  v22 = v17;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  _QWORD v22[5];
  id v23;
  id v24;
  _QWORD v25[4];
  id v26;
  double v27;
  double v28;
  uint8_t buf[4];
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(*(id *)(a1 + 32), "transcriptScrollIntent") == 6)
  {
    objc_msgSend(*(id *)(a1 + 40), "delegate");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "transcriptCollectionViewControllerWillScrollToBottom:", *(_QWORD *)(a1 + 40));

    objc_msgSend(*(id *)(a1 + 40), "collectionView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "isScrollEnabled");

    if (v4)
    {
      objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
      objc_msgSend(*(id *)(a1 + 32), "__ck_bottomOffset");
      v6 = v5;
      v8 = v7;
      objc_msgSend(*(id *)(a1 + 32), "contentOffset");
      if (v10 != v6 || v9 != v8)
      {
        if (*(_BYTE *)(a1 + 80))
        {
          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v11 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
            {
              v12 = *(_QWORD *)(a1 + 40);
              *(_DWORD *)buf = 134217984;
              v30 = v12;
              _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in scrollToBottomAnimated - will change content offset", buf, 0xCu);
            }

          }
          dispatch_group_enter(*(dispatch_group_t *)(a1 + 48));
          v13 = *(_QWORD *)(a1 + 64) << 16;
          v14 = (void *)MEMORY[0x1E0CEABB0];
          v15 = *(double *)(a1 + 72);
          v16 = MEMORY[0x1E0C809B0];
          v25[0] = MEMORY[0x1E0C809B0];
          v25[1] = 3221225472;
          v25[2] = __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke_768;
          v25[3] = &unk_1E27506B0;
          v26 = *(id *)(a1 + 32);
          v27 = v6;
          v28 = v8;
          v22[0] = v16;
          v22[1] = 3221225472;
          v22[2] = __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke_2;
          v22[3] = &unk_1E2754EB0;
          v17 = *(void **)(a1 + 48);
          v22[4] = *(_QWORD *)(a1 + 40);
          v23 = v17;
          v24 = *(id *)(a1 + 56);
          objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", v13, v25, v22, v15, 0.0);

          goto LABEL_17;
        }
        objc_msgSend(*(id *)(a1 + 32), "setContentOffset:", v6, v8);
      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_17:
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        v21 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 134217984;
        v30 = v21;
        _os_log_impl(&dword_18DFCD000, v20, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToBottomAnimated - without changing content offset", buf, 0xCu);
      }

    }
    goto LABEL_21;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 134217984;
      v30 = v19;
      _os_log_impl(&dword_18DFCD000, v18, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToBottomAnimated – transcriptScrollIntent != CKTranscriptScrollIntentBelowFutureMessages", buf, 0xCu);
    }

  }
LABEL_21:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke_768(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentOffset:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

void __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  _QWORD block[4];
  id v5;
  uint8_t buf[4];
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      v7 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in scrollToBottomAnimated - will change content offset", buf, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke_769;
  block[3] = &unk_1E274AED0;
  v5 = *(id *)(a1 + 48);
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

uint64_t __156__CKTranscriptCollectionViewController_scrollToBottomAnimated_withDuration_animationCurve_insertedUnreadMessage_insertedLocalUnsentChatItem_withCompletion___block_invoke_769(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (BOOL)scrollToTopOfLastBubbleCellWithAnimationProperties:(id)a3
{
  id v4;
  void *v5;
  BOOL v6;
  void *v7;

  v4 = a3;
  if (-[CKTranscriptCollectionView isScrollEnabled](self->_collectionView, "isScrollEnabled"))
  {
    -[CKTranscriptCollectionViewController indexPathOfLastBubble](self, "indexPathOfLastBubble");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5 != 0;
    if (v5)
    {
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController topScrollPositionForIndexPath:](self, "topScrollPositionForIndexPath:", v5);
      objc_msgSend(v7, "setContentOffset:animationProperties:", v4);

    }
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)indexPathOfLastBubble
{
  void *v2;
  id v3;
  _QWORD v5[5];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void (*v10)(uint64_t);
  id v11;

  v6 = 0;
  v7 = &v6;
  v8 = 0x3032000000;
  v9 = __Block_byref_object_copy__38;
  v10 = __Block_byref_object_dispose__38;
  v11 = 0;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __61__CKTranscriptCollectionViewController_indexPathOfLastBubble__block_invoke;
  v5[3] = &unk_1E274DF98;
  v5[4] = &v6;
  objc_msgSend(v2, "enumerateObjectsWithOptions:usingBlock:", 2, v5);

  v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

void __61__CKTranscriptCollectionViewController_indexPathOfLastBubble__block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  char isKindOfClass;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v7 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 0);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *a4 = 1;
  }
}

- (CGPoint)topScrollPositionForIndexPath:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  CGPoint result;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "__ck_offsetForTopOfCellAtIndexPath:hidingCellAtIndexPath:", v4, 0);
  v7 = v6;
  v9 = v8;

  v10 = v7;
  v11 = v9;
  result.y = v11;
  result.x = v10;
  return result;
}

- (void)playEffectsIfNecessaryWithInsertedUnreadMessage:(id)a3 insertedLocalUnsentChatItem:(id)a4
{
  id v6;
  _BOOL8 v7;
  void *v8;
  void *v9;
  void *v10;
  _BOOL8 v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;

  v19 = a3;
  v6 = a4;
  if (v19)
  {
    v7 = -[CKTranscriptCollectionViewController _allowsEffectAutoPlayback](self, "_allowsEffectAutoPlayback");
    if (v6)
      goto LABEL_3;
LABEL_7:
    v11 = 0;
    if (v7)
      goto LABEL_13;
LABEL_8:
    v12 = 0;
    goto LABEL_21;
  }
  v7 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_3:
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:", self))
  {
    objc_msgSend(v6, "message");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "expressiveSendStyleID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
      v11 = 1;
    else
      v11 = -[CKTranscriptCollectionViewController _allowsEffectAutoPlayback](self, "_allowsEffectAutoPlayback");

  }
  else
  {
    v11 = 0;
  }

  if (!v7)
    goto LABEL_8;
LABEL_13:
  objc_msgSend(v19, "IMChatItem");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v13, "message");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "expressiveSendStyleID");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (+[CKImpactEffectManager identifierIsAnimatedImpactEffect:](CKImpactEffectManager, "identifierIsAnimatedImpactEffect:", v15))
    {
      v12 = v19;
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v16, "indexOfObject:", v12);

      if (v17 != 0x7FFFFFFFFFFFFFFFLL)
      {
        objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController setHiddenBalloonViews:](self, "setHiddenBalloonViews:", v18);

      }
    }
    else
    {
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

LABEL_21:
  -[CKTranscriptCollectionViewController playImpactEffectIfNecessaryAutoplayingOutgoingEffect:autoplayingIncomingEffect:impactEffectChatItem:](self, "playImpactEffectIfNecessaryAutoplayingOutgoingEffect:autoplayingIncomingEffect:impactEffectChatItem:", v11, v7, v12);
  -[CKTranscriptCollectionViewController playFullscreenEffectIfNecessaryAutoplayingOutgoingEffect:autoplayingIncomingEffect:insertedUnreadMessage:insertedLocalUnsentChatItem:](self, "playFullscreenEffectIfNecessaryAutoplayingOutgoingEffect:autoplayingIncomingEffect:insertedUnreadMessage:insertedLocalUnsentChatItem:", v11, v7, v19, v6);

}

- (void)playImpactEffectIfNecessaryAutoplayingOutgoingEffect:(BOOL)a3 autoplayingIncomingEffect:(BOOL)a4 impactEffectChatItem:(id)a5
{
  _BOOL4 v5;
  _BOOL4 v6;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  BOOL v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD block[5];
  _QWORD v20[2];

  v5 = a4;
  v6 = a3;
  v20[1] = *MEMORY[0x1E0C80C00];
  v8 = a5;
  v9 = v8;
  if (v6 || v5)
  {
    if (v8)
    {
      -[CKTranscriptCollectionViewController presentedViewController](self, "presentedViewController");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v10)
      {
        objc_msgSend(v9, "IMChatItem");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v11, "message");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "message");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "expressiveSendStyleID");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = +[CKImpactEffectManager identifierShouldPlayInWindow:](CKImpactEffectManager, "identifierShouldPlayInWindow:", v14);

          if (!v15)
          {
            block[0] = MEMORY[0x1E0C809B0];
            block[1] = 3221225472;
            block[2] = __140__CKTranscriptCollectionViewController_playImpactEffectIfNecessaryAutoplayingOutgoingEffect_autoplayingIncomingEffect_impactEffectChatItem___block_invoke;
            block[3] = &unk_1E274A208;
            block[4] = self;
            dispatch_async(MEMORY[0x1E0C80D38], block);
          }
          -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v20[0] = v12;
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 1);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "animateMessages:", v17);

          -[CKTranscriptCollectionViewController chat](self, "chat");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "markChatItemAsPlayedExpressiveSend:", v11);

        }
      }
    }
  }

}

uint64_t __140__CKTranscriptCollectionViewController_playImpactEffectIfNecessaryAutoplayingOutgoingEffect_autoplayingIncomingEffect_impactEffectChatItem___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHiddenBalloonViews:", 0);
}

- (void)playFullscreenEffectIfNecessaryAutoplayingOutgoingEffect:(BOOL)a3 autoplayingIncomingEffect:(BOOL)a4 insertedUnreadMessage:(id)a5 insertedLocalUnsentChatItem:(id)a6
{
  _BOOL4 v7;
  _BOOL4 v8;
  id v10;
  id v11;
  CKTranscriptCollectionViewController *v12;
  id v13;
  NSObject *v14;
  uint8_t v15[16];

  v7 = a4;
  v8 = a3;
  v10 = a5;
  v11 = a6;
  if (v8)
  {
    v12 = self;
    v13 = v11;
LABEL_9:
    -[CKTranscriptCollectionViewController startFullscreenEffectIfNeededForChatItem:](v12, "startFullscreenEffectIfNeededForChatItem:", v13);
    goto LABEL_10;
  }
  if (v7)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_INFO, "Calling startFullscreenEffectIfNeededForChatItem for incomingEffect", v15, 2u);
      }

    }
    v12 = self;
    v13 = v10;
    goto LABEL_9;
  }
LABEL_10:

}

- (id)newChatItemsWithNotifications:(id)a3
{
  _QWORD v4[5];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __70__CKTranscriptCollectionViewController_newChatItemsWithNotifications___block_invoke;
  v4[3] = &unk_1E2754F28;
  v4[4] = self;
  objc_msgSend(a3, "__imArrayByApplyingBlock:", v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

id __70__CKTranscriptCollectionViewController_newChatItemsWithNotifications___block_invoke(uint64_t a1, uint64_t a2)
{
  return (id)objc_msgSend(*(id *)(a1 + 32), "newChatItemWithNotification:", a2);
}

- (id)newChatItemWithNotification:(id)a3
{
  id v4;
  void *v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController _fullMaxWidth](self, "_fullMaxWidth");
  -[CKTranscriptCollectionViewController balloonMaxWidth](self, "balloonMaxWidth");
  +[CKChatItem chatItemWithNotification:balloonMaxWidth:fullMaxWidth:](CKChatItem, "chatItemWithNotification:balloonMaxWidth:fullMaxWidth:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)newChatItemsWithIMChatItems:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  objc_class *v16;
  void *v17;
  void *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v4, "count"));
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "traitCollectionForTranscriptCollectionViewController:", self);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v8 = v4;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v22;
    v12 = 0x1E0CB3000uLL;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v22 != v11)
          objc_enumerationMutation(v8);
        v14 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v13);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_msgSend(*(id *)(v12 + 1160), "currentHandler");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = (objc_class *)objc_opt_class();
          NSStringFromClass(v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("CKTranscriptCollectionViewController.m"), 9293, CFSTR("Detected chat item with invalid type. Expected %@ to be an instance of %@."), v14, v17);

          v12 = 0x1E0CB3000;
        }
        v15 = -[CKTranscriptCollectionViewController newChatItemWithIMChatItem:traitCollection:](self, "newChatItemWithIMChatItem:traitCollection:", v14, v7);
        if (v15)
          objc_msgSend(v5, "addObject:", v15);

        ++v13;
      }
      while (v10 != v13);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v10);
  }

  return v5;
}

- (id)newChatItemWithIMChatItem:(id)a3 traitCollection:(id)a4
{
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;

  v6 = a3;
  v7 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController _fullMaxWidth](self, "_fullMaxWidth");
    v9 = v8;
    -[CKTranscriptCollectionViewController balloonMaxWidth](self, "balloonMaxWidth");
    +[CKChatItem chatItemWithIMChatItem:balloonMaxWidth:fullMaxWidth:transcriptTraitCollection:overlayLayout:](CKChatItem, "chatItemWithIMChatItem:balloonMaxWidth:fullMaxWidth:transcriptTraitCollection:overlayLayout:", v6, v7, -[CKTranscriptCollectionViewController isInline](self, "isInline"), v10, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setTranscriptIdentifier:", v12);

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

- (void)_diffAssociatedItemsWithOldAssociatedItems:(id)a3 removedAssociatedIndexes:(id *)a4 insertedAssociatedIndexes:(id *)a5
{
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;

  v8 = a3;
  -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = (void *)v9;
  if (v8)
  {
    if (v9)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    if (v10)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_3:
  objc_msgSend(v10, "differenceFromArray:withOptions:usingEquivalenceTest:", v8, 0, &__block_literal_global_777_0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  IMIndexesFromOrderedCollectionDifference();
  v12 = 0;
  v13 = 0;
  v14 = v13;
  if (a4)
    *a4 = objc_retainAutorelease(v13);
  if (a5)
    *a5 = objc_retainAutorelease(v12);

}

uint64_t __134__CKTranscriptCollectionViewController__diffAssociatedItemsWithOldAssociatedItems_removedAssociatedIndexes_insertedAssociatedIndexes___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isEqual:");
}

- (void)setChatItems:(id)a3 removedAssociatedIndexes:(id *)a4 insertedAssociatedIndexes:(id *)a5
{
  id v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v8 = a3;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isConsolidatedChatItemsEnabled");

  if ((v10 & 1) == 0)
  {
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v11, "copy");

    -[CKTranscriptCollectionViewController setChatItems:](self, "setChatItems:", v8);
    v15 = 0;
    -[CKTranscriptCollectionViewController _diffAssociatedItemsWithOldAssociatedItems:removedAssociatedIndexes:insertedAssociatedIndexes:](self, "_diffAssociatedItemsWithOldAssociatedItems:removedAssociatedIndexes:insertedAssociatedIndexes:", v12, a4, &v15);
    v13 = v15;
    if (objc_msgSend(v13, "count"))
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "transcriptCollectionViewControllerDidInsertAssociatedChatItem:", self);

    }
    if (a5)
      *a5 = objc_retainAutorelease(v13);

  }
}

- (void)setChatItems:(id)a3
{
  NSArray *v4;
  void *v5;
  char v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[4];
  id v29;
  CKTranscriptCollectionViewController *v30;
  id v31;
  id v32;
  _BYTE *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE buf[24];
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = (NSArray *)a3;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isConsolidatedChatItemsEnabled");

  if ((v6 & 1) == 0)
  {
    if (-[CKTranscriptCollectionViewController isSettingChatItems](self, "isSettingChatItems"))
    {
      IMLogHandleForCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
        -[CKTranscriptCollectionViewController setChatItems:].cold.1();

    }
    -[CKTranscriptCollectionViewController setSettingChatItems:](self, "setSettingChatItems:", 1);
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v9 = (void *)MEMORY[0x1E0CB37E8];
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "numberWithUnsignedInteger:", objc_msgSend(v10, "count"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", -[NSArray count](v4, "count"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v11;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v12;
        _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, "Setting chatItems, existing count: %@, new count: %@", buf, 0x16u);

      }
    }
    if (self->_chatItems == v4)
      goto LABEL_21;
    v13 = (void *)-[NSArray copy](v4, "copy");
    objc_storeStrong((id *)&self->_chatItems, v13);
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (!CKIsRunningUnitTests())
    {
      v15 = objc_msgSend(v14, "lastFinishedMessageID");
      objc_msgSend(v14, "lastFinishedMessageDate");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "__ck_updateWatermarkToMessageID:date:", v15, v16);

    }
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController speakerTransferGUID](self, "speakerTransferGUID");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    v45 = 0x7FFFFFFFFFFFFFFFLL;
    v40 = 0;
    v41 = &v40;
    v42 = 0x2020000000;
    v43 = 0x7FFFFFFFFFFFFFFFLL;
    v36 = 0;
    v37 = &v36;
    v38 = 0x2020000000;
    v39 = 0x7FFFFFFFFFFFFFFFLL;
    v28[0] = MEMORY[0x1E0C809B0];
    v28[1] = 3221225472;
    v28[2] = __53__CKTranscriptCollectionViewController_setChatItems___block_invoke;
    v28[3] = &unk_1E2754F70;
    v19 = v18;
    v33 = buf;
    v34 = &v40;
    v35 = &v36;
    v29 = v19;
    v30 = self;
    v20 = v17;
    v31 = v20;
    v21 = v13;
    v32 = v21;
    objc_msgSend(v21, "enumerateObjectsUsingBlock:", v28);
    -[CKTranscriptCollectionViewController setAssociatedChatItems:](self, "setAssociatedChatItems:", v20);
    if (*(_QWORD *)(*(_QWORD *)&buf[8] + 24) == 0x7FFFFFFFFFFFFFFFLL)
    {
      v22 = v41[3];
      if (v22 == 0x7FFFFFFFFFFFFFFFLL)
      {
        v23 = v37[3];
        *(_QWORD *)(*(_QWORD *)&buf[8] + 24) = v23;
        if (v23 == 0x7FFFFFFFFFFFFFFFLL)
        {
          v24 = v19;
          v19 = 0;
LABEL_20:

          -[CKTranscriptCollectionViewController setSpeakerTransferGUID:](self, "setSpeakerTransferGUID:", v19);
          -[CKTranscriptCollectionViewController delegate](self, "delegate");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "transcriptCollectionViewControllerDidSetChatItems:", self);

          _Block_object_dispose(&v36, 8);
          _Block_object_dispose(&v40, 8);
          _Block_object_dispose(buf, 8);

LABEL_21:
          -[CKTranscriptCollectionViewController setSettingChatItems:](self, "setSettingChatItems:", 0);
          goto LABEL_22;
        }
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)&buf[8] + 24) = v22;
      }
    }
    -[NSArray objectAtIndex:](self->_chatItems, "objectAtIndex:");
    v24 = (id)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v24 = v24;
      objc_msgSend(v24, "mediaObject");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "transferGUID");
      v26 = objc_claimAutoreleasedReturnValue();

      v19 = (id)v26;
    }
    goto LABEL_20;
  }
LABEL_22:

}

void __53__CKTranscriptCollectionViewController_setChatItems___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  int v33;
  void *v34;
  int v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  BOOL v45;
  double v46;
  double v47;
  double v48;
  _BOOL8 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v6 = v5;
    objc_msgSend(v6, "mediaObject");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "shouldSuppressPreview");

    if ((v8 & 1) == 0)
    {
      v9 = *(void **)(a1 + 32);
      objc_msgSend(v6, "mediaObject");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "transferGUID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v9) = objc_msgSend(v9, "isEqualToString:", v11);

      if ((_DWORD)v9)
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = a3;
      if ((objc_msgSend(v6, "isFromMe") & 1) == 0)
      {
        if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL
          && (objc_msgSend(v6, "isPlayed") & 1) == 0)
        {
          *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = a3;
        }
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = a3;
      }
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_13;
    objc_msgSend(*(id *)(a1 + 40), "conversation");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "chat");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "guid");
    v6 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "conversation");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "recipientStrings");
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "conversation");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "isBusinessConversation");
    objc_msgSend(*(id *)(a1 + 40), "transcriptIdentifier");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "configureWithConversationID:recipients:isBusiness:context:", v6, v15, v17, v18);

  }
LABEL_13:
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v19 = v5;
    v20 = v19;
    if (*(_QWORD *)(a1 + 48))
    {
      v52 = 0u;
      v53 = 0u;
      v50 = 0u;
      v51 = 0u;
      objc_msgSend(v19, "visibleAssociatedMessageChatItems", 0);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v50, v54, 16);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v51;
        do
        {
          v25 = 0;
          do
          {
            if (*(_QWORD *)v51 != v24)
              objc_enumerationMutation(v21);
            objc_msgSend(*(id *)(a1 + 48), "addObject:", *(_QWORD *)(*((_QWORD *)&v50 + 1) + 8 * v25++));
          }
          while (v23 != v25);
          v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v50, v54, 16);
        }
        while (v23);
      }

      objc_msgSend(v20, "messageHighlightChatItem");
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      if (v26)
      {
        v27 = *(void **)(a1 + 48);
        objc_msgSend(v20, "messageHighlightChatItem");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "addObject:", v28);

      }
    }
    if (!a3)
      goto LABEL_40;
    objc_msgSend(v20, "visibleAssociatedMessageChatItems");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = objc_msgSend(v29, "count");

    if (!v30)
      goto LABEL_40;
    objc_msgSend(*(id *)(a1 + 56), "objectAtIndex:", a3 - 1);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "IMChatItem");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = objc_msgSend(v32, "contiguousType");

    objc_msgSend(v31, "IMChatItem");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v35 = objc_msgSend(v34, "contiguousType");

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0 || (v33 & 0xFE) != 2)
    {
LABEL_39:

LABEL_40:
      goto LABEL_41;
    }
    v36 = v31;
    objc_msgSend(v36, "visibleAssociatedMessageChatItems");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = objc_msgSend(v37, "count");

    if (v38)
    {
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "messageAcknowledgmentTranscriptBalloonRelativePosition");
      v41 = v40;

      objc_msgSend(v36, "size");
      v43 = v41 + v42;
      objc_msgSend(v20, "size");
      v45 = v43 < v44 - v41;
    }
    else
    {
      v45 = 0;
    }
    objc_msgSend(v20, "size");
    v47 = v46;
    objc_msgSend(v36, "size");
    if (v45 || v47 < v48)
    {
      if (v35 == 2)
      {
        objc_msgSend(v36, "setContiguousTypeOverride:", 3);
        v49 = 0;
        goto LABEL_37;
      }
      if (v35 == 1)
      {
        v49 = v33 == 2;
        objc_msgSend(v36, "setContiguousTypeOverride:", 0);
LABEL_37:
        objc_msgSend(v20, "setContiguousTypeOverride:", v49);
      }
    }

    goto LABEL_39;
  }
LABEL_41:

}

- (void)loadEarlierMessagesForConversation
{
  id v2;

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "loadMoreMessages");

}

- (void)fetchEarlierMessagesForConversation:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchMoreMessages:", v4);

}

- (void)loadRecentMessagesForConversation
{
  id v2;

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "loadMoreMessagesAfterLastMessage");

}

- (void)fetchRecentMessagesForConversation:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fetchMoreMessagesAfterLastMessage:", v4);

}

- (void)loadEarlierMessages
{
  NSObject *v3;
  os_signpost_id_t v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  _QWORD v8[5];
  NSObject *v9;
  os_signpost_id_t v10;
  uint8_t buf[16];

  -[CKTranscriptCollectionViewController setIsLoadingMoreMessages:](self, "setIsLoadingMoreMessages:", 1);
  IMLogHandleForCategory();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_signpost_id_generate(v3);
  v5 = v3;
  v6 = v5;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v6, OS_SIGNPOST_INTERVAL_BEGIN, v4, "historyLoading", ", buf, 2u);
  }

  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke;
  v8[3] = &unk_1E2754FE8;
  v8[4] = self;
  v9 = v6;
  v10 = v4;
  v7 = v6;
  -[CKTranscriptCollectionViewController fetchEarlierMessagesForConversation:](self, "fetchEarlierMessagesForConversation:", v8);

}

void __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  os_signpost_id_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  _QWORD v27[4];
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint8_t buf[16];

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "collectionView");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "collectionViewLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "contentOffset");
  v7 = v6;
  v9 = v8;
  objc_msgSend(v4, "contentSize");
  v11 = v10;
  v13 = v12;
  v14 = *(id *)(a1 + 40);
  v15 = v14;
  v16 = *(_QWORD *)(a1 + 48);
  if (v16 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v14))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v15, OS_SIGNPOST_INTERVAL_BEGIN, v16, "updateTranscript", ", buf, 2u);
  }

  v17 = *(void **)(a1 + 32);
  v18 = MEMORY[0x1E0C809B0];
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke_778;
  v37[3] = &unk_1E2754F98;
  v38 = v4;
  v40 = v3;
  v19 = *(id *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 48);
  v39 = v19;
  v41 = v20;
  v27[0] = v18;
  v27[1] = 3221225472;
  v27[2] = __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke_779;
  v27[3] = &unk_1E2754FC0;
  v32 = v7;
  v33 = v9;
  v34 = v11;
  v35 = v13;
  v28 = v5;
  v29 = v38;
  v21 = *(void **)(a1 + 40);
  v30 = *(_QWORD *)(a1 + 32);
  v22 = v21;
  v23 = *(_QWORD *)(a1 + 48);
  v31 = v22;
  v36 = v23;
  v24 = v38;
  v25 = v5;
  v26 = v3;
  objc_msgSend(v17, "updateTranscript:animated:completion:", v37, 0, v27);

}

void __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke_778(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  objc_msgSend(*(id *)(a1 + 32), "beginDisablingTranscriptDynamicsForReason:", CFSTR("HistoryLoading"));
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  v2 = *(id *)(a1 + 40);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 56);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v3, OS_SIGNPOST_INTERVAL_END, v4, "updateTranscript", ", v5, 2u);
  }

}

void __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke_779(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  _QWORD block[4];
  id v8;
  id v9;
  uint64_t v10;

  objc_msgSend(*(id *)(a1 + 32), "prepareLayout");
  v2 = *(double *)(a1 + 64);
  v3 = *(double *)(a1 + 72);
  objc_msgSend(*(id *)(a1 + 32), "collectionViewContentSize");
  objc_msgSend(*(id *)(a1 + 40), "setContentOffset:", v2, v3 + v4 - *(double *)(a1 + 88));
  objc_msgSend(*(id *)(a1 + 48), "setIsLoadingMoreMessages:", 0);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke_2;
  block[3] = &unk_1E274A420;
  v8 = *(id *)(a1 + 40);
  v5 = *(id *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 96);
  v9 = v5;
  v10 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void __59__CKTranscriptCollectionViewController_loadEarlierMessages__block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  objc_msgSend(*(id *)(a1 + 32), "endDisablingTranscriptDynamicsForReason:", CFSTR("HistoryLoading"));
  v2 = *(id *)(a1 + 40);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 48);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v3, OS_SIGNPOST_INTERVAL_END, v4, "historyLoading", ", v5, 2u);
  }

}

- (void)loadRecentMessages
{
  _QWORD v3[5];

  -[CKTranscriptCollectionViewController setIsLoadingMoreMessages:](self, "setIsLoadingMoreMessages:", 1);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __58__CKTranscriptCollectionViewController_loadRecentMessages__block_invoke;
  v3[3] = &unk_1E2755010;
  v3[4] = self;
  -[CKTranscriptCollectionViewController fetchRecentMessagesForConversation:](self, "fetchRecentMessagesForConversation:", v3);
}

void __58__CKTranscriptCollectionViewController_loadRecentMessages__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __58__CKTranscriptCollectionViewController_loadRecentMessages__block_invoke_2;
  v7[3] = &unk_1E274AED0;
  v8 = v3;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __58__CKTranscriptCollectionViewController_loadRecentMessages__block_invoke_3;
  v5[3] = &unk_1E274A208;
  v6 = *(id *)(a1 + 32);
  v4 = v3;
  objc_msgSend(v6, "updateTranscript:animated:completion:", v7, 0, v5);

}

uint64_t __58__CKTranscriptCollectionViewController_loadRecentMessages__block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __58__CKTranscriptCollectionViewController_loadRecentMessages__block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setIsLoadingMoreMessages:", 0);
}

- (void)_loadMessagesIfNeededWithTargetContentOffset:(CGPoint)a3 forKeyboardNavigation:(BOOL)a4
{
  _BOOL8 v4;
  double y;
  double x;

  v4 = a4;
  y = a3.y;
  x = a3.x;
  if (-[CKTranscriptCollectionViewController _isHistoryLoadingNeededForDirection:withTargetContentOffset:forKeyboardNavigation:](self, "_isHistoryLoadingNeededForDirection:withTargetContentOffset:forKeyboardNavigation:", 0, a4))
  {
    -[CKTranscriptCollectionViewController loadEarlierMessages](self, "loadEarlierMessages");
  }
  if (-[CKTranscriptCollectionViewController _isHistoryLoadingNeededForDirection:withTargetContentOffset:forKeyboardNavigation:](self, "_isHistoryLoadingNeededForDirection:withTargetContentOffset:forKeyboardNavigation:", 1, v4, x, y))
  {
    -[CKTranscriptCollectionViewController loadRecentMessages](self, "loadRecentMessages");
  }
}

- (BOOL)_isHistoryLoadingNeededForDirection:(int64_t)a3 withTargetContentOffset:(CGPoint)a4 forKeyboardNavigation:(BOOL)a5
{
  double y;
  double x;
  void *v9;
  char v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;
  _BOOL4 v15;

  y = a4.y;
  x = a4.x;
  if (-[CKTranscriptCollectionViewController isLoadingMoreMessages](self, "isLoadingMoreMessages", a3, a5))
    goto LABEL_5;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isHoldingChatItemsUpdatesForReason:", *MEMORY[0x1E0D35360]);

  if ((v10 & 1) != 0)
    goto LABEL_5;
  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "showsLoadMoreItem");

  if (!v12
    || (-[CKTranscriptCollectionViewController __CurrentTestName](self, "__CurrentTestName"),
        v13 = (void *)objc_claimAutoreleasedReturnValue(),
        v14 = objc_msgSend(v13, "length"),
        v13,
        v14))
  {
LABEL_5:
    LOBYTE(v15) = 0;
  }
  else if (-[CKTranscriptCollectionViewController isLoadMoreSpinnerVisibleForDirection:](self, "isLoadMoreSpinnerVisibleForDirection:", a3)|| (v15 = -[CKTranscriptCollectionViewController isLoadMoreSpinnerAboutToBeVisibleForDirection:withTargetContentOffset:](self, "isLoadMoreSpinnerAboutToBeVisibleForDirection:withTargetContentOffset:", a3, x, y)))
  {
    LOBYTE(v15) = 1;
  }
  return v15;
}

- (void)loadMessagesIfNeededSkipValidation
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "contentOffset");
  v5 = v4;
  v7 = v6;

  -[CKTranscriptCollectionViewController _loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:](self, "_loadMessagesIfNeededWithTargetContentOffset:forKeyboardNavigation:", 1, v5, v7);
}

- (id)loadMoreItemIndexPathForDirection:(int64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  char isKindOfClass;
  uint64_t v8;
  void *v9;

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (a3 == 1)
  {
    objc_msgSend(v4, "lastObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v9 = 0;
      goto LABEL_10;
    }
    v8 = objc_msgSend(v5, "count") - 1;
LABEL_7:
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v8, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_10:

    goto LABEL_11;
  }
  if (!a3)
  {
    objc_msgSend(v4, "firstObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    v8 = 0;
    v9 = 0;
    if ((isKindOfClass & 1) == 0)
      goto LABEL_10;
    goto LABEL_7;
  }
  v9 = 0;
LABEL_11:

  return v9;
}

- (BOOL)isLoadMoreSpinnerVisibleForDirection:(int64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  BOOL v8;

  if (!-[CKViewController appeared](self, "appeared"))
    return 0;
  -[CKTranscriptCollectionViewController loadMoreItemIndexPathForDirection:](self, "loadMoreItemIndexPathForDirection:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cellForItemAtIndexPath:", v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7 != 0;

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (BOOL)isLoadMoreSpinnerAboutToBeVisibleForDirection:(int64_t)a3 withTargetContentOffset:(CGPoint)a4
{
  double y;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  uint64_t v13;
  BOOL v17;

  y = a4.y;
  -[CKTranscriptCollectionViewController loadMoreItemIndexPathForDirection:](self, "loadMoreItemIndexPathForDirection:", a4.x);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "frame");
    v11 = v10;

    objc_msgSend(v8, "layoutAttributesForItemAtIndexPath:", v7);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "frame");
    if (a3 == 1)
    {
      if (y + v11 >= CGRectGetMinY(*(CGRect *)&v13) - v11)
      {
LABEL_5:
        v17 = 1;
LABEL_9:

        goto LABEL_10;
      }
    }
    else if (!a3 && y <= v11 + CGRectGetMaxY(*(CGRect *)&v13))
    {
      goto LABEL_5;
    }
    v17 = 0;
    goto LABEL_9;
  }
  v17 = 0;
LABEL_10:

  return v17;
}

- (id)lastMessagePartChatItem
{
  void *v2;
  id v3;
  _QWORD v5[5];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void (*v10)(uint64_t);
  id v11;

  v6 = 0;
  v7 = &v6;
  v8 = 0x3032000000;
  v9 = __Block_byref_object_copy__38;
  v10 = __Block_byref_object_dispose__38;
  v11 = 0;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __63__CKTranscriptCollectionViewController_lastMessagePartChatItem__block_invoke;
  v5[3] = &unk_1E274DF98;
  v5[4] = &v6;
  objc_msgSend(v2, "enumerateObjectsWithOptions:usingBlock:", 2, v5);

  v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

void __63__CKTranscriptCollectionViewController_lastMessagePartChatItem__block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

- (id)indexPathForBalloonView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = __Block_byref_object_copy__38;
  v19 = __Block_byref_object_dispose__38;
  v20 = 0;
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __64__CKTranscriptCollectionViewController_indexPathForBalloonView___block_invoke;
  v11[3] = &unk_1E27549A0;
  v7 = v5;
  v12 = v7;
  v8 = v4;
  v13 = v8;
  v14 = &v15;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v11);

  v9 = (id)v16[5];
  _Block_object_dispose(&v15, 8);

  return v9;
}

void __64__CKTranscriptCollectionViewController_indexPathForBalloonView___block_invoke(uint64_t a1, void *a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v5 = *(void **)(a1 + 40);
    objc_msgSend(v4, "balloonView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5 == v6)
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  }

}

- (id)messagePartForBalloonView:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectAtIndex:", objc_msgSend(v4, "item"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v7 = v6;
  else
    v7 = 0;
  v8 = v7;

  return v8;
}

- (id)balloonPluginForViewController:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  NSObject *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t buf[4];
  id v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v26, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v21;
    while (2)
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v21 != v7)
          objc_enumerationMutation(v5);
        v9 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v10 = v9;
          -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "extensibleViewControllerForContext:", v11);
          v12 = (id)objc_claimAutoreleasedReturnValue();

          if (v12 == v4)
          {
            objc_msgSend(MEMORY[0x1E0D35770], "sharedInstance");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "IMChatItem");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v16, "type");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "balloonPluginForBundleID:", v17);
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            v14 = v18;
            goto LABEL_17;
          }

        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v26, 16);
      if (v6)
        continue;
      break;
    }
  }

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v4;
      _os_log_impl(&dword_18DFCD000, v13, OS_LOG_TYPE_INFO, "CKTranscriptCollectionViewController could not find balloon plugin corresponding to viewController %@", buf, 0xCu);
    }

  }
  v14 = 0;
LABEL_17:

  return v14;
}

- (id)balloonViewForIndexPath:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "cellForItemAtIndexPath:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v6, "balloonView");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)balloonViewForChatItemGUID:(id)a3 getChatItem:(id *)a4
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v17[4];
  id v18;

  v6 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __79__CKTranscriptCollectionViewController_balloonViewForChatItemGUID_getChatItem___block_invoke;
  v17[3] = &unk_1E2755038;
  v8 = v6;
  v18 = v8;
  v9 = objc_msgSend(v7, "indexOfObjectPassingTest:", v17);

  if (v9 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v10 = 0;
  }
  else
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "objectAtIndexedSubscript:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v9, 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "cellForItemAtIndexPath:", v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      objc_msgSend(v15, "balloonView");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (a4)
        *a4 = objc_retainAutorelease(v12);
    }
    else
    {
      v10 = 0;
    }

  }
  return v10;
}

uint64_t __79__CKTranscriptCollectionViewController_balloonViewForChatItemGUID_getChatItem___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  uint64_t v8;

  objc_msgSend(a2, "IMChatItem");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "guid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    v8 = objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", v7);
    *a4 = v8;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (id)balloonViewForChatItem:(id)a3
{
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(a3, "IMChatItem");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController balloonViewForChatItemGUID:getChatItem:](self, "balloonViewForChatItemGUID:getChatItem:", v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (id)cellForChatItem:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = 0;
  }
  else
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v6, 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "cellForItemAtIndexPath:", v9);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v7;
}

- (id)chatItemForCell:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "indexPathForCell:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v6, "section"))
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  else
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "item");
  if ((v8 & 0x8000000000000000) != 0 || (v9 = v8, v8 >= objc_msgSend(v7, "count")))
  {
    v10 = 0;
  }
  else
  {
    objc_msgSend(v7, "objectAtIndex:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v10;
}

- (id)chatItemForGUID:(id)a3
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v5);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v9, "IMChatItem");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "guid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "isEqualToString:", v4);

        if ((v12 & 1) != 0)
        {
          v6 = v9;
          goto LABEL_11;
        }
      }
      v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v6)
        continue;
      break;
    }
  }
LABEL_11:

  return v6;
}

- (id)associatedChatItemForGUID:(id)a3
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v5);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v9, "IMChatItem");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "guid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "isEqualToString:", v4);

        if ((v12 & 1) != 0)
        {
          v6 = v9;
          goto LABEL_11;
        }
      }
      v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v6)
        continue;
      break;
    }
  }
LABEL_11:

  return v6;
}

- (id)cellForAssociatedChatItem:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = a3;
  -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = 0;
  }
  else
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v6, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "cellForItemAtIndexPath:", v9);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v7;
}

- (void)updateTargetAlphaForVisibleChatItems
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "visibleCells");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        -[CKTranscriptCollectionViewController chatItemForCell:](self, "chatItemForCell:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "transcriptCollectionViewController:targetAlphaForChatItem:", self, v10);
        v13 = v12;

        if (v13 != -1.0)
        {
          if ((objc_opt_respondsToSelector() & 1) != 0)
          {
            objc_msgSend(v9, "balloonView");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            if ((objc_opt_respondsToSelector() & 1) == 0)
              goto LABEL_12;
            objc_msgSend(v9, "imageView");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
          }
          v15 = v14;
          objc_msgSend(v14, "setAlpha:", v13);

        }
LABEL_12:

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }

}

- (void)selectChatItem:(id)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "indexOfObject:", v12);

  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v5, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "selectItemAtIndexPath:animated:scrollPosition:", v7, 0, 0);

    -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "IMChatItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "guid");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "addSelectedMessageGuid:selectionState:", v10, v11);

  }
}

- (void)updateLastAddressedHandleID:(id)a3 lastAddressedSIMID:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "chat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setLastAddressedHandleID:", v6);

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "chat");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setLastAddressedSIMID:", v7);

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "chat");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "guid");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = 138412290;
      v17 = v15;
      _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, "We just updated the last addressed handle and sim id for chat %@ so refreshing service for sending.", (uint8_t *)&v16, 0xCu);

    }
  }
  -[CKConversation refreshServiceForSending](self->_conversation, "refreshServiceForSending");

}

- (void)touchUpInsideNotifyAnywayButton:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[5];
  _BYTE v18[24];
  void *v19;
  __int128 buf;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "chat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v6, "guid");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_INFO, "User selected notify anyway button in chat %@", (uint8_t *)&buf, 0xCu);

    }
  }
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__38;
  v23 = __Block_byref_object_dispose__38;
  v24 = 0;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __72__CKTranscriptCollectionViewController_touchUpInsideNotifyAnywayButton___block_invoke;
  v17[3] = &unk_1E274DF98;
  v17[4] = &buf;
  objc_msgSend(v9, "enumerateObjectsWithOptions:usingBlock:", 2, v17);
  v10 = *(void **)(*((_QWORD *)&buf + 1) + 40);
  if (v10)
  {
    objc_msgSend(v10, "IMChatItem");
    v11 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "markChatItemAsNotifyRecipient:", v11);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v12 = *(id *)(*((_QWORD *)&buf + 1) + 40);
      objc_msgSend(v12, "message");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (v13)
      {
        -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = v13;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v19, 1);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "animateMessages:withEffectIdentifier:beginAnimationFromTranscriptPresentedState:", v15, CFSTR("com.apple.MobileSMS.expressivesend.loud"), 1);

      }
    }
  }
  else
  {
    IMLogHandleForCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v6, "guid");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController touchUpInsideNotifyAnywayButton:].cold.1(v16, (uint64_t)v18);
    }
  }

  _Block_object_dispose(&buf, 8);
}

void __72__CKTranscriptCollectionViewController_touchUpInsideNotifyAnywayButton___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  objc_msgSend(v7, "IMChatItem");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v9 = v8;
    objc_msgSend(v9, "message");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "isFromMe"))
    {
      if ((objc_msgSend(v10, "wasDeliveredQuietly") & 1) == 0 && IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v10, "guid");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = 138412290;
          v14 = v12;
          _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Sending a notify recipient command for a message which had not received a delivered quietly receipt yet. Message: %@", (uint8_t *)&v13, 0xCu);

        }
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
      *a4 = 1;
    }

  }
}

- (void)touchUpInsideCellFailureButton:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char v17;
  void *v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  __CFString *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  int v43;
  void *v44;
  int v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  _BOOL4 v52;
  NSObject *v53;
  const __CFString *v54;
  void *v55;
  void *v56;
  void *v57;
  NSObject *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  char v63;
  NSObject *v64;
  void *v65;
  int v66;
  void *v67;
  void *v68;
  uint64_t v69;
  char v70;
  int v71;
  void *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  int v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  _BOOL4 v88;
  void *v89;
  int v90;
  void *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  _BOOL4 v99;
  __CFString *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  int HasMultipleSubscriptions;
  int v106;
  NSObject *v107;
  void *v108;
  void *v109;
  int v110;
  void *v111;
  void *v112;
  _BOOL4 v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  int v121;
  BOOL v122;
  unsigned int v123;
  int v124;
  void *v125;
  int IsEmail;
  void *v127;
  id v128;
  __CFString *v129;
  id v130;
  int v131;
  void *v132;
  id v133;
  void *v134;
  id v135;
  void *v136;
  id v137;
  __CFString *v138;
  void *v139;
  _QWORD v140[4];
  id v141;
  CKTranscriptCollectionViewController *v142;
  _QWORD v143[5];
  __CFString *v144;
  id v145;
  id v146;
  _QWORD v147[4];
  id v148;
  CKTranscriptCollectionViewController *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[4];
  id v153;
  CKTranscriptCollectionViewController *v154;
  BOOL v155;
  _QWORD v156[4];
  id v157;
  id v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t, uint64_t);
  void (*v164)(uint64_t);
  id v165;
  uint8_t buf[4];
  const __CFString *v167;
  __int16 v168;
  void *v169;
  __int16 v170;
  void *v171;
  uint64_t v172;

  v172 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v160 = 0;
  v161 = &v160;
  v162 = 0x3032000000;
  v163 = __Block_byref_object_copy__38;
  v164 = __Block_byref_object_dispose__38;
  v165 = 0;
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v156[0] = MEMORY[0x1E0C809B0];
  v156[1] = 3221225472;
  v156[2] = __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke;
  v156[3] = &unk_1E27549A0;
  v130 = v5;
  v157 = v130;
  v135 = v4;
  v158 = v135;
  v159 = &v160;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v156);

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend((id)v161[5], "section"))
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  else
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectAtIndex:", objc_msgSend((id)v161[5], "item"));
  v137 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v137, "IMChatItem");
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v139, "message");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "stewieEnabled");

  if (!v10)
    goto LABEL_18;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0
    || (objc_msgSend(v136, "chat"),
        v11 = (void *)objc_claimAutoreleasedReturnValue(),
        v12 = objc_msgSend(v11, "isStewieEmergencyChat"),
        v11,
        !v12))
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v136, "chat");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend(v18, "isStewieRoadsideChat");

      if (v19)
      {
        v20 = objc_msgSend(v139, "stewieConversationID");
        objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_msgSend(v21, "mostRecentlyUsedConversationForRoadside");

        objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "mostRecentlyUsedRoadsideChatIdentifier");
        v134 = (void *)objc_claimAutoreleasedReturnValue();

        if (v20 != v22)
        {
LABEL_128:

          goto LABEL_129;
        }
        objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
        v138 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (!-[__CFString isStewieRoadsideActive](v138, "isStewieRoadsideActive"))
        {
LABEL_127:

          goto LABEL_128;
        }
        -[CKTranscriptCollectionViewController conversation](self, "conversation");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "chat");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "chatIdentifier");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = objc_msgSend(v26, "isEqualToString:", v134);

        if (!v27)
          goto LABEL_129;
      }
    }
LABEL_18:
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "chat");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "lastAddressedSIMID");
    v134 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "chat");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "lastAddressedHandleID");
    v32 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (v32 && -[__CFString length](v32, "length"))
    {
      v138 = v32;
    }
    else
    {
      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "chat");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "account");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "strippedLogin");
      v138 = (__CFString *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "chat");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "setLastAddressedHandleID:", v138);

      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v38 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v167 = v138;
          _os_log_impl(&dword_18DFCD000, v38, OS_LOG_TYPE_INFO, "No last addressed handle or simId on chat, using handle from account %@", buf, 0xCu);
        }

      }
    }
    v121 = objc_msgSend(v8, "__ck_isiMessage");
    if (objc_msgSend(v8, "scheduleType") == 2 && (v39 = objc_msgSend(v8, "scheduleState"), v39 <= 5))
      v123 = (0x36u >> v39) & 1;
    else
      v123 = 0;
    objc_msgSend(v8, "error");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v41 = objc_msgSend(v40, "code");
    v122 = v41 == 43;

    if (objc_msgSend(v137, "canSendAsTextMessage")
      && objc_msgSend(MEMORY[0x1E0D35918], "smsEnabled"))
    {
      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = objc_msgSend(v42, "isBusinessConversation");

      v131 = v43 ^ 1;
    }
    else
    {
      v131 = 0;
    }
    IsEmail = IMStringIsEmail();
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = objc_msgSend(v44, "isCarrierPigeonEnabled");

    if (v45)
    {
      objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v46, "isSatelliteConnectionActive"))
      {
        v124 = 0;
        goto LABEL_41;
      }
      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v47, "chat");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v48, "account");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v49, "service");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D35918], "satelliteSMSService");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      v52 = v50 == v51;

      if (v52
        && objc_msgSend(v137, "canSendAsTextMessageOverSatellite")
        && objc_msgSend(MEMORY[0x1E0D35918], "smsEnabled"))
      {
        -[CKTranscriptCollectionViewController conversation](self, "conversation");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        v124 = objc_msgSend(v46, "isBusinessConversation") ^ 1;
LABEL_41:

LABEL_42:
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v53 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v53, OS_LOG_TYPE_INFO))
          {
            v54 = CFSTR("NO");
            if (v124)
              v54 = CFSTR("YES");
            *(_DWORD *)buf = 138412290;
            v167 = v54;
            _os_log_impl(&dword_18DFCD000, v53, OS_LOG_TYPE_INFO, "Send as text over satellite :%@", buf, 0xCu);
          }

        }
        if (IMSharedHelperDeviceHasMultipleSubscriptions()
          && (objc_msgSend(v134, "length") || -[__CFString length](v138, "length")))
        {
          objc_msgSend(MEMORY[0x1E0D39738], "sharedInstance");
          v55 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v55, "ctSubscriptionInfo");
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v56, "__im_switchSubscriptionContextFromPhoneNumber:simID:", v138, v134);
          v57 = (void *)objc_claimAutoreleasedReturnValue();

          if (IMOSLoggingEnabled())
          {
            OSLogHandleForIMFoundationCategory();
            v58 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412802;
              v167 = v138;
              v168 = 2112;
              v169 = v134;
              v170 = 2112;
              v171 = v57;
              _os_log_impl(&dword_18DFCD000, v58, OS_LOG_TYPE_INFO, "Last addressed handle: %@ last simID %@. New context to switch to for resend: %@.", buf, 0x20u);
            }

          }
          objc_msgSend(v57, "labelID");
          v59 = (void *)objc_claimAutoreleasedReturnValue();
          if (!objc_msgSend(v59, "length"))
            goto LABEL_58;
          if ((objc_msgSend(v59, "isEqualToString:", v134) & 1) != 0)
            goto LABEL_58;
          objc_msgSend(v57, "phoneNumber");
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          IMNormalizePhoneNumber();
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          IMNormalizePhoneNumber();
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          v63 = objc_msgSend(v61, "isEqualToString:", v62);

          if ((v63 & 1) != 0)
          {
LABEL_58:
            v133 = 0;
            v128 = 0;
            v129 = 0;
          }
          else
          {
            v128 = v59;
            objc_msgSend(v57, "phoneNumber");
            v129 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v93 = (void *)MEMORY[0x1E0CB3940];
            CKFrameworkBundle();
            v94 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v94, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN_WITH_SIM"), &stru_1E276D870, CFSTR("ChatKit"));
            v95 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v57, "label");
            v96 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v93, "stringWithFormat:", v95, v96);
            v97 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
            v98 = (void *)objc_claimAutoreleasedReturnValue();
            v99 = objc_msgSend(v98, "userInterfaceLayoutDirection") == 1;

            if (v99)
              v100 = CFSTR("\u200F");
            else
              v100 = CFSTR("\u200E");
            -[__CFString stringByAppendingString:](v100, "stringByAppendingString:", v97);
            v101 = (void *)objc_claimAutoreleasedReturnValue();

            v133 = v101;
          }

        }
        else
        {
          v133 = 0;
          v128 = 0;
          v129 = 0;
        }
        if (v41 == 43)
        {
          if (((v131 ^ 1 | IsEmail) & 1) != 0 || objc_msgSend(v136, "isToEmailAddress"))
          {
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v64 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_18DFCD000, v64, OS_LOG_TYPE_INFO, "Hawking: Can't downgrade to SMS, showing non-cellular blackhole message.", buf, 2u);
              }

            }
            -[CKTranscriptCollectionViewController presentHawkingPromptForChatItem:](self, "presentHawkingPromptForChatItem:", v139);
LABEL_126:

            goto LABEL_127;
          }
          CKFrameworkBundle();
          v80 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v80, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_RESEND_AS_SMS"), &stru_1E276D870, CFSTR("ChatKit"));
          v127 = (void *)objc_claimAutoreleasedReturnValue();

          CKFrameworkBundle();
          v78 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v78, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_MESSAGE_LEARN_MORE"), &stru_1E276D870, CFSTR("ChatKit"));
          v132 = (void *)objc_claimAutoreleasedReturnValue();
          v125 = 0;
          v74 = 0;
          v77 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_84;
        }
        objc_msgSend(v136, "chat");
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        v66 = objc_msgSend(v65, "canSend");

        if (v123)
        {
          objc_msgSend(v8, "time");
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99D68], "now");
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v69 = objc_msgSend(v67, "compare:", v68);

          if (v69 == -1)
            v70 = 0;
          else
            v70 = v66;
          if ((v70 & 1) == 0)
            goto LABEL_74;
        }
        else if (!v66)
        {
LABEL_74:
          v71 = 0;
          v127 = 0;
LABEL_77:
          CKFrameworkBundle();
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v73, "localizedStringForKey:value:table:", CFSTR("Tap-to-Radar"), &stru_1E276D870, CFSTR("ChatKit"));
          v125 = (void *)objc_claimAutoreleasedReturnValue();

          if (v131)
          {
            objc_msgSend(v136, "fallbackSendString");
            v132 = (void *)objc_claimAutoreleasedReturnValue();
            v74 = 1;
          }
          else
          {
            v132 = 0;
            v74 = 0x7FFFFFFFFFFFFFFFLL;
          }
          objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
          v75 = (void *)objc_claimAutoreleasedReturnValue();
          v76 = objc_msgSend(v75, "isCarrierPigeonEnabled");

          if (((v71 | v76 & v124 ^ 1) & 1) != 0)
          {
            v77 = 0x7FFFFFFFFFFFFFFFLL;
            goto LABEL_85;
          }
          CKFrameworkBundle();
          v78 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v78, "localizedStringForKey:value:table:", CFSTR("OFFER_TO_SEND_VIA_SATELLITE_SMS"), &stru_1E276D870, CFSTR("ChatKit-CarrierPigeon"));
          v79 = objc_claimAutoreleasedReturnValue();

          v77 = 1;
          v132 = (void *)v79;
LABEL_84:

LABEL_85:
          +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
          v81 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v81, "isSizeConstrained");

          if (v41 == 43)
          {
            objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
            v82 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v82, "trackSpamEvent:", 9);

            CKFrameworkBundle();
            v83 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v83, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_ACTION_SHEET_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
            v84 = (void *)objc_claimAutoreleasedReturnValue();

            -[CKTranscriptCollectionViewController hawkingFailurePromptMessageForHandle:](self, "hawkingFailurePromptMessageForHandle:", v138);
            v85 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_103:
            +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v84, v85, 0);
            v102 = (void *)objc_claimAutoreleasedReturnValue();
            if (v127)
            {
              v152[0] = MEMORY[0x1E0C809B0];
              v152[1] = 3221225472;
              v152[2] = __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_819;
              v152[3] = &unk_1E274C8C0;
              v155 = v122;
              v153 = v8;
              v154 = self;
              +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v127, 0, v152);
              v103 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v102, "addAction:", v103);

            }
            if (v132)
            {
              v147[0] = MEMORY[0x1E0C809B0];
              v147[1] = 3221225472;
              v147[2] = __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_820;
              v147[3] = &unk_1E2755060;
              v150 = v74;
              v148 = v8;
              v149 = self;
              v151 = v77;
              +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v132, 0, v147);
              v104 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v102, "addAction:", v104);

            }
            HasMultipleSubscriptions = IMSharedHelperDeviceHasMultipleSubscriptions();
            if (v133)
              v106 = HasMultipleSubscriptions;
            else
              v106 = 0;
            if (v106 == 1)
            {
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v107 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v107, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 138412290;
                  v167 = v129;
                  _os_log_impl(&dword_18DFCD000, v107, OS_LOG_TYPE_INFO, "Resending message with %@", buf, 0xCu);
                }

              }
              v143[0] = MEMORY[0x1E0C809B0];
              v143[1] = 3221225472;
              v143[2] = __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_825;
              v143[3] = &unk_1E274B7C8;
              v143[4] = self;
              v144 = v129;
              v145 = v128;
              v146 = v8;
              +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v133, 0, v143);
              v108 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v102, "addAction:", v108);

            }
            if (!CKIsRunningInMacCatalyst())
            {
              if (v125)
              {
                objc_msgSend(MEMORY[0x1E0D36A50], "sharedInstance");
                v109 = (void *)objc_claimAutoreleasedReturnValue();
                v110 = objc_msgSend(v109, "isInternalInstall");

                if (v110)
                {
                  v140[0] = MEMORY[0x1E0C809B0];
                  v140[1] = 3221225472;
                  v140[2] = __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_2;
                  v140[3] = &unk_1E274B818;
                  v141 = v8;
                  v142 = self;
                  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v125, 0, v140);
                  v111 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v102, "addAction:", v111);

                }
              }
            }
            objc_msgSend(v102, "actions");
            v112 = (void *)objc_claimAutoreleasedReturnValue();
            v113 = objc_msgSend(v112, "count") == 0;

            if (v113)
              objc_msgSend(v102, "setPreferredStyle:", 1);
            objc_msgSend(v102, "actions");
            v114 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v114, "count"))
            {
              CKFrameworkBundle();
              v115 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v115, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
            }
            else
            {
              CKFrameworkBundle();
              v115 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v115, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1E276D870, CFSTR("ChatKit"));
            }
            v116 = (void *)objc_claimAutoreleasedReturnValue();
            +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v116, 1, 0);
            v117 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v102, "addAction:", v117);

            objc_msgSend(v102, "popoverPresentationController");
            v118 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v135, "frame");
            objc_msgSend(v118, "setSourceRect:");

            objc_msgSend(v102, "popoverPresentationController");
            v119 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v135, "superview");
            v120 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v119, "setSourceView:", v120);

            -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v102, 1, 0);
            goto LABEL_126;
          }
          if (v121)
          {
            if (v123
              && (objc_msgSend(v8, "time"),
                  v86 = (void *)objc_claimAutoreleasedReturnValue(),
                  objc_msgSend(MEMORY[0x1E0C99D68], "now"),
                  v87 = (void *)objc_claimAutoreleasedReturnValue(),
                  v88 = objc_msgSend(v86, "compare:", v87) == 1,
                  v87,
                  v86,
                  v88))
            {
              if (v127)
              {
                objc_msgSend(v136, "chat");
                v89 = (void *)objc_claimAutoreleasedReturnValue();
                v90 = objc_msgSend(v89, "allParticipantsBlocked");

                if (v90)
                {
                  if (CKIsRunningInMacCatalyst())
                  {
                    CKFrameworkBundle();
                    v91 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_FAILURE_DESCRIPTION_BLOCKED_SCHEDULE_AGAIN_MAC"), &stru_1E276D870, CFSTR("ChatKit"));
                  }
                  else
                  {
                    CKFrameworkBundle();
                    v91 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_FAILURE_DESCRIPTION_BLOCKED_SCHEDULE_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
                  }
                }
                else if (CKIsRunningInMacCatalyst())
                {
                  CKFrameworkBundle();
                  v91 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_FAILURE_DESCRIPTION_SCHEDULE_AGAIN_MAC"), &stru_1E276D870, CFSTR("ChatKit"));
                }
                else
                {
                  CKFrameworkBundle();
                  v91 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_FAILURE_DESCRIPTION_SCHEDULE_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
                }
LABEL_133:
                v92 = objc_claimAutoreleasedReturnValue();
                goto LABEL_102;
              }
              CKFrameworkBundle();
              v91 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_FAILURE_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
              v92 = objc_claimAutoreleasedReturnValue();
            }
            else
            {
              CKFrameworkBundle();
              v91 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("MADRID_FAILURE_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
              v92 = objc_claimAutoreleasedReturnValue();
            }
LABEL_102:
            v84 = (void *)v92;

            v85 = 0;
            goto LABEL_103;
          }
          if (CKIsRunningInMacCatalyst())
          {
            CKFrameworkBundle();
            v91 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("FULL_FAILURE_DESCRIPTION_MAC"), &stru_1E276D870, CFSTR("ChatKit"));
          }
          else
          {
            CKFrameworkBundle();
            v91 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v91, "localizedStringForKey:value:table:", CFSTR("FULL_FAILURE_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
          }
          goto LABEL_133;
        }
        CKFrameworkBundle();
        v72 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v72, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
        v127 = (void *)objc_claimAutoreleasedReturnValue();

        v71 = 1;
        goto LABEL_77;
      }
    }
    v124 = 0;
    goto LABEL_42;
  }
  v13 = objc_msgSend(v139, "stewieConversationID");
  objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "mostRecentlyUsedConversationForEmergency");

  if (v13 == v15)
  {
    objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "isStewieEmergencyActive");

    if ((v17 & 1) != 0)
      goto LABEL_18;
  }
LABEL_129:

  _Block_object_dispose(&v160, 8);
}

void __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "failureButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(a1 + 40);

    if (v8 == v9)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
      *a4 = 1;
    }
  }

}

void __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_819(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  int v9;
  int v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  int v19;
  void *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "isLocatingMessage") & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "conversation");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "chat");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "canSendCurrentLocationMessage");

    if (v6)
    {
      objc_msgSend(*(id *)(a1 + 40), "conversation");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "chat");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "sendCurrentLocationMessage");

    }
  }
  else if ((objc_msgSend(*(id *)(a1 + 32), "isFromMe") & 1) != 0)
  {
    v9 = *(unsigned __int8 *)(a1 + 48);
    v10 = IMOSLoggingEnabled();
    if (v9)
    {
      if (v10)
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          v12 = *(_QWORD *)(a1 + 32);
          v21 = 138412290;
          v22 = v12;
          _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Hawking: Original message blackholed, sending message as SMS. %@", (uint8_t *)&v21, 0xCu);
        }

      }
      objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "trackSpamEvent:", 10);

      objc_msgSend(*(id *)(a1 + 40), "_downgradeMessage:andDowngradeChat:", *(_QWORD *)(a1 + 32), 1);
    }
    else
    {
      if (v10)
      {
        OSLogHandleForIMFoundationCategory();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          v17 = *(_QWORD *)(a1 + 32);
          v21 = 138412290;
          v22 = v17;
          _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "Resending message as iMessage. %@", (uint8_t *)&v21, 0xCu);
        }

      }
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1040), "chat");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend(v18, "isStewieChat");

      v20 = *(void **)(a1 + 40);
      if (v19)
        objc_msgSend(v20, "_resendFailedMessages");
      else
        objc_msgSend(v20, "_resendMessage:", *(_QWORD *)(a1 + 32));
    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      v15 = *(_QWORD *)(a1 + 32);
      v21 = 138412290;
      v22 = v15;
      _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_INFO, "This message wasn't from me, why are we trying to re-send it? %@", (uint8_t *)&v21, 0xCu);
    }

  }
}

void __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_820(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t buf[4];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = *(_QWORD *)(a1 + 48);
  if (v4 == 1)
  {
    if (IMOSLoggingEnabled())
    {
      CKLogCStringForType(19);
      OSLogHandleForIMFoundationCategory();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        v9 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v12 = v9;
        _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_DEBUG, "Resending message as SMS. %@", buf, 0xCu);
      }

    }
    if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
    {
      v10 = *(_QWORD *)(a1 + 32);
      _CKLog();
    }
    objc_msgSend(*(id *)(a1 + 40), "_downgradeMessage:", *(_QWORD *)(a1 + 32), v10);
  }
  else if (!v4)
  {
    if (IMOSLoggingEnabled())
    {
      CKLogCStringForType(19);
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_DEBUG, "Hawking: Sending user to Hawking KB article", buf, 2u);
      }

    }
    if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
      _CKLog();
    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D39AF8], "internationalSpamFilterLearnMoreURL");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "openURL:withCompletionHandler:", v7, 0);

  }
  if (*(_QWORD *)(a1 + 56) == 1)
    objc_msgSend(*(id *)(a1 + 40), "_resendMessageUsingCurrentService:", *(_QWORD *)(a1 + 32));

}

uint64_t __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_825(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateLastAddressedHandleID:lastAddressedSIMID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return objc_msgSend(*(id *)(a1 + 32), "_resendMessage:", *(_QWORD *)(a1 + 56));
}

void __71__CKTranscriptCollectionViewController_touchUpInsideCellFailureButton___block_invoke_2(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "conversation");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "chat");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKTapToRadar launchTapToRadarForFailedMessage:inChat:](CKTapToRadar, "launchTapToRadarForFailedMessage:inChat:", v1, v2);

}

- (id)_indexPathOfCellContainingStampButton:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = __Block_byref_object_copy__38;
  v19 = __Block_byref_object_dispose__38;
  v20 = 0;
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __78__CKTranscriptCollectionViewController__indexPathOfCellContainingStampButton___block_invoke;
  v11[3] = &unk_1E27549A0;
  v7 = v5;
  v12 = v7;
  v8 = v4;
  v13 = v8;
  v14 = &v15;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v11);
  v9 = (id)v16[5];

  _Block_object_dispose(&v15, 8);
  return v9;
}

void __78__CKTranscriptCollectionViewController__indexPathOfCellContainingStampButton___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "stampButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8 == *(void **)(a1 + 40))
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
      *a4 = 1;
    }

  }
}

- (void)touchUpInsideCellStampButton:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;

  v4 = a3;
  if (CKIsRunningInMessagesNotificationExtension())
  {
    IMLogHandleForCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController touchUpInsideCellStampButton:].cold.3();
  }
  else
  {
    -[CKTranscriptCollectionViewController _indexPathOfCellContainingStampButton:](self, "_indexPathOfCellContainingStampButton:", v4);
    v5 = objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectAtIndex:", -[NSObject item](v5, "item"));
      v7 = objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          -[CKTranscriptCollectionViewController _handleTapOnMessageRetractionChatItem:](self, "_handleTapOnMessageRetractionChatItem:", v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          -[CKTranscriptCollectionViewController _handleTapOnParticipantChangeChatItem:](self, "_handleTapOnParticipantChangeChatItem:", v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          -[CKTranscriptCollectionViewController _handleTapOnGroupActionChatItem:](self, "_handleTapOnGroupActionChatItem:", v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          -[CKTranscriptCollectionViewController _handleTapOnGroupTitleChangeChatItem:](self, "_handleTapOnGroupTitleChangeChatItem:", v7);
      }
      else
      {
        IMLogHandleForCategory();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          -[CKTranscriptCollectionViewController touchUpInsideCellStampButton:].cold.2();

      }
    }
    else
    {
      IMLogHandleForCategory();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController touchUpInsideCellStampButton:].cold.1();
    }

  }
}

- (void)touchUpInsideCellStatusButton:(id)a3
{
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  CKAudioController *v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  int v27;
  NSObject *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  double v36;
  void *v37;
  char v38;
  void *v39;
  void *v40;
  void *v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  CKAudioController *v45;
  void *v46;
  char isKindOfClass;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  CKTextEffectCoordinatorContinuationState *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t i;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  CKAudioController *v71;
  void *v72;
  char v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  NSObject *v82;
  void *v83;
  NSObject *v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD v93[4];
  id v94;
  _QWORD v95[5];
  CKAudioController *v96;
  _QWORD v97[4];
  id v98;
  id v99;
  uint8_t *v100;
  uint8_t buf[8];
  uint8_t *v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t);
  void (*v105)(uint64_t);
  id v106;
  _BYTE v107[128];
  uint64_t v108;
  void *v109;
  uint8_t v110[4];
  const char *v111;
  _QWORD v112[3];

  v112[1] = *MEMORY[0x1E0C80C00];
  v88 = a3;
  if (CKIsRunningInMessagesNotificationExtension())
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "touchUpInsideCellStatusButton inside an extension, early returning", buf, 2u);
      }

    }
  }
  else
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)buf = 0;
    v102 = buf;
    v103 = 0x3032000000;
    v104 = __Block_byref_object_copy__38;
    v105 = __Block_byref_object_dispose__38;
    v106 = 0;
    objc_msgSend(v5, "indexPathsForVisibleItems");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = MEMORY[0x1E0C809B0];
    v97[0] = MEMORY[0x1E0C809B0];
    v97[1] = 3221225472;
    v97[2] = __70__CKTranscriptCollectionViewController_touchUpInsideCellStatusButton___block_invoke;
    v97[3] = &unk_1E27549A0;
    v86 = v5;
    v98 = v86;
    v99 = v88;
    v100 = buf;
    objc_msgSend(v6, "enumerateObjectsUsingBlock:", v97);

    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "objectAtIndex:", objc_msgSend(*((id *)v102 + 5), "item"));
    v87 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = v87;
    if (*((_QWORD *)v102 + 5))
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v85 = v87;
        switch(objc_msgSend(v85, "buttonType"))
        {
          case 1:
            v10 = objc_opt_class();
            v11 = objc_msgSend(*((id *)v102 + 5), "item");
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            -[CKTranscriptCollectionViewController _previousChatItemOfType:beforeIndex:inChatItems:](self, "_previousChatItemOfType:beforeIndex:inChatItems:", v10, v11, v12);
            v13 = (void *)objc_claimAutoreleasedReturnValue();

            v95[0] = v7;
            v95[1] = 3221225472;
            v95[2] = __70__CKTranscriptCollectionViewController_touchUpInsideCellStatusButton___block_invoke_2;
            v95[3] = &unk_1E274A108;
            v95[4] = self;
            v14 = v13;
            v96 = v14;
            -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v95, 1, 0);

            goto LABEL_118;
          case 2:
            -[CKTranscriptCollectionViewController audioController](self, "audioController");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            v31 = v30;
            if (v30)
            {
              objc_msgSend(v30, "stop");

            }
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v32, "__ck_indexesOfUnplayedAudioMessages");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            v93[0] = v7;
            v93[1] = 3221225472;
            v93[2] = __70__CKTranscriptCollectionViewController_touchUpInsideCellStatusButton___block_invoke_3;
            v93[3] = &unk_1E2754900;
            v34 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v33, "count"));
            v94 = v34;
            objc_msgSend(v32, "enumerateObjectsAtIndexes:options:usingBlock:", v33, 0, v93);
            v14 = -[CKAudioController initWithMediaObjects:]([CKAudioController alloc], "initWithMediaObjects:", v34);
            -[CKAudioController setDelegate:](v14, "setDelegate:", self);
            -[CKTranscriptCollectionViewController setAudioController:](self, "setAudioController:", v14);
            v35 = CKAudioPlaybackSpeakerEnabled();
            -[CKAudioController setShouldUseSpeaker:](v14, "setShouldUseSpeaker:", v35);
            v36 = 1.0;
            if ((_DWORD)v35)
              v36 = 0.0;
            -[CKAudioController playAfterDelay:](v14, "playAfterDelay:", v36);

            goto LABEL_118;
          case 3:
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            v18 = objc_opt_respondsToSelector();

            if ((v18 & 1) == 0)
              break;
            v19 = objc_opt_class();
            v20 = objc_msgSend(*((id *)v102 + 5), "item");
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            -[CKTranscriptCollectionViewController _previousChatItemOfType:beforeIndex:inChatItems:](self, "_previousChatItemOfType:beforeIndex:inChatItems:", v19, v20, v21);
            v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();

            -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v14);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            if (v22)
            {
              -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v22);
              v23 = (void *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v23 = 0;
            }
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v83 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v83, "transcriptCollectionViewController:didTapAttributionButtonForChatItem:parentIndexPath:", self, v85, v23);

            goto LABEL_118;
          case 4:
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            v38 = objc_opt_respondsToSelector();

            if ((v38 & 1) == 0)
              break;
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();
            -[CKAudioController transcriptCollectionViewController:didTapPluginStatusButtonForChatItem:](v14, "transcriptCollectionViewController:didTapPluginStatusButtonForChatItem:", self, v85);
            goto LABEL_118;
          case 5:
            objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v39, "trackEvent:", *MEMORY[0x1E0D38938]);

            -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
            v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();
            if ((-[CKAudioController isAnimating](v14, "isAnimating") & 1) != 0)
              goto LABEL_118;
            -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v40, "currentEffect");
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            v42 = v41 == 0;

            if (!v42)
              break;
            v43 = objc_msgSend(*((id *)v102 + 5), "item");
            v44 = v43 - 1;
            if (v43 < 1)
              goto LABEL_111;
            v45 = 0;
            do
            {
              -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
              v46 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v46, "objectAtIndex:", v44);
              v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();

              objc_opt_class();
              isKindOfClass = objc_opt_isKindOfClass();
              v44 -= (isKindOfClass & 1) == 0;
              v45 = v14;
            }
            while (!(isKindOfClass & 1 | (v44 < 0)));
            if ((isKindOfClass & 1) != 0)
            {
              -[CKAudioController IMChatItem](v14, "IMChatItem");
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v48, "message");
              v49 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v49, "text");
              v50 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v48) = objc_msgSend(v50, "ck_containsIMTextEffect");
              if ((v48 & -[CKTranscriptCollectionViewController textEffectIsCandidateBalloonViewChecksForChatItem:](self, "textEffectIsCandidateBalloonViewChecksForChatItem:", v14)) == 1)
              {
                -[CKAudioController IMChatItem](v14, "IMChatItem");
                v51 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v51, "guid");
                v52 = (void *)objc_claimAutoreleasedReturnValue();

                v53 = -[CKTextEffectCoordinatorContinuationState initWithTextViewIdentifier:locationInAttributedText:ignoreTextViewEligibilityCheck:]([CKTextEffectCoordinatorContinuationState alloc], "initWithTextViewIdentifier:locationInAttributedText:ignoreTextViewEligibilityCheck:", v52, 0, 1);
                -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v54, "resetAndContinueFromState:", v53);

                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Replay button tapped for identifier %@"), v52);
                v55 = (void *)objc_claimAutoreleasedReturnValue();
                -[CKTranscriptCollectionViewController transcriptTextEffectCoordinator](self, "transcriptTextEffectCoordinator");
                v56 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v56, "updateWithReason:", v55);

              }
              objc_msgSend(v49, "expressiveSendStyleID");
              v57 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v57, "containsString:", *MEMORY[0x1E0D38098]))
              {
                -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                -[CKAudioController message](v14, "message");
                v59 = (void *)objc_claimAutoreleasedReturnValue();
                v112[0] = v59;
                objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v112, 1);
                v60 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v58, "animateMessages:", v60);
              }
              else
              {
                if (IMOSLoggingEnabled())
                {
                  OSLogHandleForIMFoundationCategory();
                  v84 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)v110 = 136315138;
                    v111 = "-[CKTranscriptCollectionViewController touchUpInsideCellStatusButton:]";
                    _os_log_impl(&dword_18DFCD000, v84, OS_LOG_TYPE_INFO, "%s - Triggering FSM from replay action", v110, 0xCu);
                  }

                }
                -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                -[CKTranscriptCollectionViewController textInputMode](self, "textInputMode");
                v59 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v59, "primaryLanguage");
                v60 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v58, "startFullscreenEffectForChatItem:language:", v14, v60);
              }

            }
            goto LABEL_118;
          case 6:
            if ((-[CKTranscriptCollectionViewController isEditing](self, "isEditing") & 1) != 0)
              break;
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = objc_opt_respondsToSelector();

            if ((v25 & 1) == 0)
              break;
            -[CKTranscriptCollectionViewController delegate](self, "delegate");
            v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();
            -[CKAudioController transcriptCollectionViewController:didTapReplyCountStatusButtonForChatItem:](v14, "transcriptCollectionViewController:didTapReplyCountStatusButtonForChatItem:", self, v85);
            goto LABEL_118;
          case 7:
            v91 = 0u;
            v92 = 0u;
            v89 = 0u;
            v90 = 0u;
            -[CKTranscriptCollectionViewController chat](self, "chat");
            v61 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v61, "participants");
            v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();

            v62 = -[CKAudioController countByEnumeratingWithState:objects:count:](v14, "countByEnumeratingWithState:objects:count:", &v89, v107, 16);
            if (!v62)
              goto LABEL_118;
            v63 = 0;
            v64 = *(_QWORD *)v90;
            v65 = MEMORY[0x1E0C9AA60];
            do
            {
              for (i = 0; i != v62; ++i)
              {
                if (*(_QWORD *)v90 != v64)
                  objc_enumerationMutation(v14);
                v67 = (void *)MEMORY[0x1E0D397A8];
                objc_msgSend(*(id *)(*((_QWORD *)&v89 + 1) + 8 * i), "cnContactWithKeys:", v65);
                v68 = (void *)objc_claimAutoreleasedReturnValue();
                LOBYTE(v67) = objc_msgSend(v67, "isCNContactAKnownContact:", v68);

                v63 |= v67;
              }
              v62 = -[CKAudioController countByEnumeratingWithState:objects:count:](v14, "countByEnumeratingWithState:objects:count:", &v89, v107, 16);
            }
            while (v62);

            if ((v63 & 1) == 0)
              break;
            v69 = objc_msgSend(*((id *)v102 + 5), "item");
            v70 = v69 - 1;
            if (v69 < 1)
            {
LABEL_111:
              v14 = 0;
            }
            else
            {
              v71 = 0;
              do
              {
                -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
                v72 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v72, "objectAtIndex:", v70);
                v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();

                objc_opt_class();
                v73 = objc_opt_isKindOfClass();
                v70 -= (v73 & 1) == 0;
                v71 = v14;
              }
              while (!(v73 & 1 | (v70 < 0)));
              if ((v73 & 1) != 0)
              {
                objc_msgSend(v85, "IMChatItem");
                v74 = (void *)objc_claimAutoreleasedReturnValue();
                if (objc_msgSend(v74, "syndicationStatus") == 1)
                {
                  -[CKAudioController IMChatItem](v14, "IMChatItem");
                  v75 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v75, "guid");
                  v76 = (void *)objc_claimAutoreleasedReturnValue();

                  -[CKAudioController IMChatItem](v14, "IMChatItem");
                  v77 = (void *)objc_claimAutoreleasedReturnValue();
                  v78 = objc_msgSend(v77, "messagePartRange");
                  v80 = v79;

                  -[CKTranscriptCollectionViewController chat](self, "chat");
                  v81 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v81, "sendSyndicationAction:forMessagePartGUID:syndicatedMessagePartRange:", 32, v76, v78, v80);

                }
              }
            }
            goto LABEL_118;
          case 8:
            if (!IMOSLoggingEnabled())
              goto LABEL_94;
            OSLogHandleForIMFoundationCategory();
            v16 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "User selected \"Not Edited\" status item, prompting to resend edit", v110, 2u);
            }
            goto LABEL_93;
          case 9:
            if (!IMOSLoggingEnabled())
              goto LABEL_94;
            OSLogHandleForIMFoundationCategory();
            v16 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "User selected \"Delivered - Not Edited\" status item, prompting to resend edit", v110, 2u);
            }
            goto LABEL_93;
          case 10:
            if (!IMOSLoggingEnabled())
              goto LABEL_94;
            OSLogHandleForIMFoundationCategory();
            v16 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "User selected \"Delivered Quietly - Not Edited\" status item, prompting to resend edit", v110, 2u);
            }
            goto LABEL_93;
          case 11:
            if (!IMOSLoggingEnabled())
              goto LABEL_94;
            OSLogHandleForIMFoundationCategory();
            v16 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "User selected \"Read - Not Edited\" status item, prompting to resend edit", v110, 2u);
            }
LABEL_93:

LABEL_94:
            -[CKTranscriptCollectionViewController _handleFailedEditStatusButtonTappedForIndexPath:](self, "_handleFailedEditStatusButtonTappedForIndexPath:", *((_QWORD *)v102 + 5));
            break;
          case 12:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Edited\" status item, showing edit history", v110, 2u);
            }
            goto LABEL_102;
          case 13:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Delivered - Edited\" status item, showing edit history", v110, 2u);
            }
            goto LABEL_102;
          case 14:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Delivered Quietly - Edited\" status item, showing edit history", v110, 2u);
            }
            goto LABEL_102;
          case 15:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Read - Edited\" status item, showing edit history", v110, 2u);
            }
            goto LABEL_102;
          case 16:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Hide Edits\" status item, hiding edit history", v110, 2u);
            }
            goto LABEL_102;
          case 17:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Delivered - Hide Edits\" status item, hiding edit history", v110, 2u);
            }
            goto LABEL_102;
          case 18:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Delivered Quietly - Hide Edits\" status item, hiding edit history", v110, 2u);
            }
            goto LABEL_102;
          case 19:
            if (!IMOSLoggingEnabled())
              goto LABEL_103;
            OSLogHandleForIMFoundationCategory();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v110 = 0;
              _os_log_impl(&dword_18DFCD000, v15, OS_LOG_TYPE_INFO, "User selected \"Read - Hide Edits\" status item, hiding edit history", v110, 2u);
            }
LABEL_102:

LABEL_103:
            -[CKTranscriptCollectionViewController _handleEditHistoryButtonTappedForIndexPath:](self, "_handleEditHistoryButtonTappedForIndexPath:", *((_QWORD *)v102 + 5));
            break;
          case 20:
            objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            v27 = objc_msgSend(v26, "isCarrierPigeonEnabled");

            if (!v27)
              break;
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v28 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)v110 = 0;
                _os_log_impl(&dword_18DFCD000, v28, OS_LOG_TYPE_INFO, "User selected \"Send Via Satellite \" status item, trying to send message now", v110, 2u);
              }

            }
            -[CKTranscriptCollectionViewController _handleSendViaSatelliteButtonTappedForIndexPath:](self, "_handleSendViaSatelliteButtonTappedForIndexPath:", *((_QWORD *)v102 + 5));
            objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
            v14 = (CKAudioController *)objc_claimAutoreleasedReturnValue();
            v108 = *MEMORY[0x1E0D38AA8];
            v109 = &unk_1E28707B0;
            objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v109, &v108, 1);
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            -[CKAudioController trackEvent:withDictionary:](v14, "trackEvent:withDictionary:", *MEMORY[0x1E0D388E8], v29);

LABEL_118:
            break;
          case 22:
            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v82 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v82, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)v110 = 0;
                _os_log_impl(&dword_18DFCD000, v82, OS_LOG_TYPE_INFO, "User selected \"Not Cancelled\" status item, prompting to retry cancellation", v110, 2u);
              }

            }
            -[CKTranscriptCollectionViewController _handleFailedCancelStatusButtonTappedForIndexPath:](self, "_handleFailedCancelStatusButtonTappedForIndexPath:", *((_QWORD *)v102 + 5));
            break;
          default:
            break;
        }

        v9 = v87;
      }
    }

    _Block_object_dispose(buf, 8);
  }

}

void __70__CKTranscriptCollectionViewController_touchUpInsideCellStatusButton___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "statusButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(a1 + 40);

    if (v8 == v9)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
      *a4 = 1;
    }
  }

}

void __70__CKTranscriptCollectionViewController_touchUpInsideCellStatusButton___block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "IMChatItem");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "markChatItemAsSaved:", v2);

}

void __70__CKTranscriptCollectionViewController_touchUpInsideCellStatusButton___block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "mediaObject");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

- (void)_handleEditHistoryButtonTappedForIndexPath:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  int v14;
  int v15;
  NSObject *v16;
  NSObject *v17;
  int v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = objc_opt_class();
  v6 = objc_msgSend(v4, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _previousChatItemOfType:beforeIndex:inChatItems:](self, "_previousChatItemOfType:beforeIndex:inChatItems:", v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "IMChatItem");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v10 = v9;
    -[NSObject guid](v10, "guid");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v18 = 138412290;
        v19 = v11;
        _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, "User selected show edit history button for chatItemGUID: %@", (uint8_t *)&v18, 0xCu);
      }

    }
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "isShowingEditHistoryForChatItemGUID:", v11);
    v15 = IMOSLoggingEnabled();
    if (v14)
    {
      if (v15)
      {
        OSLogHandleForIMFoundationCategory();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          v18 = 138412290;
          v19 = v11;
          _os_log_impl(&dword_18DFCD000, v16, OS_LOG_TYPE_INFO, "Requested end showing edit history for chatItemGUID: %@", (uint8_t *)&v18, 0xCu);
        }

      }
      objc_msgSend(v13, "endShowingEditHistoryForChatItemGUID:", v11);
    }
    else
    {
      if (v15)
      {
        OSLogHandleForIMFoundationCategory();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          v18 = 138412290;
          v19 = v11;
          _os_log_impl(&dword_18DFCD000, v17, OS_LOG_TYPE_INFO, "Requested begin showing edit history for chatItemGUID: %@", (uint8_t *)&v18, 0xCu);
        }

      }
      objc_msgSend(v13, "beginShowingEditHistoryForChatItemGUID:", v11);
    }

  }
  else
  {
    IMLogHandleForCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController _handleEditHistoryButtonTappedForIndexPath:].cold.1();
  }

}

- (void)_handleFailedEditStatusButtonTappedForIndexPath:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  NSObject *v14;
  char v15;
  char v16;
  int v17;
  NSObject *v18;
  NSObject *v19;
  const char *v20;
  uint8_t *v21;
  uint8_t v22[16];
  uint8_t v23[2];
  __int16 v24;
  uint8_t buf[16];

  v4 = a3;
  v5 = objc_opt_class();
  v6 = objc_msgSend(v4, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _previousChatItemOfType:beforeIndex:inChatItems:](self, "_previousChatItemOfType:beforeIndex:inChatItems:", v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "IMChatItem");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v10 = v9;
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isScheduledMessagesCoreEnabled");

    if (v13 && -[NSObject scheduleType](v10, "scheduleType") == 2)
    {
      if (-[NSObject scheduleState](v10, "scheduleState") == 2)
      {
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v14 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_INFO, "Message is a scheduled message, presenting a resend confirmation alert to the user", buf, 2u);
          }

        }
        -[CKTranscriptCollectionViewController _presentEditedScheduledMessageResendConfirmationAlertForMessage:](self, "_presentEditedScheduledMessageResendConfirmationAlertForMessage:", v10);
      }
      goto LABEL_28;
    }
    v15 = -[NSObject canEditMessageText](v10, "canEditMessageText");
    v16 = objc_msgSend(v11, "supportsMessageEditing");
    v17 = IMOSLoggingEnabled();
    if ((v15 & 1) != 0)
    {
      if ((v16 & 1) != 0)
      {
        if (v17)
        {
          OSLogHandleForIMFoundationCategory();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)v22 = 0;
            _os_log_impl(&dword_18DFCD000, v18, OS_LOG_TYPE_INFO, "Message is still editable, presenting a resend confirmation alert to the user", v22, 2u);
          }

        }
        -[CKTranscriptCollectionViewController _presentEditedMessageResendConfirmationAlertForMessage:](self, "_presentEditedMessageResendConfirmationAlertForMessage:", v10);
        goto LABEL_28;
      }
      if (!v17)
        goto LABEL_27;
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        goto LABEL_26;
      *(_WORD *)v23 = 0;
      v20 = "Cannot resend edit to message. Conversation no longer supports editing. Presenting an explanatory alert to the user";
      v21 = v23;
    }
    else
    {
      if (!v17)
      {
LABEL_27:
        -[CKTranscriptCollectionViewController _presentMessageCanNoLongerBeEditedAlert](self, "_presentMessageCanNoLongerBeEditedAlert");
LABEL_28:

        goto LABEL_29;
      }
      OSLogHandleForIMFoundationCategory();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
LABEL_26:

        goto LABEL_27;
      }
      v24 = 0;
      v20 = "Cannot resend edit to message. Message is no longer editable, presenting an explanatory alert to the user";
      v21 = (uint8_t *)&v24;
    }
    _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, v20, v21, 2u);
    goto LABEL_26;
  }
  IMLogHandleForCategory();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    -[CKTranscriptCollectionViewController _handleEditHistoryButtonTappedForIndexPath:].cold.1();
LABEL_29:

}

- (void)_handleFailedCancelStatusButtonTappedForIndexPath:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  uint8_t v13[16];

  v4 = a3;
  v5 = objc_opt_class();
  v6 = objc_msgSend(v4, "item");
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _previousChatItemOfType:beforeIndex:inChatItems:](self, "_previousChatItemOfType:beforeIndex:inChatItems:", v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "IMChatItem");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v10 = v9;
    if (-[NSObject scheduleType](v10, "scheduleType") == 2 && -[NSObject scheduleState](v10, "scheduleState") == 2)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v13 = 0;
          _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "Message is still scheduled, presenting a resend confirmtion alert to the user.", v13, 2u);
        }

      }
      -[CKTranscriptCollectionViewController _presentCancelledScheduledMessageConfirmationAlertForMessage:](self, "_presentCancelledScheduledMessageConfirmationAlertForMessage:", v10);
    }
    else
    {
      IMLogHandleForCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController _handleFailedCancelStatusButtonTappedForIndexPath:].cold.1();

    }
  }
  else
  {
    IMLogHandleForCategory();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController _handleEditHistoryButtonTappedForIndexPath:].cold.1();
  }

}

- (void)_handleSendViaSatelliteButtonTappedForIndexPath:(id)a3
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __88__CKTranscriptCollectionViewController__handleSendViaSatelliteButtonTappedForIndexPath___block_invoke;
  v3[3] = &unk_1E274A208;
  v3[4] = self;
  -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v3, 0, &__block_literal_global_843_0);
}

uint64_t __88__CKTranscriptCollectionViewController__handleSendViaSatelliteButtonTappedForIndexPath___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1040), "sendPendingSatelliteMessages");
}

- (void)_presentMessageCanNoLongerBeEditedAlert
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  CKFrameworkBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_EDITED_AND_NO_LONGER_EDITABLE_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v10 = (id)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_EDITED_AND_NO_LONGER_EDITABLE_ALERT_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v10, v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("CONTINUE"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v8, 1, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addAction:", v9);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v6, 1, 0);

}

- (void)_presentEditedMessageResendConfirmationAlertForMessage:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id location;

  v4 = a3;
  CKFrameworkBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_EDITED_RETRY_EDIT_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_EDITED_RETRY_EDIT_ALERT_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, CKIsRunningInMacCatalyst() != 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  location = 0;
  objc_initWeak(&location, self);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __95__CKTranscriptCollectionViewController__presentEditedMessageResendConfirmationAlertForMessage___block_invoke;
  v17[3] = &unk_1E27550A8;
  objc_copyWeak(&v19, &location);
  v12 = v4;
  v18 = v12;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v11, 0, v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v13);
  CKFrameworkBundle();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v15, 1, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v16);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v9, 1, 0);

  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);

}

void __95__CKTranscriptCollectionViewController__presentEditedMessageResendConfirmationAlertForMessage___block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_resendEditedMessageForChatItem:", *(_QWORD *)(a1 + 32));

}

- (void)_resendEditedMessageForChatItem:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = a3;
  objc_msgSend(v4, "messageItem");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "index");

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "resendEditedMessageItem:forPartIndex:", v7, v5);

}

- (void)_handleTapOnGroupActionChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  id v12;
  CKTranscriptCollectionViewController *v13;

  v4 = a3;
  if (objc_msgSend(v4, "failed"))
  {
    -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "errorText");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = MEMORY[0x1E0C809B0];
    v9 = 3221225472;
    v10 = __72__CKTranscriptCollectionViewController__handleTapOnGroupActionChatItem___block_invoke;
    v11 = &unk_1E274B818;
    v12 = v4;
    v13 = self;
    -[CKTranscriptCollectionViewController _buildRetryAlertWithMessage:sourceView:tryAgainAction:](self, "_buildRetryAlertWithMessage:sourceView:tryAgainAction:", v6, v5, &v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v7, 1, 0, v8, v9, v10, v11);
  }

}

void __72__CKTranscriptCollectionViewController__handleTapOnGroupActionChatItem___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "fileTransferGUIDs");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstObject");
  v4 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 40), "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sendGroupPhotoUpdate:", v4);

}

- (void)_handleTapOnParticipantChangeChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  id v12;
  CKTranscriptCollectionViewController *v13;

  v4 = a3;
  if (objc_msgSend(v4, "failed"))
  {
    -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "errorText");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = MEMORY[0x1E0C809B0];
    v9 = 3221225472;
    v10 = __78__CKTranscriptCollectionViewController__handleTapOnParticipantChangeChatItem___block_invoke;
    v11 = &unk_1E274B818;
    v12 = v4;
    v13 = self;
    -[CKTranscriptCollectionViewController _buildRetryAlertWithMessage:sourceView:tryAgainAction:](self, "_buildRetryAlertWithMessage:sourceView:tryAgainAction:", v6, v5, &v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v7, 1, 0, v8, v9, v10, v11);
  }

}

void __78__CKTranscriptCollectionViewController__handleTapOnParticipantChangeChatItem___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "handle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = objc_msgSend(*(id *)(a1 + 32), "changeType");
    if (v3 == 1)
    {
      objc_msgSend(*(id *)(a1 + 40), "conversation");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "handle");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v5;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v7, 1);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "removeRecipientHandles:", v6);
    }
    else
    {
      if (v3)
        return;
      objc_msgSend(*(id *)(a1 + 40), "conversation");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "handle");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v8[0] = v5;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "addRecipientHandles:", v6);
    }

  }
}

- (void)_handleTapOnGroupTitleChangeChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  CKTranscriptCollectionViewController *v12;
  id v13;

  v4 = a3;
  if (objc_msgSend(v4, "failed"))
  {
    -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "errorText");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = MEMORY[0x1E0C809B0];
    v9 = 3221225472;
    v10 = __77__CKTranscriptCollectionViewController__handleTapOnGroupTitleChangeChatItem___block_invoke;
    v11 = &unk_1E274B818;
    v12 = self;
    v13 = v4;
    -[CKTranscriptCollectionViewController _buildRetryAlertWithMessage:sourceView:tryAgainAction:](self, "_buildRetryAlertWithMessage:sourceView:tryAgainAction:", v6, v5, &v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v7, 1, 0, v8, v9, v10, v11, v12);
  }

}

void __77__CKTranscriptCollectionViewController__handleTapOnGroupTitleChangeChatItem___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "title");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setDisplayName:", v2);

}

- (id)_buildRetryAlertWithMessage:(id)a3 sourceView:(id)a4 tryAgainAction:(id)a5
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;

  v7 = a5;
  v8 = a4;
  v9 = a3;
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", 0, v9, CKIsRunningInMacCatalyst() != 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v12, 0, v7);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v15, 1, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "addAction:", v16);
  objc_msgSend(v10, "addAction:", v13);
  objc_msgSend(v10, "popoverPresentationController");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setSourceView:", v8);

  objc_msgSend(v8, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  objc_msgSend(v10, "popoverPresentationController");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "setSourceRect:", v19, v21, v23, v25);

  return v10;
}

- (void)_handleTapOnMessageRetractionChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  char v7;
  char v8;
  int v9;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  const char *v13;
  uint8_t *v14;
  uint8_t v15[16];
  uint8_t v16[2];
  __int16 v17;
  uint8_t buf[16];

  v4 = a3;
  objc_msgSend(v4, "IMChatItem");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v5, "isFailedRetraction") & 1) != 0)
  {
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "canRetryFailedRetraction");
    v8 = objc_msgSend(v6, "supportsMessageEditing");
    v9 = IMOSLoggingEnabled();
    if ((v7 & 1) != 0)
    {
      if ((v8 & 1) != 0)
      {
        if (v9)
        {
          OSLogHandleForIMFoundationCategory();
          v10 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)v15 = 0;
            _os_log_impl(&dword_18DFCD000, v10, OS_LOG_TYPE_INFO, "Message is still editable, presenting a resend confirmation alert to the user", v15, 2u);
          }

        }
        -[CKTranscriptCollectionViewController _presentRetractedMessageResendConfirmationAlertForIMChatItem:](self, "_presentRetractedMessageResendConfirmationAlertForIMChatItem:", v5);
        goto LABEL_22;
      }
      if (v9)
      {
        OSLogHandleForIMFoundationCategory();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v16 = 0;
          v13 = "Cannot resend edit to message. Conversation no longer supports editing. Presenting an explanatory alert to the user";
          v14 = v16;
          goto LABEL_19;
        }
        goto LABEL_20;
      }
    }
    else if (v9)
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v17 = 0;
        v13 = "Cannot resend edit to message. Message does not support retrying retraction, presenting an explanatory alert to the user";
        v14 = (uint8_t *)&v17;
LABEL_19:
        _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, v13, v14, 2u);
      }
LABEL_20:

    }
    -[CKTranscriptCollectionViewController _presentMessageCanNoLongerBeRetractedAlert](self, "_presentMessageCanNoLongerBeRetractedAlert");
LABEL_22:

    goto LABEL_23;
  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "User selected a message retraction chat item that is not a failed retraction, ignoring selection", buf, 2u);
    }

  }
LABEL_23:

}

- (void)_presentMessageCanNoLongerBeRetractedAlert
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  CKFrameworkBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_RETRACTED_AND_NO_LONGER_RETRACTABLE_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v10 = (id)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_RETRACTED_AND_NO_LONGER_RETRACTABLE_ALERT_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v10, v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("CONTINUE"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v8, 1, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addAction:", v9);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v6, 1, 0);

}

- (void)_presentRetractedMessageResendConfirmationAlertForIMChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id location;

  v4 = a3;
  CKFrameworkBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_RETRACTED_RETRY_RETRACTION_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("MESSAGE_NOT_RETRACTED_RETRY_RETRACTION_ALERT_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, CKIsRunningInMacCatalyst() != 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  location = 0;
  objc_initWeak(&location, self);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __101__CKTranscriptCollectionViewController__presentRetractedMessageResendConfirmationAlertForIMChatItem___block_invoke;
  v17[3] = &unk_1E27550A8;
  objc_copyWeak(&v19, &location);
  v12 = v4;
  v18 = v12;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v11, 0, v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v13);
  CKFrameworkBundle();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v15, 1, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v16);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v9, 1, 0);

  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);

}

void __101__CKTranscriptCollectionViewController__presentRetractedMessageResendConfirmationAlertForIMChatItem___block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_resendMessageRetractionForChatItem:", *(_QWORD *)(a1 + 32));

}

- (void)_resendMessageRetractionForChatItem:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = a3;
  objc_msgSend(v4, "messageItem");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "partIndex");

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "resendEditedMessageItem:forPartIndex:", v7, v5);

}

- (void)_presentEditedScheduledMessageResendConfirmationAlertForMessage:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id location;

  v4 = a3;
  CKFrameworkBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_NOT_EDITED_RETRY_EDIT_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_NOT_EDITED_RETRY_EDIT_ALERT_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, CKIsRunningInMacCatalyst() != 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  location = 0;
  objc_initWeak(&location, self);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __104__CKTranscriptCollectionViewController__presentEditedScheduledMessageResendConfirmationAlertForMessage___block_invoke;
  v17[3] = &unk_1E27550A8;
  objc_copyWeak(&v19, &location);
  v12 = v4;
  v18 = v12;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v11, 0, v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v13);
  CKFrameworkBundle();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v15, 1, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v16);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v9, 1, 0);

  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);

}

void __104__CKTranscriptCollectionViewController__presentEditedScheduledMessageResendConfirmationAlertForMessage___block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_resendEditedScheduledMessageForChatItem:", *(_QWORD *)(a1 + 32));

}

- (void)_resendEditedScheduledMessageForChatItem:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v4 = a3;
  objc_msgSend(v4, "messageItem");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "index");

  objc_msgSend(v10, "historyForMessagePart:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "lastObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "messagePartText");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "editScheduledMessageItem:atPartIndex:withNewPartText:", v10, v5, v8);

}

- (void)_presentCancelledScheduledMessageConfirmationAlertForMessage:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id location;

  v4 = a3;
  CKFrameworkBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_NOT_RETRACTED_RETRY_RETRACTION_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("SCHEDULED_MESSAGE_NOT_RETRACTED_RETRY_RETRACTION_ALERT_DESCRIPTION"), &stru_1E276D870, CFSTR("ChatKit"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, CKIsRunningInMacCatalyst() != 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("TRY_AGAIN"), &stru_1E276D870, CFSTR("ChatKit"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  location = 0;
  objc_initWeak(&location, self);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __101__CKTranscriptCollectionViewController__presentCancelledScheduledMessageConfirmationAlertForMessage___block_invoke;
  v17[3] = &unk_1E27550A8;
  objc_copyWeak(&v19, &location);
  v12 = v4;
  v18 = v12;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v11, 0, v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v13);
  CKFrameworkBundle();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v15, 1, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addAction:", v16);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v9, 1, 0);

  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);

}

void __101__CKTranscriptCollectionViewController__presentCancelledScheduledMessageConfirmationAlertForMessage___block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_reattemptMessageCancellationForChatItem:", *(_QWORD *)(a1 + 32));

}

- (void)_reattemptMessageCancellationForChatItem:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "retractMessagePart:", v4);

}

- (void)_handleCommSafetyMessageSomeoneStatusButtonTappedForIndexPath:(id)a3
{
  void *v4;
  id v5;
  void *v6;
  id v7;

  v4 = (void *)MEMORY[0x1E0D397D8];
  v5 = a3;
  objc_msgSend(v4, "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "logPrivatizedUIInteractionEvent:", 1);

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "transcriptCollectionViewController:showMessageSomeoneForItemWithIndexPath:", self, v5);

}

- (void)_handleCommSafetySensitiveReceiveStatusButtonTappedForIndexPath:(id)a3
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)MEMORY[0x1E0D397D8];
  v6 = a3;
  objc_msgSend(v4, "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "logPrivatizedUIInteractionEvent:", 0);

  -[CKTranscriptCollectionViewController presentUserInterventionScreenForIndexPath:shouldTargetAssociatedItems:](self, "presentUserInterventionScreenForIndexPath:shouldTargetAssociatedItems:", v6, 0);
}

- (void)touchUpInsideCellSpeakerButton:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = __Block_byref_object_copy__38;
  v19 = __Block_byref_object_dispose__38;
  v20 = 0;
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __71__CKTranscriptCollectionViewController_touchUpInsideCellSpeakerButton___block_invoke;
  v11[3] = &unk_1E27549A0;
  v7 = v5;
  v12 = v7;
  v8 = v4;
  v13 = v8;
  v14 = &v15;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v11);

  if (v16[5])
  {
    v9 = CKAudioPlaybackSpeakerEnabled() ^ 1;
    CKSetAudioPlaybackSpeakerEnabled();
    -[CKTranscriptCollectionViewController audioController](self, "audioController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setShouldUseSpeaker:", v9);

  }
  _Block_object_dispose(&v15, 8);

}

void __71__CKTranscriptCollectionViewController_touchUpInsideCellSpeakerButton___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "speakerButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(a1 + 40);

    if (v8 == v9)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
      *a4 = 1;
    }
  }

}

- (void)touchUpInsideCellReportSpamButton:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[5];
  _QWORD v36[5];
  uint8_t buf[16];
  _QWORD v38[4];
  id v39;
  id v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t);
  id v47;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v42 = 0;
  v43 = &v42;
  v44 = 0x3032000000;
  v45 = __Block_byref_object_copy__38;
  v46 = __Block_byref_object_dispose__38;
  v47 = 0;
  objc_msgSend(v5, "indexPathsForVisibleItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = MEMORY[0x1E0C809B0];
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = __74__CKTranscriptCollectionViewController_touchUpInsideCellReportSpamButton___block_invoke;
  v38[3] = &unk_1E27549A0;
  v8 = v5;
  v39 = v8;
  v9 = v4;
  v40 = v9;
  v41 = &v42;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v38);

  if (v43[5])
  {
    if (CKIsRunningInMessagesNotificationExtension())
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18DFCD000, v10, OS_LOG_TYPE_INFO, "Touching up inside a messages spam extension", buf, 2u);
        }

      }
    }
    else
    {
      objc_msgSend(v8, "cellForItemAtIndexPath:", v43[5]);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v11, "showReportSMSSpam"))
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "transcriptCollectionViewControllerDisplaySMSSpamReporting:", self);
      }
      else
      {
        objc_msgSend(v11, "reportSpamButton");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController reportJunkAlertControllerTitle](self, "reportJunkAlertControllerTitle");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v34, 0, 0);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        CKFrameworkBundle();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("REPORT_SPAM_ALERT_BUTTON_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v36[0] = v7;
        v36[1] = 3221225472;
        v36[2] = __74__CKTranscriptCollectionViewController_touchUpInsideCellReportSpamButton___block_invoke_874;
        v36[3] = &unk_1E274B0D8;
        v36[4] = self;
        +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v15, 2, v36);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "addAction:", v16);

        CKFrameworkBundle();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v35[0] = v7;
        v35[1] = 3221225472;
        v35[2] = __74__CKTranscriptCollectionViewController_touchUpInsideCellReportSpamButton___block_invoke_875;
        v35[3] = &unk_1E274B0D8;
        v35[4] = self;
        +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v18, 1, v35);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "addAction:", v19);

        objc_msgSend(v13, "popoverPresentationController");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "setPermittedArrowDirections:", 3);

        objc_msgSend(v13, "popoverPresentationController");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController view](self, "view");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "frame");
        v24 = v23;
        v26 = v25;
        v28 = v27;
        v30 = v29;
        objc_msgSend(v12, "superview");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "convertRect:fromView:", v31, v24, v26, v28, v30);
        objc_msgSend(v21, "setSourceRect:");

        objc_msgSend(v13, "popoverPresentationController");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController view](self, "view");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v32, "setSourceView:", v33);

        -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v13, 1, 0);
      }

    }
  }

  _Block_object_dispose(&v42, 8);
}

void __74__CKTranscriptCollectionViewController_touchUpInsideCellReportSpamButton___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "reportSpamButton");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(a1 + 40);

    if (v8 == v9)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
      *a4 = 1;
    }
  }

}

void __74__CKTranscriptCollectionViewController_touchUpInsideCellReportSpamButton___block_invoke_874(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "User requested to send report of junk message.", v5, 2u);
    }

  }
  objc_msgSend(*(id *)(a1 + 32), "reportJunkAlertControllerActionHandler");

}

void __74__CKTranscriptCollectionViewController_touchUpInsideCellReportSpamButton___block_invoke_875(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "chat");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "account");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "supportsCapability:", *MEMORY[0x1E0D38E90]) & 1) != 0)
  {
    v4 = (void *)MEMORY[0x1E0D35778];
    objc_msgSend(*(id *)(a1 + 32), "chat");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "lastFinishedMessageItem");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "chat");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v4) = objc_msgSend(v4, "isReportJunkServiceAllowedForMessageItem:junkChatStyle:", v6, objc_msgSend(v7, "chatStyle"));

    if (!(_DWORD)v4)
      return;
    objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "trackEvent:withDictionary:", *MEMORY[0x1E0D38518], &unk_1E2871D08);
  }
  else
  {

  }
}

- (void)reportJunkAlertControllerActionHandler
{
  void *v3;
  int v4;
  CKReportSpamReasonContoller *v5;
  void *v6;
  void *v7;
  CKReportSpamReasonContoller *v8;
  void *v9;
  void *v10;
  int v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  int v23;
  void *v24;
  void *v25;
  char v26;
  NSObject *v27;
  uint8_t buf[8];
  _QWORD v29[5];
  _QWORD v30[2];

  v30[1] = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "shouldPresentSpamReasonPicker");

  if (v4)
  {
    v5 = [CKReportSpamReasonContoller alloc];
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v30[0] = v6;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v30, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = MEMORY[0x1E0C809B0];
    v29[1] = 3221225472;
    v29[2] = __78__CKTranscriptCollectionViewController_reportJunkAlertControllerActionHandler__block_invoke;
    v29[3] = &unk_1E274A208;
    v29[4] = self;
    v8 = -[CKReportSpamReasonContoller initWithConversations:didReportBlock:](v5, "initWithConversations:didReportBlock:", v7, v29);

    v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA7B8]), "initWithRootViewController:", v8);
    objc_msgSend(v9, "setModalPresentationStyle:", 2);
    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v9, 1, 0);

    return;
  }
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isChatBot");

  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, "Conversation is with a chatbot, starting to report chatbot as spam...", buf, 2u);
      }

    }
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "reportChatbotSpam:", 0);

  }
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "account");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "service");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "supportsCapability:", *MEMORY[0x1E0D38E90]);
  if ((v17 & 1) == 0)
  {

    goto LABEL_13;
  }
  v18 = (void *)MEMORY[0x1E0D35778];
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "lastFinishedMessageItem");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v18) = objc_msgSend(v18, "isReportJunkServiceAllowedForMessageItem:junkChatStyle:", v20, objc_msgSend(v21, "chatStyle"));

  if ((_DWORD)v18)
  {
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "reportJunkToCarrier");
LABEL_13:

    goto LABEL_15;
  }
  v17 = 0;
LABEL_15:
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "isReportJunkTextToAppleServerEnabled");

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v24;
  if (v23)
  {
    objc_msgSend(v24, "markAsSpam:isJunkReportedToCarrier:", +[CKUtilities messageJunkStatus](CKUtilities, "messageJunkStatus"), v17);
  }
  else
  {
    if (objc_msgSend(v24, "isSMS"))
    {
      v26 = IMShouldHandleInternalPhishingAttempts();

      if ((v26 & 1) == 0)
        goto LABEL_27;
    }
    else
    {

    }
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18DFCD000, v27, OS_LOG_TYPE_INFO, "Starting to report junk messages to IST", buf, 2u);
      }

    }
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "markAsSpam:", +[CKUtilities messageJunkStatus](CKUtilities, "messageJunkStatus"));
  }

LABEL_27:
  im_dispatch_after();
}

uint64_t __78__CKTranscriptCollectionViewController_reportJunkAlertControllerActionHandler__block_invoke(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __78__CKTranscriptCollectionViewController_reportJunkAlertControllerActionHandler__block_invoke_2;
  v3[3] = &unk_1E274A208;
  v3[4] = v1;
  return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v3);
}

void __78__CKTranscriptCollectionViewController_reportJunkAlertControllerActionHandler__block_invoke_2(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "transcriptCollectionViewControllerReportSpamButtonTapped:", *(_QWORD *)(a1 + 32));

}

void __78__CKTranscriptCollectionViewController_reportJunkAlertControllerActionHandler__block_invoke_884(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "transcriptCollectionViewControllerReportSpamButtonTapped:", *(_QWORD *)(a1 + 32));

}

- (id)reportJunkAlertControllerTitle
{
  id v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  __CFString *v28;
  uint64_t v29;
  void *v30;

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isChatBot");

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "account");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "service");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "supportsCapability:", *MEMORY[0x1E0D38E90]))
  {
    v9 = (void *)MEMORY[0x1E0D35778];
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "lastFinishedMessageItem");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chat](self, "chat");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v9, "isReportJunkServiceAllowedForMessageItem:junkChatStyle:", v11, objc_msgSend(v12, "chatStyle")) | v5;

    if ((v13 & 1) == 0)
    {
      v5 = 0;
      goto LABEL_8;
    }
  }
  else
  {

    if (!v5)
      goto LABEL_8;
  }
  v14 = (void *)MEMORY[0x1E0D39730];
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "lastFinishedMessageItem");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "destinationCallerID");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "carrierNameForPhoneNumber:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = v18 != 0;
  if (v18)
    objc_msgSend(v3, "addObject:", v18);

LABEL_8:
  CKFrameworkBundle();
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("APPLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObject:", v20);

  objc_msgSend(MEMORY[0x1E0CB3738], "localizedStringByJoiningStrings:", v3);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v22 = (void *)MEMORY[0x1E0CB3940];
    CKFrameworkBundle();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("REPORT_JUNK_CONVERSATION_ALERT_BUTTON_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "stringWithFormat:", v24, v21);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "userInterfaceLayoutDirection");

    if (v27 == 1)
      v28 = CFSTR("\u200F");
    else
      v28 = CFSTR("\u200E");
    -[__CFString stringByAppendingString:](v28, "stringByAppendingString:", v25);
    v29 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    CKFrameworkBundle();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("REPORT_JUNK_APPLE_CONVERSATION_ALERT_BUTTON_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
    v29 = objc_claimAutoreleasedReturnValue();
  }
  v30 = (void *)v29;

  return v30;
}

- (void)_messageParents
{
  id v2;

  objc_msgSend(MEMORY[0x1E0D357E0], "sharedInstance");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "getOpenChatURLWith:", &__block_literal_global_895_0);

}

void __55__CKTranscriptCollectionViewController__messageParents__block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)MEMORY[0x1E0CEA2F8];
  v3 = a2;
  objc_msgSend(v2, "sharedApplication");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "openURL:options:completionHandler:", v3, MEMORY[0x1E0C9AA70], 0);

}

- (void)_showMoreHelp
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  +[CKCommSafetyHelper waysToGetHelpURL](CKCommSafetyHelper, "waysToGetHelpURL");
  v15 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_alloc_init(MEMORY[0x1E0CEF638]);
  objc_msgSend(MEMORY[0x1E0CEF650], "nonPersistentDataStore");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setWebsiteDataStore:", v4);
  v5 = objc_alloc(MEMORY[0x1E0CEF630]);
  v6 = (void *)objc_msgSend(v5, "initWithFrame:configuration:", v3, *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
  v7 = objc_alloc(MEMORY[0x1E0CB39E0]);
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v15);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithURL:", v8);

  v10 = (id)objc_msgSend(v6, "loadRequest:", v9);
  v11 = objc_alloc_init(MEMORY[0x1E0CEABB8]);
  objc_msgSend(v11, "setView:", v6);
  v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA380]), "initWithBarButtonSystemItem:target:action:", 0, self, sel__dismissMoreHelpView_);
  objc_msgSend(v11, "navigationItem");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setRightBarButtonItem:", v12);

  v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA7B8]), "initWithRootViewController:", v11);
  objc_msgSend(v14, "setModalPresentationStyle:", 2);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v14, 1, 0);

}

- (void)_dismissMoreHelpView:(id)a3
{
  -[CKTranscriptCollectionViewController dismissViewControllerAnimated:completion:](self, "dismissViewControllerAnimated:completion:", 1, 0);
}

- (void)_blockHandle:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  __CFString *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  __CFString *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v31[4];
  id v32;
  CKTranscriptCollectionViewController *v33;

  v3 = a3;
  v4 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("BLOCK_PERSON_ALERT_TITLE"), &stru_1E276D870, CFSTR("ChatKit"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "name");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "userInterfaceLayoutDirection");

  if (v10 == 1)
    v11 = CFSTR("\u200F");
  else
    v11 = CFSTR("\u200E");
  -[__CFString stringByAppendingString:](v11, "stringByAppendingString:", v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = (void *)MEMORY[0x1E0CB3940];
  CKFrameworkBundle();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("BLOCK_PERSON_ALERT_TEXT"), &stru_1E276D870, CFSTR("ChatKit"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "nameAndID");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "stringWithFormat:", v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "userInterfaceLayoutDirection");

  if (v19 == 1)
    v20 = CFSTR("\u200F");
  else
    v20 = CFSTR("\u200E");
  -[__CFString stringByAppendingString:](v20, "stringByAppendingString:", v17);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA2E8], "alertControllerWithTitle:message:preferredStyle:", v12, v21, 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  CKFrameworkBundle();
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("BLOCK"), &stru_1E276D870, CFSTR("ChatKit"));
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = MEMORY[0x1E0C809B0];
  v31[1] = 3221225472;
  v31[2] = __53__CKTranscriptCollectionViewController__blockHandle___block_invoke;
  v31[3] = &unk_1E274B818;
  v32 = v3;
  v33 = self;
  v25 = v3;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v24, 2, v31);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "addAction:", v26);

  CKFrameworkBundle();
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v28, 1, 0);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "addAction:", v29);

  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v22, 1, 0);
}

void __53__CKTranscriptCollectionViewController__blockHandle___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD block[5];

  objc_msgSend(MEMORY[0x1E0D396F0], "sharedBlockList");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "ID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "blockAddress:", v3);

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __53__CKTranscriptCollectionViewController__blockHandle___block_invoke_2;
  block[3] = &unk_1E274A208;
  block[4] = *(_QWORD *)(a1 + 40);
  dispatch_async(MEMORY[0x1E0C80D38], block);
}

uint64_t __53__CKTranscriptCollectionViewController__blockHandle___block_invoke_2(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __53__CKTranscriptCollectionViewController__blockHandle___block_invoke_3;
  v3[3] = &unk_1E274A208;
  v3[4] = v1;
  return objc_msgSend(v1, "updateTranscript:animated:completion:", v3, 0, 0);
}

uint64_t __53__CKTranscriptCollectionViewController__blockHandle___block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceReloadChatItems");
}

- (void)_showLeaveConversationFromView:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[5];

  CKFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("LEAVE_CONVERSATION"), &stru_1E276D870, CFSTR("ChatKit"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", 0, 0, CKIsRunningInMacCatalyst() != 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __71__CKTranscriptCollectionViewController__showLeaveConversationFromView___block_invoke;
  v11[3] = &unk_1E274B0D8;
  v11[4] = self;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v5, 2, v11);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addAction:", v7);

  CKFrameworkBundle();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v9, 1, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addAction:", v10);

  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v6, 1, 0);
}

uint64_t __71__CKTranscriptCollectionViewController__showLeaveConversationFromView___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v20[5];
  _QWORD v21[5];

  objc_msgSend(*(id *)(a1 + 32), "conversation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "leave");

  objc_msgSend(*(id *)(a1 + 32), "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "chat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "hasRecipientsFollowingLocation");

  v7 = MEMORY[0x1E0C809B0];
  if (v6)
  {
    v8 = (void *)MEMORY[0x1E0CEA2E8];
    CKFrameworkBundle();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("STOP_SHARING_ON_DELETE_OR_LEAVE_BODY"), &stru_1E276D870, CFSTR("ChatKit"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "alertControllerWithTitle:message:preferredStyle:", 0, v10, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    CKFrameworkBundle();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("YES"), &stru_1E276D870, CFSTR("ChatKit"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = v7;
    v21[1] = 3221225472;
    v21[2] = __71__CKTranscriptCollectionViewController__showLeaveConversationFromView___block_invoke_2;
    v21[3] = &unk_1E274B0D8;
    v21[4] = *(_QWORD *)(a1 + 32);
    +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v13, 0, v21);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addAction:", v14);

    CKFrameworkBundle();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("NO"), &stru_1E276D870, CFSTR("ChatKit"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v16, 1, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addAction:", v17);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v11, 1, 0);
  }
  v18 = *(void **)(a1 + 32);
  v20[0] = v7;
  v20[1] = 3221225472;
  v20[2] = __71__CKTranscriptCollectionViewController__showLeaveConversationFromView___block_invoke_3;
  v20[3] = &unk_1E274A208;
  v20[4] = v18;
  return objc_msgSend(v18, "updateTranscript:animated:completion:", v20, 0, 0);
}

void __71__CKTranscriptCollectionViewController__showLeaveConversationFromView___block_invoke_2(uint64_t a1)
{
  void *v1;
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "conversation");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "chat");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stopSharingLocation");

}

uint64_t __71__CKTranscriptCollectionViewController__showLeaveConversationFromView___block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceReloadChatItems");
}

- (void)_showBlockContactSelectionAlertFromView:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  CKTranscriptCollectionViewController *v21;
  uint64_t v22;
  _UNKNOWN **v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id obj;
  _QWORD v33[6];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  IMSharedUtilitiesFrameworkBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("BLOCK_CONTACT_BUTTON_TITLE"), &stru_1E276D870, CFSTR("CommSafetyLocalizable"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKAlertController, "alertControllerWithTitle:message:preferredStyle:", v5, 0, CKIsRunningInMacCatalyst() != 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "recipients");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  obj = v8;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
  v10 = &off_1E2732000;
  if (v9)
  {
    v11 = v9;
    v12 = *(_QWORD *)v35;
    v13 = MEMORY[0x1E0C809B0];
    do
    {
      v14 = 0;
      v31 = v11;
      do
      {
        if (*(_QWORD *)v35 != v12)
          objc_enumerationMutation(obj);
        v15 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * v14);
        objc_msgSend(v15, "name", v31);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = v16;
        if (v16)
        {
          v18 = v16;
        }
        else
        {
          objc_msgSend(v15, "defaultIMHandle");
          v19 = v12;
          v20 = v6;
          v21 = self;
          v22 = v13;
          v23 = v10;
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "displayID");
          v18 = (id)objc_claimAutoreleasedReturnValue();

          v10 = v23;
          v13 = v22;
          self = v21;
          v6 = v20;
          v12 = v19;
          v11 = v31;
        }

        v25 = v10[354];
        v33[0] = v13;
        v33[1] = 3221225472;
        v33[2] = __80__CKTranscriptCollectionViewController__showBlockContactSelectionAlertFromView___block_invoke;
        v33[3] = &unk_1E274B818;
        v33[4] = self;
        v33[5] = v15;
        objc_msgSend(v25, "actionWithTitle:style:handler:", v18, 2, v33);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addAction:", v26);

        ++v14;
      }
      while (v11 != v14);
      v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
    }
    while (v11);
  }

  v27 = v10[354];
  CKFrameworkBundle();
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "actionWithTitle:style:handler:", v29, 1, 0);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addAction:", v30);

  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v6, 1, 0);
}

void __80__CKTranscriptCollectionViewController__showBlockContactSelectionAlertFromView___block_invoke(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "defaultIMHandle");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_blockHandle:", v2);

}

- (void)addContentAnimationPauseReasons:(int64_t)a3
{
  int64_t contentAnimationPauseReasons;
  BOOL v4;

  contentAnimationPauseReasons = self->_contentAnimationPauseReasons;
  self->_contentAnimationPauseReasons = contentAnimationPauseReasons | a3;
  if (contentAnimationPauseReasons)
    v4 = 1;
  else
    v4 = a3 == 0;
  if (!v4)
    -[CKTranscriptCollectionViewController updateAnimationPaused](self, "updateAnimationPaused");
}

- (void)removeContentAnimationPauseReasons:(int64_t)a3
{
  int64_t contentAnimationPauseReasons;
  int64_t v4;
  BOOL v5;

  contentAnimationPauseReasons = self->_contentAnimationPauseReasons;
  v4 = contentAnimationPauseReasons & ~a3;
  self->_contentAnimationPauseReasons = v4;
  if (contentAnimationPauseReasons)
    v5 = v4 == 0;
  else
    v5 = 0;
  if (v5)
    -[CKTranscriptCollectionViewController updateAnimationPaused](self, "updateAnimationPaused");
}

- (void)updateAnimationPaused
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "visibleCells");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          objc_msgSend(v9, "setAnimationPauseReasons:", -[CKTranscriptCollectionViewController contentAnimationPauseReasons](self, "contentAnimationPauseReasons"));
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v6);
  }

}

- (void)cullCellSubviews
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "visibleCells");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * v8);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v9, "balloonView");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          -[CKTranscriptCollectionViewController convertedBoundsToCullFromView:](self, "convertedBoundsToCullFromView:", v10);
          objc_msgSend(v10, "cullSubviewsWithVisibleBounds:");

        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

}

- (CGRect)convertedBoundsToCullFromView:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGRect result;

  v4 = a3;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "bounds");
  objc_msgSend(v5, "convertRect:toView:", v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v14 = v7;
  v15 = v9;
  v16 = v11;
  v17 = v13;
  result.size.height = v17;
  result.size.width = v16;
  result.origin.y = v15;
  result.origin.x = v14;
  return result;
}

- (void)_releaseActiveBalloonControllers
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  CKTranscriptCollectionViewController *v12;
  CKTranscriptCollectionViewController *v13;
  BOOL v14;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v18;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v7);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v9 = v8;
          -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "extensibleViewControllerForContext:", v10);
          v11 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v11, "parentViewController");
          v12 = (CKTranscriptCollectionViewController *)objc_claimAutoreleasedReturnValue();
          v13 = v12;
          if (v11)
            v14 = v12 == 0;
          else
            v14 = 1;
          if (v14 || v12 == self)
          {
            -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v9, "releaseBalloonControllerIfNeededForContext:", v16);

          }
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v5);
  }

}

- (void)repromptLastBlackholeFailureIfNotPrompted
{
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  uint8_t v7[16];

  -[CKTranscriptCollectionViewController lastMessagePartChatItem](self, "lastMessagePartChatItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "IMChatItem");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (-[CKTranscriptCollectionViewController shouldPresentHawkingPromptForChatItem:](self, "shouldPresentHawkingPromptForChatItem:", v5))
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v6 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v7 = 0;
          _os_log_impl(&dword_18DFCD000, v6, OS_LOG_TYPE_INFO, "Hawking: Found blackholed message that hasn't been prompted", v7, 2u);
        }

      }
      -[CKTranscriptCollectionViewController presentHawkingPromptForChatItem:](self, "presentHawkingPromptForChatItem:", v5);
    }

  }
}

- (BOOL)shouldPresentHawkingPromptForChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  BOOL v7;
  void *v8;
  int v10;
  void *v11;
  uint64_t v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v4, "message");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController presentedViewController](self, "presentedViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {

    }
    else
    {
      -[CKTranscriptCollectionViewController __CurrentTestName](self, "__CurrentTestName");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v8)
      {
        v10 = objc_msgSend(v5, "isFromMe");
        objc_msgSend(v5, "error");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "code");

        v13 = objc_msgSend(v5, "__ck_isiMessage");
        if (v10)
        {
          if (v12 == 43)
          {
            if (v13)
            {
              -[CKTranscriptCollectionViewController conversation](self, "conversation");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v14, "chat");
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "valueForChatProperty:", *MEMORY[0x1E0D359B8]);
              v16 = (void *)objc_claimAutoreleasedReturnValue();

              if (!v16
                || (objc_msgSend(v5, "time"),
                    v17 = (void *)objc_claimAutoreleasedReturnValue(),
                    v18 = objc_msgSend(v16, "compare:", v17),
                    v17,
                    v16,
                    v18 == -1))
              {
                v7 = 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
    v7 = 0;
LABEL_7:

    goto LABEL_8;
  }
  v7 = 0;
LABEL_8:

  return v7;
}

- (void)presentHawkingPromptForChatItem:(id)a3
{
  char isKindOfClass;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int IsEmail;
  void *v16;
  int v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;

  v24 = a3;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v24;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v24, "message");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "recipient");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "IDSCanonicalAddress");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    MEMORY[0x193FF3B40]();
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "chat");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "lastAddressedHandleID");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    MEMORY[0x193FF3B40](v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    IsEmail = IMStringIsEmail();
    if (objc_msgSend(v6, "__ck_isiMessage")
      && objc_msgSend(MEMORY[0x1E0D35918], "smsEnabled")
      && (-[CKTranscriptCollectionViewController conversation](self, "conversation"),
          v16 = (void *)objc_claimAutoreleasedReturnValue(),
          v17 = objc_msgSend(v16, "isBusinessConversation"),
          v16,
          ((v17 | IsEmail) & 1) == 0))
    {
      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v23, "isToEmailAddress") ^ 1;

    }
    else
    {
      v18 = 0;
    }
    -[CKTranscriptCollectionViewController makeHawkingPromptForMessage:toRecipient:fromSender:withSMSOption:](self, "makeHawkingPromptForMessage:toRecipient:fromSender:withSMSOption:", v6, v10, v14, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v19, 1, 0);
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "chat");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "time");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setValue:forChatProperty:", v22, *MEMORY[0x1E0D359B8]);

    v5 = v24;
  }

}

- (id)makeHawkingPromptForMessage:(id)a3 toRecipient:(id)a4 fromSender:(id)a5 withSMSOption:(BOOL)a6
{
  _BOOL4 v6;
  id v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __CFString *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  __CFString *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  _BOOL4 v41;
  id v43;
  _QWORD v44[4];
  id v45;
  CKTranscriptCollectionViewController *v46;
  uint8_t buf[4];
  id v48;
  uint64_t v49;

  v6 = a6;
  v49 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v43 = a5;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v48 = v10;
      _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, "Hawking: Showing non-cellular blackhole prompt for message (%@)", buf, 0xCu);
    }

  }
  if (IMStringIsEmail())
  {
    v13 = (void *)MEMORY[0x1E0CB3940];
    CKFrameworkBundle();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_TITLE_%@"), &stru_1E276D870, CFSTR("ChatKit"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "stringWithFormat:", v15, v11);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v14) = objc_msgSend(v17, "userInterfaceLayoutDirection") == 1;

    if ((_DWORD)v14)
      v18 = CFSTR("\u200F");
    else
      v18 = CFSTR("\u200E");
    -[__CFString stringByAppendingString:](v18, "stringByAppendingString:", v16);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    IMFormattedDisplayStringForNumber();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (void *)MEMORY[0x1E0CB3940];
    CKFrameworkBundle();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_TITLE_%@"), &stru_1E276D870, CFSTR("ChatKit"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "stringWithFormat:", v22, v16);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v21) = objc_msgSend(v24, "userInterfaceLayoutDirection") == 1;

    if ((_DWORD)v21)
      v25 = CFSTR("\u200F");
    else
      v25 = CFSTR("\u200E");
    -[__CFString stringByAppendingString:](v25, "stringByAppendingString:", v23);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

  }
  -[CKTranscriptCollectionViewController hawkingFailurePromptMessageForHandle:](self, "hawkingFailurePromptMessageForHandle:", v43);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertController alertControllerWithTitle:message:preferredStyle:](CKBlackholeAlertController, "alertControllerWithTitle:message:preferredStyle:", v19, v26, 1);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_RESEND_AS_SMS"), &stru_1E276D870, CFSTR("ChatKit"));
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v44[0] = MEMORY[0x1E0C809B0];
  v44[1] = 3221225472;
  v44[2] = __105__CKTranscriptCollectionViewController_makeHawkingPromptForMessage_toRecipient_fromSender_withSMSOption___block_invoke;
  v44[3] = &unk_1E274B818;
  v30 = v10;
  v45 = v30;
  v46 = self;
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v29, 0, v44);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_MESSAGE_LEARN_MORE"), &stru_1E276D870, CFSTR("ChatKit"));
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v33, 0, &__block_literal_global_925_1);
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  CKFrameworkBundle();
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = v35;
  if (v6)
  {
    objc_msgSend(v35, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E276D870, CFSTR("ChatKit"));
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v37, 0, 0);
    v38 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v27, "addAction:", v31);
    objc_msgSend(v27, "setPreferredAction:", v31);
  }
  else
  {
    objc_msgSend(v35, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1E276D870, CFSTR("ChatKit"));
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    +[CKAlertAction actionWithTitle:style:handler:](CKAlertAction, "actionWithTitle:style:handler:", v39, 0, 0);
    v38 = (void *)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(v27, "addAction:", v34);
  objc_msgSend(v27, "addAction:", v38);
  objc_msgSend(v27, "preferredAction");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v41 = v40 == 0;

  if (v41)
    objc_msgSend(v27, "setPreferredAction:", v38);

  return v27;
}

void __105__CKTranscriptCollectionViewController_makeHawkingPromptForMessage_toRecipient_fromSender_withSMSOption___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v7 = 138412290;
      v8 = v5;
      _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "Hawking: Original message blackholed, sending message as SMS. %@", (uint8_t *)&v7, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "trackSpamEvent:", 10);

  objc_msgSend(*(id *)(a1 + 40), "_downgradeMessage:andDowngradeChat:", *(_QWORD *)(a1 + 32), 1);
}

void __105__CKTranscriptCollectionViewController_makeHawkingPromptForMessage_toRecipient_fromSender_withSMSOption___block_invoke_924(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint8_t v6[16];

  v2 = a2;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_18DFCD000, v3, OS_LOG_TYPE_INFO, "Hawking: Sending user to Hawking KB article", v6, 2u);
    }

  }
  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D39AF8], "internationalSpamFilterLearnMoreURL");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "openURL:withCompletionHandler:", v5, 0);

}

- (id)hawkingFailurePromptMessageForHandle:(id)a3
{
  id v3;
  void *v4;
  int IsEmail;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  __CFString *v20;

  v3 = a3;
  MEMORY[0x193FF3B40]();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  IsEmail = IMStringIsEmail();

  if (IsEmail)
  {
    v6 = (void *)MEMORY[0x1E0CB3940];
    CKFrameworkBundle();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_MESSAGE_EMAIL_ADDRESS_%@"), &stru_1E276D870, CFSTR("ChatKit"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringWithFormat:", v8, v4);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "userInterfaceLayoutDirection");

    if (v11 == 1)
      v12 = CFSTR("\u200F");
    else
      v12 = CFSTR("\u200E");
    -[__CFString stringByAppendingString:](v12, "stringByAppendingString:", v9);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    IMFormattedDisplayStringForNumber();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)MEMORY[0x1E0CB3940];
    CKFrameworkBundle();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("HAWKING_FAILURE_PROMPT_MESSAGE_PHONE_NUMBER_%@"), &stru_1E276D870, CFSTR("ChatKit"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringWithFormat:", v16, v9);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "userInterfaceLayoutDirection");

    if (v19 == 1)
      v20 = CFSTR("\u200F");
    else
      v20 = CFSTR("\u200E");
    -[__CFString stringByAppendingString:](v20, "stringByAppendingString:", v17);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v13;
}

- (void)_replayLastImpactEffectIfNotFromMe
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  void *v31;
  void *v32;
  char isKindOfClass;
  void *v34;
  void *v35;
  int v36;
  _BOOL4 v37;
  void *v38;
  void *v39;
  int v40;
  void *v41;
  id v42;
  NSObject *v43;
  void *v44;
  _BOOL4 v45;
  _BOOL4 v46;
  _QWORD block[4];
  id v48;
  CKTranscriptCollectionViewController *v49;
  id v50;
  id v51;
  id v52;
  uint8_t buf[4];
  int v54;
  __int16 v55;
  _BOOL4 v56;
  __int16 v57;
  _BOOL4 v58;
  __int16 v59;
  _BOOL4 v60;
  __int16 v61;
  int v62;
  uint64_t v63;
  CGRect v64;
  CGRect v65;

  v63 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController presentedViewController](self, "presentedViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {

    return;
  }
  -[CKTranscriptCollectionViewController __CurrentTestName](self, "__CurrentTestName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4
    && (!IMSharedHelperIsOlderDevice() || !CKIsRunningInMessagesNotificationExtension()))
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController lastMessagePartChatItem](self, "lastMessagePartChatItem");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      -[CKTranscriptCollectionViewController cellForChatItem:](self, "cellForChatItem:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (v7)
      {
        objc_msgSend(v7, "frame");
        v10 = v9;
        v12 = v11;
        v14 = v13;
        v16 = v15;
        objc_msgSend(v8, "superview");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "convertRect:fromView:", v17, v10, v12, v14, v16);
        v19 = v18;
        v21 = v20;
        v23 = v22;
        v25 = v24;

        objc_msgSend(v5, "contentOffset");
        v27 = v26;
        objc_msgSend(v5, "frame");
        v29 = v28;
        objc_msgSend(v5, "frame");
        v65.size.height = v30;
        v65.origin.x = 0.0;
        v64.origin.x = v19;
        v64.origin.y = v21;
        v64.size.width = v23;
        v64.size.height = v25;
        v65.origin.y = v27;
        v65.size.width = v29;
        if (CGRectIntersectsRect(v64, v65))
        {
          -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v31, "lastObject");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          isKindOfClass = objc_opt_isKindOfClass();

          if ((isKindOfClass & 1) != 0)
          {

            goto LABEL_29;
          }
          objc_msgSend(v6, "IMChatItem");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v34, "message");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = objc_msgSend(v35, "isFromMe");
            if (CKIsRunningInCarousel())
            {
              v37 = 0;
            }
            else
            {
              objc_msgSend(v35, "timeExpressiveSendPlayed");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              v37 = v38 != 0;

            }
            if ((v36 | v37) == 1
              && (-[CKTranscriptCollectionViewController playedLastImpactEffectForTransitionFromComposing](self, "playedLastImpactEffectForTransitionFromComposing")|| !-[CKTranscriptCollectionViewController transitionedFromComposing](self, "transitionedFromComposing")|| (-[CKTranscriptCollectionViewController delegate](self, "delegate"), v39 = (void *)objc_claimAutoreleasedReturnValue(), v40 = objc_msgSend(v39, "transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:", self), v39, !v40)))
            {
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v43 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
                {
                  v46 = -[CKTranscriptCollectionViewController playedLastImpactEffectForTransitionFromComposing](self, "playedLastImpactEffectForTransitionFromComposing");
                  v45 = -[CKTranscriptCollectionViewController transitionedFromComposing](self, "transitionedFromComposing");
                  -[CKTranscriptCollectionViewController delegate](self, "delegate");
                  v44 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 67110144;
                  v54 = v36;
                  v55 = 1024;
                  v56 = v37;
                  v57 = 1024;
                  v58 = v46;
                  v59 = 1024;
                  v60 = v45;
                  v61 = 1024;
                  v62 = objc_msgSend(v44, "transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:", self);
                  _os_log_impl(&dword_18DFCD000, v43, OS_LOG_TYPE_INFO, "Not starting FSM. messageIsFromMe: %d - effectHasBeenPlayed: %d - playedLastImpactForTransitionFromComposing: %d - transitionedFromComposing: %d - playbackAllowed: %d", buf, 0x20u);

                }
              }
            }
            else
            {
              if (v36)
                -[CKTranscriptCollectionViewController setPlayedLastImpactEffectForTransitionFromComposing:](self, "setPlayedLastImpactEffectForTransitionFromComposing:", 1);
              objc_msgSend(v35, "expressiveSendStyleID");
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              block[0] = MEMORY[0x1E0C809B0];
              block[1] = 3221225472;
              block[2] = __74__CKTranscriptCollectionViewController__replayLastImpactEffectIfNotFromMe__block_invoke;
              block[3] = &unk_1E274D1B0;
              v48 = v41;
              v49 = self;
              v50 = v35;
              v51 = v34;
              v52 = v6;
              v42 = v41;
              dispatch_async(MEMORY[0x1E0C80D38], block);

            }
          }

        }
      }

    }
LABEL_29:

  }
}

uint64_t __74__CKTranscriptCollectionViewController__replayLastImpactEffectIfNotFromMe__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  int v7;
  const char *v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  if (+[CKImpactEffectManager identifierIsAnimatedImpactEffect:](CKImpactEffectManager, "identifierIsAnimatedImpactEffect:", *(_QWORD *)(a1 + 32)))
  {
    objc_msgSend(*(id *)(a1 + 40), "setHiddenBalloonViews:", 0);
    objc_msgSend(*(id *)(a1 + 40), "impactEffectManager");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = *(_QWORD *)(a1 + 48);
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "animateMessages:", v3);

    objc_msgSend(*(id *)(a1 + 40), "chat");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "markChatItemAsPlayedExpressiveSend:", *(_QWORD *)(a1 + 56));

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v7 = 136315138;
      v8 = "-[CKTranscriptCollectionViewController _replayLastImpactEffectIfNotFromMe]_block_invoke";
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "%s - Replaying last effect", (uint8_t *)&v7, 0xCu);
    }

  }
  return objc_msgSend(*(id *)(a1 + 40), "startFullscreenEffectIfNeededForChatItem:", *(_QWORD *)(a1 + 64));
}

- (void)_downgradeMessage:(id)a3
{
  -[CKTranscriptCollectionViewController _downgradeMessage:andDowngradeChat:](self, "_downgradeMessage:andDowngradeChat:", a3, 0);
}

- (void)_downgradeMessage:(id)a3 andDowngradeChat:(BOOL)a4
{
  _BOOL8 v4;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[5];
  id v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v4 = a4;
  v22 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  if (v6)
  {
    v7 = v6;
    if (objc_msgSend(v6, "__ck_isSMS"))
    {
      -[CKTranscriptCollectionViewController _resendMessage:](self, "_resendMessage:", v7);
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        CKLogCStringForType(29);
        OSLogHandleForIMFoundationCategory();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v7, "guid");
          v9 = (id)objc_claimAutoreleasedReturnValue();
          -[CKTranscriptCollectionViewController conversation](self, "conversation");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v19 = v9;
          v20 = 2112;
          v21 = v10;
          _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, "Manually downgrading message with GUID {%@} -- conversation:%@", buf, 0x16u);

        }
      }
      if (os_log_shim_legacy_logging_enabled())
      {
        if (_CKShouldLogExternal())
        {
          objc_msgSend(v7, "guid");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          -[CKTranscriptCollectionViewController conversation](self, "conversation");
          v14 = v11;
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          _CKLogExternal();

        }
      }
      -[CKConversation chat](self->_conversation, "chat", v14, v15);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "downgradeMessage:manualDowngrade:downgradeChat:", v7, 1, v4);

      objc_msgSend(v7, "__ck_downgradedMessage");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = __75__CKTranscriptCollectionViewController__downgradeMessage_andDowngradeChat___block_invoke;
      v16[3] = &unk_1E274A108;
      v16[4] = self;
      v17 = v13;
      v7 = v13;
      -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v16, 0, 0);

    }
  }
}

void __75__CKTranscriptCollectionViewController__downgradeMessage_andDowngradeChat___block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 1040);
  objc_msgSend(MEMORY[0x1E0D35910], "smsService");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sendMessage:onService:newComposition:", v1, v3, 0);

}

- (void)_resendMessage:(id)a3
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  CKTranscriptCollectionViewController *v9;
  _QWORD v10[4];
  id v11;
  CKTranscriptCollectionViewController *v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      CKLogCStringForType(27);
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v4;
        _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_DEBUG, "Resending message %@", buf, 0xCu);
      }

    }
    if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
      _CKLog();
    v6 = MEMORY[0x1E0C809B0];
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __55__CKTranscriptCollectionViewController__resendMessage___block_invoke;
    v10[3] = &unk_1E274A108;
    v11 = v4;
    v12 = self;
    v7[0] = v6;
    v7[1] = 3221225472;
    v7[2] = __55__CKTranscriptCollectionViewController__resendMessage___block_invoke_2;
    v7[3] = &unk_1E274A108;
    v8 = v11;
    v9 = self;
    -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v10, 0, v7);

  }
}

void __55__CKTranscriptCollectionViewController__resendMessage___block_invoke(uint64_t a1)
{
  void *v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  objc_msgSend(*(id *)(a1 + 32), "__ck_service");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = a1 + 32;
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(id **)(v5 + 8);
  v6 = v3[130];
  if (v2)
    objc_msgSend(v3, "_serviceForResendingMessage:", v4);
  else
    objc_msgSend(v3[130], "sendingService");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "retryMessage:onService:", v4, v7);

}

void __55__CKTranscriptCollectionViewController__resendMessage___block_invoke_2(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "error");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "code");

  if (v3 == 43)
  {
    objc_msgSend(*(id *)(a1 + 40), "conversation");
    v5 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "chat");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "refreshServiceForSending");

  }
}

- (id)_serviceForResendingMessage:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(v3, "__ck_service");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D35910], "satelliteSMSService");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4 == v5)
  {
    objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isSatelliteConnectionActive");

    if ((v7 & 1) == 0)
    {
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v3, "guid");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = 138412290;
          v13 = v9;
          _os_log_impl(&dword_18DFCD000, v8, OS_LOG_TYPE_INFO, "Resending %@ as SMS, was satellite but satellite unavailable", (uint8_t *)&v12, 0xCu);

        }
      }
      objc_msgSend(MEMORY[0x1E0D35910], "smsService");
      v10 = objc_claimAutoreleasedReturnValue();

      v4 = (void *)v10;
    }
  }
  else
  {

  }
  return v4;
}

- (void)_resendMessageUsingCurrentService:(id)a3
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  CKTranscriptCollectionViewController *v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[4];
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      CKLogCStringForType(27);
      OSLogHandleForIMFoundationCategory();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v13 = v4;
        _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_DEBUG, "Resending message using current service %@", buf, 0xCu);
      }

    }
    if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
      _CKLog();
    v6 = MEMORY[0x1E0C809B0];
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __74__CKTranscriptCollectionViewController__resendMessageUsingCurrentService___block_invoke;
    v10[3] = &unk_1E274A108;
    v10[4] = self;
    v11 = v4;
    v7[0] = v6;
    v7[1] = 3221225472;
    v7[2] = __74__CKTranscriptCollectionViewController__resendMessageUsingCurrentService___block_invoke_2;
    v7[3] = &unk_1E274A108;
    v8 = v11;
    v9 = self;
    -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v10, 0, v7);

  }
}

void __74__CKTranscriptCollectionViewController__resendMessageUsingCurrentService___block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 1040);
  objc_msgSend(v2, "sendingService");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "retryMessage:onService:", v1, v3);

}

void __74__CKTranscriptCollectionViewController__resendMessageUsingCurrentService___block_invoke_2(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "error");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "code");

  if (v3 == 43)
  {
    objc_msgSend(*(id *)(a1 + 40), "conversation");
    v5 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "chat");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "refreshServiceForSending");

  }
}

- (void)_resendFailedMessages
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void (*v16)(void *);
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  CKTranscriptCollectionViewController *v20;
  __int128 v21;
  __int128 v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isStewieEmergencyChat");

  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "mostRecentlyUsedConversationForEmergency");
LABEL_5:
    v9 = v6;

    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "__ck_failedMessagesForChatItemsWithConversationID:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v11, "count"))
    {
      v18[0] = MEMORY[0x1E0C809B0];
      v18[1] = 3221225472;
      v18[2] = __61__CKTranscriptCollectionViewController__resendFailedMessages__block_invoke;
      v18[3] = &unk_1E274A108;
      v19 = v11;
      v20 = self;
      -[CKTranscriptCollectionViewController updateTranscript:animated:completion:](self, "updateTranscript:animated:completion:", v18, 0, &__block_literal_global_947);

    }
    return;
  }
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isStewieRoadsideChat");

  if (v8)
  {
    objc_msgSend(MEMORY[0x1E0D357A0], "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "mostRecentlyUsedConversationForRoadside");
    goto LABEL_5;
  }
  v21 = xmmword_1E2755128;
  v22 = *(_OWORD *)off_1E2755138;
  v12 = (void *)MEMORY[0x1E0CB3940];
  v13 = IMFileLocationTrimFileName();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("_resendFailedMessages: Unsupported service"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "stringWithFormat:", CFSTR("Unexpected false '%@' in %s at %s:%d. %@"), CFSTR("NO"), "-[CKTranscriptCollectionViewController _resendFailedMessages]", v13, 11474, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = (void (*)(void *))IMGetAssertionFailureHandler();
  if (v16)
  {
    v16(v15);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v24 = v15;
      _os_log_impl(&dword_18DFCD000, v17, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
    }

  }
}

void __61__CKTranscriptCollectionViewController__resendFailedMessages__block_invoke(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint8_t buf[4];
  uint64_t v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v17, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v12 != v4)
          objc_enumerationMutation(v2);
        v6 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (IMOSLoggingEnabled())
        {
          CKLogCStringForType(27);
          OSLogHandleForIMFoundationCategory();
          v7 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 138412290;
            v16 = v6;
            _os_log_impl(&dword_18DFCD000, v7, OS_LOG_TYPE_DEBUG, "Resending Stewie message %@", buf, 0xCu);
          }

        }
        if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
        {
          v10 = v6;
          _CKLog();
        }
        v8 = *(void **)(*(_QWORD *)(a1 + 40) + 1040);
        objc_msgSend(v8, "sendingService", v10);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "retryMessage:onService:", v6, v9);

      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v17, 16);
    }
    while (v3);
  }

}

- (void)transferRestored:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char isKindOfClass;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "object");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "__ck_indexOfTransfer:", v5);
  if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v4, "object");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0)
    {
      objc_msgSend(v4, "object");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "containsObject:", v10);

      if (v12)
        -[CKTranscriptCollectionViewController reloadData](self, "reloadData");

    }
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v7);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (IMOSLoggingEnabled())
    {
      CKLogCStringForType(46);
      OSLogHandleForIMFoundationCategory();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412546;
        v18 = v5;
        v19 = 2112;
        v20 = v13;
        _os_log_impl(&dword_18DFCD000, v14, OS_LOG_TYPE_DEBUG, "Transfer %@ restored. Reload indexes %@.", buf, 0x16u);
      }

    }
    if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
    {
      v15 = v5;
      v16 = v13;
      _CKLog();
    }
    objc_msgSend(v6, "__ck_unloadSizesAtIndexes:", v13, v15, v16);
    -[CKTranscriptCollectionViewController reloadData](self, "reloadData");

  }
}

- (id)stateDictionaryForDiagnosticsRequest
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  const __CFString *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, void *);
  void *v16;
  id v17;
  _QWORD v18[3];
  _QWORD v19[4];

  v19[3] = *MEMORY[0x1E0C80C00];
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = MEMORY[0x1E0C809B0];
  v14 = 3221225472;
  v15 = __76__CKTranscriptCollectionViewController_stateDictionaryForDiagnosticsRequest__block_invoke;
  v16 = &unk_1E27500C0;
  v17 = v3;
  v5 = v3;
  objc_msgSend(v4, "enumerateObjectsWithOptions:usingBlock:", 2, &v13);

  -[CKTranscriptCollectionViewController _logVisibleChatItems](self, "_logVisibleChatItems", v13, v14, v15, v16);
  v18[0] = CFSTR("debugDescription");
  -[CKTranscriptCollectionViewController debugDescription](self, "debugDescription");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v6;
  v19[1] = v5;
  v18[1] = CFSTR("bottomChatItems");
  v18[2] = CFSTR("chat");
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stateDictionaryForDiagnosticsRequest");
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = (void *)v8;
  v10 = CFSTR("nil");
  if (v8)
    v10 = (const __CFString *)v8;
  v19[2] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 3);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void __76__CKTranscriptCollectionViewController_stateDictionaryForDiagnosticsRequest__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  __CFString *v4;
  void *v5;
  void *v6;
  objc_class *v7;
  uint64_t v8;
  void *v9;
  const __CFString *v10;
  void *v11;
  id v12;

  v12 = a2;
  objc_msgSend(v12, "IMChatItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "guid");
  v4 = (__CFString *)objc_claimAutoreleasedReturnValue();

  if ((unint64_t)objc_msgSend(*(id *)(a1 + 32), "count") <= 0x31)
  {
    v5 = *(void **)(a1 + 32);
    v6 = (void *)MEMORY[0x1E0CB3940];
    v7 = (objc_class *)objc_opt_class();
    NSStringFromClass(v7);
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = (void *)v8;
    v10 = CFSTR("nil");
    if (v4)
      v10 = v4;
    objc_msgSend(v6, "stringWithFormat:", CFSTR("%@: %@"), v8, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "addObject:", v11);

  }
}

- (void)_logVisibleChatItems
{
  void *v2;
  int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int isKindOfClass;
  NSObject *v18;
  unint64_t v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  const __CFString *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  NSObject *v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t j;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  _BOOL4 v65;
  void *v66;
  NSObject *v67;
  void *v68;
  NSObject *v69;
  NSObject *v70;
  id v71;
  NSObject *v72;
  NSObject *v73;
  NSObject *v74;
  id v75;
  NSObject *v76;
  NSObject *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t k;
  void *v82;
  NSObject *v83;
  NSObject *v84;
  void *v85;
  void *v86;
  void *v87;
  id v88;
  id v89;
  void *v90;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _BYTE v104[128];
  uint8_t v105[128];
  uint8_t buf[4];
  id v107;
  _BYTE v108[128];
  uint64_t v109;

  v109 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D36A50], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isInternalInstall");

  if (v3)
  {
    if (-[CKTranscriptCollectionViewController isViewLoaded](self, "isViewLoaded"))
    {
      -[CKTranscriptCollectionViewController view](self, "view");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "window");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      if (v5)
      {
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v90 = (void *)objc_claimAutoreleasedReturnValue();
        v102 = 0u;
        v103 = 0u;
        v100 = 0u;
        v101 = 0u;
        -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "indexPathsForVisibleItems");
        v7 = (void *)objc_claimAutoreleasedReturnValue();

        v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v100, v108, 16);
        if (v8)
        {
          v9 = *(_QWORD *)v101;
          do
          {
            for (i = 0; i != v8; ++i)
            {
              if (*(_QWORD *)v101 != v9)
                objc_enumerationMutation(v7);
              v11 = *(void **)(*((_QWORD *)&v100 + 1) + 8 * i);
              if (objc_msgSend(v11, "item") < 0
                || (v12 = objc_msgSend(v11, "item"),
                    -[CKTranscriptCollectionViewController chatItems](self, "chatItems"),
                    v13 = (void *)objc_claimAutoreleasedReturnValue(),
                    LOBYTE(v12) = v12 < objc_msgSend(v13, "count"),
                    v13,
                    (v12 & 1) == 0))
              {
                if (IMOSLoggingEnabled())
                {
                  OSLogHandleForIMFoundationCategory();
                  v18 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl(&dword_18DFCD000, v18, OS_LOG_TYPE_INFO, "index path out of bounds. Continuing", buf, 2u);
                  }

                }
              }
              else
              {
                -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
                v14 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v14, "objectAtIndex:", objc_msgSend(v11, "item"));
                v15 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v15, "IMChatItem");
                v16 = (void *)objc_claimAutoreleasedReturnValue();
                objc_opt_class();
                isKindOfClass = objc_opt_isKindOfClass();

                if ((isKindOfClass & objc_msgSend((id)objc_opt_class(), "instancesRespondToSelector:", sel_message)) == 1)objc_msgSend(v90, "addObject:", v15);
              }
            }
            v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v100, v108, 16);
          }
          while (v8);
        }

        objc_msgSend(v90, "sortUsingComparator:", &__block_literal_global_964_1);
        v89 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
        if (objc_msgSend(v90, "count"))
        {
          v19 = 0;
          do
          {
            v20 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
            objc_msgSend(v90, "objectAtIndex:", v19);
            v85 = (void *)objc_claimAutoreleasedReturnValue();
            -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v21, "visibleCells");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v22, "objectAtIndex:", v19);
            v87 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v85, "IMChatItem");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "message");
            v24 = (void *)objc_claimAutoreleasedReturnValue();

            if (objc_msgSend(v24, "isFromMe"))
              v25 = CFSTR("\t\t\t\t\t\t\t\t\t\t");
            else
              v25 = &stru_1E276D870;
            objc_msgSend(v24, "text");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "string");
            v27 = (void *)objc_claimAutoreleasedReturnValue();

            if ((unint64_t)objc_msgSend(v27, "length") <= 2)
            {
              v28 = v27;
            }
            else
            {
              objc_msgSend(v27, "substringWithRange:", 0, 3);
              v28 = (id)objc_claimAutoreleasedReturnValue();

            }
            objc_msgSend(v89, "appendString:", CFSTR("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n"));
            objc_msgSend(v20, "appendString:", CFSTR("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n"));
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@id: %lld   message: %@\n"), v25, objc_msgSend(v24, "messageID"), v24);
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v89, "appendString:", v29);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@id: %lld   message: %@\n"), v25, objc_msgSend(v24, "messageID"), v24);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "appendString:", v30);

            v31 = (void *)MEMORY[0x1E0CB3940];
            objc_msgSend(v24, "fileTransferGUIDs");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v31, "stringWithFormat:", CFSTR("%@fileTransferGUIDs: %@\n"), v25, v32);
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v89, "appendString:", v33);

            v34 = (void *)MEMORY[0x1E0CB3940];
            objc_msgSend(v24, "fileTransferGUIDs");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v34, "stringWithFormat:", CFSTR("%@fileTransferGUIDs: %@\n"), v25, v35);
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "appendString:", v36);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@associated cell: %p\n"), v25, v87);
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v89, "appendString:", v37);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@associated cell: %p\n"), v25, v87);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "appendString:", v38);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@redacted text: %@\n"), v25, v28);
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v89, "appendString:", v39);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@redacted text: %@\n"), v25, v28);
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "appendString:", v40);

            v41 = (void *)MEMORY[0x1E0CB3940];
            objc_msgSend(v24, "text");
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "string");
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v41, "stringWithFormat:", CFSTR("%@Text CharacterCount: %tu\n"), v25, objc_msgSend(v43, "length"));
            v44 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v89, "appendString:", v44);

            v45 = (void *)MEMORY[0x1E0CB3940];
            objc_msgSend(v24, "text");
            v46 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v46, "string");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v45, "stringWithFormat:", CFSTR("%@Text CharacterCount: %tu\n"), v25, objc_msgSend(v47, "length"));
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "appendString:", v48);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n\n"));
            v49 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v89, "appendString:", v49);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n\n"));
            v50 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "appendString:", v50);

            if (IMOSLoggingEnabled())
            {
              OSLogHandleForIMFoundationCategory();
              v51 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v107 = v20;
                _os_log_impl(&dword_18DFCD000, v51, OS_LOG_TYPE_INFO, "%@", buf, 0xCu);
              }

            }
            ++v19;
          }
          while (v19 < objc_msgSend(v90, "count"));
        }
        -[CKTranscriptCollectionViewController view](self, "view");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v52, "recursiveDescription");
        v86 = (void *)objc_claimAutoreleasedReturnValue();

        v53 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
        v98 = 0u;
        v99 = 0u;
        v96 = 0u;
        v97 = 0u;
        objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v54, "windows");
        v55 = (void *)objc_claimAutoreleasedReturnValue();

        v56 = objc_msgSend(v55, "countByEnumeratingWithState:objects:count:", &v96, v105, 16);
        if (v56)
        {
          v57 = *(_QWORD *)v97;
          do
          {
            for (j = 0; j != v56; ++j)
            {
              if (*(_QWORD *)v97 != v57)
                objc_enumerationMutation(v55);
              v59 = *(void **)(*((_QWORD *)&v96 + 1) + 8 * j);
              v60 = (void *)MEMORY[0x1E0CB3940];
              objc_msgSend(v59, "recursiveDescription");
              v61 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v60, "stringWithFormat:", CFSTR("Showing hierarchy for window   %@\n%@"), v59, v61);
              v62 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v53, "addObject:", v62);
            }
            v56 = objc_msgSend(v55, "countByEnumeratingWithState:objects:count:", &v96, v105, 16);
          }
          while (v56);
        }

        objc_msgSend(MEMORY[0x1E0CEA900], "currentFirstResponder");
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController parentViewController](self, "parentViewController");
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        v65 = v64 == v63;

        if (v65)
        {
          -[CKTranscriptCollectionViewController parentViewController](self, "parentViewController");
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v66, "inputAccessoryView");
          v88 = (id)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v88 = v63;
          else
            v88 = 0;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 && IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v67 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(v88, "delegate");
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v107 = v68;
            _os_log_impl(&dword_18DFCD000, v67, OS_LOG_TYPE_INFO, "inputAccessory's delegate  %@", buf, 0xCu);

          }
        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v69 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
          }

        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v70 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
          {
            objc_msgSend(MEMORY[0x1E0C99D68], "date");
            v71 = (id)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v107 = v71;
            _os_log_impl(&dword_18DFCD000, v70, OS_LOG_TYPE_INFO, "Timestamp\t\t%@", buf, 0xCu);

          }
        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v72 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v72, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v107 = v63;
            _os_log_impl(&dword_18DFCD000, v72, OS_LOG_TYPE_INFO, "Current Responder\t\t%@", buf, 0xCu);
          }

        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v73 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v107 = v88;
            _os_log_impl(&dword_18DFCD000, v73, OS_LOG_TYPE_INFO, "inputAccessory\t\t%@", buf, 0xCu);
          }

        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v74 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v74, OS_LOG_TYPE_INFO))
          {
            -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
            v75 = (id)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v107 = v75;
            _os_log_impl(&dword_18DFCD000, v74, OS_LOG_TYPE_INFO, "All chatitems\t\t%@", buf, 0xCu);

          }
        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v76 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v76, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v107 = v89;
            _os_log_impl(&dword_18DFCD000, v76, OS_LOG_TYPE_INFO, "Visible GUIDS\t\t%@", buf, 0xCu);
          }

        }
        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v77 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v107 = v86;
            _os_log_impl(&dword_18DFCD000, v77, OS_LOG_TYPE_INFO, "%@", buf, 0xCu);
          }

        }
        v94 = 0u;
        v95 = 0u;
        v92 = 0u;
        v93 = 0u;
        v78 = v53;
        v79 = objc_msgSend(v78, "countByEnumeratingWithState:objects:count:", &v92, v104, 16);
        if (v79)
        {
          v80 = *(_QWORD *)v93;
          do
          {
            for (k = 0; k != v79; ++k)
            {
              if (*(_QWORD *)v93 != v80)
                objc_enumerationMutation(v78);
              v82 = *(void **)(*((_QWORD *)&v92 + 1) + 8 * k);
              if (IMOSLoggingEnabled())
              {
                OSLogHandleForIMFoundationCategory();
                v83 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v83, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 138412290;
                  v107 = v82;
                  _os_log_impl(&dword_18DFCD000, v83, OS_LOG_TYPE_INFO, "%@", buf, 0xCu);
                }

              }
            }
            v79 = objc_msgSend(v78, "countByEnumeratingWithState:objects:count:", &v92, v104, 16);
          }
          while (v79);
        }

        if (IMOSLoggingEnabled())
        {
          OSLogHandleForIMFoundationCategory();
          v84 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
          }

        }
      }
    }
  }
}

BOOL __60__CKTranscriptCollectionViewController__logVisibleChatItems__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _BOOL8 v8;

  v4 = a3;
  objc_msgSend(a2, "message");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "messageID");
  objc_msgSend(v4, "message");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = v6 > objc_msgSend(v7, "messageID");
  return v8;
}

- (void)previewDidChange:(id)a3
{
  id v4;
  void *v5;
  char isKindOfClass;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  int v21;
  NSObject *v22;
  void *v23;

  v4 = a3;
  objc_msgSend(v4, "object");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  objc_msgSend(v4, "object");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if ((isKindOfClass & 1) != 0)
  {
    objc_msgSend(v7, "transfer");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v10, "__ck_indexOfTransfer:", v9);
    if (v12 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v13 = objc_msgSend(v11, "__ck_indexOfTransfer:", v9);
      if (v13 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_17:

LABEL_18:
        goto LABEL_19;
      }
      v14 = v13;
      objc_msgSend(v11, "objectAtIndex:", v13);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v16 = v15;
        objc_msgSend(v9, "guid");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = v16;
        LODWORD(v16) = objc_msgSend(v16, "containsTransferGUID:", v17);

        if ((_DWORD)v16)
        {
          if (!objc_msgSend(v8, "cachedValidPreviewExists"))
          {
            IMLogHandleForCategory();
            v22 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
              -[CKTranscriptCollectionViewController previewDidChange:].cold.1(v9, v22);

            goto LABEL_17;
          }
          objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v14, 1);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v18 = 0;
        }

      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v14, 1);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
      }

    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v12, 0);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
    }
    -[CKTranscriptCollectionViewController unloadCachedSizeAndReloadChatItemAtIndexPath:](self, "unloadCachedSizeAndReloadChatItemAtIndexPath:", v18);

    goto LABEL_17;
  }
  objc_opt_class();
  v19 = objc_opt_isKindOfClass();

  if ((v19 & 1) != 0)
  {
    objc_msgSend(v4, "object");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "containsObject:", v8);

    if (v21)
      -[CKTranscriptCollectionViewController reloadData](self, "reloadData");
    goto LABEL_18;
  }
LABEL_19:

}

- (void)_adaptiveImageGlyphWasGeneratedNotification:(id)a3
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[4];
  id v27;
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  id v32;
  id v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "object");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v4, "transferGUID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v5, "length"))
    {
      v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = MEMORY[0x1E0C809B0];
      v30[0] = MEMORY[0x1E0C809B0];
      v30[1] = 3221225472;
      v30[2] = __84__CKTranscriptCollectionViewController__adaptiveImageGlyphWasGeneratedNotification___block_invoke;
      v30[3] = &unk_1E2754DA8;
      v10 = v5;
      v31 = v10;
      v11 = v6;
      v32 = v11;
      v12 = v7;
      v33 = v12;
      objc_msgSend(v8, "enumerateObjectsUsingBlock:", v30);
      -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v26[0] = v9;
      v26[1] = 3221225472;
      v26[2] = __84__CKTranscriptCollectionViewController__adaptiveImageGlyphWasGeneratedNotification___block_invoke_2;
      v26[3] = &unk_1E274C958;
      v27 = v10;
      v14 = v11;
      v28 = v14;
      v15 = v12;
      v29 = v15;
      objc_msgSend(v13, "enumerateObjectsUsingBlock:", v26);
      if (objc_msgSend(v14, "count"))
      {
        v16 = (void *)objc_msgSend(v14, "copy");
        +[CKChatItem unloadSizesOfChatItems:](CKChatItem, "unloadSizesOfChatItems:", v16);

      }
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v17 = v15;
      v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v34, 16);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)v23;
        do
        {
          v21 = 0;
          do
          {
            if (*(_QWORD *)v23 != v20)
              objc_enumerationMutation(v17);
            -[CKTranscriptCollectionViewController unloadCachedSizeAndReloadChatItemAtIndexPath:](self, "unloadCachedSizeAndReloadChatItemAtIndexPath:", *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v21++), (_QWORD)v22);
          }
          while (v19 != v21);
          v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v34, 16);
        }
        while (v19);
      }

    }
  }

}

void __84__CKTranscriptCollectionViewController__adaptiveImageGlyphWasGeneratedNotification___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  char isKindOfClass;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v6 = v10;
  if ((isKindOfClass & 1) != 0)
  {
    v7 = v10;
    objc_msgSend(v7, "transferGUIDsInMessagePartText");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "containsObject:", *(_QWORD *)(a1 + 32)))
    {
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);
      objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 48), "addObject:", v9);
      objc_msgSend(v7, "unloadTranscriptText");

    }
    v6 = v10;
  }

}

void __84__CKTranscriptCollectionViewController__adaptiveImageGlyphWasGeneratedNotification___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  _QWORD v25[2];

  v25[1] = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v5, "acknowledgments");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = (void *)v6;
    v8 = (void *)MEMORY[0x1E0C9AA60];
    if (v6)
      v8 = (void *)v6;
    v9 = v8;
    goto LABEL_8;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v5, "messageAcknowledgmentChatItem");
    v10 = objc_claimAutoreleasedReturnValue();
    v7 = (void *)v10;
    if (!v10)
    {
      v11 = (void *)MEMORY[0x1E0C9AA60];
      goto LABEL_9;
    }
    v25[0] = v10;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 1);
    v9 = (id)objc_claimAutoreleasedReturnValue();
LABEL_8:
    v11 = v9;
LABEL_9:

    goto LABEL_11;
  }
  v11 = 0;
LABEL_11:
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v12 = v11;
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  v14 = v12;
  if (v13)
  {
    v15 = v13;
    v16 = *(_QWORD *)v21;
    while (2)
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v21 != v16)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * i), "fileTransferGUIDs", (_QWORD)v20);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = objc_msgSend(v18, "containsObject:", *(_QWORD *)(a1 + 32));

        if ((v19 & 1) != 0)
        {

          objc_msgSend(*(id *)(a1 + 40), "addObject:", v5);
          objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", a3, 1);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 48), "addObject:", v14);
          goto LABEL_21;
        }
      }
      v15 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v15)
        continue;
      break;
    }
    v14 = v12;
  }
LABEL_21:

}

- (void)snapshotDidChange:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;

  objc_msgSend(a3, "userInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CKSnapshotChangedMessageGUIDKey"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __58__CKTranscriptCollectionViewController_snapshotDidChange___block_invoke;
  v10[3] = &unk_1E2755038;
  v9 = v5;
  v11 = v9;
  v7 = objc_msgSend(v6, "indexOfObjectPassingTest:", v10);
  if (v7 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v7, 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController unloadCachedSizeAndReloadChatItemAtIndexPath:](self, "unloadCachedSizeAndReloadChatItemAtIndexPath:", v8);

  }
}

uint64_t __58__CKTranscriptCollectionViewController_snapshotDidChange___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v3, "message");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "guid");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "isEqualToString:", *(_QWORD *)(a1 + 32));

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (void)locationStringDidChange:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_msgSend(a3, "object");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "transfer");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "__ck_indexOfTransfer:", v5);

  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "__ck_unloadSizesAtIndexes:", v7);
    objc_msgSend(v4, "__ck_unloadTranscriptTextAtIndexes:", v7);
    -[CKTranscriptCollectionViewController reloadData](self, "reloadData");

  }
}

- (void)unloadCachedSizeAndReloadChatItemAtIndexPath:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  _QWORD v27[4];
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v36[2];

  v36[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController fullscreenEffectManager](self, "fullscreenEffectManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "currentEffect");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {

LABEL_9:
    goto LABEL_10;
  }
  -[CKTranscriptCollectionViewController impactEffectManager](self, "impactEffectManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isAnimating");

  if ((v8 & 1) == 0)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", objc_msgSend(v4, "item"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v4, "section"))
    {
      if (objc_msgSend(v4, "section") == 1)
      {
        -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "__ck_unloadSizesAtIndexes:", v9);

        v36[0] = v4;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v36, 1);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "reloadItemsAtIndexPaths:", v11);

        -[CKTranscriptCollectionViewController reloadData](self, "reloadData");
      }
    }
    else
    {
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController collectionViewLayout](self, "collectionViewLayout");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "contentOffset");
      v15 = v14;
      v17 = v16;
      objc_msgSend(v12, "contentSize");
      v19 = v18;
      v21 = v20;
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "__ck_unloadSizesAtIndexes:", v9);

      objc_msgSend(v12, "indexPathsForVisibleItems");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v23, "containsObject:", v4);
      v27[0] = MEMORY[0x1E0C809B0];
      v27[1] = 3221225472;
      v27[2] = __85__CKTranscriptCollectionViewController_unloadCachedSizeAndReloadChatItemAtIndexPath___block_invoke;
      v27[3] = &unk_1E2755158;
      v35 = v24;
      v28 = v13;
      v31 = v15;
      v32 = v17;
      v33 = v19;
      v34 = v21;
      v29 = v4;
      v30 = v12;
      v25 = v12;
      v26 = v13;
      -[CKTranscriptCollectionViewController reloadChatItemsAtIndexes:animated:completion:](self, "reloadChatItemsAtIndexes:animated:completion:", v9, v24, v27);

    }
    goto LABEL_9;
  }
LABEL_10:

}

void __85__CKTranscriptCollectionViewController_unloadCachedSizeAndReloadChatItemAtIndexPath___block_invoke(uint64_t a1)
{
  CGFloat MaxY;
  double v3;
  double v4;
  double v5;
  id v6;
  CGRect v7;

  if (!*(_BYTE *)(a1 + 88))
  {
    objc_msgSend(*(id *)(a1 + 32), "prepareLayout");
    objc_msgSend(*(id *)(a1 + 32), "layoutAttributesForItemAtIndexPath:", *(_QWORD *)(a1 + 40));
    v6 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "frame");
    MaxY = CGRectGetMaxY(v7);
    v3 = *(double *)(a1 + 64);
    if (MaxY < v3)
    {
      v4 = *(double *)(a1 + 56);
      objc_msgSend(*(id *)(a1 + 32), "collectionViewContentSize");
      objc_msgSend(*(id *)(a1 + 48), "setContentOffset:animated:", 0, v4, v3 + v5 - *(double *)(a1 + 80));
    }

  }
}

- (void)transferUpdated:(id)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  const __CFString *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  objc_msgSend(a3, "object");
  v21 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "__ck_indexOfTransfer:", v21);
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v5, 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v8)
      goto LABEL_27;
LABEL_8:
    objc_msgSend(v21, "error");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if (!v9)
    {
      if (!objc_msgSend(v21, "isFileDataReady"))
        goto LABEL_26;
      goto LABEL_25;
    }
    objc_msgSend(v9, "domain");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v11, "isEqualToString:", CFSTR("IMFileTransferErrorDomain")))
    {
      v12 = objc_msgSend(v10, "code");

      if (v12 == 25)
      {
        CKFrameworkBundle();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v13;
        v15 = CFSTR("ERR_TRANSFER_EXPIRED_TITLE");
        goto LABEL_18;
      }
    }
    else
    {

    }
    objc_msgSend(v10, "domain");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v14, "isEqualToString:", CFSTR("IMFileTransferErrorDomain")))
    {
      v17 = 0;
      goto LABEL_20;
    }
    v16 = objc_msgSend(v10, "code");

    if (v16 != 26)
    {
      v17 = 0;
      goto LABEL_22;
    }
    CKFrameworkBundle();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    v15 = CFSTR("ERR_TRANSFER_NO_NETWORK_TITLE");
LABEL_18:
    objc_msgSend(v13, "localizedStringForKey:value:table:", v15, &stru_1E276D870, CFSTR("ChatKit"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_20:

LABEL_22:
    CKFrameworkBundle();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1E276D870, CFSTR("ChatKit"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    CKCreateAlertControllerWithError(0, v17, 0, v19, 0);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (v20)
      -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v20, 1, 0);

    objc_msgSend(v21, "isFileDataReady");
LABEL_25:
    -[CKTranscriptCollectionViewController unloadCachedSizeAndReloadChatItemAtIndexPath:](self, "unloadCachedSizeAndReloadChatItemAtIndexPath:", v8);
LABEL_26:

    goto LABEL_27;
  }
  -[CKTranscriptCollectionViewController associatedChatItems](self, "associatedChatItems");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "__ck_indexOfTransfer:", v21);
  if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v8 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v7, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }

  if (v8)
    goto LABEL_8;
LABEL_27:

}

- (void)_forceReloadChatItems
{
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint8_t buf[16];
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "Force reloading all chat items", buf, 2u);
    }

  }
  v3 = (void *)objc_opt_new();
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v15, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * i);
        objc_msgSend(v8, "unloadTranscriptText");
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0)
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0)
                continue;
            }
          }
        }
        objc_msgSend(v3, "addObject:", v8);
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v15, 16);
    }
    while (v5);
  }

  +[CKChatItem unloadSizesOfChatItems:](CKChatItem, "unloadSizesOfChatItems:", v3);
  -[CKTranscriptCollectionViewController reloadData](self, "reloadData");

}

- (void)addressBookChanged:(id)a3
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __59__CKTranscriptCollectionViewController_addressBookChanged___block_invoke;
  block[3] = &unk_1E274A208;
  block[4] = self;
  dispatch_async(MEMORY[0x1E0C80D38], block);
}

uint64_t __59__CKTranscriptCollectionViewController_addressBookChanged___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceReloadChatItems");
}

- (void)_conversationListFinishedMerging:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  _QWORD block[5];
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKConversationList sharedConversationList](CKConversationList, "sharedConversationList");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "chat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "guid");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "conversationForExistingChatWithGUID:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (v5 != v9)
    {
      -[CKTranscriptCollectionViewController setConversation:](self, "setConversation:", v9);
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          v14 = v9;
          v15 = 2112;
          v16 = v5;
          _os_log_impl(&dword_18DFCD000, v10, OS_LOG_TYPE_INFO, "Conversation list performed re-merge, updating transcript conversation to %@ from %@", buf, 0x16u);
        }

      }
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __73__CKTranscriptCollectionViewController__conversationListFinishedMerging___block_invoke;
      block[3] = &unk_1E274A208;
      block[4] = self;
      dispatch_async(MEMORY[0x1E0C80D38], block);
    }
  }
  else if (v5 && IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v5;
      _os_log_impl(&dword_18DFCD000, v11, OS_LOG_TYPE_INFO, "CKTranscriptCollectionViewController attempted to replace conversation after re-merge, but couldn't find a new conversation to replace %@", buf, 0xCu);
    }

  }
}

uint64_t __73__CKTranscriptCollectionViewController__conversationListFinishedMerging___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_forceReloadChatItems");
}

- (void)printTranscript
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  CKTranscriptPrintPageRenderer *v9;
  void *v10;
  CKTranscriptPrintPageRenderer *v11;
  void *v12;
  _QWORD v13[5];

  objc_msgSend(MEMORY[0x1E0D80C20], "printInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setOutputType:", 0);
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "hasDisplayName");
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if ((v5 & 1) != 0)
    objc_msgSend(v6, "displayName");
  else
    objc_msgSend(v6, "name");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "setJobName:", v8);
  v9 = [CKTranscriptPrintPageRenderer alloc];
  -[CKTranscriptCollectionViewController printableViewController](self, "printableViewController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[CKTranscriptPrintPageRenderer initWithTranscriptCollectionViewController:](v9, "initWithTranscriptCollectionViewController:", v10);

  objc_msgSend(MEMORY[0x1E0D80C28], "sharedPrintController");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setPrintInfo:", v3);
  objc_msgSend(v12, "setPrintPageRenderer:", v11);
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __55__CKTranscriptCollectionViewController_printTranscript__block_invoke;
  v13[3] = &unk_1E2755180;
  v13[4] = self;
  objc_msgSend(v12, "presentAnimated:completionHandler:", 1, v13);

}

void __55__CKTranscriptCollectionViewController_printTranscript__block_invoke(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  const __CFString *v10;
  const __CFString *v11;
  void *v12;
  int v13;
  const __CFString *v14;
  __int16 v15;
  const __CFString *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = CFSTR("NO");
      if (a3)
        v11 = CFSTR("YES");
      else
        v11 = CFSTR("NO");
      if (v8)
        v10 = CFSTR("YES");
      v13 = 138412546;
      v14 = v11;
      v15 = 2112;
      v16 = v10;
      _os_log_impl(&dword_18DFCD000, v9, OS_LOG_TYPE_INFO, "UIPrintInteractionController completed: [%@], error: [%@]", (uint8_t *)&v13, 0x16u);
    }

  }
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "clearAvatarCache");

  objc_msgSend(*(id *)(a1 + 32), "reloadData");
}

- (id)printableViewController
{
  void *v3;
  CKPrintTranscriptCollectionViewController *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  CKPrintTranscriptCollectionViewController *v12;
  void *v13;
  void *v14;

  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setPrinting:", 1);

  v4 = [CKPrintTranscriptCollectionViewController alloc];
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController balloonMaxWidth](self, "balloonMaxWidth");
  v7 = v6;
  -[CKTranscriptCollectionViewController marginInsets](self, "marginInsets");
  v12 = -[CKPrintTranscriptCollectionViewController initWithConversation:delegate:balloonMaxWidth:marginInsets:](v4, "initWithConversation:delegate:balloonMaxWidth:marginInsets:", v5, 0, v7, v8, v9, v10, v11);

  +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController setShouldLoadDefaultConversationViewingMessageCountOnAppear:](v12, "setShouldLoadDefaultConversationViewingMessageCountOnAppear:", objc_msgSend(v13, "shouldLoadInitialViewingMessageCount"));

  -[CKPrintTranscriptCollectionViewController updateUIContents](v12, "updateUIContents");
  +[CKPrintController sharedInstance](CKPrintController, "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setPrinting:", 0);

  return v12;
}

- (void)installedAppsChanged:(id)a3
{
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t k;
  NSObject *v30;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[16];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[128];
  _BYTE v46[128];
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v31 = a3;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v41, v47, 16);
  if (v5)
  {
    v6 = 0;
    v7 = *(_QWORD *)v42;
    v8 = *MEMORY[0x1E0D375F8];
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v42 != v7)
          objc_enumerationMutation(v4);
        v10 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v10, "bundleIdentifier");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v11, "isEqualToString:", v8);

          v6 |= v12 ^ 1;
        }
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v41, v47, 16);
    }
    while (v5);

    if ((v6 & 1) != 0)
    {
      -[CKTranscriptCollectionViewController _releaseActiveBalloonControllers](self, "_releaseActiveBalloonControllers");
      -[CKTranscriptCollectionViewController reloadData](self, "reloadData");
      v13 = (void *)objc_opt_new();
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v36, v46, 16);
      if (v15)
      {
        v16 = *(_QWORD *)v37;
        do
        {
          for (j = 0; j != v15; ++j)
          {
            if (*(_QWORD *)v37 != v16)
              objc_enumerationMutation(v14);
            v18 = *(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * j);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              objc_msgSend(v13, "addObject:", v18);
          }
          v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v36, v46, 16);
        }
        while (v15);
      }

      +[CKChatItem unloadSizesOfChatItems:](CKChatItem, "unloadSizesOfChatItems:", v13);
      +[CKChatItemSizeCache sharedInstance](CKChatItemSizeCache, "sharedInstance");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "invalidateCachedSizeForGUIDPrefix:reason:", CFSTR("bp:"), CFSTR("installedAppsChanged"));

      -[CKTranscriptCollectionViewController conversation](self, "conversation");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "chat");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "guid");
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v20, "recipientStrings");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v20, "isBusinessConversation");
      -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v26 = v13;
      v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v32, v45, 16);
      if (v27)
      {
        v28 = *(_QWORD *)v33;
        do
        {
          for (k = 0; k != v27; ++k)
          {
            if (*(_QWORD *)v33 != v28)
              objc_enumerationMutation(v26);
            objc_msgSend(*(id *)(*((_QWORD *)&v32 + 1) + 8 * k), "configureWithConversationID:recipients:isBusiness:context:", v22, v23, v24, v25);
          }
          v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v32, v45, 16);
        }
        while (v27);
      }

      goto LABEL_33;
    }
  }
  else
  {

  }
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18DFCD000, v30, OS_LOG_TYPE_INFO, "Not reloading transcript due to installedAppsChanged:, no relevant plugins loaded in transcript", buf, 2u);
    }

  }
LABEL_33:

}

- (void)multiwayCallStateChanged:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = (void *)objc_opt_new();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v12;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v12 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v9);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          objc_msgSend(v4, "addObject:", v10);
        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v7);
  }

  +[CKChatItem unloadSizesOfChatItems:](CKChatItem, "unloadSizesOfChatItems:", v4);
  -[CKTranscriptCollectionViewController reloadData](self, "reloadData");

}

- (void)chatItemsDidChange:(id)a3
{
  NSObject *v4;
  os_signpost_id_t v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  NSObject *v18;
  NSObject *v19;
  id v20;
  void *v21;
  int v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  void *v27;
  char v28;
  void *v29;
  NSObject *v30;
  NSObject *v31;
  uint64_t v32;
  os_signpost_id_t spid;
  unint64_t v34;
  void *v35;
  void *v36;
  id v37;
  uint8_t buf[4];
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v37 = a3;
  IMLogHandleForCategory();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_signpost_id_generate(v4);
  v6 = v4;
  v7 = v6;
  spid = v5;
  v34 = v5 - 1;
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v7, OS_SIGNPOST_INTERVAL_BEGIN, v5, "chatItemsDidChange_ChatKit", ", buf, 2u);
  }

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_respondsToSelector();

  if ((v9 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "transcriptCollectionViewControllerWillUpdateTranscriptChatItems:", self);

  }
  objc_msgSend(v37, "userInfo");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0D35330]);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0D35358]);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0D35350]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0D35348]);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0D35340]);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKey:", *MEMORY[0x1E0D35338]);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "count");
  LODWORD(v17) = v17 < objc_msgSend(v14, "count");

  if ((_DWORD)v17)
  {
    IMLogHandleForCategory();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController chatItemsDidChange:].cold.2(self, v14, v18);

    IMLogHandleForCategory();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController chatItemsDidChange:].cold.1();

    v20 = -[CKTranscriptCollectionViewController newChatItemsWithIMChatItems:](self, "newChatItemsWithIMChatItems:", v14);
    objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "isConsolidatedChatItemsEnabled");

    if (v22)
    {
      -[CKTranscriptCollectionViewController chatItemController](self, "chatItemController");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "setChatItemsUsingReloadDataWithoutAnimation:", v20);

    }
    else
    {
      -[CKTranscriptCollectionViewController setChatItems:](self, "setChatItems:", v20);
    }

  }
  v24 = _Block_copy(self->_transcriptUpdateCompletion);
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      v26 = _Block_copy(v24);
      *(_DWORD *)buf = 134217984;
      v39 = v26;
      _os_log_impl(&dword_18DFCD000, v25, OS_LOG_TYPE_INFO, "ChatItemsDidChange – will consume completion handler: %p", buf, 0xCu);

    }
  }
  -[CKTranscriptCollectionViewController setTranscriptUpdateCompletion:](self, "setTranscriptUpdateCompletion:", 0);
  LOBYTE(v32) = 1;
  -[CKTranscriptCollectionViewController updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:checkFiltered:completion:](self, "updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:checkFiltered:completion:", v15, v36, v35, v12, v13, -[CKTranscriptCollectionViewController isTranscriptUpdateAnimated](self, "isTranscriptUpdateAnimated"), v32, v24);
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = objc_opt_respondsToSelector();

  if ((v28 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "transcriptCollectionViewControllerDidUpdateTranscriptChatItems:", self);

  }
  v30 = v7;
  v31 = v30;
  if (v34 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v30))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18DFCD000, v31, OS_SIGNPOST_INTERVAL_END, spid, "chatItemsDidChange_ChatKit", ", buf, 2u);
  }

}

- (void)connectivityChanged:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  uint8_t v7[16];

  v4 = a3;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_18DFCD000, v5, OS_LOG_TYPE_INFO, "connectivityChanged", v7, 2u);
    }

  }
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "refreshServiceForSending");

}

- (void)_tearDownLiveBubbles
{
  void *v3;
  id v4;
  _QWORD v5[5];

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (id)objc_msgSend(v3, "copy");

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __60__CKTranscriptCollectionViewController__tearDownLiveBubbles__block_invoke;
  v5[3] = &unk_1E27500C0;
  v5[4] = self;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v5);

}

void __60__CKTranscriptCollectionViewController__tearDownLiveBubbles__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  int v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v7, "IMChatItem");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "isDataSourceInitialized");

    if (v4)
    {
      objc_msgSend(*(id *)(a1 + 32), "transcriptIdentifier");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "balloonControllerForContext:", v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v6, "pluginContentViewWillDisappear");

    }
  }

}

- (void)_refreshLocationsForRecipientsIfNecessary
{
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA2F8], "sharedApplication");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "applicationState");

  if (!v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0C99E20]);
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(v5, "initWithCapacity:", objc_msgSend(v6, "recipientCount"));

    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v29;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v29 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * v12);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v13, "sender");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v7, "addObject:", v14);

          }
          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
      }
      while (v10);
    }

    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v15 = v7;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v25;
      do
      {
        v19 = 0;
        do
        {
          if (*(_QWORD *)v25 != v18)
            objc_enumerationMutation(v15);
          v20 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v19);
          objc_msgSend(MEMORY[0x1E0D35810], "sharedInstance", (_QWORD)v24);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          -[CKTranscriptCollectionViewController conversation](self, "conversation");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "chat");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "refreshLocationForHandle:inChat:", v20, v23);

          ++v19;
        }
        while (v17 != v19);
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
      }
      while (v17);
    }

  }
}

- (void)reconfigureVisibleSpeakerButtonCells
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_msgSend(v3, "indexPathsForVisibleItems", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * i);
        objc_msgSend(v3, "cellForItemAtIndexPath:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        -[CKTranscriptCollectionViewController configureSpeakerButtonCell:forItemAtIndexPath:](self, "configureSpeakerButtonCell:forItemAtIndexPath:", v10, v9);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

}

- (void)configureSpeakerButtonCell:(id)a3 forItemAtIndexPath:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;

  v19 = a3;
  v6 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectAtIndex:", objc_msgSend(v6, "item"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v9 = v8;
      -[CKTranscriptCollectionViewController speakerTransferGUID](self, "speakerTransferGUID");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "mediaObject");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "transferGUID");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v10, "isEqualToString:", v12) ^ 1;

      objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v11) = objc_msgSend(v14, "isRichAudioMessagesEnabled");

      v15 = v11 | v13;
      v16 = v19;
      objc_msgSend(v16, "setSpeakerHidden:", v15);
      objc_msgSend(v16, "setSpeakerEnabled:", CKAudioPlaybackSpeakerEnabled());
      v17 = objc_msgSend(v9, "hasMessageAcknowledgment");

      objc_msgSend(v16, "setAdjustSpeakerForAcknowledgment:", v17);
      objc_msgSend(v16, "speakerButton");
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v18, "addTarget:action:forControlEvents:", self, sel_touchUpInsideCellSpeakerButton_, 64);
    }

  }
}

- (id)collectionViewLayout
{
  void *v2;
  void *v3;

  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "collectionViewLayout");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (BOOL)wantsDrawerLayout
{
  return -[CKTranscriptCollectionViewController isEditing](self, "isEditing") ^ 1;
}

- (void)setShouldUseOpaqueMask:(BOOL)a3
{
  _BOOL8 v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (self->_shouldUseOpaqueMask != a3)
  {
    v3 = a3;
    self->_shouldUseOpaqueMask = a3;
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "visibleCells");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v13;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v13 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
          if ((objc_opt_respondsToSelector() & 1) != 0)
          {
            objc_msgSend(v10, "balloonView");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "setCanUseOpaqueMask:", v3);
            objc_msgSend(v11, "prepareForDisplayIfNeeded");
            objc_msgSend(v10, "setNeedsLayout");
            objc_msgSend(v10, "layoutIfNeeded");

          }
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      }
      while (v7);
    }

  }
}

- (void)verticallyScrollTranscriptByAmount:(double)a3 animated:(BOOL)a4 completion:(id)a5
{
  -[CKTranscriptCollectionViewController verticallyScrollTranscriptByAmount:animated:duration:completion:](self, "verticallyScrollTranscriptByAmount:animated:duration:completion:", a4, a5, a3, 0.150000006);
}

- (void)verticallyScrollTranscriptByAmount:(double)a3 animated:(BOOL)a4 duration:(double)a5 completion:(id)a6
{
  _BOOL4 v7;
  void (**v10)(_QWORD);
  void *v11;
  char v12;
  NSObject *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  char v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  dispatch_time_t v27;
  NSObject *v28;
  id v29;
  _QWORD v30[4];
  id v31;
  CKTranscriptCollectionViewController *v32;
  NSObject *v33;
  void (**v34)(_QWORD);
  uint8_t buf[4];
  CKTranscriptCollectionViewController *v36;
  uint64_t v37;

  v7 = a4;
  v37 = *MEMORY[0x1E0C80C00];
  v10 = (void (**)(_QWORD))a6;
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "isScrollEnabled");

  if ((v12 & 1) == 0)
  {
    IMLogHandleForCategory();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      -[CKTranscriptCollectionViewController verticallyScrollTranscriptByAmount:animated:duration:completion:].cold.1();

  }
  -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "contentOffset");
  v16 = v15;
  v18 = v17 + a3;
  if (v7)
  {
    -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_opt_respondsToSelector();

    if ((v20 & 1) != 0)
    {
      -[CKTranscriptCollectionViewController updateAnimationGroup](self, "updateAnimationGroup");
      v21 = objc_claimAutoreleasedReturnValue();
      if (IMOSLoggingEnabled())
      {
        OSLogHandleForIMFoundationCategory();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 134217984;
          v36 = self;
          _os_log_impl(&dword_18DFCD000, v22, OS_LOG_TYPE_INFO, "%p enter updateAnimationGroup: in verticallyScrollTranscriptByAmount", buf, 0xCu);
        }

      }
      dispatch_group_enter(v21);
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      -[CKTranscriptCollectionViewController collectionView](self, "collectionView");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "_contentOffsetAnimationDuration");
      v26 = v25;

      objc_msgSend(v23, "beginDisablingTranscriptDynamicsForReason:", CFSTR("ProgramaticScroll"));
      objc_msgSend(v23, "_setContentOffsetAnimationDuration:", a5);
      objc_msgSend(v23, "setContentOffset:animated:", 1, v16, v18);
      objc_msgSend(v23, "_setContentOffsetAnimationDuration:", v26);
      v27 = dispatch_time(0, (uint64_t)(a5 * 1000000000.0));
      v30[0] = MEMORY[0x1E0C809B0];
      v30[1] = 3221225472;
      v30[2] = __104__CKTranscriptCollectionViewController_verticallyScrollTranscriptByAmount_animated_duration_completion___block_invoke;
      v30[3] = &unk_1E274CF80;
      v31 = v23;
      v32 = self;
      v33 = v21;
      v34 = v10;
      v28 = v21;
      v29 = v23;
      dispatch_after(v27, MEMORY[0x1E0C80D38], v30);

    }
  }
  else
  {
    objc_msgSend(v14, "setContentOffset:", v15, v18);
    if (v10)
      v10[2](v10);
  }

}

uint64_t __104__CKTranscriptCollectionViewController_verticallyScrollTranscriptByAmount_animated_duration_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "endDisablingTranscriptDynamicsForReason:", CFSTR("ProgramaticScroll"));
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(a1 + 40);
      v5 = 134217984;
      v6 = v3;
      _os_log_impl(&dword_18DFCD000, v2, OS_LOG_TYPE_INFO, "%p leave updateAnimationGroup: in verticallyScrollTranscriptByAmount", (uint8_t *)&v5, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)deselectAllBalloons
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeAllSelectedMessageGuids");

  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v8));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = v9;
        if (v9)
          objc_msgSend(v9, "setSelected:withSelectionState:", 0, 0);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

}

- (void)selectionManager:(id)a3 didAddChatItem:(id)a4 selectionState:(id)a5
{
  id v7;
  void *v8;
  id v9;

  v7 = a5;
  objc_msgSend(a4, "IMChatItem");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "guid");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _selectChatItemGuid:selectionState:](self, "_selectChatItemGuid:selectionState:", v8, v7);

}

- (void)selectionManager:(id)a3 didRemoveChatItem:(id)a4
{
  void *v5;
  id v6;

  objc_msgSend(a4, "IMChatItem", a3);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "guid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _deselectChatItemGuid:](self, "_deselectChatItemGuid:", v5);

}

- (id)_chatItemForGUID:(id)a3
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v5);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v9, "IMChatItem", (_QWORD)v14);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "guid");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v4, "isEqualToString:", v11);

        if ((v12 & 1) != 0)
        {
          v6 = v9;
          goto LABEL_11;
        }
      }
      v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v6)
        continue;
      break;
    }
  }
LABEL_11:

  return v6;
}

- (void)selectRangeWithIndexPath:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  unint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;

  v4 = a3;
  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "trackedGuid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v5, "trackedGuid");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController _chatItemForGUID:](self, "_chatItemForGUID:", v7);
    v8 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "selectedStateForGuid:", v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = (void *)v8;
    -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v8);
    v10 = objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v11, "item");
    v14 = objc_msgSend(v4, "item");
    if (v13 >= v14)
      v15 = v14;
    else
      v15 = v13;
    v16 = objc_msgSend(v11, "item");
    v17 = objc_msgSend(v4, "item");
    v18 = v4;
    if (v16 <= v17)
      v19 = v17;
    else
      v19 = v16;
    objc_msgSend(v5, "removeAllSelectedMessageGuids");
    v45 = v18;
    v42 = v11;
    v43 = (void *)v10;
    v41 = v15;
    if (v15 <= v19)
    {
      v33 = 0x7FFFFFFFFFFFFFFFLL;
      v34 = v15;
      do
      {
        objc_msgSend(v12, "objectAtIndex:", v34);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "IMChatItem");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "guid");
        v37 = (void *)objc_claimAutoreleasedReturnValue();

        v20 = v34;
        if ((objc_msgSend(v37, "isEqualToString:", v7) & 1) == 0)
        {
          +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", objc_msgSend(v9, "style"));
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "addSelectedMessageGuid:selectionState:", v37, v38);

          v20 = v33;
        }

        ++v34;
        v33 = v20;
      }
      while (v34 <= v19);
    }
    else
    {
      v20 = 0x7FFFFFFFFFFFFFFFLL;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v9, "style") == 1)
    {
      objc_msgSend(v43, "updateTextSelectionState:forTextSelectionArea:", v9, v20 == v41);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "trackSelectedGuid:selectionState:", v7, v39);

    }
    else
    {
      objc_msgSend(v5, "trackSelectedGuid:selectionState:", v7, v9);
    }
    v4 = v45;

  }
  else
  {
    -[CKTranscriptCollectionViewController selectedItems](self, "selectedItems");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v7, "firstIndex");
    v22 = objc_msgSend(v7, "lastIndex");
    if (v21 == 0x7FFFFFFFFFFFFFFFLL || (v23 = v22, v22 == 0x7FFFFFFFFFFFFFFFLL))
    {
      objc_msgSend(v5, "removeAllSelectedMessageGuids");
      IMLogHandleForCategory();
      v40 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        -[CKTranscriptCollectionViewController selectRangeWithIndexPath:].cold.1();

    }
    else
    {
      v24 = v4;
      v25 = objc_msgSend(v4, "item");
      if (v25 > v23)
      {
        v26 = v25;
      }
      else
      {
        v21 = v25;
        v26 = v23;
      }
      objc_msgSend(v5, "removeAllSelectedMessageGuids");
      -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      if (v21 <= v26)
      {
        v28 = v26 + 1;
        do
        {
          if (v21 >= objc_msgSend(v27, "count"))
            break;
          objc_msgSend(v27, "objectAtIndex:", v21);
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "IMChatItem");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "guid");
          v31 = (void *)objc_claimAutoreleasedReturnValue();

          +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 0);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "addSelectedMessageGuid:selectionState:", v31, v32);

          ++v21;
        }
        while (v28 != v21);
      }

      v4 = v24;
    }
  }

}

- (BOOL)_selectedChatItemsHaveMultipleSenders:(id)a3
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  id obj;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  obj = a3;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  v4 = 0;
  if (v3)
  {
    v5 = *(_QWORD *)v16;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v8 = v7;
          objc_msgSend(v8, "sender");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          if (v4)
          {
            objc_msgSend(v4, "ID");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v9, "ID");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            v12 = objc_msgSend(v10, "isEqualToString:", v11);

            if ((v12 & 1) == 0)
            {

              LOBYTE(v3) = 1;
              goto LABEL_14;
            }
          }

          v4 = v9;
        }
      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_14:

  return v3;
}

- (void)_addAttachmentsToProvidersArray:(id)a3 forChatItems:(id)a4
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v5 = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __85__CKTranscriptCollectionViewController__addAttachmentsToProvidersArray_forChatItems___block_invoke;
  v7[3] = &unk_1E27500C0;
  v8 = v5;
  v6 = v5;
  objc_msgSend(a4, "enumerateObjectsUsingBlock:", v7);

}

void __85__CKTranscriptCollectionViewController__addAttachmentsToProvidersArray_forChatItems___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v3, "mediaObject");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pasteboardItemProvider");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
LABEL_6:

    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v4 = v3;
    objc_msgSend(v4, "transcriptIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pluginDisplayContainerForContext:", v6);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "pluginPayload");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "pluginBundleID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isEqualToString:", *MEMORY[0x1E0D375F8]);

    if ((v9 & 1) == 0)
    {
      objc_msgSend(v5, "pasteboardItemProvider");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "addObject:", v10);

    }
    goto LABEL_6;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_8;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(v3, "aggregateChatItems", 0);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v18 != v13)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * i), "mediaObject");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "pasteboardItemProvider");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "addObject:", v16);

      }
      v12 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v12);
  }
LABEL_7:

LABEL_8:
}

- (id)_itemProviderForSelectedChatItemsWithMultipleSenders:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  __objc2_class **v11;
  NSObject *v12;
  void *v13;
  void *v14;
  uint8_t v16[8];
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  _QWORD v27[5];
  id v28;

  v4 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = 0;
  v27[1] = v27;
  v27[2] = 0x3032000000;
  v27[3] = __Block_byref_object_copy__38;
  v27[4] = __Block_byref_object_dispose__38;
  v28 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  v6 = objc_alloc_init(MEMORY[0x1E0CB3778]);
  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __93__CKTranscriptCollectionViewController__itemProviderForSelectedChatItemsWithMultipleSenders___block_invoke;
  v17[3] = &unk_1E27551A8;
  v21 = &v23;
  v22 = v27;
  v8 = v6;
  v18 = v8;
  v9 = v7;
  v19 = v9;
  v10 = v4;
  v20 = v10;
  objc_msgSend(v10, "enumerateObjectsUsingBlock:", v17);
  if (*((_BYTE *)v24 + 24))
  {
    v11 = off_1E2732C40;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      OSLogHandleForIMFoundationCategory();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_18DFCD000, v12, OS_LOG_TYPE_INFO, "Based on the content of the message, we do not need to serialize the copied item as an attributed string. Using plain string serialization only.", v16, 2u);
      }

    }
    v11 = off_1E27337F8;
  }
  v13 = (void *)objc_msgSend(objc_alloc(*v11), "initWithAttributedString:", v8);
  v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36C8]), "initWithObject:", v13);
  objc_msgSend(v5, "addObject:", v14);
  -[CKTranscriptCollectionViewController _addAttachmentsToProvidersArray:forChatItems:](self, "_addAttachmentsToProvidersArray:forChatItems:", v5, v10);

  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(v27, 8);

  return v5;
}

void __93__CKTranscriptCollectionViewController__itemProviderForSelectedChatItemsWithMultipleSenders___block_invoke(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  NSObject *v37;
  objc_class *v38;
  void *v39;
  unint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint8_t buf[4];
  void *v46;
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v40 = a3;
    v6 = v5;
    objc_msgSend(v6, "sender");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    if (!v8
      || (objc_msgSend(v8, "ID"),
          v9 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v7, "ID"),
          v10 = (void *)objc_claimAutoreleasedReturnValue(),
          v11 = objc_msgSend(v9, "isEqualToString:", v10),
          v10,
          v9,
          (v11 & 1) == 0))
    {
      v12 = (void *)MEMORY[0x1E0CB3940];
      CKFrameworkBundle();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("COPY_SENDER_FORMAT"), &stru_1E276D870, CFSTR("ChatKit"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "fullName");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "stringWithFormat:", v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
      {
        v17 = *(void **)(a1 + 32);
        v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:", CFSTR("\r"));
        objc_msgSend(v17, "appendAttributedString:", v18);

      }
      v19 = *(void **)(a1 + 32);
      v20 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:", v16);
      objc_msgSend(v19, "appendAttributedString:", v20);

      v21 = *(void **)(a1 + 32);
      v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:", CFSTR("\r"));
      objc_msgSend(v21, "appendAttributedString:", v22);

    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v7);
    objc_msgSend(v6, "IMChatItem");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "guid");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    CKFrameworkBundle();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("COPY_CONTENT_FORMAT"), &stru_1E276D870, CFSTR("ChatKit"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "selectedStateForGuid:", v24);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = objc_msgSend(v27, "textSelectionRange");
    objc_msgSend(v6, "rtfDocumentItemsWithFormatString:selectedTextRange:", v26, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    if (v30)
    {
      v43 = 0u;
      v44 = 0u;
      v41 = 0u;
      v42 = 0u;
      v31 = v30;
      v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v41, v47, 16);
      if (v32)
      {
        v33 = *(_QWORD *)v42;
        do
        {
          v34 = 0;
          do
          {
            if (*(_QWORD *)v42 != v33)
              objc_enumerationMutation(v31);
            objc_msgSend(*(id *)(a1 + 32), "appendAttributedString:", *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * v34++));
          }
          while (v32 != v34);
          v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v41, v47, 16);
        }
        while (v32);
      }

    }
    if (objc_msgSend(*(id *)(a1 + 48), "count") - 1 > v40)
    {
      v35 = *(void **)(a1 + 32);
      v36 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:", CFSTR("\r"));
      objc_msgSend(v35, "appendAttributedString:", v36);

    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      v38 = (objc_class *)objc_opt_class();
      NSStringFromClass(v38);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v46 = v39;
      _os_log_impl(&dword_18DFCD000, v37, OS_LOG_TYPE_INFO, "Skipped pasteboard items of type: %@", buf, 0xCu);

    }
  }

}

- (id)_itemProviderForSelectedChatItemsWithSingleSender:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  __objc2_class **v13;
  void *v14;
  void *v15;
  NSObject *v17;
  uint8_t v18[8];
  _QWORD v19[5];
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;

  v4 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc_init(MEMORY[0x1E0CB3778]);
  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v8 = MEMORY[0x1E0C809B0];
  v32 = 0;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __90__CKTranscriptCollectionViewController__itemProviderForSelectedChatItemsWithSingleSender___block_invoke;
  v24[3] = &unk_1E27551D0;
  v28 = &v29;
  v9 = v7;
  v25 = v9;
  v10 = v6;
  v26 = v10;
  v11 = v4;
  v27 = v11;
  objc_msgSend(v11, "enumerateObjectsUsingBlock:", v24);
  objc_msgSend(v10, "ck_attributedStringByRemovingUnsupportedCompositionAttributes");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  v19[0] = v8;
  v19[1] = 3221225472;
  v19[2] = __90__CKTranscriptCollectionViewController__itemProviderForSelectedChatItemsWithSingleSender___block_invoke_1027;
  v19[3] = &unk_1E27508F0;
  v19[4] = &v20;
  objc_msgSend(v12, "enumerateAttributesInRange:options:usingBlock:", 0, objc_msgSend(v12, "length"), 0, v19);
  if (*((_BYTE *)v21 + 24))
  {
    *((_BYTE *)v30 + 24) = 1;
LABEL_4:
    v13 = off_1E2732C40;
    goto LABEL_5;
  }
  if (*((_BYTE *)v30 + 24))
    goto LABEL_4;
  if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_18DFCD000, v17, OS_LOG_TYPE_INFO, "Based on the content of the message, we do not need to serialize the copied item as an attributed string. Using plain string serialization only.", v18, 2u);
    }

  }
  v13 = off_1E27337F8;
LABEL_5:
  v14 = (void *)objc_msgSend(objc_alloc(*v13), "initWithAttributedString:", v12);
  v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36C8]), "initWithObject:", v14);
  objc_msgSend(v5, "addObject:", v15);
  -[CKTranscriptCollectionViewController _addAttachmentsToProvidersArray:forChatItems:](self, "_addAttachmentsToProvidersArray:forChatItems:", v5, v11);

  _Block_object_dispose(&v20, 8);
  _Block_object_dispose(&v29, 8);

  return v5;
}

void __90__CKTranscriptCollectionViewController__itemProviderForSelectedChatItemsWithSingleSender___block_invoke(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  objc_class *v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t buf[4];
  void *v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v6 = v5;
    objc_msgSend(v6, "IMChatItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "guid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 32), "selectedStateForGuid:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "textSelectionRange");
    objc_msgSend(v6, "rtfDocumentItemsWithFormatString:selectedTextRange:", 0, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v12)
    {
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v13 = v12;
      v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v28, 16);
      if (v14)
      {
        v15 = *(_QWORD *)v23;
        do
        {
          v16 = 0;
          do
          {
            if (*(_QWORD *)v23 != v15)
              objc_enumerationMutation(v13);
            objc_msgSend(*(id *)(a1 + 40), "appendAttributedString:", *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v16++), (_QWORD)v22);
          }
          while (v14 != v16);
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v28, 16);
        }
        while (v14);
      }

    }
    if (objc_msgSend(*(id *)(a1 + 48), "count", (_QWORD)v22) - 1 > a3)
    {
      v17 = *(void **)(a1 + 40);
      v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:", CFSTR("\r"));
      objc_msgSend(v17, "appendAttributedString:", v18);

    }
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      v20 = (objc_class *)objc_opt_class();
      NSStringFromClass(v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v27 = v21;
      _os_log_impl(&dword_18DFCD000, v19, OS_LOG_TYPE_INFO, "Skipped pasteboard items of type: %@", buf, 0xCu);

    }
  }

}

uint64_t __90__CKTranscriptCollectionViewController__itemProviderForSelectedChatItemsWithSingleSender___block_invoke_1027(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t result;

  result = objc_msgSend(a2, "count");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result != 0;
  *a5 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

- (void)_searchForSelectedBalloonHack
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v18;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
        -[CKTranscriptCollectionViewController balloonViewForChatItem:](self, "balloonViewForChatItem:", v8, (_QWORD)v17);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        if (v9)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v9, "textView");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            v11 = objc_msgSend(v10, "selectedRange");
            if (v12)
            {
              +[CKBalloonSelectionState balloonSelectionState:textSelectionRange:](CKBalloonSelectionState, "balloonSelectionState:textSelectionRange:", 1, v11, v12);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "IMChatItem");
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "guid");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v14, "trackSelectedGuid:selectionState:", v16, v13);

              goto LABEL_14;
            }

          }
        }

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_14:

}

- (void)copySelectedChatItemsToPasteboard
{
  void *v3;
  NSObject *v4;
  uint8_t v5[16];

  -[CKTranscriptCollectionViewController _searchForSelectedBalloonHack](self, "_searchForSelectedBalloonHack");
  -[CKTranscriptCollectionViewController selectedChatItems](self, "selectedChatItems");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "count"))
  {
    -[CKTranscriptCollectionViewController copyChatItemsToPasteboard:](self, "copyChatItemsToPasteboard:", v3);
  }
  else if (IMOSLoggingEnabled())
  {
    OSLogHandleForIMFoundationCategory();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_18DFCD000, v4, OS_LOG_TYPE_INFO, "SelectedChatItems unexpectedly has zero selected items", v5, 2u);
    }

  }
}

- (void)copyChatItemsToPasteboard:(id)a3
{
  id v4;
  void *v5;
  id v6;

  v4 = a3;
  if (-[CKTranscriptCollectionViewController _selectedChatItemsHaveMultipleSenders:](self, "_selectedChatItemsHaveMultipleSenders:", v4))
  {
    -[CKTranscriptCollectionViewController _itemProviderForSelectedChatItemsWithMultipleSenders:](self, "_itemProviderForSelectedChatItemsWithMultipleSenders:", v4);
  }
  else
  {
    -[CKTranscriptCollectionViewController _itemProviderForSelectedChatItemsWithSingleSender:](self, "_itemProviderForSelectedChatItemsWithSingleSender:", v4);
  }
  v6 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA810], "generalPasteboard");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setItemProviders:", v6);

}

- (void)selectSingleBalloonView:(id)a3
{
  void *v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", a3);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController chatItems](self, "chatItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v13, "item");
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = v5;
    if (v5 < objc_msgSend(v4, "count"))
    {
      objc_msgSend(v4, "objectAtIndex:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "IMChatItem");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "guid");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeAllSelectedMessageGuids");

      -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "addSelectedMessageGuid:selectionState:", v9, v12);

    }
  }

}

- (BOOL)collectionView:(id)a3 shouldAllowSwipeForItemAtIndexPath:(id)a4
{
  void *v5;
  void *v6;
  char v7;

  -[CKTranscriptCollectionViewController chatItemAtIndexPath:](self, "chatItemAtIndexPath:", a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "canReplyToChatItem:", v5);

  return v7;
}

- (void)transcriptCollectionViewNeedsScrollIntentEnforced:(id)a3 withAnimationProperties:(id)a4
{
  -[CKTranscriptCollectionViewController enforceTranscriptScrollIntentWithAnimationProperties:](self, "enforceTranscriptScrollIntentWithAnimationProperties:", a4);
}

- (id)transcriptCollectionView:(id)a3 preferredIndexPathForAssociatedItemAtPoint:(CGPoint)a4
{
  void *v5;
  void *v6;
  void *v7;

  objc_msgSend(a3, "hitTest:withEvent:", 0, a4.x, a4.y);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "ck_superBalloonView");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController indexPathForBalloonView:](self, "indexPathForBalloonView:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (void)collectionView:(id)a3 didRecognizePanGestureWithPoint:(CGPoint)a4
{
  double x;
  double v6;
  double v7;
  void *v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  double v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  char v41;
  void *v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  char v55;
  void *v56;
  void *v57;
  double y;
  double v59;
  double v60;
  id v61;

  y = a4.y;
  x = a4.x;
  v61 = a3;
  objc_msgSend(v61, "contentSize");
  v7 = v6;
  objc_msgSend(v61, "bounds");
  v8 = v61;
  if (v7 >= v9)
  {
    objc_msgSend(v61, "window");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "convertPoint:fromView:", v61, x, y);
    v12 = v11;

    objc_msgSend(v61, "window");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "bounds");
    v15 = v14;

    objc_msgSend(v61, "contentOffset");
    v17 = v16;
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "balloonSelectionScrollThresholdTop");
    v20 = v19;

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "balloonSelectionScrollThresholdBottom");
    v23 = v22;

    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "balloonSelectionMaxScrollSpeed");
    v26 = v25;

    if (v12 >= v20)
    {
      v8 = v61;
      if (v12 > v15 - v23)
      {
        objc_msgSend(v61, "frame");
        v8 = v61;
        if (v17 < v7 - v45)
        {
          if (v26 >= v23 - (v15 - v12))
            v44 = v23 - (v15 - v12);
          else
            v44 = v26;
          -[CKTranscriptCollectionViewController chatItems](self, "chatItems", *(_QWORD *)&y);
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          if (v44 >= 0.0)
          {
            v46 = 0.0;
            v47 = 1;
            do
            {
              objc_msgSend(v61, "indexPathForItemAtPoint:", x, v60 + v46);
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              v49 = objc_msgSend(v48, "item");
              if ((v49 & 0x8000000000000000) == 0)
              {
                v50 = v49;
                if (v49 < objc_msgSend(v31, "count"))
                {
                  objc_msgSend(v31, "objectAtIndex:", v50);
                  v51 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v51, "IMChatItem");
                  v52 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v52, "guid");
                  v53 = (void *)objc_claimAutoreleasedReturnValue();

                  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
                  v54 = (void *)objc_claimAutoreleasedReturnValue();
                  v55 = objc_msgSend(v54, "isMessageGuidSelected:", v53);

                  if ((v55 & 1) == 0)
                  {
                    -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
                    v56 = (void *)objc_claimAutoreleasedReturnValue();
                    +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 1);
                    v57 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v56, "addSelectedMessageGuid:selectionState:", v53, v57);

                  }
                }
              }

              v46 = (double)v47++;
            }
            while (v44 >= v46);
          }
          goto LABEL_29;
        }
      }
    }
    else
    {
      +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "balloonSelectionLoadMoreSpinnerHeight");
      v29 = v28;

      v8 = v61;
      if (v17 > -v29)
      {
        if (v26 >= v20 - v12)
          v30 = v20 - v12;
        else
          v30 = v26;
        -[CKTranscriptCollectionViewController chatItems](self, "chatItems", *(_QWORD *)&y);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        if (v30 >= 0.0)
        {
          v32 = 0.0;
          v33 = 1;
          do
          {
            objc_msgSend(v61, "indexPathForItemAtPoint:", x, v59 - v32);
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            v35 = objc_msgSend(v34, "item");
            if ((v35 & 0x8000000000000000) == 0)
            {
              v36 = v35;
              if (v35 < objc_msgSend(v31, "count"))
              {
                objc_msgSend(v31, "objectAtIndex:", v36);
                v37 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v37, "IMChatItem");
                v38 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v38, "guid");
                v39 = (void *)objc_claimAutoreleasedReturnValue();

                -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
                v40 = (void *)objc_claimAutoreleasedReturnValue();
                v41 = objc_msgSend(v40, "isMessageGuidSelected:", v39);

                if ((v41 & 1) == 0)
                {
                  -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
                  v42 = (void *)objc_claimAutoreleasedReturnValue();
                  +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 1);
                  v43 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v42, "addSelectedMessageGuid:selectionState:", v39, v43);

                }
              }
            }

            v32 = (double)v33++;
          }
          while (v30 >= v32);
        }
        v44 = -v30;
LABEL_29:
        -[CKTranscriptCollectionViewController verticallyScrollTranscriptByAmount:animated:completion:](self, "verticallyScrollTranscriptByAmount:animated:completion:", 1, 0, v44);

        v8 = v61;
      }
    }
  }

}

- (void)_trackPhotoStackEvent:(id)a3 forStackBalloonView:(id)a4 transcriptOrientation:(char)a5
{
  uint64_t v5;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[6];
  _QWORD v35[8];

  v35[6] = *MEMORY[0x1E0C80C00];
  if (a3 && a4)
  {
    v5 = a5;
    v8 = a4;
    v9 = a3;
    objc_msgSend(v8, "currentAssetReference");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "asset");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "mediaType");
    objc_msgSend(v8, "dataSourceManager");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "mediaObjectDataSource");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "mediaObjects");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "count");

    v30 = v10;
    v32 = v11;
    if (v14)
    {
      objc_msgSend(v14, "indexPathForAssetReference:", v10, v10, v11);
      v17 = v33;
    }
    else
    {
      v17 = 0;
    }
    -[CKTranscriptCollectionViewController conversation](self, "conversation", v30);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "recipients");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "count");

    v21 = *MEMORY[0x1E0D38738];
    v35[0] = v9;
    v22 = *MEMORY[0x1E0D38740];
    v34[0] = v21;
    v34[1] = v22;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v17);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v35[1] = v23;
    v34[2] = *MEMORY[0x1E0D38748];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v12);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v35[2] = v24;
    v34[3] = *MEMORY[0x1E0D38750];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v16);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v35[3] = v25;
    v34[4] = *MEMORY[0x1E0D38778];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithChar:", v5);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v35[4] = v26;
    v34[5] = *MEMORY[0x1E0D38758];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v20);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v35[5] = v27;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, v34, 6);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0D39958], "sharedInstance");
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v29, "trackEvent:withDictionary:", *MEMORY[0x1E0D38720], v28);
  }
}

- (id)_logChatItems:(id)a3 withUpdates:(id)a4
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v6 = a4;
  v7 = a3;
  v8 = -[CKTranscriptCollectionViewController _loggingRangeForUpdates:chatItemsCount:](self, "_loggingRangeForUpdates:chatItemsCount:", v6, objc_msgSend(v7, "count"));
  v10 = v9;

  objc_msgSend(v7, "subarrayWithRange:", v8, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController _logChatItems:withIndex:](self, "_logChatItems:withIndex:", v11, v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

- (id)_logLatestChatItems:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4 = a3;
  v5 = -[CKTranscriptCollectionViewController _loggingRangeForLatestChatItems:](self, "_loggingRangeForLatestChatItems:", v4);
  objc_msgSend(v4, "subarrayWithRange:", v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController _logChatItems:withIndex:](self, "_logChatItems:withIndex:", v7, v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (id)_logChatItems:(id)a3 withIndex:(int64_t)a4
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  int v16;
  __CFString *v17;
  void *v18;
  __CFString *v19;
  objc_class *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v28;
  void *v29;
  id obj;
  uint64_t v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  objc_msgSend(v6, "setDateStyle:", 1);
  v29 = v6;
  objc_msgSend(v6, "setTimeStyle:", 1);
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0CB3940];
  -[CKTranscriptCollectionViewController chat](self, "chat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "guid");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "stringWithFormat:", CFSTR("chat: %@\n"), v10);
  v11 = objc_claimAutoreleasedReturnValue();

  v28 = (void *)v11;
  objc_msgSend(v7, "appendString:", v11);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  obj = v5;
  v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
  if (v12)
  {
    v13 = v12;
    v31 = *(_QWORD *)v34;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v34 != v31)
          objc_enumerationMutation(obj);
        v15 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * i);
        v16 = objc_msgSend(v15, "itemIsFromMe");
        v17 = CFSTR(" ");
        if (v16)
          v17 = CFSTR("\t");
        v18 = (void *)MEMORY[0x1E0CB3940];
        v19 = v17;
        v20 = (objc_class *)objc_opt_class();
        NSStringFromClass(v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "IMChatItem");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "guid");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "stringWithFormat:", CFSTR("\t%3lu:%@<%@ : %@> "), a4 + i, v19, v21, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v7, "appendString:", v24);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v15, "date");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "stringFromDate:", v25);
          v26 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v7, "appendString:", v26);
        }
        objc_msgSend(v7, "appendString:", CFSTR("\n"));

      }
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
      a4 += i;
    }
    while (v13);
  }

  return v7;
}

- (_NSRange)_loggingRangeForUpdates:(id)a3 chatItemsCount:(int64_t)a4
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t i;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  NSUInteger v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSUInteger v24;
  NSUInteger v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;
  _NSRange result;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v6)
  {
    v7 = v6;
    v8 = 0;
    v9 = *(_QWORD *)v27;
    v10 = a4;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v27 != v9)
          objc_enumerationMutation(v5);
        v12 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        v13 = objc_msgSend(v12, "lastIndex");
        v14 = objc_msgSend(v12, "count") + v13;
        if (v14 >= a4)
          v14 = a4;
        if (v8 <= v14)
          v8 = v14;
        v15 = objc_msgSend(v12, "firstIndex");
        if (v10 >= v15)
          v10 = v15;
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v7);
  }
  else
  {
    v8 = 0;
    v10 = a4;
  }
  v16 = v8 - v10;
  v17 = a4 - 1;
  if (a4 - 1 >= v8 - 10)
    v18 = v8 - 10;
  else
    v18 = a4 - 1;
  if (v16 == 10)
    v18 = v10;
  v19 = (v8 - 10) & ~((v8 - 10) >> 63);
  if (v8 >= v17)
    v17 = v8;
  else
    v19 = v10;
  if (v16 <= 9)
    v20 = v19;
  else
    v20 = v18;
  if (v16 <= 9)
    v21 = v17;
  else
    v21 = v8;
  v22 = (v21 - v20) & ~((uint64_t)(v21 - v20) >> 63);
  if (v22 >= 0xA)
    v23 = 10;
  else
    v23 = v22;

  v24 = v20;
  v25 = v23;
  result.length = v25;
  result.location = v24;
  return result;
}

- (_NSRange)_loggingRangeForLatestChatItems:(id)a3
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  NSUInteger v6;
  NSUInteger v7;
  _NSRange result;

  v3 = a3;
  v4 = objc_msgSend(v3, "count");
  v5 = objc_msgSend(v3, "count");

  if (v4 >= 0xB)
    v6 = v5 - 11;
  else
    v6 = 0;
  if (v4 >= 0xB)
    v7 = 10;
  else
    v7 = v5;
  result.length = v7;
  result.location = v6;
  return result;
}

- (void)chatItemControllerDidSetChatItems
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  if (!CKIsRunningUnitTests())
  {
    v3 = objc_msgSend(v6, "lastFinishedMessageID");
    objc_msgSend(v6, "lastFinishedMessageDate");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "__ck_updateWatermarkToMessageID:date:", v3, v4);

  }
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transcriptCollectionViewControllerDidSetChatItems:", self);

}

- (void)chatItemControllerDidInsertAssociatedChatItems
{
  id v3;

  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "transcriptCollectionViewControllerDidInsertAssociatedChatItem:", self);

}

- (void)chatItemControllerDidChangeAssociatedChatItemsWithChatItemDiff:(id)a3
{
  id v4;
  id v5;

  v4 = a3;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transcriptCollectionViewControllerDidChangeAssociatedChatItem:chatItemDiff:", self, v4);

}

- (void)configurePluginChatItemForChatItemControllerWithChatItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v4 = a3;
  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "chat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "guid");
  v12 = (id)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "recipientStrings");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isBusinessConversation");
  -[CKTranscriptCollectionViewController transcriptIdentifier](self, "transcriptIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "configureWithConversationID:recipients:isBusiness:context:", v12, v8, v10, v11);

}

- (CKTranscriptLayoutMessageEditingContext)messageEditingContext
{
  return self->_messageEditingContext;
}

- (void)setMessageEditingContext:(id)a3
{
  objc_storeStrong((id *)&self->_messageEditingContext, a3);
}

- (UIInputContextHistory)inputContextHistory
{
  return self->_inputContextHistory;
}

- (void)setInputContextHistory:(id)a3
{
  objc_storeStrong((id *)&self->_inputContextHistory, a3);
}

- (void)setGenerativeContextHistory:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1024);
}

- (NSString)generatedSummary
{
  return self->_generatedSummary;
}

- (void)setGeneratedSummary:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1032);
}

- (CKConversation)conversation
{
  return self->_conversation;
}

- (void)setConversation:(id)a3
{
  objc_storeStrong((id *)&self->_conversation, a3);
}

- (void)setCollectionView:(id)a3
{
  objc_storeStrong((id *)&self->_collectionView, a3);
}

- (BOOL)isInline
{
  return self->_isInline;
}

- (void)setAssociatedChatItems:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1056);
}

- (UIEdgeInsets)marginInsets
{
  double top;
  double left;
  double bottom;
  double right;
  UIEdgeInsets result;

  top = self->_marginInsets.top;
  left = self->_marginInsets.left;
  bottom = self->_marginInsets.bottom;
  right = self->_marginInsets.right;
  result.right = right;
  result.bottom = bottom;
  result.left = left;
  result.top = top;
  return result;
}

- (void)setMarginInsets:(UIEdgeInsets)a3
{
  self->_marginInsets = a3;
}

- (double)balloonMaxWidth
{
  return self->_balloonMaxWidth;
}

- (void)setBalloonMaxWidth:(double)a3
{
  self->_balloonMaxWidth = a3;
}

- (CKTranscriptCollectionViewControllerDelegate)delegate
{
  return (CKTranscriptCollectionViewControllerDelegate *)objc_loadWeakRetained((id *)&self->_delegate);
}

- (void)setDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_delegate, a3);
}

- (CKGradientReferenceView)gradientReferenceView
{
  return self->_gradientReferenceView;
}

- (void)setGradientReferenceView:(id)a3
{
  objc_storeStrong((id *)&self->_gradientReferenceView, a3);
}

- (OS_dispatch_group)updateAnimationGroup
{
  return self->_updateAnimationGroup;
}

- (void)setUpdateAnimationGroup:(id)a3
{
  objc_storeStrong((id *)&self->_updateAnimationGroup, a3);
}

- (NSIndexSet)hiddenItems
{
  return self->_hiddenItems;
}

- (NSIndexSet)hiddenAssociatedItems
{
  return self->_hiddenAssociatedItems;
}

- (NSIndexSet)hiddenAssociatedItemsForMessageEditing
{
  return self->_hiddenAssociatedItemsForMessageEditing;
}

- (NSIndexSet)hiddenBalloonViews
{
  return self->_hiddenBalloonViews;
}

- (NSString)poppedBalloonGUIDHiddenUntilNextChatItemUpdate
{
  return self->_poppedBalloonGUIDHiddenUntilNextChatItemUpdate;
}

- (BOOL)shouldLoadDefaultConversationViewingMessageCountOnAppear
{
  return self->_shouldLoadDefaultConversationViewingMessageCountOnAppear;
}

- (void)setShouldLoadDefaultConversationViewingMessageCountOnAppear:(BOOL)a3
{
  self->_shouldLoadDefaultConversationViewingMessageCountOnAppear = a3;
}

- (CKImpactEffectManager)impactEffectManager
{
  return self->_impactEffectManager;
}

- (void)setImpactEffectManager:(id)a3
{
  objc_storeStrong((id *)&self->_impactEffectManager, a3);
}

- (void)setFullscreenEffectManager:(id)a3
{
  objc_storeStrong((id *)&self->_fullscreenEffectManager, a3);
}

- (BOOL)transitionedFromComposing
{
  return self->_transitionedFromComposing;
}

- (BOOL)transitioningFromComposing
{
  return self->_transitioningFromComposing;
}

- (BOOL)isTranscriptUpdateAnimated
{
  return self->_transcriptUpdateAnimated;
}

- (void)setTranscriptUpdateAnimated:(BOOL)a3
{
  self->_transcriptUpdateAnimated = a3;
}

- (BOOL)allowsPluginPlayback
{
  return self->_allowsPluginPlayback;
}

- (void)setAllowsPluginPlayback:(BOOL)a3
{
  self->_allowsPluginPlayback = a3;
}

- (double)pluginPlaybackDelay
{
  return self->_pluginPlaybackDelay;
}

- (void)setPluginPlaybackDelay:(double)a3
{
  self->_pluginPlaybackDelay = a3;
}

- (NSString)__CurrentTestName
{
  return self->___CurrentTestName;
}

- (void)__setCurrentTestName:(id)a3
{
  objc_storeStrong((id *)&self->___CurrentTestName, a3);
}

- (int64_t)contentAnimationPauseReasons
{
  return self->_contentAnimationPauseReasons;
}

- (void)setContentAnimationPauseReasons:(int64_t)a3
{
  self->_contentAnimationPauseReasons = a3;
}

- (UIDragInteractionDelegate)dragInteractionDelegate
{
  return (UIDragInteractionDelegate *)objc_loadWeakRetained((id *)&self->_dragInteractionDelegate);
}

- (void)setDragInteractionDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_dragInteractionDelegate, a3);
}

- (UITapGestureRecognizer)loggingTapGestureRecognizer
{
  return self->_loggingTapGestureRecognizer;
}

- (void)setLoggingTapGestureRecognizer:(id)a3
{
  objc_storeStrong((id *)&self->_loggingTapGestureRecognizer, a3);
}

- (CKTranscriptTextEffectsState)textEffectsState
{
  return self->_textEffectsState;
}

- (void)setTextEffectsState:(id)a3
{
  objc_storeStrong((id *)&self->_textEffectsState, a3);
}

- (_TtC7ChatKit23CKTextEffectCoordinator)transcriptTextEffectCoordinator
{
  return self->_transcriptTextEffectCoordinator;
}

- (void)setTranscriptTextEffectCoordinator:(id)a3
{
  objc_storeStrong((id *)&self->_transcriptTextEffectCoordinator, a3);
}

- (CGSize)collectionViewSize
{
  double width;
  double height;
  CGSize result;

  width = self->_collectionViewSize.width;
  height = self->_collectionViewSize.height;
  result.height = height;
  result.width = width;
  return result;
}

- (void)setCollectionViewSize:(CGSize)a3
{
  self->_collectionViewSize = a3;
}

- (double)lastViewWidthUsedToLayoutChatItems
{
  return self->_lastViewWidthUsedToLayoutChatItems;
}

- (void)setLastViewWidthUsedToLayoutChatItems:(double)a3
{
  self->_lastViewWidthUsedToLayoutChatItems = a3;
}

- (NSArray)notifications
{
  return self->_notifications;
}

- (void)setNotifications:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1216);
}

- (void)setTranscriptIdentifier:(id)a3
{
  objc_storeStrong((id *)&self->_transcriptIdentifier, a3);
}

- (CKTranscriptCompositor)compositor
{
  return self->_compositor;
}

- (void)setCompositor:(id)a3
{
  objc_storeStrong((id *)&self->_compositor, a3);
}

- (BOOL)isSettingChatItems
{
  return self->_settingChatItems;
}

- (void)setSettingChatItems:(BOOL)a3
{
  self->_settingChatItems = a3;
}

- (CKAudioController)audioController
{
  return self->_audioController;
}

- (void)setAudioController:(id)a3
{
  objc_storeStrong((id *)&self->_audioController, a3);
}

- (BOOL)audioControllerWasPlayingBeforeScrub
{
  return self->_audioControllerWasPlayingBeforeScrub;
}

- (void)setAudioControllerWasPlayingBeforeScrub:(BOOL)a3
{
  self->_audioControllerWasPlayingBeforeScrub = a3;
}

- (void)setPluginSnapshots:(id)a3
{
  objc_storeStrong((id *)&self->_pluginSnapshots, a3);
}

- (CKPluginPlaybackManager)pluginPlaybackManager
{
  return self->_pluginPlaybackManager;
}

- (void)setPluginPlaybackManager:(id)a3
{
  objc_storeStrong((id *)&self->_pluginPlaybackManager, a3);
}

- (BOOL)isPerformingRegenerateOrReloadOnlyUpdate
{
  return self->_isPerformingRegenerateOrReloadOnlyUpdate;
}

- (void)setIsPerformingRegenerateOrReloadOnlyUpdate:(BOOL)a3
{
  self->_isPerformingRegenerateOrReloadOnlyUpdate = a3;
}

- (CGPoint)peekSampleTranslation
{
  double x;
  double y;
  CGPoint result;

  x = self->_peekSampleTranslation.x;
  y = self->_peekSampleTranslation.y;
  result.y = y;
  result.x = x;
  return result;
}

- (void)setPeekSampleTranslation:(CGPoint)a3
{
  self->_peekSampleTranslation = a3;
}

- (BOOL)isPeeking
{
  return self->_peeking;
}

- (void)setPeeking:(BOOL)a3
{
  self->_peeking = a3;
}

- (BOOL)isLoadingMoreMessages
{
  return self->_isLoadingMoreMessages;
}

- (void)setIsLoadingMoreMessages:(BOOL)a3
{
  self->_isLoadingMoreMessages = a3;
}

- (NSString)speakerTransferGUID
{
  return self->_speakerTransferGUID;
}

- (void)setSpeakerTransferGUID:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1264);
}

- (BOOL)sizedFullTranscript
{
  return self->_sizedFullTranscript;
}

- (void)setSizedFullTranscript:(BOOL)a3
{
  self->_sizedFullTranscript = a3;
}

- (BOOL)shouldUseOpaqueMask
{
  return self->_shouldUseOpaqueMask;
}

- (CKFullscreenEffectView)topEffectView
{
  return self->_topEffectView;
}

- (void)setTopEffectView:(id)a3
{
  objc_storeStrong((id *)&self->_topEffectView, a3);
}

- (void)setCurrentEffectDecorationViews:(id)a3
{
  objc_storeStrong((id *)&self->_currentEffectDecorationViews, a3);
}

- (void)setStickerGUIDsHiddenDuringStickerAddAnimation:(id)a3
{
  objc_storeStrong((id *)&self->_stickerGUIDsHiddenDuringStickerAddAnimation, a3);
}

- (BOOL)filterAllButFirstMessage
{
  return self->_filterAllButFirstMessage;
}

- (void)setFilterAllButFirstMessage:(BOOL)a3
{
  self->_filterAllButFirstMessage = a3;
}

- (BOOL)playedLastImpactEffectForTransitionFromComposing
{
  return self->_playedLastImpactEffectForTransitionFromComposing;
}

- (void)setPlayedLastImpactEffectForTransitionFromComposing:(BOOL)a3
{
  self->_playedLastImpactEffectForTransitionFromComposing = a3;
}

- (UIView)snapshotOfPluginBeingReplacedByBreadcrumb
{
  return self->_snapshotOfPluginBeingReplacedByBreadcrumb;
}

- (void)setSnapshotOfPluginBeingReplacedByBreadcrumb:(id)a3
{
  objc_storeStrong((id *)&self->_snapshotOfPluginBeingReplacedByBreadcrumb, a3);
}

- (NSValue)presentedChatItemScrollOffset
{
  return self->_presentedChatItemScrollOffset;
}

- (void)setPresentedChatItemScrollOffset:(id)a3
{
  objc_storeStrong((id *)&self->_presentedChatItemScrollOffset, a3);
}

- (BOOL)isPresentingChatItemForKeyboard
{
  return self->_isPresentingChatItemForKeyboard;
}

- (void)setIsPresentingChatItemForKeyboard:(BOOL)a3
{
  self->_isPresentingChatItemForKeyboard = a3;
}

- (NSDictionary)cachedEmojiResponses
{
  return self->_cachedEmojiResponses;
}

- (void)setCachedEmojiResponses:(id)a3
{
  objc_storeStrong((id *)&self->_cachedEmojiResponses, a3);
}

- (NSString)mostRecentlyTouchedPlugin
{
  return self->_mostRecentlyTouchedPlugin;
}

- (void)setMostRecentlyTouchedPlugin:(id)a3
{
  objc_storeStrong((id *)&self->_mostRecentlyTouchedPlugin, a3);
}

- (id)transcriptUpdateCompletion
{
  return self->_transcriptUpdateCompletion;
}

- (void)setTranscriptUpdateCompletion:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1328);
}

- (IMStateCaptureAssistant)stateCaptureAssistant
{
  return self->_stateCaptureAssistant;
}

- (void)setStateCaptureAssistant:(id)a3
{
  objc_storeStrong((id *)&self->_stateCaptureAssistant, a3);
}

- (CKChatItemController)chatItemController
{
  return self->_chatItemController;
}

- (void)setChatItemController:(id)a3
{
  objc_storeStrong((id *)&self->_chatItemController, a3);
}

- (NSSet)hiddenChatItemGUIDs
{
  return self->_hiddenChatItemGUIDs;
}

- (void)setHiddenChatItemGUIDs:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1352);
}

- (NSSet)chatItemGUIDsOfHiddenTapbackPiles
{
  return self->_chatItemGUIDsOfHiddenTapbackPiles;
}

- (void)setChatItemGUIDsOfHiddenTapbackPiles:(id)a3
{
  objc_setProperty_nonatomic_copy(self, a2, a3, 1360);
}

- (UICollectionViewDiffableDataSource)dataSource
{
  return self->_dataSource;
}

- (void)setDataSource:(id)a3
{
  objc_storeStrong((id *)&self->_dataSource, a3);
}

- (CKTranscriptBalloonSelectionManager)selectionManager
{
  return self->_selectionManager;
}

- (NSDate)transcriptBecameVisibleTimestamp
{
  return self->_transcriptBecameVisibleTimestamp;
}

- (void)setTranscriptBecameVisibleTimestamp:(id)a3
{
  objc_storeStrong((id *)&self->_transcriptBecameVisibleTimestamp, a3);
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_transcriptBecameVisibleTimestamp, 0);
  objc_storeStrong((id *)&self->_selectionManager, 0);
  objc_storeStrong((id *)&self->_dataSource, 0);
  objc_storeStrong((id *)&self->_chatItemGUIDsOfHiddenTapbackPiles, 0);
  objc_storeStrong((id *)&self->_hiddenChatItemGUIDs, 0);
  objc_storeStrong((id *)&self->_chatItemController, 0);
  objc_storeStrong((id *)&self->_stateCaptureAssistant, 0);
  objc_storeStrong(&self->_transcriptUpdateCompletion, 0);
  objc_storeStrong((id *)&self->_mostRecentlyTouchedPlugin, 0);
  objc_storeStrong((id *)&self->_cachedEmojiResponses, 0);
  objc_storeStrong((id *)&self->_presentedChatItemScrollOffset, 0);
  objc_storeStrong((id *)&self->_snapshotOfPluginBeingReplacedByBreadcrumb, 0);
  objc_storeStrong((id *)&self->_stickerGUIDsHiddenDuringStickerAddAnimation, 0);
  objc_storeStrong((id *)&self->_currentEffectDecorationViews, 0);
  objc_storeStrong((id *)&self->_topEffectView, 0);
  objc_storeStrong((id *)&self->_speakerTransferGUID, 0);
  objc_storeStrong((id *)&self->_pluginPlaybackManager, 0);
  objc_storeStrong((id *)&self->_pluginSnapshots, 0);
  objc_storeStrong((id *)&self->_audioController, 0);
  objc_storeStrong((id *)&self->_compositor, 0);
  objc_storeStrong((id *)&self->_transcriptIdentifier, 0);
  objc_storeStrong((id *)&self->_notifications, 0);
  objc_storeStrong((id *)&self->_transcriptTextEffectCoordinator, 0);
  objc_storeStrong((id *)&self->_textEffectsState, 0);
  objc_storeStrong((id *)&self->_loggingTapGestureRecognizer, 0);
  objc_destroyWeak((id *)&self->_dragInteractionDelegate);
  objc_storeStrong((id *)&self->___CurrentTestName, 0);
  objc_storeStrong((id *)&self->_fullscreenEffectManager, 0);
  objc_storeStrong((id *)&self->_impactEffectManager, 0);
  objc_storeStrong((id *)&self->_poppedBalloonGUIDHiddenUntilNextChatItemUpdate, 0);
  objc_storeStrong((id *)&self->_hiddenBalloonViews, 0);
  objc_storeStrong((id *)&self->_hiddenAssociatedItemsForMessageEditing, 0);
  objc_storeStrong((id *)&self->_hiddenAssociatedItems, 0);
  objc_storeStrong((id *)&self->_hiddenItems, 0);
  objc_storeStrong((id *)&self->_updateAnimationGroup, 0);
  objc_storeStrong((id *)&self->_gradientReferenceView, 0);
  objc_destroyWeak((id *)&self->_delegate);
  objc_storeStrong((id *)&self->_associatedChatItems, 0);
  objc_storeStrong((id *)&self->_collectionView, 0);
  objc_storeStrong((id *)&self->_conversation, 0);
  objc_storeStrong((id *)&self->_generatedSummary, 0);
  objc_storeStrong((id *)&self->_generativeContextHistory, 0);
  objc_storeStrong((id *)&self->_inputContextHistory, 0);
  objc_storeStrong((id *)&self->_messageEditingContext, 0);
  objc_storeStrong((id *)&self->_chatItems, 0);
  objc_storeStrong((id *)&self->_itemIndexPathToHighlight, 0);
}

- (id)collectionView:(id)a3 contextMenuConfigurationForItemAtIndexPath:(id)a4 point:(CGPoint)a5
{
  double y;
  double x;
  id v9;
  id v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, void *);
  void *v20;
  id v21;
  uint64_t *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;

  y = a5.y;
  x = a5.x;
  v9 = a3;
  v10 = a4;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_opt_respondsToSelector();

  if ((v12 & 1) != 0)
  {
    v25 = 0;
    v26 = &v25;
    v27 = 0x3032000000;
    v28 = __Block_byref_object_copy__39;
    v29 = __Block_byref_object_dispose__39;
    v30 = 0;
    objc_msgSend(v9, "interactions");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = MEMORY[0x1E0C809B0];
    v18 = 3221225472;
    v19 = __115__CKTranscriptCollectionViewController_ClickyOrb__collectionView_contextMenuConfigurationForItemAtIndexPath_point___block_invoke;
    v20 = &unk_1E27553D0;
    v23 = x;
    v24 = y;
    v21 = v9;
    v22 = &v25;
    objc_msgSend(v13, "enumerateObjectsUsingBlock:", &v17);

    -[CKTranscriptCollectionViewController delegate](self, "delegate", v17, v18, v19, v20);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "transcriptCollectionViewController:contextMenuConfigurationForItemAtIndexPath:point:interaction:", self, v10, v26[5], x, y);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    _Block_object_dispose(&v25, 8);
  }
  else
  {
    v15 = 0;
  }

  return v15;
}

void __115__CKTranscriptCollectionViewController_ClickyOrb__collectionView_contextMenuConfigurationForItemAtIndexPath_point___block_invoke(uint64_t a1, void *a2)
{
  char isKindOfClass;
  void *v5;
  id v6;
  double v7;
  double v8;
  id v10;

  v10 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v5 = v10;
  if ((isKindOfClass & 1) != 0)
  {
    v6 = v10;
    objc_msgSend(v6, "locationInView:", *(_QWORD *)(a1 + 32));
    if (v8 == *(double *)(a1 + 48) && v7 == *(double *)(a1 + 56))
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);

    v5 = v10;
  }

}

- (id)collectionView:(id)a3 previewForHighlightingContextMenuWithConfiguration:(id)a4
{
  id v5;
  void *v6;
  int v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;

  v5 = a4;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isExpressiveTextEnabled");

  if (v7)
    -[CKTranscriptCollectionViewController prepareTextEffectsForModalPresentation](self, "prepareTextEffectsForModalPresentation");
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_respondsToSelector();

  if ((v9 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "transcriptCollectionViewController:previewForHighlightingContextMenuWithConfiguration:", self, v5);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

- (id)_collectionView:(id)a3 accessoriesForContextMenuWithConfiguration:(id)a4 layoutAnchor:(id *)a5
{
  id v7;
  void *v8;
  char v9;
  void *v10;
  __int128 v11;
  void *v12;
  _OWORD v14[2];
  int64_t var4;

  v7 = a4;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_respondsToSelector();

  if ((v9 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = *(_OWORD *)&a5->var2;
    v14[0] = *(_OWORD *)&a5->var0;
    v14[1] = v11;
    var4 = a5->var4;
    objc_msgSend(v10, "transcriptCollectionViewController:accessoriesForContextMenuWithConfiguration:layoutAnchor:", self, v7, v14);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

- (id)collectionView:(id)a3 previewForDismissingContextMenuWithConfiguration:(id)a4
{
  id v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;

  v5 = a4;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_opt_respondsToSelector();

  if ((v7 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "transcriptCollectionViewController:previewForDismissingContextMenuWithConfiguration:", self, v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (id)_collectionView:(id)a3 styleForContextMenuWithConfiguration:(id)a4
{
  id v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;

  v5 = a4;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_opt_respondsToSelector();

  if ((v7 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "transcriptCollectionViewController:styleForContextMenuWithConfiguration:", self, v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (void)collectionView:(id)a3 willEndContextMenuInteractionWithConfiguration:(id)a4 animator:(id)a5
{
  id v7;
  id v8;
  void *v9;
  int v10;
  void *v11;
  char v12;
  void *v13;
  _QWORD v14[5];

  v7 = a4;
  v8 = a5;
  objc_msgSend(MEMORY[0x1E0D39840], "sharedFeatureFlags");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isExpressiveTextEnabled");

  if (v10)
  {
    if (v8)
    {
      v14[0] = MEMORY[0x1E0C809B0];
      v14[1] = 3221225472;
      v14[2] = __122__CKTranscriptCollectionViewController_ClickyOrb__collectionView_willEndContextMenuInteractionWithConfiguration_animator___block_invoke;
      v14[3] = &unk_1E274A208;
      v14[4] = self;
      objc_msgSend(v8, "addCompletion:", v14);
    }
    else
    {
      -[CKTranscriptCollectionViewController setTextEffectCoordinatorPaused:reason:](self, "setTextEffectCoordinatorPaused:reason:", 0, CFSTR("will end context menu interaction (without animation)"));
    }
  }
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_opt_respondsToSelector();

  if ((v12 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "transcriptCollectionViewController:willEndContextMenuInteractionWithConfiguration:animator:", self, v7, v8);

  }
}

uint64_t __122__CKTranscriptCollectionViewController_ClickyOrb__collectionView_willEndContextMenuInteractionWithConfiguration_animator___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setTextEffectCoordinatorPaused:reason:", 0, CFSTR("will end context menu interaction (animated)"));
}

- (void)collectionView:(id)a3 willDisplayContextMenuWithConfiguration:(id)a4 animator:(id)a5
{
  id v7;
  id v8;
  void *v9;
  char isKindOfClass;
  void *v11;
  int v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  void *v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  objc_msgSend(v7, "identifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0)
  {
    +[CKUIBehavior sharedBehaviors](CKUIBehavior, "sharedBehaviors");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "enableBalloonTextSelection");

    if (v12)
    {
      -[CKTranscriptCollectionViewController delegate](self, "delegate");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_opt_respondsToSelector();

      if ((v14 & 1) != 0)
      {
        -[CKTranscriptCollectionViewController delegate](self, "delegate");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "transcriptCollectionViewController:chatItemForContextMenuWithConfiguration:", self, v7);
        v16 = (void *)objc_claimAutoreleasedReturnValue();

        if (v16)
        {
          objc_msgSend(v16, "IMChatItem");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "guid");
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          if (v18)
          {
            -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = objc_msgSend(v19, "isMessageGuidSelected:", v18);

            if ((v20 & 1) == 0)
            {
              -[CKTranscriptCollectionViewController selectionManager](self, "selectionManager");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              v27 = v18;
              +[CKBalloonSelectionState balloonSelectionState:](CKBalloonSelectionState, "balloonSelectionState:", 0);
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              v28[0] = v22;
              objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "setSelectedGuids:", v23);

            }
          }
        }
        else
        {
          v18 = 0;
        }

      }
    }
  }
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_opt_respondsToSelector();

  if ((v25 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "transcriptCollectionViewController:willDisplayContextMenuWithConfiguration:animator:", self, v7, v8);

  }
}

- (void)collectionView:(id)a3 willPerformPreviewActionForMenuWithConfiguration:(id)a4 animator:(id)a5
{
  id v7;
  void *v8;
  char v9;
  void *v10;
  id v11;

  v11 = a4;
  v7 = a5;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_respondsToSelector();

  if ((v9 & 1) != 0)
  {
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "transcriptCollectionViewController:willPerformPreviewActionForMenuWithConfiguration:animator:", self, v11, v7);

  }
}

- (void)presentUserInterventionScreenForIndexPath:(id)a3 shouldTargetAssociatedItems:(BOOL)a4
{
  _BOOL8 v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a4;
  v6 = a3;
  +[CKCommSafetyReceiveContext contextWithIndexPath:shouldTargetAssociatedMessages:](CKCommSafetyReceiveContext, "contextWithIndexPath:shouldTargetAssociatedMessages:", v6, v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  CKCommSafetyReceiveContextDictionary(v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  v14 = &v13;
  v15 = 0x2050000000;
  v9 = (void *)getUSUIInterventionViewControllerClass_softClass_0;
  v16 = getUSUIInterventionViewControllerClass_softClass_0;
  if (!getUSUIInterventionViewControllerClass_softClass_0)
  {
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __getUSUIInterventionViewControllerClass_block_invoke_0;
    v12[3] = &unk_1E274A178;
    v12[4] = &v13;
    __getUSUIInterventionViewControllerClass_block_invoke_0((uint64_t)v12);
    v9 = (void *)v14[3];
  }
  v10 = objc_retainAutorelease(v9);
  _Block_object_dispose(&v13, 8);
  objc_msgSend(v10, "viewControllerWithWorkflow:contextDictionary:options:", 0, v8, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setInterventionDelegate:", self);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v11, 1, 0);

}

- (void)presentMoreHelpMenu
{
  void *v3;
  void *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "logPrivatizedUIInteractionEvent:", 2);

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "recipients");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "recipients");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "count");

  -[CKTranscriptCollectionViewController chat](self, "chat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isBusinessChat");

  v12 = 33;
  if (v6 > 1)
    v12 = 34;
  if (v9 > 2)
    v12 |= 4uLL;
  if ((v11 & 1) != 0)
    v13 = 32;
  else
    v13 = v12;
  v18 = 0;
  v19 = &v18;
  v20 = 0x2050000000;
  v14 = (void *)getSCUIMoreHelpMenuClass_softClass;
  v21 = getSCUIMoreHelpMenuClass_softClass;
  if (!getSCUIMoreHelpMenuClass_softClass)
  {
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __getSCUIMoreHelpMenuClass_block_invoke;
    v17[3] = &unk_1E274A178;
    v17[4] = &v18;
    __getSCUIMoreHelpMenuClass_block_invoke((uint64_t)v17);
    v14 = (void *)v19[3];
  }
  v15 = objc_retainAutorelease(v14);
  _Block_object_dispose(&v18, 8);
  objc_msgSend(v15, "menuWithOptions:", v13);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setMenuDelegate:", self);
  -[CKTranscriptCollectionViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", v16, 1, 0);

}

- (BOOL)canInteractWithObscuredItem
{
  return 1;
}

- (void)didConfirmForInterventionViewController:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  id v13;

  v4 = a3;
  objc_msgSend(v4, "contextDictionary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[CKCommSafetyReceiveContext contextKey](CKCommSafetyReceiveContext, "contextKey");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", v6);
  v13 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v7 = v13;
  else
    v7 = 0;
  v8 = v7;
  -[CKTranscriptCollectionViewController _dismissInterventionController:](self, "_dismissInterventionController:", v4);

  objc_msgSend(v8, "indexPath");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    v10 = objc_msgSend(v8, "shouldTargetAssociatedMessages");
    -[CKTranscriptCollectionViewController delegate](self, "delegate");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "indexPath");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
      objc_msgSend(v11, "transcriptCollectionViewController:viewedCommSafetyAssociatedItemsWithIndexPath:", self, v12);
    else
      objc_msgSend(v11, "transcriptCollectionViewController:viewedCommSafetyItemWithIndexPath:", self, v12);

  }
}

- (void)evidenceToReportWithContext:(id)a3 completionHandler:(id)a4
{
  id v6;
  void (**v7)(id, void *, _QWORD);
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  objc_class *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a3;
  v7 = (void (**)(id, void *, _QWORD))a4;
  +[CKCommSafetyReceiveContext contextKey](CKCommSafetyReceiveContext, "contextKey");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v10 = v9;
  else
    v10 = 0;
  v11 = v10;
  -[CKTranscriptCollectionViewController delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "indexPath");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "transcriptCollectionViewController:mediaObjectsForCommSafetyReportWithIndexPath:", self, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v14, "count"))
  {
    objc_msgSend(MEMORY[0x1E0D35868], "me");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "bestIMHandle");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v25 = 0;
    v26 = &v25;
    v27 = 0x2050000000;
    v17 = (void *)getSCUIReportEvidenceClass_softClass;
    v28 = getSCUIReportEvidenceClass_softClass;
    if (!getSCUIReportEvidenceClass_softClass)
    {
      v24[0] = MEMORY[0x1E0C809B0];
      v24[1] = 3221225472;
      v24[2] = __getSCUIReportEvidenceClass_block_invoke;
      v24[3] = &unk_1E274A178;
      v24[4] = &v25;
      __getSCUIReportEvidenceClass_block_invoke((uint64_t)v24);
      v17 = (void *)v26[3];
    }
    v18 = objc_retainAutorelease(v17);
    _Block_object_dispose(&v25, 8);
    v19 = [v18 alloc];
    -[CKTranscriptCollectionViewController conversation](self, "conversation");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "chat");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = (void *)objc_msgSend(v19, "initWithVictimHandle:sensitiveContentMedia:chat:", v16, v14, v21);

    v7[2](v7, v22, 0);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0CB2FE0], 2, 0);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (**)(id, void *, void *))v7)[2](v7, 0, v23);

  }
}

- (void)_dismissInterventionController:(id)a3
{
  objc_msgSend(a3, "dismissModalViewControllerWithTransition:", 9);
}

- (void)didAskForMoreHelp:(id)a3
{
  void *v4;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "logPrivatizedUIInteractionEvent:", 4);

  -[CKTranscriptCollectionViewController _showMoreHelp](self, "_showMoreHelp");
}

- (void)didBlockContact:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "logPrivatizedUIInteractionEvent:", 6);

  -[CKTranscriptCollectionViewController conversation](self, "conversation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "recipients");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "firstObject");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "defaultIMHandle");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _blockHandle:](self, "_blockHandle:", v7);

}

- (void)didBlockContacts:(id)a3
{
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "logPrivatizedUIInteractionEvent:", 6);

  -[CKTranscriptCollectionViewController view](self, "view");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _showBlockContactSelectionAlertFromView:](self, "_showBlockContactSelectionAlertFromView:", v5);

}

- (void)didLeaveConversation:(id)a3
{
  void *v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0D397D8], "sharedInstance", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "logPrivatizedUIInteractionEvent:", 5);

  -[CKTranscriptCollectionViewController view](self, "view");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[CKTranscriptCollectionViewController _showLeaveConversationFromView:](self, "_showLeaveConversationFromView:", v5);

}

- (void)initiateSmartEmojiResponsesUpdateWithChatItems:(id)a3
{
  unint64_t v4;
  CKTranscriptCollectionViewController *v5;

  sub_18E53AAA0();
  v4 = sub_18E768AE0();
  v5 = self;
  sub_18E539E6C(v4);

  swift_bridgeObjectRelease();
}

- (void)prewarmTapbackPickerImages
{
  uint64_t v2;
  CKTranscriptCollectionViewController *v3;
  CKTranscriptCollectionViewController *v4;
  CKTranscriptCollectionViewController *v5;

  v2 = qword_1EE0FAFB8;
  v3 = self;
  if (v2 != -1)
  {
    v4 = v3;
    swift_once();
    v3 = v4;
  }
  if (qword_1EE0FAFC0 != -1)
  {
    v5 = v3;
    swift_once();
    v3 = v5;
  }

}

- (void)updateScrollIntentWithTrigger:(id)a3
{
  CKTranscriptCollectionViewController *v5;

  swift_unknownObjectRetain();
  v5 = self;
  sub_18E54A1FC(a3);
  swift_unknownObjectRelease();

}

- (void)configureTranscriptCell:(id)a3 hidden:(BOOL)a4
{
  id v7;
  CKTranscriptCollectionViewController *v8;

  v7 = a3;
  v8 = self;
  sub_18E6680B4(a3, a4);

}

- (void)setChatItemHidden:(BOOL)a3 forChatItemGUID:(id)a4
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  CKTranscriptCollectionViewController *v9;

  v6 = sub_18E768984();
  v8 = v7;
  v9 = self;
  sub_18E6679E4(a3, v6, v8);

  swift_bridgeObjectRelease();
}

- (void)deleteChatItems:(uint64_t)a3 sender:.cold.1(NSObject *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 136315138;
  v4 = "-[CKTranscriptCollectionViewController deleteChatItems:sender:]";
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a1, a3, "%s called with empty chatItems", (uint8_t *)&v3);
  OUTLINED_FUNCTION_2();
}

void __63__CKTranscriptCollectionViewController_deleteChatItems_sender___block_invoke_3_cold_1(void *a1, NSObject *a2)
{
  uint64_t v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 136315394;
  v5 = "-[CKTranscriptCollectionViewController deleteChatItems:sender:]_block_invoke";
  v6 = 2048;
  v7 = objc_msgSend(a1, "count");
  OUTLINED_FUNCTION_8(&dword_18DFCD000, a2, v3, "%s requesting deletion of %lu guids", (uint8_t *)&v4);
  OUTLINED_FUNCTION_1_0();
}

- (void)updateTranscriptScrollIntentForUserScrollToContentOffset:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_7(&dword_18DFCD000, v0, v1, "User unexpectedly scrolled the transcript during an active throw animation. This should not be possible.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)updateTranscriptScrollIntentForUserScrollToContentOffset:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_7(&dword_18DFCD000, v0, v1, "User unexpectedly scrolled the main transcript while the inline reply overlay was presented.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)scrollViewDidEndDragging:willDecelerate:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Dragging has ended, but scroll intent is still dragging, updating scroll intent based on current contentOffset, instead of targetContentOffset.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)collectionView:cellForItemAtIndexPath:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "%@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)quickActionButtonWasTapped:(uint64_t)a3 .cold.1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = 138412290;
  v5 = v3;
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a2, a3, "quickSaveButtonWasTapped: Invalid indexPath %@", (uint8_t *)&v4);
  OUTLINED_FUNCTION_2();
}

- (void)quickActionButtonWasTapped:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "quickSaveButtonWasTapped: Chat item can't be quicked saved: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)_showAutoDonationAlert:forAppName:bundleID:.cold.1()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  v3 = 2112;
  v4 = v0;
  OUTLINED_FUNCTION_8(&dword_18DFCD000, v1, (uint64_t)v1, "Not showing SWY alert. AppName: %@ BundleID: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)_quickActionSaveButtonWasTapped:atIndexPath:chatItem:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "quickSaveButtonWasTapped: Didn't find media objects in organic chat item", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)_saveMediaObjects:withMomentShareURL:sender:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "quickSaveButtonWasTapped: Fail to shave momentShareURL.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)_saveMediaObjects:withMomentShareURL:sender:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Sender cannot handle this media object(s)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)tuConversationBalloonJoinButtonTapped:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_7(&dword_18DFCD000, v0, v1, "Received invalid type of balloonView", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)didTapUnavailableMomentShareBalloonView:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "No moment share URL for chat item: %@", v2);
  OUTLINED_FUNCTION_2();
}

void __80__CKTranscriptCollectionViewController_didTapUnavailableMomentShareBalloonView___block_invoke_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  OUTLINED_FUNCTION_8(&dword_18DFCD000, a3, (uint64_t)a3, "Failed to open moment share URL: %@, error: %@", (uint8_t *)&v4);
  OUTLINED_FUNCTION_2();
}

- (void)effectManager:didStartEffect:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Invalid balloon size, skipping creating graphics context.!", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)configureCell:(uint64_t)a3 forCKChatItem:atIndexPath:animated:animationDuration:animationCurve:.cold.1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  void *v5;
  objc_class *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v6 = (objc_class *)objc_opt_class();
    NSStringFromClass(v6);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  v7 = 138412290;
  v8 = v5;
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a2, a3, "Configuring a CKTranscriptStatusCell with an invalid chat item of type: %@", (uint8_t *)&v7);
  if (a1)

  OUTLINED_FUNCTION_13();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.1()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint8_t *v5;

  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_11_0(v2, v3, 5.7779e-34);
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v4, (uint64_t)v4, "  chatItems (count): %@", v5);

  OUTLINED_FUNCTION_1_1();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "  regenerate: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.3()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "  reload: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "  removed: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.5()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "  inserted: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.6()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint8_t *v5;

  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_11_0(v2, v3, 5.7779e-34);
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v4, (uint64_t)v4, "  imChatItems (count): %@", v5);

  OUTLINED_FUNCTION_1_1();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.7()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint8_t *v5;

  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_11_0(v2, v3, 5.7779e-34);
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v4, (uint64_t)v4, "  collectionView: %@ items", v5);

  OUTLINED_FUNCTION_1_1();
}

- (void)updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.8()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "  Exception: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)updateTranscriptChatItems:(uint64_t)a3 inserted:removed:reload:regenerate:animated:completion:.cold.9(char a1, NSObject *a2, uint64_t a3)
{
  const __CFString *v3;
  int v4;
  const __CFString *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = CFSTR("NO");
  if ((a1 & 1) != 0)
    v3 = CFSTR("YES");
  v4 = 138412290;
  v5 = v3;
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a2, a3, "Failed trying to update (animated: %@) transcript chatItems", (uint8_t *)&v4);
  OUTLINED_FUNCTION_2();
}

- (void)_updateTranscriptChatItems:inserted:removed:reload:regenerate:animated:completion:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "\t>> Detected a discrepancy between the imChatItems in the update, and the ones associated with the model", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void __72__CKTranscriptCollectionViewController__itemGUIDsForItems_inIMChatItem___block_invoke_cold_1(id *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = objc_msgSend(*a1, "count");
  v7 = 134218240;
  v8 = a2;
  v9 = 2048;
  v10 = v5;
  OUTLINED_FUNCTION_8(&dword_18DFCD000, a3, v6, "Called _itemGUIDsForItems with invalid index: %tu chatItems.count: %tu", (uint8_t *)&v7);
  OUTLINED_FUNCTION_1_0();
}

- (void)_updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.1()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  NSObject *v7;

  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_8_0(v2, v3, v4, 5.778e-34);
  OUTLINED_FUNCTION_8(&dword_18DFCD000, v7, v5, "newChatItems (count): %@, items:\n %@", v6);

  OUTLINED_FUNCTION_1_1();
}

- (void)_updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "inserted: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)_updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.3()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "removed: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)_updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  NSObject *v7;

  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_8_0(v2, v3, v4, 5.778e-34);
  OUTLINED_FUNCTION_8(&dword_18DFCD000, v7, v5, "oldChatItems (count): %@, items:\n %@", v6);

  OUTLINED_FUNCTION_1_1();
}

- (void)_updateCollectionViewForChatItems:(void *)a1 oldChatItems:(uint64_t)a2 inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.5(void *a1, uint64_t a2)
{
  NSObject *v3;
  uint8_t *v4;

  OUTLINED_FUNCTION_11_0((uint64_t)a1, a2, 5.7779e-34);
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v3, (uint64_t)v3, "collectionView: %@ items", v4);

  OUTLINED_FUNCTION_1_1();
}

- (void)_updateCollectionViewForChatItems:(uint64_t)a3 oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.6(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint8_t *v5;
  NSObject *v6;

  OUTLINED_FUNCTION_8_0((uint64_t)a1, a2, a3, 5.778e-34);
  OUTLINED_FUNCTION_8(&dword_18DFCD000, v6, v4, "  chat: %@, exception: %@", v5);

  OUTLINED_FUNCTION_1_1();
}

- (void)_updateCollectionViewForChatItems:oldChatItems:inserted:removed:associatedInserted:associatedRemoved:animationDuration:animationCurve:completion:.cold.7()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Failed trying to perform batch updates on collectionView", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)_sanitizeInsertedIndices:(void *)a1 inChatItems:(NSObject *)a2 withIMChatItems:.cold.1(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(a1, "count"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a2, v4, "\timChatItems (count): %@", v5);

  OUTLINED_FUNCTION_1_0();
}

- (void)_sanitizeInsertedIndices:(void *)a1 inChatItems:(NSObject *)a2 withIMChatItems:.cold.2(void *a1, NSObject *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint8_t v7[24];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(a1, "collectionView");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "numberWithInteger:", objc_msgSend(v4, "numberOfItemsInSection:", 0));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a2, v6, "\tcollectionView: %@ items", v7);

  OUTLINED_FUNCTION_13();
}

- (void)setChatItems:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_7(&dword_18DFCD000, v0, v1, "Attempted to recursively call setChatItems while setChatItems is already in progress. Recursive calls to setChatItems are not permitted.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)touchUpInsideNotifyAnywayButton:(void *)a1 .cold.1(void *a1, uint64_t a2)
{
  NSObject *v3;
  uint8_t *v4;

  OUTLINED_FUNCTION_11_0((uint64_t)a1, a2, 5.7779e-34);
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v3, (uint64_t)v3, "Could not find chat item to notify in chat %@", v4);

  OUTLINED_FUNCTION_1_1();
}

- (void)touchUpInsideCellStampButton:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Could not find index path for stamp button", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)touchUpInsideCellStampButton:.cold.2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Chat item found is not a CKStampButtonChatItem", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)touchUpInsideCellStampButton:.cold.3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "touchUpInsideCellStampButton inside an extension, ignoring touch", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)_handleEditHistoryButtonTappedForIndexPath:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, v0, v1, "Chat item is not a message chat item: %@", v2);
  OUTLINED_FUNCTION_2();
}

- (void)_handleFailedCancelStatusButtonTappedForIndexPath:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Scheduled Message Marked as Sent should not show cancel status", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)previewDidChange:(void *)a1 .cold.1(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "guid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_2(&dword_18DFCD000, a2, v4, "Preview not found for transferGUID: %@. Skipping reload.", v5);

  OUTLINED_FUNCTION_1_0();
}

- (void)chatItemsDidChange:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Going to try to recover by regenerating chatItems from oldItems", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)chatItemsDidChange:(NSObject *)a3 .cold.2(void *a1, void *a2, NSObject *a3)
{
  const __CFString *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  const __CFString *v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(a1, "isInline"))
    v6 = CFSTR("YES");
  else
    v6 = CFSTR("NO");
  v7 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(a1, "chatItems");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "numberWithUnsignedInteger:", objc_msgSend(v8, "count"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(a2, "count"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "chat");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "chat");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "guid");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 138413314;
  v15 = v6;
  v16 = 2112;
  v17 = v9;
  v18 = 2112;
  v19 = v10;
  v20 = 2112;
  v21 = v11;
  v22 = 2112;
  v23 = v13;
  _os_log_error_impl(&dword_18DFCD000, a3, OS_LOG_TYPE_ERROR, "(Inline: %@) Invalid self.chatItems.count: %@, compared to oldItems.count: %@ for chat: %@, guid: %@", (uint8_t *)&v14, 0x34u);

}

- (void)verticallyScrollTranscriptByAmount:animated:duration:completion:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "Collection view scrolling is disabled", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

- (void)selectRangeWithIndexPath:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0(&dword_18DFCD000, v0, v1, "expecting at least one selected item!", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

@end
